/*!
 * Copyright 2021 Esri
 * Licensed under the Apache License, Version 2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

/*!
 Stencil Mock Doc v2.14.1 | MIT Licensed | https://stenciljs.com
 */
const CONTENT_REF_ID = 'r';
const ORG_LOCATION_ID = 'o';
const SLOT_NODE_ID = 's';
const TEXT_NODE_ID = 't';
const XLINK_NS = 'http://www.w3.org/1999/xlink';

const attrHandler = {
  get(obj, prop) {
    if (prop in obj) {
      return obj[prop];
    }
    if (typeof prop !== 'symbol' && !isNaN(prop)) {
      return obj.__items[prop];
    }
    return undefined;
  },
};
const createAttributeProxy = (caseInsensitive) => new Proxy(new MockAttributeMap(caseInsensitive), attrHandler);
class MockAttributeMap {
  constructor(caseInsensitive = false) {
    this.caseInsensitive = caseInsensitive;
    this.__items = [];
  }
  get length() {
    return this.__items.length;
  }
  item(index) {
    return this.__items[index] || null;
  }
  setNamedItem(attr) {
    attr.namespaceURI = null;
    this.setNamedItemNS(attr);
  }
  setNamedItemNS(attr) {
    if (attr != null && attr.value != null) {
      attr.value = String(attr.value);
    }
    const existingAttr = this.__items.find((a) => a.name === attr.name && a.namespaceURI === attr.namespaceURI);
    if (existingAttr != null) {
      existingAttr.value = attr.value;
    }
    else {
      this.__items.push(attr);
    }
  }
  getNamedItem(attrName) {
    if (this.caseInsensitive) {
      attrName = attrName.toLowerCase();
    }
    return this.getNamedItemNS(null, attrName);
  }
  getNamedItemNS(namespaceURI, attrName) {
    namespaceURI = getNamespaceURI(namespaceURI);
    return (this.__items.find((attr) => attr.name === attrName && getNamespaceURI(attr.namespaceURI) === namespaceURI) || null);
  }
  removeNamedItem(attr) {
    this.removeNamedItemNS(attr);
  }
  removeNamedItemNS(attr) {
    for (let i = 0, ii = this.__items.length; i < ii; i++) {
      if (this.__items[i].name === attr.name && this.__items[i].namespaceURI === attr.namespaceURI) {
        this.__items.splice(i, 1);
        break;
      }
    }
  }
  [Symbol.iterator]() {
    let i = 0;
    return {
      next: () => ({
        done: i === this.length,
        value: this.item(i++),
      }),
    };
  }
  get [Symbol.toStringTag]() {
    return 'MockAttributeMap';
  }
}
function getNamespaceURI(namespaceURI) {
  return namespaceURI === XLINK_NS ? null : namespaceURI;
}
function cloneAttributes(srcAttrs, sortByName = false) {
  const dstAttrs = new MockAttributeMap(srcAttrs.caseInsensitive);
  if (srcAttrs != null) {
    const attrLen = srcAttrs.length;
    if (sortByName && attrLen > 1) {
      const sortedAttrs = [];
      for (let i = 0; i < attrLen; i++) {
        const srcAttr = srcAttrs.item(i);
        const dstAttr = new MockAttr(srcAttr.name, srcAttr.value, srcAttr.namespaceURI);
        sortedAttrs.push(dstAttr);
      }
      sortedAttrs.sort(sortAttributes).forEach((attr) => {
        dstAttrs.setNamedItemNS(attr);
      });
    }
    else {
      for (let i = 0; i < attrLen; i++) {
        const srcAttr = srcAttrs.item(i);
        const dstAttr = new MockAttr(srcAttr.name, srcAttr.value, srcAttr.namespaceURI);
        dstAttrs.setNamedItemNS(dstAttr);
      }
    }
  }
  return dstAttrs;
}
function sortAttributes(a, b) {
  if (a.name < b.name)
    return -1;
  if (a.name > b.name)
    return 1;
  return 0;
}
class MockAttr {
  constructor(attrName, attrValue, namespaceURI = null) {
    this._name = attrName;
    this._value = String(attrValue);
    this._namespaceURI = namespaceURI;
  }
  get name() {
    return this._name;
  }
  set name(value) {
    this._name = value;
  }
  get value() {
    return this._value;
  }
  set value(value) {
    this._value = String(value);
  }
  get nodeName() {
    return this._name;
  }
  set nodeName(value) {
    this._name = value;
  }
  get nodeValue() {
    return this._value;
  }
  set nodeValue(value) {
    this._value = String(value);
  }
  get namespaceURI() {
    return this._namespaceURI;
  }
  set namespaceURI(namespaceURI) {
    this._namespaceURI = namespaceURI;
  }
}

class MockCustomElementRegistry {
  constructor(win) {
    this.win = win;
  }
  define(tagName, cstr, options) {
    if (tagName.toLowerCase() !== tagName) {
      throw new Error(`Failed to execute 'define' on 'CustomElementRegistry': "${tagName}" is not a valid custom element name`);
    }
    if (this.__registry == null) {
      this.__registry = new Map();
    }
    this.__registry.set(tagName, { cstr, options });
    if (this.__whenDefined != null) {
      const whenDefinedResolveFns = this.__whenDefined.get(tagName);
      if (whenDefinedResolveFns != null) {
        whenDefinedResolveFns.forEach((whenDefinedResolveFn) => {
          whenDefinedResolveFn();
        });
        whenDefinedResolveFns.length = 0;
        this.__whenDefined.delete(tagName);
      }
    }
    const doc = this.win.document;
    if (doc != null) {
      const hosts = doc.querySelectorAll(tagName);
      hosts.forEach((host) => {
        if (upgradedElements.has(host) === false) {
          tempDisableCallbacks.add(doc);
          const upgradedCmp = createCustomElement(this, doc, tagName);
          for (let i = 0; i < host.childNodes.length; i++) {
            const childNode = host.childNodes[i];
            childNode.remove();
            upgradedCmp.appendChild(childNode);
          }
          tempDisableCallbacks.delete(doc);
          if (proxyElements.has(host)) {
            proxyElements.set(host, upgradedCmp);
          }
        }
        fireConnectedCallback(host);
      });
    }
  }
  get(tagName) {
    if (this.__registry != null) {
      const def = this.__registry.get(tagName.toLowerCase());
      if (def != null) {
        return def.cstr;
      }
    }
    return undefined;
  }
  upgrade(_rootNode) {
    //
  }
  clear() {
    if (this.__registry != null) {
      this.__registry.clear();
    }
    if (this.__whenDefined != null) {
      this.__whenDefined.clear();
    }
  }
  whenDefined(tagName) {
    tagName = tagName.toLowerCase();
    if (this.__registry != null && this.__registry.has(tagName) === true) {
      return Promise.resolve(this.__registry.get(tagName).cstr);
    }
    return new Promise((resolve) => {
      if (this.__whenDefined == null) {
        this.__whenDefined = new Map();
      }
      let whenDefinedResolveFns = this.__whenDefined.get(tagName);
      if (whenDefinedResolveFns == null) {
        whenDefinedResolveFns = [];
        this.__whenDefined.set(tagName, whenDefinedResolveFns);
      }
      whenDefinedResolveFns.push(resolve);
    });
  }
}
function createCustomElement(customElements, ownerDocument, tagName) {
  const Cstr = customElements.get(tagName);
  if (Cstr != null) {
    const cmp = new Cstr(ownerDocument);
    cmp.nodeName = tagName.toUpperCase();
    upgradedElements.add(cmp);
    return cmp;
  }
  const host = new Proxy({}, {
    get(obj, prop) {
      const elm = proxyElements.get(host);
      if (elm != null) {
        return elm[prop];
      }
      return obj[prop];
    },
    set(obj, prop, val) {
      const elm = proxyElements.get(host);
      if (elm != null) {
        elm[prop] = val;
      }
      else {
        obj[prop] = val;
      }
      return true;
    },
    has(obj, prop) {
      const elm = proxyElements.get(host);
      if (prop in elm) {
        return true;
      }
      if (prop in obj) {
        return true;
      }
      return false;
    },
  });
  const elm = new MockHTMLElement(ownerDocument, tagName);
  proxyElements.set(host, elm);
  return host;
}
const proxyElements = new WeakMap();
const upgradedElements = new WeakSet();
function connectNode(ownerDocument, node) {
  node.ownerDocument = ownerDocument;
  if (node.nodeType === 1 /* ELEMENT_NODE */) {
    if (ownerDocument != null && node.nodeName.includes('-')) {
      const win = ownerDocument.defaultView;
      if (win != null && typeof node.connectedCallback === 'function' && node.isConnected) {
        fireConnectedCallback(node);
      }
      const shadowRoot = node.shadowRoot;
      if (shadowRoot != null) {
        shadowRoot.childNodes.forEach((childNode) => {
          connectNode(ownerDocument, childNode);
        });
      }
    }
    node.childNodes.forEach((childNode) => {
      connectNode(ownerDocument, childNode);
    });
  }
  else {
    node.childNodes.forEach((childNode) => {
      childNode.ownerDocument = ownerDocument;
    });
  }
}
function fireConnectedCallback(node) {
  if (typeof node.connectedCallback === 'function') {
    if (tempDisableCallbacks.has(node.ownerDocument) === false) {
      try {
        node.connectedCallback();
      }
      catch (e) {
        console.error(e);
      }
    }
  }
}
function disconnectNode(node) {
  if (node.nodeType === 1 /* ELEMENT_NODE */) {
    if (node.nodeName.includes('-') === true && typeof node.disconnectedCallback === 'function') {
      if (tempDisableCallbacks.has(node.ownerDocument) === false) {
        try {
          node.disconnectedCallback();
        }
        catch (e) {
          console.error(e);
        }
      }
    }
    node.childNodes.forEach(disconnectNode);
  }
}
function attributeChanged(node, attrName, oldValue, newValue) {
  attrName = attrName.toLowerCase();
  const observedAttributes = node.constructor.observedAttributes;
  if (Array.isArray(observedAttributes) === true &&
    observedAttributes.some((obs) => obs.toLowerCase() === attrName) === true) {
    try {
      node.attributeChangedCallback(attrName, oldValue, newValue);
    }
    catch (e) {
      console.error(e);
    }
  }
}
function checkAttributeChanged(node) {
  return node.nodeName.includes('-') === true && typeof node.attributeChangedCallback === 'function';
}
const tempDisableCallbacks = new Set();

function dataset(elm) {
  const ds = {};
  const attributes = elm.attributes;
  const attrLen = attributes.length;
  for (let i = 0; i < attrLen; i++) {
    const attr = attributes.item(i);
    const nodeName = attr.nodeName;
    if (nodeName.startsWith('data-')) {
      ds[dashToPascalCase(nodeName)] = attr.nodeValue;
    }
  }
  return new Proxy(ds, {
    get(_obj, camelCaseProp) {
      return ds[camelCaseProp];
    },
    set(_obj, camelCaseProp, value) {
      const dataAttr = toDataAttribute(camelCaseProp);
      elm.setAttribute(dataAttr, value);
      return true;
    },
  });
}
function toDataAttribute(str) {
  return ('data-' +
    String(str)
      .replace(/([A-Z0-9])/g, (g) => ' ' + g[0])
      .trim()
      .replace(/ /g, '-')
      .toLowerCase());
}
function dashToPascalCase(str) {
  str = String(str).substr(5);
  return str
    .split('-')
    .map((segment, index) => {
    if (index === 0) {
      return segment.charAt(0).toLowerCase() + segment.slice(1);
    }
    return segment.charAt(0).toUpperCase() + segment.slice(1);
  })
    .join('');
}

// Sizzle 2.3.6
const Sizzle = (function() {
const window = {
  document: {
  createElement() {
    return {};
  },
  nodeType: 9,
  documentElement: {
    nodeType: 1,
    nodeName: 'HTML'
  }
  }
};
const module = { exports: {} };

/*! Sizzle v2.3.6 | (c) JS Foundation and other contributors | js.foundation */
!function(e){var t,n,r,i,o,u,l,a,c,s,d,f,p,h,g,m,y,v,w,b="sizzle"+1*new Date,N=e.document,C=0,x=0,E=ae(),A=ae(),S=ae(),D=ae(),T=function(e,t){return e===t&&(d=!0),0},L={}.hasOwnProperty,q=[],I=q.pop,B=q.push,R=q.push,$=q.slice,k=function(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return -1},H="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",P="(?:\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",z="\\["+M+"*("+P+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+P+"))|)"+M+"*\\]",F=":("+P+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+z+")*)|.*)\\)|)",O=new RegExp(M+"+","g"),j=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),G=new RegExp("^"+M+"*,"+M+"*"),U=new RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),V=new RegExp(M+"|>"),X=new RegExp(F),J=new RegExp("^"+P+"$"),K={ID:new RegExp("^#("+P+")"),CLASS:new RegExp("^\\.("+P+")"),TAG:new RegExp("^("+P+"|[*])"),ATTR:new RegExp("^"+z),PSEUDO:new RegExp("^"+F),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+H+")$","i"),needsContext:new RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},Q=/HTML$/i,W=/^(?:input|select|textarea|button)$/i,Y=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ee=/[+~]/,te=new RegExp("\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\([^\\r\\n\\f])","g"),ne=function(e,t){var n="0x"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},re=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ie=function(e,t){return t?"\0"===e?"\ufffd":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},oe=function(){f();},ue=ve(function(e){return !0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{R.apply(q=$.call(N.childNodes),N.childNodes),q[N.childNodes.length].nodeType;}catch(e){R={apply:q.length?function(e,t){B.apply(e,$.call(t));}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1;}};}function le(e,t,r,i){var o,l,c,s,d,h,y,v=t&&t.ownerDocument,N=t?t.nodeType:9;if(r=r||[],"string"!=typeof e||!e||1!==N&&9!==N&&11!==N)return r;if(!i&&(f(t),t=t||p,g)){if(11!==N&&(d=_.exec(e)))if(o=d[1]){if(9===N){if(!(c=t.getElementById(o)))return r;if(c.id===o)return r.push(c),r}else if(v&&(c=v.getElementById(o))&&w(t,c)&&c.id===o)return r.push(c),r}else {if(d[2])return R.apply(r,t.getElementsByTagName(e)),r;if((o=d[3])&&n.getElementsByClassName&&t.getElementsByClassName)return R.apply(r,t.getElementsByClassName(o)),r}if(n.qsa&&!D[e+" "]&&(!m||!m.test(e))&&(1!==N||"object"!==t.nodeName.toLowerCase())){if(y=e,v=t,1===N&&(V.test(e)||U.test(e))){(v=ee.test(e)&&ge(t.parentNode)||t)===t&&n.scope||((s=t.getAttribute("id"))?s=s.replace(re,ie):t.setAttribute("id",s=b)),l=(h=u(e)).length;while(l--)h[l]=(s?"#"+s:":scope")+" "+ye(h[l]);y=h.join(",");}try{return R.apply(r,v.querySelectorAll(y)),r}catch(t){D(e,!0);}finally{s===b&&t.removeAttribute("id");}}}return a(e.replace(j,"$1"),t,r,i)}function ae(){var e=[];function t(n,i){return e.push(n+" ")>r.cacheLength&&delete t[e.shift()],t[n+" "]=i}return t}function ce(e){return e[b]=!0,e}function se(e){var t=p.createElement("fieldset");try{return !!e(t)}catch(e){return !1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null;}}function de(e,t){var n=e.split("|"),i=n.length;while(i--)r.attrHandle[n[i]]=t;}function fe(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return -1;return e?1:-1}function pe(e){return function(t){return "form"in t?t.parentNode&&!1===t.disabled?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&ue(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function he(e){return ce(function(t){return t=+t,ce(function(n,r){var i,o=e([],n.length,t),u=o.length;while(u--)n[i=o[u]]&&(n[i]=!(r[i]=n[i]));})})}function ge(e){return e&&void 0!==e.getElementsByTagName&&e}n=le.support={},o=le.isXML=function(e){var t=e&&e.namespaceURI,n=e&&(e.ownerDocument||e).documentElement;return !Q.test(t||n&&n.nodeName||"HTML")},f=le.setDocument=function(e){var t,i,u=e?e.ownerDocument||e:N;return u!=p&&9===u.nodeType&&u.documentElement?(p=u,h=p.documentElement,g=!o(p),N!=p&&(i=p.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",oe,!1):i.attachEvent&&i.attachEvent("onunload",oe)),n.scope=se(function(e){return h.appendChild(e).appendChild(p.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),n.attributes=se(function(e){return e.className="i",!e.getAttribute("className")}),n.getElementsByTagName=se(function(e){return e.appendChild(p.createComment("")),!e.getElementsByTagName("*").length}),n.getElementsByClassName=Z.test(p.getElementsByClassName),n.getById=se(function(e){return h.appendChild(e).id=b,!p.getElementsByName||!p.getElementsByName(b).length}),n.getById?(r.filter.ID=function(e){var t=e.replace(te,ne);return function(e){return e.getAttribute("id")===t}},r.find.ID=function(e,t){if(void 0!==t.getElementById&&g){var n=t.getElementById(e);return n?[n]:[]}}):(r.filter.ID=function(e){var t=e.replace(te,ne);return function(e){var n=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}},r.find.ID=function(e,t){if(void 0!==t.getElementById&&g){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode("id"))&&n.value===e)return [o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode("id"))&&n.value===e)return [o]}return []}}),r.find.TAG=n.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):n.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if("*"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},r.find.CLASS=n.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&g)return t.getElementsByClassName(e)},y=[],m=[],(n.qsa=Z.test(p.querySelectorAll))&&(se(function(e){var t;h.appendChild(e).innerHTML="<a id='"+b+"'></a><select id='"+b+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+M+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||m.push("\\["+M+"*(?:value|"+H+")"),e.querySelectorAll("[id~="+b+"-]").length||m.push("~="),(t=p.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||m.push("\\["+M+"*name"+M+"*="+M+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||m.push(":checked"),e.querySelectorAll("a#"+b+"+*").length||m.push(".#.+[+~]"),e.querySelectorAll("\\\f"),m.push("[\\r\\n\\f]");}),se(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=p.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&m.push("name"+M+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),h.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),m.push(",.*:");})),(n.matchesSelector=Z.test(v=h.matches||h.webkitMatchesSelector||h.mozMatchesSelector||h.oMatchesSelector||h.msMatchesSelector))&&se(function(e){n.disconnectedMatch=v.call(e,"*"),v.call(e,"[s!='']:x"),y.push("!=",F);}),m=m.length&&new RegExp(m.join("|")),y=y.length&&new RegExp(y.join("|")),t=Z.test(h.compareDocumentPosition),w=t||Z.test(h.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return !0;return !1},T=t?function(e,t){if(e===t)return d=!0,0;var r=!e.compareDocumentPosition-!t.compareDocumentPosition;return r||(1&(r=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!n.sortDetached&&t.compareDocumentPosition(e)===r?e==p||e.ownerDocument==N&&w(N,e)?-1:t==p||t.ownerDocument==N&&w(N,t)?1:s?k(s,e)-k(s,t):0:4&r?-1:1)}:function(e,t){if(e===t)return d=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,u=[e],l=[t];if(!i||!o)return e==p?-1:t==p?1:i?-1:o?1:s?k(s,e)-k(s,t):0;if(i===o)return fe(e,t);n=e;while(n=n.parentNode)u.unshift(n);n=t;while(n=n.parentNode)l.unshift(n);while(u[r]===l[r])r++;return r?fe(u[r],l[r]):u[r]==N?-1:l[r]==N?1:0},p):p},le.matches=function(e,t){return le(e,null,null,t)},le.matchesSelector=function(e,t){if(f(e),n.matchesSelector&&g&&!D[t+" "]&&(!y||!y.test(t))&&(!m||!m.test(t)))try{var r=v.call(e,t);if(r||n.disconnectedMatch||e.document&&11!==e.document.nodeType)return r}catch(e){D(t,!0);}return le(t,p,null,[e]).length>0},le.contains=function(e,t){return (e.ownerDocument||e)!=p&&f(e),w(e,t)},le.attr=function(e,t){(e.ownerDocument||e)!=p&&f(e);var i=r.attrHandle[t.toLowerCase()],o=i&&L.call(r.attrHandle,t.toLowerCase())?i(e,t,!g):void 0;return void 0!==o?o:n.attributes||!g?e.getAttribute(t):(o=e.getAttributeNode(t))&&o.specified?o.value:null},le.escape=function(e){return (e+"").replace(re,ie)},le.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},le.uniqueSort=function(e){var t,r=[],i=0,o=0;if(d=!n.detectDuplicates,s=!n.sortStable&&e.slice(0),e.sort(T),d){while(t=e[o++])t===e[o]&&(i=r.push(o));while(i--)e.splice(r[i],1);}return s=null,e},i=le.getText=function(e){var t,n="",r=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=i(e);}else if(3===o||4===o)return e.nodeValue}else while(t=e[r++])n+=i(t);return n},(r=le.selectors={cacheLength:50,createPseudo:ce,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ne),e[3]=(e[3]||e[4]||e[5]||"").replace(te,ne),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||le.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&le.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return K.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&X.test(n)&&(t=u(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ne).toLowerCase();return "*"===e?function(){return !0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=E[e+" "];return t||(t=new RegExp("(^|"+M+")"+e+"("+M+"|$)"))&&E(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,t,n){return function(r){var i=le.attr(r,e);return null==i?"!="===t:!t||(i+="","="===t?i===n:"!="===t?i!==n:"^="===t?n&&0===i.indexOf(n):"*="===t?n&&i.indexOf(n)>-1:"$="===t?n&&i.slice(-n.length)===n:"~="===t?(" "+i.replace(O," ")+" ").indexOf(n)>-1:"|="===t&&(i===n||i.slice(0,n.length+1)===n+"-"))}},CHILD:function(e,t,n,r,i){var o="nth"!==e.slice(0,3),u="last"!==e.slice(-4),l="of-type"===t;return 1===r&&0===i?function(e){return !!e.parentNode}:function(t,n,a){var c,s,d,f,p,h,g=o!==u?"nextSibling":"previousSibling",m=t.parentNode,y=l&&t.nodeName.toLowerCase(),v=!a&&!l,w=!1;if(m){if(o){while(g){f=t;while(f=f[g])if(l?f.nodeName.toLowerCase()===y:1===f.nodeType)return !1;h=g="only"===e&&!h&&"nextSibling";}return !0}if(h=[u?m.firstChild:m.lastChild],u&&v){w=(p=(c=(s=(d=(f=m)[b]||(f[b]={}))[f.uniqueID]||(d[f.uniqueID]={}))[e]||[])[0]===C&&c[1])&&c[2],f=p&&m.childNodes[p];while(f=++p&&f&&f[g]||(w=p=0)||h.pop())if(1===f.nodeType&&++w&&f===t){s[e]=[C,p,w];break}}else if(v&&(w=p=(c=(s=(d=(f=t)[b]||(f[b]={}))[f.uniqueID]||(d[f.uniqueID]={}))[e]||[])[0]===C&&c[1]),!1===w)while(f=++p&&f&&f[g]||(w=p=0)||h.pop())if((l?f.nodeName.toLowerCase()===y:1===f.nodeType)&&++w&&(v&&((s=(d=f[b]||(f[b]={}))[f.uniqueID]||(d[f.uniqueID]={}))[e]=[C,w]),f===t))break;return (w-=i)===r||w%r==0&&w/r>=0}}},PSEUDO:function(e,t){var n,i=r.pseudos[e]||r.setFilters[e.toLowerCase()]||le.error("unsupported pseudo: "+e);return i[b]?i(t):i.length>1?(n=[e,e,"",t],r.setFilters.hasOwnProperty(e.toLowerCase())?ce(function(e,n){var r,o=i(e,t),u=o.length;while(u--)e[r=k(e,o[u])]=!(n[r]=o[u]);}):function(e){return i(e,0,n)}):i}},pseudos:{not:ce(function(e){var t=[],n=[],r=l(e.replace(j,"$1"));return r[b]?ce(function(e,t,n,i){var o,u=r(e,null,i,[]),l=e.length;while(l--)(o=u[l])&&(e[l]=!(t[l]=o));}):function(e,i,o){return t[0]=e,r(t,null,o,n),t[0]=null,!n.pop()}}),has:ce(function(e){return function(t){return le(e,t).length>0}}),contains:ce(function(e){return e=e.replace(te,ne),function(t){return (t.textContent||i(t)).indexOf(e)>-1}}),lang:ce(function(e){return J.test(e||"")||le.error("unsupported lang: "+e),e=e.replace(te,ne).toLowerCase(),function(t){var n;do{if(n=g?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return (n=n.toLowerCase())===e||0===n.indexOf(e+"-")}while((t=t.parentNode)&&1===t.nodeType);return !1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===h},focus:function(e){return e===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:pe(!1),disabled:pe(!0),checked:function(e){var t=e.nodeName.toLowerCase();return "input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return !1;return !0},parent:function(e){return !r.pseudos.empty(e)},header:function(e){return Y.test(e.nodeName)},input:function(e){return W.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return "input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return "input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:he(function(){return [0]}),last:he(function(e,t){return [t-1]}),eq:he(function(e,t,n){return [n<0?n+t:n]}),even:he(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:he(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:he(function(e,t,n){for(var r=n<0?n+t:n>t?t:n;--r>=0;)e.push(r);return e}),gt:he(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=r.pseudos.eq;for(t in {radio:!0,checkbox:!0,file:!0,password:!0,image:!0})r.pseudos[t]=function(e){return function(t){return "input"===t.nodeName.toLowerCase()&&t.type===e}}(t);for(t in {submit:!0,reset:!0})r.pseudos[t]=function(e){return function(t){var n=t.nodeName.toLowerCase();return ("input"===n||"button"===n)&&t.type===e}}(t);function me(){}me.prototype=r.filters=r.pseudos,r.setFilters=new me,u=le.tokenize=function(e,t){var n,i,o,u,l,a,c,s=A[e+" "];if(s)return t?0:s.slice(0);l=e,a=[],c=r.preFilter;while(l){n&&!(i=G.exec(l))||(i&&(l=l.slice(i[0].length)||l),a.push(o=[])),n=!1,(i=U.exec(l))&&(n=i.shift(),o.push({value:n,type:i[0].replace(j," ")}),l=l.slice(n.length));for(u in r.filter)!(i=K[u].exec(l))||c[u]&&!(i=c[u](i))||(n=i.shift(),o.push({value:n,type:u,matches:i}),l=l.slice(n.length));if(!n)break}return t?l.length:l?le.error(e):A(e,a).slice(0)};function ye(e){for(var t=0,n=e.length,r="";t<n;t++)r+=e[t].value;return r}function ve(e,t,n){var r=t.dir,i=t.next,o=i||r,u=n&&"parentNode"===o,l=x++;return t.first?function(t,n,i){while(t=t[r])if(1===t.nodeType||u)return e(t,n,i);return !1}:function(t,n,a){var c,s,d,f=[C,l];if(a){while(t=t[r])if((1===t.nodeType||u)&&e(t,n,a))return !0}else while(t=t[r])if(1===t.nodeType||u)if(d=t[b]||(t[b]={}),s=d[t.uniqueID]||(d[t.uniqueID]={}),i&&i===t.nodeName.toLowerCase())t=t[r]||t;else {if((c=s[o])&&c[0]===C&&c[1]===l)return f[2]=c[2];if(s[o]=f,f[2]=e(t,n,a))return !0}return !1}}function we(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return !1;return !0}:e[0]}function be(e,t,n){for(var r=0,i=t.length;r<i;r++)le(e,t[r],n);return n}function Ne(e,t,n,r,i){for(var o,u=[],l=0,a=e.length,c=null!=t;l<a;l++)(o=e[l])&&(n&&!n(o,r,i)||(u.push(o),c&&t.push(l)));return u}function Ce(e,t,n,r,i,o){return r&&!r[b]&&(r=Ce(r)),i&&!i[b]&&(i=Ce(i,o)),ce(function(o,u,l,a){var c,s,d,f=[],p=[],h=u.length,g=o||be(t||"*",l.nodeType?[l]:l,[]),m=!e||!o&&t?g:Ne(g,f,e,l,a),y=n?i||(o?e:h||r)?[]:u:m;if(n&&n(m,y,l,a),r){c=Ne(y,p),r(c,[],l,a),s=c.length;while(s--)(d=c[s])&&(y[p[s]]=!(m[p[s]]=d));}if(o){if(i||e){if(i){c=[],s=y.length;while(s--)(d=y[s])&&c.push(m[s]=d);i(null,y=[],c,a);}s=y.length;while(s--)(d=y[s])&&(c=i?k(o,d):f[s])>-1&&(o[c]=!(u[c]=d));}}else y=Ne(y===u?y.splice(h,y.length):y),i?i(null,u,y,a):R.apply(u,y);})}function xe(e){for(var t,n,i,o=e.length,u=r.relative[e[0].type],l=u||r.relative[" "],a=u?1:0,s=ve(function(e){return e===t},l,!0),d=ve(function(e){return k(t,e)>-1},l,!0),f=[function(e,n,r){var i=!u&&(r||n!==c)||((t=n).nodeType?s(e,n,r):d(e,n,r));return t=null,i}];a<o;a++)if(n=r.relative[e[a].type])f=[ve(we(f),n)];else {if((n=r.filter[e[a].type].apply(null,e[a].matches))[b]){for(i=++a;i<o;i++)if(r.relative[e[i].type])break;return Ce(a>1&&we(f),a>1&&ye(e.slice(0,a-1).concat({value:" "===e[a-2].type?"*":""})).replace(j,"$1"),n,a<i&&xe(e.slice(a,i)),i<o&&xe(e=e.slice(i)),i<o&&ye(e))}f.push(n);}return we(f)}function Ee(e,t){var n=t.length>0,i=e.length>0,o=function(o,u,l,a,s){var d,h,m,y=0,v="0",w=o&&[],b=[],N=c,x=o||i&&r.find.TAG("*",s),E=C+=null==N?1:Math.random()||.1,A=x.length;for(s&&(c=u==p||u||s);v!==A&&null!=(d=x[v]);v++){if(i&&d){h=0,u||d.ownerDocument==p||(f(d),l=!g);while(m=e[h++])if(m(d,u||p,l)){a.push(d);break}s&&(C=E);}n&&((d=!m&&d)&&y--,o&&w.push(d));}if(y+=v,n&&v!==y){h=0;while(m=t[h++])m(w,b,u,l);if(o){if(y>0)while(v--)w[v]||b[v]||(b[v]=I.call(a));b=Ne(b);}R.apply(a,b),s&&!o&&b.length>0&&y+t.length>1&&le.uniqueSort(a);}return s&&(C=E,c=N),w};return n?ce(o):o}l=le.compile=function(e,t){var n,r=[],i=[],o=S[e+" "];if(!o){t||(t=u(e)),n=t.length;while(n--)(o=xe(t[n]))[b]?r.push(o):i.push(o);(o=S(e,Ee(i,r))).selector=e;}return o},a=le.select=function(e,t,n,i){var o,a,c,s,d,f="function"==typeof e&&e,p=!i&&u(e=f.selector||e);if(n=n||[],1===p.length){if((a=p[0]=p[0].slice(0)).length>2&&"ID"===(c=a[0]).type&&9===t.nodeType&&g&&r.relative[a[1].type]){if(!(t=(r.find.ID(c.matches[0].replace(te,ne),t)||[])[0]))return n;f&&(t=t.parentNode),e=e.slice(a.shift().value.length);}o=K.needsContext.test(e)?0:a.length;while(o--){if(c=a[o],r.relative[s=c.type])break;if((d=r.find[s])&&(i=d(c.matches[0].replace(te,ne),ee.test(a[0].type)&&ge(t.parentNode)||t))){if(a.splice(o,1),!(e=i.length&&ye(a)))return R.apply(n,i),n;break}}}return (f||l(e,p))(i,t,!g,n,!t||ee.test(e)&&ge(t.parentNode)||t),n},n.sortStable=b.split("").sort(T).join("")===b,n.detectDuplicates=!!d,f(),n.sortDetached=se(function(e){return 1&e.compareDocumentPosition(p.createElement("fieldset"))}),se(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||de("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),n.attributes&&se(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||de("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),se(function(e){return null==e.getAttribute("disabled")})||de(H,function(e,t,n){var r;if(!n)return !0===e[t]?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null});var Ae=e.Sizzle;le.noConflict=function(){return e.Sizzle===le&&(e.Sizzle=Ae),le},"function"==typeof define&&define.amd?define(function(){return le}):"undefined"!=typeof module&&module.exports?module.exports=le:e.Sizzle=le;}(window);
//# sourceMappingURL=sizzle.min.map

return module.exports;
})();

function matches(selector, elm) {
  const r = Sizzle.matches(selector, [elm]);
  return r.length > 0;
}
function selectOne(selector, elm) {
  const r = Sizzle(selector, elm);
  return r[0] || null;
}
function selectAll(selector, elm) {
  return Sizzle(selector, elm);
}

class MockClassList {
  constructor(elm) {
    this.elm = elm;
  }
  add(...classNames) {
    const clsNames = getItems(this.elm);
    let updated = false;
    classNames.forEach((className) => {
      className = String(className);
      validateClass(className);
      if (clsNames.includes(className) === false) {
        clsNames.push(className);
        updated = true;
      }
    });
    if (updated) {
      this.elm.setAttributeNS(null, 'class', clsNames.join(' '));
    }
  }
  remove(...classNames) {
    const clsNames = getItems(this.elm);
    let updated = false;
    classNames.forEach((className) => {
      className = String(className);
      validateClass(className);
      const index = clsNames.indexOf(className);
      if (index > -1) {
        clsNames.splice(index, 1);
        updated = true;
      }
    });
    if (updated) {
      this.elm.setAttributeNS(null, 'class', clsNames.filter((c) => c.length > 0).join(' '));
    }
  }
  contains(className) {
    className = String(className);
    return getItems(this.elm).includes(className);
  }
  toggle(className) {
    className = String(className);
    if (this.contains(className) === true) {
      this.remove(className);
    }
    else {
      this.add(className);
    }
  }
  get length() {
    return getItems(this.elm).length;
  }
  item(index) {
    return getItems(this.elm)[index];
  }
  toString() {
    return getItems(this.elm).join(' ');
  }
}
function validateClass(className) {
  if (className === '') {
    throw new Error('The token provided must not be empty.');
  }
  if (/\s/.test(className)) {
    throw new Error(`The token provided ('${className}') contains HTML space characters, which are not valid in tokens.`);
  }
}
function getItems(elm) {
  const className = elm.getAttribute('class');
  if (typeof className === 'string' && className.length > 0) {
    return className
      .trim()
      .split(' ')
      .filter((c) => c.length > 0);
  }
  return [];
}

class MockCSSStyleDeclaration {
  constructor() {
    this._styles = new Map();
  }
  setProperty(prop, value) {
    prop = jsCaseToCssCase(prop);
    if (value == null || value === '') {
      this._styles.delete(prop);
    }
    else {
      this._styles.set(prop, String(value));
    }
  }
  getPropertyValue(prop) {
    prop = jsCaseToCssCase(prop);
    return String(this._styles.get(prop) || '');
  }
  removeProperty(prop) {
    prop = jsCaseToCssCase(prop);
    this._styles.delete(prop);
  }
  get length() {
    return this._styles.size;
  }
  get cssText() {
    const cssText = [];
    this._styles.forEach((value, prop) => {
      cssText.push(`${prop}: ${value};`);
    });
    return cssText.join(' ').trim();
  }
  set cssText(cssText) {
    if (cssText == null || cssText === '') {
      this._styles.clear();
      return;
    }
    cssText.split(';').forEach((rule) => {
      rule = rule.trim();
      if (rule.length > 0) {
        const splt = rule.split(':');
        if (splt.length > 1) {
          const prop = splt[0].trim();
          const value = splt.slice(1).join(':').trim();
          if (prop !== '' && value !== '') {
            this._styles.set(jsCaseToCssCase(prop), value);
          }
        }
      }
    });
  }
}
function createCSSStyleDeclaration() {
  return new Proxy(new MockCSSStyleDeclaration(), cssProxyHandler);
}
const cssProxyHandler = {
  get(cssStyle, prop) {
    if (prop in cssStyle) {
      return cssStyle[prop];
    }
    prop = cssCaseToJsCase(prop);
    return cssStyle.getPropertyValue(prop);
  },
  set(cssStyle, prop, value) {
    if (prop in cssStyle) {
      cssStyle[prop] = value;
    }
    else {
      cssStyle.setProperty(prop, value);
    }
    return true;
  },
};
function cssCaseToJsCase(str) {
  // font-size to fontSize
  if (str.length > 1 && str.includes('-') === true) {
    str = str
      .toLowerCase()
      .split('-')
      .map((segment) => segment.charAt(0).toUpperCase() + segment.slice(1))
      .join('');
    str = str.substr(0, 1).toLowerCase() + str.substr(1);
  }
  return str;
}
function jsCaseToCssCase(str) {
  // fontSize to font-size
  if (str.length > 1 && str.includes('-') === false && /[A-Z]/.test(str) === true) {
    str = str
      .replace(/([A-Z])/g, (g) => ' ' + g[0])
      .trim()
      .replace(/ /g, '-')
      .toLowerCase();
  }
  return str;
}

class MockEvent {
  constructor(type, eventInitDict) {
    this.bubbles = false;
    this.cancelBubble = false;
    this.cancelable = false;
    this.composed = false;
    this.currentTarget = null;
    this.defaultPrevented = false;
    this.srcElement = null;
    this.target = null;
    if (typeof type !== 'string') {
      throw new Error(`Event type required`);
    }
    this.type = type;
    this.timeStamp = Date.now();
    if (eventInitDict != null) {
      Object.assign(this, eventInitDict);
    }
  }
  preventDefault() {
    this.defaultPrevented = true;
  }
  stopPropagation() {
    this.cancelBubble = true;
  }
  stopImmediatePropagation() {
    this.cancelBubble = true;
  }
  composedPath() {
    const composedPath = [];
    let currentElement = this.target;
    while (currentElement) {
      composedPath.push(currentElement);
      if (!currentElement.parentElement && currentElement.nodeName === "#document" /* DOCUMENT_NODE */) {
        // the current element doesn't have a parent, but we've detected it's our root document node. push the window
        // object associated with the document onto the path
        composedPath.push(currentElement.defaultView);
        break;
      }
      currentElement = currentElement.parentElement;
    }
    return composedPath;
  }
}
class MockCustomEvent extends MockEvent {
  constructor(type, customEventInitDic) {
    super(type);
    this.detail = null;
    if (customEventInitDic != null) {
      Object.assign(this, customEventInitDic);
    }
  }
}
class MockKeyboardEvent extends MockEvent {
  constructor(type, keyboardEventInitDic) {
    super(type);
    this.code = '';
    this.key = '';
    this.altKey = false;
    this.ctrlKey = false;
    this.metaKey = false;
    this.shiftKey = false;
    this.location = 0;
    this.repeat = false;
    if (keyboardEventInitDic != null) {
      Object.assign(this, keyboardEventInitDic);
    }
  }
}
class MockMouseEvent extends MockEvent {
  constructor(type, mouseEventInitDic) {
    super(type);
    this.screenX = 0;
    this.screenY = 0;
    this.clientX = 0;
    this.clientY = 0;
    this.ctrlKey = false;
    this.shiftKey = false;
    this.altKey = false;
    this.metaKey = false;
    this.button = 0;
    this.buttons = 0;
    this.relatedTarget = null;
    if (mouseEventInitDic != null) {
      Object.assign(this, mouseEventInitDic);
    }
  }
}
class MockEventListener {
  constructor(type, handler) {
    this.type = type;
    this.handler = handler;
  }
}
function addEventListener(elm, type, handler) {
  const target = elm;
  if (target.__listeners == null) {
    target.__listeners = [];
  }
  target.__listeners.push(new MockEventListener(type, handler));
}
function removeEventListener(elm, type, handler) {
  const target = elm;
  if (target != null && Array.isArray(target.__listeners) === true) {
    const elmListener = target.__listeners.find((e) => e.type === type && e.handler === handler);
    if (elmListener != null) {
      const index = target.__listeners.indexOf(elmListener);
      target.__listeners.splice(index, 1);
    }
  }
}
function resetEventListeners(target) {
  if (target != null && target.__listeners != null) {
    target.__listeners = null;
  }
}
function triggerEventListener(elm, ev) {
  if (elm == null || ev.cancelBubble === true) {
    return;
  }
  const target = elm;
  ev.currentTarget = elm;
  if (Array.isArray(target.__listeners) === true) {
    const listeners = target.__listeners.filter((e) => e.type === ev.type);
    listeners.forEach((listener) => {
      try {
        listener.handler.call(target, ev);
      }
      catch (err) {
        console.error(err);
      }
    });
  }
  if (ev.bubbles === false) {
    return;
  }
  if (elm.nodeName === "#document" /* DOCUMENT_NODE */) {
    triggerEventListener(elm.defaultView, ev);
  }
  else {
    triggerEventListener(elm.parentElement, ev);
  }
}
function dispatchEvent(currentTarget, ev) {
  ev.target = currentTarget;
  triggerEventListener(currentTarget, ev);
  return true;
}

function serializeNodeToHtml(elm, opts = {}) {
  const output = {
    currentLineWidth: 0,
    indent: 0,
    isWithinBody: false,
    text: [],
  };
  if (opts.prettyHtml) {
    if (typeof opts.indentSpaces !== 'number') {
      opts.indentSpaces = 2;
    }
    if (typeof opts.newLines !== 'boolean') {
      opts.newLines = true;
    }
    opts.approximateLineWidth = -1;
  }
  else {
    opts.prettyHtml = false;
    if (typeof opts.newLines !== 'boolean') {
      opts.newLines = false;
    }
    if (typeof opts.indentSpaces !== 'number') {
      opts.indentSpaces = 0;
    }
  }
  if (typeof opts.approximateLineWidth !== 'number') {
    opts.approximateLineWidth = -1;
  }
  if (typeof opts.removeEmptyAttributes !== 'boolean') {
    opts.removeEmptyAttributes = true;
  }
  if (typeof opts.removeAttributeQuotes !== 'boolean') {
    opts.removeAttributeQuotes = false;
  }
  if (typeof opts.removeBooleanAttributeQuotes !== 'boolean') {
    opts.removeBooleanAttributeQuotes = false;
  }
  if (typeof opts.removeHtmlComments !== 'boolean') {
    opts.removeHtmlComments = false;
  }
  if (typeof opts.serializeShadowRoot !== 'boolean') {
    opts.serializeShadowRoot = false;
  }
  if (opts.outerHtml) {
    serializeToHtml(elm, opts, output, false);
  }
  else {
    for (let i = 0, ii = elm.childNodes.length; i < ii; i++) {
      serializeToHtml(elm.childNodes[i], opts, output, false);
    }
  }
  if (output.text[0] === '\n') {
    output.text.shift();
  }
  if (output.text[output.text.length - 1] === '\n') {
    output.text.pop();
  }
  return output.text.join('');
}
function serializeToHtml(node, opts, output, isShadowRoot) {
  if (node.nodeType === 1 /* ELEMENT_NODE */ || isShadowRoot) {
    const tagName = isShadowRoot ? 'mock:shadow-root' : getTagName(node);
    if (tagName === 'body') {
      output.isWithinBody = true;
    }
    const ignoreTag = opts.excludeTags != null && opts.excludeTags.includes(tagName);
    if (ignoreTag === false) {
      const isWithinWhitespaceSensitiveNode = opts.newLines || opts.indentSpaces > 0 ? isWithinWhitespaceSensitive(node) : false;
      if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
        output.text.push('\n');
        output.currentLineWidth = 0;
      }
      if (opts.indentSpaces > 0 && !isWithinWhitespaceSensitiveNode) {
        for (let i = 0; i < output.indent; i++) {
          output.text.push(' ');
        }
        output.currentLineWidth += output.indent;
      }
      output.text.push('<' + tagName);
      output.currentLineWidth += tagName.length + 1;
      const attrsLength = node.attributes.length;
      const attributes = opts.prettyHtml && attrsLength > 1
        ? cloneAttributes(node.attributes, true)
        : node.attributes;
      for (let i = 0; i < attrsLength; i++) {
        const attr = attributes.item(i);
        const attrName = attr.name;
        if (attrName === 'style') {
          continue;
        }
        let attrValue = attr.value;
        if (opts.removeEmptyAttributes && attrValue === '' && REMOVE_EMPTY_ATTR.has(attrName)) {
          continue;
        }
        const attrNamespaceURI = attr.namespaceURI;
        if (attrNamespaceURI == null) {
          output.currentLineWidth += attrName.length + 1;
          if (opts.approximateLineWidth > 0 && output.currentLineWidth > opts.approximateLineWidth) {
            output.text.push('\n' + attrName);
            output.currentLineWidth = 0;
          }
          else {
            output.text.push(' ' + attrName);
          }
        }
        else if (attrNamespaceURI === 'http://www.w3.org/XML/1998/namespace') {
          output.text.push(' xml:' + attrName);
          output.currentLineWidth += attrName.length + 5;
        }
        else if (attrNamespaceURI === 'http://www.w3.org/2000/xmlns/') {
          if (attrName !== 'xmlns') {
            output.text.push(' xmlns:' + attrName);
            output.currentLineWidth += attrName.length + 7;
          }
          else {
            output.text.push(' ' + attrName);
            output.currentLineWidth += attrName.length + 1;
          }
        }
        else if (attrNamespaceURI === XLINK_NS) {
          output.text.push(' xlink:' + attrName);
          output.currentLineWidth += attrName.length + 7;
        }
        else {
          output.text.push(' ' + attrNamespaceURI + ':' + attrName);
          output.currentLineWidth += attrNamespaceURI.length + attrName.length + 2;
        }
        if (opts.prettyHtml && attrName === 'class') {
          attrValue = attr.value = attrValue
            .split(' ')
            .filter((t) => t !== '')
            .sort()
            .join(' ')
            .trim();
        }
        if (attrValue === '') {
          if (opts.removeBooleanAttributeQuotes && BOOLEAN_ATTR.has(attrName)) {
            continue;
          }
          if (opts.removeEmptyAttributes && attrName.startsWith('data-')) {
            continue;
          }
        }
        if (opts.removeAttributeQuotes && CAN_REMOVE_ATTR_QUOTES.test(attrValue)) {
          output.text.push('=' + escapeString(attrValue, true));
          output.currentLineWidth += attrValue.length + 1;
        }
        else {
          output.text.push('="' + escapeString(attrValue, true) + '"');
          output.currentLineWidth += attrValue.length + 3;
        }
      }
      if (node.hasAttribute('style')) {
        const cssText = node.style.cssText;
        if (opts.approximateLineWidth > 0 &&
          output.currentLineWidth + cssText.length + 10 > opts.approximateLineWidth) {
          output.text.push(`\nstyle="${cssText}">`);
          output.currentLineWidth = 0;
        }
        else {
          output.text.push(` style="${cssText}">`);
          output.currentLineWidth += cssText.length + 10;
        }
      }
      else {
        output.text.push('>');
        output.currentLineWidth += 1;
      }
    }
    if (EMPTY_ELEMENTS.has(tagName) === false) {
      if (opts.serializeShadowRoot && node.shadowRoot != null) {
        output.indent = output.indent + opts.indentSpaces;
        serializeToHtml(node.shadowRoot, opts, output, true);
        output.indent = output.indent - opts.indentSpaces;
        if (opts.newLines &&
          (node.childNodes.length === 0 ||
            (node.childNodes.length === 1 &&
              node.childNodes[0].nodeType === 3 /* TEXT_NODE */ &&
              node.childNodes[0].nodeValue.trim() === ''))) {
          output.text.push('\n');
          output.currentLineWidth = 0;
          for (let i = 0; i < output.indent; i++) {
            output.text.push(' ');
          }
          output.currentLineWidth += output.indent;
        }
      }
      if (opts.excludeTagContent == null || opts.excludeTagContent.includes(tagName) === false) {
        const childNodes = tagName === 'template' ? node.content.childNodes : node.childNodes;
        const childNodeLength = childNodes.length;
        if (childNodeLength > 0) {
          if (childNodeLength === 1 &&
            childNodes[0].nodeType === 3 /* TEXT_NODE */ &&
            (typeof childNodes[0].nodeValue !== 'string' || childNodes[0].nodeValue.trim() === '')) ;
          else {
            const isWithinWhitespaceSensitiveNode = opts.newLines || opts.indentSpaces > 0 ? isWithinWhitespaceSensitive(node) : false;
            if (!isWithinWhitespaceSensitiveNode && opts.indentSpaces > 0 && ignoreTag === false) {
              output.indent = output.indent + opts.indentSpaces;
            }
            for (let i = 0; i < childNodeLength; i++) {
              serializeToHtml(childNodes[i], opts, output, false);
            }
            if (ignoreTag === false) {
              if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
                output.text.push('\n');
                output.currentLineWidth = 0;
              }
              if (opts.indentSpaces > 0 && !isWithinWhitespaceSensitiveNode) {
                output.indent = output.indent - opts.indentSpaces;
                for (let i = 0; i < output.indent; i++) {
                  output.text.push(' ');
                }
                output.currentLineWidth += output.indent;
              }
            }
          }
        }
        if (ignoreTag === false) {
          output.text.push('</' + tagName + '>');
          output.currentLineWidth += tagName.length + 3;
        }
      }
    }
    if (opts.approximateLineWidth > 0 && STRUCTURE_ELEMENTS.has(tagName)) {
      output.text.push('\n');
      output.currentLineWidth = 0;
    }
    if (tagName === 'body') {
      output.isWithinBody = false;
    }
  }
  else if (node.nodeType === 3 /* TEXT_NODE */) {
    let textContent = node.nodeValue;
    if (typeof textContent === 'string') {
      const trimmedTextContent = textContent.trim();
      if (trimmedTextContent === '') {
        // this text node is whitespace only
        if (isWithinWhitespaceSensitive(node)) {
          // whitespace matters within this element
          // just add the exact text we were given
          output.text.push(textContent);
          output.currentLineWidth += textContent.length;
        }
        else if (opts.approximateLineWidth > 0 && !output.isWithinBody) ;
        else if (!opts.prettyHtml) {
          // this text node is only whitespace, and it's not
          // within a whitespace sensitive element like <pre> or <code>
          // so replace the entire white space with a single new line
          output.currentLineWidth += 1;
          if (opts.approximateLineWidth > 0 && output.currentLineWidth > opts.approximateLineWidth) {
            // good enough for a new line
            // for perf these are all just estimates
            // we don't care to ensure exact line lengths
            output.text.push('\n');
            output.currentLineWidth = 0;
          }
          else {
            // let's keep it all on the same line yet
            output.text.push(' ');
          }
        }
      }
      else {
        // this text node has text content
        const isWithinWhitespaceSensitiveNode = opts.newLines || opts.indentSpaces > 0 || opts.prettyHtml ? isWithinWhitespaceSensitive(node) : false;
        if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
          output.text.push('\n');
          output.currentLineWidth = 0;
        }
        if (opts.indentSpaces > 0 && !isWithinWhitespaceSensitiveNode) {
          for (let i = 0; i < output.indent; i++) {
            output.text.push(' ');
          }
          output.currentLineWidth += output.indent;
        }
        let textContentLength = textContent.length;
        if (textContentLength > 0) {
          // this text node has text content
          const parentTagName = node.parentNode != null && node.parentNode.nodeType === 1 /* ELEMENT_NODE */
            ? node.parentNode.nodeName
            : null;
          if (NON_ESCAPABLE_CONTENT.has(parentTagName)) {
            // this text node cannot have its content escaped since it's going
            // into an element like <style> or <script>
            if (isWithinWhitespaceSensitive(node)) {
              output.text.push(textContent);
            }
            else {
              output.text.push(trimmedTextContent);
              textContentLength = trimmedTextContent.length;
            }
            output.currentLineWidth += textContentLength;
          }
          else {
            // this text node is going into a normal element and html can be escaped
            if (opts.prettyHtml && !isWithinWhitespaceSensitiveNode) {
              // pretty print the text node
              output.text.push(escapeString(textContent.replace(/\s\s+/g, ' ').trim(), false));
              output.currentLineWidth += textContentLength;
            }
            else {
              // not pretty printing the text node
              if (isWithinWhitespaceSensitive(node)) {
                output.currentLineWidth += textContentLength;
              }
              else {
                // this element is not a whitespace sensitive one, like <pre> or <code> so
                // any whitespace at the start and end can be cleaned up to just be one space
                if (/\s/.test(textContent.charAt(0))) {
                  textContent = ' ' + textContent.trimLeft();
                }
                textContentLength = textContent.length;
                if (textContentLength > 1) {
                  if (/\s/.test(textContent.charAt(textContentLength - 1))) {
                    if (opts.approximateLineWidth > 0 &&
                      output.currentLineWidth + textContentLength > opts.approximateLineWidth) {
                      textContent = textContent.trimRight() + '\n';
                      output.currentLineWidth = 0;
                    }
                    else {
                      textContent = textContent.trimRight() + ' ';
                    }
                  }
                }
                output.currentLineWidth += textContentLength;
              }
              output.text.push(escapeString(textContent, false));
            }
          }
        }
      }
    }
  }
  else if (node.nodeType === 8 /* COMMENT_NODE */) {
    const nodeValue = node.nodeValue;
    if (opts.removeHtmlComments) {
      const isHydrateAnnotation = nodeValue.startsWith(CONTENT_REF_ID + '.') ||
        nodeValue.startsWith(ORG_LOCATION_ID + '.') ||
        nodeValue.startsWith(SLOT_NODE_ID + '.') ||
        nodeValue.startsWith(TEXT_NODE_ID + '.');
      if (!isHydrateAnnotation) {
        return;
      }
    }
    const isWithinWhitespaceSensitiveNode = opts.newLines || opts.indentSpaces > 0 ? isWithinWhitespaceSensitive(node) : false;
    if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
      output.text.push('\n');
      output.currentLineWidth = 0;
    }
    if (opts.indentSpaces > 0 && !isWithinWhitespaceSensitiveNode) {
      for (let i = 0; i < output.indent; i++) {
        output.text.push(' ');
      }
      output.currentLineWidth += output.indent;
    }
    output.text.push('<!--' + nodeValue + '-->');
    output.currentLineWidth += nodeValue.length + 7;
  }
  else if (node.nodeType === 10 /* DOCUMENT_TYPE_NODE */) {
    output.text.push('<!doctype html>');
  }
}
const AMP_REGEX = /&/g;
const NBSP_REGEX = /\u00a0/g;
const DOUBLE_QUOTE_REGEX = /"/g;
const LT_REGEX = /</g;
const GT_REGEX = />/g;
const CAN_REMOVE_ATTR_QUOTES = /^[^ \t\n\f\r"'`=<>\/\\-]+$/;
function getTagName(element) {
  if (element.namespaceURI === 'http://www.w3.org/1999/xhtml') {
    return element.nodeName.toLowerCase();
  }
  else {
    return element.nodeName;
  }
}
function escapeString(str, attrMode) {
  str = str.replace(AMP_REGEX, '&amp;').replace(NBSP_REGEX, '&nbsp;');
  if (attrMode) {
    return str.replace(DOUBLE_QUOTE_REGEX, '&quot;');
  }
  return str.replace(LT_REGEX, '&lt;').replace(GT_REGEX, '&gt;');
}
function isWithinWhitespaceSensitive(node) {
  while (node != null) {
    if (WHITESPACE_SENSITIVE.has(node.nodeName)) {
      return true;
    }
    node = node.parentNode;
  }
  return false;
}
/*@__PURE__*/ const NON_ESCAPABLE_CONTENT = new Set([
  'STYLE',
  'SCRIPT',
  'IFRAME',
  'NOSCRIPT',
  'XMP',
  'NOEMBED',
  'NOFRAMES',
  'PLAINTEXT',
]);
/*@__PURE__*/ const WHITESPACE_SENSITIVE = new Set([
  'CODE',
  'OUTPUT',
  'PLAINTEXT',
  'PRE',
  'SCRIPT',
  'TEMPLATE',
  'TEXTAREA',
]);
/*@__PURE__*/ const EMPTY_ELEMENTS = new Set([
  'area',
  'base',
  'basefont',
  'bgsound',
  'br',
  'col',
  'embed',
  'frame',
  'hr',
  'img',
  'input',
  'keygen',
  'link',
  'meta',
  'param',
  'source',
  'trace',
  'wbr',
]);
/*@__PURE__*/ const REMOVE_EMPTY_ATTR = new Set(['class', 'dir', 'id', 'lang', 'name', 'title']);
/*@__PURE__*/ const BOOLEAN_ATTR = new Set([
  'allowfullscreen',
  'async',
  'autofocus',
  'autoplay',
  'checked',
  'compact',
  'controls',
  'declare',
  'default',
  'defaultchecked',
  'defaultmuted',
  'defaultselected',
  'defer',
  'disabled',
  'enabled',
  'formnovalidate',
  'hidden',
  'indeterminate',
  'inert',
  'ismap',
  'itemscope',
  'loop',
  'multiple',
  'muted',
  'nohref',
  'nomodule',
  'noresize',
  'noshade',
  'novalidate',
  'nowrap',
  'open',
  'pauseonexit',
  'readonly',
  'required',
  'reversed',
  'scoped',
  'seamless',
  'selected',
  'sortable',
  'truespeed',
  'typemustmatch',
  'visible',
]);
/*@__PURE__*/ const STRUCTURE_ELEMENTS = new Set([
  'html',
  'body',
  'head',
  'iframe',
  'meta',
  'link',
  'base',
  'title',
  'script',
  'style',
]);

// Parse5 6.0.1
const e=function(e){const t=[65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];var n="�",s={EOF:-1,NULL:0,TABULATION:9,CARRIAGE_RETURN:13,LINE_FEED:10,FORM_FEED:12,SPACE:32,EXCLAMATION_MARK:33,QUOTATION_MARK:34,NUMBER_SIGN:35,AMPERSAND:38,APOSTROPHE:39,HYPHEN_MINUS:45,SOLIDUS:47,DIGIT_0:48,DIGIT_9:57,SEMICOLON:59,LESS_THAN_SIGN:60,EQUALS_SIGN:61,GREATER_THAN_SIGN:62,QUESTION_MARK:63,LATIN_CAPITAL_A:65,LATIN_CAPITAL_F:70,LATIN_CAPITAL_X:88,LATIN_CAPITAL_Z:90,RIGHT_SQUARE_BRACKET:93,GRAVE_ACCENT:96,LATIN_SMALL_A:97,LATIN_SMALL_F:102,LATIN_SMALL_X:120,LATIN_SMALL_Z:122,REPLACEMENT_CHARACTER:65533},r=function(e){return e>=55296&&e<=57343},i=function(e){return 32!==e&&10!==e&&13!==e&&9!==e&&12!==e&&e>=1&&e<=31||e>=127&&e<=159},o=function(e){return e>=64976&&e<=65007||t.indexOf(e)>-1},a="unexpected-null-character",T="invalid-first-character-of-tag-name",E="missing-semicolon-after-character-reference",h="eof-before-tag-name",c="eof-in-tag",_="missing-whitespace-after-doctype-public-keyword",l="missing-whitespace-between-doctype-public-and-system-identifiers",m="missing-whitespace-after-doctype-system-keyword",p="missing-quote-before-doctype-public-identifier",A="missing-quote-before-doctype-system-identifier",u="missing-doctype-public-identifier",N="missing-doctype-system-identifier",d="abrupt-doctype-public-identifier",C="abrupt-doctype-system-identifier",O="eof-in-script-html-comment-like-text",f="eof-in-doctype",S="abrupt-closing-of-empty-comment",R="eof-in-comment",I="absence-of-digits-in-numeric-character-reference",L="end-tag-without-matching-open-element",k="misplaced-start-tag-for-head-element";const M=s;var g=new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4e3,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,1e4,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13e3,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204]);const P=s,H={DASH_DASH_STRING:[45,45],DOCTYPE_STRING:[68,79,67,84,89,80,69],CDATA_START_STRING:[91,67,68,65,84,65,91],SCRIPT_STRING:[115,99,114,105,112,116],PUBLIC_STRING:[80,85,66,76,73,67],SYSTEM_STRING:[83,89,83,84,69,77]},D={128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376},F="DATA_STATE",U="RCDATA_STATE",G="RAWTEXT_STATE",B="SCRIPT_DATA_STATE",K="PLAINTEXT_STATE",b="TAG_OPEN_STATE",x="END_TAG_OPEN_STATE",y="TAG_NAME_STATE",v="RCDATA_LESS_THAN_SIGN_STATE",Y="RCDATA_END_TAG_OPEN_STATE",w="RCDATA_END_TAG_NAME_STATE",Q="RAWTEXT_LESS_THAN_SIGN_STATE",X="RAWTEXT_END_TAG_OPEN_STATE",W="RAWTEXT_END_TAG_NAME_STATE",V="SCRIPT_DATA_LESS_THAN_SIGN_STATE",j="SCRIPT_DATA_END_TAG_OPEN_STATE",z="SCRIPT_DATA_END_TAG_NAME_STATE",q="SCRIPT_DATA_ESCAPE_START_STATE",J="SCRIPT_DATA_ESCAPE_START_DASH_STATE",Z="SCRIPT_DATA_ESCAPED_STATE",$="SCRIPT_DATA_ESCAPED_DASH_STATE",ee="SCRIPT_DATA_ESCAPED_DASH_DASH_STATE",te="SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE",ne="SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE",se="SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE",re="SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE",ie="SCRIPT_DATA_DOUBLE_ESCAPED_STATE",oe="SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE",ae="SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE",Te="SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE",Ee="SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE",he="BEFORE_ATTRIBUTE_NAME_STATE",ce="ATTRIBUTE_NAME_STATE",_e="AFTER_ATTRIBUTE_NAME_STATE",le="BEFORE_ATTRIBUTE_VALUE_STATE",me="ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE",pe="ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE",Ae="ATTRIBUTE_VALUE_UNQUOTED_STATE",ue="AFTER_ATTRIBUTE_VALUE_QUOTED_STATE",Ne="SELF_CLOSING_START_TAG_STATE",de="BOGUS_COMMENT_STATE",Ce="MARKUP_DECLARATION_OPEN_STATE",Oe="COMMENT_START_STATE",fe="COMMENT_START_DASH_STATE",Se="COMMENT_STATE",Re="COMMENT_LESS_THAN_SIGN_STATE",Ie="COMMENT_LESS_THAN_SIGN_BANG_STATE",Le="COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE",ke="COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE",Me="COMMENT_END_DASH_STATE",ge="COMMENT_END_STATE",Pe="COMMENT_END_BANG_STATE",He="DOCTYPE_STATE",De="BEFORE_DOCTYPE_NAME_STATE",Fe="DOCTYPE_NAME_STATE",Ue="AFTER_DOCTYPE_NAME_STATE",Ge="AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE",Be="BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE",Ke="DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE",be="DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE",xe="AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE",ye="BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE",ve="AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE",Ye="BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE",we="DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE",Qe="DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE",Xe="AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE",We="BOGUS_DOCTYPE_STATE",Ve="CDATA_SECTION_STATE",je="CDATA_SECTION_BRACKET_STATE",ze="CDATA_SECTION_END_STATE",qe="CHARACTER_REFERENCE_STATE",Je="NAMED_CHARACTER_REFERENCE_STATE",Ze="AMBIGUOS_AMPERSAND_STATE",$e="NUMERIC_CHARACTER_REFERENCE_STATE",et="HEXADEMICAL_CHARACTER_REFERENCE_START_STATE",tt="DECIMAL_CHARACTER_REFERENCE_START_STATE",nt="HEXADEMICAL_CHARACTER_REFERENCE_STATE",st="DECIMAL_CHARACTER_REFERENCE_STATE",rt="NUMERIC_CHARACTER_REFERENCE_END_STATE";function it(e){return e===P.SPACE||e===P.LINE_FEED||e===P.TABULATION||e===P.FORM_FEED}function ot(e){return e>=P.DIGIT_0&&e<=P.DIGIT_9}function at(e){return e>=P.LATIN_CAPITAL_A&&e<=P.LATIN_CAPITAL_Z}function Tt(e){return e>=P.LATIN_SMALL_A&&e<=P.LATIN_SMALL_Z}function Et(e){return Tt(e)||at(e)}function ht(e){return Et(e)||ot(e)}function ct(e){return e>=P.LATIN_CAPITAL_A&&e<=P.LATIN_CAPITAL_F}function _t(e){return e>=P.LATIN_SMALL_A&&e<=P.LATIN_SMALL_F}function lt(e){return e+32}function mt(e){return e<=65535?String.fromCharCode(e):(e-=65536,String.fromCharCode(e>>>10&1023|55296)+String.fromCharCode(56320|1023&e))}function pt(e){return String.fromCharCode(lt(e))}function At(e,t){const n=g[++e];let s=++e,r=s+n-1;for(;s<=r;){const e=s+r>>>1,i=g[e];if(i<t)s=e+1;else {if(!(i>t))return g[e+n];r=e-1;}}return -1}class ut{constructor(){this.preprocessor=new class{constructor(){this.html=null,this.pos=-1,this.lastGapPos=-1,this.lastCharPos=-1,this.gapStack=[],this.skipNextNewLine=!1,this.lastChunkWritten=!1,this.endOfChunkHit=!1,this.bufferWaterline=65536;}_err(){}_addGap(){this.gapStack.push(this.lastGapPos),this.lastGapPos=this.pos;}_processSurrogate(e){if(this.pos!==this.lastCharPos){const t=this.html.charCodeAt(this.pos+1);if(function(e){return e>=56320&&e<=57343}(t))return this.pos++,this._addGap(),1024*(e-55296)+9216+t}else if(!this.lastChunkWritten)return this.endOfChunkHit=!0,M.EOF;return this._err("surrogate-in-input-stream"),e}dropParsedChunk(){this.pos>this.bufferWaterline&&(this.lastCharPos-=this.pos,this.html=this.html.substring(this.pos),this.pos=0,this.lastGapPos=-1,this.gapStack=[]);}write(e,t){this.html?this.html+=e:this.html=e,this.lastCharPos=this.html.length-1,this.endOfChunkHit=!1,this.lastChunkWritten=t;}insertHtmlAtCurrentPos(e){this.html=this.html.substring(0,this.pos+1)+e+this.html.substring(this.pos+1,this.html.length),this.lastCharPos=this.html.length-1,this.endOfChunkHit=!1;}advance(){if(this.pos++,this.pos>this.lastCharPos)return this.endOfChunkHit=!this.lastChunkWritten,M.EOF;let e=this.html.charCodeAt(this.pos);return this.skipNextNewLine&&e===M.LINE_FEED?(this.skipNextNewLine=!1,this._addGap(),this.advance()):e===M.CARRIAGE_RETURN?(this.skipNextNewLine=!0,M.LINE_FEED):(this.skipNextNewLine=!1,r(e)&&(e=this._processSurrogate(e)),e>31&&e<127||e===M.LINE_FEED||e===M.CARRIAGE_RETURN||e>159&&e<64976||this._checkForProblematicCharacters(e),e)}_checkForProblematicCharacters(e){i(e)?this._err("control-character-in-input-stream"):o(e)&&this._err("noncharacter-in-input-stream");}retreat(){this.pos===this.lastGapPos&&(this.lastGapPos=this.gapStack.pop(),this.pos--),this.pos--;}},this.tokenQueue=[],this.allowCDATA=!1,this.state=F,this.returnState="",this.charRefCode=-1,this.tempBuff=[],this.lastStartTagName="",this.consumedAfterSnapshot=-1,this.active=!1,this.currentCharacterToken=null,this.currentToken=null,this.currentAttr=null;}_err(){}_errOnNextCodePoint(e){this._consume(),this._err(e),this._unconsume();}getNextToken(){for(;!this.tokenQueue.length&&this.active;){this.consumedAfterSnapshot=0;const e=this._consume();this._ensureHibernation()||this[this.state](e);}return this.tokenQueue.shift()}write(e,t){this.active=!0,this.preprocessor.write(e,t);}insertHtmlAtCurrentPos(e){this.active=!0,this.preprocessor.insertHtmlAtCurrentPos(e);}_ensureHibernation(){if(this.preprocessor.endOfChunkHit){for(;this.consumedAfterSnapshot>0;this.consumedAfterSnapshot--)this.preprocessor.retreat();return this.active=!1,this.tokenQueue.push({type:ut.HIBERNATION_TOKEN}),!0}return !1}_consume(){return this.consumedAfterSnapshot++,this.preprocessor.advance()}_unconsume(){this.consumedAfterSnapshot--,this.preprocessor.retreat();}_reconsumeInState(e){this.state=e,this._unconsume();}_consumeSequenceIfMatch(e,t,n){let s=0,r=!0;const i=e.length;let o,a=0,T=t;for(;a<i;a++){if(a>0&&(T=this._consume(),s++),T===P.EOF){r=!1;break}if(o=e[a],T!==o&&(n||T!==lt(o))){r=!1;break}}if(!r)for(;s--;)this._unconsume();return r}_isTempBufferEqualToScriptString(){if(this.tempBuff.length!==H.SCRIPT_STRING.length)return !1;for(let e=0;e<this.tempBuff.length;e++)if(this.tempBuff[e]!==H.SCRIPT_STRING[e])return !1;return !0}_createStartTagToken(){this.currentToken={type:ut.START_TAG_TOKEN,tagName:"",selfClosing:!1,ackSelfClosing:!1,attrs:[]};}_createEndTagToken(){this.currentToken={type:ut.END_TAG_TOKEN,tagName:"",selfClosing:!1,attrs:[]};}_createCommentToken(){this.currentToken={type:ut.COMMENT_TOKEN,data:""};}_createDoctypeToken(e){this.currentToken={type:ut.DOCTYPE_TOKEN,name:e,forceQuirks:!1,publicId:null,systemId:null};}_createCharacterToken(e,t){this.currentCharacterToken={type:e,chars:t};}_createEOFToken(){this.currentToken={type:ut.EOF_TOKEN};}_createAttr(e){this.currentAttr={name:e,value:""};}_leaveAttrName(e){null===ut.getTokenAttr(this.currentToken,this.currentAttr.name)?this.currentToken.attrs.push(this.currentAttr):this._err("duplicate-attribute"),this.state=e;}_leaveAttrValue(e){this.state=e;}_emitCurrentToken(){this._emitCurrentCharacterToken();const e=this.currentToken;this.currentToken=null,e.type===ut.START_TAG_TOKEN?this.lastStartTagName=e.tagName:e.type===ut.END_TAG_TOKEN&&(e.attrs.length>0&&this._err("end-tag-with-attributes"),e.selfClosing&&this._err("end-tag-with-trailing-solidus")),this.tokenQueue.push(e);}_emitCurrentCharacterToken(){this.currentCharacterToken&&(this.tokenQueue.push(this.currentCharacterToken),this.currentCharacterToken=null);}_emitEOFToken(){this._createEOFToken(),this._emitCurrentToken();}_appendCharToCurrentCharacterToken(e,t){this.currentCharacterToken&&this.currentCharacterToken.type!==e&&this._emitCurrentCharacterToken(),this.currentCharacterToken?this.currentCharacterToken.chars+=t:this._createCharacterToken(e,t);}_emitCodePoint(e){let t=ut.CHARACTER_TOKEN;it(e)?t=ut.WHITESPACE_CHARACTER_TOKEN:e===P.NULL&&(t=ut.NULL_CHARACTER_TOKEN),this._appendCharToCurrentCharacterToken(t,mt(e));}_emitSeveralCodePoints(e){for(let t=0;t<e.length;t++)this._emitCodePoint(e[t]);}_emitChars(e){this._appendCharToCurrentCharacterToken(ut.CHARACTER_TOKEN,e);}_matchNamedCharacterReference(e){let t=null,n=1,s=At(0,e);for(this.tempBuff.push(e);s>-1;){const e=g[s],r=e<7;r&&1&e&&(t=2&e?[g[++s],g[++s]]:[g[++s]],n=0);const i=this._consume();if(this.tempBuff.push(i),n++,i===P.EOF)break;s=r?4&e?At(s,i):-1:i===e?++s:-1;}for(;n--;)this.tempBuff.pop(),this._unconsume();return t}_isCharacterReferenceInAttribute(){return this.returnState===me||this.returnState===pe||this.returnState===Ae}_isCharacterReferenceAttributeQuirk(e){if(!e&&this._isCharacterReferenceInAttribute()){const e=this._consume();return this._unconsume(),e===P.EQUALS_SIGN||ht(e)}return !1}_flushCodePointsConsumedAsCharacterReference(){if(this._isCharacterReferenceInAttribute())for(let e=0;e<this.tempBuff.length;e++)this.currentAttr.value+=mt(this.tempBuff[e]);else this._emitSeveralCodePoints(this.tempBuff);this.tempBuff=[];}[F](e){this.preprocessor.dropParsedChunk(),e===P.LESS_THAN_SIGN?this.state=b:e===P.AMPERSAND?(this.returnState=F,this.state=qe):e===P.NULL?(this._err(a),this._emitCodePoint(e)):e===P.EOF?this._emitEOFToken():this._emitCodePoint(e);}[U](e){this.preprocessor.dropParsedChunk(),e===P.AMPERSAND?(this.returnState=U,this.state=qe):e===P.LESS_THAN_SIGN?this.state=v:e===P.NULL?(this._err(a),this._emitChars(n)):e===P.EOF?this._emitEOFToken():this._emitCodePoint(e);}[G](e){this.preprocessor.dropParsedChunk(),e===P.LESS_THAN_SIGN?this.state=Q:e===P.NULL?(this._err(a),this._emitChars(n)):e===P.EOF?this._emitEOFToken():this._emitCodePoint(e);}[B](e){this.preprocessor.dropParsedChunk(),e===P.LESS_THAN_SIGN?this.state=V:e===P.NULL?(this._err(a),this._emitChars(n)):e===P.EOF?this._emitEOFToken():this._emitCodePoint(e);}[K](e){this.preprocessor.dropParsedChunk(),e===P.NULL?(this._err(a),this._emitChars(n)):e===P.EOF?this._emitEOFToken():this._emitCodePoint(e);}[b](e){e===P.EXCLAMATION_MARK?this.state=Ce:e===P.SOLIDUS?this.state=x:Et(e)?(this._createStartTagToken(),this._reconsumeInState(y)):e===P.QUESTION_MARK?(this._err("unexpected-question-mark-instead-of-tag-name"),this._createCommentToken(),this._reconsumeInState(de)):e===P.EOF?(this._err(h),this._emitChars("<"),this._emitEOFToken()):(this._err(T),this._emitChars("<"),this._reconsumeInState(F));}[x](e){Et(e)?(this._createEndTagToken(),this._reconsumeInState(y)):e===P.GREATER_THAN_SIGN?(this._err("missing-end-tag-name"),this.state=F):e===P.EOF?(this._err(h),this._emitChars("</"),this._emitEOFToken()):(this._err(T),this._createCommentToken(),this._reconsumeInState(de));}[y](e){it(e)?this.state=he:e===P.SOLIDUS?this.state=Ne:e===P.GREATER_THAN_SIGN?(this.state=F,this._emitCurrentToken()):at(e)?this.currentToken.tagName+=pt(e):e===P.NULL?(this._err(a),this.currentToken.tagName+=n):e===P.EOF?(this._err(c),this._emitEOFToken()):this.currentToken.tagName+=mt(e);}[v](e){e===P.SOLIDUS?(this.tempBuff=[],this.state=Y):(this._emitChars("<"),this._reconsumeInState(U));}[Y](e){Et(e)?(this._createEndTagToken(),this._reconsumeInState(w)):(this._emitChars("</"),this._reconsumeInState(U));}[w](e){if(at(e))this.currentToken.tagName+=pt(e),this.tempBuff.push(e);else if(Tt(e))this.currentToken.tagName+=mt(e),this.tempBuff.push(e);else {if(this.lastStartTagName===this.currentToken.tagName){if(it(e))return void(this.state=he);if(e===P.SOLIDUS)return void(this.state=Ne);if(e===P.GREATER_THAN_SIGN)return this.state=F,void this._emitCurrentToken()}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState(U);}}[Q](e){e===P.SOLIDUS?(this.tempBuff=[],this.state=X):(this._emitChars("<"),this._reconsumeInState(G));}[X](e){Et(e)?(this._createEndTagToken(),this._reconsumeInState(W)):(this._emitChars("</"),this._reconsumeInState(G));}[W](e){if(at(e))this.currentToken.tagName+=pt(e),this.tempBuff.push(e);else if(Tt(e))this.currentToken.tagName+=mt(e),this.tempBuff.push(e);else {if(this.lastStartTagName===this.currentToken.tagName){if(it(e))return void(this.state=he);if(e===P.SOLIDUS)return void(this.state=Ne);if(e===P.GREATER_THAN_SIGN)return this._emitCurrentToken(),void(this.state=F)}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState(G);}}[V](e){e===P.SOLIDUS?(this.tempBuff=[],this.state=j):e===P.EXCLAMATION_MARK?(this.state=q,this._emitChars("<!")):(this._emitChars("<"),this._reconsumeInState(B));}[j](e){Et(e)?(this._createEndTagToken(),this._reconsumeInState(z)):(this._emitChars("</"),this._reconsumeInState(B));}[z](e){if(at(e))this.currentToken.tagName+=pt(e),this.tempBuff.push(e);else if(Tt(e))this.currentToken.tagName+=mt(e),this.tempBuff.push(e);else {if(this.lastStartTagName===this.currentToken.tagName){if(it(e))return void(this.state=he);if(e===P.SOLIDUS)return void(this.state=Ne);if(e===P.GREATER_THAN_SIGN)return this._emitCurrentToken(),void(this.state=F)}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState(B);}}[q](e){e===P.HYPHEN_MINUS?(this.state=J,this._emitChars("-")):this._reconsumeInState(B);}[J](e){e===P.HYPHEN_MINUS?(this.state=ee,this._emitChars("-")):this._reconsumeInState(B);}[Z](e){e===P.HYPHEN_MINUS?(this.state=$,this._emitChars("-")):e===P.LESS_THAN_SIGN?this.state=te:e===P.NULL?(this._err(a),this._emitChars(n)):e===P.EOF?(this._err(O),this._emitEOFToken()):this._emitCodePoint(e);}[$](e){e===P.HYPHEN_MINUS?(this.state=ee,this._emitChars("-")):e===P.LESS_THAN_SIGN?this.state=te:e===P.NULL?(this._err(a),this.state=Z,this._emitChars(n)):e===P.EOF?(this._err(O),this._emitEOFToken()):(this.state=Z,this._emitCodePoint(e));}[ee](e){e===P.HYPHEN_MINUS?this._emitChars("-"):e===P.LESS_THAN_SIGN?this.state=te:e===P.GREATER_THAN_SIGN?(this.state=B,this._emitChars(">")):e===P.NULL?(this._err(a),this.state=Z,this._emitChars(n)):e===P.EOF?(this._err(O),this._emitEOFToken()):(this.state=Z,this._emitCodePoint(e));}[te](e){e===P.SOLIDUS?(this.tempBuff=[],this.state=ne):Et(e)?(this.tempBuff=[],this._emitChars("<"),this._reconsumeInState(re)):(this._emitChars("<"),this._reconsumeInState(Z));}[ne](e){Et(e)?(this._createEndTagToken(),this._reconsumeInState(se)):(this._emitChars("</"),this._reconsumeInState(Z));}[se](e){if(at(e))this.currentToken.tagName+=pt(e),this.tempBuff.push(e);else if(Tt(e))this.currentToken.tagName+=mt(e),this.tempBuff.push(e);else {if(this.lastStartTagName===this.currentToken.tagName){if(it(e))return void(this.state=he);if(e===P.SOLIDUS)return void(this.state=Ne);if(e===P.GREATER_THAN_SIGN)return this._emitCurrentToken(),void(this.state=F)}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState(Z);}}[re](e){it(e)||e===P.SOLIDUS||e===P.GREATER_THAN_SIGN?(this.state=this._isTempBufferEqualToScriptString()?ie:Z,this._emitCodePoint(e)):at(e)?(this.tempBuff.push(lt(e)),this._emitCodePoint(e)):Tt(e)?(this.tempBuff.push(e),this._emitCodePoint(e)):this._reconsumeInState(Z);}[ie](e){e===P.HYPHEN_MINUS?(this.state=oe,this._emitChars("-")):e===P.LESS_THAN_SIGN?(this.state=Te,this._emitChars("<")):e===P.NULL?(this._err(a),this._emitChars(n)):e===P.EOF?(this._err(O),this._emitEOFToken()):this._emitCodePoint(e);}[oe](e){e===P.HYPHEN_MINUS?(this.state=ae,this._emitChars("-")):e===P.LESS_THAN_SIGN?(this.state=Te,this._emitChars("<")):e===P.NULL?(this._err(a),this.state=ie,this._emitChars(n)):e===P.EOF?(this._err(O),this._emitEOFToken()):(this.state=ie,this._emitCodePoint(e));}[ae](e){e===P.HYPHEN_MINUS?this._emitChars("-"):e===P.LESS_THAN_SIGN?(this.state=Te,this._emitChars("<")):e===P.GREATER_THAN_SIGN?(this.state=B,this._emitChars(">")):e===P.NULL?(this._err(a),this.state=ie,this._emitChars(n)):e===P.EOF?(this._err(O),this._emitEOFToken()):(this.state=ie,this._emitCodePoint(e));}[Te](e){e===P.SOLIDUS?(this.tempBuff=[],this.state=Ee,this._emitChars("/")):this._reconsumeInState(ie);}[Ee](e){it(e)||e===P.SOLIDUS||e===P.GREATER_THAN_SIGN?(this.state=this._isTempBufferEqualToScriptString()?Z:ie,this._emitCodePoint(e)):at(e)?(this.tempBuff.push(lt(e)),this._emitCodePoint(e)):Tt(e)?(this.tempBuff.push(e),this._emitCodePoint(e)):this._reconsumeInState(ie);}[he](e){it(e)||(e===P.SOLIDUS||e===P.GREATER_THAN_SIGN||e===P.EOF?this._reconsumeInState(_e):e===P.EQUALS_SIGN?(this._err("unexpected-equals-sign-before-attribute-name"),this._createAttr("="),this.state=ce):(this._createAttr(""),this._reconsumeInState(ce)));}[ce](e){it(e)||e===P.SOLIDUS||e===P.GREATER_THAN_SIGN||e===P.EOF?(this._leaveAttrName(_e),this._unconsume()):e===P.EQUALS_SIGN?this._leaveAttrName(le):at(e)?this.currentAttr.name+=pt(e):e===P.QUOTATION_MARK||e===P.APOSTROPHE||e===P.LESS_THAN_SIGN?(this._err("unexpected-character-in-attribute-name"),this.currentAttr.name+=mt(e)):e===P.NULL?(this._err(a),this.currentAttr.name+=n):this.currentAttr.name+=mt(e);}[_e](e){it(e)||(e===P.SOLIDUS?this.state=Ne:e===P.EQUALS_SIGN?this.state=le:e===P.GREATER_THAN_SIGN?(this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(c),this._emitEOFToken()):(this._createAttr(""),this._reconsumeInState(ce)));}[le](e){it(e)||(e===P.QUOTATION_MARK?this.state=me:e===P.APOSTROPHE?this.state=pe:e===P.GREATER_THAN_SIGN?(this._err("missing-attribute-value"),this.state=F,this._emitCurrentToken()):this._reconsumeInState(Ae));}[me](e){e===P.QUOTATION_MARK?this.state=ue:e===P.AMPERSAND?(this.returnState=me,this.state=qe):e===P.NULL?(this._err(a),this.currentAttr.value+=n):e===P.EOF?(this._err(c),this._emitEOFToken()):this.currentAttr.value+=mt(e);}[pe](e){e===P.APOSTROPHE?this.state=ue:e===P.AMPERSAND?(this.returnState=pe,this.state=qe):e===P.NULL?(this._err(a),this.currentAttr.value+=n):e===P.EOF?(this._err(c),this._emitEOFToken()):this.currentAttr.value+=mt(e);}[Ae](e){it(e)?this._leaveAttrValue(he):e===P.AMPERSAND?(this.returnState=Ae,this.state=qe):e===P.GREATER_THAN_SIGN?(this._leaveAttrValue(F),this._emitCurrentToken()):e===P.NULL?(this._err(a),this.currentAttr.value+=n):e===P.QUOTATION_MARK||e===P.APOSTROPHE||e===P.LESS_THAN_SIGN||e===P.EQUALS_SIGN||e===P.GRAVE_ACCENT?(this._err("unexpected-character-in-unquoted-attribute-value"),this.currentAttr.value+=mt(e)):e===P.EOF?(this._err(c),this._emitEOFToken()):this.currentAttr.value+=mt(e);}[ue](e){it(e)?this._leaveAttrValue(he):e===P.SOLIDUS?this._leaveAttrValue(Ne):e===P.GREATER_THAN_SIGN?(this._leaveAttrValue(F),this._emitCurrentToken()):e===P.EOF?(this._err(c),this._emitEOFToken()):(this._err("missing-whitespace-between-attributes"),this._reconsumeInState(he));}[Ne](e){e===P.GREATER_THAN_SIGN?(this.currentToken.selfClosing=!0,this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(c),this._emitEOFToken()):(this._err("unexpected-solidus-in-tag"),this._reconsumeInState(he));}[de](e){e===P.GREATER_THAN_SIGN?(this.state=F,this._emitCurrentToken()):e===P.EOF?(this._emitCurrentToken(),this._emitEOFToken()):e===P.NULL?(this._err(a),this.currentToken.data+=n):this.currentToken.data+=mt(e);}[Ce](e){this._consumeSequenceIfMatch(H.DASH_DASH_STRING,e,!0)?(this._createCommentToken(),this.state=Oe):this._consumeSequenceIfMatch(H.DOCTYPE_STRING,e,!1)?this.state=He:this._consumeSequenceIfMatch(H.CDATA_START_STRING,e,!0)?this.allowCDATA?this.state=Ve:(this._err("cdata-in-html-content"),this._createCommentToken(),this.currentToken.data="[CDATA[",this.state=de):this._ensureHibernation()||(this._err("incorrectly-opened-comment"),this._createCommentToken(),this._reconsumeInState(de));}[Oe](e){e===P.HYPHEN_MINUS?this.state=fe:e===P.GREATER_THAN_SIGN?(this._err(S),this.state=F,this._emitCurrentToken()):this._reconsumeInState(Se);}[fe](e){e===P.HYPHEN_MINUS?this.state=ge:e===P.GREATER_THAN_SIGN?(this._err(S),this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(R),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="-",this._reconsumeInState(Se));}[Se](e){e===P.HYPHEN_MINUS?this.state=Me:e===P.LESS_THAN_SIGN?(this.currentToken.data+="<",this.state=Re):e===P.NULL?(this._err(a),this.currentToken.data+=n):e===P.EOF?(this._err(R),this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.data+=mt(e);}[Re](e){e===P.EXCLAMATION_MARK?(this.currentToken.data+="!",this.state=Ie):e===P.LESS_THAN_SIGN?this.currentToken.data+="!":this._reconsumeInState(Se);}[Ie](e){e===P.HYPHEN_MINUS?this.state=Le:this._reconsumeInState(Se);}[Le](e){e===P.HYPHEN_MINUS?this.state=ke:this._reconsumeInState(Me);}[ke](e){e!==P.GREATER_THAN_SIGN&&e!==P.EOF&&this._err("nested-comment"),this._reconsumeInState(ge);}[Me](e){e===P.HYPHEN_MINUS?this.state=ge:e===P.EOF?(this._err(R),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="-",this._reconsumeInState(Se));}[ge](e){e===P.GREATER_THAN_SIGN?(this.state=F,this._emitCurrentToken()):e===P.EXCLAMATION_MARK?this.state=Pe:e===P.HYPHEN_MINUS?this.currentToken.data+="-":e===P.EOF?(this._err(R),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="--",this._reconsumeInState(Se));}[Pe](e){e===P.HYPHEN_MINUS?(this.currentToken.data+="--!",this.state=Me):e===P.GREATER_THAN_SIGN?(this._err("incorrectly-closed-comment"),this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(R),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="--!",this._reconsumeInState(Se));}[He](e){it(e)?this.state=De:e===P.GREATER_THAN_SIGN?this._reconsumeInState(De):e===P.EOF?(this._err(f),this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err("missing-whitespace-before-doctype-name"),this._reconsumeInState(De));}[De](e){it(e)||(at(e)?(this._createDoctypeToken(pt(e)),this.state=Fe):e===P.NULL?(this._err(a),this._createDoctypeToken(n),this.state=Fe):e===P.GREATER_THAN_SIGN?(this._err("missing-doctype-name"),this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=F):e===P.EOF?(this._err(f),this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._createDoctypeToken(mt(e)),this.state=Fe));}[Fe](e){it(e)?this.state=Ue:e===P.GREATER_THAN_SIGN?(this.state=F,this._emitCurrentToken()):at(e)?this.currentToken.name+=pt(e):e===P.NULL?(this._err(a),this.currentToken.name+=n):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.name+=mt(e);}[Ue](e){it(e)||(e===P.GREATER_THAN_SIGN?(this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this._consumeSequenceIfMatch(H.PUBLIC_STRING,e,!1)?this.state=Ge:this._consumeSequenceIfMatch(H.SYSTEM_STRING,e,!1)?this.state=ve:this._ensureHibernation()||(this._err("invalid-character-sequence-after-doctype-name"),this.currentToken.forceQuirks=!0,this._reconsumeInState(We)));}[Ge](e){it(e)?this.state=Be:e===P.QUOTATION_MARK?(this._err(_),this.currentToken.publicId="",this.state=Ke):e===P.APOSTROPHE?(this._err(_),this.currentToken.publicId="",this.state=be):e===P.GREATER_THAN_SIGN?(this._err(u),this.currentToken.forceQuirks=!0,this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(p),this.currentToken.forceQuirks=!0,this._reconsumeInState(We));}[Be](e){it(e)||(e===P.QUOTATION_MARK?(this.currentToken.publicId="",this.state=Ke):e===P.APOSTROPHE?(this.currentToken.publicId="",this.state=be):e===P.GREATER_THAN_SIGN?(this._err(u),this.currentToken.forceQuirks=!0,this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(p),this.currentToken.forceQuirks=!0,this._reconsumeInState(We)));}[Ke](e){e===P.QUOTATION_MARK?this.state=xe:e===P.NULL?(this._err(a),this.currentToken.publicId+=n):e===P.GREATER_THAN_SIGN?(this._err(d),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=F):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.publicId+=mt(e);}[be](e){e===P.APOSTROPHE?this.state=xe:e===P.NULL?(this._err(a),this.currentToken.publicId+=n):e===P.GREATER_THAN_SIGN?(this._err(d),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=F):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.publicId+=mt(e);}[xe](e){it(e)?this.state=ye:e===P.GREATER_THAN_SIGN?(this.state=F,this._emitCurrentToken()):e===P.QUOTATION_MARK?(this._err(l),this.currentToken.systemId="",this.state=we):e===P.APOSTROPHE?(this._err(l),this.currentToken.systemId="",this.state=Qe):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(A),this.currentToken.forceQuirks=!0,this._reconsumeInState(We));}[ye](e){it(e)||(e===P.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=F):e===P.QUOTATION_MARK?(this.currentToken.systemId="",this.state=we):e===P.APOSTROPHE?(this.currentToken.systemId="",this.state=Qe):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(A),this.currentToken.forceQuirks=!0,this._reconsumeInState(We)));}[ve](e){it(e)?this.state=Ye:e===P.QUOTATION_MARK?(this._err(m),this.currentToken.systemId="",this.state=we):e===P.APOSTROPHE?(this._err(m),this.currentToken.systemId="",this.state=Qe):e===P.GREATER_THAN_SIGN?(this._err(N),this.currentToken.forceQuirks=!0,this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(A),this.currentToken.forceQuirks=!0,this._reconsumeInState(We));}[Ye](e){it(e)||(e===P.QUOTATION_MARK?(this.currentToken.systemId="",this.state=we):e===P.APOSTROPHE?(this.currentToken.systemId="",this.state=Qe):e===P.GREATER_THAN_SIGN?(this._err(N),this.currentToken.forceQuirks=!0,this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(A),this.currentToken.forceQuirks=!0,this._reconsumeInState(We)));}[we](e){e===P.QUOTATION_MARK?this.state=Xe:e===P.NULL?(this._err(a),this.currentToken.systemId+=n):e===P.GREATER_THAN_SIGN?(this._err(C),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=F):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.systemId+=mt(e);}[Qe](e){e===P.APOSTROPHE?this.state=Xe:e===P.NULL?(this._err(a),this.currentToken.systemId+=n):e===P.GREATER_THAN_SIGN?(this._err(C),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=F):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.systemId+=mt(e);}[Xe](e){it(e)||(e===P.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=F):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err("unexpected-character-after-doctype-system-identifier"),this._reconsumeInState(We)));}[We](e){e===P.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=F):e===P.NULL?this._err(a):e===P.EOF&&(this._emitCurrentToken(),this._emitEOFToken());}[Ve](e){e===P.RIGHT_SQUARE_BRACKET?this.state=je:e===P.EOF?(this._err("eof-in-cdata"),this._emitEOFToken()):this._emitCodePoint(e);}[je](e){e===P.RIGHT_SQUARE_BRACKET?this.state=ze:(this._emitChars("]"),this._reconsumeInState(Ve));}[ze](e){e===P.GREATER_THAN_SIGN?this.state=F:e===P.RIGHT_SQUARE_BRACKET?this._emitChars("]"):(this._emitChars("]]"),this._reconsumeInState(Ve));}[qe](e){this.tempBuff=[P.AMPERSAND],e===P.NUMBER_SIGN?(this.tempBuff.push(e),this.state=$e):ht(e)?this._reconsumeInState(Je):(this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState));}[Je](e){const t=this._matchNamedCharacterReference(e);if(this._ensureHibernation())this.tempBuff=[P.AMPERSAND];else if(t){const e=this.tempBuff[this.tempBuff.length-1]===P.SEMICOLON;this._isCharacterReferenceAttributeQuirk(e)||(e||this._errOnNextCodePoint(E),this.tempBuff=t),this._flushCodePointsConsumedAsCharacterReference(),this.state=this.returnState;}else this._flushCodePointsConsumedAsCharacterReference(),this.state=Ze;}[Ze](e){ht(e)?this._isCharacterReferenceInAttribute()?this.currentAttr.value+=mt(e):this._emitCodePoint(e):(e===P.SEMICOLON&&this._err("unknown-named-character-reference"),this._reconsumeInState(this.returnState));}[$e](e){this.charRefCode=0,e===P.LATIN_SMALL_X||e===P.LATIN_CAPITAL_X?(this.tempBuff.push(e),this.state=et):this._reconsumeInState(tt);}[et](e){!function(e){return ot(e)||ct(e)||_t(e)}(e)?(this._err(I),this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState)):this._reconsumeInState(nt);}[tt](e){ot(e)?this._reconsumeInState(st):(this._err(I),this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState));}[nt](e){ct(e)?this.charRefCode=16*this.charRefCode+e-55:_t(e)?this.charRefCode=16*this.charRefCode+e-87:ot(e)?this.charRefCode=16*this.charRefCode+e-48:e===P.SEMICOLON?this.state=rt:(this._err(E),this._reconsumeInState(rt));}[st](e){ot(e)?this.charRefCode=10*this.charRefCode+e-48:e===P.SEMICOLON?this.state=rt:(this._err(E),this._reconsumeInState(rt));}[rt](){if(this.charRefCode===P.NULL)this._err("null-character-reference"),this.charRefCode=P.REPLACEMENT_CHARACTER;else if(this.charRefCode>1114111)this._err("character-reference-outside-unicode-range"),this.charRefCode=P.REPLACEMENT_CHARACTER;else if(r(this.charRefCode))this._err("surrogate-character-reference"),this.charRefCode=P.REPLACEMENT_CHARACTER;else if(o(this.charRefCode))this._err("noncharacter-character-reference");else if(i(this.charRefCode)||this.charRefCode===P.CARRIAGE_RETURN){this._err("control-character-reference");const e=D[this.charRefCode];e&&(this.charRefCode=e);}this.tempBuff=[this.charRefCode],this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState);}}ut.CHARACTER_TOKEN="CHARACTER_TOKEN",ut.NULL_CHARACTER_TOKEN="NULL_CHARACTER_TOKEN",ut.WHITESPACE_CHARACTER_TOKEN="WHITESPACE_CHARACTER_TOKEN",ut.START_TAG_TOKEN="START_TAG_TOKEN",ut.END_TAG_TOKEN="END_TAG_TOKEN",ut.COMMENT_TOKEN="COMMENT_TOKEN",ut.DOCTYPE_TOKEN="DOCTYPE_TOKEN",ut.EOF_TOKEN="EOF_TOKEN",ut.HIBERNATION_TOKEN="HIBERNATION_TOKEN",ut.MODE={DATA:F,RCDATA:U,RAWTEXT:G,SCRIPT_DATA:B,PLAINTEXT:K},ut.getTokenAttr=function(e,t){for(let n=e.attrs.length-1;n>=0;n--)if(e.attrs[n].name===t)return e.attrs[n].value;return null};var Nt=ut;function dt(e,t,n){return e(n={path:t,exports:{},require:function(e,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==t&&n.path)}},n.exports),n.exports}var Ct=dt((function(e,t){const n=t.NAMESPACES={HTML:"http://www.w3.org/1999/xhtml",MATHML:"http://www.w3.org/1998/Math/MathML",SVG:"http://www.w3.org/2000/svg",XLINK:"http://www.w3.org/1999/xlink",XML:"http://www.w3.org/XML/1998/namespace",XMLNS:"http://www.w3.org/2000/xmlns/"};t.ATTRS={TYPE:"type",ACTION:"action",ENCODING:"encoding",PROMPT:"prompt",NAME:"name",COLOR:"color",FACE:"face",SIZE:"size"},t.DOCUMENT_MODE={NO_QUIRKS:"no-quirks",QUIRKS:"quirks",LIMITED_QUIRKS:"limited-quirks"};const s=t.TAG_NAMES={A:"a",ADDRESS:"address",ANNOTATION_XML:"annotation-xml",APPLET:"applet",AREA:"area",ARTICLE:"article",ASIDE:"aside",B:"b",BASE:"base",BASEFONT:"basefont",BGSOUND:"bgsound",BIG:"big",BLOCKQUOTE:"blockquote",BODY:"body",BR:"br",BUTTON:"button",CAPTION:"caption",CENTER:"center",CODE:"code",COL:"col",COLGROUP:"colgroup",DD:"dd",DESC:"desc",DETAILS:"details",DIALOG:"dialog",DIR:"dir",DIV:"div",DL:"dl",DT:"dt",EM:"em",EMBED:"embed",FIELDSET:"fieldset",FIGCAPTION:"figcaption",FIGURE:"figure",FONT:"font",FOOTER:"footer",FOREIGN_OBJECT:"foreignObject",FORM:"form",FRAME:"frame",FRAMESET:"frameset",H1:"h1",H2:"h2",H3:"h3",H4:"h4",H5:"h5",H6:"h6",HEAD:"head",HEADER:"header",HGROUP:"hgroup",HR:"hr",HTML:"html",I:"i",IMG:"img",IMAGE:"image",INPUT:"input",IFRAME:"iframe",KEYGEN:"keygen",LABEL:"label",LI:"li",LINK:"link",LISTING:"listing",MAIN:"main",MALIGNMARK:"malignmark",MARQUEE:"marquee",MATH:"math",MENU:"menu",META:"meta",MGLYPH:"mglyph",MI:"mi",MO:"mo",MN:"mn",MS:"ms",MTEXT:"mtext",NAV:"nav",NOBR:"nobr",NOFRAMES:"noframes",NOEMBED:"noembed",NOSCRIPT:"noscript",OBJECT:"object",OL:"ol",OPTGROUP:"optgroup",OPTION:"option",P:"p",PARAM:"param",PLAINTEXT:"plaintext",PRE:"pre",RB:"rb",RP:"rp",RT:"rt",RTC:"rtc",RUBY:"ruby",S:"s",SCRIPT:"script",SECTION:"section",SELECT:"select",SOURCE:"source",SMALL:"small",SPAN:"span",STRIKE:"strike",STRONG:"strong",STYLE:"style",SUB:"sub",SUMMARY:"summary",SUP:"sup",TABLE:"table",TBODY:"tbody",TEMPLATE:"template",TEXTAREA:"textarea",TFOOT:"tfoot",TD:"td",TH:"th",THEAD:"thead",TITLE:"title",TR:"tr",TRACK:"track",TT:"tt",U:"u",UL:"ul",SVG:"svg",VAR:"var",WBR:"wbr",XMP:"xmp"};t.SPECIAL_ELEMENTS={[n.HTML]:{[s.ADDRESS]:!0,[s.APPLET]:!0,[s.AREA]:!0,[s.ARTICLE]:!0,[s.ASIDE]:!0,[s.BASE]:!0,[s.BASEFONT]:!0,[s.BGSOUND]:!0,[s.BLOCKQUOTE]:!0,[s.BODY]:!0,[s.BR]:!0,[s.BUTTON]:!0,[s.CAPTION]:!0,[s.CENTER]:!0,[s.COL]:!0,[s.COLGROUP]:!0,[s.DD]:!0,[s.DETAILS]:!0,[s.DIR]:!0,[s.DIV]:!0,[s.DL]:!0,[s.DT]:!0,[s.EMBED]:!0,[s.FIELDSET]:!0,[s.FIGCAPTION]:!0,[s.FIGURE]:!0,[s.FOOTER]:!0,[s.FORM]:!0,[s.FRAME]:!0,[s.FRAMESET]:!0,[s.H1]:!0,[s.H2]:!0,[s.H3]:!0,[s.H4]:!0,[s.H5]:!0,[s.H6]:!0,[s.HEAD]:!0,[s.HEADER]:!0,[s.HGROUP]:!0,[s.HR]:!0,[s.HTML]:!0,[s.IFRAME]:!0,[s.IMG]:!0,[s.INPUT]:!0,[s.LI]:!0,[s.LINK]:!0,[s.LISTING]:!0,[s.MAIN]:!0,[s.MARQUEE]:!0,[s.MENU]:!0,[s.META]:!0,[s.NAV]:!0,[s.NOEMBED]:!0,[s.NOFRAMES]:!0,[s.NOSCRIPT]:!0,[s.OBJECT]:!0,[s.OL]:!0,[s.P]:!0,[s.PARAM]:!0,[s.PLAINTEXT]:!0,[s.PRE]:!0,[s.SCRIPT]:!0,[s.SECTION]:!0,[s.SELECT]:!0,[s.SOURCE]:!0,[s.STYLE]:!0,[s.SUMMARY]:!0,[s.TABLE]:!0,[s.TBODY]:!0,[s.TD]:!0,[s.TEMPLATE]:!0,[s.TEXTAREA]:!0,[s.TFOOT]:!0,[s.TH]:!0,[s.THEAD]:!0,[s.TITLE]:!0,[s.TR]:!0,[s.TRACK]:!0,[s.UL]:!0,[s.WBR]:!0,[s.XMP]:!0},[n.MATHML]:{[s.MI]:!0,[s.MO]:!0,[s.MN]:!0,[s.MS]:!0,[s.MTEXT]:!0,[s.ANNOTATION_XML]:!0},[n.SVG]:{[s.TITLE]:!0,[s.FOREIGN_OBJECT]:!0,[s.DESC]:!0}};}));const Ot=Ct.TAG_NAMES,ft=Ct.NAMESPACES;function St(e){switch(e.length){case 1:return e===Ot.P;case 2:return e===Ot.RB||e===Ot.RP||e===Ot.RT||e===Ot.DD||e===Ot.DT||e===Ot.LI;case 3:return e===Ot.RTC;case 6:return e===Ot.OPTION;case 8:return e===Ot.OPTGROUP}return !1}function Rt(e){switch(e.length){case 1:return e===Ot.P;case 2:return e===Ot.RB||e===Ot.RP||e===Ot.RT||e===Ot.DD||e===Ot.DT||e===Ot.LI||e===Ot.TD||e===Ot.TH||e===Ot.TR;case 3:return e===Ot.RTC;case 5:return e===Ot.TBODY||e===Ot.TFOOT||e===Ot.THEAD;case 6:return e===Ot.OPTION;case 7:return e===Ot.CAPTION;case 8:return e===Ot.OPTGROUP||e===Ot.COLGROUP}return !1}function It(e,t){switch(e.length){case 2:if(e===Ot.TD||e===Ot.TH)return t===ft.HTML;if(e===Ot.MI||e===Ot.MO||e===Ot.MN||e===Ot.MS)return t===ft.MATHML;break;case 4:if(e===Ot.HTML)return t===ft.HTML;if(e===Ot.DESC)return t===ft.SVG;break;case 5:if(e===Ot.TABLE)return t===ft.HTML;if(e===Ot.MTEXT)return t===ft.MATHML;if(e===Ot.TITLE)return t===ft.SVG;break;case 6:return (e===Ot.APPLET||e===Ot.OBJECT)&&t===ft.HTML;case 7:return (e===Ot.CAPTION||e===Ot.MARQUEE)&&t===ft.HTML;case 8:return e===Ot.TEMPLATE&&t===ft.HTML;case 13:return e===Ot.FOREIGN_OBJECT&&t===ft.SVG;case 14:return e===Ot.ANNOTATION_XML&&t===ft.MATHML}return !1}class Lt{constructor(e){this.length=0,this.entries=[],this.treeAdapter=e,this.bookmark=null;}_getNoahArkConditionCandidates(e){const t=[];if(this.length>=3){const n=this.treeAdapter.getAttrList(e).length,s=this.treeAdapter.getTagName(e),r=this.treeAdapter.getNamespaceURI(e);for(let e=this.length-1;e>=0;e--){const i=this.entries[e];if(i.type===Lt.MARKER_ENTRY)break;const o=i.element,a=this.treeAdapter.getAttrList(o);this.treeAdapter.getTagName(o)===s&&this.treeAdapter.getNamespaceURI(o)===r&&a.length===n&&t.push({idx:e,attrs:a});}}return t.length<3?[]:t}_ensureNoahArkCondition(e){const t=this._getNoahArkConditionCandidates(e);let n=t.length;if(n){const s=this.treeAdapter.getAttrList(e),r=s.length,i=Object.create(null);for(let e=0;e<r;e++){const t=s[e];i[t.name]=t.value;}for(let e=0;e<r;e++)for(let s=0;s<n;s++){const r=t[s].attrs[e];if(i[r.name]!==r.value&&(t.splice(s,1),n--),t.length<3)return}for(let e=n-1;e>=2;e--)this.entries.splice(t[e].idx,1),this.length--;}}insertMarker(){this.entries.push({type:Lt.MARKER_ENTRY}),this.length++;}pushElement(e,t){this._ensureNoahArkCondition(e),this.entries.push({type:Lt.ELEMENT_ENTRY,element:e,token:t}),this.length++;}insertElementAfterBookmark(e,t){let n=this.length-1;for(;n>=0&&this.entries[n]!==this.bookmark;n--);this.entries.splice(n+1,0,{type:Lt.ELEMENT_ENTRY,element:e,token:t}),this.length++;}removeEntry(e){for(let t=this.length-1;t>=0;t--)if(this.entries[t]===e){this.entries.splice(t,1),this.length--;break}}clearToLastMarker(){for(;this.length;){const e=this.entries.pop();if(this.length--,e.type===Lt.MARKER_ENTRY)break}}getElementEntryInScopeWithTagName(e){for(let t=this.length-1;t>=0;t--){const n=this.entries[t];if(n.type===Lt.MARKER_ENTRY)return null;if(this.treeAdapter.getTagName(n.element)===e)return n}return null}getElementEntry(e){for(let t=this.length-1;t>=0;t--){const n=this.entries[t];if(n.type===Lt.ELEMENT_ENTRY&&n.element===e)return n}return null}}Lt.MARKER_ENTRY="MARKER_ENTRY",Lt.ELEMENT_ENTRY="ELEMENT_ENTRY";var kt=Lt;class Mt{constructor(e){const t={},n=this._getOverriddenMethods(this,t);for(const s of Object.keys(n))"function"==typeof n[s]&&(t[s]=e[s],e[s]=n[s]);}_getOverriddenMethods(){throw new Error("Not implemented")}}Mt.install=function(e,t,n){e.__mixins||(e.__mixins=[]);for(let n=0;n<e.__mixins.length;n++)if(e.__mixins[n].constructor===t)return e.__mixins[n];const s=new t(e,n);return e.__mixins.push(s),s};var gt=Mt,Pt=class extends gt{constructor(e){super(e),this.preprocessor=e,this.isEol=!1,this.lineStartPos=0,this.droppedBufferSize=0,this.offset=0,this.col=0,this.line=1;}_getOverriddenMethods(e,t){return {advance(){const n=this.pos+1,s=this.html[n];return e.isEol&&(e.isEol=!1,e.line++,e.lineStartPos=n),("\n"===s||"\r"===s&&"\n"!==this.html[n+1])&&(e.isEol=!0),e.col=n-e.lineStartPos+1,e.offset=e.droppedBufferSize+n,t.advance.call(this)},retreat(){t.retreat.call(this),e.isEol=!1,e.col=this.pos-e.lineStartPos+1;},dropParsedChunk(){const n=this.pos;t.dropParsedChunk.call(this);const s=n-this.pos;e.lineStartPos-=s,e.droppedBufferSize+=s,e.offset=e.droppedBufferSize+this.pos;}}}},Ht=class extends gt{constructor(e){super(e),this.tokenizer=e,this.posTracker=gt.install(e.preprocessor,Pt),this.currentAttrLocation=null,this.ctLoc=null;}_getCurrentLocation(){return {startLine:this.posTracker.line,startCol:this.posTracker.col,startOffset:this.posTracker.offset,endLine:-1,endCol:-1,endOffset:-1}}_attachCurrentAttrLocationInfo(){this.currentAttrLocation.endLine=this.posTracker.line,this.currentAttrLocation.endCol=this.posTracker.col,this.currentAttrLocation.endOffset=this.posTracker.offset;const e=this.tokenizer.currentToken,t=this.tokenizer.currentAttr;e.location.attrs||(e.location.attrs=Object.create(null)),e.location.attrs[t.name]=this.currentAttrLocation;}_getOverriddenMethods(e,t){const n={_createStartTagToken(){t._createStartTagToken.call(this),this.currentToken.location=e.ctLoc;},_createEndTagToken(){t._createEndTagToken.call(this),this.currentToken.location=e.ctLoc;},_createCommentToken(){t._createCommentToken.call(this),this.currentToken.location=e.ctLoc;},_createDoctypeToken(n){t._createDoctypeToken.call(this,n),this.currentToken.location=e.ctLoc;},_createCharacterToken(n,s){t._createCharacterToken.call(this,n,s),this.currentCharacterToken.location=e.ctLoc;},_createEOFToken(){t._createEOFToken.call(this),this.currentToken.location=e._getCurrentLocation();},_createAttr(n){t._createAttr.call(this,n),e.currentAttrLocation=e._getCurrentLocation();},_leaveAttrName(n){t._leaveAttrName.call(this,n),e._attachCurrentAttrLocationInfo();},_leaveAttrValue(n){t._leaveAttrValue.call(this,n),e._attachCurrentAttrLocationInfo();},_emitCurrentToken(){const n=this.currentToken.location;this.currentCharacterToken&&(this.currentCharacterToken.location.endLine=n.startLine,this.currentCharacterToken.location.endCol=n.startCol,this.currentCharacterToken.location.endOffset=n.startOffset),this.currentToken.type===Nt.EOF_TOKEN?(n.endLine=n.startLine,n.endCol=n.startCol,n.endOffset=n.startOffset):(n.endLine=e.posTracker.line,n.endCol=e.posTracker.col+1,n.endOffset=e.posTracker.offset+1),t._emitCurrentToken.call(this);},_emitCurrentCharacterToken(){const n=this.currentCharacterToken&&this.currentCharacterToken.location;n&&-1===n.endOffset&&(n.endLine=e.posTracker.line,n.endCol=e.posTracker.col,n.endOffset=e.posTracker.offset),t._emitCurrentCharacterToken.call(this);}};return Object.keys(Nt.MODE).forEach((s=>{const r=Nt.MODE[s];n[r]=function(n){e.ctLoc=e._getCurrentLocation(),t[r].call(this,n);};})),n}},Dt=class extends gt{constructor(e,t){super(e),this.onItemPop=t.onItemPop;}_getOverriddenMethods(e,t){return {pop(){e.onItemPop(this.current),t.pop.call(this);},popAllUpToHtmlElement(){for(let t=this.stackTop;t>0;t--)e.onItemPop(this.items[t]);t.popAllUpToHtmlElement.call(this);},remove(n){e.onItemPop(this.current),t.remove.call(this,n);}}}};const Ft=Ct.TAG_NAMES;var Ut=class extends gt{constructor(e){super(e),this.parser=e,this.treeAdapter=this.parser.treeAdapter,this.posTracker=null,this.lastStartTagToken=null,this.lastFosterParentingLocation=null,this.currentToken=null;}_setStartLocation(e){let t=null;this.lastStartTagToken&&(t=Object.assign({},this.lastStartTagToken.location),t.startTag=this.lastStartTagToken.location),this.treeAdapter.setNodeSourceCodeLocation(e,t);}_setEndLocation(e,t){if(this.treeAdapter.getNodeSourceCodeLocation(e)&&t.location){const n=t.location,s=this.treeAdapter.getTagName(e),r={};t.type===Nt.END_TAG_TOKEN&&s===t.tagName?(r.endTag=Object.assign({},n),r.endLine=n.endLine,r.endCol=n.endCol,r.endOffset=n.endOffset):(r.endLine=n.startLine,r.endCol=n.startCol,r.endOffset=n.startOffset),this.treeAdapter.updateNodeSourceCodeLocation(e,r);}}_getOverriddenMethods(e,t){return {_bootstrap(n,s){t._bootstrap.call(this,n,s),e.lastStartTagToken=null,e.lastFosterParentingLocation=null,e.currentToken=null;const r=gt.install(this.tokenizer,Ht);e.posTracker=r.posTracker,gt.install(this.openElements,Dt,{onItemPop:function(t){e._setEndLocation(t,e.currentToken);}});},_runParsingLoop(n){t._runParsingLoop.call(this,n);for(let t=this.openElements.stackTop;t>=0;t--)e._setEndLocation(this.openElements.items[t],e.currentToken);},_processTokenInForeignContent(n){e.currentToken=n,t._processTokenInForeignContent.call(this,n);},_processToken(n){if(e.currentToken=n,t._processToken.call(this,n),n.type===Nt.END_TAG_TOKEN&&(n.tagName===Ft.HTML||n.tagName===Ft.BODY&&this.openElements.hasInScope(Ft.BODY)))for(let t=this.openElements.stackTop;t>=0;t--){const s=this.openElements.items[t];if(this.treeAdapter.getTagName(s)===n.tagName){e._setEndLocation(s,n);break}}},_setDocumentType(e){t._setDocumentType.call(this,e);const n=this.treeAdapter.getChildNodes(this.document),s=n.length;for(let t=0;t<s;t++){const s=n[t];if(this.treeAdapter.isDocumentTypeNode(s)){this.treeAdapter.setNodeSourceCodeLocation(s,e.location);break}}},_attachElementToTree(n){e._setStartLocation(n),e.lastStartTagToken=null,t._attachElementToTree.call(this,n);},_appendElement(n,s){e.lastStartTagToken=n,t._appendElement.call(this,n,s);},_insertElement(n,s){e.lastStartTagToken=n,t._insertElement.call(this,n,s);},_insertTemplate(n){e.lastStartTagToken=n,t._insertTemplate.call(this,n);const s=this.treeAdapter.getTemplateContent(this.openElements.current);this.treeAdapter.setNodeSourceCodeLocation(s,null);},_insertFakeRootElement(){t._insertFakeRootElement.call(this),this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current,null);},_appendCommentNode(e,n){t._appendCommentNode.call(this,e,n);const s=this.treeAdapter.getChildNodes(n),r=s[s.length-1];this.treeAdapter.setNodeSourceCodeLocation(r,e.location);},_findFosterParentingLocation(){return e.lastFosterParentingLocation=t._findFosterParentingLocation.call(this),e.lastFosterParentingLocation},_insertCharacters(n){t._insertCharacters.call(this,n);const s=this._shouldFosterParentOnInsertion(),r=s&&e.lastFosterParentingLocation.parent||this.openElements.currentTmplContent||this.openElements.current,i=this.treeAdapter.getChildNodes(r),o=s&&e.lastFosterParentingLocation.beforeElement?i.indexOf(e.lastFosterParentingLocation.beforeElement)-1:i.length-1,a=i[o];if(this.treeAdapter.getNodeSourceCodeLocation(a)){const{endLine:e,endCol:t,endOffset:s}=n.location;this.treeAdapter.updateNodeSourceCodeLocation(a,{endLine:e,endCol:t,endOffset:s});}else this.treeAdapter.setNodeSourceCodeLocation(a,n.location);}}}},Gt=class extends gt{constructor(e,t){super(e),this.posTracker=null,this.onParseError=t.onParseError;}_setErrorLocation(e){e.startLine=e.endLine=this.posTracker.line,e.startCol=e.endCol=this.posTracker.col,e.startOffset=e.endOffset=this.posTracker.offset;}_reportError(e){const t={code:e,startLine:-1,startCol:-1,startOffset:-1,endLine:-1,endCol:-1,endOffset:-1};this._setErrorLocation(t),this.onParseError(t);}_getOverriddenMethods(e){return {_err(t){e._reportError(t);}}}},Bt=class extends Gt{constructor(e,t){super(e,t),this.posTracker=gt.install(e,Pt),this.lastErrOffset=-1;}_reportError(e){this.lastErrOffset!==this.posTracker.offset&&(this.lastErrOffset=this.posTracker.offset,super._reportError(e));}},Kt=class extends Gt{constructor(e,t){super(e,t);const n=gt.install(e.preprocessor,Bt,t);this.posTracker=n.posTracker;}},bt=class extends Gt{constructor(e,t){super(e,t),this.opts=t,this.ctLoc=null,this.locBeforeToken=!1;}_setErrorLocation(e){this.ctLoc&&(e.startLine=this.ctLoc.startLine,e.startCol=this.ctLoc.startCol,e.startOffset=this.ctLoc.startOffset,e.endLine=this.locBeforeToken?this.ctLoc.startLine:this.ctLoc.endLine,e.endCol=this.locBeforeToken?this.ctLoc.startCol:this.ctLoc.endCol,e.endOffset=this.locBeforeToken?this.ctLoc.startOffset:this.ctLoc.endOffset);}_getOverriddenMethods(e,t){return {_bootstrap(n,s){t._bootstrap.call(this,n,s),gt.install(this.tokenizer,Kt,e.opts),gt.install(this.tokenizer,Ht);},_processInputToken(n){e.ctLoc=n.location,t._processInputToken.call(this,n);},_err(t,n){e.locBeforeToken=n&&n.beforeToken,e._reportError(t);}}}},xt=dt((function(e,t){const{DOCUMENT_MODE:n}=Ct;t.createDocument=function(){return {nodeName:"#document",mode:n.NO_QUIRKS,childNodes:[]}},t.createDocumentFragment=function(){return {nodeName:"#document-fragment",childNodes:[]}},t.createElement=function(e,t,n){return {nodeName:e,tagName:e,attrs:n,namespaceURI:t,childNodes:[],parentNode:null}},t.createCommentNode=function(e){return {nodeName:"#comment",data:e,parentNode:null}};const s=function(e){return {nodeName:"#text",value:e,parentNode:null}},r=t.appendChild=function(e,t){e.childNodes.push(t),t.parentNode=e;},i=t.insertBefore=function(e,t,n){const s=e.childNodes.indexOf(n);e.childNodes.splice(s,0,t),t.parentNode=e;};t.setTemplateContent=function(e,t){e.content=t;},t.getTemplateContent=function(e){return e.content},t.setDocumentType=function(e,t,n,s){let i=null;for(let t=0;t<e.childNodes.length;t++)if("#documentType"===e.childNodes[t].nodeName){i=e.childNodes[t];break}i?(i.name=t,i.publicId=n,i.systemId=s):r(e,{nodeName:"#documentType",name:t,publicId:n,systemId:s});},t.setDocumentMode=function(e,t){e.mode=t;},t.getDocumentMode=function(e){return e.mode},t.detachNode=function(e){if(e.parentNode){const t=e.parentNode.childNodes.indexOf(e);e.parentNode.childNodes.splice(t,1),e.parentNode=null;}},t.insertText=function(e,t){if(e.childNodes.length){const n=e.childNodes[e.childNodes.length-1];if("#text"===n.nodeName)return void(n.value+=t)}r(e,s(t));},t.insertTextBefore=function(e,t,n){const r=e.childNodes[e.childNodes.indexOf(n)-1];r&&"#text"===r.nodeName?r.value+=t:i(e,s(t),n);},t.adoptAttributes=function(e,t){const n=[];for(let t=0;t<e.attrs.length;t++)n.push(e.attrs[t].name);for(let s=0;s<t.length;s++)-1===n.indexOf(t[s].name)&&e.attrs.push(t[s]);},t.getFirstChild=function(e){return e.childNodes[0]},t.getChildNodes=function(e){return e.childNodes},t.getParentNode=function(e){return e.parentNode},t.getAttrList=function(e){return e.attrs},t.getTagName=function(e){return e.tagName},t.getNamespaceURI=function(e){return e.namespaceURI},t.getTextNodeContent=function(e){return e.value},t.getCommentNodeContent=function(e){return e.data},t.getDocumentTypeNodeName=function(e){return e.name},t.getDocumentTypeNodePublicId=function(e){return e.publicId},t.getDocumentTypeNodeSystemId=function(e){return e.systemId},t.isTextNode=function(e){return "#text"===e.nodeName},t.isCommentNode=function(e){return "#comment"===e.nodeName},t.isDocumentTypeNode=function(e){return "#documentType"===e.nodeName},t.isElementNode=function(e){return !!e.tagName},t.setNodeSourceCodeLocation=function(e,t){e.sourceCodeLocation=t;},t.getNodeSourceCodeLocation=function(e){return e.sourceCodeLocation},t.updateNodeSourceCodeLocation=function(e,t){e.sourceCodeLocation=Object.assign(e.sourceCodeLocation,t);};}));const{DOCUMENT_MODE:yt}=Ct,vt="html",Yt=["+//silmaril//dtd html pro v0r11 19970101//","-//as//dtd html 3.0 aswedit + extensions//","-//advasoft ltd//dtd html 3.0 aswedit + extensions//","-//ietf//dtd html 2.0 level 1//","-//ietf//dtd html 2.0 level 2//","-//ietf//dtd html 2.0 strict level 1//","-//ietf//dtd html 2.0 strict level 2//","-//ietf//dtd html 2.0 strict//","-//ietf//dtd html 2.0//","-//ietf//dtd html 2.1e//","-//ietf//dtd html 3.0//","-//ietf//dtd html 3.2 final//","-//ietf//dtd html 3.2//","-//ietf//dtd html 3//","-//ietf//dtd html level 0//","-//ietf//dtd html level 1//","-//ietf//dtd html level 2//","-//ietf//dtd html level 3//","-//ietf//dtd html strict level 0//","-//ietf//dtd html strict level 1//","-//ietf//dtd html strict level 2//","-//ietf//dtd html strict level 3//","-//ietf//dtd html strict//","-//ietf//dtd html//","-//metrius//dtd metrius presentational//","-//microsoft//dtd internet explorer 2.0 html strict//","-//microsoft//dtd internet explorer 2.0 html//","-//microsoft//dtd internet explorer 2.0 tables//","-//microsoft//dtd internet explorer 3.0 html strict//","-//microsoft//dtd internet explorer 3.0 html//","-//microsoft//dtd internet explorer 3.0 tables//","-//netscape comm. corp.//dtd html//","-//netscape comm. corp.//dtd strict html//","-//o'reilly and associates//dtd html 2.0//","-//o'reilly and associates//dtd html extended 1.0//","-//o'reilly and associates//dtd html extended relaxed 1.0//","-//sq//dtd html 2.0 hotmetal + extensions//","-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//","-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//","-//spyglass//dtd html 2.0 extended//","-//sun microsystems corp.//dtd hotjava html//","-//sun microsystems corp.//dtd hotjava strict html//","-//w3c//dtd html 3 1995-03-24//","-//w3c//dtd html 3.2 draft//","-//w3c//dtd html 3.2 final//","-//w3c//dtd html 3.2//","-//w3c//dtd html 3.2s draft//","-//w3c//dtd html 4.0 frameset//","-//w3c//dtd html 4.0 transitional//","-//w3c//dtd html experimental 19960712//","-//w3c//dtd html experimental 970421//","-//w3c//dtd w3 html//","-//w3o//dtd w3 html 3.0//","-//webtechs//dtd mozilla html 2.0//","-//webtechs//dtd mozilla html//"],wt=Yt.concat(["-//w3c//dtd html 4.01 frameset//","-//w3c//dtd html 4.01 transitional//"]),Qt=["-//w3o//dtd w3 html strict 3.0//en//","-/w3c/dtd html 4.0 transitional/en","html"],Xt=["-//w3c//dtd xhtml 1.0 frameset//","-//w3c//dtd xhtml 1.0 transitional//"],Wt=Xt.concat(["-//w3c//dtd html 4.01 frameset//","-//w3c//dtd html 4.01 transitional//"]);function Vt(e,t){for(let n=0;n<t.length;n++)if(0===e.indexOf(t[n]))return !0;return !1}var jt=dt((function(e,t){const n=Ct.TAG_NAMES,s=Ct.NAMESPACES,r=Ct.ATTRS,i={attributename:"attributeName",attributetype:"attributeType",basefrequency:"baseFrequency",baseprofile:"baseProfile",calcmode:"calcMode",clippathunits:"clipPathUnits",diffuseconstant:"diffuseConstant",edgemode:"edgeMode",filterunits:"filterUnits",glyphref:"glyphRef",gradienttransform:"gradientTransform",gradientunits:"gradientUnits",kernelmatrix:"kernelMatrix",kernelunitlength:"kernelUnitLength",keypoints:"keyPoints",keysplines:"keySplines",keytimes:"keyTimes",lengthadjust:"lengthAdjust",limitingconeangle:"limitingConeAngle",markerheight:"markerHeight",markerunits:"markerUnits",markerwidth:"markerWidth",maskcontentunits:"maskContentUnits",maskunits:"maskUnits",numoctaves:"numOctaves",pathlength:"pathLength",patterncontentunits:"patternContentUnits",patterntransform:"patternTransform",patternunits:"patternUnits",pointsatx:"pointsAtX",pointsaty:"pointsAtY",pointsatz:"pointsAtZ",preservealpha:"preserveAlpha",preserveaspectratio:"preserveAspectRatio",primitiveunits:"primitiveUnits",refx:"refX",refy:"refY",repeatcount:"repeatCount",repeatdur:"repeatDur",requiredextensions:"requiredExtensions",requiredfeatures:"requiredFeatures",specularconstant:"specularConstant",specularexponent:"specularExponent",spreadmethod:"spreadMethod",startoffset:"startOffset",stddeviation:"stdDeviation",stitchtiles:"stitchTiles",surfacescale:"surfaceScale",systemlanguage:"systemLanguage",tablevalues:"tableValues",targetx:"targetX",targety:"targetY",textlength:"textLength",viewbox:"viewBox",viewtarget:"viewTarget",xchannelselector:"xChannelSelector",ychannelselector:"yChannelSelector",zoomandpan:"zoomAndPan"},o={"xlink:actuate":{prefix:"xlink",name:"actuate",namespace:s.XLINK},"xlink:arcrole":{prefix:"xlink",name:"arcrole",namespace:s.XLINK},"xlink:href":{prefix:"xlink",name:"href",namespace:s.XLINK},"xlink:role":{prefix:"xlink",name:"role",namespace:s.XLINK},"xlink:show":{prefix:"xlink",name:"show",namespace:s.XLINK},"xlink:title":{prefix:"xlink",name:"title",namespace:s.XLINK},"xlink:type":{prefix:"xlink",name:"type",namespace:s.XLINK},"xml:base":{prefix:"xml",name:"base",namespace:s.XML},"xml:lang":{prefix:"xml",name:"lang",namespace:s.XML},"xml:space":{prefix:"xml",name:"space",namespace:s.XML},xmlns:{prefix:"",name:"xmlns",namespace:s.XMLNS},"xmlns:xlink":{prefix:"xmlns",name:"xlink",namespace:s.XMLNS}},a=t.SVG_TAG_NAMES_ADJUSTMENT_MAP={altglyph:"altGlyph",altglyphdef:"altGlyphDef",altglyphitem:"altGlyphItem",animatecolor:"animateColor",animatemotion:"animateMotion",animatetransform:"animateTransform",clippath:"clipPath",feblend:"feBlend",fecolormatrix:"feColorMatrix",fecomponenttransfer:"feComponentTransfer",fecomposite:"feComposite",feconvolvematrix:"feConvolveMatrix",fediffuselighting:"feDiffuseLighting",fedisplacementmap:"feDisplacementMap",fedistantlight:"feDistantLight",feflood:"feFlood",fefunca:"feFuncA",fefuncb:"feFuncB",fefuncg:"feFuncG",fefuncr:"feFuncR",fegaussianblur:"feGaussianBlur",feimage:"feImage",femerge:"feMerge",femergenode:"feMergeNode",femorphology:"feMorphology",feoffset:"feOffset",fepointlight:"fePointLight",fespecularlighting:"feSpecularLighting",fespotlight:"feSpotLight",fetile:"feTile",feturbulence:"feTurbulence",foreignobject:"foreignObject",glyphref:"glyphRef",lineargradient:"linearGradient",radialgradient:"radialGradient",textpath:"textPath"},T={[n.B]:!0,[n.BIG]:!0,[n.BLOCKQUOTE]:!0,[n.BODY]:!0,[n.BR]:!0,[n.CENTER]:!0,[n.CODE]:!0,[n.DD]:!0,[n.DIV]:!0,[n.DL]:!0,[n.DT]:!0,[n.EM]:!0,[n.EMBED]:!0,[n.H1]:!0,[n.H2]:!0,[n.H3]:!0,[n.H4]:!0,[n.H5]:!0,[n.H6]:!0,[n.HEAD]:!0,[n.HR]:!0,[n.I]:!0,[n.IMG]:!0,[n.LI]:!0,[n.LISTING]:!0,[n.MENU]:!0,[n.META]:!0,[n.NOBR]:!0,[n.OL]:!0,[n.P]:!0,[n.PRE]:!0,[n.RUBY]:!0,[n.S]:!0,[n.SMALL]:!0,[n.SPAN]:!0,[n.STRONG]:!0,[n.STRIKE]:!0,[n.SUB]:!0,[n.SUP]:!0,[n.TABLE]:!0,[n.TT]:!0,[n.U]:!0,[n.UL]:!0,[n.VAR]:!0};t.causesExit=function(e){const t=e.tagName;return !(t!==n.FONT||null===Nt.getTokenAttr(e,r.COLOR)&&null===Nt.getTokenAttr(e,r.SIZE)&&null===Nt.getTokenAttr(e,r.FACE))||T[t]},t.adjustTokenMathMLAttrs=function(e){for(let t=0;t<e.attrs.length;t++)if("definitionurl"===e.attrs[t].name){e.attrs[t].name="definitionURL";break}},t.adjustTokenSVGAttrs=function(e){for(let t=0;t<e.attrs.length;t++){const n=i[e.attrs[t].name];n&&(e.attrs[t].name=n);}},t.adjustTokenXMLAttrs=function(e){for(let t=0;t<e.attrs.length;t++){const n=o[e.attrs[t].name];n&&(e.attrs[t].prefix=n.prefix,e.attrs[t].name=n.name,e.attrs[t].namespace=n.namespace);}},t.adjustTokenSVGTagName=function(e){const t=a[e.tagName];t&&(e.tagName=t);},t.isIntegrationPoint=function(e,t,i,o){return !(o&&o!==s.HTML||!function(e,t,i){if(t===s.MATHML&&e===n.ANNOTATION_XML)for(let e=0;e<i.length;e++)if(i[e].name===r.ENCODING){const t=i[e].value.toLowerCase();return "text/html"===t||"application/xhtml+xml"===t}return t===s.SVG&&(e===n.FOREIGN_OBJECT||e===n.DESC||e===n.TITLE)}(e,t,i))||!(o&&o!==s.MATHML||!function(e,t){return t===s.MATHML&&(e===n.MI||e===n.MO||e===n.MN||e===n.MS||e===n.MTEXT)}(e,t))};}));const zt=Ct.TAG_NAMES,qt=Ct.NAMESPACES,Jt=Ct.ATTRS,Zt={scriptingEnabled:!0,sourceCodeLocationInfo:!1,onParseError:null,treeAdapter:xt},$t="hidden",en="INITIAL_MODE",tn="BEFORE_HTML_MODE",nn="BEFORE_HEAD_MODE",sn="IN_HEAD_MODE",rn="IN_HEAD_NO_SCRIPT_MODE",on="AFTER_HEAD_MODE",an="IN_BODY_MODE",Tn="TEXT_MODE",En="IN_TABLE_MODE",hn="IN_TABLE_TEXT_MODE",cn="IN_CAPTION_MODE",_n="IN_COLUMN_GROUP_MODE",ln="IN_TABLE_BODY_MODE",mn="IN_ROW_MODE",pn="IN_CELL_MODE",An="IN_SELECT_MODE",un="IN_SELECT_IN_TABLE_MODE",Nn="IN_TEMPLATE_MODE",dn="AFTER_BODY_MODE",Cn="IN_FRAMESET_MODE",On="AFTER_FRAMESET_MODE",fn="AFTER_AFTER_BODY_MODE",Sn="AFTER_AFTER_FRAMESET_MODE",Rn={[zt.TR]:mn,[zt.TBODY]:ln,[zt.THEAD]:ln,[zt.TFOOT]:ln,[zt.CAPTION]:cn,[zt.COLGROUP]:_n,[zt.TABLE]:En,[zt.BODY]:an,[zt.FRAMESET]:Cn},In={[zt.CAPTION]:En,[zt.COLGROUP]:En,[zt.TBODY]:En,[zt.TFOOT]:En,[zt.THEAD]:En,[zt.COL]:_n,[zt.TR]:ln,[zt.TD]:mn,[zt.TH]:mn},Ln={[en]:{[Nt.CHARACTER_TOKEN]:vn,[Nt.NULL_CHARACTER_TOKEN]:vn,[Nt.WHITESPACE_CHARACTER_TOKEN]:Gn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:function(e,t){e._setDocumentType(t);const n=t.forceQuirks?Ct.DOCUMENT_MODE.QUIRKS:function(e){if(e.name!==vt)return yt.QUIRKS;const t=e.systemId;if(t&&"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd"===t.toLowerCase())return yt.QUIRKS;let n=e.publicId;if(null!==n){if(n=n.toLowerCase(),Qt.indexOf(n)>-1)return yt.QUIRKS;let e=null===t?wt:Yt;if(Vt(n,e))return yt.QUIRKS;if(e=null===t?Xt:Wt,Vt(n,e))return yt.LIMITED_QUIRKS}return yt.NO_QUIRKS}(t);(function(e){return e.name===vt&&null===e.publicId&&(null===e.systemId||"about:legacy-compat"===e.systemId)})(t)||e._err("non-conforming-doctype"),e.treeAdapter.setDocumentMode(e.document,n),e.insertionMode=tn;},[Nt.START_TAG_TOKEN]:vn,[Nt.END_TAG_TOKEN]:vn,[Nt.EOF_TOKEN]:vn},[tn]:{[Nt.CHARACTER_TOKEN]:Yn,[Nt.NULL_CHARACTER_TOKEN]:Yn,[Nt.WHITESPACE_CHARACTER_TOKEN]:Gn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){t.tagName===zt.HTML?(e._insertElement(t,qt.HTML),e.insertionMode=nn):Yn(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n!==zt.HTML&&n!==zt.HEAD&&n!==zt.BODY&&n!==zt.BR||Yn(e,t);},[Nt.EOF_TOKEN]:Yn},[nn]:{[Nt.CHARACTER_TOKEN]:wn,[Nt.NULL_CHARACTER_TOKEN]:wn,[Nt.WHITESPACE_CHARACTER_TOKEN]:Gn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Bn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.HEAD?(e._insertElement(t,qt.HTML),e.headElement=e.openElements.current,e.insertionMode=sn):wn(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HEAD||n===zt.BODY||n===zt.HTML||n===zt.BR?wn(e,t):e._err(L);},[Nt.EOF_TOKEN]:wn},[sn]:{[Nt.CHARACTER_TOKEN]:Wn,[Nt.NULL_CHARACTER_TOKEN]:Wn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Bn,[Nt.START_TAG_TOKEN]:Qn,[Nt.END_TAG_TOKEN]:Xn,[Nt.EOF_TOKEN]:Wn},[rn]:{[Nt.CHARACTER_TOKEN]:Vn,[Nt.NULL_CHARACTER_TOKEN]:Vn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Bn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.BASEFONT||n===zt.BGSOUND||n===zt.HEAD||n===zt.LINK||n===zt.META||n===zt.NOFRAMES||n===zt.STYLE?Qn(e,t):n===zt.NOSCRIPT?e._err("nested-noscript-in-head"):Vn(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.NOSCRIPT?(e.openElements.pop(),e.insertionMode=sn):n===zt.BR?Vn(e,t):e._err(L);},[Nt.EOF_TOKEN]:Vn},[on]:{[Nt.CHARACTER_TOKEN]:jn,[Nt.NULL_CHARACTER_TOKEN]:jn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Bn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.BODY?(e._insertElement(t,qt.HTML),e.framesetOk=!1,e.insertionMode=an):n===zt.FRAMESET?(e._insertElement(t,qt.HTML),e.insertionMode=Cn):n===zt.BASE||n===zt.BASEFONT||n===zt.BGSOUND||n===zt.LINK||n===zt.META||n===zt.NOFRAMES||n===zt.SCRIPT||n===zt.STYLE||n===zt.TEMPLATE||n===zt.TITLE?(e._err("abandoned-head-element-child"),e.openElements.push(e.headElement),Qn(e,t),e.openElements.remove(e.headElement)):n===zt.HEAD?e._err(k):jn(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.BODY||n===zt.HTML||n===zt.BR?jn(e,t):n===zt.TEMPLATE?Xn(e,t):e._err(L);},[Nt.EOF_TOKEN]:jn},[an]:{[Nt.CHARACTER_TOKEN]:qn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:zn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:as,[Nt.END_TAG_TOKEN]:cs,[Nt.EOF_TOKEN]:_s},[Tn]:{[Nt.CHARACTER_TOKEN]:xn,[Nt.NULL_CHARACTER_TOKEN]:xn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Gn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:Gn,[Nt.END_TAG_TOKEN]:function(e,t){t.tagName===zt.SCRIPT&&(e.pendingScript=e.openElements.current),e.openElements.pop(),e.insertionMode=e.originalInsertionMode;},[Nt.EOF_TOKEN]:function(e,t){e._err("eof-in-element-that-can-contain-only-text"),e.openElements.pop(),e.insertionMode=e.originalInsertionMode,e._processToken(t);}},[En]:{[Nt.CHARACTER_TOKEN]:ls,[Nt.NULL_CHARACTER_TOKEN]:ls,[Nt.WHITESPACE_CHARACTER_TOKEN]:ls,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:ms,[Nt.END_TAG_TOKEN]:ps,[Nt.EOF_TOKEN]:_s},[hn]:{[Nt.CHARACTER_TOKEN]:function(e,t){e.pendingCharacterTokens.push(t),e.hasNonWhitespacePendingCharacterToken=!0;},[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:function(e,t){e.pendingCharacterTokens.push(t);},[Nt.COMMENT_TOKEN]:us,[Nt.DOCTYPE_TOKEN]:us,[Nt.START_TAG_TOKEN]:us,[Nt.END_TAG_TOKEN]:us,[Nt.EOF_TOKEN]:us},[cn]:{[Nt.CHARACTER_TOKEN]:qn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:zn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.CAPTION||n===zt.COL||n===zt.COLGROUP||n===zt.TBODY||n===zt.TD||n===zt.TFOOT||n===zt.TH||n===zt.THEAD||n===zt.TR?e.openElements.hasInTableScope(zt.CAPTION)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(zt.CAPTION),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=En,e._processToken(t)):as(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.CAPTION||n===zt.TABLE?e.openElements.hasInTableScope(zt.CAPTION)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(zt.CAPTION),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=En,n===zt.TABLE&&e._processToken(t)):n!==zt.BODY&&n!==zt.COL&&n!==zt.COLGROUP&&n!==zt.HTML&&n!==zt.TBODY&&n!==zt.TD&&n!==zt.TFOOT&&n!==zt.TH&&n!==zt.THEAD&&n!==zt.TR&&cs(e,t);},[Nt.EOF_TOKEN]:_s},[_n]:{[Nt.CHARACTER_TOKEN]:Ns,[Nt.NULL_CHARACTER_TOKEN]:Ns,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.COL?(e._appendElement(t,qt.HTML),t.ackSelfClosing=!0):n===zt.TEMPLATE?Qn(e,t):Ns(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.COLGROUP?e.openElements.currentTagName===zt.COLGROUP&&(e.openElements.pop(),e.insertionMode=En):n===zt.TEMPLATE?Xn(e,t):n!==zt.COL&&Ns(e,t);},[Nt.EOF_TOKEN]:_s},[ln]:{[Nt.CHARACTER_TOKEN]:ls,[Nt.NULL_CHARACTER_TOKEN]:ls,[Nt.WHITESPACE_CHARACTER_TOKEN]:ls,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.TR?(e.openElements.clearBackToTableBodyContext(),e._insertElement(t,qt.HTML),e.insertionMode=mn):n===zt.TH||n===zt.TD?(e.openElements.clearBackToTableBodyContext(),e._insertFakeElement(zt.TR),e.insertionMode=mn,e._processToken(t)):n===zt.CAPTION||n===zt.COL||n===zt.COLGROUP||n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD?e.openElements.hasTableBodyContextInTableScope()&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=En,e._processToken(t)):ms(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD?e.openElements.hasInTableScope(n)&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=En):n===zt.TABLE?e.openElements.hasTableBodyContextInTableScope()&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=En,e._processToken(t)):(n!==zt.BODY&&n!==zt.CAPTION&&n!==zt.COL&&n!==zt.COLGROUP||n!==zt.HTML&&n!==zt.TD&&n!==zt.TH&&n!==zt.TR)&&ps(e,t);},[Nt.EOF_TOKEN]:_s},[mn]:{[Nt.CHARACTER_TOKEN]:ls,[Nt.NULL_CHARACTER_TOKEN]:ls,[Nt.WHITESPACE_CHARACTER_TOKEN]:ls,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.TH||n===zt.TD?(e.openElements.clearBackToTableRowContext(),e._insertElement(t,qt.HTML),e.insertionMode=pn,e.activeFormattingElements.insertMarker()):n===zt.CAPTION||n===zt.COL||n===zt.COLGROUP||n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD||n===zt.TR?e.openElements.hasInTableScope(zt.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=ln,e._processToken(t)):ms(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.TR?e.openElements.hasInTableScope(zt.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=ln):n===zt.TABLE?e.openElements.hasInTableScope(zt.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=ln,e._processToken(t)):n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD?(e.openElements.hasInTableScope(n)||e.openElements.hasInTableScope(zt.TR))&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=ln,e._processToken(t)):(n!==zt.BODY&&n!==zt.CAPTION&&n!==zt.COL&&n!==zt.COLGROUP||n!==zt.HTML&&n!==zt.TD&&n!==zt.TH)&&ps(e,t);},[Nt.EOF_TOKEN]:_s},[pn]:{[Nt.CHARACTER_TOKEN]:qn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:zn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.CAPTION||n===zt.COL||n===zt.COLGROUP||n===zt.TBODY||n===zt.TD||n===zt.TFOOT||n===zt.TH||n===zt.THEAD||n===zt.TR?(e.openElements.hasInTableScope(zt.TD)||e.openElements.hasInTableScope(zt.TH))&&(e._closeTableCell(),e._processToken(t)):as(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.TD||n===zt.TH?e.openElements.hasInTableScope(n)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(n),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=mn):n===zt.TABLE||n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD||n===zt.TR?e.openElements.hasInTableScope(n)&&(e._closeTableCell(),e._processToken(t)):n!==zt.BODY&&n!==zt.CAPTION&&n!==zt.COL&&n!==zt.COLGROUP&&n!==zt.HTML&&cs(e,t);},[Nt.EOF_TOKEN]:_s},[An]:{[Nt.CHARACTER_TOKEN]:xn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:ds,[Nt.END_TAG_TOKEN]:Cs,[Nt.EOF_TOKEN]:_s},[un]:{[Nt.CHARACTER_TOKEN]:xn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.CAPTION||n===zt.TABLE||n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD||n===zt.TR||n===zt.TD||n===zt.TH?(e.openElements.popUntilTagNamePopped(zt.SELECT),e._resetInsertionMode(),e._processToken(t)):ds(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.CAPTION||n===zt.TABLE||n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD||n===zt.TR||n===zt.TD||n===zt.TH?e.openElements.hasInTableScope(n)&&(e.openElements.popUntilTagNamePopped(zt.SELECT),e._resetInsertionMode(),e._processToken(t)):Cs(e,t);},[Nt.EOF_TOKEN]:_s},[Nn]:{[Nt.CHARACTER_TOKEN]:qn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:zn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;if(n===zt.BASE||n===zt.BASEFONT||n===zt.BGSOUND||n===zt.LINK||n===zt.META||n===zt.NOFRAMES||n===zt.SCRIPT||n===zt.STYLE||n===zt.TEMPLATE||n===zt.TITLE)Qn(e,t);else {const s=In[n]||an;e._popTmplInsertionMode(),e._pushTmplInsertionMode(s),e.insertionMode=s,e._processToken(t);}},[Nt.END_TAG_TOKEN]:function(e,t){t.tagName===zt.TEMPLATE&&Xn(e,t);},[Nt.EOF_TOKEN]:Os},[dn]:{[Nt.CHARACTER_TOKEN]:fs,[Nt.NULL_CHARACTER_TOKEN]:fs,[Nt.WHITESPACE_CHARACTER_TOKEN]:zn,[Nt.COMMENT_TOKEN]:function(e,t){e._appendCommentNode(t,e.openElements.items[0]);},[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){t.tagName===zt.HTML?as(e,t):fs(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){t.tagName===zt.HTML?e.fragmentContext||(e.insertionMode=fn):fs(e,t);},[Nt.EOF_TOKEN]:yn},[Cn]:{[Nt.CHARACTER_TOKEN]:Gn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.FRAMESET?e._insertElement(t,qt.HTML):n===zt.FRAME?(e._appendElement(t,qt.HTML),t.ackSelfClosing=!0):n===zt.NOFRAMES&&Qn(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){t.tagName!==zt.FRAMESET||e.openElements.isRootHtmlElementCurrent()||(e.openElements.pop(),e.fragmentContext||e.openElements.currentTagName===zt.FRAMESET||(e.insertionMode=On));},[Nt.EOF_TOKEN]:yn},[On]:{[Nt.CHARACTER_TOKEN]:Gn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.NOFRAMES&&Qn(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){t.tagName===zt.HTML&&(e.insertionMode=Sn);},[Nt.EOF_TOKEN]:yn},[fn]:{[Nt.CHARACTER_TOKEN]:Ss,[Nt.NULL_CHARACTER_TOKEN]:Ss,[Nt.WHITESPACE_CHARACTER_TOKEN]:zn,[Nt.COMMENT_TOKEN]:bn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){t.tagName===zt.HTML?as(e,t):Ss(e,t);},[Nt.END_TAG_TOKEN]:Ss,[Nt.EOF_TOKEN]:yn},[Sn]:{[Nt.CHARACTER_TOKEN]:Gn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:zn,[Nt.COMMENT_TOKEN]:bn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.NOFRAMES&&Qn(e,t);},[Nt.END_TAG_TOKEN]:Gn,[Nt.EOF_TOKEN]:yn}};var kn=class{constructor(e){this.options=function(e,t){return [e,t=t||Object.create(null)].reduce(((e,t)=>(Object.keys(t).forEach((n=>{e[n]=t[n];})),e)),Object.create(null))}(Zt,e),this.treeAdapter=this.options.treeAdapter,this.pendingScript=null,this.options.sourceCodeLocationInfo&&gt.install(this,Ut),this.options.onParseError&&gt.install(this,bt,{onParseError:this.options.onParseError});}parse(e){const t=this.treeAdapter.createDocument();return this._bootstrap(t,null),this.tokenizer.write(e,!0),this._runParsingLoop(null),t}parseFragment(e,t){t||(t=this.treeAdapter.createElement(zt.TEMPLATE,qt.HTML,[]));const n=this.treeAdapter.createElement("documentmock",qt.HTML,[]);this._bootstrap(n,t),this.treeAdapter.getTagName(t)===zt.TEMPLATE&&this._pushTmplInsertionMode(Nn),this._initTokenizerForFragmentParsing(),this._insertFakeRootElement(),this._resetInsertionMode(),this._findFormInFragmentContext(),this.tokenizer.write(e,!0),this._runParsingLoop(null);const s=this.treeAdapter.getFirstChild(n),r=this.treeAdapter.createDocumentFragment();return this._adoptNodes(s,r),r}_bootstrap(e,t){this.tokenizer=new Nt(this.options),this.stopped=!1,this.insertionMode=en,this.originalInsertionMode="",this.document=e,this.fragmentContext=t,this.headElement=null,this.formElement=null,this.openElements=new class{constructor(e,t){this.stackTop=-1,this.items=[],this.current=e,this.currentTagName=null,this.currentTmplContent=null,this.tmplCount=0,this.treeAdapter=t;}_indexOf(e){let t=-1;for(let n=this.stackTop;n>=0;n--)if(this.items[n]===e){t=n;break}return t}_isInTemplate(){return this.currentTagName===Ot.TEMPLATE&&this.treeAdapter.getNamespaceURI(this.current)===ft.HTML}_updateCurrentElement(){this.current=this.items[this.stackTop],this.currentTagName=this.current&&this.treeAdapter.getTagName(this.current),this.currentTmplContent=this._isInTemplate()?this.treeAdapter.getTemplateContent(this.current):null;}push(e){this.items[++this.stackTop]=e,this._updateCurrentElement(),this._isInTemplate()&&this.tmplCount++;}pop(){this.stackTop--,this.tmplCount>0&&this._isInTemplate()&&this.tmplCount--,this._updateCurrentElement();}replace(e,t){const n=this._indexOf(e);this.items[n]=t,n===this.stackTop&&this._updateCurrentElement();}insertAfter(e,t){const n=this._indexOf(e)+1;this.items.splice(n,0,t),n===++this.stackTop&&this._updateCurrentElement();}popUntilTagNamePopped(e){for(;this.stackTop>-1;){const t=this.currentTagName,n=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),t===e&&n===ft.HTML)break}}popUntilElementPopped(e){for(;this.stackTop>-1;){const t=this.current;if(this.pop(),t===e)break}}popUntilNumberedHeaderPopped(){for(;this.stackTop>-1;){const e=this.currentTagName,t=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),e===Ot.H1||e===Ot.H2||e===Ot.H3||e===Ot.H4||e===Ot.H5||e===Ot.H6&&t===ft.HTML)break}}popUntilTableCellPopped(){for(;this.stackTop>-1;){const e=this.currentTagName,t=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),e===Ot.TD||e===Ot.TH&&t===ft.HTML)break}}popAllUpToHtmlElement(){this.stackTop=0,this._updateCurrentElement();}clearBackToTableContext(){for(;this.currentTagName!==Ot.TABLE&&this.currentTagName!==Ot.TEMPLATE&&this.currentTagName!==Ot.HTML||this.treeAdapter.getNamespaceURI(this.current)!==ft.HTML;)this.pop();}clearBackToTableBodyContext(){for(;this.currentTagName!==Ot.TBODY&&this.currentTagName!==Ot.TFOOT&&this.currentTagName!==Ot.THEAD&&this.currentTagName!==Ot.TEMPLATE&&this.currentTagName!==Ot.HTML||this.treeAdapter.getNamespaceURI(this.current)!==ft.HTML;)this.pop();}clearBackToTableRowContext(){for(;this.currentTagName!==Ot.TR&&this.currentTagName!==Ot.TEMPLATE&&this.currentTagName!==Ot.HTML||this.treeAdapter.getNamespaceURI(this.current)!==ft.HTML;)this.pop();}remove(e){for(let t=this.stackTop;t>=0;t--)if(this.items[t]===e){this.items.splice(t,1),this.stackTop--,this._updateCurrentElement();break}}tryPeekProperlyNestedBodyElement(){const e=this.items[1];return e&&this.treeAdapter.getTagName(e)===Ot.BODY?e:null}contains(e){return this._indexOf(e)>-1}getCommonAncestor(e){let t=this._indexOf(e);return --t>=0?this.items[t]:null}isRootHtmlElementCurrent(){return 0===this.stackTop&&this.currentTagName===Ot.HTML}hasInScope(e){for(let t=this.stackTop;t>=0;t--){const n=this.treeAdapter.getTagName(this.items[t]),s=this.treeAdapter.getNamespaceURI(this.items[t]);if(n===e&&s===ft.HTML)return !0;if(It(n,s))return !1}return !0}hasNumberedHeaderInScope(){for(let e=this.stackTop;e>=0;e--){const t=this.treeAdapter.getTagName(this.items[e]),n=this.treeAdapter.getNamespaceURI(this.items[e]);if((t===Ot.H1||t===Ot.H2||t===Ot.H3||t===Ot.H4||t===Ot.H5||t===Ot.H6)&&n===ft.HTML)return !0;if(It(t,n))return !1}return !0}hasInListItemScope(e){for(let t=this.stackTop;t>=0;t--){const n=this.treeAdapter.getTagName(this.items[t]),s=this.treeAdapter.getNamespaceURI(this.items[t]);if(n===e&&s===ft.HTML)return !0;if((n===Ot.UL||n===Ot.OL)&&s===ft.HTML||It(n,s))return !1}return !0}hasInButtonScope(e){for(let t=this.stackTop;t>=0;t--){const n=this.treeAdapter.getTagName(this.items[t]),s=this.treeAdapter.getNamespaceURI(this.items[t]);if(n===e&&s===ft.HTML)return !0;if(n===Ot.BUTTON&&s===ft.HTML||It(n,s))return !1}return !0}hasInTableScope(e){for(let t=this.stackTop;t>=0;t--){const n=this.treeAdapter.getTagName(this.items[t]);if(this.treeAdapter.getNamespaceURI(this.items[t])===ft.HTML){if(n===e)return !0;if(n===Ot.TABLE||n===Ot.TEMPLATE||n===Ot.HTML)return !1}}return !0}hasTableBodyContextInTableScope(){for(let e=this.stackTop;e>=0;e--){const t=this.treeAdapter.getTagName(this.items[e]);if(this.treeAdapter.getNamespaceURI(this.items[e])===ft.HTML){if(t===Ot.TBODY||t===Ot.THEAD||t===Ot.TFOOT)return !0;if(t===Ot.TABLE||t===Ot.HTML)return !1}}return !0}hasInSelectScope(e){for(let t=this.stackTop;t>=0;t--){const n=this.treeAdapter.getTagName(this.items[t]);if(this.treeAdapter.getNamespaceURI(this.items[t])===ft.HTML){if(n===e)return !0;if(n!==Ot.OPTION&&n!==Ot.OPTGROUP)return !1}}return !0}generateImpliedEndTags(){for(;St(this.currentTagName);)this.pop();}generateImpliedEndTagsThoroughly(){for(;Rt(this.currentTagName);)this.pop();}generateImpliedEndTagsWithExclusion(e){for(;St(this.currentTagName)&&this.currentTagName!==e;)this.pop();}}(this.document,this.treeAdapter),this.activeFormattingElements=new kt(this.treeAdapter),this.tmplInsertionModeStack=[],this.tmplInsertionModeStackTop=-1,this.currentTmplInsertionMode=null,this.pendingCharacterTokens=[],this.hasNonWhitespacePendingCharacterToken=!1,this.framesetOk=!0,this.skipNextNewLine=!1,this.fosterParentingEnabled=!1;}_err(){}_runParsingLoop(e){for(;!this.stopped;){this._setupTokenizerCDATAMode();const t=this.tokenizer.getNextToken();if(t.type===Nt.HIBERNATION_TOKEN)break;if(this.skipNextNewLine&&(this.skipNextNewLine=!1,t.type===Nt.WHITESPACE_CHARACTER_TOKEN&&"\n"===t.chars[0])){if(1===t.chars.length)continue;t.chars=t.chars.substr(1);}if(this._processInputToken(t),e&&this.pendingScript)break}}runParsingLoopForCurrentChunk(e,t){if(this._runParsingLoop(t),t&&this.pendingScript){const e=this.pendingScript;return this.pendingScript=null,void t(e)}e&&e();}_setupTokenizerCDATAMode(){const e=this._getAdjustedCurrentElement();this.tokenizer.allowCDATA=e&&e!==this.document&&this.treeAdapter.getNamespaceURI(e)!==qt.HTML&&!this._isIntegrationPoint(e);}_switchToTextParsing(e,t){this._insertElement(e,qt.HTML),this.tokenizer.state=t,this.originalInsertionMode=this.insertionMode,this.insertionMode=Tn;}switchToPlaintextParsing(){this.insertionMode=Tn,this.originalInsertionMode=an,this.tokenizer.state=Nt.MODE.PLAINTEXT;}_getAdjustedCurrentElement(){return 0===this.openElements.stackTop&&this.fragmentContext?this.fragmentContext:this.openElements.current}_findFormInFragmentContext(){let e=this.fragmentContext;do{if(this.treeAdapter.getTagName(e)===zt.FORM){this.formElement=e;break}e=this.treeAdapter.getParentNode(e);}while(e)}_initTokenizerForFragmentParsing(){if(this.treeAdapter.getNamespaceURI(this.fragmentContext)===qt.HTML){const e=this.treeAdapter.getTagName(this.fragmentContext);e===zt.TITLE||e===zt.TEXTAREA?this.tokenizer.state=Nt.MODE.RCDATA:e===zt.STYLE||e===zt.XMP||e===zt.IFRAME||e===zt.NOEMBED||e===zt.NOFRAMES||e===zt.NOSCRIPT?this.tokenizer.state=Nt.MODE.RAWTEXT:e===zt.SCRIPT?this.tokenizer.state=Nt.MODE.SCRIPT_DATA:e===zt.PLAINTEXT&&(this.tokenizer.state=Nt.MODE.PLAINTEXT);}}_setDocumentType(e){const t=e.name||"",n=e.publicId||"",s=e.systemId||"";this.treeAdapter.setDocumentType(this.document,t,n,s);}_attachElementToTree(e){if(this._shouldFosterParentOnInsertion())this._fosterParentElement(e);else {const t=this.openElements.currentTmplContent||this.openElements.current;this.treeAdapter.appendChild(t,e);}}_appendElement(e,t){const n=this.treeAdapter.createElement(e.tagName,t,e.attrs);this._attachElementToTree(n);}_insertElement(e,t){const n=this.treeAdapter.createElement(e.tagName,t,e.attrs);this._attachElementToTree(n),this.openElements.push(n);}_insertFakeElement(e){const t=this.treeAdapter.createElement(e,qt.HTML,[]);this._attachElementToTree(t),this.openElements.push(t);}_insertTemplate(e){const t=this.treeAdapter.createElement(e.tagName,qt.HTML,e.attrs),n=this.treeAdapter.createDocumentFragment();this.treeAdapter.setTemplateContent(t,n),this._attachElementToTree(t),this.openElements.push(t);}_insertFakeRootElement(){const e=this.treeAdapter.createElement(zt.HTML,qt.HTML,[]);this.treeAdapter.appendChild(this.openElements.current,e),this.openElements.push(e);}_appendCommentNode(e,t){const n=this.treeAdapter.createCommentNode(e.data);this.treeAdapter.appendChild(t,n);}_insertCharacters(e){if(this._shouldFosterParentOnInsertion())this._fosterParentText(e.chars);else {const t=this.openElements.currentTmplContent||this.openElements.current;this.treeAdapter.insertText(t,e.chars);}}_adoptNodes(e,t){for(let n=this.treeAdapter.getFirstChild(e);n;n=this.treeAdapter.getFirstChild(e))this.treeAdapter.detachNode(n),this.treeAdapter.appendChild(t,n);}_shouldProcessTokenInForeignContent(e){const t=this._getAdjustedCurrentElement();if(!t||t===this.document)return !1;const n=this.treeAdapter.getNamespaceURI(t);if(n===qt.HTML)return !1;if(this.treeAdapter.getTagName(t)===zt.ANNOTATION_XML&&n===qt.MATHML&&e.type===Nt.START_TAG_TOKEN&&e.tagName===zt.SVG)return !1;const s=e.type===Nt.CHARACTER_TOKEN||e.type===Nt.NULL_CHARACTER_TOKEN||e.type===Nt.WHITESPACE_CHARACTER_TOKEN;return !((e.type===Nt.START_TAG_TOKEN&&e.tagName!==zt.MGLYPH&&e.tagName!==zt.MALIGNMARK||s)&&this._isIntegrationPoint(t,qt.MATHML)||(e.type===Nt.START_TAG_TOKEN||s)&&this._isIntegrationPoint(t,qt.HTML)||e.type===Nt.EOF_TOKEN)}_processToken(e){Ln[this.insertionMode][e.type](this,e);}_processTokenInBodyMode(e){Ln.IN_BODY_MODE[e.type](this,e);}_processTokenInForeignContent(e){e.type===Nt.CHARACTER_TOKEN?function(e,t){e._insertCharacters(t),e.framesetOk=!1;}(this,e):e.type===Nt.NULL_CHARACTER_TOKEN?function(e,t){t.chars=n,e._insertCharacters(t);}(this,e):e.type===Nt.WHITESPACE_CHARACTER_TOKEN?xn(this,e):e.type===Nt.COMMENT_TOKEN?Kn(this,e):e.type===Nt.START_TAG_TOKEN?function(e,t){if(jt.causesExit(t)&&!e.fragmentContext){for(;e.treeAdapter.getNamespaceURI(e.openElements.current)!==qt.HTML&&!e._isIntegrationPoint(e.openElements.current);)e.openElements.pop();e._processToken(t);}else {const n=e._getAdjustedCurrentElement(),s=e.treeAdapter.getNamespaceURI(n);s===qt.MATHML?jt.adjustTokenMathMLAttrs(t):s===qt.SVG&&(jt.adjustTokenSVGTagName(t),jt.adjustTokenSVGAttrs(t)),jt.adjustTokenXMLAttrs(t),t.selfClosing?e._appendElement(t,s):e._insertElement(t,s),t.ackSelfClosing=!0;}}(this,e):e.type===Nt.END_TAG_TOKEN&&function(e,t){for(let n=e.openElements.stackTop;n>0;n--){const s=e.openElements.items[n];if(e.treeAdapter.getNamespaceURI(s)===qt.HTML){e._processToken(t);break}if(e.treeAdapter.getTagName(s).toLowerCase()===t.tagName){e.openElements.popUntilElementPopped(s);break}}}(this,e);}_processInputToken(e){this._shouldProcessTokenInForeignContent(e)?this._processTokenInForeignContent(e):this._processToken(e),e.type===Nt.START_TAG_TOKEN&&e.selfClosing&&!e.ackSelfClosing&&this._err("non-void-html-element-start-tag-with-trailing-solidus");}_isIntegrationPoint(e,t){const n=this.treeAdapter.getTagName(e),s=this.treeAdapter.getNamespaceURI(e),r=this.treeAdapter.getAttrList(e);return jt.isIntegrationPoint(n,s,r,t)}_reconstructActiveFormattingElements(){const e=this.activeFormattingElements.length;if(e){let t=e,n=null;do{if(t--,n=this.activeFormattingElements.entries[t],n.type===kt.MARKER_ENTRY||this.openElements.contains(n.element)){t++;break}}while(t>0);for(let s=t;s<e;s++)n=this.activeFormattingElements.entries[s],this._insertElement(n.token,this.treeAdapter.getNamespaceURI(n.element)),n.element=this.openElements.current;}}_closeTableCell(){this.openElements.generateImpliedEndTags(),this.openElements.popUntilTableCellPopped(),this.activeFormattingElements.clearToLastMarker(),this.insertionMode=mn;}_closePElement(){this.openElements.generateImpliedEndTagsWithExclusion(zt.P),this.openElements.popUntilTagNamePopped(zt.P);}_resetInsertionMode(){for(let e=this.openElements.stackTop,t=!1;e>=0;e--){let n=this.openElements.items[e];0===e&&(t=!0,this.fragmentContext&&(n=this.fragmentContext));const s=this.treeAdapter.getTagName(n),r=Rn[s];if(r){this.insertionMode=r;break}if(!(t||s!==zt.TD&&s!==zt.TH)){this.insertionMode=pn;break}if(!t&&s===zt.HEAD){this.insertionMode=sn;break}if(s===zt.SELECT){this._resetInsertionModeForSelect(e);break}if(s===zt.TEMPLATE){this.insertionMode=this.currentTmplInsertionMode;break}if(s===zt.HTML){this.insertionMode=this.headElement?on:nn;break}if(t){this.insertionMode=an;break}}}_resetInsertionModeForSelect(e){if(e>0)for(let t=e-1;t>0;t--){const e=this.openElements.items[t],n=this.treeAdapter.getTagName(e);if(n===zt.TEMPLATE)break;if(n===zt.TABLE)return void(this.insertionMode=un)}this.insertionMode=An;}_pushTmplInsertionMode(e){this.tmplInsertionModeStack.push(e),this.tmplInsertionModeStackTop++,this.currentTmplInsertionMode=e;}_popTmplInsertionMode(){this.tmplInsertionModeStack.pop(),this.tmplInsertionModeStackTop--,this.currentTmplInsertionMode=this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];}_isElementCausesFosterParenting(e){const t=this.treeAdapter.getTagName(e);return t===zt.TABLE||t===zt.TBODY||t===zt.TFOOT||t===zt.THEAD||t===zt.TR}_shouldFosterParentOnInsertion(){return this.fosterParentingEnabled&&this._isElementCausesFosterParenting(this.openElements.current)}_findFosterParentingLocation(){const e={parent:null,beforeElement:null};for(let t=this.openElements.stackTop;t>=0;t--){const n=this.openElements.items[t],s=this.treeAdapter.getTagName(n),r=this.treeAdapter.getNamespaceURI(n);if(s===zt.TEMPLATE&&r===qt.HTML){e.parent=this.treeAdapter.getTemplateContent(n);break}if(s===zt.TABLE){e.parent=this.treeAdapter.getParentNode(n),e.parent?e.beforeElement=n:e.parent=this.openElements.items[t-1];break}}return e.parent||(e.parent=this.openElements.items[0]),e}_fosterParentElement(e){const t=this._findFosterParentingLocation();t.beforeElement?this.treeAdapter.insertBefore(t.parent,e,t.beforeElement):this.treeAdapter.appendChild(t.parent,e);}_fosterParentText(e){const t=this._findFosterParentingLocation();t.beforeElement?this.treeAdapter.insertTextBefore(t.parent,e,t.beforeElement):this.treeAdapter.insertText(t.parent,e);}_isSpecialElement(e){const t=this.treeAdapter.getTagName(e),n=this.treeAdapter.getNamespaceURI(e);return Ct.SPECIAL_ELEMENTS[n][t]}};function Mn(e,t){let n=e.activeFormattingElements.getElementEntryInScopeWithTagName(t.tagName);return n?e.openElements.contains(n.element)?e.openElements.hasInScope(t.tagName)||(n=null):(e.activeFormattingElements.removeEntry(n),n=null):hs(e,t),n}function gn(e,t){let n=null;for(let s=e.openElements.stackTop;s>=0;s--){const r=e.openElements.items[s];if(r===t.element)break;e._isSpecialElement(r)&&(n=r);}return n||(e.openElements.popUntilElementPopped(t.element),e.activeFormattingElements.removeEntry(t)),n}function Pn(e,t,n){let s=t,r=e.openElements.getCommonAncestor(t);for(let i=0,o=r;o!==n;i++,o=r){r=e.openElements.getCommonAncestor(o);const n=e.activeFormattingElements.getElementEntry(o),a=n&&i>=3;!n||a?(a&&e.activeFormattingElements.removeEntry(n),e.openElements.remove(o)):(o=Hn(e,n),s===t&&(e.activeFormattingElements.bookmark=n),e.treeAdapter.detachNode(s),e.treeAdapter.appendChild(o,s),s=o);}return s}function Hn(e,t){const n=e.treeAdapter.getNamespaceURI(t.element),s=e.treeAdapter.createElement(t.token.tagName,n,t.token.attrs);return e.openElements.replace(t.element,s),t.element=s,s}function Dn(e,t,n){if(e._isElementCausesFosterParenting(t))e._fosterParentElement(n);else {const s=e.treeAdapter.getTagName(t),r=e.treeAdapter.getNamespaceURI(t);s===zt.TEMPLATE&&r===qt.HTML&&(t=e.treeAdapter.getTemplateContent(t)),e.treeAdapter.appendChild(t,n);}}function Fn(e,t,n){const s=e.treeAdapter.getNamespaceURI(n.element),r=n.token,i=e.treeAdapter.createElement(r.tagName,s,r.attrs);e._adoptNodes(t,i),e.treeAdapter.appendChild(t,i),e.activeFormattingElements.insertElementAfterBookmark(i,n.token),e.activeFormattingElements.removeEntry(n),e.openElements.remove(n.element),e.openElements.insertAfter(t,i);}function Un(e,t){let n;for(let s=0;s<8&&(n=Mn(e,t),n);s++){const t=gn(e,n);if(!t)break;e.activeFormattingElements.bookmark=n;const s=Pn(e,t,n.element),r=e.openElements.getCommonAncestor(n.element);e.treeAdapter.detachNode(s),Dn(e,r,s),Fn(e,t,n);}}function Gn(){}function Bn(e){e._err("misplaced-doctype");}function Kn(e,t){e._appendCommentNode(t,e.openElements.currentTmplContent||e.openElements.current);}function bn(e,t){e._appendCommentNode(t,e.document);}function xn(e,t){e._insertCharacters(t);}function yn(e){e.stopped=!0;}function vn(e,t){e._err("missing-doctype",{beforeToken:!0}),e.treeAdapter.setDocumentMode(e.document,Ct.DOCUMENT_MODE.QUIRKS),e.insertionMode=tn,e._processToken(t);}function Yn(e,t){e._insertFakeRootElement(),e.insertionMode=nn,e._processToken(t);}function wn(e,t){e._insertFakeElement(zt.HEAD),e.headElement=e.openElements.current,e.insertionMode=sn,e._processToken(t);}function Qn(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.BASE||n===zt.BASEFONT||n===zt.BGSOUND||n===zt.LINK||n===zt.META?(e._appendElement(t,qt.HTML),t.ackSelfClosing=!0):n===zt.TITLE?e._switchToTextParsing(t,Nt.MODE.RCDATA):n===zt.NOSCRIPT?e.options.scriptingEnabled?e._switchToTextParsing(t,Nt.MODE.RAWTEXT):(e._insertElement(t,qt.HTML),e.insertionMode=rn):n===zt.NOFRAMES||n===zt.STYLE?e._switchToTextParsing(t,Nt.MODE.RAWTEXT):n===zt.SCRIPT?e._switchToTextParsing(t,Nt.MODE.SCRIPT_DATA):n===zt.TEMPLATE?(e._insertTemplate(t,qt.HTML),e.activeFormattingElements.insertMarker(),e.framesetOk=!1,e.insertionMode=Nn,e._pushTmplInsertionMode(Nn)):n===zt.HEAD?e._err(k):Wn(e,t);}function Xn(e,t){const n=t.tagName;n===zt.HEAD?(e.openElements.pop(),e.insertionMode=on):n===zt.BODY||n===zt.BR||n===zt.HTML?Wn(e,t):n===zt.TEMPLATE&&e.openElements.tmplCount>0?(e.openElements.generateImpliedEndTagsThoroughly(),e.openElements.currentTagName!==zt.TEMPLATE&&e._err("closing-of-element-with-open-child-elements"),e.openElements.popUntilTagNamePopped(zt.TEMPLATE),e.activeFormattingElements.clearToLastMarker(),e._popTmplInsertionMode(),e._resetInsertionMode()):e._err(L);}function Wn(e,t){e.openElements.pop(),e.insertionMode=on,e._processToken(t);}function Vn(e,t){const n=t.type===Nt.EOF_TOKEN?"open-elements-left-after-eof":"disallowed-content-in-noscript-in-head";e._err(n),e.openElements.pop(),e.insertionMode=sn,e._processToken(t);}function jn(e,t){e._insertFakeElement(zt.BODY),e.insertionMode=an,e._processToken(t);}function zn(e,t){e._reconstructActiveFormattingElements(),e._insertCharacters(t);}function qn(e,t){e._reconstructActiveFormattingElements(),e._insertCharacters(t),e.framesetOk=!1;}function Jn(e,t){e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._insertElement(t,qt.HTML);}function Zn(e,t){e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._insertElement(t,qt.HTML),e.skipNextNewLine=!0,e.framesetOk=!1;}function $n(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,qt.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t);}function es(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,qt.HTML),e.activeFormattingElements.insertMarker(),e.framesetOk=!1;}function ts(e,t){e._reconstructActiveFormattingElements(),e._appendElement(t,qt.HTML),e.framesetOk=!1,t.ackSelfClosing=!0;}function ns(e,t){e._appendElement(t,qt.HTML),t.ackSelfClosing=!0;}function ss(e,t){e._switchToTextParsing(t,Nt.MODE.RAWTEXT);}function rs(e,t){e.openElements.currentTagName===zt.OPTION&&e.openElements.pop(),e._reconstructActiveFormattingElements(),e._insertElement(t,qt.HTML);}function is(e,t){e.openElements.hasInScope(zt.RUBY)&&e.openElements.generateImpliedEndTags(),e._insertElement(t,qt.HTML);}function os(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,qt.HTML);}function as(e,t){const n=t.tagName;switch(n.length){case 1:n===zt.I||n===zt.S||n===zt.B||n===zt.U?$n(e,t):n===zt.P?Jn(e,t):n===zt.A?function(e,t){const n=e.activeFormattingElements.getElementEntryInScopeWithTagName(zt.A);n&&(Un(e,t),e.openElements.remove(n.element),e.activeFormattingElements.removeEntry(n)),e._reconstructActiveFormattingElements(),e._insertElement(t,qt.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t);}(e,t):os(e,t);break;case 2:n===zt.DL||n===zt.OL||n===zt.UL?Jn(e,t):n===zt.H1||n===zt.H2||n===zt.H3||n===zt.H4||n===zt.H5||n===zt.H6?function(e,t){e.openElements.hasInButtonScope(zt.P)&&e._closePElement();const n=e.openElements.currentTagName;n!==zt.H1&&n!==zt.H2&&n!==zt.H3&&n!==zt.H4&&n!==zt.H5&&n!==zt.H6||e.openElements.pop(),e._insertElement(t,qt.HTML);}(e,t):n===zt.LI||n===zt.DD||n===zt.DT?function(e,t){e.framesetOk=!1;const n=t.tagName;for(let t=e.openElements.stackTop;t>=0;t--){const s=e.openElements.items[t],r=e.treeAdapter.getTagName(s);let i=null;if(n===zt.LI&&r===zt.LI?i=zt.LI:n!==zt.DD&&n!==zt.DT||r!==zt.DD&&r!==zt.DT||(i=r),i){e.openElements.generateImpliedEndTagsWithExclusion(i),e.openElements.popUntilTagNamePopped(i);break}if(r!==zt.ADDRESS&&r!==zt.DIV&&r!==zt.P&&e._isSpecialElement(s))break}e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._insertElement(t,qt.HTML);}(e,t):n===zt.EM||n===zt.TT?$n(e,t):n===zt.BR?ts(e,t):n===zt.HR?function(e,t){e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._appendElement(t,qt.HTML),e.framesetOk=!1,t.ackSelfClosing=!0;}(e,t):n===zt.RB?is(e,t):n===zt.RT||n===zt.RP?function(e,t){e.openElements.hasInScope(zt.RUBY)&&e.openElements.generateImpliedEndTagsWithExclusion(zt.RTC),e._insertElement(t,qt.HTML);}(e,t):n!==zt.TH&&n!==zt.TD&&n!==zt.TR&&os(e,t);break;case 3:n===zt.DIV||n===zt.DIR||n===zt.NAV?Jn(e,t):n===zt.PRE?Zn(e,t):n===zt.BIG?$n(e,t):n===zt.IMG||n===zt.WBR?ts(e,t):n===zt.XMP?function(e,t){e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._reconstructActiveFormattingElements(),e.framesetOk=!1,e._switchToTextParsing(t,Nt.MODE.RAWTEXT);}(e,t):n===zt.SVG?function(e,t){e._reconstructActiveFormattingElements(),jt.adjustTokenSVGAttrs(t),jt.adjustTokenXMLAttrs(t),t.selfClosing?e._appendElement(t,qt.SVG):e._insertElement(t,qt.SVG),t.ackSelfClosing=!0;}(e,t):n===zt.RTC?is(e,t):n!==zt.COL&&os(e,t);break;case 4:n===zt.HTML?function(e,t){0===e.openElements.tmplCount&&e.treeAdapter.adoptAttributes(e.openElements.items[0],t.attrs);}(e,t):n===zt.BASE||n===zt.LINK||n===zt.META?Qn(e,t):n===zt.BODY?function(e,t){const n=e.openElements.tryPeekProperlyNestedBodyElement();n&&0===e.openElements.tmplCount&&(e.framesetOk=!1,e.treeAdapter.adoptAttributes(n,t.attrs));}(e,t):n===zt.MAIN||n===zt.MENU?Jn(e,t):n===zt.FORM?function(e,t){const n=e.openElements.tmplCount>0;e.formElement&&!n||(e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._insertElement(t,qt.HTML),n||(e.formElement=e.openElements.current));}(e,t):n===zt.CODE||n===zt.FONT?$n(e,t):n===zt.NOBR?function(e,t){e._reconstructActiveFormattingElements(),e.openElements.hasInScope(zt.NOBR)&&(Un(e,t),e._reconstructActiveFormattingElements()),e._insertElement(t,qt.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t);}(e,t):n===zt.AREA?ts(e,t):n===zt.MATH?function(e,t){e._reconstructActiveFormattingElements(),jt.adjustTokenMathMLAttrs(t),jt.adjustTokenXMLAttrs(t),t.selfClosing?e._appendElement(t,qt.MATHML):e._insertElement(t,qt.MATHML),t.ackSelfClosing=!0;}(e,t):n===zt.MENU?function(e,t){e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._insertElement(t,qt.HTML);}(e,t):n!==zt.HEAD&&os(e,t);break;case 5:n===zt.STYLE||n===zt.TITLE?Qn(e,t):n===zt.ASIDE?Jn(e,t):n===zt.SMALL?$n(e,t):n===zt.TABLE?function(e,t){e.treeAdapter.getDocumentMode(e.document)!==Ct.DOCUMENT_MODE.QUIRKS&&e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._insertElement(t,qt.HTML),e.framesetOk=!1,e.insertionMode=En;}(e,t):n===zt.EMBED?ts(e,t):n===zt.INPUT?function(e,t){e._reconstructActiveFormattingElements(),e._appendElement(t,qt.HTML);const n=Nt.getTokenAttr(t,Jt.TYPE);n&&n.toLowerCase()===$t||(e.framesetOk=!1),t.ackSelfClosing=!0;}(e,t):n===zt.PARAM||n===zt.TRACK?ns(e,t):n===zt.IMAGE?function(e,t){t.tagName=zt.IMG,ts(e,t);}(e,t):n!==zt.FRAME&&n!==zt.TBODY&&n!==zt.TFOOT&&n!==zt.THEAD&&os(e,t);break;case 6:n===zt.SCRIPT?Qn(e,t):n===zt.CENTER||n===zt.FIGURE||n===zt.FOOTER||n===zt.HEADER||n===zt.HGROUP||n===zt.DIALOG?Jn(e,t):n===zt.BUTTON?function(e,t){e.openElements.hasInScope(zt.BUTTON)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(zt.BUTTON)),e._reconstructActiveFormattingElements(),e._insertElement(t,qt.HTML),e.framesetOk=!1;}(e,t):n===zt.STRIKE||n===zt.STRONG?$n(e,t):n===zt.APPLET||n===zt.OBJECT?es(e,t):n===zt.KEYGEN?ts(e,t):n===zt.SOURCE?ns(e,t):n===zt.IFRAME?function(e,t){e.framesetOk=!1,e._switchToTextParsing(t,Nt.MODE.RAWTEXT);}(e,t):n===zt.SELECT?function(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,qt.HTML),e.framesetOk=!1,e.insertionMode===En||e.insertionMode===cn||e.insertionMode===ln||e.insertionMode===mn||e.insertionMode===pn?e.insertionMode=un:e.insertionMode=An;}(e,t):n===zt.OPTION?rs(e,t):os(e,t);break;case 7:n===zt.BGSOUND?Qn(e,t):n===zt.DETAILS||n===zt.ADDRESS||n===zt.ARTICLE||n===zt.SECTION||n===zt.SUMMARY?Jn(e,t):n===zt.LISTING?Zn(e,t):n===zt.MARQUEE?es(e,t):n===zt.NOEMBED?ss(e,t):n!==zt.CAPTION&&os(e,t);break;case 8:n===zt.BASEFONT?Qn(e,t):n===zt.FRAMESET?function(e,t){const n=e.openElements.tryPeekProperlyNestedBodyElement();e.framesetOk&&n&&(e.treeAdapter.detachNode(n),e.openElements.popAllUpToHtmlElement(),e._insertElement(t,qt.HTML),e.insertionMode=Cn);}(e,t):n===zt.FIELDSET?Jn(e,t):n===zt.TEXTAREA?function(e,t){e._insertElement(t,qt.HTML),e.skipNextNewLine=!0,e.tokenizer.state=Nt.MODE.RCDATA,e.originalInsertionMode=e.insertionMode,e.framesetOk=!1,e.insertionMode=Tn;}(e,t):n===zt.TEMPLATE?Qn(e,t):n===zt.NOSCRIPT?e.options.scriptingEnabled?ss(e,t):os(e,t):n===zt.OPTGROUP?rs(e,t):n!==zt.COLGROUP&&os(e,t);break;case 9:n===zt.PLAINTEXT?function(e,t){e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._insertElement(t,qt.HTML),e.tokenizer.state=Nt.MODE.PLAINTEXT;}(e,t):os(e,t);break;case 10:n===zt.BLOCKQUOTE||n===zt.FIGCAPTION?Jn(e,t):os(e,t);break;default:os(e,t);}}function Ts(e,t){const n=t.tagName;e.openElements.hasInScope(n)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(n));}function Es(e,t){const n=t.tagName;e.openElements.hasInScope(n)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(n),e.activeFormattingElements.clearToLastMarker());}function hs(e,t){const n=t.tagName;for(let t=e.openElements.stackTop;t>0;t--){const s=e.openElements.items[t];if(e.treeAdapter.getTagName(s)===n){e.openElements.generateImpliedEndTagsWithExclusion(n),e.openElements.popUntilElementPopped(s);break}if(e._isSpecialElement(s))break}}function cs(e,t){const n=t.tagName;switch(n.length){case 1:n===zt.A||n===zt.B||n===zt.I||n===zt.S||n===zt.U?Un(e,t):n===zt.P?function(e){e.openElements.hasInButtonScope(zt.P)||e._insertFakeElement(zt.P),e._closePElement();}(e):hs(e,t);break;case 2:n===zt.DL||n===zt.UL||n===zt.OL?Ts(e,t):n===zt.LI?function(e){e.openElements.hasInListItemScope(zt.LI)&&(e.openElements.generateImpliedEndTagsWithExclusion(zt.LI),e.openElements.popUntilTagNamePopped(zt.LI));}(e):n===zt.DD||n===zt.DT?function(e,t){const n=t.tagName;e.openElements.hasInScope(n)&&(e.openElements.generateImpliedEndTagsWithExclusion(n),e.openElements.popUntilTagNamePopped(n));}(e,t):n===zt.H1||n===zt.H2||n===zt.H3||n===zt.H4||n===zt.H5||n===zt.H6?function(e){e.openElements.hasNumberedHeaderInScope()&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilNumberedHeaderPopped());}(e):n===zt.BR?function(e){e._reconstructActiveFormattingElements(),e._insertFakeElement(zt.BR),e.openElements.pop(),e.framesetOk=!1;}(e):n===zt.EM||n===zt.TT?Un(e,t):hs(e,t);break;case 3:n===zt.BIG?Un(e,t):n===zt.DIR||n===zt.DIV||n===zt.NAV||n===zt.PRE?Ts(e,t):hs(e,t);break;case 4:n===zt.BODY?function(e){e.openElements.hasInScope(zt.BODY)&&(e.insertionMode=dn);}(e):n===zt.HTML?function(e,t){e.openElements.hasInScope(zt.BODY)&&(e.insertionMode=dn,e._processToken(t));}(e,t):n===zt.FORM?function(e){const t=e.openElements.tmplCount>0,n=e.formElement;t||(e.formElement=null),(n||t)&&e.openElements.hasInScope(zt.FORM)&&(e.openElements.generateImpliedEndTags(),t?e.openElements.popUntilTagNamePopped(zt.FORM):e.openElements.remove(n));}(e):n===zt.CODE||n===zt.FONT||n===zt.NOBR?Un(e,t):n===zt.MAIN||n===zt.MENU?Ts(e,t):hs(e,t);break;case 5:n===zt.ASIDE?Ts(e,t):n===zt.SMALL?Un(e,t):hs(e,t);break;case 6:n===zt.CENTER||n===zt.FIGURE||n===zt.FOOTER||n===zt.HEADER||n===zt.HGROUP||n===zt.DIALOG?Ts(e,t):n===zt.APPLET||n===zt.OBJECT?Es(e,t):n===zt.STRIKE||n===zt.STRONG?Un(e,t):hs(e,t);break;case 7:n===zt.ADDRESS||n===zt.ARTICLE||n===zt.DETAILS||n===zt.SECTION||n===zt.SUMMARY||n===zt.LISTING?Ts(e,t):n===zt.MARQUEE?Es(e,t):hs(e,t);break;case 8:n===zt.FIELDSET?Ts(e,t):n===zt.TEMPLATE?Xn(e,t):hs(e,t);break;case 10:n===zt.BLOCKQUOTE||n===zt.FIGCAPTION?Ts(e,t):hs(e,t);break;default:hs(e,t);}}function _s(e,t){e.tmplInsertionModeStackTop>-1?Os(e,t):e.stopped=!0;}function ls(e,t){const n=e.openElements.currentTagName;n===zt.TABLE||n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD||n===zt.TR?(e.pendingCharacterTokens=[],e.hasNonWhitespacePendingCharacterToken=!1,e.originalInsertionMode=e.insertionMode,e.insertionMode=hn,e._processToken(t)):As(e,t);}function ms(e,t){const n=t.tagName;switch(n.length){case 2:n===zt.TD||n===zt.TH||n===zt.TR?function(e,t){e.openElements.clearBackToTableContext(),e._insertFakeElement(zt.TBODY),e.insertionMode=ln,e._processToken(t);}(e,t):As(e,t);break;case 3:n===zt.COL?function(e,t){e.openElements.clearBackToTableContext(),e._insertFakeElement(zt.COLGROUP),e.insertionMode=_n,e._processToken(t);}(e,t):As(e,t);break;case 4:n===zt.FORM?function(e,t){e.formElement||0!==e.openElements.tmplCount||(e._insertElement(t,qt.HTML),e.formElement=e.openElements.current,e.openElements.pop());}(e,t):As(e,t);break;case 5:n===zt.TABLE?function(e,t){e.openElements.hasInTableScope(zt.TABLE)&&(e.openElements.popUntilTagNamePopped(zt.TABLE),e._resetInsertionMode(),e._processToken(t));}(e,t):n===zt.STYLE?Qn(e,t):n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD?function(e,t){e.openElements.clearBackToTableContext(),e._insertElement(t,qt.HTML),e.insertionMode=ln;}(e,t):n===zt.INPUT?function(e,t){const n=Nt.getTokenAttr(t,Jt.TYPE);n&&n.toLowerCase()===$t?e._appendElement(t,qt.HTML):As(e,t),t.ackSelfClosing=!0;}(e,t):As(e,t);break;case 6:n===zt.SCRIPT?Qn(e,t):As(e,t);break;case 7:n===zt.CAPTION?function(e,t){e.openElements.clearBackToTableContext(),e.activeFormattingElements.insertMarker(),e._insertElement(t,qt.HTML),e.insertionMode=cn;}(e,t):As(e,t);break;case 8:n===zt.COLGROUP?function(e,t){e.openElements.clearBackToTableContext(),e._insertElement(t,qt.HTML),e.insertionMode=_n;}(e,t):n===zt.TEMPLATE?Qn(e,t):As(e,t);break;default:As(e,t);}}function ps(e,t){const n=t.tagName;n===zt.TABLE?e.openElements.hasInTableScope(zt.TABLE)&&(e.openElements.popUntilTagNamePopped(zt.TABLE),e._resetInsertionMode()):n===zt.TEMPLATE?Xn(e,t):n!==zt.BODY&&n!==zt.CAPTION&&n!==zt.COL&&n!==zt.COLGROUP&&n!==zt.HTML&&n!==zt.TBODY&&n!==zt.TD&&n!==zt.TFOOT&&n!==zt.TH&&n!==zt.THEAD&&n!==zt.TR&&As(e,t);}function As(e,t){const n=e.fosterParentingEnabled;e.fosterParentingEnabled=!0,e._processTokenInBodyMode(t),e.fosterParentingEnabled=n;}function us(e,t){let n=0;if(e.hasNonWhitespacePendingCharacterToken)for(;n<e.pendingCharacterTokens.length;n++)As(e,e.pendingCharacterTokens[n]);else for(;n<e.pendingCharacterTokens.length;n++)e._insertCharacters(e.pendingCharacterTokens[n]);e.insertionMode=e.originalInsertionMode,e._processToken(t);}function Ns(e,t){e.openElements.currentTagName===zt.COLGROUP&&(e.openElements.pop(),e.insertionMode=En,e._processToken(t));}function ds(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.OPTION?(e.openElements.currentTagName===zt.OPTION&&e.openElements.pop(),e._insertElement(t,qt.HTML)):n===zt.OPTGROUP?(e.openElements.currentTagName===zt.OPTION&&e.openElements.pop(),e.openElements.currentTagName===zt.OPTGROUP&&e.openElements.pop(),e._insertElement(t,qt.HTML)):n===zt.INPUT||n===zt.KEYGEN||n===zt.TEXTAREA||n===zt.SELECT?e.openElements.hasInSelectScope(zt.SELECT)&&(e.openElements.popUntilTagNamePopped(zt.SELECT),e._resetInsertionMode(),n!==zt.SELECT&&e._processToken(t)):n!==zt.SCRIPT&&n!==zt.TEMPLATE||Qn(e,t);}function Cs(e,t){const n=t.tagName;if(n===zt.OPTGROUP){const t=e.openElements.items[e.openElements.stackTop-1],n=t&&e.treeAdapter.getTagName(t);e.openElements.currentTagName===zt.OPTION&&n===zt.OPTGROUP&&e.openElements.pop(),e.openElements.currentTagName===zt.OPTGROUP&&e.openElements.pop();}else n===zt.OPTION?e.openElements.currentTagName===zt.OPTION&&e.openElements.pop():n===zt.SELECT&&e.openElements.hasInSelectScope(zt.SELECT)?(e.openElements.popUntilTagNamePopped(zt.SELECT),e._resetInsertionMode()):n===zt.TEMPLATE&&Xn(e,t);}function Os(e,t){e.openElements.tmplCount>0?(e.openElements.popUntilTagNamePopped(zt.TEMPLATE),e.activeFormattingElements.clearToLastMarker(),e._popTmplInsertionMode(),e._resetInsertionMode(),e._processToken(t)):e.stopped=!0;}function fs(e,t){e.insertionMode=an,e._processToken(t);}function Ss(e,t){e.insertionMode=an,e._processToken(t);}return Ct.TAG_NAMES,Ct.NAMESPACES,e.parse=function(e,t){return new kn(t).parse(e)},e.parseFragment=function(e,t,n){return "string"==typeof e&&(n=t,t=e,e=null),new kn(n).parseFragment(t,e)},Object.defineProperty(e,"__esModule",{value:!0}),e}({});const parse=e.parse;const parseFragment=e.parseFragment;

const docParser = new WeakMap();
function parseDocumentUtil(ownerDocument, html) {
  const doc = parse(html.trim(), getParser(ownerDocument));
  doc.documentElement = doc.firstElementChild;
  doc.head = doc.documentElement.firstElementChild;
  doc.body = doc.head.nextElementSibling;
  return doc;
}
function parseFragmentUtil(ownerDocument, html) {
  if (typeof html === 'string') {
    html = html.trim();
  }
  else {
    html = '';
  }
  const frag = parseFragment(html, getParser(ownerDocument));
  return frag;
}
function getParser(ownerDocument) {
  let parseOptions = docParser.get(ownerDocument);
  if (parseOptions != null) {
    return parseOptions;
  }
  const treeAdapter = {
    createDocument() {
      const doc = ownerDocument.createElement("#document" /* DOCUMENT_NODE */);
      doc['x-mode'] = 'no-quirks';
      return doc;
    },
    setNodeSourceCodeLocation(node, location) {
      node.sourceCodeLocation = location;
    },
    getNodeSourceCodeLocation(node) {
      return node.sourceCodeLocation;
    },
    createDocumentFragment() {
      return ownerDocument.createDocumentFragment();
    },
    createElement(tagName, namespaceURI, attrs) {
      const elm = ownerDocument.createElementNS(namespaceURI, tagName);
      for (let i = 0; i < attrs.length; i++) {
        const attr = attrs[i];
        if (attr.namespace == null || attr.namespace === 'http://www.w3.org/1999/xhtml') {
          elm.setAttribute(attr.name, attr.value);
        }
        else {
          elm.setAttributeNS(attr.namespace, attr.name, attr.value);
        }
      }
      return elm;
    },
    createCommentNode(data) {
      return ownerDocument.createComment(data);
    },
    appendChild(parentNode, newNode) {
      parentNode.appendChild(newNode);
    },
    insertBefore(parentNode, newNode, referenceNode) {
      parentNode.insertBefore(newNode, referenceNode);
    },
    setTemplateContent(templateElement, contentElement) {
      templateElement.content = contentElement;
    },
    getTemplateContent(templateElement) {
      return templateElement.content;
    },
    setDocumentType(doc, name, publicId, systemId) {
      let doctypeNode = doc.childNodes.find((n) => n.nodeType === 10 /* DOCUMENT_TYPE_NODE */);
      if (doctypeNode == null) {
        doctypeNode = ownerDocument.createDocumentTypeNode();
        doc.insertBefore(doctypeNode, doc.firstChild);
      }
      doctypeNode.nodeValue = '!DOCTYPE';
      doctypeNode['x-name'] = name;
      doctypeNode['x-publicId'] = publicId;
      doctypeNode['x-systemId'] = systemId;
    },
    setDocumentMode(doc, mode) {
      doc['x-mode'] = mode;
    },
    getDocumentMode(doc) {
      return doc['x-mode'];
    },
    detachNode(node) {
      node.remove();
    },
    insertText(parentNode, text) {
      const lastChild = parentNode.lastChild;
      if (lastChild != null && lastChild.nodeType === 3 /* TEXT_NODE */) {
        lastChild.nodeValue += text;
      }
      else {
        parentNode.appendChild(ownerDocument.createTextNode(text));
      }
    },
    insertTextBefore(parentNode, text, referenceNode) {
      const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];
      if (prevNode != null && prevNode.nodeType === 3 /* TEXT_NODE */) {
        prevNode.nodeValue += text;
      }
      else {
        parentNode.insertBefore(ownerDocument.createTextNode(text), referenceNode);
      }
    },
    adoptAttributes(recipient, attrs) {
      for (let i = 0; i < attrs.length; i++) {
        const attr = attrs[i];
        if (recipient.hasAttributeNS(attr.namespace, attr.name) === false) {
          recipient.setAttributeNS(attr.namespace, attr.name, attr.value);
        }
      }
    },
    getFirstChild(node) {
      return node.childNodes[0];
    },
    getChildNodes(node) {
      return node.childNodes;
    },
    getParentNode(node) {
      return node.parentNode;
    },
    getAttrList(element) {
      const attrs = element.attributes.__items.map((attr) => {
        return {
          name: attr.name,
          value: attr.value,
          namespace: attr.namespaceURI,
          prefix: null,
        };
      });
      return attrs;
    },
    getTagName(element) {
      if (element.namespaceURI === 'http://www.w3.org/1999/xhtml') {
        return element.nodeName.toLowerCase();
      }
      else {
        return element.nodeName;
      }
    },
    getNamespaceURI(element) {
      return element.namespaceURI;
    },
    getTextNodeContent(textNode) {
      return textNode.nodeValue;
    },
    getCommentNodeContent(commentNode) {
      return commentNode.nodeValue;
    },
    getDocumentTypeNodeName(doctypeNode) {
      return doctypeNode['x-name'];
    },
    getDocumentTypeNodePublicId(doctypeNode) {
      return doctypeNode['x-publicId'];
    },
    getDocumentTypeNodeSystemId(doctypeNode) {
      return doctypeNode['x-systemId'];
    },
    isTextNode(node) {
      return node.nodeType === 3 /* TEXT_NODE */;
    },
    isCommentNode(node) {
      return node.nodeType === 8 /* COMMENT_NODE */;
    },
    isDocumentTypeNode(node) {
      return node.nodeType === 10 /* DOCUMENT_TYPE_NODE */;
    },
    isElementNode(node) {
      return node.nodeType === 1 /* ELEMENT_NODE */;
    },
  };
  parseOptions = {
    treeAdapter: treeAdapter,
  };
  docParser.set(ownerDocument, parseOptions);
  return parseOptions;
}

class MockNode {
  constructor(ownerDocument, nodeType, nodeName, nodeValue) {
    this.ownerDocument = ownerDocument;
    this.nodeType = nodeType;
    this.nodeName = nodeName;
    this._nodeValue = nodeValue;
    this.parentNode = null;
    this.childNodes = [];
  }
  appendChild(newNode) {
    if (newNode.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {
      const nodes = newNode.childNodes.slice();
      for (const child of nodes) {
        this.appendChild(child);
      }
    }
    else {
      newNode.remove();
      newNode.parentNode = this;
      this.childNodes.push(newNode);
      connectNode(this.ownerDocument, newNode);
    }
    return newNode;
  }
  append(...items) {
    items.forEach((item) => {
      const isNode = typeof item === 'object' && item !== null && 'nodeType' in item;
      this.appendChild(isNode ? item : this.ownerDocument.createTextNode(String(item)));
    });
  }
  prepend(...items) {
    const firstChild = this.firstChild;
    items.forEach((item) => {
      const isNode = typeof item === 'object' && item !== null && 'nodeType' in item;
      this.insertBefore(isNode ? item : this.ownerDocument.createTextNode(String(item)), firstChild);
    });
  }
  cloneNode(deep) {
    throw new Error(`invalid node type to clone: ${this.nodeType}, deep: ${deep}`);
  }
  compareDocumentPosition(_other) {
    // unimplemented
    // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition
    return -1;
  }
  get firstChild() {
    return this.childNodes[0] || null;
  }
  insertBefore(newNode, referenceNode) {
    if (newNode.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {
      for (let i = 0, ii = newNode.childNodes.length; i < ii; i++) {
        insertBefore(this, newNode.childNodes[i], referenceNode);
      }
    }
    else {
      insertBefore(this, newNode, referenceNode);
    }
    return newNode;
  }
  get isConnected() {
    let node = this;
    while (node != null) {
      if (node.nodeType === 9 /* DOCUMENT_NODE */) {
        return true;
      }
      node = node.parentNode;
      if (node != null && node.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {
        node = node.host;
      }
    }
    return false;
  }
  isSameNode(node) {
    return this === node;
  }
  get lastChild() {
    return this.childNodes[this.childNodes.length - 1] || null;
  }
  get nextSibling() {
    if (this.parentNode != null) {
      const index = this.parentNode.childNodes.indexOf(this) + 1;
      return this.parentNode.childNodes[index] || null;
    }
    return null;
  }
  get nodeValue() {
    return this._nodeValue;
  }
  set nodeValue(value) {
    this._nodeValue = value;
  }
  get parentElement() {
    return this.parentNode || null;
  }
  set parentElement(value) {
    this.parentNode = value;
  }
  get previousSibling() {
    if (this.parentNode != null) {
      const index = this.parentNode.childNodes.indexOf(this) - 1;
      return this.parentNode.childNodes[index] || null;
    }
    return null;
  }
  contains(otherNode) {
    if (otherNode === this) {
      return true;
    }
    return this.childNodes.includes(otherNode);
  }
  removeChild(childNode) {
    const index = this.childNodes.indexOf(childNode);
    if (index > -1) {
      this.childNodes.splice(index, 1);
      if (this.nodeType === 1 /* ELEMENT_NODE */) {
        const wasConnected = this.isConnected;
        childNode.parentNode = null;
        if (wasConnected === true) {
          disconnectNode(childNode);
        }
      }
      else {
        childNode.parentNode = null;
      }
    }
    else {
      throw new Error(`node not found within childNodes during removeChild`);
    }
    return childNode;
  }
  remove() {
    if (this.parentNode != null) {
      this.parentNode.removeChild(this);
    }
  }
  replaceChild(newChild, oldChild) {
    if (oldChild.parentNode === this) {
      this.insertBefore(newChild, oldChild);
      oldChild.remove();
      return newChild;
    }
    return null;
  }
  get textContent() {
    return this._nodeValue;
  }
  set textContent(value) {
    this._nodeValue = String(value);
  }
}
MockNode.ELEMENT_NODE = 1;
MockNode.TEXT_NODE = 3;
MockNode.PROCESSING_INSTRUCTION_NODE = 7;
MockNode.COMMENT_NODE = 8;
MockNode.DOCUMENT_NODE = 9;
MockNode.DOCUMENT_TYPE_NODE = 10;
MockNode.DOCUMENT_FRAGMENT_NODE = 11;
class MockNodeList {
  constructor(ownerDocument, childNodes, length) {
    this.ownerDocument = ownerDocument;
    this.childNodes = childNodes;
    this.length = length;
  }
}
class MockElement extends MockNode {
  constructor(ownerDocument, nodeName) {
    super(ownerDocument, 1 /* ELEMENT_NODE */, typeof nodeName === 'string' ? nodeName : null, null);
    this.namespaceURI = null;
  }
  addEventListener(type, handler) {
    addEventListener(this, type, handler);
  }
  attachShadow(_opts) {
    const shadowRoot = this.ownerDocument.createDocumentFragment();
    this.shadowRoot = shadowRoot;
    return shadowRoot;
  }
  get shadowRoot() {
    return this.__shadowRoot || null;
  }
  set shadowRoot(shadowRoot) {
    if (shadowRoot != null) {
      shadowRoot.host = this;
      this.__shadowRoot = shadowRoot;
    }
    else {
      delete this.__shadowRoot;
    }
  }
  get attributes() {
    if (this.__attributeMap == null) {
      this.__attributeMap = createAttributeProxy(false);
    }
    return this.__attributeMap;
  }
  set attributes(attrs) {
    this.__attributeMap = attrs;
  }
  get children() {
    return this.childNodes.filter((n) => n.nodeType === 1 /* ELEMENT_NODE */);
  }
  get childElementCount() {
    return this.childNodes.filter((n) => n.nodeType === 1 /* ELEMENT_NODE */).length;
  }
  get className() {
    return this.getAttributeNS(null, 'class') || '';
  }
  set className(value) {
    this.setAttributeNS(null, 'class', value);
  }
  get classList() {
    return new MockClassList(this);
  }
  click() {
    dispatchEvent(this, new MockEvent('click', { bubbles: true, cancelable: true, composed: true }));
  }
  cloneNode(_deep) {
    // implemented on MockElement.prototype from within element.ts
    return null;
  }
  closest(selector) {
    let elm = this;
    while (elm != null) {
      if (elm.matches(selector)) {
        return elm;
      }
      elm = elm.parentNode;
    }
    return null;
  }
  get dataset() {
    return dataset(this);
  }
  get dir() {
    return this.getAttributeNS(null, 'dir') || '';
  }
  set dir(value) {
    this.setAttributeNS(null, 'dir', value);
  }
  dispatchEvent(ev) {
    return dispatchEvent(this, ev);
  }
  get firstElementChild() {
    return this.children[0] || null;
  }
  getAttribute(attrName) {
    if (attrName === 'style') {
      if (this.__style != null && this.__style.length > 0) {
        return this.style.cssText;
      }
      return null;
    }
    const attr = this.attributes.getNamedItem(attrName);
    if (attr != null) {
      return attr.value;
    }
    return null;
  }
  getAttributeNS(namespaceURI, attrName) {
    const attr = this.attributes.getNamedItemNS(namespaceURI, attrName);
    if (attr != null) {
      return attr.value;
    }
    return null;
  }
  getBoundingClientRect() {
    return { bottom: 0, height: 0, left: 0, right: 0, top: 0, width: 0, x: 0, y: 0 };
  }
  getRootNode(opts) {
    const isComposed = opts != null && opts.composed === true;
    let node = this;
    while (node.parentNode != null) {
      node = node.parentNode;
      if (isComposed === true && node.parentNode == null && node.host != null) {
        node = node.host;
      }
    }
    return node;
  }
  get draggable() {
    return this.getAttributeNS(null, 'draggable') === 'true';
  }
  set draggable(value) {
    this.setAttributeNS(null, 'draggable', value);
  }
  hasChildNodes() {
    return this.childNodes.length > 0;
  }
  get id() {
    return this.getAttributeNS(null, 'id') || '';
  }
  set id(value) {
    this.setAttributeNS(null, 'id', value);
  }
  get innerHTML() {
    if (this.childNodes.length === 0) {
      return '';
    }
    return serializeNodeToHtml(this, {
      newLines: false,
      indentSpaces: 0,
    });
  }
  set innerHTML(html) {
    if (NON_ESCAPABLE_CONTENT.has(this.nodeName) === true) {
      setTextContent(this, html);
    }
    else {
      for (let i = this.childNodes.length - 1; i >= 0; i--) {
        this.removeChild(this.childNodes[i]);
      }
      if (typeof html === 'string') {
        const frag = parseFragmentUtil(this.ownerDocument, html);
        while (frag.childNodes.length > 0) {
          this.appendChild(frag.childNodes[0]);
        }
      }
    }
  }
  get innerText() {
    const text = [];
    getTextContent(this.childNodes, text);
    return text.join('');
  }
  set innerText(value) {
    setTextContent(this, value);
  }
  insertAdjacentElement(position, elm) {
    if (position === 'beforebegin') {
      insertBefore(this.parentNode, elm, this);
    }
    else if (position === 'afterbegin') {
      this.prepend(elm);
    }
    else if (position === 'beforeend') {
      this.appendChild(elm);
    }
    else if (position === 'afterend') {
      insertBefore(this.parentNode, elm, this.nextSibling);
    }
    return elm;
  }
  insertAdjacentHTML(position, html) {
    const frag = parseFragmentUtil(this.ownerDocument, html);
    if (position === 'beforebegin') {
      while (frag.childNodes.length > 0) {
        insertBefore(this.parentNode, frag.childNodes[0], this);
      }
    }
    else if (position === 'afterbegin') {
      while (frag.childNodes.length > 0) {
        this.prepend(frag.childNodes[frag.childNodes.length - 1]);
      }
    }
    else if (position === 'beforeend') {
      while (frag.childNodes.length > 0) {
        this.appendChild(frag.childNodes[0]);
      }
    }
    else if (position === 'afterend') {
      while (frag.childNodes.length > 0) {
        insertBefore(this.parentNode, frag.childNodes[frag.childNodes.length - 1], this.nextSibling);
      }
    }
  }
  insertAdjacentText(position, text) {
    const elm = this.ownerDocument.createTextNode(text);
    if (position === 'beforebegin') {
      insertBefore(this.parentNode, elm, this);
    }
    else if (position === 'afterbegin') {
      this.prepend(elm);
    }
    else if (position === 'beforeend') {
      this.appendChild(elm);
    }
    else if (position === 'afterend') {
      insertBefore(this.parentNode, elm, this.nextSibling);
    }
  }
  hasAttribute(attrName) {
    if (attrName === 'style') {
      return this.__style != null && this.__style.length > 0;
    }
    return this.getAttribute(attrName) !== null;
  }
  hasAttributeNS(namespaceURI, name) {
    return this.getAttributeNS(namespaceURI, name) !== null;
  }
  get hidden() {
    return this.hasAttributeNS(null, 'hidden');
  }
  set hidden(isHidden) {
    if (isHidden === true) {
      this.setAttributeNS(null, 'hidden', '');
    }
    else {
      this.removeAttributeNS(null, 'hidden');
    }
  }
  get lang() {
    return this.getAttributeNS(null, 'lang') || '';
  }
  set lang(value) {
    this.setAttributeNS(null, 'lang', value);
  }
  get lastElementChild() {
    const children = this.children;
    return children[children.length - 1] || null;
  }
  matches(selector) {
    return matches(selector, this);
  }
  get nextElementSibling() {
    const parentElement = this.parentElement;
    if (parentElement != null &&
      (parentElement.nodeType === 1 /* ELEMENT_NODE */ ||
        parentElement.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */ ||
        parentElement.nodeType === 9 /* DOCUMENT_NODE */)) {
      const children = parentElement.children;
      const index = children.indexOf(this) + 1;
      return parentElement.children[index] || null;
    }
    return null;
  }
  get outerHTML() {
    return serializeNodeToHtml(this, {
      newLines: false,
      outerHtml: true,
      indentSpaces: 0,
    });
  }
  get previousElementSibling() {
    const parentElement = this.parentElement;
    if (parentElement != null &&
      (parentElement.nodeType === 1 /* ELEMENT_NODE */ ||
        parentElement.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */ ||
        parentElement.nodeType === 9 /* DOCUMENT_NODE */)) {
      const children = parentElement.children;
      const index = children.indexOf(this) - 1;
      return parentElement.children[index] || null;
    }
    return null;
  }
  getElementsByClassName(classNames) {
    const classes = classNames
      .trim()
      .split(' ')
      .filter((c) => c.length > 0);
    const results = [];
    getElementsByClassName(this, classes, results);
    return results;
  }
  getElementsByTagName(tagName) {
    const results = [];
    getElementsByTagName(this, tagName.toLowerCase(), results);
    return results;
  }
  querySelector(selector) {
    return selectOne(selector, this);
  }
  querySelectorAll(selector) {
    return selectAll(selector, this);
  }
  removeAttribute(attrName) {
    if (attrName === 'style') {
      delete this.__style;
    }
    else {
      const attr = this.attributes.getNamedItem(attrName);
      if (attr != null) {
        this.attributes.removeNamedItemNS(attr);
        if (checkAttributeChanged(this) === true) {
          attributeChanged(this, attrName, attr.value, null);
        }
      }
    }
  }
  removeAttributeNS(namespaceURI, attrName) {
    const attr = this.attributes.getNamedItemNS(namespaceURI, attrName);
    if (attr != null) {
      this.attributes.removeNamedItemNS(attr);
      if (checkAttributeChanged(this) === true) {
        attributeChanged(this, attrName, attr.value, null);
      }
    }
  }
  removeEventListener(type, handler) {
    removeEventListener(this, type, handler);
  }
  setAttribute(attrName, value) {
    if (attrName === 'style') {
      this.style = value;
    }
    else {
      const attributes = this.attributes;
      let attr = attributes.getNamedItem(attrName);
      const checkAttrChanged = checkAttributeChanged(this);
      if (attr != null) {
        if (checkAttrChanged === true) {
          const oldValue = attr.value;
          attr.value = value;
          if (oldValue !== attr.value) {
            attributeChanged(this, attr.name, oldValue, attr.value);
          }
        }
        else {
          attr.value = value;
        }
      }
      else {
        if (attributes.caseInsensitive) {
          attrName = attrName.toLowerCase();
        }
        attr = new MockAttr(attrName, value);
        attributes.__items.push(attr);
        if (checkAttrChanged === true) {
          attributeChanged(this, attrName, null, attr.value);
        }
      }
    }
  }
  setAttributeNS(namespaceURI, attrName, value) {
    const attributes = this.attributes;
    let attr = attributes.getNamedItemNS(namespaceURI, attrName);
    const checkAttrChanged = checkAttributeChanged(this);
    if (attr != null) {
      if (checkAttrChanged === true) {
        const oldValue = attr.value;
        attr.value = value;
        if (oldValue !== attr.value) {
          attributeChanged(this, attr.name, oldValue, attr.value);
        }
      }
      else {
        attr.value = value;
      }
    }
    else {
      attr = new MockAttr(attrName, value, namespaceURI);
      attributes.__items.push(attr);
      if (checkAttrChanged === true) {
        attributeChanged(this, attrName, null, attr.value);
      }
    }
  }
  get style() {
    if (this.__style == null) {
      this.__style = createCSSStyleDeclaration();
    }
    return this.__style;
  }
  set style(val) {
    if (typeof val === 'string') {
      if (this.__style == null) {
        this.__style = createCSSStyleDeclaration();
      }
      this.__style.cssText = val;
    }
    else {
      this.__style = val;
    }
  }
  get tabIndex() {
    return parseInt(this.getAttributeNS(null, 'tabindex') || '-1', 10);
  }
  set tabIndex(value) {
    this.setAttributeNS(null, 'tabindex', value);
  }
  get tagName() {
    return this.nodeName;
  }
  set tagName(value) {
    this.nodeName = value;
  }
  get textContent() {
    const text = [];
    getTextContent(this.childNodes, text);
    return text.join('');
  }
  set textContent(value) {
    setTextContent(this, value);
  }
  get title() {
    return this.getAttributeNS(null, 'title') || '';
  }
  set title(value) {
    this.setAttributeNS(null, 'title', value);
  }
  onanimationstart() {
    /**/
  }
  onanimationend() {
    /**/
  }
  onanimationiteration() {
    /**/
  }
  onabort() {
    /**/
  }
  onauxclick() {
    /**/
  }
  onbeforecopy() {
    /**/
  }
  onbeforecut() {
    /**/
  }
  onbeforepaste() {
    /**/
  }
  onblur() {
    /**/
  }
  oncancel() {
    /**/
  }
  oncanplay() {
    /**/
  }
  oncanplaythrough() {
    /**/
  }
  onchange() {
    /**/
  }
  onclick() {
    /**/
  }
  onclose() {
    /**/
  }
  oncontextmenu() {
    /**/
  }
  oncopy() {
    /**/
  }
  oncuechange() {
    /**/
  }
  oncut() {
    /**/
  }
  ondblclick() {
    /**/
  }
  ondrag() {
    /**/
  }
  ondragend() {
    /**/
  }
  ondragenter() {
    /**/
  }
  ondragleave() {
    /**/
  }
  ondragover() {
    /**/
  }
  ondragstart() {
    /**/
  }
  ondrop() {
    /**/
  }
  ondurationchange() {
    /**/
  }
  onemptied() {
    /**/
  }
  onended() {
    /**/
  }
  onerror() {
    /**/
  }
  onfocus() {
    /**/
  }
  onfocusin() {
    /**/
  }
  onfocusout() {
    /**/
  }
  onformdata() {
    /**/
  }
  onfullscreenchange() {
    /**/
  }
  onfullscreenerror() {
    /**/
  }
  ongotpointercapture() {
    /**/
  }
  oninput() {
    /**/
  }
  oninvalid() {
    /**/
  }
  onkeydown() {
    /**/
  }
  onkeypress() {
    /**/
  }
  onkeyup() {
    /**/
  }
  onload() {
    /**/
  }
  onloadeddata() {
    /**/
  }
  onloadedmetadata() {
    /**/
  }
  onloadstart() {
    /**/
  }
  onlostpointercapture() {
    /**/
  }
  onmousedown() {
    /**/
  }
  onmouseenter() {
    /**/
  }
  onmouseleave() {
    /**/
  }
  onmousemove() {
    /**/
  }
  onmouseout() {
    /**/
  }
  onmouseover() {
    /**/
  }
  onmouseup() {
    /**/
  }
  onmousewheel() {
    /**/
  }
  onpaste() {
    /**/
  }
  onpause() {
    /**/
  }
  onplay() {
    /**/
  }
  onplaying() {
    /**/
  }
  onpointercancel() {
    /**/
  }
  onpointerdown() {
    /**/
  }
  onpointerenter() {
    /**/
  }
  onpointerleave() {
    /**/
  }
  onpointermove() {
    /**/
  }
  onpointerout() {
    /**/
  }
  onpointerover() {
    /**/
  }
  onpointerup() {
    /**/
  }
  onprogress() {
    /**/
  }
  onratechange() {
    /**/
  }
  onreset() {
    /**/
  }
  onresize() {
    /**/
  }
  onscroll() {
    /**/
  }
  onsearch() {
    /**/
  }
  onseeked() {
    /**/
  }
  onseeking() {
    /**/
  }
  onselect() {
    /**/
  }
  onselectstart() {
    /**/
  }
  onstalled() {
    /**/
  }
  onsubmit() {
    /**/
  }
  onsuspend() {
    /**/
  }
  ontimeupdate() {
    /**/
  }
  ontoggle() {
    /**/
  }
  onvolumechange() {
    /**/
  }
  onwaiting() {
    /**/
  }
  onwebkitfullscreenchange() {
    /**/
  }
  onwebkitfullscreenerror() {
    /**/
  }
  onwheel() {
    /**/
  }
  toString(opts) {
    return serializeNodeToHtml(this, opts);
  }
}
function getElementsByClassName(elm, classNames, foundElms) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    for (let j = 0, jj = classNames.length; j < jj; j++) {
      if (childElm.classList.contains(classNames[j])) {
        foundElms.push(childElm);
      }
    }
    getElementsByClassName(childElm, classNames, foundElms);
  }
}
function getElementsByTagName(elm, tagName, foundElms) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    if (tagName === '*' || childElm.nodeName.toLowerCase() === tagName) {
      foundElms.push(childElm);
    }
    getElementsByTagName(childElm, tagName, foundElms);
  }
}
function resetElement(elm) {
  resetEventListeners(elm);
  delete elm.__attributeMap;
  delete elm.__shadowRoot;
  delete elm.__style;
}
function insertBefore(parentNode, newNode, referenceNode) {
  if (newNode !== referenceNode) {
    newNode.remove();
    newNode.parentNode = parentNode;
    newNode.ownerDocument = parentNode.ownerDocument;
    if (referenceNode != null) {
      const index = parentNode.childNodes.indexOf(referenceNode);
      if (index > -1) {
        parentNode.childNodes.splice(index, 0, newNode);
      }
      else {
        throw new Error(`referenceNode not found in parentNode.childNodes`);
      }
    }
    else {
      parentNode.childNodes.push(newNode);
    }
    connectNode(parentNode.ownerDocument, newNode);
  }
  return newNode;
}
class MockHTMLElement extends MockElement {
  constructor(ownerDocument, nodeName) {
    super(ownerDocument, typeof nodeName === 'string' ? nodeName.toUpperCase() : null);
    this.namespaceURI = 'http://www.w3.org/1999/xhtml';
  }
  get tagName() {
    return this.nodeName;
  }
  set tagName(value) {
    this.nodeName = value;
  }
  get attributes() {
    if (this.__attributeMap == null) {
      this.__attributeMap = createAttributeProxy(true);
    }
    return this.__attributeMap;
  }
  set attributes(attrs) {
    this.__attributeMap = attrs;
  }
}
class MockTextNode extends MockNode {
  constructor(ownerDocument, text) {
    super(ownerDocument, 3 /* TEXT_NODE */, "#text" /* TEXT_NODE */, text);
  }
  cloneNode(_deep) {
    return new MockTextNode(null, this.nodeValue);
  }
  get textContent() {
    return this.nodeValue;
  }
  set textContent(text) {
    this.nodeValue = text;
  }
  get data() {
    return this.nodeValue;
  }
  set data(text) {
    this.nodeValue = text;
  }
  get wholeText() {
    if (this.parentNode != null) {
      const text = [];
      for (let i = 0, ii = this.parentNode.childNodes.length; i < ii; i++) {
        const childNode = this.parentNode.childNodes[i];
        if (childNode.nodeType === 3 /* TEXT_NODE */) {
          text.push(childNode.nodeValue);
        }
      }
      return text.join('');
    }
    return this.nodeValue;
  }
}
function getTextContent(childNodes, text) {
  for (let i = 0, ii = childNodes.length; i < ii; i++) {
    const childNode = childNodes[i];
    if (childNode.nodeType === 3 /* TEXT_NODE */) {
      text.push(childNode.nodeValue);
    }
    else if (childNode.nodeType === 1 /* ELEMENT_NODE */) {
      getTextContent(childNode.childNodes, text);
    }
  }
}
function setTextContent(elm, text) {
  for (let i = elm.childNodes.length - 1; i >= 0; i--) {
    elm.removeChild(elm.childNodes[i]);
  }
  const textNode = new MockTextNode(elm.ownerDocument, text);
  elm.appendChild(textNode);
}

class MockComment extends MockNode {
  constructor(ownerDocument, data) {
    super(ownerDocument, 8 /* COMMENT_NODE */, "#comment" /* COMMENT_NODE */, data);
  }
  cloneNode(_deep) {
    return new MockComment(null, this.nodeValue);
  }
  get textContent() {
    return this.nodeValue;
  }
  set textContent(text) {
    this.nodeValue = text;
  }
}

class MockDocumentFragment extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, null);
    this.nodeName = "#document-fragment" /* DOCUMENT_FRAGMENT_NODE */;
    this.nodeType = 11 /* DOCUMENT_FRAGMENT_NODE */;
  }
  getElementById(id) {
    return getElementById(this, id);
  }
  cloneNode(deep) {
    const cloned = new MockDocumentFragment(null);
    if (deep) {
      for (let i = 0, ii = this.childNodes.length; i < ii; i++) {
        const childNode = this.childNodes[i];
        if (childNode.nodeType === 1 /* ELEMENT_NODE */ ||
          childNode.nodeType === 3 /* TEXT_NODE */ ||
          childNode.nodeType === 8 /* COMMENT_NODE */) {
          const clonedChildNode = this.childNodes[i].cloneNode(true);
          cloned.appendChild(clonedChildNode);
        }
      }
    }
    return cloned;
  }
}

class MockDocumentTypeNode extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, '!DOCTYPE');
    this.nodeType = 10 /* DOCUMENT_TYPE_NODE */;
    this.setAttribute('html', '');
  }
}

class MockCSSRule {
  constructor(parentStyleSheet) {
    this.parentStyleSheet = parentStyleSheet;
    this.cssText = '';
    this.type = 0;
  }
}
class MockCSSStyleSheet {
  constructor(ownerNode) {
    this.type = 'text/css';
    this.parentStyleSheet = null;
    this.cssRules = [];
    this.ownerNode = ownerNode;
  }
  get rules() {
    return this.cssRules;
  }
  set rules(rules) {
    this.cssRules = rules;
  }
  deleteRule(index) {
    if (index >= 0 && index < this.cssRules.length) {
      this.cssRules.splice(index, 1);
      updateStyleTextNode(this.ownerNode);
    }
  }
  insertRule(rule, index = 0) {
    if (typeof index !== 'number') {
      index = 0;
    }
    if (index < 0) {
      index = 0;
    }
    if (index > this.cssRules.length) {
      index = this.cssRules.length;
    }
    const cssRule = new MockCSSRule(this);
    cssRule.cssText = rule;
    this.cssRules.splice(index, 0, cssRule);
    updateStyleTextNode(this.ownerNode);
    return index;
  }
}
function getStyleElementText(styleElm) {
  const output = [];
  for (let i = 0; i < styleElm.childNodes.length; i++) {
    output.push(styleElm.childNodes[i].nodeValue);
  }
  return output.join('');
}
function setStyleElementText(styleElm, text) {
  // keeping the innerHTML and the sheet.cssRules connected
  // is not technically correct, but since we're doing
  // SSR we'll need to turn any assigned cssRules into
  // real text, not just properties that aren't rendered
  const sheet = styleElm.sheet;
  sheet.cssRules.length = 0;
  sheet.insertRule(text);
  updateStyleTextNode(styleElm);
}
function updateStyleTextNode(styleElm) {
  const childNodeLen = styleElm.childNodes.length;
  if (childNodeLen > 1) {
    for (let i = childNodeLen - 1; i >= 1; i--) {
      styleElm.removeChild(styleElm.childNodes[i]);
    }
  }
  else if (childNodeLen < 1) {
    styleElm.appendChild(styleElm.ownerDocument.createTextNode(''));
  }
  const textNode = styleElm.childNodes[0];
  textNode.nodeValue = styleElm.sheet.cssRules.map((r) => r.cssText).join('\n');
}

function createElement(ownerDocument, tagName) {
  if (typeof tagName !== 'string' || tagName === '' || !/^[a-z0-9-_:]+$/i.test(tagName)) {
    throw new Error(`The tag name provided (${tagName}) is not a valid name.`);
  }
  tagName = tagName.toLowerCase();
  switch (tagName) {
    case 'a':
      return new MockAnchorElement(ownerDocument);
    case 'base':
      return new MockBaseElement(ownerDocument);
    case 'button':
      return new MockButtonElement(ownerDocument);
    case 'canvas':
      return new MockCanvasElement(ownerDocument);
    case 'form':
      return new MockFormElement(ownerDocument);
    case 'img':
      return new MockImageElement(ownerDocument);
    case 'input':
      return new MockInputElement(ownerDocument);
    case 'link':
      return new MockLinkElement(ownerDocument);
    case 'meta':
      return new MockMetaElement(ownerDocument);
    case 'script':
      return new MockScriptElement(ownerDocument);
    case 'style':
      return new MockStyleElement(ownerDocument);
    case 'template':
      return new MockTemplateElement(ownerDocument);
    case 'title':
      return new MockTitleElement(ownerDocument);
  }
  if (ownerDocument != null && tagName.includes('-')) {
    const win = ownerDocument.defaultView;
    if (win != null && win.customElements != null) {
      return createCustomElement(win.customElements, ownerDocument, tagName);
    }
  }
  return new MockHTMLElement(ownerDocument, tagName);
}
function createElementNS(ownerDocument, namespaceURI, tagName) {
  if (namespaceURI === 'http://www.w3.org/1999/xhtml') {
    return createElement(ownerDocument, tagName);
  }
  else if (namespaceURI === 'http://www.w3.org/2000/svg') {
    return new MockSVGElement(ownerDocument, tagName);
  }
  else {
    return new MockElement(ownerDocument, tagName);
  }
}
class MockAnchorElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'a');
  }
  get href() {
    return fullUrl(this, 'href');
  }
  set href(value) {
    this.setAttribute('href', value);
  }
  get pathname() {
    return new URL(this.href).pathname;
  }
}
class MockButtonElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'button');
  }
}
patchPropAttributes(MockButtonElement.prototype, {
  type: String,
}, {
  type: 'submit',
});
class MockImageElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'img');
  }
  get draggable() {
    return this.getAttributeNS(null, 'draggable') !== 'false';
  }
  set draggable(value) {
    this.setAttributeNS(null, 'draggable', value);
  }
  get src() {
    return fullUrl(this, 'src');
  }
  set src(value) {
    this.setAttribute('src', value);
  }
}
patchPropAttributes(MockImageElement.prototype, {
  height: Number,
  width: Number,
});
class MockInputElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'input');
  }
  get list() {
    const listId = this.getAttribute('list');
    if (listId) {
      return this.ownerDocument.getElementById(listId);
    }
    return null;
  }
}
patchPropAttributes(MockInputElement.prototype, {
  accept: String,
  autocomplete: String,
  autofocus: Boolean,
  capture: String,
  checked: Boolean,
  disabled: Boolean,
  form: String,
  formaction: String,
  formenctype: String,
  formmethod: String,
  formnovalidate: String,
  formtarget: String,
  height: Number,
  inputmode: String,
  max: String,
  maxLength: Number,
  min: String,
  minLength: Number,
  multiple: Boolean,
  name: String,
  pattern: String,
  placeholder: String,
  required: Boolean,
  readOnly: Boolean,
  size: Number,
  spellCheck: Boolean,
  src: String,
  step: String,
  type: String,
  value: String,
  width: Number,
}, {
  type: 'text',
});
class MockFormElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'form');
  }
}
patchPropAttributes(MockFormElement.prototype, {
  name: String,
});
class MockLinkElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'link');
  }
  get href() {
    return fullUrl(this, 'href');
  }
  set href(value) {
    this.setAttribute('href', value);
  }
}
patchPropAttributes(MockLinkElement.prototype, {
  crossorigin: String,
  media: String,
  rel: String,
  type: String,
});
class MockMetaElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'meta');
  }
}
patchPropAttributes(MockMetaElement.prototype, {
  charset: String,
  content: String,
  name: String,
});
class MockScriptElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'script');
  }
  get src() {
    return fullUrl(this, 'src');
  }
  set src(value) {
    this.setAttribute('src', value);
  }
}
patchPropAttributes(MockScriptElement.prototype, {
  type: String,
});
class MockStyleElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'style');
    this.sheet = new MockCSSStyleSheet(this);
  }
  get innerHTML() {
    return getStyleElementText(this);
  }
  set innerHTML(value) {
    setStyleElementText(this, value);
  }
  get innerText() {
    return getStyleElementText(this);
  }
  set innerText(value) {
    setStyleElementText(this, value);
  }
  get textContent() {
    return getStyleElementText(this);
  }
  set textContent(value) {
    setStyleElementText(this, value);
  }
}
class MockSVGElement extends MockElement {
  // SVGElement properties and methods
  get ownerSVGElement() {
    return null;
  }
  get viewportElement() {
    return null;
  }
  focus() {
    /**/
  }
  onunload() {
    /**/
  }
  // SVGGeometryElement properties and methods
  get pathLength() {
    return 0;
  }
  isPointInFill(_pt) {
    return false;
  }
  isPointInStroke(_pt) {
    return false;
  }
  getTotalLength() {
    return 0;
  }
}
class MockBaseElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'base');
  }
  get href() {
    return fullUrl(this, 'href');
  }
  set href(value) {
    this.setAttribute('href', value);
  }
}
class MockTemplateElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'template');
    this.content = new MockDocumentFragment(ownerDocument);
  }
  get innerHTML() {
    return this.content.innerHTML;
  }
  set innerHTML(html) {
    this.content.innerHTML = html;
  }
  cloneNode(deep) {
    const cloned = new MockTemplateElement(null);
    cloned.attributes = cloneAttributes(this.attributes);
    const styleCssText = this.getAttribute('style');
    if (styleCssText != null && styleCssText.length > 0) {
      cloned.setAttribute('style', styleCssText);
    }
    cloned.content = this.content.cloneNode(deep);
    if (deep) {
      for (let i = 0, ii = this.childNodes.length; i < ii; i++) {
        const clonedChildNode = this.childNodes[i].cloneNode(true);
        cloned.appendChild(clonedChildNode);
      }
    }
    return cloned;
  }
}
class MockTitleElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'title');
  }
  get text() {
    return this.textContent;
  }
  set text(value) {
    this.textContent = value;
  }
}
class MockCanvasElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'canvas');
  }
  getContext() {
    return {
      fillRect() {
        return;
      },
      clearRect() { },
      getImageData: function (_, __, w, h) {
        return {
          data: new Array(w * h * 4),
        };
      },
      putImageData() { },
      createImageData: function () {
        return [];
      },
      setTransform() { },
      drawImage() { },
      save() { },
      fillText() { },
      restore() { },
      beginPath() { },
      moveTo() { },
      lineTo() { },
      closePath() { },
      stroke() { },
      translate() { },
      scale() { },
      rotate() { },
      arc() { },
      fill() { },
      measureText() {
        return { width: 0 };
      },
      transform() { },
      rect() { },
      clip() { },
    };
  }
}
function fullUrl(elm, attrName) {
  const val = elm.getAttribute(attrName) || '';
  if (elm.ownerDocument != null) {
    const win = elm.ownerDocument.defaultView;
    if (win != null) {
      const loc = win.location;
      if (loc != null) {
        try {
          const url = new URL(val, loc.href);
          return url.href;
        }
        catch (e) { }
      }
    }
  }
  return val.replace(/\'|\"/g, '').trim();
}
function patchPropAttributes(prototype, attrs, defaults = {}) {
  Object.keys(attrs).forEach((propName) => {
    const attr = attrs[propName];
    const defaultValue = defaults[propName];
    if (attr === Boolean) {
      Object.defineProperty(prototype, propName, {
        get() {
          return this.hasAttribute(propName);
        },
        set(value) {
          if (value) {
            this.setAttribute(propName, '');
          }
          else {
            this.removeAttribute(propName);
          }
        },
      });
    }
    else if (attr === Number) {
      Object.defineProperty(prototype, propName, {
        get() {
          const value = this.getAttribute(propName);
          return value ? parseInt(value, 10) : defaultValue === undefined ? 0 : defaultValue;
        },
        set(value) {
          this.setAttribute(propName, value);
        },
      });
    }
    else {
      Object.defineProperty(prototype, propName, {
        get() {
          return this.hasAttribute(propName) ? this.getAttribute(propName) : defaultValue || '';
        },
        set(value) {
          this.setAttribute(propName, value);
        },
      });
    }
  });
}
MockElement.prototype.cloneNode = function (deep) {
  // because we're creating elements, which extending specific HTML base classes there
  // is a MockElement circular reference that bundling has trouble dealing with so
  // the fix is to add cloneNode() to MockElement's prototype after the HTML classes
  const cloned = createElement(this.ownerDocument, this.nodeName);
  cloned.attributes = cloneAttributes(this.attributes);
  const styleCssText = this.getAttribute('style');
  if (styleCssText != null && styleCssText.length > 0) {
    cloned.setAttribute('style', styleCssText);
  }
  if (deep) {
    for (let i = 0, ii = this.childNodes.length; i < ii; i++) {
      const clonedChildNode = this.childNodes[i].cloneNode(true);
      cloned.appendChild(clonedChildNode);
    }
  }
  return cloned;
};

let sharedDocument;
function parseHtmlToDocument(html, ownerDocument = null) {
  if (ownerDocument == null) {
    if (sharedDocument == null) {
      sharedDocument = new MockDocument();
    }
    ownerDocument = sharedDocument;
  }
  return parseDocumentUtil(ownerDocument, html);
}
function parseHtmlToFragment(html, ownerDocument = null) {
  if (ownerDocument == null) {
    if (sharedDocument == null) {
      sharedDocument = new MockDocument();
    }
    ownerDocument = sharedDocument;
  }
  return parseFragmentUtil(ownerDocument, html);
}

class MockHeaders {
  constructor(init) {
    this._values = [];
    if (typeof init === 'object') {
      if (typeof init[Symbol.iterator] === 'function') {
        const kvs = [];
        for (const kv of init) {
          if (typeof kv[Symbol.iterator] === 'function') {
            kvs.push([...kv]);
          }
        }
        for (const kv of kvs) {
          this.append(kv[0], kv[1]);
        }
      }
      else {
        for (const key in init) {
          this.append(key, init[key]);
        }
      }
    }
  }
  append(key, value) {
    this._values.push([key, value + '']);
  }
  delete(key) {
    key = key.toLowerCase();
    for (let i = this._values.length - 1; i >= 0; i--) {
      if (this._values[i][0].toLowerCase() === key) {
        this._values.splice(i, 1);
      }
    }
  }
  entries() {
    const entries = [];
    for (const kv of this.keys()) {
      entries.push([kv, this.get(kv)]);
    }
    let index = -1;
    return {
      next() {
        index++;
        return {
          value: entries[index],
          done: !entries[index],
        };
      },
      [Symbol.iterator]() {
        return this;
      },
    };
  }
  forEach(cb) {
    for (const kv of this.entries()) {
      cb(kv[1], kv[0]);
    }
  }
  get(key) {
    const rtn = [];
    key = key.toLowerCase();
    for (const kv of this._values) {
      if (kv[0].toLowerCase() === key) {
        rtn.push(kv[1]);
      }
    }
    return rtn.length > 0 ? rtn.join(', ') : null;
  }
  has(key) {
    key = key.toLowerCase();
    for (const kv of this._values) {
      if (kv[0].toLowerCase() === key) {
        return true;
      }
    }
    return false;
  }
  keys() {
    const keys = [];
    for (const kv of this._values) {
      const key = kv[0].toLowerCase();
      if (!keys.includes(key)) {
        keys.push(key);
      }
    }
    let index = -1;
    return {
      next() {
        index++;
        return {
          value: keys[index],
          done: !keys[index],
        };
      },
      [Symbol.iterator]() {
        return this;
      },
    };
  }
  set(key, value) {
    for (const kv of this._values) {
      if (kv[0].toLowerCase() === key.toLowerCase()) {
        kv[1] = value + '';
        return;
      }
    }
    this.append(key, value);
  }
  values() {
    const values = this._values;
    let index = -1;
    return {
      next() {
        index++;
        const done = !values[index];
        return {
          value: done ? undefined : values[index][1],
          done,
        };
      },
      [Symbol.iterator]() {
        return this;
      },
    };
  }
  [Symbol.iterator]() {
    return this.entries();
  }
}

class MockRequest {
  constructor(input, init = {}) {
    this._method = 'GET';
    this._url = '/';
    this.bodyUsed = false;
    this.cache = 'default';
    this.credentials = 'same-origin';
    this.integrity = '';
    this.keepalive = false;
    this.mode = 'cors';
    this.redirect = 'follow';
    this.referrer = 'about:client';
    this.referrerPolicy = '';
    if (typeof input === 'string') {
      this.url = input;
    }
    else if (input) {
      Object.assign(this, input);
      this.headers = new MockHeaders(input.headers);
    }
    Object.assign(this, init);
    if (init.headers) {
      this.headers = new MockHeaders(init.headers);
    }
    if (!this.headers) {
      this.headers = new MockHeaders();
    }
  }
  get url() {
    if (typeof this._url === 'string') {
      return new URL(this._url, location.href).href;
    }
    return new URL('/', location.href).href;
  }
  set url(value) {
    this._url = value;
  }
  get method() {
    if (typeof this._method === 'string') {
      return this._method.toUpperCase();
    }
    return 'GET';
  }
  set method(value) {
    this._method = value;
  }
  clone() {
    const clone = { ...this };
    clone.headers = new MockHeaders(this.headers);
    return new MockRequest(clone);
  }
}
class MockResponse {
  constructor(body, init = {}) {
    this.ok = true;
    this.status = 200;
    this.statusText = '';
    this.type = 'default';
    this.url = '';
    this._body = body;
    if (init) {
      Object.assign(this, init);
    }
    this.headers = new MockHeaders(init.headers);
  }
  async json() {
    return JSON.parse(this._body);
  }
  async text() {
    return this._body;
  }
  clone() {
    const initClone = { ...this };
    initClone.headers = new MockHeaders(this.headers);
    return new MockResponse(this._body, initClone);
  }
}

function setupGlobal(gbl) {
  if (gbl.window == null) {
    const win = (gbl.window = new MockWindow());
    WINDOW_FUNCTIONS.forEach((fnName) => {
      if (!(fnName in gbl)) {
        gbl[fnName] = win[fnName].bind(win);
      }
    });
    WINDOW_PROPS.forEach((propName) => {
      if (!(propName in gbl)) {
        Object.defineProperty(gbl, propName, {
          get() {
            return win[propName];
          },
          set(val) {
            win[propName] = val;
          },
          configurable: true,
          enumerable: true,
        });
      }
    });
    GLOBAL_CONSTRUCTORS.forEach(([cstrName]) => {
      gbl[cstrName] = win[cstrName];
    });
  }
  return gbl.window;
}
function teardownGlobal(gbl) {
  const win = gbl.window;
  if (win && typeof win.close === 'function') {
    win.close();
  }
}
function patchWindow(winToBePatched) {
  const mockWin = new MockWindow(false);
  WINDOW_FUNCTIONS.forEach((fnName) => {
    if (typeof winToBePatched[fnName] !== 'function') {
      winToBePatched[fnName] = mockWin[fnName].bind(mockWin);
    }
  });
  WINDOW_PROPS.forEach((propName) => {
    if (winToBePatched === undefined) {
      Object.defineProperty(winToBePatched, propName, {
        get() {
          return mockWin[propName];
        },
        set(val) {
          mockWin[propName] = val;
        },
        configurable: true,
        enumerable: true,
      });
    }
  });
}
function addGlobalsToWindowPrototype(mockWinPrototype) {
  GLOBAL_CONSTRUCTORS.forEach(([cstrName, Cstr]) => {
    Object.defineProperty(mockWinPrototype, cstrName, {
      get() {
        return this['__' + cstrName] || Cstr;
      },
      set(cstr) {
        this['__' + cstrName] = cstr;
      },
      configurable: true,
      enumerable: true,
    });
  });
}
const WINDOW_FUNCTIONS = [
  'addEventListener',
  'alert',
  'blur',
  'cancelAnimationFrame',
  'cancelIdleCallback',
  'clearInterval',
  'clearTimeout',
  'close',
  'confirm',
  'dispatchEvent',
  'focus',
  'getComputedStyle',
  'matchMedia',
  'open',
  'prompt',
  'removeEventListener',
  'requestAnimationFrame',
  'requestIdleCallback',
  'URL',
];
const WINDOW_PROPS = [
  'customElements',
  'devicePixelRatio',
  'document',
  'history',
  'innerHeight',
  'innerWidth',
  'localStorage',
  'location',
  'navigator',
  'pageXOffset',
  'pageYOffset',
  'performance',
  'screenLeft',
  'screenTop',
  'screenX',
  'screenY',
  'scrollX',
  'scrollY',
  'sessionStorage',
  'CSS',
  'CustomEvent',
  'Event',
  'Element',
  'HTMLElement',
  'Node',
  'NodeList',
  'KeyboardEvent',
  'MouseEvent',
];
const GLOBAL_CONSTRUCTORS = [
  ['CustomEvent', MockCustomEvent],
  ['Event', MockEvent],
  ['Headers', MockHeaders],
  ['KeyboardEvent', MockKeyboardEvent],
  ['MouseEvent', MockMouseEvent],
  ['Request', MockRequest],
  ['Response', MockResponse],
  ['HTMLAnchorElement', MockAnchorElement],
  ['HTMLBaseElement', MockBaseElement],
  ['HTMLButtonElement', MockButtonElement],
  ['HTMLCanvasElement', MockCanvasElement],
  ['HTMLFormElement', MockFormElement],
  ['HTMLImageElement', MockImageElement],
  ['HTMLInputElement', MockInputElement],
  ['HTMLLinkElement', MockLinkElement],
  ['HTMLMetaElement', MockMetaElement],
  ['HTMLScriptElement', MockScriptElement],
  ['HTMLStyleElement', MockStyleElement],
  ['HTMLTemplateElement', MockTemplateElement],
  ['HTMLTitleElement', MockTitleElement],
];

const consoleNoop = () => {
  /**/
};
function createConsole() {
  return {
    debug: consoleNoop,
    error: consoleNoop,
    info: consoleNoop,
    log: consoleNoop,
    warn: consoleNoop,
    dir: consoleNoop,
    dirxml: consoleNoop,
    table: consoleNoop,
    trace: consoleNoop,
    group: consoleNoop,
    groupCollapsed: consoleNoop,
    groupEnd: consoleNoop,
    clear: consoleNoop,
    count: consoleNoop,
    countReset: consoleNoop,
    assert: consoleNoop,
    profile: consoleNoop,
    profileEnd: consoleNoop,
    time: consoleNoop,
    timeLog: consoleNoop,
    timeEnd: consoleNoop,
    timeStamp: consoleNoop,
    context: consoleNoop,
    memory: consoleNoop,
  };
}

class MockHistory {
  constructor() {
    this.items = [];
  }
  get length() {
    return this.items.length;
  }
  back() {
    this.go(-1);
  }
  forward() {
    this.go(1);
  }
  go(_value) {
    //
  }
  pushState(_state, _title, _url) {
    //
  }
  replaceState(_state, _title, _url) {
    //
  }
}

class MockIntersectionObserver {
  constructor() {
    /**/
  }
  disconnect() {
    /**/
  }
  observe() {
    /**/
  }
  takeRecords() {
    return [];
  }
  unobserve() {
    /**/
  }
}

class MockLocation {
  constructor() {
    this.ancestorOrigins = null;
    this.protocol = '';
    this.host = '';
    this.hostname = '';
    this.port = '';
    this.pathname = '';
    this.search = '';
    this.hash = '';
    this.username = '';
    this.password = '';
    this.origin = '';
    this._href = '';
  }
  get href() {
    return this._href;
  }
  set href(value) {
    const url = new URL(value, 'http://mockdoc.stenciljs.com');
    this._href = url.href;
    this.protocol = url.protocol;
    this.host = url.host;
    this.hostname = url.hostname;
    this.port = url.port;
    this.pathname = url.pathname;
    this.search = url.search;
    this.hash = url.hash;
    this.username = url.username;
    this.password = url.password;
    this.origin = url.origin;
  }
  assign(_url) {
    //
  }
  reload(_forcedReload) {
    //
  }
  replace(_url) {
    //
  }
  toString() {
    return this.href;
  }
}

class MockNavigator {
  constructor() {
    this.appCodeName = 'MockNavigator';
    this.appName = 'MockNavigator';
    this.appVersion = 'MockNavigator';
    this.platform = 'MockNavigator';
    this.userAgent = 'MockNavigator';
  }
}

/**
 * https://developer.mozilla.org/en-US/docs/Web/API/Performance
 */
class MockPerformance {
  constructor() {
    this.timeOrigin = Date.now();
  }
  addEventListener() {
    //
  }
  clearMarks() {
    //
  }
  clearMeasures() {
    //
  }
  clearResourceTimings() {
    //
  }
  dispatchEvent() {
    return true;
  }
  getEntries() {
    return [];
  }
  getEntriesByName() {
    return [];
  }
  getEntriesByType() {
    return [];
  }
  // Stencil's implementation of `mark` is non-compliant with the `Performance` interface. Because Stencil will
  // instantiate an instance of this class and may attempt to assign it to a variable of type `Performance`, the return
  // type must match the `Performance` interface (rather than typing this function as returning `void` and ignoring the
  // associated errors returned by the type checker)
  // @ts-ignore
  mark() {
    //
  }
  // Stencil's implementation of `measure` is non-compliant with the `Performance` interface. Because Stencil will
  // instantiate an instance of this class and may attempt to assign it to a variable of type `Performance`, the return
  // type must match the `Performance` interface (rather than typing this function as returning `void` and ignoring the
  // associated errors returned by the type checker)
  // @ts-ignore
  measure() {
    //
  }
  get navigation() {
    return {};
  }
  now() {
    return Date.now() - this.timeOrigin;
  }
  get onresourcetimingbufferfull() {
    return null;
  }
  removeEventListener() {
    //
  }
  setResourceTimingBufferSize() {
    //
  }
  get timing() {
    return {};
  }
  toJSON() {
    //
  }
}
function resetPerformance(perf) {
  if (perf != null) {
    try {
      perf.timeOrigin = Date.now();
    }
    catch (e) { }
  }
}

class MockStorage {
  constructor() {
    this.items = new Map();
  }
  key(_value) {
    //
  }
  getItem(key) {
    key = String(key);
    if (this.items.has(key)) {
      return this.items.get(key);
    }
    return null;
  }
  setItem(key, value) {
    if (value == null) {
      value = 'null';
    }
    this.items.set(String(key), String(value));
  }
  removeItem(key) {
    this.items.delete(String(key));
  }
  clear() {
    this.items.clear();
  }
}

const nativeClearInterval = clearInterval;
const nativeClearTimeout = clearTimeout;
const nativeSetInterval = setInterval;
const nativeSetTimeout = setTimeout;
const nativeURL = URL;
class MockWindow {
  constructor(html = null) {
    if (html !== false) {
      this.document = new MockDocument(html, this);
    }
    else {
      this.document = null;
    }
    this.performance = new MockPerformance();
    this.customElements = new MockCustomElementRegistry(this);
    this.console = createConsole();
    resetWindowDefaults(this);
    resetWindowDimensions(this);
  }
  addEventListener(type, handler) {
    addEventListener(this, type, handler);
  }
  alert(msg) {
    if (this.console) {
      this.console.debug(msg);
    }
    else {
      console.debug(msg);
    }
  }
  blur() {
    /**/
  }
  cancelAnimationFrame(id) {
    this.__clearTimeout(id);
  }
  cancelIdleCallback(id) {
    this.__clearTimeout(id);
  }
  get CharacterData() {
    if (this.__charDataCstr == null) {
      const ownerDocument = this.document;
      this.__charDataCstr = class extends MockNode {
        constructor() {
          super(ownerDocument, 0, 'test', '');
          throw new Error('Illegal constructor: cannot construct CharacterData');
        }
      };
    }
    return this.__charDataCstr;
  }
  set CharacterData(charDataCstr) {
    this.__charDataCstr = charDataCstr;
  }
  clearInterval(id) {
    this.__clearInterval(id);
  }
  clearTimeout(id) {
    this.__clearTimeout(id);
  }
  close() {
    resetWindow(this);
  }
  confirm() {
    return false;
  }
  get CSS() {
    return {
      supports: () => true,
    };
  }
  get Document() {
    if (this.__docCstr == null) {
      const win = this;
      this.__docCstr = class extends MockDocument {
        constructor() {
          super(false, win);
          throw new Error('Illegal constructor: cannot construct Document');
        }
      };
    }
    return this.__docCstr;
  }
  set Document(docCstr) {
    this.__docCstr = docCstr;
  }
  get DocumentFragment() {
    if (this.__docFragCstr == null) {
      const ownerDocument = this.document;
      this.__docFragCstr = class extends MockDocumentFragment {
        constructor() {
          super(ownerDocument);
          throw new Error('Illegal constructor: cannot construct DocumentFragment');
        }
      };
    }
    return this.__docFragCstr;
  }
  set DocumentFragment(docFragCstr) {
    this.__docFragCstr = docFragCstr;
  }
  get DocumentType() {
    if (this.__docTypeCstr == null) {
      const ownerDocument = this.document;
      this.__docTypeCstr = class extends MockNode {
        constructor() {
          super(ownerDocument, 0, 'test', '');
          throw new Error('Illegal constructor: cannot construct DocumentType');
        }
      };
    }
    return this.__docTypeCstr;
  }
  set DocumentType(docTypeCstr) {
    this.__docTypeCstr = docTypeCstr;
  }
  get DOMTokenList() {
    if (this.__domTokenListCstr == null) {
      this.__domTokenListCstr = class MockDOMTokenList {
      };
    }
    return this.__domTokenListCstr;
  }
  set DOMTokenList(domTokenListCstr) {
    this.__domTokenListCstr = domTokenListCstr;
  }
  dispatchEvent(ev) {
    return dispatchEvent(this, ev);
  }
  get Element() {
    if (this.__elementCstr == null) {
      const ownerDocument = this.document;
      this.__elementCstr = class extends MockElement {
        constructor() {
          super(ownerDocument, '');
          throw new Error('Illegal constructor: cannot construct Element');
        }
      };
    }
    return this.__elementCstr;
  }
  fetch(input, init) {
    if (typeof fetch === 'function') {
      return fetch(input, init);
    }
    throw new Error(`fetch() not implemented`);
  }
  focus() {
    /**/
  }
  getComputedStyle(_) {
    return {
      cssText: '',
      length: 0,
      parentRule: null,
      getPropertyPriority() {
        return null;
      },
      getPropertyValue() {
        return '';
      },
      item() {
        return null;
      },
      removeProperty() {
        return null;
      },
      setProperty() {
        return null;
      },
    };
  }
  get globalThis() {
    return this;
  }
  get history() {
    if (this.__history == null) {
      this.__history = new MockHistory();
    }
    return this.__history;
  }
  set history(hsty) {
    this.__history = hsty;
  }
  get JSON() {
    return JSON;
  }
  get HTMLElement() {
    if (this.__htmlElementCstr == null) {
      const ownerDocument = this.document;
      this.__htmlElementCstr = class extends MockHTMLElement {
        constructor() {
          super(ownerDocument, '');
          const observedAttributes = this.constructor.observedAttributes;
          if (Array.isArray(observedAttributes) && typeof this.attributeChangedCallback === 'function') {
            observedAttributes.forEach((attrName) => {
              const attrValue = this.getAttribute(attrName);
              if (attrValue != null) {
                this.attributeChangedCallback(attrName, null, attrValue);
              }
            });
          }
        }
      };
    }
    return this.__htmlElementCstr;
  }
  set HTMLElement(htmlElementCstr) {
    this.__htmlElementCstr = htmlElementCstr;
  }
  get IntersectionObserver() {
    return MockIntersectionObserver;
  }
  get localStorage() {
    if (this.__localStorage == null) {
      this.__localStorage = new MockStorage();
    }
    return this.__localStorage;
  }
  set localStorage(locStorage) {
    this.__localStorage = locStorage;
  }
  get location() {
    if (this.__location == null) {
      this.__location = new MockLocation();
    }
    return this.__location;
  }
  set location(val) {
    if (typeof val === 'string') {
      if (this.__location == null) {
        this.__location = new MockLocation();
      }
      this.__location.href = val;
    }
    else {
      this.__location = val;
    }
  }
  matchMedia() {
    return {
      matches: false,
    };
  }
  get Node() {
    if (this.__nodeCstr == null) {
      const ownerDocument = this.document;
      this.__nodeCstr = class extends MockNode {
        constructor() {
          super(ownerDocument, 0, 'test', '');
          throw new Error('Illegal constructor: cannot construct Node');
        }
      };
    }
    return this.__nodeCstr;
  }
  get NodeList() {
    if (this.__nodeListCstr == null) {
      const ownerDocument = this.document;
      this.__nodeListCstr = class extends MockNodeList {
        constructor() {
          super(ownerDocument, [], 0);
          throw new Error('Illegal constructor: cannot construct NodeList');
        }
      };
    }
    return this.__nodeListCstr;
  }
  get navigator() {
    if (this.__navigator == null) {
      this.__navigator = new MockNavigator();
    }
    return this.__navigator;
  }
  set navigator(nav) {
    this.__navigator = nav;
  }
  get parent() {
    return null;
  }
  prompt() {
    return '';
  }
  open() {
    return null;
  }
  get origin() {
    return this.location.origin;
  }
  removeEventListener(type, handler) {
    removeEventListener(this, type, handler);
  }
  requestAnimationFrame(callback) {
    return this.setTimeout(() => {
      callback(Date.now());
    }, 0);
  }
  requestIdleCallback(callback) {
    return this.setTimeout(() => {
      callback({
        didTimeout: false,
        timeRemaining: () => 0,
      });
    }, 0);
  }
  scroll(_x, _y) {
    /**/
  }
  scrollBy(_x, _y) {
    /**/
  }
  scrollTo(_x, _y) {
    /**/
  }
  get self() {
    return this;
  }
  get sessionStorage() {
    if (this.__sessionStorage == null) {
      this.__sessionStorage = new MockStorage();
    }
    return this.__sessionStorage;
  }
  set sessionStorage(locStorage) {
    this.__sessionStorage = locStorage;
  }
  setInterval(callback, ms, ...args) {
    if (this.__timeouts == null) {
      this.__timeouts = new Set();
    }
    ms = Math.min(ms, this.__maxTimeout);
    if (this.__allowInterval) {
      const intervalId = this.__setInterval(() => {
        if (this.__timeouts) {
          this.__timeouts.delete(intervalId);
          try {
            callback(...args);
          }
          catch (e) {
            if (this.console) {
              this.console.error(e);
            }
            else {
              console.error(e);
            }
          }
        }
      }, ms);
      if (this.__timeouts) {
        this.__timeouts.add(intervalId);
      }
      return intervalId;
    }
    const timeoutId = this.__setTimeout(() => {
      if (this.__timeouts) {
        this.__timeouts.delete(timeoutId);
        try {
          callback(...args);
        }
        catch (e) {
          if (this.console) {
            this.console.error(e);
          }
          else {
            console.error(e);
          }
        }
      }
    }, ms);
    if (this.__timeouts) {
      this.__timeouts.add(timeoutId);
    }
    return timeoutId;
  }
  setTimeout(callback, ms, ...args) {
    if (this.__timeouts == null) {
      this.__timeouts = new Set();
    }
    ms = Math.min(ms, this.__maxTimeout);
    const timeoutId = this.__setTimeout(() => {
      if (this.__timeouts) {
        this.__timeouts.delete(timeoutId);
        try {
          callback(...args);
        }
        catch (e) {
          if (this.console) {
            this.console.error(e);
          }
          else {
            console.error(e);
          }
        }
      }
    }, ms);
    if (this.__timeouts) {
      this.__timeouts.add(timeoutId);
    }
    return timeoutId;
  }
  get top() {
    return this;
  }
  get window() {
    return this;
  }
  onanimationstart() {
    /**/
  }
  onanimationend() {
    /**/
  }
  onanimationiteration() {
    /**/
  }
  onabort() {
    /**/
  }
  onauxclick() {
    /**/
  }
  onbeforecopy() {
    /**/
  }
  onbeforecut() {
    /**/
  }
  onbeforepaste() {
    /**/
  }
  onblur() {
    /**/
  }
  oncancel() {
    /**/
  }
  oncanplay() {
    /**/
  }
  oncanplaythrough() {
    /**/
  }
  onchange() {
    /**/
  }
  onclick() {
    /**/
  }
  onclose() {
    /**/
  }
  oncontextmenu() {
    /**/
  }
  oncopy() {
    /**/
  }
  oncuechange() {
    /**/
  }
  oncut() {
    /**/
  }
  ondblclick() {
    /**/
  }
  ondrag() {
    /**/
  }
  ondragend() {
    /**/
  }
  ondragenter() {
    /**/
  }
  ondragleave() {
    /**/
  }
  ondragover() {
    /**/
  }
  ondragstart() {
    /**/
  }
  ondrop() {
    /**/
  }
  ondurationchange() {
    /**/
  }
  onemptied() {
    /**/
  }
  onended() {
    /**/
  }
  onerror() {
    /**/
  }
  onfocus() {
    /**/
  }
  onfocusin() {
    /**/
  }
  onfocusout() {
    /**/
  }
  onformdata() {
    /**/
  }
  onfullscreenchange() {
    /**/
  }
  onfullscreenerror() {
    /**/
  }
  ongotpointercapture() {
    /**/
  }
  oninput() {
    /**/
  }
  oninvalid() {
    /**/
  }
  onkeydown() {
    /**/
  }
  onkeypress() {
    /**/
  }
  onkeyup() {
    /**/
  }
  onload() {
    /**/
  }
  onloadeddata() {
    /**/
  }
  onloadedmetadata() {
    /**/
  }
  onloadstart() {
    /**/
  }
  onlostpointercapture() {
    /**/
  }
  onmousedown() {
    /**/
  }
  onmouseenter() {
    /**/
  }
  onmouseleave() {
    /**/
  }
  onmousemove() {
    /**/
  }
  onmouseout() {
    /**/
  }
  onmouseover() {
    /**/
  }
  onmouseup() {
    /**/
  }
  onmousewheel() {
    /**/
  }
  onpaste() {
    /**/
  }
  onpause() {
    /**/
  }
  onplay() {
    /**/
  }
  onplaying() {
    /**/
  }
  onpointercancel() {
    /**/
  }
  onpointerdown() {
    /**/
  }
  onpointerenter() {
    /**/
  }
  onpointerleave() {
    /**/
  }
  onpointermove() {
    /**/
  }
  onpointerout() {
    /**/
  }
  onpointerover() {
    /**/
  }
  onpointerup() {
    /**/
  }
  onprogress() {
    /**/
  }
  onratechange() {
    /**/
  }
  onreset() {
    /**/
  }
  onresize() {
    /**/
  }
  onscroll() {
    /**/
  }
  onsearch() {
    /**/
  }
  onseeked() {
    /**/
  }
  onseeking() {
    /**/
  }
  onselect() {
    /**/
  }
  onselectstart() {
    /**/
  }
  onstalled() {
    /**/
  }
  onsubmit() {
    /**/
  }
  onsuspend() {
    /**/
  }
  ontimeupdate() {
    /**/
  }
  ontoggle() {
    /**/
  }
  onvolumechange() {
    /**/
  }
  onwaiting() {
    /**/
  }
  onwebkitfullscreenchange() {
    /**/
  }
  onwebkitfullscreenerror() {
    /**/
  }
  onwheel() {
    /**/
  }
}
addGlobalsToWindowPrototype(MockWindow.prototype);
function resetWindowDefaults(win) {
  win.__clearInterval = nativeClearInterval;
  win.__clearTimeout = nativeClearTimeout;
  win.__setInterval = nativeSetInterval;
  win.__setTimeout = nativeSetTimeout;
  win.__maxTimeout = 30000;
  win.__allowInterval = true;
  win.URL = nativeURL;
}
function cloneWindow(srcWin, opts = {}) {
  if (srcWin == null) {
    return null;
  }
  const clonedWin = new MockWindow(false);
  if (!opts.customElementProxy) {
    // TODO(STENCIL-345) - Evaluate reconciling MockWindow, Window differences
    // @ts-ignore
    srcWin.customElements = null;
  }
  if (srcWin.document != null) {
    const clonedDoc = new MockDocument(false, clonedWin);
    clonedWin.document = clonedDoc;
    clonedDoc.documentElement = srcWin.document.documentElement.cloneNode(true);
  }
  else {
    clonedWin.document = new MockDocument(null, clonedWin);
  }
  return clonedWin;
}
function cloneDocument(srcDoc) {
  if (srcDoc == null) {
    return null;
  }
  const dstWin = cloneWindow(srcDoc.defaultView);
  return dstWin.document;
}
/**
 * Constrain setTimeout() to 1ms, but still async. Also
 * only allow setInterval() to fire once, also constrained to 1ms.
 */
function constrainTimeouts(win) {
  win.__allowInterval = false;
  win.__maxTimeout = 0;
}
function resetWindow(win) {
  if (win != null) {
    if (win.__timeouts) {
      win.__timeouts.forEach((timeoutId) => {
        nativeClearInterval(timeoutId);
        nativeClearTimeout(timeoutId);
      });
      win.__timeouts.clear();
    }
    if (win.customElements && win.customElements.clear) {
      win.customElements.clear();
    }
    resetDocument(win.document);
    resetPerformance(win.performance);
    for (const key in win) {
      if (win.hasOwnProperty(key) && key !== 'document' && key !== 'performance' && key !== 'customElements') {
        delete win[key];
      }
    }
    resetWindowDefaults(win);
    resetWindowDimensions(win);
    resetEventListeners(win);
    if (win.document != null) {
      try {
        win.document.defaultView = win;
      }
      catch (e) { }
    }
    // ensure we don't hold onto nodeFetch values
    win.fetch = null;
    win.Headers = null;
    win.Request = null;
    win.Response = null;
    win.FetchError = null;
  }
}
function resetWindowDimensions(win) {
  try {
    win.devicePixelRatio = 1;
    win.innerHeight = 768;
    win.innerWidth = 1366;
    win.pageXOffset = 0;
    win.pageYOffset = 0;
    win.screenLeft = 0;
    win.screenTop = 0;
    win.screenX = 0;
    win.screenY = 0;
    win.scrollX = 0;
    win.scrollY = 0;
    win.screen = {
      availHeight: win.innerHeight,
      availLeft: 0,
      availTop: 0,
      availWidth: win.innerWidth,
      colorDepth: 24,
      height: win.innerHeight,
      keepAwake: false,
      orientation: {
        angle: 0,
        type: 'portrait-primary',
      },
      pixelDepth: 24,
      width: win.innerWidth,
    };
  }
  catch (e) { }
}

class MockDocument extends MockHTMLElement {
  constructor(html = null, win = null) {
    super(null, null);
    this.nodeName = "#document" /* DOCUMENT_NODE */;
    this.nodeType = 9 /* DOCUMENT_NODE */;
    this.defaultView = win;
    this.cookie = '';
    this.referrer = '';
    this.appendChild(this.createDocumentTypeNode());
    if (typeof html === 'string') {
      const parsedDoc = parseDocumentUtil(this, html);
      const documentElement = parsedDoc.children.find((elm) => elm.nodeName === 'HTML');
      if (documentElement != null) {
        this.appendChild(documentElement);
        setOwnerDocument(documentElement, this);
      }
    }
    else if (html !== false) {
      const documentElement = new MockHTMLElement(this, 'html');
      this.appendChild(documentElement);
      documentElement.appendChild(new MockHTMLElement(this, 'head'));
      documentElement.appendChild(new MockHTMLElement(this, 'body'));
    }
  }
  get dir() {
    return this.documentElement.dir;
  }
  set dir(value) {
    this.documentElement.dir = value;
  }
  get location() {
    if (this.defaultView != null) {
      return this.defaultView.location;
    }
    return null;
  }
  set location(val) {
    if (this.defaultView != null) {
      this.defaultView.location = val;
    }
  }
  get baseURI() {
    const baseNode = this.head.childNodes.find((node) => node.nodeName === 'BASE');
    if (baseNode) {
      return baseNode.href;
    }
    return this.URL;
  }
  get URL() {
    return this.location.href;
  }
  get styleSheets() {
    return this.querySelectorAll('style');
  }
  get scripts() {
    return this.querySelectorAll('script');
  }
  get forms() {
    return this.querySelectorAll('form');
  }
  get images() {
    return this.querySelectorAll('img');
  }
  get scrollingElement() {
    return this.documentElement;
  }
  get documentElement() {
    for (let i = this.childNodes.length - 1; i >= 0; i--) {
      if (this.childNodes[i].nodeName === 'HTML') {
        return this.childNodes[i];
      }
    }
    const documentElement = new MockHTMLElement(this, 'html');
    this.appendChild(documentElement);
    return documentElement;
  }
  set documentElement(documentElement) {
    for (let i = this.childNodes.length - 1; i >= 0; i--) {
      if (this.childNodes[i].nodeType !== 10 /* DOCUMENT_TYPE_NODE */) {
        this.childNodes[i].remove();
      }
    }
    if (documentElement != null) {
      this.appendChild(documentElement);
      setOwnerDocument(documentElement, this);
    }
  }
  get head() {
    const documentElement = this.documentElement;
    for (let i = 0; i < documentElement.childNodes.length; i++) {
      if (documentElement.childNodes[i].nodeName === 'HEAD') {
        return documentElement.childNodes[i];
      }
    }
    const head = new MockHTMLElement(this, 'head');
    documentElement.insertBefore(head, documentElement.firstChild);
    return head;
  }
  set head(head) {
    const documentElement = this.documentElement;
    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {
      if (documentElement.childNodes[i].nodeName === 'HEAD') {
        documentElement.childNodes[i].remove();
      }
    }
    if (head != null) {
      documentElement.insertBefore(head, documentElement.firstChild);
      setOwnerDocument(head, this);
    }
  }
  get body() {
    const documentElement = this.documentElement;
    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {
      if (documentElement.childNodes[i].nodeName === 'BODY') {
        return documentElement.childNodes[i];
      }
    }
    const body = new MockHTMLElement(this, 'body');
    documentElement.appendChild(body);
    return body;
  }
  set body(body) {
    const documentElement = this.documentElement;
    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {
      if (documentElement.childNodes[i].nodeName === 'BODY') {
        documentElement.childNodes[i].remove();
      }
    }
    if (body != null) {
      documentElement.appendChild(body);
      setOwnerDocument(body, this);
    }
  }
  appendChild(newNode) {
    newNode.remove();
    newNode.parentNode = this;
    this.childNodes.push(newNode);
    return newNode;
  }
  createComment(data) {
    return new MockComment(this, data);
  }
  createAttribute(attrName) {
    return new MockAttr(attrName.toLowerCase(), '');
  }
  createAttributeNS(namespaceURI, attrName) {
    return new MockAttr(attrName, '', namespaceURI);
  }
  createElement(tagName) {
    if (tagName === "#document" /* DOCUMENT_NODE */) {
      const doc = new MockDocument(false);
      doc.nodeName = tagName;
      doc.parentNode = null;
      return doc;
    }
    return createElement(this, tagName);
  }
  createElementNS(namespaceURI, tagName) {
    const elmNs = createElementNS(this, namespaceURI, tagName);
    elmNs.namespaceURI = namespaceURI;
    return elmNs;
  }
  createTextNode(text) {
    return new MockTextNode(this, text);
  }
  createDocumentFragment() {
    return new MockDocumentFragment(this);
  }
  createDocumentTypeNode() {
    return new MockDocumentTypeNode(this);
  }
  getElementById(id) {
    return getElementById(this, id);
  }
  getElementsByName(elmName) {
    return getElementsByName(this, elmName.toLowerCase());
  }
  get title() {
    const title = this.head.childNodes.find((elm) => elm.nodeName === 'TITLE');
    if (title != null && typeof title.textContent === 'string') {
      return title.textContent.trim();
    }
    return '';
  }
  set title(value) {
    const head = this.head;
    let title = head.childNodes.find((elm) => elm.nodeName === 'TITLE');
    if (title == null) {
      title = this.createElement('title');
      head.appendChild(title);
    }
    title.textContent = value;
  }
}
function createDocument(html = null) {
  return new MockWindow(html).document;
}
function createFragment(html) {
  return parseHtmlToFragment(html, null);
}
function resetDocument(doc) {
  if (doc != null) {
    resetEventListeners(doc);
    const documentElement = doc.documentElement;
    if (documentElement != null) {
      resetElement(documentElement);
      for (let i = 0, ii = documentElement.childNodes.length; i < ii; i++) {
        const childNode = documentElement.childNodes[i];
        resetElement(childNode);
        childNode.childNodes.length = 0;
      }
    }
    for (const key in doc) {
      if (doc.hasOwnProperty(key) && !DOC_KEY_KEEPERS.has(key)) {
        delete doc[key];
      }
    }
    try {
      doc.nodeName = "#document" /* DOCUMENT_NODE */;
    }
    catch (e) { }
    try {
      doc.nodeType = 9 /* DOCUMENT_NODE */;
    }
    catch (e) { }
    try {
      doc.cookie = '';
    }
    catch (e) { }
    try {
      doc.referrer = '';
    }
    catch (e) { }
  }
}
const DOC_KEY_KEEPERS = new Set([
  'nodeName',
  'nodeType',
  'nodeValue',
  'ownerDocument',
  'parentNode',
  'childNodes',
  '_shadowRoot',
]);
function getElementById(elm, id) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    if (childElm.id === id) {
      return childElm;
    }
    const childElmFound = getElementById(childElm, id);
    if (childElmFound != null) {
      return childElmFound;
    }
  }
  return null;
}
function getElementsByName(elm, elmName, foundElms = []) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    if (childElm.name && childElm.name.toLowerCase() === elmName) {
      foundElms.push(childElm);
    }
    getElementsByName(childElm, elmName, foundElms);
  }
  return foundElms;
}
function setOwnerDocument(elm, ownerDocument) {
  for (let i = 0, ii = elm.childNodes.length; i < ii; i++) {
    elm.childNodes[i].ownerDocument = ownerDocument;
    if (elm.childNodes[i].nodeType === 1 /* ELEMENT_NODE */) {
      setOwnerDocument(elm.childNodes[i], ownerDocument);
    }
  }
}

function hydrateFactory($stencilWindow, $stencilHydrateOpts, $stencilHydrateResults, $stencilAfterHydrate, $stencilHydrateResolve) {
  var globalThis = $stencilWindow;
  var self = $stencilWindow;
  var top = $stencilWindow;
  var parent = $stencilWindow;

  var addEventListener = $stencilWindow.addEventListener.bind($stencilWindow);
  var alert = $stencilWindow.alert.bind($stencilWindow);
  var blur = $stencilWindow.blur.bind($stencilWindow);
  var cancelAnimationFrame = $stencilWindow.cancelAnimationFrame.bind($stencilWindow);
  var cancelIdleCallback = $stencilWindow.cancelIdleCallback.bind($stencilWindow);
  var clearInterval = $stencilWindow.clearInterval.bind($stencilWindow);
  var clearTimeout = $stencilWindow.clearTimeout.bind($stencilWindow);
  var close = () => {};
  var confirm = $stencilWindow.confirm.bind($stencilWindow);
  var dispatchEvent = $stencilWindow.dispatchEvent.bind($stencilWindow);
  var focus = $stencilWindow.focus.bind($stencilWindow);
  var getComputedStyle = $stencilWindow.getComputedStyle.bind($stencilWindow);
  var matchMedia = $stencilWindow.matchMedia.bind($stencilWindow);
  var open = $stencilWindow.open.bind($stencilWindow);
  var prompt = $stencilWindow.prompt.bind($stencilWindow);
  var removeEventListener = $stencilWindow.removeEventListener.bind($stencilWindow);
  var requestAnimationFrame = $stencilWindow.requestAnimationFrame.bind($stencilWindow);
  var requestIdleCallback = $stencilWindow.requestIdleCallback.bind($stencilWindow);
  var setInterval = $stencilWindow.setInterval.bind($stencilWindow);
  var setTimeout = $stencilWindow.setTimeout.bind($stencilWindow);

  var CharacterData = $stencilWindow.CharacterData;
  var CSS = $stencilWindow.CSS;
  var CustomEvent = $stencilWindow.CustomEvent;
  var Document = $stencilWindow.Document;
  var DocumentFragment = $stencilWindow.DocumentFragment;
  var DocumentType = $stencilWindow.DocumentType;
  var DOMTokenList = $stencilWindow.DOMTokenList;
  var Element = $stencilWindow.Element;
  var Event = $stencilWindow.Event;
  var HTMLAnchorElement = $stencilWindow.HTMLAnchorElement;
  var HTMLBaseElement = $stencilWindow.HTMLBaseElement;
  var HTMLButtonElement = $stencilWindow.HTMLButtonElement;
  var HTMLCanvasElement = $stencilWindow.HTMLCanvasElement;
  var HTMLElement = $stencilWindow.HTMLElement;
  var HTMLFormElement = $stencilWindow.HTMLFormElement;
  var HTMLImageElement = $stencilWindow.HTMLImageElement;
  var HTMLInputElement = $stencilWindow.HTMLInputElement;
  var HTMLLinkElement = $stencilWindow.HTMLLinkElement;
  var HTMLMetaElement = $stencilWindow.HTMLMetaElement;
  var HTMLScriptElement = $stencilWindow.HTMLScriptElement;
  var HTMLStyleElement = $stencilWindow.HTMLStyleElement;
  var HTMLTemplateElement = $stencilWindow.HTMLTemplateElement;
  var HTMLTitleElement = $stencilWindow.HTMLTitleElement;
  var IntersectionObserver = $stencilWindow.IntersectionObserver;
  var KeyboardEvent = $stencilWindow.KeyboardEvent;
  var MouseEvent = $stencilWindow.MouseEvent;
  var Node = $stencilWindow.Node;
  var NodeList = $stencilWindow.NodeList;
  var URL = $stencilWindow.URL;

  var console = $stencilWindow.console;
  var customElements = $stencilWindow.customElements;
  var history = $stencilWindow.history;
  var localStorage = $stencilWindow.localStorage;
  var location = $stencilWindow.location;
  var navigator = $stencilWindow.navigator;
  var performance = $stencilWindow.performance;
  var sessionStorage = $stencilWindow.sessionStorage;

  var devicePixelRatio = $stencilWindow.devicePixelRatio;
  var innerHeight = $stencilWindow.innerHeight;
  var innerWidth = $stencilWindow.innerWidth;
  var origin = $stencilWindow.origin;
  var pageXOffset = $stencilWindow.pageXOffset;
  var pageYOffset = $stencilWindow.pageYOffset;
  var screen = $stencilWindow.screen;
  var screenLeft = $stencilWindow.screenLeft;
  var screenTop = $stencilWindow.screenTop;
  var screenX = $stencilWindow.screenX;
  var screenY = $stencilWindow.screenY;
  var scrollX = $stencilWindow.scrollX;
  var scrollY = $stencilWindow.scrollY;
  var exports = {};

  var fetch, FetchError, Headers, Request, Response;

  if (typeof $stencilWindow.fetch === 'function') {
  fetch = $stencilWindow.fetch;
  } else {
  fetch = $stencilWindow.fetch = function() { throw new Error('fetch() is not implemented'); };
  }

  if (typeof $stencilWindow.FetchError === 'function') {
  FetchError = $stencilWindow.FetchError;
  } else {
  FetchError = $stencilWindow.FetchError = class FetchError { constructor() { throw new Error('FetchError is not implemented'); } };
  }

  if (typeof $stencilWindow.Headers === 'function') {
  Headers = $stencilWindow.Headers;
  } else {
  Headers = $stencilWindow.Headers = class Headers { constructor() { throw new Error('Headers is not implemented'); } };
  }

  if (typeof $stencilWindow.Request === 'function') {
  Request = $stencilWindow.Request;
  } else {
  Request = $stencilWindow.Request = class Request { constructor() { throw new Error('Request is not implemented'); } };
  }

  if (typeof $stencilWindow.Response === 'function') {
  Response = $stencilWindow.Response;
  } else {
  Response = $stencilWindow.Response = class Response { constructor() { throw new Error('Response is not implemented'); } };
  }

  function hydrateAppClosure($stencilWindow) {
  const window = $stencilWindow;
  const document = $stencilWindow.document;
  /*hydrateAppClosure start*/


const NAMESPACE = 'solutions';
const BUILD = /* solutions */ { allRenderFn: true, appendChildSlotFix: false, asyncLoading: true, attachStyles: true, cloneNodeFix: false, cmpDidLoad: true, cmpDidRender: true, cmpDidUnload: false, cmpDidUpdate: true, cmpShouldUpdate: true, cmpWillLoad: true, cmpWillRender: true, cmpWillUpdate: false, connectedCallback: true, constructableCSS: false, cssAnnotations: true, cssVarShim: false, devTools: false, disconnectedCallback: true, dynamicImportShim: false, element: false, event: true, hasRenderFn: true, hostListener: true, hostListenerTarget: true, hostListenerTargetBody: true, hostListenerTargetDocument: true, hostListenerTargetParent: false, hostListenerTargetWindow: true, hotModuleReplacement: false, hydrateClientSide: true, hydrateServerSide: true, hydratedAttribute: false, hydratedClass: true, isDebug: false, isDev: false, isTesting: false, lazyLoad: true, lifecycle: true, lifecycleDOMEvents: false, member: true, method: true, mode: false, observeAttribute: true, profile: false, prop: true, propBoolean: true, propMutable: true, propNumber: true, propString: true, reflect: true, safari10: false, scoped: false, scriptDataOpts: false, shadowDelegatesFocus: false, shadowDom: true, shadowDomShim: true, slot: true, slotChildNodesFix: false, slotRelocation: true, state: true, style: true, svg: true, taskQueue: true, updatable: true, vdomAttribute: true, vdomClass: true, vdomFunctional: true, vdomKey: true, vdomListener: true, vdomPropOrAttr: true, vdomRef: true, vdomRender: true, vdomStyle: true, vdomText: true, vdomXlink: true, watchCallback: true };

function componentOnReady() {
 return getHostRef(this).$onReadyPromise$;
}

function forceUpdate() {}

function hydrateApp(e, t, o, n, s) {
 function l() {
  if (global.clearTimeout(p), i.clear(), r.clear(), !h) {
   h = !0;
   try {
    t.clientHydrateAnnotations && insertVdomAnnotations(e.document, t.staticComponents), 
    e.dispatchEvent(new e.Event("DOMContentLoaded")), e.document.createElement = c, 
    e.document.createElementNS = $;
   } catch (e) {
    renderCatchError(t, o, e);
   }
  }
  n(e, t, o, s);
 }
 function a(e) {
  renderCatchError(t, o, e), l();
 }
 const r = new Set, i = new Set, d = new Set, c = e.document.createElement, $ = e.document.createElementNS, m = Promise.resolve();
 let p, h = !1;
 try {
  function u() {
   return g(this);
  }
  function f(e) {
   if (isValidComponent(e, t) && !getHostRef(e)) {
    const t = loadModule({
     $tagName$: e.nodeName.toLowerCase(),
     $flags$: null
    });
    null != t && null != t.cmpMeta && (i.add(e), e.connectedCallback = u, registerHost(e, t.cmpMeta), 
    function o(e, t) {
     if ("function" != typeof e.componentOnReady && (e.componentOnReady = componentOnReady), 
     "function" != typeof e.forceUpdate && (e.forceUpdate = forceUpdate), 1 & t.$flags$ && (e.shadowRoot = e), 
     null != t.$members$) {
      const o = getHostRef(e);
      Object.entries(t.$members$).forEach((([n, s]) => {
       const l = s[0];
       if (31 & l) {
        const a = s[1] || n, r = e.getAttribute(a);
        if (null != r) {
         const e = parsePropertyValue(r, l);
         o.$instanceValues$.set(n, e);
        }
        const i = e[n];
        void 0 !== i && (o.$instanceValues$.set(n, i), delete e[n]), Object.defineProperty(e, n, {
         get() {
          return getValue(this, n);
         },
         set(e) {
          setValue(this, n, e, t);
         },
         configurable: !0,
         enumerable: !0
        });
       } else 64 & l && Object.defineProperty(e, n, {
        value() {
         const e = getHostRef(this), t = arguments;
         return e.$onInstancePromise$.then((() => e.$lazyInstance$[n].apply(e.$lazyInstance$, t))).catch(consoleError);
        }
       });
      }));
     }
    }(e, t.cmpMeta));
   }
  }
  function g(n) {
   return i.delete(n), isValidComponent(n, t) && o.hydratedCount < t.maxHydrateCount && !r.has(n) && shouldHydrate(n) ? (r.add(n), 
   async function s(e, t, o, n, l) {
    o = o.toLowerCase();
    const a = loadModule({
     $tagName$: o,
     $flags$: null
    });
    if (null != a && null != a.cmpMeta) {
     l.add(n);
     try {
      connectedCallback(n), await n.componentOnReady(), t.hydratedCount++;
      const e = getHostRef(n), s = e.$modeName$ ? e.$modeName$ : "$";
      t.components.some((e => e.tag === o && e.mode === s)) || t.components.push({
       tag: o,
       mode: s,
       count: 0,
       depth: -1
      });
     } catch (t) {
      e.console.error(t);
     }
     l.delete(n);
    }
   }(e, o, n.nodeName, n, d)) : m;
  }
  e.document.createElement = function t(o) {
   const n = c.call(e.document, o);
   return f(n), n;
  }, e.document.createElementNS = function t(o, n) {
   const s = $.call(e.document, o, n);
   return f(s), s;
  }, p = global.setTimeout((function L() {
   a(`Hydrate exceeded timeout${function e(t) {
    return Array.from(t).map(waitingOnElementMsg);
   }(d)}`);
  }), t.timeout), plt.$resourcesUrl$ = new URL(t.resourcesUrl || "./", doc.baseURI).href, 
  function e(t) {
   if (null != t && 1 === t.nodeType) {
    f(t);
    const o = t.children;
    for (let t = 0, n = o.length; t < n; t++) e(o[t]);
   }
  }(e.document.body), function e() {
   const t = Array.from(i).filter((e => e.parentElement));
   return t.length > 0 ? Promise.all(t.map(g)).then(e) : m;
  }().then(l).catch(a);
 } catch (e) {
  a(e);
 }
}

function isValidComponent(e, t) {
 if (null != e && 1 === e.nodeType) {
  const o = e.nodeName;
  if ("string" == typeof o && o.includes("-")) return !t.excludeComponents.includes(o.toLowerCase());
 }
 return !1;
}

function shouldHydrate(e) {
 if (9 === e.nodeType) return !0;
 if (NO_HYDRATE_TAGS.has(e.nodeName)) return !1;
 if (e.hasAttribute("no-prerender")) return !1;
 const t = e.parentNode;
 return null == t || shouldHydrate(t);
}

function renderCatchError(e, t, o) {
 const n = {
  level: "error",
  type: "build",
  header: "Hydrate Error",
  messageText: "",
  relFilePath: null,
  absFilePath: null,
  lines: []
 };
 if (e.url) try {
  const t = new URL(e.url);
  "/" !== t.pathname && (n.header += ": " + t.pathname);
 } catch (e) {}
 null != o && (null != o.stack ? n.messageText = o.stack.toString() : null != o.message ? n.messageText = o.message.toString() : n.messageText = o.toString()), 
 t.diagnostics.push(n);
}

function printTag(e) {
 let t = `<${e.nodeName.toLowerCase()}`;
 if (Array.isArray(e.attributes)) for (let o = 0; o < e.attributes.length; o++) {
  const n = e.attributes[o];
  t += ` ${n.name}`, "" !== n.value && (t += `="${n.value}"`);
 }
 return t += ">", t;
}

function waitingOnElementMsg(e) {
 let t = "";
 if (e) {
  const o = [];
  t = " - waiting on:";
  let n = e;
  for (;n && 9 !== n.nodeType && "BODY" !== n.nodeName; ) o.unshift(printTag(n)), 
  n = n.parentElement;
  let s = "";
  for (const e of o) s += "  ", t += `\n${s}${e}`;
 }
 return t;
}

const addHostEventListeners = (e, t, o, n) => {
 o && (o.map((([o, n, s]) => {
  const l = getHostListenerTarget(e, o) , a = hostListenerProxy(t, s), r = hostListenerOpts(o);
  plt.ael(l, n, a, r), (t.$rmListeners$ = t.$rmListeners$ || []).push((() => plt.rel(l, n, a, r)));
 })));
}, hostListenerProxy = (e, t) => o => {
 try {
  256 & e.$flags$ ? e.$lazyInstance$[t](o) : (e.$queuedListeners$ = e.$queuedListeners$ || []).push([ t, o ]) ;
 } catch (e) {
  consoleError(e);
 }
}, getHostListenerTarget = (e, t) => 4 & t ? doc : 8 & t ? win : 16 & t ? doc.body : e, hostListenerOpts = e => 0 != (2 & e), XLINK_NS = "http://www.w3.org/1999/xlink";

const createTime = (e, t = "") => {
 return () => {};
}, rootAppliedStyles = new WeakMap, registerStyle = (e, t, o) => {
 let n = styles.get(e);
 n = t, styles.set(e, n);
}, addStyle = (e, t, o, n) => {
 let s = getScopeId(t), l = styles.get(s);
 if (e = 11 === e.nodeType ? e : doc, l) if ("string" == typeof l) {
  e = e.head || e;
  let o, a = rootAppliedStyles.get(e);
  if (a || rootAppliedStyles.set(e, a = new Set), !a.has(s)) {
   if (e.host && (o = e.querySelector(`[sty-id="${s}"]`))) o.innerHTML = l; else {
    o = doc.createElement("style"), o.innerHTML = l;
    o.setAttribute("sty-id", s), 
    e.insertBefore(o, e.querySelector("link"));
   }
   a && a.add(s);
  }
 }
 return s;
}, attachStyles = e => {
 const t = e.$cmpMeta$, o = e.$hostElement$, n = t.$flags$, s = createTime("attachStyles", t.$tagName$), l = addStyle(o.getRootNode(), t);
 10 & n && (o["s-sc"] = l, 
 o.classList.add(l + "-h"), BUILD.scoped  ), 
 s();
}, getScopeId = (e, t) => "sc-" + (e.$tagName$), EMPTY_OBJ = {}, isComplexType = e => "object" == (e = typeof e) || "function" === e, isPromise = e => !!e && ("object" == typeof e || "function" == typeof e) && "function" == typeof e.then, h = (e, t, ...o) => {
 let n = null, s = null, l = null, a = !1, r = !1, i = [];
 const d = t => {
  for (let o = 0; o < t.length; o++) n = t[o], Array.isArray(n) ? d(n) : null != n && "boolean" != typeof n && ((a = "function" != typeof e && !isComplexType(n)) ? n = String(n) : BUILD.isDev  , 
  a && r ? i[i.length - 1].$text$ += n : i.push(a ? newVNode(null, n) : n), r = a);
 };
 if (d(o), t && (t.key && (s = t.key), 
 t.name && (l = t.name), BUILD.vdomClass)) {
  const e = t.className || t.class;
  e && (t.class = "object" != typeof e ? e : Object.keys(e).filter((t => e[t])).join(" "));
 }
 if ("function" == typeof e) return e(null === t ? {} : t, i, vdomFnUtils);
 const c = newVNode(e, null);
 return c.$attrs$ = t, i.length > 0 && (c.$children$ = i), (c.$key$ = s), 
 (c.$name$ = l), c;
}, newVNode = (e, t) => {
 const o = {
  $flags$: 0,
  $tag$: e,
  $text$: t,
  $elm$: null,
  $children$: null
 };
 return (o.$attrs$ = null), (o.$key$ = null), 
 (o.$name$ = null), o;
}, Host = {}, isHost = e => e && e.$tag$ === Host, vdomFnUtils = {
 forEach: (e, t) => e.map(convertToPublic).forEach(t),
 map: (e, t) => e.map(convertToPublic).map(t).map(convertToPrivate)
}, convertToPublic = e => ({
 vattrs: e.$attrs$,
 vchildren: e.$children$,
 vkey: e.$key$,
 vname: e.$name$,
 vtag: e.$tag$,
 vtext: e.$text$
}), convertToPrivate = e => {
 if ("function" == typeof e.vtag) {
  const t = {
   ...e.vattrs
  };
  return e.vkey && (t.key = e.vkey), e.vname && (t.name = e.vname), h(e.vtag, t, ...e.vchildren || []);
 }
 const t = newVNode(e.vtag, e.vtext);
 return t.$attrs$ = e.vattrs, t.$children$ = e.vchildren, t.$key$ = e.vkey, t.$name$ = e.vname, 
 t;
}, setAccessor = (e, t, o, n, s, l) => {
 if (o !== n) {
  let a = isMemberInElement(e, t), r = t.toLowerCase();
  if ("class" === t) {
   const t = e.classList, s = parseClassList(o), l = parseClassList(n);
   t.remove(...s.filter((e => e && !l.includes(e)))), t.add(...l.filter((e => e && !s.includes(e))));
  } else if ("style" === t) {
   for (const t in o) n && null != n[t] || (e.style[t] = "");
   for (const t in n) o && n[t] === o[t] || (e.style[t] = n[t]);
  } else if ("key" === t) ; else if ("ref" === t) n && n(e); else if ((a ) || "o" !== t[0] || "n" !== t[1]) {
   {
    const i = isComplexType(n);
    if ((a || i && null !== n) && !s) try {
     if (e.tagName.includes("-")) e[t] = n; else {
      let s = null == n ? "" : n;
      "list" === t ? a = !1 : null != o && e[t] == s || (e[t] = s);
     }
    } catch (e) {}
    let d = !1;
    r !== (r = r.replace(/^xlink\:?/, "")) && (t = r, d = !0), null == n || !1 === n ? !1 === n && "" !== e.getAttribute(t) || (d ? e.removeAttributeNS(XLINK_NS, t) : e.removeAttribute(t)) : (!a || 4 & l || s) && !i && (n = !0 === n ? "" : n, 
    d ? e.setAttributeNS(XLINK_NS, t, n) : e.setAttribute(t, n));
   }
  } else t = "-" === t[2] ? t.slice(3) : isMemberInElement(win, r) ? r.slice(2) : r[2] + t.slice(3), 
  o && plt.rel(e, t, o, !1), n && plt.ael(e, t, n, !1);
 }
}, parseClassListRegex = /\s/, parseClassList = e => e ? e.split(parseClassListRegex) : [], updateElement = (e, t, o, n) => {
 const s = 11 === t.$elm$.nodeType && t.$elm$.host ? t.$elm$.host : t.$elm$, l = e && e.$attrs$ || EMPTY_OBJ, a = t.$attrs$ || EMPTY_OBJ;
 for (n in l) n in a || setAccessor(s, n, l[n], void 0, o, t.$flags$);
 for (n in a) setAccessor(s, n, l[n], a[n], o, t.$flags$);
};

let scopeId, contentRef, hostTagName, useNativeShadowDom = !1, checkSlotFallbackVisibility = !1, checkSlotRelocate = !1, isSvgMode = !1;

const createElm = (e, t, o, n) => {
 let s, l, a, r = t.$children$[o], i = 0;
 if (!useNativeShadowDom && (checkSlotRelocate = !0, "slot" === r.$tag$ && (scopeId && n.classList.add(scopeId + "-s"), 
 r.$flags$ |= r.$children$ ? 2 : 1)), null !== r.$text$) s = r.$elm$ = doc.createTextNode(r.$text$); else if (1 & r.$flags$) s = r.$elm$ = slotReferenceDebugNode(r) ; else {
  if (!isSvgMode && (isSvgMode = "svg" === r.$tag$), s = r.$elm$ = doc.createElementNS(isSvgMode ? "http://www.w3.org/2000/svg" : "http://www.w3.org/1999/xhtml", 2 & r.$flags$ ? "slot-fb" : r.$tag$) , 
  isSvgMode && "foreignObject" === r.$tag$ && (isSvgMode = !1), updateElement(null, r, isSvgMode), 
  null != scopeId && s["s-si"] !== scopeId && s.classList.add(s["s-si"] = scopeId), 
  r.$children$) for (i = 0; i < r.$children$.length; ++i) l = createElm(e, r, i, s), 
  l && s.appendChild(l);
  ("svg" === r.$tag$ ? isSvgMode = !1 : "foreignObject" === s.tagName && (isSvgMode = !0));
 }
 return (s["s-hn"] = hostTagName, 3 & r.$flags$ && (s["s-sr"] = !0, 
 s["s-cr"] = contentRef, s["s-sn"] = r.$name$ || "", a = e && e.$children$ && e.$children$[o], 
 a && a.$tag$ === r.$tag$ && e.$elm$ && putBackInOriginalLocation(e.$elm$, !1))), 
 s;
}, putBackInOriginalLocation = (e, t) => {
 plt.$flags$ |= 1;
 const o = e.childNodes;
 for (let e = o.length - 1; e >= 0; e--) {
  const n = o[e];
  n["s-hn"] !== hostTagName && n["s-ol"] && (parentReferenceNode(n).insertBefore(n, referenceNode(n)), 
  n["s-ol"].remove(), n["s-ol"] = void 0, checkSlotRelocate = !0), t && putBackInOriginalLocation(n, t);
 }
 plt.$flags$ &= -2;
}, addVnodes = (e, t, o, n, s, l) => {
 let a, r = e["s-cr"] && e["s-cr"].parentNode || e;
 for (r.shadowRoot && r.tagName === hostTagName && (r = r.shadowRoot); s <= l; ++s) n[s] && (a = createElm(null, o, s, e), 
 a && (n[s].$elm$ = a, r.insertBefore(a, referenceNode(t) )));
}, removeVnodes = (e, t, o, n, s) => {
 for (;t <= o; ++t) (n = e[t]) && (s = n.$elm$, callNodeRefs(n), (checkSlotFallbackVisibility = !0, 
 s["s-ol"] ? s["s-ol"].remove() : putBackInOriginalLocation(s, !0)), s.remove());
}, isSameVnode = (e, t) => e.$tag$ === t.$tag$ && ("slot" === e.$tag$ ? e.$name$ === t.$name$ : e.$key$ === t.$key$), referenceNode = e => e && e["s-ol"] || e, parentReferenceNode = e => (e["s-ol"] ? e["s-ol"] : e).parentNode, patch = (e, t) => {
 const o = t.$elm$ = e.$elm$, n = e.$children$, s = t.$children$, l = t.$tag$, a = t.$text$;
 let r;
 null !== a ? (r = o["s-cr"]) ? r.parentNode.textContent = a : e.$text$ !== a && (o.data = a) : ((isSvgMode = "svg" === l || "foreignObject" !== l && isSvgMode), 
 ("slot" === l || updateElement(e, t, isSvgMode)), 
 null !== n && null !== s ? ((e, t, o, n) => {
  let s, l, a = 0, r = 0, i = 0, d = 0, c = t.length - 1, $ = t[0], m = t[c], p = n.length - 1, h = n[0], u = n[p];
  for (;a <= c && r <= p; ) if (null == $) $ = t[++a]; else if (null == m) m = t[--c]; else if (null == h) h = n[++r]; else if (null == u) u = n[--p]; else if (isSameVnode($, h)) patch($, h), 
  $ = t[++a], h = n[++r]; else if (isSameVnode(m, u)) patch(m, u), m = t[--c], u = n[--p]; else if (isSameVnode($, u)) "slot" !== $.$tag$ && "slot" !== u.$tag$ || putBackInOriginalLocation($.$elm$.parentNode, !1), 
  patch($, u), e.insertBefore($.$elm$, m.$elm$.nextSibling), $ = t[++a], u = n[--p]; else if (isSameVnode(m, h)) "slot" !== $.$tag$ && "slot" !== u.$tag$ || putBackInOriginalLocation(m.$elm$.parentNode, !1), 
  patch(m, h), e.insertBefore(m.$elm$, $.$elm$), m = t[--c], h = n[++r]; else {
   if (i = -1, BUILD.vdomKey) for (d = a; d <= c; ++d) if (t[d] && null !== t[d].$key$ && t[d].$key$ === h.$key$) {
    i = d;
    break;
   }
   i >= 0 ? (l = t[i], l.$tag$ !== h.$tag$ ? s = createElm(t && t[r], o, i, e) : (patch(l, h), 
   t[i] = void 0, s = l.$elm$), h = n[++r]) : (s = createElm(t && t[r], o, r, e), h = n[++r]), 
   s && (parentReferenceNode($.$elm$).insertBefore(s, referenceNode($.$elm$)) );
  }
  a > c ? addVnodes(e, null == n[p + 1] ? null : n[p + 1].$elm$, o, n, r, p) : r > p && removeVnodes(t, a, c);
 })(o, n, t, s) : null !== s ? (null !== e.$text$ && (o.textContent = ""), 
 addVnodes(o, null, t, s, 0, s.length - 1)) : null !== n && removeVnodes(n, 0, n.length - 1), 
 isSvgMode && "svg" === l && (isSvgMode = !1));
}, updateFallbackSlotVisibility = e => {
 let t, o, n, s, l, a, r = e.childNodes;
 for (o = 0, n = r.length; o < n; o++) if (t = r[o], 1 === t.nodeType) {
  if (t["s-sr"]) for (l = t["s-sn"], t.hidden = !1, s = 0; s < n; s++) if (a = r[s].nodeType, 
  r[s]["s-hn"] !== t["s-hn"] || "" !== l) {
   if (1 === a && l === r[s].getAttribute("slot")) {
    t.hidden = !0;
    break;
   }
  } else if (1 === a || 3 === a && "" !== r[s].textContent.trim()) {
   t.hidden = !0;
   break;
  }
  updateFallbackSlotVisibility(t);
 }
}, relocateNodes = [], relocateSlotContent = e => {
 let t, o, n, s, l, a, r = 0, i = e.childNodes, d = i.length;
 for (;r < d; r++) {
  if (t = i[r], t["s-sr"] && (o = t["s-cr"]) && o.parentNode) for (n = o.parentNode.childNodes, 
  s = t["s-sn"], a = n.length - 1; a >= 0; a--) o = n[a], o["s-cn"] || o["s-nr"] || o["s-hn"] === t["s-hn"] || (isNodeLocatedInSlot(o, s) ? (l = relocateNodes.find((e => e.$nodeToRelocate$ === o)), 
  checkSlotFallbackVisibility = !0, o["s-sn"] = o["s-sn"] || s, l ? l.$slotRefNode$ = t : relocateNodes.push({
   $slotRefNode$: t,
   $nodeToRelocate$: o
  }), o["s-sr"] && relocateNodes.map((e => {
   isNodeLocatedInSlot(e.$nodeToRelocate$, o["s-sn"]) && (l = relocateNodes.find((e => e.$nodeToRelocate$ === o)), 
   l && !e.$slotRefNode$ && (e.$slotRefNode$ = l.$slotRefNode$));
  }))) : relocateNodes.some((e => e.$nodeToRelocate$ === o)) || relocateNodes.push({
   $nodeToRelocate$: o
  }));
  1 === t.nodeType && relocateSlotContent(t);
 }
}, isNodeLocatedInSlot = (e, t) => 1 === e.nodeType ? null === e.getAttribute("slot") && "" === t || e.getAttribute("slot") === t : e["s-sn"] === t || "" === t, callNodeRefs = e => {
 (e.$attrs$ && e.$attrs$.ref && e.$attrs$.ref(null), e.$children$ && e.$children$.map(callNodeRefs));
}, renderVdom = (e, t) => {
 const o = e.$hostElement$, n = e.$cmpMeta$, s = e.$vnode$ || newVNode(null, null), l = isHost(t) ? t : h(null, null, t);
 if (hostTagName = o.tagName, BUILD.isDev  ) ;
 if (n.$attrsToReflect$ && (l.$attrs$ = l.$attrs$ || {}, n.$attrsToReflect$.map((([e, t]) => l.$attrs$[t] = o[e]))), 
 l.$tag$ = null, l.$flags$ |= 4, e.$vnode$ = l, l.$elm$ = s.$elm$ = o.shadowRoot || o, 
 (scopeId = o["s-sc"]), (contentRef = o["s-cr"], 
 useNativeShadowDom = supportsShadow, checkSlotFallbackVisibility = !1), patch(s, l), 
 BUILD.slotRelocation) {
  if (plt.$flags$ |= 1, checkSlotRelocate) {
   let e, t, o, n, s, a;
   relocateSlotContent(l.$elm$);
   let r = 0;
   for (;r < relocateNodes.length; r++) e = relocateNodes[r], t = e.$nodeToRelocate$, 
   t["s-ol"] || (o = originalLocationDebugNode(t) , 
   o["s-nr"] = t, t.parentNode.insertBefore(t["s-ol"] = o, t));
   for (r = 0; r < relocateNodes.length; r++) if (e = relocateNodes[r], t = e.$nodeToRelocate$, 
   e.$slotRefNode$) {
    for (n = e.$slotRefNode$.parentNode, s = e.$slotRefNode$.nextSibling, o = t["s-ol"]; o = o.previousSibling; ) if (a = o["s-nr"], 
    a && a["s-sn"] === t["s-sn"] && n === a.parentNode && (a = a.nextSibling, !a || !a["s-nr"])) {
     s = a;
     break;
    }
    (!s && n !== t.parentNode || t.nextSibling !== s) && t !== s && (!t["s-hn"] && t["s-ol"] && (t["s-hn"] = t["s-ol"].parentNode.nodeName), 
    n.insertBefore(t, s));
   } else 1 === t.nodeType && (t.hidden = !0);
  }
  checkSlotFallbackVisibility && updateFallbackSlotVisibility(l.$elm$), plt.$flags$ &= -2, 
  relocateNodes.length = 0;
 }
}, slotReferenceDebugNode = e => doc.createComment(`<slot${e.$name$ ? ' name="' + e.$name$ + '"' : ""}> (host=${hostTagName.toLowerCase()})`), originalLocationDebugNode = e => doc.createComment("org-location for " + (e.localName ? `<${e.localName}> (host=${e["s-hn"]})` : `[${e.textContent}]`)), getElement = e => getHostRef(e).$hostElement$ , createEvent = (e, t, o) => {
 const n = getElement(e);
 return {
  emit: e => (emitEvent(n, t, {
   bubbles: !!(4 & o),
   composed: !!(2 & o),
   cancelable: !!(1 & o),
   detail: e
  }))
 };
}, emitEvent = (e, t, o) => {
 const n = plt.ce(t, o);
 return e.dispatchEvent(n), n;
}, attachToAncestor = (e, t) => {
 t && !e.$onRenderResolve$ && t["s-p"] && t["s-p"].push(new Promise((t => e.$onRenderResolve$ = t)));
}, scheduleUpdate = (e, t) => {
 if ((e.$flags$ |= 16), 4 & e.$flags$) return void (e.$flags$ |= 512);
 attachToAncestor(e, e.$ancestorComponent$);
 const o = () => dispatchHooks(e, t);
 return writeTask(o) ;
}, dispatchHooks = (e, t) => {
 const n = createTime("scheduleUpdate", e.$cmpMeta$.$tagName$), s = e.$lazyInstance$ ;
 let l;
 return t ? ((e.$flags$ |= 256, e.$queuedListeners$ && (e.$queuedListeners$.map((([e, t]) => safeCall(s, e, t))), 
 e.$queuedListeners$ = null)), (l = safeCall(s, "componentWillLoad"))) : (BUILD.cmpWillUpdate ), (l = then(l, (() => safeCall(s, "componentWillRender")))), 
 n(), then(l, (() => updateComponent(e, s, t)));
}, updateComponent = async (e, t, o) => {
 const n = e.$hostElement$, s = createTime("update", e.$cmpMeta$.$tagName$), l = n["s-rc"];
 o && attachStyles(e);
 const a = createTime("render", e.$cmpMeta$.$tagName$);
 if (await callRender(e, t) , 
 BUILD.hydrateServerSide) try {
  serverSideConnected(n), o && (1 & e.$cmpMeta$.$flags$ ? n["s-en"] = "" : 2 & e.$cmpMeta$.$flags$ && (n["s-en"] = "c"));
 } catch (e) {
  consoleError(e, n);
 }
 if (l && (l.map((e => e())), n["s-rc"] = void 0), a(), s(), 
 BUILD.asyncLoading) {
  const t = n["s-p"], o = () => postUpdateComponent(e);
  0 === t.length ? o() : (Promise.all(t).then(o), e.$flags$ |= 4, t.length = 0);
 }
};

let renderingRef = null;

const callRender = (e, t, o) => {
 try {
  if (renderingRef = t, t = t.render(), (e.$flags$ &= -17), 
  (e.$flags$ |= 2), BUILD.hasRenderFn ) {
   return Promise.resolve(t).then((t => renderVdom(e, t)));
  }
 } catch (t) {
  consoleError(t, e.$hostElement$);
 }
 return renderingRef = null, null;
}, getRenderingRef = () => renderingRef, postUpdateComponent = e => {
 const t = e.$cmpMeta$.$tagName$, o = e.$hostElement$, n = createTime("postUpdate", t), s = e.$lazyInstance$ , l = e.$ancestorComponent$;
 (safeCall(s, "componentDidRender"), 
 BUILD.isDev ), 64 & e.$flags$ ? ((safeCall(s, "componentDidUpdate"), 
 BUILD.isDev ), n()) : (e.$flags$ |= 64, addHydratedFlag(o), 
 (safeCall(s, "componentDidLoad"), 
 BUILD.isDev ), n(), (e.$onReadyResolve$(o), l || appDidLoad())), e.$onInstanceResolve$(o), (e.$onRenderResolve$ && (e.$onRenderResolve$(), 
 e.$onRenderResolve$ = void 0), 512 & e.$flags$ && nextTick((() => scheduleUpdate(e, !1))), 
 e.$flags$ &= -517);
}, forceUpdate$1 = e => {
 {
  const t = getHostRef(e), o = t.$hostElement$.isConnected;
  return o && 2 == (18 & t.$flags$) && scheduleUpdate(t, !1), o;
 }
}, appDidLoad = e => {
 addHydratedFlag(doc.documentElement), nextTick((() => emitEvent(win, "appload", {
  detail: {
   namespace: NAMESPACE
  }
 }))), BUILD.profile  ;
}, safeCall = (e, t, o) => {
 if (e && e[t]) try {
  return e[t](o);
 } catch (e) {
  consoleError(e);
 }
}, then = (e, t) => e && e.then ? e.then(t) : t(), addHydratedFlag = e => e.classList.add("hydrated") , serverSideConnected = e => {
 const t = e.children;
 if (null != t) for (let e = 0, o = t.length; e < o; e++) {
  const o = t[e];
  "function" == typeof o.connectedCallback && o.connectedCallback(), serverSideConnected(o);
 }
}, clientHydrate = (e, t, o, n, s, l, a) => {
 let r, i, d, c;
 if (1 === l.nodeType) {
  for (r = l.getAttribute("c-id"), r && (i = r.split("."), i[0] !== a && "0" !== i[0] || (d = {
   $flags$: 0,
   $hostId$: i[0],
   $nodeId$: i[1],
   $depth$: i[2],
   $index$: i[3],
   $tag$: l.tagName.toLowerCase(),
   $elm$: l,
   $attrs$: null,
   $children$: null,
   $key$: null,
   $name$: null,
   $text$: null
  }, t.push(d), l.removeAttribute("c-id"), e.$children$ || (e.$children$ = []), e.$children$[d.$index$] = d, 
  e = d, n && "0" === d.$depth$ && (n[d.$index$] = d.$elm$))), c = l.childNodes.length - 1; c >= 0; c--) clientHydrate(e, t, o, n, s, l.childNodes[c], a);
  if (l.shadowRoot) for (c = l.shadowRoot.childNodes.length - 1; c >= 0; c--) clientHydrate(e, t, o, n, s, l.shadowRoot.childNodes[c], a);
 } else if (8 === l.nodeType) i = l.nodeValue.split("."), i[1] !== a && "0" !== i[1] || (r = i[0], 
 d = {
  $flags$: 0,
  $hostId$: i[1],
  $nodeId$: i[2],
  $depth$: i[3],
  $index$: i[4],
  $elm$: l,
  $attrs$: null,
  $children$: null,
  $key$: null,
  $name$: null,
  $tag$: null,
  $text$: null
 }, "t" === r ? (d.$elm$ = l.nextSibling, d.$elm$ && 3 === d.$elm$.nodeType && (d.$text$ = d.$elm$.textContent, 
 t.push(d), l.remove(), e.$children$ || (e.$children$ = []), e.$children$[d.$index$] = d, 
 n && "0" === d.$depth$ && (n[d.$index$] = d.$elm$))) : d.$hostId$ === a && ("s" === r ? (d.$tag$ = "slot", 
 i[5] ? l["s-sn"] = d.$name$ = i[5] : l["s-sn"] = "", l["s-sr"] = !0, n && (d.$elm$ = doc.createElement(d.$tag$), 
 d.$name$ && d.$elm$.setAttribute("name", d.$name$), l.parentNode.insertBefore(d.$elm$, l), 
 l.remove(), "0" === d.$depth$ && (n[d.$index$] = d.$elm$)), o.push(d), e.$children$ || (e.$children$ = []), 
 e.$children$[d.$index$] = d) : "r" === r && (n ? l.remove() : (s["s-cr"] = l, 
 l["s-cn"] = !0)))); else if (e && "style" === e.$tag$) {
  const t = newVNode(null, l.textContent);
  t.$elm$ = l, t.$index$ = "0", e.$children$ = [ t ];
 }
}, initializeDocumentHydrate = (e, t) => {
 if (1 === e.nodeType) {
  let o = 0;
  for (;o < e.childNodes.length; o++) initializeDocumentHydrate(e.childNodes[o], t);
  if (e.shadowRoot) for (o = 0; o < e.shadowRoot.childNodes.length; o++) initializeDocumentHydrate(e.shadowRoot.childNodes[o], t);
 } else if (8 === e.nodeType) {
  const o = e.nodeValue.split(".");
  "o" === o[0] && (t.set(o[1] + "." + o[2], e), e.nodeValue = "", e["s-en"] = o[3]);
 }
}, parsePropertyValue = (e, t) => null == e || isComplexType(e) ? e : 4 & t ? "false" !== e && ("" === e || !!e) : 2 & t ? parseFloat(e) : 1 & t ? String(e) : e, getValue = (e, t) => getHostRef(e).$instanceValues$.get(t), setValue = (e, t, o, n) => {
 const s = getHostRef(e), l = s.$hostElement$ , a = s.$instanceValues$.get(t), r = s.$flags$, i = s.$lazyInstance$ ;
 o = parsePropertyValue(o, n.$members$[t][0]);
 const d = Number.isNaN(a) && Number.isNaN(o), c = o !== a && !d;
 if ((!(8 & r) || void 0 === a) && c && (s.$instanceValues$.set(t, o), 
 i)) {
  if (n.$watchers$ && 128 & r) {
   const e = n.$watchers$[t];
   e && e.map((e => {
    try {
     i[e](o, a, t);
    } catch (e) {
     consoleError(e, l);
    }
   }));
  }
  if (2 == (18 & r)) {
   if (i.componentShouldUpdate && !1 === i.componentShouldUpdate(o, a, t)) return;
   scheduleUpdate(s, !1);
  }
 }
}, proxyComponent = (e, t, o) => {
 if (t.$members$) {
  e.watchers && (t.$watchers$ = e.watchers);
  const n = Object.entries(t.$members$), s = e.prototype;
  if (n.map((([e, [n]]) => {
   (31 & n || (2 & o) && 32 & n) ? Object.defineProperty(s, e, {
    get() {
     return getValue(this, e);
    },
    set(s) {
     setValue(this, e, s, t);
    },
    configurable: !0,
    enumerable: !0
   }) : 1 & o && 64 & n && Object.defineProperty(s, e, {
    value(...t) {
     const o = getHostRef(this);
     return o.$onInstancePromise$.then((() => o.$lazyInstance$[e](...t)));
    }
   });
  })), (1 & o)) {
   const o = new Map;
   s.attributeChangedCallback = function(e, t, n) {
    plt.jmp((() => {
     const t = o.get(e);
     if (this.hasOwnProperty(t)) n = this[t], delete this[t]; else if (s.hasOwnProperty(t) && "number" == typeof this[t] && this[t] == n) return;
     this[t] = (null !== n || "boolean" != typeof this[t]) && n;
    }));
   }, e.observedAttributes = n.filter((([e, t]) => 15 & t[0])).map((([e, n]) => {
    const s = n[1] || e;
    return o.set(s, e), 512 & n[0] && t.$attrsToReflect$.push([ e, s ]), 
    s;
   }));
  }
 }
 return e;
}, initializeComponent = async (e, t, o, n, s) => {
 if (0 == (32 & t.$flags$)) {
  {
   if (t.$flags$ |= 32, (s = loadModule(o)).then) {
    const e = (() => {});
    s = await s, e();
   }
   !s.isProxied && ((o.$watchers$ = s.watchers), 
   proxyComponent(s, o, 2), s.isProxied = !0);
   const e = createTime("createInstance", o.$tagName$);
   (t.$flags$ |= 8);
   try {
    new s(t);
   } catch (e) {
    consoleError(e);
   }
   (t.$flags$ &= -9), (t.$flags$ |= 128), e(), 
   fireConnectedCallback(t.$lazyInstance$);
  }
  if (s.style) {
   let n = s.style;
   const l = getScopeId(o);
   if (!styles.has(l)) {
    const e = createTime("registerStyles", o.$tagName$);
    registerStyle(l, n), e();
   }
  }
 }
 const r = t.$ancestorComponent$, i = () => scheduleUpdate(t, !0);
 r && r["s-rc"] ? r["s-rc"].push(i) : i();
}, fireConnectedCallback = e => {
 safeCall(e, "connectedCallback");
}, connectedCallback = e => {
 if (0 == (1 & plt.$flags$)) {
  const t = getHostRef(e), o = t.$cmpMeta$, n = createTime("connectedCallback", o.$tagName$);
  if (1 & t.$flags$) addHostEventListeners(e, t, o.$listeners$), fireConnectedCallback(t.$lazyInstance$); else {
   let n;
   if (t.$flags$ |= 1, (n = e.getAttribute("s-id"), n)) {
    ((e, t, o, n) => {
     const s = createTime("hydrateClient", t), l = e.shadowRoot, a = [], r = l ? [] : null, i = n.$vnode$ = newVNode(t, null);
     plt.$orgLocNodes$ || initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = new Map), 
     e["s-id"] = o, e.removeAttribute("s-id"), clientHydrate(i, a, [], r, e, e, o), a.map((e => {
      const o = e.$hostId$ + "." + e.$nodeId$, n = plt.$orgLocNodes$.get(o), s = e.$elm$;
      n && supportsShadow && "" === n["s-en"] && n.parentNode.insertBefore(s, n.nextSibling), 
      l || (s["s-hn"] = t, n && (s["s-ol"] = n, s["s-ol"]["s-nr"] = s)), plt.$orgLocNodes$.delete(o);
     })), l && r.map((e => {
      e && l.appendChild(e);
     })), s();
    })(e, o.$tagName$, n, t);
   }
   if (!n && (BUILD.hydrateServerSide ) && setContentReference(e), 
   BUILD.asyncLoading) {
    let o = e;
    for (;o = o.parentNode || o.host; ) if (1 === o.nodeType && o.hasAttribute("s-id") && o["s-p"] || o["s-p"]) {
     attachToAncestor(t, t.$ancestorComponent$ = o);
     break;
    }
   }
   initializeComponent(e, t, o);
  }
  n();
 }
}, setContentReference = e => {
 const t = e["s-cr"] = doc.createComment("");
 t["s-cn"] = !0, e.insertBefore(t, e.firstChild);
}, getAssetPath = e => {
 const t = new URL(e, plt.$resourcesUrl$);
 return t.origin !== win.location.origin ? t.href : t.pathname;
}, insertVdomAnnotations = (e, t) => {
 if (null != e) {
  const o = {
   hostIds: 0,
   rootLevelIds: 0,
   staticComponents: new Set(t)
  }, n = [];
  parseVNodeAnnotations(e, e.body, o, n), n.forEach((t => {
   if (null != t) {
    const n = t["s-nr"];
    let s = n["s-host-id"], l = n["s-node-id"], a = `${s}.${l}`;
    if (null == s) if (s = 0, o.rootLevelIds++, l = o.rootLevelIds, a = `${s}.${l}`, 
    1 === n.nodeType) n.setAttribute("c-id", a); else if (3 === n.nodeType) {
     if (0 === s && "" === n.nodeValue.trim()) return void t.remove();
     const o = e.createComment(a);
     o.nodeValue = `t.${a}`, n.parentNode.insertBefore(o, n);
    }
    let r = `o.${a}`;
    const i = t.parentElement;
    i && ("" === i["s-en"] ? r += "." : "c" === i["s-en"] && (r += ".c")), t.nodeValue = r;
   }
  }));
 }
}, parseVNodeAnnotations = (e, t, o, n) => {
 null != t && (null != t["s-nr"] && n.push(t), 1 === t.nodeType && t.childNodes.forEach((t => {
  const s = getHostRef(t);
  if (null != s && !o.staticComponents.has(t.nodeName.toLowerCase())) {
   const n = {
    nodeIds: 0
   };
   insertVNodeAnnotations(e, t, s.$vnode$, o, n);
  }
  parseVNodeAnnotations(e, t, o, n);
 })));
}, insertVNodeAnnotations = (e, t, o, n, s) => {
 if (null != o) {
  const l = ++n.hostIds;
  if (t.setAttribute("s-id", l), null != t["s-cr"] && (t["s-cr"].nodeValue = `r.${l}`), 
  null != o.$children$) {
   const t = 0;
   o.$children$.forEach(((o, n) => {
    insertChildVNodeAnnotations(e, o, s, l, t, n);
   }));
  }
  if (t && o && o.$elm$ && !t.hasAttribute("c-id")) {
   const e = t.parentElement;
   if (e && e.childNodes) {
    const n = Array.from(e.childNodes), s = n.find((e => 8 === e.nodeType && e["s-sr"]));
    if (s) {
     const e = n.indexOf(t) - 1;
     o.$elm$.setAttribute("c-id", `${s["s-host-id"]}.${s["s-node-id"]}.0.${e}`);
    }
   }
  }
 }
}, insertChildVNodeAnnotations = (e, t, o, n, s, l) => {
 const a = t.$elm$;
 if (null == a) return;
 const r = o.nodeIds++, i = `${n}.${r}.${s}.${l}`;
 if (a["s-host-id"] = n, a["s-node-id"] = r, 1 === a.nodeType) a.setAttribute("c-id", i); else if (3 === a.nodeType) {
  const t = a.parentNode, o = t.nodeName;
  if ("STYLE" !== o && "SCRIPT" !== o) {
   const o = `t.${i}`, n = e.createComment(o);
   t.insertBefore(n, a);
  }
 } else if (8 === a.nodeType && a["s-sr"]) {
  const e = `s.${i}.${a["s-sn"] || ""}`;
  a.nodeValue = e;
 }
 if (null != t.$children$) {
  const l = s + 1;
  t.$children$.forEach(((t, s) => {
   insertChildVNodeAnnotations(e, t, o, n, l, s);
  }));
 }
}, Fragment = (e, t) => t, NO_HYDRATE_TAGS = new Set([ "CODE", "HEAD", "IFRAME", "INPUT", "OBJECT", "OUTPUT", "NOSCRIPT", "PRE", "SCRIPT", "SELECT", "STYLE", "TEMPLATE", "TEXTAREA" ]), hAsync = (e, t, ...o) => {
 if (Array.isArray(o) && o.length > 0) {
  const n = o.flat(1 / 0);
  return n.some(isPromise) ? Promise.all(n).then((o => h(e, t, ...o))).catch((o => h(e, t))) : h(e, t, ...o);
 }
 return h(e, t);
};

const cmpModules = new Map, getModule = e => {
 if ("string" == typeof e) {
  e = e.toLowerCase();
  const t = cmpModules.get(e);
  if (null != t) return t[e];
 }
 return null;
}, loadModule = (e, t, o) => getModule(e.$tagName$), isMemberInElement = (e, t) => {
 if (null != e) {
  if (t in e) return !0;
  const o = getModule(e.nodeName);
  if (null != o) {
   const e = o;
   if (null != e && null != e.cmpMeta && null != e.cmpMeta.$members$) return t in e.cmpMeta.$members$;
  }
 }
 return !1;
}, registerComponents = e => {
 for (const t of e) {
  const e = t.cmpMeta.$tagName$;
  cmpModules.set(e, {
   [e]: t
  });
 }
}, win = window, doc = win.document, writeTask = e => {
 process.nextTick((() => {
  try {
   e();
  } catch (e) {
   consoleError(e);
  }
 }));
}, resolved = Promise.resolve(), nextTick = e => resolved.then(e), defaultConsoleError = e => {
 null != e && console.error(e.stack || e.message || e);
}, consoleError = (e, t) => (defaultConsoleError)(e, t), plt = {
 $flags$: 0,
 $resourcesUrl$: "",
 jmp: e => e(),
 raf: e => requestAnimationFrame(e),
 ael: (e, t, o, n) => e.addEventListener(t, o, n),
 rel: (e, t, o, n) => e.removeEventListener(t, o, n),
 ce: (e, t) => new win.CustomEvent(e, t)
}, supportsShadow = !1, hostRefs = new WeakMap, getHostRef = e => hostRefs.get(e), registerInstance = (e, t) => hostRefs.set(t.$lazyInstance$ = e, t), registerHost = (e, t) => {
 const o = {
  $flags$: 0,
  $cmpMeta$: t,
  $hostElement$: e,
  $instanceValues$: new Map,
  $renderCount$: 0
 };
 return o.$onInstancePromise$ = new Promise((e => o.$onInstanceResolve$ = e)), o.$onReadyPromise$ = new Promise((e => o.$onReadyResolve$ = e)), 
 e["s-p"] = [], e["s-rc"] = [], addHostEventListeners(e, o, t.$listeners$), hostRefs.set(e, o);
}, styles = new Map;

const accordionCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-accordion:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-accordion{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-accordion{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-accordion{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-accordion{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-accordion{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-accordion:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-accordion-h{display:none}/*!@:host([scale=s])*/[scale=s].sc-calcite-accordion-h{--calcite-accordion-item-spacing-unit:0.25rem;--calcite-accordion-icon-margin:0.5rem;--calcite-accordion-item-padding:var(--calcite-accordion-item-spacing-unit) 0.5rem;font-size:var(--calcite-font-size--2);line-height:1rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-accordion-h{--calcite-accordion-item-spacing-unit:0.5rem;--calcite-accordion-icon-margin:0.75rem;--calcite-accordion-item-padding:var(--calcite-accordion-item-spacing-unit) 0.75rem;font-size:var(--calcite-font-size--1);line-height:1rem}/*!@:host([scale=l])*/[scale=l].sc-calcite-accordion-h{--calcite-accordion-item-spacing-unit:0.75rem;--calcite-accordion-icon-margin:1rem;--calcite-accordion-item-padding:var(--calcite-accordion-item-spacing-unit) 1rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@:host*/.sc-calcite-accordion-h{position:relative;display:block;max-width:100%;line-height:1.5rem;--calcite-accordion-item-border:var(--calcite-ui-border-2);--calcite-accordion-item-background:var(--calcite-ui-foreground-1)}/*!@.accordion--transparent*/.accordion--transparent.sc-calcite-accordion{--calcite-accordion-item-border:transparent;--calcite-accordion-item-background:transparent}/*!@.accordion--minimal*/.accordion--minimal.sc-calcite-accordion{--calcite-accordion-item-padding:var(--calcite-accordion-item-spacing-unit) 0}/*!@.accordion*/.accordion.sc-calcite-accordion{border-width:1px;border-bottom-width:0px;border-style:solid;border-color:var(--calcite-ui-border-2)}";

/**
 * @slot - A slot for adding `calcite-accordion-item`s. `calcite-accordion` cannot be nested, however calcite-accordion-item`s can.
 */
class Accordion {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteAccordionChange = createEvent(this, "calciteAccordionChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Public Properties
    //
    //--------------------------------------------------------------------------
    /** specify the appearance - default (containing border), or minimal (no containing border), defaults to default */
    this.appearance = "default";
    /** specify the placement of the icon in the header, defaults to end */
    this.iconPosition = "end";
    /** specify the type of the icon in the header, defaults to chevron */
    this.iconType = "chevron";
    /** specify the scale of accordion, defaults to m */
    this.scale = "m";
    /** specify the selection mode - multi (allow any number of open items), single (allow one open item),
     * or single-persist (allow and require one open item), defaults to multi */
    this.selectionMode = "multi";
    //--------------------------------------------------------------------------
    //
    //  Private State/Props
    //
    //--------------------------------------------------------------------------
    /** created list of Accordion items */
    this.items = [];
    /** keep track of whether the items have been sorted so we don't re-sort */
    this.sorted = false;
    this.sortItems = (items) => items.sort((a, b) => a.position - b.position).map((a) => a.item);
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentDidLoad() {
    if (!this.sorted) {
      this.items = this.sortItems(this.items);
      this.sorted = true;
    }
  }
  render() {
    return (hAsync("div", { class: {
        "accordion--transparent": this.appearance === "transparent",
        "accordion--minimal": this.appearance === "minimal",
        accordion: this.appearance === "default"
      } }, hAsync("slot", null)));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  calciteAccordionItemKeyEvent(e) {
    const item = e.detail.item;
    const parent = e.detail.parent;
    if (this.el === parent) {
      const key = item.key;
      const itemToFocus = e.target;
      const isFirstItem = this.itemIndex(itemToFocus) === 0;
      const isLastItem = this.itemIndex(itemToFocus) === this.items.length - 1;
      switch (key) {
        case "ArrowDown":
          if (isLastItem) {
            this.focusFirstItem();
          }
          else {
            this.focusNextItem(itemToFocus);
          }
          break;
        case "ArrowUp":
          if (isFirstItem) {
            this.focusLastItem();
          }
          else {
            this.focusPrevItem(itemToFocus);
          }
          break;
        case "Home":
          this.focusFirstItem();
          break;
        case "End":
          this.focusLastItem();
          break;
      }
    }
  }
  registerCalciteAccordionItem(e) {
    const item = {
      item: e.target,
      parent: e.detail.parent,
      position: e.detail.position
    };
    if (this.el === item.parent) {
      this.items.push(item);
    }
  }
  updateActiveItemOnChange(event) {
    this.requestedAccordionItem = event.detail.requestedAccordionItem;
    this.calciteAccordionChange.emit({
      requestedAccordionItem: this.requestedAccordionItem
    });
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  focusFirstItem() {
    const firstItem = this.items[0];
    this.focusElement(firstItem);
  }
  focusLastItem() {
    const lastItem = this.items[this.items.length - 1];
    this.focusElement(lastItem);
  }
  focusNextItem(e) {
    const index = this.itemIndex(e);
    const nextItem = this.items[index + 1] || this.items[0];
    this.focusElement(nextItem);
  }
  focusPrevItem(e) {
    const index = this.itemIndex(e);
    const prevItem = this.items[index - 1] || this.items[this.items.length - 1];
    this.focusElement(prevItem);
  }
  itemIndex(e) {
    return this.items.indexOf(e);
  }
  focusElement(item) {
    const target = item;
    target.focus();
  }
  get el() { return getElement(this); }
  static get style() { return accordionCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-accordion",
    "$members$": {
      "appearance": [513],
      "iconPosition": [513, "icon-position"],
      "iconType": [513, "icon-type"],
      "scale": [513],
      "selectionMode": [513, "selection-mode"]
    },
    "$listeners$": [[0, "calciteAccordionItemKeyEvent", "calciteAccordionItemKeyEvent"], [0, "calciteAccordionItemRegister", "registerCalciteAccordionItem"], [0, "calciteAccordionItemSelect", "updateActiveItemOnChange"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["appearance", "appearance"], ["iconPosition", "icon-position"], ["iconType", "icon-type"], ["scale", "scale"], ["selectionMode", "selection-mode"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const autoTheme = "calcite-theme-auto";
const darkTheme = "calcite-theme-dark";
const lightTheme = "calcite-theme-light";
const CSS_UTILITY = {
  autoTheme,
  darkTheme,
  lightTheme,
  rtl: "calcite--rtl"
};
const TEXT$r = {
  loading: "Loading"
};

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
function gen(counts) {
  return counts
    .map((count) => {
    let out = "";
    for (let i = 0; i < count; i++) {
      out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
    }
    return out;
  })
    .join("-");
}
const guid = () => gen([2, 1, 1, 1, 3]);

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
/**
 * This helper will guarantee an ID on the provided element.
 *
 * If it already has an ID, it will be preserved, otherwise a unique one will be generated and assigned.
 *
 * @returns {string} The element's ID.
 */
function ensureId(el) {
  if (!el) {
    return "";
  }
  return (el.id = el.id || `${el.tagName.toLowerCase()}-${guid()}`);
}
function nodeListToArray$1(nodeList) {
  return Array.isArray(nodeList) ? nodeList : Array.from(nodeList);
}
function getThemeName(el) {
  const closestElWithTheme = closestElementCrossShadowBoundary(el, `.${CSS_UTILITY.darkTheme}, .${CSS_UTILITY.lightTheme}`);
  return (closestElWithTheme === null || closestElWithTheme === void 0 ? void 0 : closestElWithTheme.classList.contains("calcite-theme-dark")) ? "dark" : "light";
}
function getElementDir(el) {
  const prop = "dir";
  const selector = `[${prop}]`;
  const closest = closestElementCrossShadowBoundary(el, selector);
  return closest ? closest.getAttribute(prop) : "ltr";
}
function getElementProp(el, prop, fallbackValue) {
  const selector = `[${prop}]`;
  const closest = el.closest(selector);
  return closest ? closest.getAttribute(prop) : fallbackValue;
}
function getRootNode(el) {
  return el.getRootNode();
}
function getHost(root) {
  return root.host || null;
}
/**
 * This helper queries an element's rootNodes and any ancestor rootNodes.
 *
 * @returns {Element[]} The elements.
 */
function queryElementsRoots(element, selector) {
  // Gets the rootNode and any ancestor rootNodes (shadowRoot or document) of an element and queries them for a selector.
  // Based on: https://stackoverflow.com/q/54520554/194216
  function queryFromAll(el, allResults) {
    if (!el) {
      return allResults;
    }
    if (el.assignedSlot) {
      el = el.assignedSlot;
    }
    const rootNode = getRootNode(el);
    const results = Array.from(rootNode.querySelectorAll(selector));
    const uniqueResults = results.filter((result) => !allResults.includes(result));
    allResults = [...allResults, ...uniqueResults];
    const host = getHost(rootNode);
    return host ? queryFromAll(host, allResults) : allResults;
  }
  return queryFromAll(element, []);
}
/**
 * This helper queries an element's rootNode and any ancestor rootNodes.
 *
 * If both an 'id' and 'selector' are supplied, 'id' will take precedence over 'selector'.
 *
 * @returns {Element} The element.
 */
function queryElementRoots(element, { selector, id }) {
  // Gets the rootNode and any ancestor rootNodes (shadowRoot or document) of an element and queries them for a selector.
  // Based on: https://stackoverflow.com/q/54520554/194216
  function queryFrom(el) {
    if (!el) {
      return null;
    }
    if (el.assignedSlot) {
      el = el.assignedSlot;
    }
    const rootNode = getRootNode(el);
    const found = id
      ? rootNode.getElementById(id)
      : selector
        ? rootNode.querySelector(selector)
        : null;
    const host = getHost(rootNode);
    return found ? found : host ? queryFrom(host) : null;
  }
  return queryFrom(element);
}
function closestElementCrossShadowBoundary(element, selector) {
  // based on https://stackoverflow.com/q/54520554/194216
  function closestFrom(el) {
    return el ? el.closest(selector) || closestFrom(getHost(getRootNode(el))) : null;
  }
  return closestFrom(element);
}
function isCalciteFocusable(el) {
  return typeof (el === null || el === void 0 ? void 0 : el.setFocus) === "function";
}
async function focusElement(el) {
  if (!el) {
    return;
  }
  return isCalciteFocusable(el) ? el.setFocus() : el.focus();
}
const defaultSlotSelector = ":not([slot])";
function getSlotted(element, slotName, options) {
  if (slotName && !Array.isArray(slotName) && typeof slotName !== "string") {
    options = slotName;
    slotName = null;
  }
  const slotSelector = slotName
    ? Array.isArray(slotName)
      ? slotName.map((name) => `[slot="${name}"]`).join(",")
      : `[slot="${slotName}"]`
    : defaultSlotSelector;
  if (options === null || options === void 0 ? void 0 : options.all) {
    return queryMultiple(element, slotSelector, options);
  }
  return querySingle(element, slotSelector, options);
}
function getDirectChildren(el, selector) {
  return el ? Array.from(el.children || []).filter((child) => child === null || child === void 0 ? void 0 : child.matches(selector)) : [];
}
function queryMultiple(element, slotSelector, options) {
  let matches = slotSelector === defaultSlotSelector
    ? getDirectChildren(element, defaultSlotSelector)
    : Array.from(element.querySelectorAll(slotSelector));
  matches = options && options.direct === false ? matches : matches.filter((el) => el.parentElement === element);
  matches = (options === null || options === void 0 ? void 0 : options.matches) ? matches.filter((el) => el === null || el === void 0 ? void 0 : el.matches(options.matches)) : matches;
  const selector = options === null || options === void 0 ? void 0 : options.selector;
  return selector
    ? matches
      .map((item) => Array.from(item.querySelectorAll(selector)))
      .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], [])
      .filter((match) => !!match)
    : matches;
}
function querySingle(element, slotSelector, options) {
  let match = slotSelector === defaultSlotSelector
    ? getDirectChildren(element, defaultSlotSelector)[0] || null
    : element.querySelector(slotSelector);
  match = options && options.direct === false ? match : (match === null || match === void 0 ? void 0 : match.parentElement) === element ? match : null;
  match = (options === null || options === void 0 ? void 0 : options.matches) ? ((match === null || match === void 0 ? void 0 : match.matches(options.matches)) ? match : null) : match;
  const selector = options === null || options === void 0 ? void 0 : options.selector;
  return selector ? match === null || match === void 0 ? void 0 : match.querySelector(selector) : match;
}
function filterDirectChildren(el, selector) {
  return Array.from(el.children).filter((child) => child.matches(selector));
}
// set a default icon from a defined set or allow an override with an icon name string
function setRequestedIcon(iconObject, iconValue, matchedValue) {
  if (typeof iconValue === "string" && iconValue !== "") {
    return iconValue;
  }
  else if (iconValue === "") {
    return iconObject[matchedValue];
  }
}
function intersects(rect1, rect2) {
  return !(rect2.left > rect1.right ||
    rect2.right < rect1.left ||
    rect2.top > rect1.bottom ||
    rect2.bottom < rect1.top);
}

const accordionItemCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-accordion-item:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-accordion-item{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-accordion-item{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-accordion-item{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-accordion-item{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-accordion-item{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-accordion-item:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-accordion-item-h{display:none}/*!@.icon-position--end, .icon-position--start*/.icon-position--end.sc-calcite-accordion-item,.icon-position--start.sc-calcite-accordion-item{--calcite-accordion-item-icon-rotation:calc(90deg * -1);--calcite-accordion-item-active-icon-rotation:0deg;--calcite-accordion-item-icon-rotation-rtl:90deg;--calcite-accordion-item-active-icon-rotation-rtl:0deg}/*!@.icon-position--start*/.icon-position--start.sc-calcite-accordion-item{--calcite-accordion-item-flex-direction:row-reverse;--calcite-accordion-item-icon-spacing-start:0;--calcite-accordion-item-icon-spacing-end:var(--calcite-accordion-icon-margin)}/*!@.icon-position--end*/.icon-position--end.sc-calcite-accordion-item{--calcite-accordion-item-flex-direction:row;--calcite-accordion-item-icon-spacing-start:var(--calcite-accordion-icon-margin);--calcite-accordion-item-icon-spacing-end:0}/*!@.icon-position--end:not(.icon-type--plus-minus)*/.icon-position--end.sc-calcite-accordion-item:not(.icon-type--plus-minus){--calcite-accordion-item-icon-rotation:0deg;--calcite-accordion-item-active-icon-rotation:180deg;--calcite-accordion-item-icon-rotation-rtl:0deg;--calcite-accordion-item-active-icon-rotation-rtl:calc(180deg * -1)}/*!@:host*/.sc-calcite-accordion-item-h{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;color:var(--calcite-ui-text-3);-webkit-text-decoration-line:none;text-decoration-line:none;outline:2px solid transparent;outline-offset:2px;background-color:var(--calcite-accordion-item-background, var(--calcite-ui-foreground-1))}/*!@:host .accordion-item-header*/.sc-calcite-accordion-item-h .accordion-item-header.sc-calcite-accordion-item{outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@:host(:focus) .accordion-item-header*/.sc-calcite-accordion-item-h:focus .accordion-item-header.sc-calcite-accordion-item{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@:host([active])*/[active].sc-calcite-accordion-item-h{color:var(--calcite-ui-text-1)}/*!@:host([active]) .accordion-item-content*/[active].sc-calcite-accordion-item-h .accordion-item-content.sc-calcite-accordion-item{display:block;color:var(--calcite-ui-text-1)}/*!@:host([active]) .accordion-item-header*/[active].sc-calcite-accordion-item-h .accordion-item-header.sc-calcite-accordion-item{border-bottom-color:transparent}/*!@:host .accordion-item-header*/.sc-calcite-accordion-item-h .accordion-item-header.sc-calcite-accordion-item{display:-ms-flexbox;display:flex;cursor:pointer;-ms-flex-align:center;align-items:center;-ms-flex-direction:var(--calcite-accordion-item-flex-direction);flex-direction:var(--calcite-accordion-item-flex-direction)}/*!@:host .accordion-item-icon*/.sc-calcite-accordion-item-h .accordion-item-icon.sc-calcite-accordion-item{position:relative;margin:0px;display:-ms-inline-flexbox;display:inline-flex;color:var(--calcite-ui-text-3);-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-margin-end:var(--calcite-accordion-item-icon-spacing-start);margin-inline-end:var(--calcite-accordion-item-icon-spacing-start);-webkit-margin-start:var(--calcite-accordion-item-icon-spacing-end);margin-inline-start:var(--calcite-accordion-item-icon-spacing-end)}/*!@:host .accordion-item-content,\n:host .accordion-item-header*/.sc-calcite-accordion-item-h .accordion-item-content.sc-calcite-accordion-item,.sc-calcite-accordion-item-h .accordion-item-header.sc-calcite-accordion-item{padding:var(--calcite-accordion-item-padding);border-bottom:1px solid var(--calcite-accordion-item-border, var(--calcite-ui-border-2))}/*!@:host .accordion-item-header **/.sc-calcite-accordion-item-h .accordion-item-header.sc-calcite-accordion-item *.sc-calcite-accordion-item{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}/*!@:host .accordion-item-content*/.sc-calcite-accordion-item-h .accordion-item-content.sc-calcite-accordion-item{display:none;padding-top:0px;color:var(--calcite-ui-text-3);text-align:initial}/*!@:host .accordion-item-expand-icon*/.sc-calcite-accordion-item-h .accordion-item-expand-icon.sc-calcite-accordion-item{color:var(--calcite-ui-text-3);-webkit-margin-start:var(--calcite-accordion-item-icon-spacing-start);margin-inline-start:var(--calcite-accordion-item-icon-spacing-start);-webkit-margin-end:var(--calcite-accordion-item-icon-spacing-end);margin-inline-end:var(--calcite-accordion-item-icon-spacing-end);-webkit-transform:rotate(var(--calcite-accordion-item-icon-rotation));transform:rotate(var(--calcite-accordion-item-icon-rotation))}/*!@.calcite--rtl .accordion-item-expand-icon*/.calcite--rtl.sc-calcite-accordion-item .accordion-item-expand-icon.sc-calcite-accordion-item{-webkit-transform:rotate(var(--calcite-accordion-item-icon-rotation-rtl));transform:rotate(var(--calcite-accordion-item-icon-rotation-rtl))}/*!@:host([active]) .accordion-item-expand-icon*/[active].sc-calcite-accordion-item-h .accordion-item-expand-icon.sc-calcite-accordion-item{color:var(--calcite-ui-text-1);-webkit-transform:rotate(var(--calcite-accordion-item-active-icon-rotation));transform:rotate(var(--calcite-accordion-item-active-icon-rotation))}/*!@:host([active]) .calcite--rtl .accordion-item-expand-icon*/[active].sc-calcite-accordion-item-h .calcite--rtl.sc-calcite-accordion-item .accordion-item-expand-icon.sc-calcite-accordion-item{-webkit-transform:rotate(var(--calcite-accordion-item-active-icon-rotation-rtl));transform:rotate(var(--calcite-accordion-item-active-icon-rotation-rtl))}/*!@:host .accordion-item-header-text*/.sc-calcite-accordion-item-h .accordion-item-header-text.sc-calcite-accordion-item{margin-top:0px;margin-bottom:0px;-ms-flex-positive:1;flex-grow:1;-ms-flex-direction:column;flex-direction:column;padding-top:0px;padding-bottom:0px;text-align:initial;-webkit-margin-end:auto;margin-inline-end:auto}/*!@:host .accordion-item-title, :host .accordion-item-subtitle*/.sc-calcite-accordion-item-h .accordion-item-title.sc-calcite-accordion-item,.sc-calcite-accordion-item-h .accordion-item-subtitle.sc-calcite-accordion-item{display:-ms-flexbox;display:flex;width:100%}/*!@:host .accordion-item-title*/.sc-calcite-accordion-item-h .accordion-item-title.sc-calcite-accordion-item{font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-2)}/*!@:host .accordion-item-subtitle*/.sc-calcite-accordion-item-h .accordion-item-subtitle.sc-calcite-accordion-item{margin-top:0.25rem;color:var(--calcite-ui-text-3)}/*!@:host(:focus) .accordion-item-title, :host(:hover) .accordion-item-title*/.sc-calcite-accordion-item-h:focus .accordion-item-title.sc-calcite-accordion-item,.sc-calcite-accordion-item-h:hover .accordion-item-title.sc-calcite-accordion-item{color:var(--calcite-ui-text-1)}/*!@:host(:focus) .accordion-item-icon, :host(:hover) .accordion-item-icon*/.sc-calcite-accordion-item-h:focus .accordion-item-icon.sc-calcite-accordion-item,.sc-calcite-accordion-item-h:hover .accordion-item-icon.sc-calcite-accordion-item{color:var(--calcite-ui-text-1)}/*!@:host(:focus) .accordion-item-expand-icon, :host(:hover) .accordion-item-expand-icon*/.sc-calcite-accordion-item-h:focus .accordion-item-expand-icon.sc-calcite-accordion-item,.sc-calcite-accordion-item-h:hover .accordion-item-expand-icon.sc-calcite-accordion-item{color:var(--calcite-ui-text-1)}/*!@:host(:focus) .accordion-item-subtitle, :host(:hover) .accordion-item-subtitle*/.sc-calcite-accordion-item-h:focus .accordion-item-subtitle.sc-calcite-accordion-item,.sc-calcite-accordion-item-h:hover .accordion-item-subtitle.sc-calcite-accordion-item{color:var(--calcite-ui-text-2)}/*!@:host(:focus) .accordion-item-title, :host(:active) .accordion-item-title, :host([active]) .accordion-item-title*/.sc-calcite-accordion-item-h:focus .accordion-item-title.sc-calcite-accordion-item,.sc-calcite-accordion-item-h:active .accordion-item-title.sc-calcite-accordion-item,[active].sc-calcite-accordion-item-h .accordion-item-title.sc-calcite-accordion-item{color:var(--calcite-ui-text-1)}/*!@:host(:focus) .accordion-item-icon, :host(:active) .accordion-item-icon, :host([active]) .accordion-item-icon*/.sc-calcite-accordion-item-h:focus .accordion-item-icon.sc-calcite-accordion-item,.sc-calcite-accordion-item-h:active .accordion-item-icon.sc-calcite-accordion-item,[active].sc-calcite-accordion-item-h .accordion-item-icon.sc-calcite-accordion-item{color:var(--calcite-ui-text-1)}/*!@:host(:focus) .accordion-item-expand-icon, :host(:active) .accordion-item-expand-icon, :host([active]) .accordion-item-expand-icon*/.sc-calcite-accordion-item-h:focus .accordion-item-expand-icon.sc-calcite-accordion-item,.sc-calcite-accordion-item-h:active .accordion-item-expand-icon.sc-calcite-accordion-item,[active].sc-calcite-accordion-item-h .accordion-item-expand-icon.sc-calcite-accordion-item{color:var(--calcite-ui-text-1)}/*!@:host(:focus) .accordion-item-subtitle, :host(:active) .accordion-item-subtitle, :host([active]) .accordion-item-subtitle*/.sc-calcite-accordion-item-h:focus .accordion-item-subtitle.sc-calcite-accordion-item,.sc-calcite-accordion-item-h:active .accordion-item-subtitle.sc-calcite-accordion-item,[active].sc-calcite-accordion-item-h .accordion-item-subtitle.sc-calcite-accordion-item{color:var(--calcite-ui-text-2)}";

/**
 * @slot - A slot for adding custom content, including nested `calcite-accordion-item`s.
 */
class AccordionItem {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteAccordionItemKeyEvent = createEvent(this, "calciteAccordionItemKeyEvent", 7);
    this.calciteAccordionItemSelect = createEvent(this, "calciteAccordionItemSelect", 7);
    this.calciteAccordionItemClose = createEvent(this, "calciteAccordionItemClose", 7);
    this.calciteAccordionItemRegister = createEvent(this, "calciteAccordionItemRegister", 7);
    //--------------------------------------------------------------------------
    //
    //  Public Properties
    //
    //--------------------------------------------------------------------------
    /** Indicates whether the item is active. */
    this.active = false;
    //--------------------------------------------------------------------------
    //
    //  Private State/Props
    //
    //--------------------------------------------------------------------------
    this.guid = guid();
    /** what icon position does the parent accordion specify */
    this.iconPosition = "end";
    /** handle clicks on item header */
    this.itemHeaderClickHandler = () => this.emitRequestedItem();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    this.parent = this.el.parentElement;
    this.selectionMode = getElementProp(this.el, "selection-mode", "multi");
    this.iconType = getElementProp(this.el, "icon-type", "chevron");
    this.iconPosition = getElementProp(this.el, "icon-position", this.iconPosition);
  }
  componentDidLoad() {
    this.itemPosition = this.getItemPosition();
    this.calciteAccordionItemRegister.emit({
      parent: this.parent,
      position: this.itemPosition
    });
  }
  render() {
    const dir = getElementDir(this.el);
    const iconEl = hAsync("calcite-icon", { class: "accordion-item-icon", icon: this.icon, scale: "s" });
    const { guid } = this;
    const regionId = `${guid}-region`;
    const buttonId = `${guid}-button`;
    return (hAsync(Host, { tabindex: "0" }, hAsync("div", { class: {
        [`icon-position--${this.iconPosition}`]: true,
        [`icon-type--${this.iconType}`]: true
      } }, hAsync("div", { "aria-controls": regionId, class: { "accordion-item-header": true, [CSS_UTILITY.rtl]: dir === "rtl" }, id: buttonId, onClick: this.itemHeaderClickHandler, role: "button" }, this.icon ? iconEl : null, hAsync("div", { class: "accordion-item-header-text" }, hAsync("span", { class: "accordion-item-title" }, this.itemTitle), this.itemSubtitle ? (hAsync("span", { class: "accordion-item-subtitle" }, this.itemSubtitle)) : null), hAsync("calcite-icon", { class: "accordion-item-expand-icon", icon: this.iconType === "chevron"
        ? "chevronDown"
        : this.iconType === "caret"
          ? "caretDown"
          : this.active
            ? "minus"
            : "plus", scale: "s" })), hAsync("div", { "aria-expanded": this.active.toString(), "aria-labelledby": buttonId, class: "accordion-item-content", id: regionId, role: "region" }, hAsync("slot", null)))));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  keyDownHandler(e) {
    if (e.target === this.el) {
      switch (e.key) {
        case " ":
        case "Enter":
          this.emitRequestedItem();
          e.preventDefault();
          break;
        case "ArrowUp":
        case "ArrowDown":
        case "Home":
        case "End":
          this.calciteAccordionItemKeyEvent.emit({
            parent: this.parent,
            item: e
          });
          e.preventDefault();
          break;
      }
    }
  }
  updateActiveItemOnChange(event) {
    this.requestedAccordionItem = event.detail
      .requestedAccordionItem;
    if (this.el.parentNode !== this.requestedAccordionItem.parentNode) {
      return;
    }
    this.determineActiveItem();
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  determineActiveItem() {
    switch (this.selectionMode) {
      case "multi":
        if (this.el === this.requestedAccordionItem) {
          this.active = !this.active;
        }
        break;
      case "single":
        this.active = this.el === this.requestedAccordionItem ? !this.active : false;
        break;
      case "single-persist":
        this.active = this.el === this.requestedAccordionItem;
        break;
    }
  }
  emitRequestedItem() {
    this.calciteAccordionItemSelect.emit({
      requestedAccordionItem: this.el
    });
  }
  getItemPosition() {
    return Array.prototype.indexOf.call(this.parent.querySelectorAll("calcite-accordion-item"), this.el);
  }
  get el() { return getElement(this); }
  static get style() { return accordionItemCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-accordion-item",
    "$members$": {
      "active": [1540],
      "itemTitle": [1, "item-title"],
      "itemSubtitle": [1, "item-subtitle"],
      "icon": [513]
    },
    "$listeners$": [[0, "keydown", "keyDownHandler"], [16, "calciteAccordionChange", "updateActiveItemOnChange"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["active", "active"], ["icon", "icon"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$P = {
  button: "button",
  buttonTextVisible: "button--text-visible",
  buttonCompact: "button--compact",
  iconContainer: "icon-container",
  slotContainer: "slot-container",
  slotContainerHidden: "slot-container--hidden",
  textContainer: "text-container",
  textContainerVisible: "text-container--visible"
};
const TEXT$q = {
  loading: "Loading"
};

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
/**
 * This utility ensures observers are created only for browser contexts.
 *
 * @param type - the type of observer to create
 * @param callback - the observer callback
 * @param options - the observer options
 */
function createObserver(type, callback, options) {
  return undefined;
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
function noopClick() {
  /** noop **/
}
/**
 * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.
 *
 * This should be used in the `componentDidRender` lifecycle hook.
 *
 * **Notes**
 *
 * * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.
 * * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error
 */
function updateHostInteraction(component, hostIsTabbable = false) {
  if (component.disabled) {
    component.el.setAttribute("tabindex", "-1");
    component.el.setAttribute("aria-disabled", "true");
    if (component.el.contains(document.activeElement)) {
      document.activeElement.blur();
    }
    component.el.click = noopClick;
    return;
  }
  component.el.click = HTMLElement.prototype.click;
  if (typeof hostIsTabbable === "function") {
    component.el.setAttribute("tabindex", hostIsTabbable.call(component) ? "0" : "-1");
  }
  else if (hostIsTabbable === true) {
    component.el.setAttribute("tabindex", "0");
  }
  else if (hostIsTabbable === false) {
    component.el.removeAttribute("tabindex");
  }
  else ;
  component.el.removeAttribute("aria-disabled");
}

const actionCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-action:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-action{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-action{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-action{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-action{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-action{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:host*/.sc-calcite-action-h{-webkit-box-sizing:border-box;box-sizing:border-box;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-2);font-size:var(--calcite-font-size--1)}/*!@:host **/.sc-calcite-action-h *.sc-calcite-action{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@:root*/.sc-calcite-action:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-action-h{display:none}/*!@:host*/.sc-calcite-action-h{display:-ms-flexbox;display:flex;background-color:transparent}/*!@:host([disabled])*/[disabled].sc-calcite-action-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-action-h[disabled] .sc-calcite-action-s>[calcite-hydrated][disabled],[disabled].sc-calcite-action-h [calcite-hydrated][disabled].sc-calcite-action{opacity:1}/*!@.button*/.button.sc-calcite-action{position:relative;margin:0px;display:-ms-flexbox;display:flex;width:auto;cursor:pointer;-ms-flex-align:center;align-items:center;-ms-flex-pack:start;justify-content:flex-start;border-style:none;background-color:var(--calcite-ui-foreground-1);fill:var(--calcite-ui-text-3);font-family:var(--calcite-sans-family);font-size:var(--calcite-font-size--2);line-height:1rem;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-3);outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;text-align:unset;-ms-flex:1 0 auto;flex:1 0 auto}/*!@.button:hover*/.button.sc-calcite-action:hover{background-color:var(--calcite-ui-foreground-2);fill:var(--calcite-ui-text-1);color:var(--calcite-ui-text-1)}/*!@.button:focus*/.button.sc-calcite-action:focus{background-color:var(--calcite-ui-foreground-2);fill:var(--calcite-ui-text-1);color:var(--calcite-ui-text-1);outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@.button:active*/.button.sc-calcite-action:active{background-color:var(--calcite-ui-foreground-3)}/*!@.button .icon-container*/.button.sc-calcite-action .icon-container.sc-calcite-action{pointer-events:none;margin:0px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:1rem;min-height:1rem}/*!@.button .text-container*/.button.sc-calcite-action .text-container.sc-calcite-action{margin:0px;width:0px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;line-height:1rem;opacity:0;-webkit-transition-property:opacity;transition-property:opacity;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transition-property:margin;transition-property:margin;-webkit-transition-property:width;transition-property:width}/*!@.button .text-container--visible*/.button.sc-calcite-action .text-container--visible.sc-calcite-action{width:auto;-ms-flex:1 1 auto;flex:1 1 auto;opacity:1}/*!@:host([scale=s]) .button*/[scale=s].sc-calcite-action-h .button.sc-calcite-action{padding:0.5rem;font-size:var(--calcite-font-size--2);line-height:1rem;font-weight:var(--calcite-font-weight-normal)}/*!@:host([scale=s]) .button--text-visible .icon-container*/[scale=s].sc-calcite-action-h .button--text-visible.sc-calcite-action .icon-container.sc-calcite-action{-webkit-margin-end:0.5rem;margin-inline-end:0.5rem}/*!@:host([scale=m]) .button*/[scale=m].sc-calcite-action-h .button.sc-calcite-action{padding:1rem;font-size:var(--calcite-font-size--1);line-height:1rem;font-weight:var(--calcite-font-weight-normal)}/*!@:host([scale=m]) .button--text-visible .icon-container*/[scale=m].sc-calcite-action-h .button--text-visible.sc-calcite-action .icon-container.sc-calcite-action{-webkit-margin-end:0.75rem;margin-inline-end:0.75rem}/*!@:host([scale=l]) .button*/[scale=l].sc-calcite-action-h .button.sc-calcite-action{padding:1.25rem;font-size:var(--calcite-font-size-0);line-height:1.25rem;font-weight:var(--calcite-font-weight-normal)}/*!@:host([scale=l]) .button--text-visible .icon-container*/[scale=l].sc-calcite-action-h .button--text-visible.sc-calcite-action .icon-container.sc-calcite-action{-webkit-margin-end:1rem;margin-inline-end:1rem}/*!@:host([alignment=center]) .button*/[alignment=center].sc-calcite-action-h .button.sc-calcite-action{-ms-flex-pack:center;justify-content:center}/*!@:host([alignment=end]) .button*/[alignment=end].sc-calcite-action-h .button.sc-calcite-action{-ms-flex-pack:end;justify-content:flex-end}/*!@:host([alignment=center]) .button .text-container--visible, :host([alignment=end]) .button .text-container--visible*/[alignment=center].sc-calcite-action-h .button.sc-calcite-action .text-container--visible.sc-calcite-action,[alignment=end].sc-calcite-action-h .button.sc-calcite-action .text-container--visible.sc-calcite-action{-ms-flex:0 1 auto;flex:0 1 auto}/*!@:host([scale=s][compact]) .button, :host([scale=m][compact]) .button, :host([scale=l][compact]) .button*/[scale=s][compact].sc-calcite-action-h .button.sc-calcite-action,[scale=m][compact].sc-calcite-action-h .button.sc-calcite-action,[scale=l][compact].sc-calcite-action-h .button.sc-calcite-action{padding-left:0px;padding-right:0px}/*!@.slot-container*/.slot-container.sc-calcite-action{display:-ms-flexbox;display:flex}/*!@.slot-container--hidden*/.slot-container--hidden.sc-calcite-action{display:none}/*!@.button--text-visible*/.button--text-visible.sc-calcite-action{width:100%}/*!@:host([active]) .button, :host([active]) .button:hover, :host([active]) .button:focus, :host([active][loading]) .button*/[active].sc-calcite-action-h .button.sc-calcite-action,[active].sc-calcite-action-h .button.sc-calcite-action:hover,[active].sc-calcite-action-h .button.sc-calcite-action:focus,[active][loading].sc-calcite-action-h .button.sc-calcite-action{background-color:var(--calcite-ui-foreground-3);fill:var(--calcite-ui-text-1);color:var(--calcite-ui-text-1)}/*!@:host([active]) .button:active*/[active].sc-calcite-action-h .button.sc-calcite-action:active{background-color:var(--calcite-ui-foreground-1)}/*!@:host([appearance=clear]) .button*/[appearance=clear].sc-calcite-action-h .button.sc-calcite-action{background-color:transparent;-webkit-transition-property:-webkit-box-shadow;transition-property:-webkit-box-shadow;transition-property:box-shadow;transition-property:box-shadow, -webkit-box-shadow;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}/*!@:host([appearance=clear]) .button:hover, :host([appearance=clear]) .button:focus*/[appearance=clear].sc-calcite-action-h .button.sc-calcite-action:hover,[appearance=clear].sc-calcite-action-h .button.sc-calcite-action:focus{background-color:transparent;-webkit-box-shadow:0 0 0 2px var(--calcite-ui-border-1) inset;box-shadow:0 0 0 2px var(--calcite-ui-border-1) inset}/*!@:host([active][appearance=clear]) .button, :host([active][appearance=clear]) .button:hover, :host([active][appearance=clear]) .button:focus*/[active][appearance=clear].sc-calcite-action-h .button.sc-calcite-action,[active][appearance=clear].sc-calcite-action-h .button.sc-calcite-action:hover,[active][appearance=clear].sc-calcite-action-h .button.sc-calcite-action:focus{background-color:var(--calcite-ui-foreground-3);fill:var(--calcite-ui-text-1);color:var(--calcite-ui-text-1)}/*!@:host([appearance=clear][loading]) .button, :host([appearance=clear][disabled]) .button*/[appearance=clear][loading].sc-calcite-action-h .button.sc-calcite-action,[appearance=clear][disabled].sc-calcite-action-h .button.sc-calcite-action{background-color:transparent}/*!@:host([loading]) .button, :host([loading]) .button:hover, :host([loading]) .button:focus*/[loading].sc-calcite-action-h .button.sc-calcite-action,[loading].sc-calcite-action-h .button.sc-calcite-action:hover,[loading].sc-calcite-action-h .button.sc-calcite-action:focus{background-color:var(--calcite-ui-foreground-1)}/*!@:host([loading]) .button .text-container, :host([loading]) .button:hover .text-container, :host([loading]) .button:focus .text-container*/[loading].sc-calcite-action-h .button.sc-calcite-action .text-container.sc-calcite-action,[loading].sc-calcite-action-h .button.sc-calcite-action:hover .text-container.sc-calcite-action,[loading].sc-calcite-action-h .button.sc-calcite-action:focus .text-container.sc-calcite-action{opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([loading]) calcite-loader[inline]*/[loading].sc-calcite-action-h calcite-loader[inline].sc-calcite-action{margin-right:0px;color:var(--calcite-ui-text-3)}/*!@:host([disabled]) .button, :host([disabled]) .button:hover, :host([disabled]) .button:focus*/[disabled].sc-calcite-action-h .button.sc-calcite-action,[disabled].sc-calcite-action-h .button.sc-calcite-action:hover,[disabled].sc-calcite-action-h .button.sc-calcite-action:focus{cursor:default;background-color:var(--calcite-ui-foreground-1);opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled][active]) .button, :host([disabled][active]) .button:hover, :host([disabled][active]) .button:focus*/[disabled][active].sc-calcite-action-h .button.sc-calcite-action,[disabled][active].sc-calcite-action-h .button.sc-calcite-action:hover,[disabled][active].sc-calcite-action-h .button.sc-calcite-action:focus{background-color:var(--calcite-ui-foreground-3);opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([indicator]) .button::after*/[indicator].sc-calcite-action-h .button.sc-calcite-action::after{content:\"\";position:absolute;z-index:10;height:0.5rem;width:0.5rem;border-radius:9999px;border-width:2px;background-color:var(--calcite-ui-brand);border-color:var(--calcite-ui-foreground-1);inset-block-end:0.75rem;inset-inline-end:0.75rem}/*!@:host([indicator]) .button--text-visible::after*/[indicator].sc-calcite-action-h .button--text-visible.sc-calcite-action::after{inset-block-end:auto}/*!@:host([indicator]) .button--text-visible .text-container--visible*/[indicator].sc-calcite-action-h .button--text-visible.sc-calcite-action .text-container--visible.sc-calcite-action{-webkit-margin-end:1rem;margin-inline-end:1rem}/*!@:host([indicator]) .button:hover::after,\n:host([indicator]) .button:focus::after*/[indicator].sc-calcite-action-h .button.sc-calcite-action:hover::after,[indicator].sc-calcite-action-h .button.sc-calcite-action:focus::after{border-color:var(--calcite-ui-foreground-1)}/*!@:host([indicator][scale=s]) .button::after*/[indicator][scale=s].sc-calcite-action-h .button.sc-calcite-action::after{inset-block-end:0.25rem;inset-inline-end:0.25rem}/*!@:host([indicator][scale=s]) .button--text-visible::after*/[indicator][scale=s].sc-calcite-action-h .button--text-visible.sc-calcite-action::after{inset-block-end:auto;inset-inline-end:0.5rem}/*!@:host([indicator][active]) .button::after*/[indicator][active].sc-calcite-action-h .button.sc-calcite-action::after{border-color:var(--calcite-ui-foreground-3)}";

/**
 * @slot - A slot for adding a `calcite-icon`.
 */
class Action {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteActionClick = createEvent(this, "calciteActionClick", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * Indicates whether the action is highlighted.
     */
    this.active = false;
    /** Specify the appearance style of the action, defaults to solid. */
    this.appearance = "solid";
    /**
     * Compact mode is used internally by components to reduce side padding, e.g. calcite-block-section.
     */
    this.compact = false;
    /**
     * When true, disabled prevents interaction. This state shows items with lower opacity/grayed.
     */
    this.disabled = false;
    /**
     * Indicates unread changes.
     */
    this.indicator = false;
    /** string to override English loading text
     * @default "Loading"
     */
    this.intlLoading = TEXT$q.loading;
    /**
     * When true, content is waiting to be loaded. This state shows a busy indicator.
     */
    this.loading = false;
    /**
     * Specifies the size of the action.
     */
    this.scale = "m";
    /**
     * Indicates whether the text is displayed.
     */
    this.textEnabled = false;
    this.mutationObserver = createObserver();
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.calciteActionClickHandler = () => {
      if (!this.disabled) {
        this.calciteActionClick.emit();
      }
    };
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el, { childList: true, subtree: true });
  }
  disconnectedCallback() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Methods
  //
  // --------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    this.buttonEl.focus();
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderTextContainer() {
    const { text, textEnabled } = this;
    const textContainerClasses = {
      [CSS$P.textContainer]: true,
      [CSS$P.textContainerVisible]: textEnabled
    };
    return text ? (hAsync("div", { class: textContainerClasses, key: "text-container" }, text)) : null;
  }
  renderIconContainer() {
    var _a;
    const { loading, icon, scale, el, intlLoading } = this;
    const iconScale = scale === "l" ? "m" : "s";
    const loaderScale = scale === "l" ? "l" : "m";
    const calciteLoaderNode = loading ? (hAsync("calcite-loader", { active: true, inline: true, label: intlLoading, scale: loaderScale })) : null;
    const calciteIconNode = icon ? hAsync("calcite-icon", { icon: icon, scale: iconScale }) : null;
    const iconNode = calciteLoaderNode || calciteIconNode;
    const hasIconToDisplay = iconNode || ((_a = el.children) === null || _a === void 0 ? void 0 : _a.length);
    const slotContainerNode = (hAsync("div", { class: {
        [CSS$P.slotContainer]: true,
        [CSS$P.slotContainerHidden]: loading
      } }, hAsync("slot", null)));
    return hasIconToDisplay ? (hAsync("div", { "aria-hidden": "true", class: CSS$P.iconContainer, key: "icon-container" }, iconNode, slotContainerNode)) : null;
  }
  render() {
    const { compact, disabled, loading, textEnabled, label, text } = this;
    const ariaLabel = label || text;
    const buttonClasses = {
      [CSS$P.button]: true,
      [CSS$P.buttonTextVisible]: textEnabled,
      [CSS$P.buttonCompact]: compact
    };
    return (hAsync(Host, { onClick: this.calciteActionClickHandler }, hAsync("button", { "aria-busy": loading.toString(), "aria-disabled": disabled.toString(), "aria-label": ariaLabel, class: buttonClasses, disabled: disabled, ref: (buttonEl) => (this.buttonEl = buttonEl) }, this.renderIconContainer(), this.renderTextContainer())));
  }
  get el() { return getElement(this); }
  static get style() { return actionCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-action",
    "$members$": {
      "active": [516],
      "alignment": [513],
      "appearance": [513],
      "compact": [516],
      "disabled": [516],
      "icon": [1],
      "indicator": [516],
      "intlLoading": [1, "intl-loading"],
      "label": [1],
      "loading": [516],
      "scale": [513],
      "text": [1],
      "textEnabled": [516, "text-enabled"],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["active", "active"], ["alignment", "alignment"], ["appearance", "appearance"], ["compact", "compact"], ["disabled", "disabled"], ["indicator", "indicator"], ["loading", "loading"], ["scale", "scale"], ["textEnabled", "text-enabled"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$O = {
  menu: "menu",
  defaultTrigger: "default-trigger"
};
const SLOTS$p = {
  tooltip: "tooltip",
  trigger: "trigger"
};
const ICONS$f = {
  menu: "ellipsis"
};

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const SLOTS$o = {
  menuActions: "menu-actions",
  menuTooltip: "menu-tooltip"
};
const TEXT$p = {
  more: "More"
};
const ICONS$e = {
  menu: "ellipsis"
};

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const overflowActionsDebounceInMs = 150;
const groupBufferHeight = 2;
const getMaxActionCount = ({ height, actionHeight, groupCount }) => {
  return Math.floor((height - groupCount * groupBufferHeight) / actionHeight);
};
const getOverflowCount = ({ actionCount, actionHeight, height, groupCount }) => {
  return Math.max(actionCount - getMaxActionCount({ height, actionHeight, groupCount }), 0);
};
const queryActions = (el) => {
  return Array.from(el.querySelectorAll("calcite-action")).filter((action) => action.closest("calcite-action-menu") ? action.slot === SLOTS$p.trigger : true);
};
const overflowActions = ({ actionGroups, expanded, overflowCount }) => {
  let needToSlotCount = overflowCount;
  actionGroups.reverse().forEach((group) => {
    let slottedWithinGroupCount = 0;
    const groupActions = queryActions(group).reverse();
    groupActions.forEach((groupAction) => {
      if (groupAction.slot === SLOTS$o.menuActions) {
        groupAction.removeAttribute("slot");
        groupAction.textEnabled = expanded;
      }
    });
    if (needToSlotCount > 0) {
      groupActions.some((groupAction) => {
        const unslottedActions = groupActions.filter((action) => !action.slot);
        if (unslottedActions.length > 1 && groupActions.length > 2 && !groupAction.closest("calcite-action-menu")) {
          groupAction.textEnabled = true;
          groupAction.setAttribute("slot", SLOTS$o.menuActions);
          slottedWithinGroupCount++;
          if (slottedWithinGroupCount > 1) {
            needToSlotCount--;
          }
        }
        return needToSlotCount < 1;
      });
    }
    forceUpdate$1(group);
  });
};

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const ICONS$d = {
  chevronsLeft: "chevrons-left",
  chevronsRight: "chevrons-right"
};
function getCalcitePosition(position, el) {
  var _a;
  return position || ((_a = el.closest("calcite-shell-panel")) === null || _a === void 0 ? void 0 : _a.position) || "start";
}
function toggleChildActionText({ parent, expanded }) {
  queryActions(parent)
    .filter((el) => el.slot !== SLOTS$o.menuActions)
    .forEach((action) => (action.textEnabled = expanded));
  parent.querySelectorAll("calcite-action-group").forEach((group) => (group.expanded = expanded));
}
const setTooltipReference = ({ tooltip, referenceElement, expanded, ref }) => {
  if (tooltip) {
    tooltip.referenceElement = !expanded && referenceElement ? referenceElement : null;
  }
  if (ref) {
    ref(referenceElement);
  }
  return referenceElement;
};
const ExpandToggle = ({ expanded, intlExpand, intlCollapse, toggle, el, position, tooltip, ref, scale }) => {
  const rtl = getElementDir(el) === "rtl";
  const expandText = expanded ? intlCollapse : intlExpand;
  const icons = [ICONS$d.chevronsLeft, ICONS$d.chevronsRight];
  if (rtl) {
    icons.reverse();
  }
  const end = getCalcitePosition(position, el) === "end";
  const expandIcon = end ? icons[1] : icons[0];
  const collapseIcon = end ? icons[0] : icons[1];
  const actionNode = (hAsync("calcite-action", { icon: expanded ? expandIcon : collapseIcon, onClick: toggle, ref: (referenceElement) => setTooltipReference({ tooltip, referenceElement, expanded, ref }), scale: scale, text: expandText, textEnabled: expanded }));
  return tooltip ? hAsync("calcite-tooltip-manager", null, actionNode) : actionNode;
};

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$N = {
  actionGroupBottom: "action-group--bottom"
};
const SLOTS$n = {
  bottomActions: "bottom-actions",
  expandTooltip: "expand-tooltip"
};
const TEXT$o = {
  expand: "Expand",
  collapse: "Collapse"
};

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Built-in value references. */
var Symbol$1 = root.Symbol;

/** Used for built-in method references. */
var objectProto$5 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$3 = objectProto$5.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString$1 = objectProto$5.toString;

/** Built-in value references. */
var symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty$3.call(value, symToStringTag$1),
      tag = value[symToStringTag$1];

  try {
    value[symToStringTag$1] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString$1.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag$1] = tag;
    } else {
      delete value[symToStringTag$1];
    }
  }
  return result;
}

/** Used for built-in method references. */
var objectProto$4 = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto$4.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol$1 ? Symbol$1.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/** Used to match a single whitespace character. */
var reWhitespace = /\s/;

/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
 * character of `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the index of the last non-whitespace character.
 */
function trimmedEndIndex(string) {
  var index = string.length;

  while (index-- && reWhitespace.test(string.charAt(index))) {}
  return index;
}

/** Used to match leading whitespace. */
var reTrimStart = /^\s+/;

/**
 * The base implementation of `_.trim`.
 *
 * @private
 * @param {string} string The string to trim.
 * @returns {string} Returns the trimmed string.
 */
function baseTrim(string) {
  return string
    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
    : string;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = baseTrim(value);
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag$1 = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag$1 || tag == genTag || tag == asyncTag || tag == proxyTag;
}

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER$1 = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER$1 : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

/** Used for built-in method references. */
var objectProto$3 = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$3;

  return value === proto;
}

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/** `Object#toString` result references. */
var argsTag$1 = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag$1;
}

/** Used for built-in method references. */
var objectProto$2 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$2 = objectProto$2.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto$2.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

/** Detect free variable `exports`. */
var freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;

/** Built-in value references. */
var Buffer$1 = moduleExports$1 ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer$1 ? Buffer$1.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

/** Used for built-in method references. */
var objectProto$1 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$1 = objectProto$1.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty$1.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

/** Error message constants. */
var FUNC_ERROR_TEXT$1 = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce$2(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT$1);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/**
 * Casts `value` to `identity` if it's not a function.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Function} Returns cast function.
 */
function castFunction(value) {
  return typeof value == 'function' ? value : identity;
}

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
    reHasRegExpChar = RegExp(reRegExpChar.source);

/**
 * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
 * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to escape.
 * @returns {string} Returns the escaped string.
 * @example
 *
 * _.escapeRegExp('[lodash](https://lodash.com/)');
 * // => '\[lodash\]\(https://lodash\.com/\)'
 */
function escapeRegExp(string) {
  string = toString(string);
  return (string && reHasRegExpChar.test(string))
    ? string.replace(reRegExpChar, '\\$&')
    : string;
}

/**
 * Iterates over own and inherited enumerable string keyed properties of an
 * object and invokes `iteratee` for each property. The iteratee is invoked
 * with three arguments: (value, key, object). Iteratee functions may exit
 * iteration early by explicitly returning `false`.
 *
 * @static
 * @memberOf _
 * @since 0.3.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns `object`.
 * @see _.forInRight
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.forIn(new Foo, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
 */
function forIn(object, iteratee) {
  return object == null
    ? object
    : baseFor(object, castFunction(iteratee), keysIn);
}

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle$1(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return debounce$2(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const observed = new Set();
let mutationObserver;
const observerOptions = { childList: true };
/**
 * Helper to set up a conditional slot component on connectedCallback.
 */
function connectConditionalSlotComponent(component) {
  if (!mutationObserver) {
    mutationObserver = createObserver();
  }
  mutationObserver.observe(component.el, observerOptions);
}
/**
 * Helper to tear down a conditional slot component on disconnectedCallback.
 */
function disconnectConditionalSlotComponent(component) {
  observed.delete(component.el);
  // we explicitly process queued mutations and disconnect and reconnect
  // the observer until MutationObserver gets an `unobserve` method
  // see https://github.com/whatwg/dom/issues/126
  processMutations(mutationObserver.takeRecords());
  mutationObserver.disconnect();
  for (const [element] of observed.entries()) {
    mutationObserver.observe(element, observerOptions);
  }
}
function processMutations(mutations) {
  mutations.forEach(({ target }) => {
    forceUpdate$1(target);
  });
}

const actionBarCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-action-bar:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-action-bar{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-action-bar{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-action-bar{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-action-bar{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-action-bar{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:host*/.sc-calcite-action-bar-h{-webkit-box-sizing:border-box;box-sizing:border-box;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-2);font-size:var(--calcite-font-size--1)}/*!@:host **/.sc-calcite-action-bar-h *.sc-calcite-action-bar{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@:root*/.sc-calcite-action-bar:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-action-bar-h{display:none}/*!@:host*/.sc-calcite-action-bar-h{pointer-events:auto;display:-ms-inline-flexbox;display:inline-flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-item-align:stretch;align-self:stretch;max-width:15vw}/*!@:host([overflow-actions-disabled])*/[overflow-actions-disabled].sc-calcite-action-bar-h{overflow-y:auto}/*!@:host([expanded])*/[expanded].sc-calcite-action-bar-h{max-width:20vw}/*!@::slotted(calcite-action-group)*/.sc-calcite-action-bar-s>calcite-action-group{border-width:0px;border-bottom-width:1px;border-style:solid;border-color:var(--calcite-ui-border-3)}/*!@::slotted(calcite-action-group:last-child)*/.sc-calcite-action-bar-s>calcite-action-group:last-child{border-bottom-width:0px}/*!@.action-group--bottom*/.action-group--bottom.sc-calcite-action-bar{-ms-flex-positive:1;flex-grow:1;-ms-flex-pack:end;justify-content:flex-end;padding-bottom:0px}";

/**
 * @slot - A slot for adding `calcite-action`s that will appear at the top of the action bar.
 * @slot bottom-actions - A slot for adding `calcite-action`s that will appear at the bottom of the action bar, above the collapse/expand button.
 * @slot expand-tooltip - Used to set the tooltip for the expand toggle.
 */
class ActionBar {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteActionBarToggle = createEvent(this, "calciteActionBarToggle", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * When set to true, the expand-toggling behavior will be disabled.
     */
    this.expandDisabled = false;
    /**
     * Indicates whether widget is expanded.
     */
    this.expanded = false;
    /**
     * Disables automatically overflowing actions that won't fit into menus.
     */
    this.overflowActionsDisabled = false;
    this.mutationObserver = createObserver();
    this.resizeObserver = createObserver();
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.actionMenuOpenChangeHandler = (event) => {
      if (event.detail) {
        const composedPath = event.composedPath();
        Array.from(this.el.querySelectorAll("calcite-action-group")).forEach((group) => {
          if (!composedPath.includes(group)) {
            group.menuOpen = false;
          }
        });
      }
    };
    this.resizeHandlerEntries = (entries) => {
      entries.forEach(this.resizeHandler);
    };
    this.resizeHandler = (entry) => {
      const { height } = entry.contentRect;
      this.resize(height);
    };
    this.resize = debounce$2((height) => {
      var _a;
      const { el, expanded, expandDisabled } = this;
      if (!height) {
        return;
      }
      const actions = queryActions(el);
      const actionCount = expandDisabled ? actions.length : actions.length + 1;
      const actionGroups = Array.from(el.querySelectorAll("calcite-action-group"));
      const groupCount = getSlotted(el, SLOTS$n.bottomActions) || !expandDisabled
        ? actionGroups.length + 1
        : actionGroups.length;
      const overflowCount = getOverflowCount({
        actionCount,
        actionHeight: (_a = actions[0]) === null || _a === void 0 ? void 0 : _a.clientHeight,
        height,
        groupCount
      });
      overflowActions({
        actionGroups,
        expanded,
        overflowCount
      });
    }, overflowActionsDebounceInMs);
    this.conditionallyOverflowActions = () => {
      if (!this.overflowActionsDisabled) {
        this.overflowActions();
      }
    };
    this.toggleExpand = () => {
      this.expanded = !this.expanded;
    };
    this.setExpandToggleRef = (el) => {
      this.expandToggleEl = el;
    };
  }
  expandHandler() {
    this.conditionallyOverflowActions();
  }
  expandedHandler(expanded) {
    toggleChildActionText({ parent: this.el, expanded });
    this.calciteActionBarToggle.emit();
  }
  overflowDisabledHandler(overflowActionsDisabled) {
    overflowActionsDisabled
      ? this.resizeObserver.disconnect()
      : this.resizeObserver.observe(this.el);
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  componentDidLoad() {
    this.conditionallyOverflowActions();
  }
  connectedCallback() {
    var _a, _b;
    const { el, expanded } = this;
    toggleChildActionText({ parent: el, expanded });
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(el, { childList: true, subtree: true });
    if (!this.overflowActionsDisabled) {
      (_b = this.resizeObserver) === null || _b === void 0 ? void 0 : _b.observe(el);
    }
    this.conditionallyOverflowActions();
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    var _a, _b;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    (_b = this.resizeObserver) === null || _b === void 0 ? void 0 : _b.disconnect();
    disconnectConditionalSlotComponent(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Methods
  //
  // --------------------------------------------------------------------------
  /**
   * Overflows actions that won't fit into menus.
   * @internal
   */
  async overflowActions() {
    this.resize(this.el.clientHeight);
  }
  /** Sets focus on the component. */
  async setFocus(focusId) {
    if (focusId === "expand-toggle") {
      await focusElement(this.expandToggleEl);
      return;
    }
    this.el.focus();
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderBottomActionGroup() {
    const { expanded, expandDisabled, intlExpand, intlCollapse, el, position, toggleExpand, scale } = this;
    const tooltip = getSlotted(el, SLOTS$n.expandTooltip);
    const expandLabel = intlExpand || TEXT$o.expand;
    const collapseLabel = intlCollapse || TEXT$o.collapse;
    const expandToggleNode = !expandDisabled ? (hAsync(ExpandToggle, { el: el, expanded: expanded, intlCollapse: collapseLabel, intlExpand: expandLabel, position: position, ref: this.setExpandToggleRef, scale: scale, toggle: toggleExpand, tooltip: tooltip })) : null;
    return getSlotted(el, SLOTS$n.bottomActions) || expandToggleNode ? (hAsync("calcite-action-group", { class: CSS$N.actionGroupBottom, scale: scale }, hAsync("slot", { name: SLOTS$n.bottomActions }), hAsync("slot", { name: SLOTS$n.expandTooltip }), expandToggleNode)) : null;
  }
  render() {
    return (hAsync(Host, { onCalciteActionMenuOpenChange: this.actionMenuOpenChangeHandler }, hAsync("slot", null), this.renderBottomActionGroup()));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "expandDisabled": ["expandHandler"],
    "expanded": ["expandedHandler"],
    "overflowActionsDisabled": ["overflowDisabledHandler"]
  }; }
  static get style() { return actionBarCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-action-bar",
    "$members$": {
      "expandDisabled": [516, "expand-disabled"],
      "expanded": [1540],
      "intlExpand": [1, "intl-expand"],
      "intlCollapse": [1, "intl-collapse"],
      "overflowActionsDisabled": [4, "overflow-actions-disabled"],
      "position": [513],
      "scale": [513],
      "overflowActions": [64],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["expandDisabled", "expand-disabled"], ["expanded", "expanded"], ["position", "position"], ["scale", "scale"]]
  }; }
}

const actionGroupCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-action-group:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-action-group{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-action-group{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-action-group{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-action-group{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-action-group{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:host*/.sc-calcite-action-group-h{-webkit-box-sizing:border-box;box-sizing:border-box;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-2);font-size:var(--calcite-font-size--1)}/*!@:host **/.sc-calcite-action-group-h *.sc-calcite-action-group{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@:root*/.sc-calcite-action-group:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-action-group-h{display:none}/*!@:host*/.sc-calcite-action-group-h{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding:0px;--calcite-action-group-columns:3}/*!@:host([columns=\"1\"])*/[columns=\"1\"].sc-calcite-action-group-h{--calcite-action-group-columns:1}/*!@:host([columns=\"2\"])*/[columns=\"2\"].sc-calcite-action-group-h{--calcite-action-group-columns:2}/*!@:host([columns=\"3\"])*/[columns=\"3\"].sc-calcite-action-group-h{--calcite-action-group-columns:3}/*!@:host([columns=\"4\"])*/[columns=\"4\"].sc-calcite-action-group-h{--calcite-action-group-columns:4}/*!@:host([columns=\"5\"])*/[columns=\"5\"].sc-calcite-action-group-h{--calcite-action-group-columns:5}/*!@:host([columns=\"6\"])*/[columns=\"6\"].sc-calcite-action-group-h{--calcite-action-group-columns:6}/*!@:host(:first-child)*/.sc-calcite-action-group-h:first-child{padding-top:0px}/*!@:host([layout=horizontal])*/[layout=horizontal].sc-calcite-action-group-h{-ms-flex-direction:row;flex-direction:row}/*!@:host([layout=grid])*/[layout=grid].sc-calcite-action-group-h{display:grid;place-content:stretch;gap:1px;background-color:var(--calcite-ui-background);padding:1px;grid-template-columns:repeat(var(--calcite-action-group-columns), auto)}";

/**
 * @slot - A slot for adding a group of `calcite-action`s.
 * @slot menu-actions - a slot for adding an overflow menu with actions inside a dropdown.
 * @slot menu-tooltip - a slot for adding an tooltip for the menu.
 */
class ActionGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * Indicates whether widget is expanded.
     */
    this.expanded = false;
    /**
     * Indicates the horizontal, vertical, or grid layout of the component.
     */
    this.layout = "vertical";
    /**
     * Opens the action menu.
     */
    this.menuOpen = false;
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.setMenuOpen = (event) => {
      this.menuOpen = !!event.detail;
    };
  }
  expandedHandler() {
    this.menuOpen = false;
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Component Methods
  //
  // --------------------------------------------------------------------------
  renderTooltip() {
    const { el } = this;
    const hasTooltip = getSlotted(el, SLOTS$o.menuTooltip);
    return hasTooltip ? hAsync("slot", { name: SLOTS$o.menuTooltip, slot: SLOTS$p.tooltip }) : null;
  }
  renderMenu() {
    const { el, expanded, intlMore, menuOpen, scale } = this;
    const hasMenuItems = getSlotted(el, SLOTS$o.menuActions);
    return hasMenuItems ? (hAsync("calcite-action-menu", { expanded: expanded, flipPlacements: ["left", "right"], label: intlMore || TEXT$p.more, onCalciteActionMenuOpenChange: this.setMenuOpen, open: menuOpen, placement: "leading-start", scale: scale }, hAsync("calcite-action", { icon: ICONS$e.menu, scale: scale, slot: SLOTS$p.trigger, text: intlMore || TEXT$p.more, textEnabled: expanded }), hAsync("slot", { name: SLOTS$o.menuActions }), this.renderTooltip())) : null;
  }
  render() {
    return (hAsync(Fragment, null, hAsync("slot", null), this.renderMenu()));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "expanded": ["expandedHandler"]
  }; }
  static get style() { return actionGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-action-group",
    "$members$": {
      "expanded": [516],
      "layout": [513],
      "columns": [514],
      "intlMore": [1, "intl-more"],
      "menuOpen": [1540, "menu-open"],
      "scale": [513]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["expanded", "expanded"], ["layout", "layout"], ["columns", "columns"], ["menuOpen", "menu-open"], ["scale", "scale"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
function getRoundRobinIndex(index, total) {
  return (index + total) % total;
}

const actionMenuCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-action-menu:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-action-menu{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-action-menu{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-action-menu{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-action-menu{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-action-menu{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-action-menu:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-action-menu-h{display:none}/*!@:host*/.sc-calcite-action-menu-h{-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;background-color:var(--calcite-ui-foreground-1);font-size:var(--calcite-font-size-1);color:var(--calcite-ui-text-2)}/*!@.menu ::slotted(calcite-action)*/.menu .sc-calcite-action-menu-s>calcite-action{margin:0.125rem;display:-ms-flexbox;display:flex;outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@::slotted(calcite-action[active])*/.sc-calcite-action-menu-s>calcite-action[active]{outline:2px solid var(--calcite-ui-brand);outline-offset:0px}/*!@.default-trigger*/.default-trigger.sc-calcite-action-menu{position:relative;height:100%;-ms-flex:0 1 auto;flex:0 1 auto;-ms-flex-item-align:stretch;align-self:stretch}/*!@slot[name=trigger]::slotted(calcite-action), calcite-action::slotted([slot=trigger])*/slot[name=trigger].sc-calcite-action-menu-s>calcite-action,calcite-action.sc-calcite-action-menu-s>[slot=trigger]{position:relative;height:100%;-ms-flex:0 1 auto;flex:0 1 auto;-ms-flex-item-align:stretch;align-self:stretch}/*!@.menu*/.menu.sc-calcite-action-menu{-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap;outline:2px solid transparent;outline-offset:2px}";

const SUPPORTED_BUTTON_NAV_KEYS = ["ArrowUp", "ArrowDown"];
const SUPPORTED_MENU_NAV_KEYS = ["ArrowUp", "ArrowDown", "End", "Home"];
/**
 * @slot - A slot for adding `calcite-action`s.
 * @slot trigger - A slot for adding a `calcite-action` to trigger opening the menu.
 * @slot tooltip - A slot for adding an tooltip for the menu.
 */
class ActionMenu {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteActionMenuOpenChange = createEvent(this, "calciteActionMenuOpenChange", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * Indicates whether widget is expanded.
     */
    this.expanded = false;
    /**
     * Opens the action menu.
     */
    this.open = false;
    /** Describes the type of positioning to use for the overlaid content. If your element is in a fixed container, use the 'fixed' value. */
    this.overlayPositioning = "absolute";
    /**
     * Determines where the component will be positioned relative to the referenceElement.
     * @see [PopperPlacement](https://github.com/Esri/calcite-components/blob/master/src/utils/popper.ts#L25)
     */
    this.placement = "auto";
    this.actionElements = [];
    this.mutationObserver = createObserver();
    this.guid = `calcite-action-menu-${guid()}`;
    this.menuId = `${this.guid}-menu`;
    this.menuButtonId = `${this.guid}-menu-button`;
    this.activeMenuItemIndex = -1;
    // --------------------------------------------------------------------------
    //
    //  Component Methods
    //
    // --------------------------------------------------------------------------
    this.connectMenuButtonEl = () => {
      const { el, menuButtonId, menuId, open, label } = this;
      const menuButtonEl = getSlotted(el, SLOTS$p.trigger) || this.defaultMenuButtonEl;
      if (this.menuButtonEl === menuButtonEl) {
        return;
      }
      this.disconnectMenuButtonEl();
      this.menuButtonEl = menuButtonEl;
      this.setTooltipReferenceElement();
      if (!menuButtonEl) {
        return;
      }
      menuButtonEl.active = open;
      menuButtonEl.setAttribute("aria-controls", menuId);
      menuButtonEl.setAttribute("aria-expanded", open.toString());
      menuButtonEl.setAttribute("aria-haspopup", "true");
      if (!menuButtonEl.id) {
        menuButtonEl.id = menuButtonId;
      }
      if (!menuButtonEl.label) {
        menuButtonEl.label = label;
      }
      if (!menuButtonEl.text) {
        menuButtonEl.text = label;
      }
      menuButtonEl.addEventListener("click", this.menuButtonClick);
      menuButtonEl.addEventListener("keydown", this.menuButtonKeyDown);
      menuButtonEl.addEventListener("keyup", this.menuButtonKeyUp);
    };
    this.disconnectMenuButtonEl = () => {
      const { menuButtonEl } = this;
      if (!menuButtonEl) {
        return;
      }
      menuButtonEl.removeEventListener("click", this.menuButtonClick);
      menuButtonEl.removeEventListener("keydown", this.menuButtonKeyDown);
      menuButtonEl.removeEventListener("keyup", this.menuButtonKeyUp);
    };
    this.setDefaultMenuButtonEl = (el) => {
      this.defaultMenuButtonEl = el;
      this.connectMenuButtonEl();
    };
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.handleCalciteActionClick = () => {
      this.open = false;
      this.setFocus();
    };
    this.menuButtonClick = () => {
      this.toggleOpen();
    };
    this.setTooltipReferenceElement = () => {
      const { el, expanded, menuButtonEl } = this;
      const slotted = getSlotted(el, SLOTS$p.tooltip);
      const tooltip = (slotted === null || slotted === void 0 ? void 0 : slotted.tagName) === "SLOT" ? slotted.assignedElements()[0] : slotted;
      if ((tooltip === null || tooltip === void 0 ? void 0 : tooltip.tagName) === "CALCITE-TOOLTIP") {
        tooltip.referenceElement = !expanded ? menuButtonEl : null;
      }
    };
    this.updateAction = (action, index) => {
      const { guid, activeMenuItemIndex } = this;
      const id = `${guid}-action-${index}`;
      action.tabIndex = -1;
      action.setAttribute("role", "menuitem");
      if (!action.id) {
        action.id = id;
      }
      action.active = index === activeMenuItemIndex;
    };
    this.updateActions = (actions) => {
      actions === null || actions === void 0 ? void 0 : actions.forEach(this.updateAction);
    };
    this.getActions = () => {
      const { el } = this;
      const actionElements = getSlotted(el, { all: true, matches: "calcite-action" });
      this.updateActions(actionElements);
      this.actionElements = actionElements;
      this.connectMenuButtonEl();
    };
    this.menuButtonKeyUp = (event) => {
      const { key } = event;
      const { actionElements } = this;
      if (!this.isValidKey(key, SUPPORTED_BUTTON_NAV_KEYS)) {
        return;
      }
      event.preventDefault();
      if (!actionElements.length) {
        return;
      }
      this.toggleOpen(true);
      this.handleActionNavigation(key, actionElements);
    };
    this.menuButtonKeyDown = (event) => {
      const { key } = event;
      if (!this.isValidKey(key, SUPPORTED_BUTTON_NAV_KEYS)) {
        return;
      }
      event.preventDefault();
    };
    this.menuActionsContainerKeyDown = (event) => {
      const { key } = event;
      const { actionElements, activeMenuItemIndex } = this;
      if (key === "Tab") {
        this.open = false;
        return;
      }
      if (key === " " || key === "Enter") {
        event.preventDefault();
        const action = actionElements[activeMenuItemIndex];
        action ? action.click() : this.toggleOpen(false);
        return;
      }
      if (this.isValidKey(key, SUPPORTED_MENU_NAV_KEYS)) {
        event.preventDefault();
      }
    };
    this.menuActionsContainerKeyUp = (event) => {
      const { key } = event;
      const { actionElements } = this;
      if (key === "Escape") {
        this.toggleOpen(false);
        return;
      }
      if (!this.isValidKey(key, SUPPORTED_MENU_NAV_KEYS)) {
        return;
      }
      event.preventDefault();
      if (!actionElements.length) {
        return;
      }
      this.handleActionNavigation(key, actionElements);
    };
    this.handleActionNavigation = (key, actions) => {
      const currentIndex = this.activeMenuItemIndex;
      if (key === "Home") {
        this.activeMenuItemIndex = 0;
      }
      if (key === "End") {
        this.activeMenuItemIndex = actions.length - 1;
      }
      if (key === "ArrowUp") {
        this.activeMenuItemIndex = getRoundRobinIndex(Math.max(currentIndex - 1, -1), actions.length);
      }
      if (key === "ArrowDown") {
        this.activeMenuItemIndex = getRoundRobinIndex(currentIndex + 1, actions.length);
      }
    };
    this.toggleOpenEnd = () => {
      this.setFocus();
      this.el.removeEventListener("calcitePopoverOpen", this.toggleOpenEnd);
    };
    this.toggleOpen = (value = !this.open) => {
      this.el.addEventListener("calcitePopoverOpen", this.toggleOpenEnd);
      this.open = value;
    };
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el, { childList: true, subtree: true });
    this.getActions();
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    this.disconnectMenuButtonEl();
    disconnectConditionalSlotComponent(this);
  }
  expandedHandler() {
    this.open = false;
    this.setTooltipReferenceElement();
  }
  openHandler(open) {
    this.activeMenuItemIndex = this.open ? 0 : -1;
    if (this.menuButtonEl) {
      this.menuButtonEl.active = open;
    }
    this.calciteActionMenuOpenChange.emit(open);
  }
  closeCalciteActionMenuOnClick(event) {
    const composedPath = event.composedPath();
    if (composedPath.includes(this.el)) {
      return;
    }
    this.open = false;
  }
  activeMenuItemIndexHandler() {
    this.updateActions(this.actionElements);
  }
  // --------------------------------------------------------------------------
  //
  //  Methods
  //
  // --------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    focusElement(this.open ? this.menuEl : this.menuButtonEl);
  }
  renderMenuButton() {
    const { el, label, scale } = this;
    const menuButtonSlot = (hAsync("slot", { name: SLOTS$p.trigger }, hAsync("calcite-action", { class: CSS$O.defaultTrigger, icon: ICONS$f.menu, ref: this.setDefaultMenuButtonEl, scale: scale, text: label })));
    return getSlotted(el, SLOTS$p.tooltip) ? (hAsync("calcite-tooltip-manager", null, menuButtonSlot)) : (menuButtonSlot);
  }
  renderMenuItems() {
    const { actionElements, activeMenuItemIndex, open, menuId, menuButtonEl, label, placement, overlayPositioning, flipPlacements } = this;
    const activeAction = actionElements[activeMenuItemIndex];
    const activeDescendantId = (activeAction === null || activeAction === void 0 ? void 0 : activeAction.id) || null;
    return (hAsync("calcite-popover", { disablePointer: true, flipPlacements: flipPlacements, label: label, offsetDistance: 0, open: open, overlayPositioning: overlayPositioning, placement: placement, referenceElement: menuButtonEl }, hAsync("div", { "aria-activedescendant": activeDescendantId, "aria-labelledby": menuButtonEl === null || menuButtonEl === void 0 ? void 0 : menuButtonEl.id, class: CSS$O.menu, id: menuId, onClick: this.handleCalciteActionClick, onKeyDown: this.menuActionsContainerKeyDown, onKeyUp: this.menuActionsContainerKeyUp, ref: (el) => (this.menuEl = el), role: "menu", tabIndex: -1 }, hAsync("slot", null))));
  }
  render() {
    return (hAsync(Fragment, null, this.renderMenuButton(), this.renderMenuItems(), hAsync("slot", { name: SLOTS$p.tooltip })));
  }
  getAssignedElements() {
    return Array.from(this.el.querySelectorAll("slot"))
      .map((slot) => slot.assignedElements({ flatten: true }))
      .reduce((ar, val) => ar.concat(val), []);
  }
  isValidKey(key, supportedKeys) {
    return !!supportedKeys.find((k) => k === key);
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "expanded": ["expandedHandler"],
    "open": ["openHandler"],
    "activeMenuItemIndex": ["activeMenuItemIndexHandler"]
  }; }
  static get style() { return actionMenuCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-action-menu",
    "$members$": {
      "expanded": [516],
      "flipPlacements": [16],
      "label": [1],
      "open": [1540],
      "overlayPositioning": [1, "overlay-positioning"],
      "placement": [513],
      "scale": [513],
      "activeMenuItemIndex": [32],
      "setFocus": [64]
    },
    "$listeners$": [[8, "click", "closeCalciteActionMenuOnClick"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["expanded", "expanded"], ["open", "open"], ["placement", "placement"], ["scale", "scale"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$M = {
  actionGroupBottom: "action-group--bottom",
  container: "container"
};
const TEXT$n = {
  expand: "Expand",
  collapse: "Collapse"
};
const SLOTS$m = {
  expandTooltip: "expand-tooltip"
};

const actionPadCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-action-pad:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-action-pad{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-action-pad{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-action-pad{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-action-pad{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-action-pad{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:host*/.sc-calcite-action-pad-h{-webkit-box-sizing:border-box;box-sizing:border-box;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-2);font-size:var(--calcite-font-size--1)}/*!@:host **/.sc-calcite-action-pad-h *.sc-calcite-action-pad{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@:root*/.sc-calcite-action-pad:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-action-pad-h{display:none}/*!@:host*/.sc-calcite-action-pad-h{display:block}@keyframes in{0%{opacity:0}100%{opacity:1}}/*!@:host*/.sc-calcite-action-pad-h{-webkit-animation:in var(--calcite-internal-animation-timing-slow) ease-in-out;animation:in var(--calcite-internal-animation-timing-slow) ease-in-out;border-radius:0.125rem}/*!@:host([expanded])*/[expanded].sc-calcite-action-pad-h{max-width:20vw}/*!@::slotted(calcite-action-group)*/.sc-calcite-action-pad-s>calcite-action-group{border-width:0px;border-bottom-width:1px;border-style:solid;border-color:var(--calcite-ui-border-3);padding-bottom:0px;padding-top:0px}/*!@.container*/.container.sc-calcite-action-pad{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-direction:column;flex-direction:column;overflow-y:auto;border-radius:0.25rem;background-color:var(--calcite-ui-background);--tw-shadow:0 6px 20px -4px rgba(0, 0, 0, 0.1), 0 4px 12px -2px rgba(0, 0, 0, 0.08);--tw-shadow-colored:0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);max-width:15vw}/*!@.action-group--bottom*/.action-group--bottom.sc-calcite-action-pad{-ms-flex-positive:1;flex-grow:1;-ms-flex-pack:end;justify-content:flex-end;padding-bottom:0px}/*!@:host([layout=horizontal]) .container*/[layout=horizontal].sc-calcite-action-pad-h .container.sc-calcite-action-pad{-ms-flex-direction:row;flex-direction:row;max-width:unset}/*!@:host([layout=horizontal]) .container .action-group--bottom*/[layout=horizontal].sc-calcite-action-pad-h .container.sc-calcite-action-pad .action-group--bottom.sc-calcite-action-pad{padding:0px}/*!@:host([layout=horizontal]) .container ::slotted(calcite-action-group)*/.sc-calcite-action-pad-h[layout=horizontal] .container .sc-calcite-action-pad-s>calcite-action-group{border-width:0px;padding:0px;border-inline-end-width:1px}/*!@::slotted(calcite-action-group:last-child)*/.sc-calcite-action-pad-s>calcite-action-group:last-child{border-bottom-width:0px}";

/**
 * @slot - A slot for adding `calcite-action`s to the action pad.
 * @slot expand-tooltip - Used to set the tooltip for the expand toggle.
 */
class ActionPad {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteActionPadToggle = createEvent(this, "calciteActionPadToggle", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * When set to true, the expand-toggling behavior will be disabled.
     */
    this.expandDisabled = false;
    /**
     * Indicates whether widget is expanded.
     */
    this.expanded = false;
    /**
     * Indicates the horizontal or vertical layout of the component.
     */
    this.layout = "vertical";
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.actionMenuOpenChangeHandler = (event) => {
      if (event.detail) {
        const composedPath = event.composedPath();
        Array.from(this.el.querySelectorAll("calcite-action-group")).forEach((group) => {
          if (!composedPath.includes(group)) {
            group.menuOpen = false;
          }
        });
      }
    };
    this.toggleExpand = () => {
      this.expanded = !this.expanded;
    };
    this.setExpandToggleRef = (el) => {
      this.expandToggleEl = el;
    };
  }
  expandedHandler(expanded) {
    toggleChildActionText({ parent: this.el, expanded });
    this.calciteActionPadToggle.emit();
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  componentWillLoad() {
    const { el, expanded } = this;
    toggleChildActionText({ parent: el, expanded });
  }
  // --------------------------------------------------------------------------
  //
  //  Methods
  //
  // --------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus(focusId) {
    if (focusId === "expand-toggle") {
      await focusElement(this.expandToggleEl);
      return;
    }
    this.el.focus();
  }
  // --------------------------------------------------------------------------
  //
  //  Component Methods
  //
  // --------------------------------------------------------------------------
  renderBottomActionGroup() {
    const { expanded, expandDisabled, intlExpand, intlCollapse, el, position, toggleExpand, scale } = this;
    const tooltip = getSlotted(el, SLOTS$m.expandTooltip);
    const expandLabel = intlExpand || TEXT$n.expand;
    const collapseLabel = intlCollapse || TEXT$n.collapse;
    const expandToggleNode = !expandDisabled ? (hAsync(ExpandToggle, { el: el, expanded: expanded, intlCollapse: collapseLabel, intlExpand: expandLabel, position: position, ref: this.setExpandToggleRef, scale: scale, toggle: toggleExpand, tooltip: tooltip })) : null;
    return expandToggleNode ? (hAsync("calcite-action-group", { class: CSS$M.actionGroupBottom, scale: scale }, hAsync("slot", { name: SLOTS$m.expandTooltip }), expandToggleNode)) : null;
  }
  render() {
    return (hAsync(Host, { onCalciteActionMenuOpenChange: this.actionMenuOpenChangeHandler }, hAsync("div", { class: CSS$M.container }, hAsync("slot", null), this.renderBottomActionGroup())));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "expanded": ["expandedHandler"]
  }; }
  static get style() { return actionPadCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-action-pad",
    "$members$": {
      "expandDisabled": [516, "expand-disabled"],
      "expanded": [1540],
      "layout": [513],
      "intlExpand": [1, "intl-expand"],
      "intlCollapse": [1, "intl-collapse"],
      "position": [513],
      "scale": [513],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["expandDisabled", "expand-disabled"], ["expanded", "expanded"], ["layout", "layout"], ["position", "position"], ["scale", "scale"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const TEXT$m = {
  intlClose: "Close"
};
const DURATIONS = {
  slow: 14000,
  medium: 10000,
  fast: 6000
};
const SLOTS$l = {
  title: "title",
  message: "message",
  link: "link"
};

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
var StatusIcons;
(function (StatusIcons) {
  StatusIcons["green"] = "checkCircle";
  StatusIcons["yellow"] = "exclamationMarkTriangle";
  StatusIcons["red"] = "exclamationMarkTriangle";
  StatusIcons["blue"] = "lightbulb";
})(StatusIcons || (StatusIcons = {}));

const alertCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-alert:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-alert{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-alert{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-alert{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-alert{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-alert{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-alert:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-alert-h{display:none}/*!@:host([scale=s])*/[scale=s].sc-calcite-alert-h{--calcite-alert-width:40em;--calcite-alert-spacing-token-small:0.5rem;--calcite-alert-spacing-token-large:0.75rem}/*!@:host([scale=s]) slot[name=title]::slotted(*), :host([scale=s]) *::slotted([slot=title])*/.sc-calcite-alert-h[scale=s] slot[name=title].sc-calcite-alert-s>*,.sc-calcite-alert-h[scale=s] *.sc-calcite-alert-s>[slot=title]{font-size:var(--calcite-font-size--1);line-height:1.375}/*!@:host([scale=s]) slot[name=message]::slotted(*), :host([scale=s]) *::slotted([slot=message])*/.sc-calcite-alert-h[scale=s] slot[name=message].sc-calcite-alert-s>*,.sc-calcite-alert-h[scale=s] *.sc-calcite-alert-s>[slot=message]{font-size:var(--calcite-font-size--2);line-height:1.375}/*!@:host([scale=s]) slot[name=link]::slotted(*), :host([scale=s]) *::slotted([slot=link])*/.sc-calcite-alert-h[scale=s] slot[name=link].sc-calcite-alert-s>*,.sc-calcite-alert-h[scale=s] *.sc-calcite-alert-s>[slot=link]{font-size:var(--calcite-font-size--2);line-height:1.375}/*!@:host([scale=s]) .alert-queue-count*/[scale=s].sc-calcite-alert-h .alert-queue-count.sc-calcite-alert{margin-left:0.5rem;margin-right:0.5rem}/*!@:host([scale=s]) .container*/[scale=s].sc-calcite-alert-h .container.sc-calcite-alert{--calcite-alert-min-height:3.5rem}/*!@:host([scale=s]) .alert-close*/[scale=s].sc-calcite-alert-h .alert-close.sc-calcite-alert{padding:0.5rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-alert-h{--calcite-alert-width:50em;--calcite-alert-spacing-token-small:0.75rem;--calcite-alert-spacing-token-large:1rem}/*!@:host([scale=m]) slot[name=title]::slotted(*), :host([scale=m]) *::slotted([slot=title])*/.sc-calcite-alert-h[scale=m] slot[name=title].sc-calcite-alert-s>*,.sc-calcite-alert-h[scale=m] *.sc-calcite-alert-s>[slot=title]{font-size:var(--calcite-font-size-0);line-height:1.375}/*!@:host([scale=m]) slot[name=message]::slotted(*), :host([scale=m]) *::slotted([slot=message])*/.sc-calcite-alert-h[scale=m] slot[name=message].sc-calcite-alert-s>*,.sc-calcite-alert-h[scale=m] *.sc-calcite-alert-s>[slot=message]{font-size:var(--calcite-font-size--1);line-height:1.375}/*!@:host([scale=m]) slot[name=link]::slotted(*), :host([scale=m]) *::slotted([slot=link])*/.sc-calcite-alert-h[scale=m] slot[name=link].sc-calcite-alert-s>*,.sc-calcite-alert-h[scale=m] *.sc-calcite-alert-s>[slot=link]{font-size:var(--calcite-font-size--1);line-height:1.375}/*!@:host([scale=m]) .alert-queue-count*/[scale=m].sc-calcite-alert-h .alert-queue-count.sc-calcite-alert{margin-left:0.75rem;margin-right:0.75rem}/*!@:host([scale=m]) .container*/[scale=m].sc-calcite-alert-h .container.sc-calcite-alert{--calcite-alert-min-height:4.1875rem}/*!@:host([scale=l])*/[scale=l].sc-calcite-alert-h{--calcite-alert-width:60em;--calcite-alert-spacing-token-small:1rem;--calcite-alert-spacing-token-large:1.25rem}/*!@:host([scale=l]) slot[name=title]::slotted(*), :host([scale=l]) *::slotted([slot=title])*/.sc-calcite-alert-h[scale=l] slot[name=title].sc-calcite-alert-s>*,.sc-calcite-alert-h[scale=l] *.sc-calcite-alert-s>[slot=title]{margin-bottom:0.25rem;font-size:var(--calcite-font-size-1);line-height:1.375}/*!@:host([scale=l]) slot[name=message]::slotted(*), :host([scale=l]) *::slotted([slot=message])*/.sc-calcite-alert-h[scale=l] slot[name=message].sc-calcite-alert-s>*,.sc-calcite-alert-h[scale=l] *.sc-calcite-alert-s>[slot=message]{font-size:var(--calcite-font-size-0);line-height:1.375}/*!@:host([scale=l]) slot[name=link]::slotted(*), :host([scale=l]) *::slotted([slot=link])*/.sc-calcite-alert-h[scale=l] slot[name=link].sc-calcite-alert-s>*,.sc-calcite-alert-h[scale=l] *.sc-calcite-alert-s>[slot=link]{font-size:var(--calcite-font-size-0);line-height:1.375}/*!@:host([scale=l]) .alert-queue-count*/[scale=l].sc-calcite-alert-h .alert-queue-count.sc-calcite-alert{margin-left:1rem;margin-right:1rem}/*!@:host([scale=l]) .container*/[scale=l].sc-calcite-alert-h .container.sc-calcite-alert{--calcite-alert-min-height:5.625rem}/*!@:host*/.sc-calcite-alert-h{--calcite-alert-edge-distance:2rem;display:block}/*!@:host .container*/.sc-calcite-alert-h .container.sc-calcite-alert{pointer-events:none;position:fixed;margin-top:0px;margin-bottom:0px;margin-left:auto;margin-right:auto;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background-color:var(--calcite-ui-foreground-1);opacity:0;--tw-shadow:0 6px 20px -4px rgba(0, 0, 0, 0.1), 0 4px 12px -2px rgba(0, 0, 0, 0.08);--tw-shadow-colored:0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);border-radius:var(--calcite-border-radius);border-top:0px solid transparent;border-left:1px solid var(--calcite-ui-border-3);border-right:1px solid var(--calcite-ui-border-3);border-bottom:1px solid var(--calcite-ui-border-3);min-height:var(--calcite-alert-min-height);width:var(--calcite-alert-width);max-width:calc(100% - (var(--calcite-alert-edge-distance) * 2 + 2px));max-height:0;z-index:101;-webkit-transition:var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), all var(--calcite-animation-timing) ease-in-out;transition:var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), all var(--calcite-animation-timing) ease-in-out}/*!@:host .container.bottom, :host .container.top*/.sc-calcite-alert-h .container.bottom.sc-calcite-alert,.sc-calcite-alert-h .container.top.sc-calcite-alert{inset-inline-end:0;inset-inline-start:0}/*!@:host .container[class*=bottom]*/.sc-calcite-alert-h .container[class*=bottom].sc-calcite-alert{-webkit-transform:translate3d(0, var(--calcite-alert-edge-distance), 0);transform:translate3d(0, var(--calcite-alert-edge-distance), 0);inset-block-end:var(--calcite-alert-edge-distance)}/*!@:host .container[class*=top]*/.sc-calcite-alert-h .container[class*=top].sc-calcite-alert{-webkit-transform:translate3d(0, calc(-1 * var(--calcite-alert-edge-distance)), 0);transform:translate3d(0, calc(-1 * var(--calcite-alert-edge-distance)), 0);inset-block-start:var(--calcite-alert-edge-distance)}/*!@:host .container[class*=-start]*/.sc-calcite-alert-h .container[class*=-start].sc-calcite-alert{inset-inline-start:var(--calcite-alert-edge-distance);inset-inline-end:auto}/*!@:host .container[class*=-end]*/.sc-calcite-alert-h .container[class*=-end].sc-calcite-alert{inset-inline-end:var(--calcite-alert-edge-distance);inset-inline-start:auto}/*!@.container*/.container.sc-calcite-alert{display:-ms-flexbox;display:flex;width:100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}/*!@.alert-close*/.alert-close.sc-calcite-alert{outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@.alert-close:focus*/.alert-close.sc-calcite-alert:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@:host([active]) .container:not(.queued)*/[active].sc-calcite-alert-h .container.sc-calcite-alert:not(.queued){max-height:100%;border-top-width:2px;opacity:1;pointer-events:initial}/*!@:host([active]) .container:not(.queued)[class*=bottom]*/[active].sc-calcite-alert-h .container.sc-calcite-alert:not(.queued)[class*=bottom]{-webkit-transform:translate3d(0, calc(-1 * var(--calcite-alert-edge-distance)), inherit);transform:translate3d(0, calc(-1 * var(--calcite-alert-edge-distance)), inherit)}/*!@:host([active]) .container:not(.queued)[class*=top]*/[active].sc-calcite-alert-h .container.sc-calcite-alert:not(.queued)[class*=top]{-webkit-transform:translate3d(0, var(--calcite-alert-edge-distance), inherit);transform:translate3d(0, var(--calcite-alert-edge-distance), inherit)}/*!@slot[name=title]::slotted(*), *::slotted([slot=title])*/slot[name=title].sc-calcite-alert-s>*,*.sc-calcite-alert-s>[slot=title]{font-size:var(--calcite-font-size-0);line-height:1.375;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1)}/*!@slot[name=message]::slotted(*), *::slotted([slot=message])*/slot[name=message].sc-calcite-alert-s>*,*.sc-calcite-alert-s>[slot=message]{margin:0px;display:inline;font-size:var(--calcite-font-size--1);line-height:1.375;font-weight:var(--calcite-font-weight-normal);color:var(--calcite-ui-text-2);-webkit-margin-end:0.5rem;margin-inline-end:0.5rem}/*!@slot[name=link]::slotted(*), *::slotted([slot=link])*/slot[name=link].sc-calcite-alert-s>*,*.sc-calcite-alert-s>[slot=link]{display:-ms-inline-flexbox;display:inline-flex;color:var(--calcite-ui-text-link)}/*!@.alert-content*/.alert-content.sc-calcite-alert{-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;padding:var(--calcite-alert-spacing-token-small) var(--calcite-alert-spacing-token-large);-ms-flex:0 0 auto;flex:0 0 auto;overflow-wrap:break-word;background-color:var(--calcite-ui-foreground-1);-ms-flex:1 1 auto;flex:1 1 auto;min-width:0;padding-block:var(--calcite-alert-spacing-token-small);padding-inline:0 var(--calcite-alert-spacing-token-small);border-bottom-left-radius:var(--calcite-border-radius);border-bottom-right-radius:var(--calcite-border-radius)}/*!@.alert-content:first-of-type:not(:only-child)*/.alert-content.sc-calcite-alert:first-of-type:not(:only-child){-webkit-padding-start:var(--calcite-alert-spacing-token-large);padding-inline-start:var(--calcite-alert-spacing-token-large)}/*!@.alert-content:only-child*/.alert-content.sc-calcite-alert:only-child{padding:var(--calcite-alert-spacing-token-small)}/*!@.alert-icon*/.alert-icon.sc-calcite-alert{-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;padding:var(--calcite-alert-spacing-token-small) var(--calcite-alert-spacing-token-large);-ms-flex:0 0 auto;flex:0 0 auto;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-item-align:stretch;align-self:stretch;background-color:var(--calcite-ui-foreground-1);padding-top:0px;padding-bottom:0px}/*!@.alert-close*/.alert-close.sc-calcite-alert{-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;padding:var(--calcite-alert-spacing-token-small) var(--calcite-alert-spacing-token-large);-ms-flex:0 0 auto;flex:0 0 auto;cursor:pointer;-ms-flex-item-align:stretch;align-self:stretch;border-style:none;background-color:var(--calcite-ui-foreground-1);padding-top:0px;padding-bottom:0px;color:var(--calcite-ui-text-3);outline:2px solid transparent;outline-offset:2px;overflow:hidden;border-end-end-radius:var(--calcite-border-radius)}/*!@.alert-close:hover, .alert-close:focus*/.alert-close.sc-calcite-alert:hover,.alert-close.sc-calcite-alert:focus{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-text-1)}/*!@.alert-close:active*/.alert-close.sc-calcite-alert:active{background-color:var(--calcite-ui-foreground-3)}/*!@.alert-queue-count*/.alert-queue-count.sc-calcite-alert{visibility:hidden;display:-ms-flexbox;display:flex;cursor:default;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around;-ms-flex-item-align:stretch;align-self:stretch;background-color:var(--calcite-ui-foreground-1);text-align:center;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-2);opacity:0;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;overflow:hidden;border-left:0px solid transparent;border-right:0px solid transparent;border-top-right-radius:0}/*!@.alert-queue-count.active*/.alert-queue-count.active.sc-calcite-alert{visibility:visible;opacity:1}/*!@:host([auto-dismiss]) > .alert-queue-count*/[auto-dismiss].sc-calcite-alert-h>.alert-queue-count.sc-calcite-alert{-webkit-border-end:0px solid transparent;border-inline-end:0px solid transparent}/*!@.alert-dismiss-progress*/.alert-dismiss-progress.sc-calcite-alert{position:absolute;left:0px;right:0px;display:block;width:100%;overflow:hidden;top:-2px;height:2px;z-index:103;border-radius:var(--calcite-border-radius) var(--calcite-border-radius) 0 0}/*!@.alert-dismiss-progress:after*/.alert-dismiss-progress.sc-calcite-alert:after{position:absolute;top:0px;display:block;height:2px;content:\"\";background-color:var(--calcite-alert-dismiss-progress-background);z-index:104;inset-inline-end:0}/*!@:host([color=blue]) .container*/[color=blue].sc-calcite-alert-h .container.sc-calcite-alert{border-top-color:var(--calcite-ui-info)}/*!@:host([color=blue]) .container .alert-icon*/[color=blue].sc-calcite-alert-h .container.sc-calcite-alert .alert-icon.sc-calcite-alert{color:var(--calcite-ui-info)}/*!@:host([color=red]) .container*/[color=red].sc-calcite-alert-h .container.sc-calcite-alert{border-top-color:var(--calcite-ui-danger)}/*!@:host([color=red]) .container .alert-icon*/[color=red].sc-calcite-alert-h .container.sc-calcite-alert .alert-icon.sc-calcite-alert{color:var(--calcite-ui-danger)}/*!@:host([color=yellow]) .container*/[color=yellow].sc-calcite-alert-h .container.sc-calcite-alert{border-top-color:var(--calcite-ui-warning)}/*!@:host([color=yellow]) .container .alert-icon*/[color=yellow].sc-calcite-alert-h .container.sc-calcite-alert .alert-icon.sc-calcite-alert{color:var(--calcite-ui-warning)}/*!@:host([color=green]) .container*/[color=green].sc-calcite-alert-h .container.sc-calcite-alert{border-top-color:var(--calcite-ui-success)}/*!@:host([color=green]) .container .alert-icon*/[color=green].sc-calcite-alert-h .container.sc-calcite-alert .alert-icon.sc-calcite-alert{color:var(--calcite-ui-success)}/*!@:host([auto-dismiss-duration=fast]) .alert-dismiss-progress:after*/[auto-dismiss-duration=fast].sc-calcite-alert-h .alert-dismiss-progress.sc-calcite-alert:after{-webkit-animation:dismissProgress 6000ms ease-out;animation:dismissProgress 6000ms ease-out}/*!@:host([auto-dismiss-duration=medium]) .alert-dismiss-progress:after*/[auto-dismiss-duration=medium].sc-calcite-alert-h .alert-dismiss-progress.sc-calcite-alert:after{-webkit-animation:dismissProgress 10000ms ease-out;animation:dismissProgress 10000ms ease-out}/*!@:host([auto-dismiss-duration=slow]) .alert-dismiss-progress:after*/[auto-dismiss-duration=slow].sc-calcite-alert-h .alert-dismiss-progress.sc-calcite-alert:after{-webkit-animation:dismissProgress 14000ms ease-out;animation:dismissProgress 14000ms ease-out}@-webkit-keyframes dismissProgress{0%{width:0px}0%{opacity:0.75}100%{width:100%}100%{opacity:1}}@keyframes dismissProgress{0%{width:0px}0%{opacity:0.75}100%{width:100%}100%{opacity:1}}";

/** Alerts are meant to provide a way to communicate urgent or important information to users, frequently as a result of an action they took in your app. Alerts are positioned
 * at the bottom of the page. Multiple opened alerts will be added to a queue, allowing users to dismiss them in the order they are provided.
 */
/**
 * @slot title - Title of the alert (optional)
 * @slot message - Main text of the alert
 * @slot link - Optional action to take from the alert (undo, try again, link to page, etc.)
 */
class Alert {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteAlertClose = createEvent(this, "calciteAlertClose", 7);
    this.calciteAlertOpen = createEvent(this, "calciteAlertOpen", 7);
    this.calciteAlertSync = createEvent(this, "calciteAlertSync", 7);
    this.calciteAlertRegister = createEvent(this, "calciteAlertRegister", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //---------------------------------------------------------------------------
    /** Is the alert currently active or not */
    this.active = false;
    /** Close the alert automatically (recommended for passive, non-blocking alerts) */
    this.autoDismiss = false;
    /** Duration of autoDismiss (only used with `autoDismiss`) */
    this.autoDismissDuration = this.autoDismiss ? "medium" : null;
    /** Color for the alert (will apply to top border and icon) */
    this.color = "blue";
    /** string to override English close text
     * @default "Close"
     */
    this.intlClose = TEXT$m.intlClose;
    /** specify the placement of the alert */
    this.placement = "bottom";
    /** specify the scale of the alert, defaults to m */
    this.scale = "m";
    //--------------------------------------------------------------------------
    //
    //  Private State/Props
    //
    //--------------------------------------------------------------------------
    /** the list of queued alerts */
    this.queue = [];
    /** the count of queued alerts */
    this.queueLength = 0;
    /** is the alert queued */
    this.queued = false;
    this.autoDismissTimeoutId = null;
    this.trackTimer = Date.now();
    this.activeTransitionProp = "opacity";
    /** close and emit the closed alert and the queue */
    this.closeAlert = () => {
      this.autoDismissTimeoutId = null;
      this.queued = false;
      this.active = false;
      this.queue = this.queue.filter((e) => e !== this.el);
      this.determineActiveAlert();
      this.calciteAlertSync.emit({ queue: this.queue });
    };
    this.transitionEnd = (event) => {
      if (event.propertyName === this.activeTransitionProp) {
        this.active
          ? this.calciteAlertOpen.emit({
            el: this.el,
            queue: this.queue
          })
          : this.calciteAlertClose.emit({
            el: this.el,
            queue: this.queue
          });
      }
    };
  }
  watchActive() {
    if (this.active && !this.queued) {
      this.calciteAlertRegister.emit();
    }
    if (!this.active) {
      this.queue = this.queue.filter((e) => e !== this.el);
      this.calciteAlertSync.emit({ queue: this.queue });
    }
  }
  updateRequestedIcon() {
    this.requestedIcon = setRequestedIcon(StatusIcons, this.icon, this.color);
  }
  updateDuration() {
    if (this.autoDismiss && this.autoDismissTimeoutId) {
      window.clearTimeout(this.autoDismissTimeoutId);
      this.autoDismissTimeoutId = window.setTimeout(() => this.closeAlert(), DURATIONS[this.autoDismissDuration] - (Date.now() - this.trackTimer));
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    if (this.active && !this.queued) {
      this.calciteAlertRegister.emit();
    }
  }
  componentWillLoad() {
    this.requestedIcon = setRequestedIcon(StatusIcons, this.icon, this.color);
  }
  disconnectedCallback() {
    window.clearTimeout(this.autoDismissTimeoutId);
  }
  render() {
    const closeButton = (hAsync("button", { "aria-label": this.intlClose, class: "alert-close", onClick: this.closeAlert, ref: (el) => (this.closeButton = el), type: "button" }, hAsync("calcite-icon", { icon: "x", scale: this.scale === "l" ? "m" : "s" })));
    const queueText = `+${this.queueLength > 2 ? this.queueLength - 1 : 1}`;
    const queueCount = (hAsync("div", { class: `${this.queueLength > 1 ? "active " : ""}alert-queue-count` }, hAsync("calcite-chip", { scale: this.scale, value: queueText }, queueText)));
    const { active, autoDismiss, label, placement, queued, requestedIcon } = this;
    const role = autoDismiss ? "alert" : "alertdialog";
    const hidden = !active;
    return (hAsync(Host, { "aria-hidden": hidden.toString(), "aria-label": label, "calcite-hydrated-hidden": hidden, role: role }, hAsync("div", { class: {
        container: true,
        queued,
        [placement]: true
      }, onTransitionEnd: this.transitionEnd }, requestedIcon ? (hAsync("div", { class: "alert-icon" }, hAsync("calcite-icon", { icon: requestedIcon, scale: this.scale === "l" ? "m" : "s" }))) : null, hAsync("div", { class: "alert-content" }, hAsync("slot", { name: SLOTS$l.title }), hAsync("slot", { name: SLOTS$l.message }), hAsync("slot", { name: SLOTS$l.link })), queueCount, !autoDismiss ? closeButton : null, active && !queued && autoDismiss ? hAsync("div", { class: "alert-dismiss-progress" }) : null)));
  }
  // when an alert is opened or closed, update queue and determine active alert
  alertSync(event) {
    if (this.queue !== event.detail.queue) {
      this.queue = event.detail.queue;
    }
    this.queueLength = this.queue.length;
    this.determineActiveAlert();
  }
  // when an alert is first registered, trigger a queue sync to get queue
  alertRegister() {
    if (this.active && !this.queue.includes(this.el)) {
      this.queued = true;
      this.queue.push(this.el);
    }
    this.calciteAlertSync.emit({ queue: this.queue });
    this.determineActiveAlert();
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    const alertLinkEl = getSlotted(this.el, { selector: "calcite-link" });
    if (!this.closeButton && !alertLinkEl) {
      return;
    }
    else if (alertLinkEl) {
      alertLinkEl.setFocus();
    }
    else if (this.closeButton) {
      this.closeButton.focus();
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /** determine which alert is active */
  determineActiveAlert() {
    var _a;
    if (((_a = this.queue) === null || _a === void 0 ? void 0 : _a[0]) === this.el) {
      this.openAlert();
      if (this.autoDismiss && !this.autoDismissTimeoutId) {
        this.trackTimer = Date.now();
        this.autoDismissTimeoutId = window.setTimeout(() => this.closeAlert(), DURATIONS[this.autoDismissDuration]);
      }
    }
    else {
      return;
    }
  }
  /** emit the opened alert and the queue */
  openAlert() {
    window.clearTimeout(this.queueTimeout);
    this.queueTimeout = window.setTimeout(() => (this.queued = false), 300);
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "active": ["watchActive"],
    "icon": ["updateRequestedIcon"],
    "color": ["updateRequestedIcon"],
    "autoDismissDuration": ["updateDuration"]
  }; }
  static get style() { return alertCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-alert",
    "$members$": {
      "active": [1540],
      "autoDismiss": [4, "auto-dismiss"],
      "autoDismissDuration": [513, "auto-dismiss-duration"],
      "color": [513],
      "icon": [520],
      "intlClose": [1, "intl-close"],
      "label": [1],
      "placement": [1],
      "scale": [513],
      "queue": [32],
      "queueLength": [32],
      "queued": [32],
      "requestedIcon": [32],
      "setFocus": [64]
    },
    "$listeners$": [[8, "calciteAlertSync", "alertSync"], [8, "calciteAlertRegister", "alertRegister"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["active", "active"], ["autoDismissDuration", "auto-dismiss-duration"], ["color", "color"], ["icon", "icon"], ["scale", "scale"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
function rgbToHex(color) {
  const { r, g, b } = color;
  return `#${r.toString(16).padStart(2, "0")}${g.toString(16).padStart(2, "0")}${b
    .toString(16)
    .padStart(2, "0")}`.toLowerCase();
}
const hexChar = /^[0-9A-F]$/i;
const shortHandHex = /^#[0-9A-F]{3}$/i;
const longhandHex = /^#[0-9A-F]{6}$/i;
function isValidHex(hex) {
  return isShorthandHex(hex) || isLonghandHex(hex);
}
function isShorthandHex(hex) {
  return hex && hex.length === 4 && shortHandHex.test(hex);
}
function isLonghandHex(hex) {
  return hex && hex.length === 7 && longhandHex.test(hex);
}
function normalizeHex(hex) {
  hex = hex.toLowerCase();
  if (!hex.startsWith("#")) {
    hex = `#${hex}`;
  }
  if (isShorthandHex(hex)) {
    return rgbToHex(hexToRGB(hex));
  }
  return hex;
}
function hexToRGB(hex) {
  if (!isValidHex(hex)) {
    return null;
  }
  hex = hex.replace("#", "");
  if (hex.length === 3) {
    const [first, second, third] = hex.split("");
    const r = parseInt(`${first}${first}`, 16);
    const g = parseInt(`${second}${second}`, 16);
    const b = parseInt(`${third}${third}`, 16);
    return { r, g, b };
  }
  const r = parseInt(hex.slice(0, 2), 16);
  const g = parseInt(hex.slice(2, 4), 16);
  const b = parseInt(hex.slice(4, 6), 16);
  return { r, g, b };
}
// these utils allow users to pass enum values as strings without having to access the enum
// based on the approach suggested by https://github.com/microsoft/TypeScript/issues/17690#issuecomment-321365759,
const enumify = (x) => x;
const CSSColorMode = enumify({
  HEX: "hex",
  HEXA: "hexa",
  RGB_CSS: "rgb-css",
  RGBA_CSS: "rgba-css",
  HSL_CSS: "hsl-css",
  HSLA_CSS: "hsla-css"
});
const ObjectColorMode = enumify({
  RGB: "rgb",
  RGBA: "rgba",
  HSL: "hsl",
  HSLA: "hsla",
  HSV: "hsv",
  HSVA: "hsva"
});
function parseMode(colorValue) {
  if (typeof colorValue === "string") {
    if (colorValue.startsWith("#")) {
      const { length } = colorValue;
      if (length === 4 || length === 7) {
        return CSSColorMode.HEX;
      }
      if (length === 5 || length === 9) {
        return CSSColorMode.HEXA;
      }
    }
    if (colorValue.startsWith("rgba(")) {
      return CSSColorMode.RGBA_CSS;
    }
    if (colorValue.startsWith("rgb(")) {
      return CSSColorMode.RGB_CSS;
    }
    if (colorValue.startsWith("hsl(")) {
      return CSSColorMode.HSL_CSS;
    }
    if (colorValue.startsWith("hsla(")) {
      return CSSColorMode.HSLA_CSS;
    }
  }
  if (typeof colorValue === "object") {
    if (hasChannels(colorValue, "r", "g", "b")) {
      return hasChannels(colorValue, "a") ? ObjectColorMode.RGBA : ObjectColorMode.RGB;
    }
    if (hasChannels(colorValue, "h", "s", "l")) {
      return hasChannels(colorValue, "a") ? ObjectColorMode.HSLA : ObjectColorMode.HSL;
    }
    if (hasChannels(colorValue, "h", "s", "v")) {
      return hasChannels(colorValue, "a") ? ObjectColorMode.HSVA : ObjectColorMode.HSV;
    }
  }
  return null;
}
function hasChannels(colorObject, ...channels) {
  return channels.every((channel) => channel && colorObject && `${channel}` in colorObject);
}
function colorEqual(value1, value2) {
  return (value1 === null || value1 === void 0 ? void 0 : value1.rgbNumber()) === (value2 === null || value2 === void 0 ? void 0 : value2.rgbNumber());
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
/**
 * Convert a string to a valid hex by hashing its contents
 * and using the hash as a seed for three distinct color values
 */
function stringToHex(str) {
  let hash = 0;
  for (let i = 0; i < str.length; i++) {
    hash = str.charCodeAt(i) + ((hash << 5) - hash);
  }
  let hex = "#";
  for (let j = 0; j < 3; j++) {
    const value = (hash >> (j * 8)) & 0xff;
    hex += ("00" + value.toString(16)).substr(-2);
  }
  return hex;
}
/**
 * Find the hue of a color given the separate RGB color channels
 */
function rgbToHue(rgb) {
  let { r, g, b } = rgb;
  r /= 255;
  g /= 255;
  b /= 255;
  const max = Math.max(r, g, b);
  const min = Math.min(r, g, b);
  const delta = max - min;
  if (max === min) {
    return 0;
  }
  let hue = (max + min) / 2;
  switch (max) {
    case r:
      hue = (g - b) / delta + (g < b ? 6 : 0);
      break;
    case g:
      hue = (b - r) / delta + 2;
      break;
    case b:
      hue = (r - g) / delta + 4;
      break;
  }
  return Math.round(hue * 60);
}
/**
 * For a hex color, find the hue
 * @param hex {string} - form of "#------"
 */
function hexToHue(hex) {
  return rgbToHue(hexToRGB(hex));
}

const avatarCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-avatar:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-avatar{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-avatar{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-avatar{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-avatar{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-avatar{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-avatar:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-avatar-h{display:none}/*!@:host*/.sc-calcite-avatar-h{display:inline-block;border-radius:50%;overflow:hidden}/*!@:host([scale=s])*/[scale=s].sc-calcite-avatar-h{height:1.5rem;width:1.5rem;font-size:var(--calcite-font-size--3)}/*!@:host([scale=m])*/[scale=m].sc-calcite-avatar-h{height:2rem;width:2rem;font-size:var(--calcite-font-size--2)}/*!@:host([scale=l])*/[scale=l].sc-calcite-avatar-h{height:2.75rem;width:2.75rem;font-size:var(--calcite-font-size-0)}/*!@.icon*/.icon.sc-calcite-avatar{display:-ms-flexbox;display:flex}/*!@.background*/.background.sc-calcite-avatar{display:-ms-flexbox;display:flex;height:100%;width:100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border-radius:50%}/*!@.initials*/.initials.sc-calcite-avatar{font-weight:var(--calcite-font-weight-bold);text-transform:uppercase;color:var(--calcite-ui-text-3)}/*!@.thumbnail*/.thumbnail.sc-calcite-avatar{height:100%;width:100%;border-radius:50%}";

class Avatar {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** specify the scale of the avatar, defaults to m */
    this.scale = "m";
    //--------------------------------------------------------------------------
    //
    //  Private State/Props
    //
    //--------------------------------------------------------------------------
    /** True if thumnail fails to load */
    this.error = false;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    return this.determineContent();
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  determineContent() {
    if (this.thumbnail && !this.error) {
      return (hAsync("img", { alt: "", class: "thumbnail", onError: () => (this.error = true), src: this.thumbnail }));
    }
    const initials = this.generateInitials();
    const backgroundColor = this.generateFillColor();
    return (hAsync("span", { class: "background", style: { backgroundColor } }, initials ? (hAsync("span", { "aria-hidden": "true", class: "initials" }, initials)) : (hAsync("calcite-icon", { class: "icon", icon: "user", scale: this.scale }))));
  }
  /**
   * Generate a valid background color that is consistent and unique to this user
   */
  generateFillColor() {
    const { userId, username, fullName, el } = this;
    const theme = getThemeName(el);
    const id = userId && `#${userId.substr(userId.length - 6)}`;
    const name = username || fullName || "";
    const hex = id && isValidHex(id) ? id : stringToHex(name);
    // if there is not unique information, or an invalid hex is produced, return a default
    if ((!userId && !name) || !isValidHex(hex)) {
      return `var(--calcite-ui-foreground-2)`;
    }
    const hue = hexToHue(hex);
    const l = theme === "dark" ? 20 : 90;
    return `hsl(${hue}, 60%, ${l}%)`;
  }
  /**
   * Use fullname or username to generate initials
   */
  generateInitials() {
    const { fullName, username } = this;
    if (fullName) {
      return fullName
        .trim()
        .split(" ")
        .map((name) => name.substring(0, 1))
        .join("");
    }
    else if (username) {
      return username.substring(0, 2);
    }
    return false;
  }
  get el() { return getElement(this); }
  static get style() { return avatarCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-avatar",
    "$members$": {
      "scale": [513],
      "thumbnail": [1],
      "fullName": [1, "full-name"],
      "username": [1],
      "userId": [1, "user-id"],
      "error": [32]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["scale", "scale"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$L = {
  article: "article",
  content: "content",
  headerContainer: "header-container",
  icon: "icon",
  statusIcon: "status-icon",
  toggle: "toggle",
  toggleIcon: "toggle-icon",
  title: "title",
  heading: "heading",
  header: "header",
  button: "button",
  summary: "summary",
  controlContainer: "control-container",
  valid: "valid",
  invalid: "invalid",
  loading: "loading"
};
const TEXT$l = {
  collapse: "Collapse",
  expand: "Expand",
  loading: "Loading",
  options: "Options"
};
const SLOTS$k = {
  icon: "icon",
  control: "control",
  headerMenuActions: "header-menu-actions"
};
const ICONS$c = {
  opened: "chevron-up",
  closed: "chevron-down",
  valid: "check-circle",
  invalid: "exclamation-mark-triangle",
  refresh: "refresh"
};
const HEADING_LEVEL$7 = 4;

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
function constrainHeadingLevel(level) {
  return Math.min(Math.max(Math.ceil(level), 1), 6);
}
const Heading = (props, children) => {
  const HeadingTag = `h${props.level}`;
  delete props.level;
  return hAsync(HeadingTag, Object.assign({}, props), children);
};

const blockCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-block:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-block{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-block{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-block{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-block{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-block{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:host*/.sc-calcite-block-h{-webkit-box-sizing:border-box;box-sizing:border-box;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-2);font-size:var(--calcite-font-size--1)}/*!@:host **/.sc-calcite-block-h *.sc-calcite-block{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@:host*/.sc-calcite-block-h{--calcite-icon-size:1rem;--calcite-spacing-eighth:0.125rem;--calcite-spacing-quarter:0.25rem;--calcite-spacing-half:0.5rem;--calcite-spacing-three-quarters:0.75rem;--calcite-spacing:1rem;--calcite-spacing-plus-quarter:1.25rem;--calcite-spacing-plus-half:1.5rem;--calcite-spacing-double:2rem;--calcite-menu-min-width:10rem;--calcite-header-min-height:3rem;--calcite-footer-min-height:3rem}/*!@:root*/.sc-calcite-block:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-block-h{display:none}/*!@:host*/.sc-calcite-block-h{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-direction:column;flex-direction:column;border-width:0px;border-bottom-width:1px;border-style:solid;border-color:var(--calcite-ui-border-3);padding:0px;-webkit-transition-property:margin;transition-property:margin;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.215, 0.440, 0.420, 0.880);transition-timing-function:cubic-bezier(0.215, 0.440, 0.420, 0.880);-ms-flex-preferred-size:auto;flex-basis:auto}/*!@:host([disabled])*/[disabled].sc-calcite-block-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-block-h[disabled] .sc-calcite-block-s>[calcite-hydrated][disabled],[disabled].sc-calcite-block-h [calcite-hydrated][disabled].sc-calcite-block{opacity:1}/*!@.header*/.header.sc-calcite-block{margin:0px;display:-ms-flexbox;display:flex;-ms-flex-line-pack:justify;align-content:space-between;-ms-flex-align:center;align-items:center;fill:var(--calcite-ui-text-2);color:var(--calcite-ui-text-2)}/*!@.heading*/.heading.sc-calcite-block{margin:0px;padding:0px;font-weight:var(--calcite-font-weight-medium)}/*!@.header .heading*/.header.sc-calcite-block .heading.sc-calcite-block{-ms-flex:1 1 auto;flex:1 1 auto;padding:0.5rem}/*!@h1.heading*/h1.heading.sc-calcite-block{font-size:var(--calcite-font-size-2);line-height:1.5rem}/*!@h2.heading*/h2.heading.sc-calcite-block{font-size:var(--calcite-font-size-1);line-height:1.5rem}/*!@h3.heading*/h3.heading.sc-calcite-block{font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@h4.heading, h5.heading*/h4.heading.sc-calcite-block,h5.heading.sc-calcite-block{font-size:var(--calcite-font-size--1);line-height:1rem}/*!@.header*/.header.sc-calcite-block{-ms-flex-pack:start;justify-content:flex-start;padding:0px}/*!@.header,\n.toggle*/.header.sc-calcite-block,.toggle.sc-calcite-block{grid-area:header}/*!@.header-container*/.header-container.sc-calcite-block{display:grid;-ms-flex-align:stretch;align-items:stretch;grid-template:auto/auto 1fr auto auto;grid-template-areas:\"handle header control menu\";grid-column:header-start/menu-end;grid-row:1/2}/*!@.toggle*/.toggle.sc-calcite-block{margin:0px;display:-ms-flexbox;display:flex;cursor:pointer;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;border-style:none;padding:0px;font-family:inherit;outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;text-align:initial;background-color:transparent}/*!@.toggle:hover*/.toggle.sc-calcite-block:hover{background-color:var(--calcite-ui-foreground-2)}/*!@.toggle:focus*/.toggle.sc-calcite-block:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@calcite-loader[inline]*/calcite-loader[inline].sc-calcite-block{grid-area:control;align-self:center}/*!@calcite-handle*/calcite-handle.sc-calcite-block{grid-area:handle}/*!@.title*/.title.sc-calcite-block{margin:0px;padding:0.75rem}/*!@.header .title .heading*/.header.sc-calcite-block .title.sc-calcite-block .heading.sc-calcite-block{padding:0px;font-size:var(--calcite-font-size--1);font-weight:var(--calcite-font-weight-medium);line-height:1.25;color:var(--calcite-ui-text-2);-webkit-transition-property:color;transition-property:color;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);word-wrap:break-word;word-break:break-word}/*!@.summary*/.summary.sc-calcite-block{margin-top:0.125rem;padding:0px;font-size:var(--calcite-font-size--2);color:var(--calcite-ui-text-3);word-wrap:break-word;word-break:break-word}/*!@.icon*/.icon.sc-calcite-block{-webkit-margin-start:0.75rem;margin-inline-start:0.75rem;-webkit-margin-end:0px;margin-inline-end:0px;margin-block:0.75rem}/*!@.status-icon.valid*/.status-icon.valid.sc-calcite-block{color:var(--calcite-ui-success)}/*!@.status-icon.invalid*/.status-icon.invalid.sc-calcite-block{color:var(--calcite-ui-danger)}/*!@.status-icon.loading*/.status-icon.loading.sc-calcite-block{-webkit-animation:spin 2s linear infinite;animation:spin 2s linear infinite}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}50%{-webkit-transform:rotate(180deg);transform:rotate(180deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}50%{-webkit-transform:rotate(180deg);transform:rotate(180deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}/*!@.toggle-icon*/.toggle-icon.sc-calcite-block{margin-top:0.75rem;margin-bottom:0.75rem;-ms-flex-item-align:center;align-self:center;justify-self:end;color:var(--calcite-ui-text-3);-webkit-transition-property:color;transition-property:color;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-margin-end:1rem;margin-inline-end:1rem;-webkit-margin-start:auto;margin-inline-start:auto}/*!@.toggle:hover .toggle-icon*/.toggle.sc-calcite-block:hover .toggle-icon.sc-calcite-block{color:var(--calcite-ui-text-1)}/*!@.content*/.content.sc-calcite-block{position:relative}@keyframes in{0%{opacity:0}100%{opacity:1}}/*!@.content*/.content.sc-calcite-block{-webkit-animation:in var(--calcite-internal-animation-timing-slow) ease-in-out;animation:in var(--calcite-internal-animation-timing-slow) ease-in-out;padding-left:0.75rem;padding-right:0.75rem;padding-top:0.5rem;padding-bottom:0.5rem}/*!@.control-container*/.control-container.sc-calcite-block{margin:0px;display:-ms-flexbox;display:flex;grid-area:control}/*!@calcite-action-menu*/calcite-action-menu.sc-calcite-block{grid-area:menu}/*!@:host([open])*/[open].sc-calcite-block-h{margin-top:0.5rem;margin-bottom:0.5rem}/*!@:host([open]) .header .title .heading*/[open].sc-calcite-block-h .header.sc-calcite-block .title.sc-calcite-block .heading.sc-calcite-block{color:var(--calcite-ui-text-1)}";

/**
 * @slot - A slot for adding content to the block.
 * @slot icon - A slot for adding a leading header icon.
 * @slot control - A slot for adding a single HTML input element in a header.
 * @slot header-menu-actions - a slot for adding an overflow menu with actions inside a dropdown.
 */
class Block {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteBlockToggle = createEvent(this, "calciteBlockToggle", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * When true, this block will be collapsible.
     */
    this.collapsible = false;
    /**
     * When true, disabled prevents interaction. This state shows items with lower opacity/grayed.
     */
    this.disabled = false;
    /**
     * When true, displays a drag handle in the header.
     */
    this.dragHandle = false;
    /** string to override English loading text
     * @default "Loading"
     */
    this.intlLoading = TEXT$l.loading;
    /** Text string used for the actions menu
     * @default "Options"
     */
    this.intlOptions = TEXT$l.options;
    /**
     * When true, content is waiting to be loaded. This state shows a busy indicator.
     */
    this.loading = false;
    /**
     * When true, the block's content will be displayed.
     */
    this.open = false;
    this.guid = guid();
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.onHeaderClick = () => {
      this.open = !this.open;
      this.calciteBlockToggle.emit();
    };
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentDidRender() {
    updateHostInteraction(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderScrim() {
    const { loading } = this;
    const defaultSlot = hAsync("slot", null);
    return [loading ? hAsync("calcite-scrim", { loading: loading }) : null, defaultSlot];
  }
  renderIcon() {
    const { el, status } = this;
    const showingLoadingStatus = this.loading && !this.open;
    const statusIcon = showingLoadingStatus ? ICONS$c.refresh : ICONS$c[status];
    const hasIcon = getSlotted(el, SLOTS$k.icon) || statusIcon;
    const iconEl = !statusIcon ? (hAsync("slot", { key: "icon-slot", name: SLOTS$k.icon })) : (hAsync("calcite-icon", { class: {
        [CSS$L.statusIcon]: true,
        [CSS$L.valid]: status == "valid",
        [CSS$L.invalid]: status == "invalid",
        [CSS$L.loading]: showingLoadingStatus
      }, icon: statusIcon, scale: "m" }));
    return hasIcon ? hAsync("div", { class: CSS$L.icon }, iconEl) : null;
  }
  renderTitle() {
    const { heading, headingLevel, summary } = this;
    return heading || summary ? (hAsync("div", { class: CSS$L.title }, hAsync(Heading, { class: CSS$L.heading, level: headingLevel || HEADING_LEVEL$7 }, heading), summary ? hAsync("div", { class: CSS$L.summary }, summary) : null)) : null;
  }
  render() {
    const { collapsible, el, intlCollapse, intlExpand, loading, open, intlLoading } = this;
    const toggleLabel = open ? intlCollapse || TEXT$l.collapse : intlExpand || TEXT$l.expand;
    const headerContent = (hAsync("header", { class: CSS$L.header }, this.renderIcon(), this.renderTitle()));
    const hasControl = !!getSlotted(el, SLOTS$k.control);
    const hasMenuActions = !!getSlotted(el, SLOTS$k.headerMenuActions);
    const collapseIcon = open ? ICONS$c.opened : ICONS$c.closed;
    const { guid } = this;
    const regionId = `${guid}-region`;
    const buttonId = `${guid}-button`;
    const headerNode = (hAsync("div", { class: CSS$L.headerContainer }, this.dragHandle ? hAsync("calcite-handle", null) : null, collapsible ? (hAsync("button", { "aria-controls": regionId, "aria-expanded": collapsible ? open.toString() : null, "aria-label": toggleLabel, class: CSS$L.toggle, id: buttonId, onClick: this.onHeaderClick, title: toggleLabel }, headerContent, !hasControl && !hasMenuActions ? (hAsync("calcite-icon", { "aria-hidden": "true", class: CSS$L.toggleIcon, icon: collapseIcon, scale: "s" })) : null)) : (headerContent), loading ? (hAsync("calcite-loader", { inline: true, "is-active": true, label: intlLoading })) : hasControl ? (hAsync("div", { class: CSS$L.controlContainer }, hAsync("slot", { name: SLOTS$k.control }))) : null, hasMenuActions ? (hAsync("calcite-action-menu", { label: this.intlOptions || TEXT$l.options }, hAsync("slot", { name: SLOTS$k.headerMenuActions }))) : null));
    return (hAsync(Host, null, hAsync("article", { "aria-busy": loading.toString(), class: {
        [CSS$L.article]: true
      } }, headerNode, hAsync("section", { "aria-expanded": this.open.toString(), "aria-labelledby": buttonId, class: CSS$L.content, hidden: !open, id: regionId }, this.renderScrim()))));
  }
  get el() { return getElement(this); }
  static get style() { return blockCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-block",
    "$members$": {
      "collapsible": [4],
      "disabled": [516],
      "dragHandle": [516, "drag-handle"],
      "heading": [1],
      "headingLevel": [2, "heading-level"],
      "intlCollapse": [1, "intl-collapse"],
      "intlExpand": [1, "intl-expand"],
      "intlLoading": [1, "intl-loading"],
      "intlOptions": [1, "intl-options"],
      "loading": [516],
      "open": [1540],
      "status": [513],
      "summary": [1]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["dragHandle", "drag-handle"], ["loading", "loading"], ["open", "open"], ["status", "status"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$K = {
  content: "content",
  invalid: "invalid",
  toggle: "toggle",
  toggleSwitch: "toggle--switch",
  toggleSwitchContent: "toggle--switch__content",
  toggleSwitchText: "toggle--switch__text",
  sectionHeader: "section-header",
  sectionHeaderText: "section-header__text",
  statusIcon: "status-icon",
  valid: "valid"
};
const TEXT$k = {
  collapse: "Collapse",
  expand: "Expand"
};
const ICONS$b = {
  menuOpen: "chevron-down",
  menuClosedLeft: "chevron-left",
  menuClosedRight: "chevron-right",
  valid: "check-circle",
  invalid: "exclamation-mark-triangle"
};

const blockSectionCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-block-section:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-block-section{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-block-section{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-block-section{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-block-section{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-block-section{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-block-section:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-block-section-h{display:none}/*!@:host*/.sc-calcite-block-section-h{-webkit-box-sizing:border-box;box-sizing:border-box;display:block;background-color:var(--calcite-ui-foreground-1);font-size:var(--calcite-font-size--1);color:var(--calcite-ui-text-2)}/*!@:host([open])*/[open].sc-calcite-block-section-h{border-width:0px;border-bottom-width:1px;border-style:solid;border-bottom-color:var(--calcite-ui-border-3)}/*!@:host(:last-child)*/.sc-calcite-block-section-h:last-child{border-bottom-width:0px}/*!@.toggle*/.toggle.sc-calcite-block-section{width:100%;border-width:0px;background-color:transparent;font-family:var(--calcite-sans-family);font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-2)}/*!@.toggle--switch, .section-header*/.toggle--switch.sc-calcite-block-section,.section-header.sc-calcite-block-section{margin-left:0px;margin-right:0px;margin-top:0.25rem;margin-bottom:0.25rem;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-flex-align:center;align-items:center;padding-left:0px;padding-right:0px;padding-top:0.5rem;padding-bottom:0.5rem;font-size:var(--calcite-font-size--1);outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@.toggle--switch:focus, .section-header:focus*/.toggle--switch.sc-calcite-block-section:focus,.section-header.sc-calcite-block-section:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:2px}/*!@.toggle--switch:hover, .section-header:hover*/.toggle--switch.sc-calcite-block-section:hover,.section-header.sc-calcite-block-section:hover{color:var(--calcite-ui-text-1)}/*!@.section-header .status-icon*/.section-header.sc-calcite-block-section .status-icon.sc-calcite-block-section{-ms-flex-item-align:end;align-self:flex-end}/*!@.section-header__text*/.section-header__text.sc-calcite-block-section{margin-left:0.75rem;margin-right:0.75rem;margin-top:0px;margin-bottom:0px;-ms-flex:1 1 auto;flex:1 1 auto;text-align:initial;word-wrap:anywhere}/*!@.toggle--switch calcite-switch*/.toggle--switch.sc-calcite-block-section calcite-switch.sc-calcite-block-section{pointer-events:none;-webkit-margin-start:0.25rem;margin-inline-start:0.25rem}/*!@.toggle--switch .status-icon*/.toggle--switch.sc-calcite-block-section .status-icon.sc-calcite-block-section{-webkit-margin-start:0.5rem;margin-inline-start:0.5rem}/*!@.toggle--switch__content*/.toggle--switch__content.sc-calcite-block-section{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-align:center;align-items:center}/*!@.status-icon.valid*/.status-icon.valid.sc-calcite-block-section{color:var(--calcite-ui-success)}/*!@.status-icon.invalid*/.status-icon.invalid.sc-calcite-block-section{color:var(--calcite-ui-danger)}";

/**
 * @slot - A slot for adding content to the block section.
 */
class BlockSection {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteBlockSectionToggle = createEvent(this, "calciteBlockSectionToggle", 7);
    /**
     * When true, the block's section content will be displayed.
     */
    this.open = false;
    /**
     * This property determines the look of the section toggle.
     * If the value is "switch", a toggle-switch will be displayed.
     * If the value is "button", a clickable header is displayed.
     */
    this.toggleDisplay = "button";
    this.guid = guid();
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.handleHeaderKeyDown = (event) => {
      if (event.key === " " || event.key === "Enter") {
        this.toggleSection();
        event.preventDefault();
        event.stopPropagation();
      }
    };
    this.toggleSection = () => {
      this.open = !this.open;
      this.calciteBlockSectionToggle.emit();
    };
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderStatusIcon() {
    var _a;
    const { status } = this;
    const statusIcon = (_a = ICONS$b[status]) !== null && _a !== void 0 ? _a : false;
    const statusIconClasses = {
      [CSS$K.statusIcon]: true,
      [CSS$K.valid]: status == "valid",
      [CSS$K.invalid]: status == "invalid"
    };
    return !!statusIcon ? (hAsync("calcite-icon", { class: statusIconClasses, icon: statusIcon, scale: "s" })) : null;
  }
  render() {
    const { el, intlCollapse, intlExpand, open, text, toggleDisplay } = this;
    const dir = getElementDir(el);
    const arrowIcon = open
      ? ICONS$b.menuOpen
      : dir === "rtl"
        ? ICONS$b.menuClosedLeft
        : ICONS$b.menuClosedRight;
    const toggleLabel = open ? intlCollapse || TEXT$k.collapse : intlExpand || TEXT$k.expand;
    const { guid } = this;
    const regionId = `${guid}-region`;
    const buttonId = `${guid}-button`;
    const headerNode = toggleDisplay === "switch" ? (hAsync("div", { "aria-controls": regionId, "aria-label": toggleLabel, class: {
        [CSS$K.toggle]: true,
        [CSS$K.toggleSwitch]: true
      }, id: buttonId, onClick: this.toggleSection, onKeyDown: this.handleHeaderKeyDown, tabIndex: 0, title: toggleLabel }, hAsync("div", { class: CSS$K.toggleSwitchContent }, hAsync("span", { class: CSS$K.toggleSwitchText }, text)), hAsync("calcite-switch", { checked: open, label: toggleLabel, scale: "s", tabIndex: -1 }), this.renderStatusIcon())) : (hAsync("button", { "aria-controls": regionId, "aria-label": toggleLabel, class: {
        [CSS$K.sectionHeader]: true,
        [CSS$K.toggle]: true
      }, id: buttonId, name: toggleLabel, onClick: this.toggleSection }, hAsync("calcite-icon", { icon: arrowIcon, scale: "s" }), hAsync("span", { class: CSS$K.sectionHeaderText }, text), this.renderStatusIcon()));
    return (hAsync(Host, null, headerNode, hAsync("section", { "aria-expanded": open.toString(), "aria-labelledby": buttonId, class: CSS$K.content, hidden: !open, id: regionId }, hAsync("slot", null))));
  }
  get el() { return getElement(this); }
  static get style() { return blockSectionCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-block-section",
    "$members$": {
      "intlCollapse": [1, "intl-collapse"],
      "intlExpand": [1, "intl-expand"],
      "open": [1540],
      "status": [513],
      "text": [1],
      "toggleDisplay": [513, "toggle-display"]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["open", "open"], ["status", "status"], ["toggleDisplay", "toggle-display"]]
  }; }
}

(function(prototype) {
  if (typeof prototype.requestSubmit == "function") return

  prototype.requestSubmit = function(submitter) {
    if (submitter) {
      validateSubmitter(submitter, this);
      submitter.click();
    } else {
      submitter = document.createElement("input");
      submitter.type = "submit";
      submitter.hidden = true;
      this.appendChild(submitter);
      submitter.click();
      this.removeChild(submitter);
    }
  };

  function validateSubmitter(submitter, form) {
    submitter instanceof HTMLElement || raise(TypeError, "parameter 1 is not of type 'HTMLElement'");
    submitter.type == "submit" || raise(TypeError, "The specified element is not a submit button");
    submitter.form == form || raise(DOMException, "The specified element is not owned by this form element", "NotFoundError");
  }

  function raise(errorConstructor, message, name) {
    throw new errorConstructor("Failed to execute 'requestSubmit' on 'HTMLFormElement': " + message + ".", name)
  }
})(HTMLFormElement.prototype);

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$J = {
  buttonLoader: "calcite-button--loader",
  content: "content",
  contentSlotted: "content--slotted",
  icon: "icon",
  iconStart: "icon--start",
  iconEnd: "icon--end",
  loadingIn: "loading-in",
  loadingOut: "loading-out",
  iconStartEmpty: "icon-start-empty",
  iconEndEmpty: "icon-end-empty"
};
const TEXT$j = {
  loading: "Loading"
};

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
/**
 * Exported for testing purposes only
 * @internal
 */
const labelClickEvent = "calciteInternalLabelClick";
const labelConnectedEvent = "calciteInternalLabelConnected";
const labelDisconnectedEvent = "calciteInternaLabelDisconnected";
const labelTagName = "calcite-label";
const onLabelClickMap = new WeakMap();
const unlabeledComponents = new Set();
const findLabelForComponent = (componentEl) => {
  const { id } = componentEl;
  const forLabel = id && queryElementRoots(componentEl, { selector: `${labelTagName}[for="${id}"]` });
  if (forLabel) {
    return forLabel;
  }
  const parentLabel = closestElementCrossShadowBoundary(componentEl, labelTagName);
  if (!parentLabel ||
    // labelable components within other custom elements are not considered labelable
    hasAncestorCustomElements(parentLabel, componentEl)) {
    return null;
  }
  return parentLabel;
};
function hasAncestorCustomElements(label, componentEl) {
  let traversedElements;
  const customElementAncestorCheckEventType = "custom-element-ancestor-check";
  const listener = (event) => {
    event.stopImmediatePropagation();
    const composedPath = event.composedPath();
    traversedElements = composedPath.slice(composedPath.indexOf(componentEl), composedPath.indexOf(label));
  };
  label.addEventListener(customElementAncestorCheckEventType, listener, { once: true });
  componentEl.dispatchEvent(new CustomEvent(customElementAncestorCheckEventType, { composed: true, bubbles: true }));
  label.removeEventListener(customElementAncestorCheckEventType, listener);
  const ancestorCustomElements = traversedElements
    .filter((el) => el !== componentEl && el !== label)
    .filter((el) => { var _a; return (_a = el.tagName) === null || _a === void 0 ? void 0 : _a.includes("-"); });
  return ancestorCustomElements.length > 0;
}
/**
 * Helper to set up label interactions on connectedCallback.
 */
function connectLabel(component) {
  const labelEl = findLabelForComponent(component.el);
  if (onLabelClickMap.has(labelEl)) {
    return;
  }
  const boundOnLabelConnected = onLabelConnected.bind(component);
  const boundOnLabelDisconnected = onLabelDisconnected.bind(component);
  if (labelEl) {
    const addClickEventListenerToComponentLabel = () => {
      component.labelEl = labelEl;
      const boundOnLabelClick = onLabelClick.bind(component);
      onLabelClickMap.set(component.labelEl, boundOnLabelClick);
      component.labelEl.addEventListener(labelClickEvent, boundOnLabelClick);
    };
    addClickEventListenerToComponentLabel();
    unlabeledComponents.delete(component);
    document.removeEventListener(labelConnectedEvent, boundOnLabelConnected);
    document.addEventListener(labelDisconnectedEvent, boundOnLabelDisconnected);
  }
  else if (!labelEl && !unlabeledComponents.has(component)) {
    boundOnLabelDisconnected();
    document.removeEventListener(labelDisconnectedEvent, boundOnLabelDisconnected);
  }
}
/**
 * Helper to tear down label interactions on disconnectedCallback on labelable components.
 */
function disconnectLabel(component) {
  const boundOnLabelConnected = onLabelConnected.bind(component);
  const boundOnLabelDisconnected = onLabelDisconnected.bind(component);
  unlabeledComponents.delete(component);
  document.removeEventListener(labelConnectedEvent, boundOnLabelConnected);
  document.removeEventListener(labelDisconnectedEvent, boundOnLabelDisconnected);
  if (!component.labelEl) {
    return;
  }
  const boundOnLabelClick = onLabelClickMap.get(component.labelEl);
  component.labelEl.removeEventListener(labelClickEvent, boundOnLabelClick);
  onLabelClickMap.delete(component.labelEl);
}
/**
 * Helper to get the label text from a component.
 */
function getLabelText(component) {
  var _a, _b;
  return component.label || ((_b = (_a = component.labelEl) === null || _a === void 0 ? void 0 : _a.textContent) === null || _b === void 0 ? void 0 : _b.trim()) || "";
}
function onLabelClick(event) {
  if (this.disabled) {
    return;
  }
  const containedLabelableChildClicked = this.el.contains(event.detail.sourceEvent.target);
  if (containedLabelableChildClicked) {
    return;
  }
  this.onLabelClick(event);
}
function onLabelConnected() {
  if (unlabeledComponents.has(this)) {
    connectLabel(this);
  }
}
function onLabelDisconnected() {
  unlabeledComponents.add(this);
  const boundOnLabelConnected = onLabelConnected.bind(this);
  document.addEventListener(labelConnectedEvent, boundOnLabelConnected);
}

const buttonCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-button:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-button{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-button{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-button{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-button{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-button{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-button:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-button-h{display:none}/*!@:host*/.sc-calcite-button-h{display:inline-block;width:auto;vertical-align:middle}/*!@:host([round])*/[round].sc-calcite-button-h{border-radius:50px}/*!@:host([round]) a, :host([round]) button*/[round].sc-calcite-button-h a.sc-calcite-button,[round].sc-calcite-button-h button.sc-calcite-button{border-radius:50px}/*!@:host button, :host a*/.sc-calcite-button-h button.sc-calcite-button,.sc-calcite-button-h a.sc-calcite-button{outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@:host button:focus, :host a:focus*/.sc-calcite-button-h button.sc-calcite-button:focus,.sc-calcite-button-h a.sc-calcite-button:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:2px}/*!@:host button,\n:host a*/.sc-calcite-button-h button.sc-calcite-button,.sc-calcite-button-h a.sc-calcite-button{--calcite-button-content-margin:0.5rem;--calcite-button-padding-x:7px;--calcite-button-padding-y:3px;padding:var(--calcite-button-padding-y) var(--calcite-button-padding-x) var(--calcite-button-padding-y) var(--calcite-button-padding-x);position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;height:100%;width:100%;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border-radius:0px;border-style:none;text-align:center;font-family:inherit;font-weight:var(--calcite-font-weight-normal);-webkit-text-decoration-line:none;text-decoration-line:none;-webkit-transition:color var(--calcite-animation-timing) ease-in-out, background-color var(--calcite-animation-timing) ease-in-out, outline-offset var(--calcite-internal-animation-timing-fast) ease-in-out, outline-color var(--calcite-internal-animation-timing-fast) ease-in-out, -webkit-box-shadow var(--calcite-animation-timing) ease-in-out;transition:color var(--calcite-animation-timing) ease-in-out, background-color var(--calcite-animation-timing) ease-in-out, outline-offset var(--calcite-internal-animation-timing-fast) ease-in-out, outline-color var(--calcite-internal-animation-timing-fast) ease-in-out, -webkit-box-shadow var(--calcite-animation-timing) ease-in-out;transition:color var(--calcite-animation-timing) ease-in-out, background-color var(--calcite-animation-timing) ease-in-out, box-shadow var(--calcite-animation-timing) ease-in-out, outline-offset var(--calcite-internal-animation-timing-fast) ease-in-out, outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;transition:color var(--calcite-animation-timing) ease-in-out, background-color var(--calcite-animation-timing) ease-in-out, box-shadow var(--calcite-animation-timing) ease-in-out, outline-offset var(--calcite-internal-animation-timing-fast) ease-in-out, outline-color var(--calcite-internal-animation-timing-fast) ease-in-out, -webkit-box-shadow var(--calcite-animation-timing) ease-in-out}/*!@:host button:hover, :host a:hover*/.sc-calcite-button-h button.sc-calcite-button:hover,.sc-calcite-button-h a.sc-calcite-button:hover{-webkit-text-decoration-line:none;text-decoration-line:none}/*!@.content*/.content.sc-calcite-button{display:-ms-flexbox;display:flex;-ms-flex-preferred-size:auto;flex-basis:auto;-webkit-margin-start:var(--calcite-button-content-margin);margin-inline-start:var(--calcite-button-content-margin);-webkit-margin-end:var(--calcite-button-content-margin);margin-inline-end:var(--calcite-button-content-margin)}/*!@.icon-start-empty .content*/.icon-start-empty.sc-calcite-button .content.sc-calcite-button{-webkit-margin-start:unset;margin-inline-start:unset}/*!@.icon-end-empty .content*/.icon-end-empty.sc-calcite-button .content.sc-calcite-button{-webkit-margin-end:unset;margin-inline-end:unset}/*!@:host([scale=m]) button,\n:host([scale=m]) a*/[scale=m].sc-calcite-button-h button.sc-calcite-button,[scale=m].sc-calcite-button-h a.sc-calcite-button{--calcite-button-content-margin:0.75rem}/*!@:host([scale=l]) button,\n:host([scale=l]) a*/[scale=l].sc-calcite-button-h button.sc-calcite-button,[scale=l].sc-calcite-button-h a.sc-calcite-button{--calcite-button-content-margin:1rem}/*!@:host([width=auto])*/[width=auto].sc-calcite-button-h{width:auto}/*!@:host([width=half])*/[width=half].sc-calcite-button-h{width:50%}/*!@:host([width=full])*/[width=full].sc-calcite-button-h{width:100%}/*!@:host([alignment=center]:not([width=auto])) a, :host([alignment=center]:not([width=auto])) button*/[alignment=center].sc-calcite-button-h:not([width=auto]) a.sc-calcite-button,[alignment=center].sc-calcite-button-h:not([width=auto]) button.sc-calcite-button{-ms-flex-pack:center;justify-content:center}/*!@:host([alignment=start]:not([width=auto])) a, :host([alignment=start]:not([width=auto])) button*/[alignment=start].sc-calcite-button-h:not([width=auto]) a.sc-calcite-button,[alignment=start].sc-calcite-button-h:not([width=auto]) button.sc-calcite-button{-ms-flex-pack:start;justify-content:flex-start}/*!@:host([alignment=end]:not([width=auto])) a, :host([alignment=end]:not([width=auto])) button*/[alignment=end].sc-calcite-button-h:not([width=auto]) a.sc-calcite-button,[alignment=end].sc-calcite-button-h:not([width=auto]) button.sc-calcite-button{-ms-flex-pack:end;justify-content:flex-end}/*!@:host([alignment*=space-between]:not([width=auto])) a, :host([alignment*=space-between]:not([width=auto])) button*/[alignment*=space-between].sc-calcite-button-h:not([width=auto]) a.sc-calcite-button,[alignment*=space-between].sc-calcite-button-h:not([width=auto]) button.sc-calcite-button{-ms-flex-pack:justify;justify-content:space-between}/*!@:host([alignment=icon-start-space-between]:not([width=auto])) .icon--start*/[alignment=icon-start-space-between].sc-calcite-button-h:not([width=auto]) .icon--start.sc-calcite-button{-webkit-margin-end:auto;margin-inline-end:auto}/*!@:host([alignment=icon-start-space-between]:not([width=auto])) a,\n:host([alignment=icon-start-space-between]:not([width=auto])) button*/[alignment=icon-start-space-between].sc-calcite-button-h:not([width=auto]) a.sc-calcite-button,[alignment=icon-start-space-between].sc-calcite-button-h:not([width=auto]) button.sc-calcite-button{text-align:unset}/*!@:host([alignment=icon-end-space-between]:not([width=auto])) .icon--end*/[alignment=icon-end-space-between].sc-calcite-button-h:not([width=auto]) .icon--end.sc-calcite-button{-webkit-margin-start:auto;margin-inline-start:auto}/*!@:host([alignment=icon-end-space-between]:not([width=auto])) a,\n:host([alignment=icon-end-space-between]:not([width=auto])) button*/[alignment=icon-end-space-between].sc-calcite-button-h:not([width=auto]) a.sc-calcite-button,[alignment=icon-end-space-between].sc-calcite-button-h:not([width=auto]) button.sc-calcite-button{text-align:unset}/*!@:host([alignment=center]) a:not(.content--slotted) .icon--start + .icon--end,\n:host([alignment=center]) button:not(.content--slotted) .icon--start + .icon--end*/[alignment=center].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted) .icon--start.sc-calcite-button+.icon--end.sc-calcite-button,[alignment=center].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted) .icon--start.sc-calcite-button+.icon--end.sc-calcite-button{-webkit-margin-start:var(--calcite-button-content-margin);margin-inline-start:var(--calcite-button-content-margin)}/*!@.icon*/.icon.sc-calcite-button{position:relative;margin:0px;display:-ms-inline-flexbox;display:inline-flex;font-weight:var(--calcite-font-weight-normal);line-height:inherit}/*!@:host([disabled])*/[disabled].sc-calcite-button-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-button-h[disabled] .sc-calcite-button-s>[calcite-hydrated][disabled],[disabled].sc-calcite-button-h [calcite-hydrated][disabled].sc-calcite-button{opacity:1}/*!@:host([loading])*/[loading].sc-calcite-button-h{pointer-events:none}/*!@:host([loading]) button, :host([loading]) a*/[loading].sc-calcite-button-h button.sc-calcite-button,[loading].sc-calcite-button-h a.sc-calcite-button{pointer-events:none;opacity:var(--calcite-ui-opacity-disabled)}@-webkit-keyframes loader-in{0%{width:0;opacity:0;-webkit-transform:scale(0.5);transform:scale(0.5)}100%{width:1em;opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes loader-in{0%{width:0;opacity:0;-webkit-transform:scale(0.5);transform:scale(0.5)}100%{width:1em;opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes loader-out{0%{width:1em;opacity:1;-webkit-transform:scale(1);transform:scale(1)}100%{width:0;opacity:0;-webkit-transform:scale(0.5);transform:scale(0.5)}}@keyframes loader-out{0%{width:1em;opacity:1;-webkit-transform:scale(1);transform:scale(1)}100%{width:0;opacity:0;-webkit-transform:scale(0.5);transform:scale(0.5)}}/*!@.calcite-button--loader*/.calcite-button--loader.sc-calcite-button{display:-ms-flexbox;display:flex}/*!@.calcite-button--loader calcite-loader*/.calcite-button--loader.sc-calcite-button calcite-loader.sc-calcite-button{margin:0px;-webkit-transition:width var(--calcite-internal-animation-timing-slow) ease-in-out, opacity var(--calcite-internal-animation-timing-slow) ease-in-out, -webkit-transform var(--calcite-internal-animation-timing-slow) ease-in-out;transition:width var(--calcite-internal-animation-timing-slow) ease-in-out, opacity var(--calcite-internal-animation-timing-slow) ease-in-out, -webkit-transform var(--calcite-internal-animation-timing-slow) ease-in-out;transition:width var(--calcite-internal-animation-timing-slow) ease-in-out, opacity var(--calcite-internal-animation-timing-slow) ease-in-out, transform var(--calcite-internal-animation-timing-slow) ease-in-out;transition:width var(--calcite-internal-animation-timing-slow) ease-in-out, opacity var(--calcite-internal-animation-timing-slow) ease-in-out, transform var(--calcite-internal-animation-timing-slow) ease-in-out, -webkit-transform var(--calcite-internal-animation-timing-slow) ease-in-out}/*!@.calcite-button--loader calcite-loader.loading-in*/.calcite-button--loader.sc-calcite-button calcite-loader.loading-in.sc-calcite-button{-webkit-animation-name:loader-in;animation-name:loader-in;-webkit-animation-duration:310ms;animation-duration:310ms}/*!@.calcite-button--loader calcite-loader.loading-out*/.calcite-button--loader.sc-calcite-button calcite-loader.loading-out.sc-calcite-button{-webkit-animation-name:loader-out;animation-name:loader-out;-webkit-animation-duration:310ms;animation-duration:310ms}/*!@:host([loading]) button.content--slotted .calcite-button--loader calcite-loader,\n:host([loading]) a.content--slotted .calcite-button--loader calcite-loader*/[loading].sc-calcite-button-h button.content--slotted.sc-calcite-button .calcite-button--loader.sc-calcite-button calcite-loader.sc-calcite-button,[loading].sc-calcite-button-h a.content--slotted.sc-calcite-button .calcite-button--loader.sc-calcite-button calcite-loader.sc-calcite-button{-webkit-margin-end:var(--calcite-button-content-margin);margin-inline-end:var(--calcite-button-content-margin)}/*!@:host([loading]) button:not(.content--slotted) .icon--start, :host([loading]) button:not(.content--slotted) .icon--end, :host([loading]) a:not(.content--slotted) .icon--start, :host([loading]) a:not(.content--slotted) .icon--end*/[loading].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted) .icon--start.sc-calcite-button,[loading].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted) .icon--end.sc-calcite-button,[loading].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted) .icon--start.sc-calcite-button,[loading].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted) .icon--end.sc-calcite-button{display:none}/*!@:host([appearance=solid]) button, :host([appearance=solid]) a*/[appearance=solid].sc-calcite-button-h button.sc-calcite-button,[appearance=solid].sc-calcite-button-h a.sc-calcite-button{border-width:1px;border-style:solid;border-color:transparent}/*!@:host([appearance=solid][color=blue]) button, :host([appearance=solid][color=blue]) a*/[appearance=solid][color=blue].sc-calcite-button-h button.sc-calcite-button,[appearance=solid][color=blue].sc-calcite-button-h a.sc-calcite-button{background-color:var(--calcite-ui-brand);color:var(--calcite-ui-text-inverse)}/*!@:host([appearance=solid][color=blue]) button:hover, :host([appearance=solid][color=blue]) button:focus, :host([appearance=solid][color=blue]) a:hover, :host([appearance=solid][color=blue]) a:focus*/[appearance=solid][color=blue].sc-calcite-button-h button.sc-calcite-button:hover,[appearance=solid][color=blue].sc-calcite-button-h button.sc-calcite-button:focus,[appearance=solid][color=blue].sc-calcite-button-h a.sc-calcite-button:hover,[appearance=solid][color=blue].sc-calcite-button-h a.sc-calcite-button:focus{background-color:var(--calcite-ui-brand-hover)}/*!@:host([appearance=solid][color=blue]) button:active, :host([appearance=solid][color=blue]) a:active*/[appearance=solid][color=blue].sc-calcite-button-h button.sc-calcite-button:active,[appearance=solid][color=blue].sc-calcite-button-h a.sc-calcite-button:active{background-color:var(--calcite-ui-brand-press)}/*!@:host([appearance=solid][color=blue]) button calcite-loader, :host([appearance=solid][color=blue]) a calcite-loader*/[appearance=solid][color=blue].sc-calcite-button-h button.sc-calcite-button calcite-loader.sc-calcite-button,[appearance=solid][color=blue].sc-calcite-button-h a.sc-calcite-button calcite-loader.sc-calcite-button{color:var(--calcite-ui-text-inverse)}/*!@:host([appearance=solid][color=red]) button, :host([appearance=solid][color=red]) a*/[appearance=solid][color=red].sc-calcite-button-h button.sc-calcite-button,[appearance=solid][color=red].sc-calcite-button-h a.sc-calcite-button{background-color:var(--calcite-ui-danger);color:var(--calcite-ui-text-inverse)}/*!@:host([appearance=solid][color=red]) button:hover, :host([appearance=solid][color=red]) button:focus, :host([appearance=solid][color=red]) a:hover, :host([appearance=solid][color=red]) a:focus*/[appearance=solid][color=red].sc-calcite-button-h button.sc-calcite-button:hover,[appearance=solid][color=red].sc-calcite-button-h button.sc-calcite-button:focus,[appearance=solid][color=red].sc-calcite-button-h a.sc-calcite-button:hover,[appearance=solid][color=red].sc-calcite-button-h a.sc-calcite-button:focus{background-color:var(--calcite-ui-danger-hover)}/*!@:host([appearance=solid][color=red]) button:active, :host([appearance=solid][color=red]) a:active*/[appearance=solid][color=red].sc-calcite-button-h button.sc-calcite-button:active,[appearance=solid][color=red].sc-calcite-button-h a.sc-calcite-button:active{background-color:var(--calcite-ui-danger-press)}/*!@:host([appearance=solid][color=red]) button calcite-loader, :host([appearance=solid][color=red]) a calcite-loader*/[appearance=solid][color=red].sc-calcite-button-h button.sc-calcite-button calcite-loader.sc-calcite-button,[appearance=solid][color=red].sc-calcite-button-h a.sc-calcite-button calcite-loader.sc-calcite-button{color:var(--calcite-ui-text-inverse)}/*!@:host([appearance=solid][color=neutral]) button, :host([appearance=solid][color=neutral]) a*/[appearance=solid][color=neutral].sc-calcite-button-h button.sc-calcite-button,[appearance=solid][color=neutral].sc-calcite-button-h a.sc-calcite-button{background-color:var(--calcite-ui-foreground-3);color:var(--calcite-ui-text-1)}/*!@:host([appearance=solid][color=neutral]) button:hover, :host([appearance=solid][color=neutral]) button:focus, :host([appearance=solid][color=neutral]) a:hover, :host([appearance=solid][color=neutral]) a:focus*/[appearance=solid][color=neutral].sc-calcite-button-h button.sc-calcite-button:hover,[appearance=solid][color=neutral].sc-calcite-button-h button.sc-calcite-button:focus,[appearance=solid][color=neutral].sc-calcite-button-h a.sc-calcite-button:hover,[appearance=solid][color=neutral].sc-calcite-button-h a.sc-calcite-button:focus{background-color:var(--calcite-ui-foreground-2)}/*!@:host([appearance=solid][color=neutral]) button:active, :host([appearance=solid][color=neutral]) a:active*/[appearance=solid][color=neutral].sc-calcite-button-h button.sc-calcite-button:active,[appearance=solid][color=neutral].sc-calcite-button-h a.sc-calcite-button:active{background-color:var(--calcite-ui-foreground-1)}/*!@:host([appearance=solid][color=neutral]) button calcite-loader, :host([appearance=solid][color=neutral]) a calcite-loader*/[appearance=solid][color=neutral].sc-calcite-button-h button.sc-calcite-button calcite-loader.sc-calcite-button,[appearance=solid][color=neutral].sc-calcite-button-h a.sc-calcite-button calcite-loader.sc-calcite-button{color:var(--calcite-ui-text-1)}/*!@:host([appearance=solid][color=inverse]) button, :host([appearance=solid][color=inverse]) a*/[appearance=solid][color=inverse].sc-calcite-button-h button.sc-calcite-button,[appearance=solid][color=inverse].sc-calcite-button-h a.sc-calcite-button{color:var(--calcite-ui-text-inverse);background-color:var(--calcite-ui-inverse)}/*!@:host([appearance=solid][color=inverse]) button:hover, :host([appearance=solid][color=inverse]) button:focus,\n:host([appearance=solid][color=inverse]) a:hover,\n:host([appearance=solid][color=inverse]) a:focus*/[appearance=solid][color=inverse].sc-calcite-button-h button.sc-calcite-button:hover,[appearance=solid][color=inverse].sc-calcite-button-h button.sc-calcite-button:focus,[appearance=solid][color=inverse].sc-calcite-button-h a.sc-calcite-button:hover,[appearance=solid][color=inverse].sc-calcite-button-h a.sc-calcite-button:focus{background-color:var(--calcite-ui-inverse-hover)}/*!@:host([appearance=solid][color=inverse]) button:active,\n:host([appearance=solid][color=inverse]) a:active*/[appearance=solid][color=inverse].sc-calcite-button-h button.sc-calcite-button:active,[appearance=solid][color=inverse].sc-calcite-button-h a.sc-calcite-button:active{background-color:var(--calcite-ui-inverse-press)}/*!@:host([appearance=solid][color=inverse]) button calcite-loader, :host([appearance=solid][color=inverse]) a calcite-loader*/[appearance=solid][color=inverse].sc-calcite-button-h button.sc-calcite-button calcite-loader.sc-calcite-button,[appearance=solid][color=inverse].sc-calcite-button-h a.sc-calcite-button calcite-loader.sc-calcite-button{color:var(--calcite-ui-text-inverse)}/*!@:host([appearance=outline]) button, :host([appearance=outline]) a*/[appearance=outline].sc-calcite-button-h button.sc-calcite-button,[appearance=outline].sc-calcite-button-h a.sc-calcite-button{border-width:1px;border-style:solid;background-color:var(--calcite-ui-foreground-1);-webkit-box-shadow:inset 0 0 0 1px transparent;box-shadow:inset 0 0 0 1px transparent}/*!@:host([appearance=outline][color=blue]) button, :host([appearance=outline][color=blue]) a*/[appearance=outline][color=blue].sc-calcite-button-h button.sc-calcite-button,[appearance=outline][color=blue].sc-calcite-button-h a.sc-calcite-button{border-color:var(--calcite-ui-brand);color:var(--calcite-ui-brand)}/*!@:host([appearance=outline][color=blue]) button:hover, :host([appearance=outline][color=blue]) a:hover*/[appearance=outline][color=blue].sc-calcite-button-h button.sc-calcite-button:hover,[appearance=outline][color=blue].sc-calcite-button-h a.sc-calcite-button:hover{border-color:var(--calcite-ui-brand-hover);color:var(--calcite-ui-brand-hover);-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-brand-hover);box-shadow:inset 0 0 0 1px var(--calcite-ui-brand-hover)}/*!@:host([appearance=outline][color=blue]) button:focus, :host([appearance=outline][color=blue]) a:focus*/[appearance=outline][color=blue].sc-calcite-button-h button.sc-calcite-button:focus,[appearance=outline][color=blue].sc-calcite-button-h a.sc-calcite-button:focus{border-color:var(--calcite-ui-brand);color:var(--calcite-ui-brand);-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-brand);box-shadow:inset 0 0 0 2px var(--calcite-ui-brand)}/*!@:host([appearance=outline][color=blue]) button:active, :host([appearance=outline][color=blue]) a:active*/[appearance=outline][color=blue].sc-calcite-button-h button.sc-calcite-button:active,[appearance=outline][color=blue].sc-calcite-button-h a.sc-calcite-button:active{border-color:var(--calcite-ui-brand-press);color:var(--calcite-ui-brand-press);-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-brand-press);box-shadow:inset 0 0 0 2px var(--calcite-ui-brand-press)}/*!@:host([appearance=outline][color=blue]) button calcite-loader,\n:host([appearance=outline][color=blue]) a calcite-loader*/[appearance=outline][color=blue].sc-calcite-button-h button.sc-calcite-button calcite-loader.sc-calcite-button,[appearance=outline][color=blue].sc-calcite-button-h a.sc-calcite-button calcite-loader.sc-calcite-button{color:var(--calcite-ui-brand)}/*!@:host([appearance=outline][color=red]) button, :host([appearance=outline][color=red]) a*/[appearance=outline][color=red].sc-calcite-button-h button.sc-calcite-button,[appearance=outline][color=red].sc-calcite-button-h a.sc-calcite-button{border-color:var(--calcite-ui-danger);color:var(--calcite-ui-danger)}/*!@:host([appearance=outline][color=red]) button:hover, :host([appearance=outline][color=red]) a:hover*/[appearance=outline][color=red].sc-calcite-button-h button.sc-calcite-button:hover,[appearance=outline][color=red].sc-calcite-button-h a.sc-calcite-button:hover{border-color:var(--calcite-ui-danger-hover);color:var(--calcite-ui-danger-hover);-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-danger-hover);box-shadow:inset 0 0 0 1px var(--calcite-ui-danger-hover)}/*!@:host([appearance=outline][color=red]) button:focus, :host([appearance=outline][color=red]) a:focus*/[appearance=outline][color=red].sc-calcite-button-h button.sc-calcite-button:focus,[appearance=outline][color=red].sc-calcite-button-h a.sc-calcite-button:focus{border-color:var(--calcite-ui-danger);color:var(--calcite-ui-danger);-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-danger);box-shadow:inset 0 0 0 2px var(--calcite-ui-danger)}/*!@:host([appearance=outline][color=red]) button:active, :host([appearance=outline][color=red]) a:active*/[appearance=outline][color=red].sc-calcite-button-h button.sc-calcite-button:active,[appearance=outline][color=red].sc-calcite-button-h a.sc-calcite-button:active{border-color:var(--calcite-ui-danger-press);color:var(--calcite-ui-danger-press);-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-danger-press);box-shadow:inset 0 0 0 2px var(--calcite-ui-danger-press)}/*!@:host([appearance=outline][color=red]) button calcite-loader,\n:host([appearance=outline][color=red]) a calcite-loader*/[appearance=outline][color=red].sc-calcite-button-h button.sc-calcite-button calcite-loader.sc-calcite-button,[appearance=outline][color=red].sc-calcite-button-h a.sc-calcite-button calcite-loader.sc-calcite-button{color:var(--calcite-ui-danger)}/*!@:host([appearance=outline][color=neutral]) button, :host([appearance=outline][color=neutral]) a*/[appearance=outline][color=neutral].sc-calcite-button-h button.sc-calcite-button,[appearance=outline][color=neutral].sc-calcite-button-h a.sc-calcite-button{color:var(--calcite-ui-text-1);border-color:var(--calcite-ui-foreground-3)}/*!@:host([appearance=outline][color=neutral]) button:hover,\n:host([appearance=outline][color=neutral]) a:hover*/[appearance=outline][color=neutral].sc-calcite-button-h button.sc-calcite-button:hover,[appearance=outline][color=neutral].sc-calcite-button-h a.sc-calcite-button:hover{-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-foreground-3);box-shadow:inset 0 0 0 1px var(--calcite-ui-foreground-3)}/*!@:host([appearance=outline][color=neutral]) button:focus,\n:host([appearance=outline][color=neutral]) a:focus*/[appearance=outline][color=neutral].sc-calcite-button-h button.sc-calcite-button:focus,[appearance=outline][color=neutral].sc-calcite-button-h a.sc-calcite-button:focus{-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-foreground-3);box-shadow:inset 0 0 0 2px var(--calcite-ui-foreground-3)}/*!@:host([appearance=outline][color=neutral]) button:active,\n:host([appearance=outline][color=neutral]) a:active*/[appearance=outline][color=neutral].sc-calcite-button-h button.sc-calcite-button:active,[appearance=outline][color=neutral].sc-calcite-button-h a.sc-calcite-button:active{-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-foreground-3);box-shadow:inset 0 0 0 2px var(--calcite-ui-foreground-3)}/*!@:host([appearance=outline][color=neutral]) button calcite-loader, :host([appearance=outline][color=neutral]) a calcite-loader*/[appearance=outline][color=neutral].sc-calcite-button-h button.sc-calcite-button calcite-loader.sc-calcite-button,[appearance=outline][color=neutral].sc-calcite-button-h a.sc-calcite-button calcite-loader.sc-calcite-button{color:var(--calcite-ui-text-1)}/*!@:host([appearance=outline][color=inverse]) button, :host([appearance=outline][color=inverse]) a*/[appearance=outline][color=inverse].sc-calcite-button-h button.sc-calcite-button,[appearance=outline][color=inverse].sc-calcite-button-h a.sc-calcite-button{color:var(--calcite-ui-text-1);border-color:var(--calcite-ui-inverse)}/*!@:host([appearance=outline][color=inverse]) button:hover,\n:host([appearance=outline][color=inverse]) a:hover*/[appearance=outline][color=inverse].sc-calcite-button-h button.sc-calcite-button:hover,[appearance=outline][color=inverse].sc-calcite-button-h a.sc-calcite-button:hover{border-color:var(--calcite-ui-inverse-hover);-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-inverse-hover);box-shadow:inset 0 0 0 1px var(--calcite-ui-inverse-hover)}/*!@:host([appearance=outline][color=inverse]) button:focus,\n:host([appearance=outline][color=inverse]) a:focus*/[appearance=outline][color=inverse].sc-calcite-button-h button.sc-calcite-button:focus,[appearance=outline][color=inverse].sc-calcite-button-h a.sc-calcite-button:focus{border-color:var(--calcite-ui-inverse);-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-inverse);box-shadow:inset 0 0 0 2px var(--calcite-ui-inverse)}/*!@:host([appearance=outline][color=inverse]) button:active,\n:host([appearance=outline][color=inverse]) a:active*/[appearance=outline][color=inverse].sc-calcite-button-h button.sc-calcite-button:active,[appearance=outline][color=inverse].sc-calcite-button-h a.sc-calcite-button:active{border-color:var(--calcite-ui-inverse-press);-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-inverse-press);box-shadow:inset 0 0 0 2px var(--calcite-ui-inverse-press)}/*!@:host([appearance=outline][color=inverse]) button calcite-loader, :host([appearance=outline][color=inverse]) a calcite-loader*/[appearance=outline][color=inverse].sc-calcite-button-h button.sc-calcite-button calcite-loader.sc-calcite-button,[appearance=outline][color=inverse].sc-calcite-button-h a.sc-calcite-button calcite-loader.sc-calcite-button{color:var(--calcite-ui-text-1)}/*!@:host([appearance=clear]) button, :host([appearance=clear]) a*/[appearance=clear].sc-calcite-button-h button.sc-calcite-button,[appearance=clear].sc-calcite-button-h a.sc-calcite-button{border-width:1px;border-style:solid;background-color:transparent;-webkit-box-shadow:inset 0 0 0 1px transparent;box-shadow:inset 0 0 0 1px transparent}/*!@:host([appearance=clear][color=blue]) button, :host([appearance=clear][color=blue]) a*/[appearance=clear][color=blue].sc-calcite-button-h button.sc-calcite-button,[appearance=clear][color=blue].sc-calcite-button-h a.sc-calcite-button{border-color:var(--calcite-ui-brand);color:var(--calcite-ui-brand)}/*!@:host([appearance=clear][color=blue]) button:hover, :host([appearance=clear][color=blue]) a:hover*/[appearance=clear][color=blue].sc-calcite-button-h button.sc-calcite-button:hover,[appearance=clear][color=blue].sc-calcite-button-h a.sc-calcite-button:hover{border-color:var(--calcite-ui-brand-hover);color:var(--calcite-ui-brand-hover);-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-brand-hover);box-shadow:inset 0 0 0 1px var(--calcite-ui-brand-hover)}/*!@:host([appearance=clear][color=blue]) button:focus, :host([appearance=clear][color=blue]) a:focus*/[appearance=clear][color=blue].sc-calcite-button-h button.sc-calcite-button:focus,[appearance=clear][color=blue].sc-calcite-button-h a.sc-calcite-button:focus{border-color:var(--calcite-ui-brand);color:var(--calcite-ui-brand);-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-brand);box-shadow:inset 0 0 0 2px var(--calcite-ui-brand)}/*!@:host([appearance=clear][color=blue]) button:active, :host([appearance=clear][color=blue]) a:active*/[appearance=clear][color=blue].sc-calcite-button-h button.sc-calcite-button:active,[appearance=clear][color=blue].sc-calcite-button-h a.sc-calcite-button:active{border-color:var(--calcite-ui-brand-press);color:var(--calcite-ui-brand-press);-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-brand-press);box-shadow:inset 0 0 0 2px var(--calcite-ui-brand-press)}/*!@:host([appearance=clear][color=blue]) button calcite-loader,\n:host([appearance=clear][color=blue]) a calcite-loader*/[appearance=clear][color=blue].sc-calcite-button-h button.sc-calcite-button calcite-loader.sc-calcite-button,[appearance=clear][color=blue].sc-calcite-button-h a.sc-calcite-button calcite-loader.sc-calcite-button{color:var(--calcite-ui-brand)}/*!@:host([appearance=clear][color=red]) button, :host([appearance=clear][color=red]) a*/[appearance=clear][color=red].sc-calcite-button-h button.sc-calcite-button,[appearance=clear][color=red].sc-calcite-button-h a.sc-calcite-button{border-color:var(--calcite-ui-danger);color:var(--calcite-ui-danger)}/*!@:host([appearance=clear][color=red]) button:hover, :host([appearance=clear][color=red]) a:hover*/[appearance=clear][color=red].sc-calcite-button-h button.sc-calcite-button:hover,[appearance=clear][color=red].sc-calcite-button-h a.sc-calcite-button:hover{border-color:var(--calcite-ui-danger-hover);color:var(--calcite-ui-danger-hover);-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-danger-hover);box-shadow:inset 0 0 0 1px var(--calcite-ui-danger-hover)}/*!@:host([appearance=clear][color=red]) button:focus, :host([appearance=clear][color=red]) a:focus*/[appearance=clear][color=red].sc-calcite-button-h button.sc-calcite-button:focus,[appearance=clear][color=red].sc-calcite-button-h a.sc-calcite-button:focus{border-color:var(--calcite-ui-danger);color:var(--calcite-ui-danger);-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-danger);box-shadow:inset 0 0 0 2px var(--calcite-ui-danger)}/*!@:host([appearance=clear][color=red]) button:active, :host([appearance=clear][color=red]) a:active*/[appearance=clear][color=red].sc-calcite-button-h button.sc-calcite-button:active,[appearance=clear][color=red].sc-calcite-button-h a.sc-calcite-button:active{border-color:var(--calcite-ui-danger-press);color:var(--calcite-ui-danger-press);-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-danger-press);box-shadow:inset 0 0 0 2px var(--calcite-ui-danger-press)}/*!@:host([appearance=clear][color=red]) button calcite-loader,\n:host([appearance=clear][color=red]) a calcite-loader*/[appearance=clear][color=red].sc-calcite-button-h button.sc-calcite-button calcite-loader.sc-calcite-button,[appearance=clear][color=red].sc-calcite-button-h a.sc-calcite-button calcite-loader.sc-calcite-button{color:var(--calcite-ui-danger)}/*!@:host([appearance=clear][color=neutral]) button, :host([appearance=clear][color=neutral]) a*/[appearance=clear][color=neutral].sc-calcite-button-h button.sc-calcite-button,[appearance=clear][color=neutral].sc-calcite-button-h a.sc-calcite-button{color:var(--calcite-ui-text-1);border-color:var(--calcite-ui-foreground-3)}/*!@:host([appearance=clear][color=neutral]) button:hover,\n:host([appearance=clear][color=neutral]) a:hover*/[appearance=clear][color=neutral].sc-calcite-button-h button.sc-calcite-button:hover,[appearance=clear][color=neutral].sc-calcite-button-h a.sc-calcite-button:hover{-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-foreground-3);box-shadow:inset 0 0 0 1px var(--calcite-ui-foreground-3)}/*!@:host([appearance=clear][color=neutral]) button:focus,\n:host([appearance=clear][color=neutral]) a:focus*/[appearance=clear][color=neutral].sc-calcite-button-h button.sc-calcite-button:focus,[appearance=clear][color=neutral].sc-calcite-button-h a.sc-calcite-button:focus{-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-foreground-3);box-shadow:inset 0 0 0 2px var(--calcite-ui-foreground-3)}/*!@:host([appearance=clear][color=neutral]) button:active,\n:host([appearance=clear][color=neutral]) a:active*/[appearance=clear][color=neutral].sc-calcite-button-h button.sc-calcite-button:active,[appearance=clear][color=neutral].sc-calcite-button-h a.sc-calcite-button:active{-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-foreground-3);box-shadow:inset 0 0 0 2px var(--calcite-ui-foreground-3)}/*!@:host([appearance=clear][color=neutral]) button calcite-loader, :host([appearance=clear][color=neutral]) a calcite-loader*/[appearance=clear][color=neutral].sc-calcite-button-h button.sc-calcite-button calcite-loader.sc-calcite-button,[appearance=clear][color=neutral].sc-calcite-button-h a.sc-calcite-button calcite-loader.sc-calcite-button{color:var(--calcite-ui-text-1)}/*!@:host([appearance=clear][color=inverse]) button, :host([appearance=clear][color=inverse]) a*/[appearance=clear][color=inverse].sc-calcite-button-h button.sc-calcite-button,[appearance=clear][color=inverse].sc-calcite-button-h a.sc-calcite-button{color:var(--calcite-ui-text-1);border-color:var(--calcite-ui-inverse)}/*!@:host([appearance=clear][color=inverse]) button:hover,\n:host([appearance=clear][color=inverse]) a:hover*/[appearance=clear][color=inverse].sc-calcite-button-h button.sc-calcite-button:hover,[appearance=clear][color=inverse].sc-calcite-button-h a.sc-calcite-button:hover{border-color:var(--calcite-ui-inverse-hover);-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-inverse-hover);box-shadow:inset 0 0 0 1px var(--calcite-ui-inverse-hover)}/*!@:host([appearance=clear][color=inverse]) button:focus,\n:host([appearance=clear][color=inverse]) a:focus*/[appearance=clear][color=inverse].sc-calcite-button-h button.sc-calcite-button:focus,[appearance=clear][color=inverse].sc-calcite-button-h a.sc-calcite-button:focus{border-color:var(--calcite-ui-inverse);-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-inverse);box-shadow:inset 0 0 0 2px var(--calcite-ui-inverse)}/*!@:host([appearance=clear][color=inverse]) button:active,\n:host([appearance=clear][color=inverse]) a:active*/[appearance=clear][color=inverse].sc-calcite-button-h button.sc-calcite-button:active,[appearance=clear][color=inverse].sc-calcite-button-h a.sc-calcite-button:active{border-color:var(--calcite-ui-inverse-press);-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-inverse-press);box-shadow:inset 0 0 0 2px var(--calcite-ui-inverse-press)}/*!@:host([appearance=clear][color=inverse]) button calcite-loader, :host([appearance=clear][color=inverse]) a calcite-loader*/[appearance=clear][color=inverse].sc-calcite-button-h button.sc-calcite-button calcite-loader.sc-calcite-button,[appearance=clear][color=inverse].sc-calcite-button-h a.sc-calcite-button calcite-loader.sc-calcite-button{color:var(--calcite-ui-text-1)}/*!@:host([appearance=outline][split-child=primary]) button,\n:host([appearance=clear][split-child=primary]) button*/[appearance=outline][split-child=primary].sc-calcite-button-h button.sc-calcite-button,[appearance=clear][split-child=primary].sc-calcite-button-h button.sc-calcite-button{border-inline-end-width:0;border-inline-start-width:1px}/*!@:host([appearance=outline][split-child=secondary]) button,\n:host([appearance=clear][split-child=secondary]) button*/[appearance=outline][split-child=secondary].sc-calcite-button-h button.sc-calcite-button,[appearance=clear][split-child=secondary].sc-calcite-button-h button.sc-calcite-button{border-inline-start-width:0;border-inline-end-width:1px}/*!@:host([appearance=transparent]:not(.enable-editing-button)) button, :host([appearance=transparent]:not(.enable-editing-button)) a*/[appearance=transparent].sc-calcite-button-h:not(.enable-editing-button) button.sc-calcite-button,[appearance=transparent].sc-calcite-button-h:not(.enable-editing-button) a.sc-calcite-button{background-color:transparent}/*!@:host([appearance=transparent]:not(.enable-editing-button)) button:hover, :host([appearance=transparent]:not(.enable-editing-button)) button:focus,\n:host([appearance=transparent]:not(.enable-editing-button)) a:hover,\n:host([appearance=transparent]:not(.enable-editing-button)) a:focus*/[appearance=transparent].sc-calcite-button-h:not(.enable-editing-button) button.sc-calcite-button:hover,[appearance=transparent].sc-calcite-button-h:not(.enable-editing-button) button.sc-calcite-button:focus,[appearance=transparent].sc-calcite-button-h:not(.enable-editing-button) a.sc-calcite-button:hover,[appearance=transparent].sc-calcite-button-h:not(.enable-editing-button) a.sc-calcite-button:focus{background-color:var(--calcite-button-transparent-hover)}/*!@:host([appearance=transparent]:not(.enable-editing-button)) button:active,\n:host([appearance=transparent]:not(.enable-editing-button)) a:active*/[appearance=transparent].sc-calcite-button-h:not(.enable-editing-button) button.sc-calcite-button:active,[appearance=transparent].sc-calcite-button-h:not(.enable-editing-button) a.sc-calcite-button:active{background-color:var(--calcite-button-transparent-press)}/*!@:host([appearance=transparent][color=blue]) button,\n:host([appearance=transparent][color=blue]) a*/[appearance=transparent][color=blue].sc-calcite-button-h button.sc-calcite-button,[appearance=transparent][color=blue].sc-calcite-button-h a.sc-calcite-button{color:var(--calcite-ui-brand)}/*!@:host([appearance=transparent][color=blue]) button:hover,\n:host([appearance=transparent][color=blue]) a:hover*/[appearance=transparent][color=blue].sc-calcite-button-h button.sc-calcite-button:hover,[appearance=transparent][color=blue].sc-calcite-button-h a.sc-calcite-button:hover{color:var(--calcite-ui-brand-hover)}/*!@:host([appearance=transparent][color=blue]) button:focus,\n:host([appearance=transparent][color=blue]) a:focus*/[appearance=transparent][color=blue].sc-calcite-button-h button.sc-calcite-button:focus,[appearance=transparent][color=blue].sc-calcite-button-h a.sc-calcite-button:focus{color:var(--calcite-ui-brand)}/*!@:host([appearance=transparent][color=blue]) button:active,\n:host([appearance=transparent][color=blue]) a:active*/[appearance=transparent][color=blue].sc-calcite-button-h button.sc-calcite-button:active,[appearance=transparent][color=blue].sc-calcite-button-h a.sc-calcite-button:active{color:var(--calcite-ui-brand-press)}/*!@:host([appearance=transparent][color=blue]) button calcite-loader,\n:host([appearance=transparent][color=blue]) a calcite-loader*/[appearance=transparent][color=blue].sc-calcite-button-h button.sc-calcite-button calcite-loader.sc-calcite-button,[appearance=transparent][color=blue].sc-calcite-button-h a.sc-calcite-button calcite-loader.sc-calcite-button{color:var(--calcite-ui-brand)}/*!@:host([appearance=transparent][color=red]) button,\n:host([appearance=transparent][color=red]) a*/[appearance=transparent][color=red].sc-calcite-button-h button.sc-calcite-button,[appearance=transparent][color=red].sc-calcite-button-h a.sc-calcite-button{color:var(--calcite-ui-danger)}/*!@:host([appearance=transparent][color=red]) button:hover,\n:host([appearance=transparent][color=red]) a:hover*/[appearance=transparent][color=red].sc-calcite-button-h button.sc-calcite-button:hover,[appearance=transparent][color=red].sc-calcite-button-h a.sc-calcite-button:hover{color:var(--calcite-ui-danger-hover)}/*!@:host([appearance=transparent][color=red]) button:focus,\n:host([appearance=transparent][color=red]) a:focus*/[appearance=transparent][color=red].sc-calcite-button-h button.sc-calcite-button:focus,[appearance=transparent][color=red].sc-calcite-button-h a.sc-calcite-button:focus{color:var(--calcite-ui-danger)}/*!@:host([appearance=transparent][color=red]) button:active,\n:host([appearance=transparent][color=red]) a:active*/[appearance=transparent][color=red].sc-calcite-button-h button.sc-calcite-button:active,[appearance=transparent][color=red].sc-calcite-button-h a.sc-calcite-button:active{color:var(--calcite-ui-danger-press)}/*!@:host([appearance=transparent][color=red]) button calcite-loader,\n:host([appearance=transparent][color=red]) a calcite-loader*/[appearance=transparent][color=red].sc-calcite-button-h button.sc-calcite-button calcite-loader.sc-calcite-button,[appearance=transparent][color=red].sc-calcite-button-h a.sc-calcite-button calcite-loader.sc-calcite-button{color:var(--calcite-ui-danger)}/*!@:host([appearance=transparent][color=neutral]:not(.cancel-editing-button)) button, :host([appearance=transparent][color=neutral]:not(.cancel-editing-button)) a, :host([appearance=transparent][color=neutral]:not(.cancel-editing-button)) calcite-loader*/[appearance=transparent][color=neutral].sc-calcite-button-h:not(.cancel-editing-button) button.sc-calcite-button,[appearance=transparent][color=neutral].sc-calcite-button-h:not(.cancel-editing-button) a.sc-calcite-button,[appearance=transparent][color=neutral].sc-calcite-button-h:not(.cancel-editing-button) calcite-loader.sc-calcite-button{color:var(--calcite-ui-text-1)}/*!@:host([appearance=transparent][color=neutral].cancel-editing-button) button*/[appearance=transparent][color=neutral].cancel-editing-button.sc-calcite-button-h button.sc-calcite-button{border-top-width:1px;border-bottom-width:1px;color:var(--calcite-ui-text-3);border-top-color:var(--calcite-ui-border-input);border-bottom-color:var(--calcite-ui-border-input);border-bottom-style:solid;border-top-style:solid}/*!@:host([appearance=transparent][color=neutral].cancel-editing-button) button:not(.content--slotted)*/[appearance=transparent][color=neutral].cancel-editing-button.sc-calcite-button-h button.sc-calcite-button:not(.content--slotted){--calcite-button-padding-y:0}/*!@:host([appearance=transparent][color=neutral].cancel-editing-button) button:hover*/[appearance=transparent][color=neutral].cancel-editing-button.sc-calcite-button-h button.sc-calcite-button:hover{color:var(--calcite-ui-text-1)}/*!@:host([appearance=transparent][color=neutral].enable-editing-button) button*/[appearance=transparent][color=neutral].enable-editing-button.sc-calcite-button-h button.sc-calcite-button{background-color:transparent}/*!@:host(.confirm-changes-button) button:focus,\n:host(.cancel-editing-button) button:focus,\n:host(.enable-editing-button) button:focus*/.confirm-changes-button.sc-calcite-button-h button.sc-calcite-button:focus,.cancel-editing-button.sc-calcite-button-h button.sc-calcite-button:focus,.enable-editing-button.sc-calcite-button-h button.sc-calcite-button:focus{outline-offset:-2px}/*!@:host([appearance=transparent][color=inverse]) button, :host([appearance=transparent][color=inverse]) a, :host([appearance=transparent][color=inverse]) calcite-loader*/[appearance=transparent][color=inverse].sc-calcite-button-h button.sc-calcite-button,[appearance=transparent][color=inverse].sc-calcite-button-h a.sc-calcite-button,[appearance=transparent][color=inverse].sc-calcite-button-h calcite-loader.sc-calcite-button{color:var(--calcite-ui-text-inverse)}/*!@:host([scale=s]) button.content--slotted, :host([scale=s]) a.content--slotted*/[scale=s].sc-calcite-button-h button.content--slotted.sc-calcite-button,[scale=s].sc-calcite-button-h a.content--slotted.sc-calcite-button{font-size:var(--calcite-font-size--2);line-height:1rem}/*!@:host([scale=s][appearance=transparent]) button.content--slotted,\n:host([scale=s][appearance=transparent]) a.content--slotted*/[scale=s][appearance=transparent].sc-calcite-button-h button.content--slotted.sc-calcite-button,[scale=s][appearance=transparent].sc-calcite-button-h a.content--slotted.sc-calcite-button{--calcite-button-padding-x:0.5rem;--calcite-button-padding-y:0.25rem}/*!@:host([scale=m]) button.content--slotted,\n:host([scale=m]) a.content--slotted*/[scale=m].sc-calcite-button-h button.content--slotted.sc-calcite-button,[scale=m].sc-calcite-button-h a.content--slotted.sc-calcite-button{--calcite-button-padding-x:11px;font-size:var(--calcite-font-size--1);line-height:1rem}/*!@:host([scale=m]:not([appearance=transparent])) button.content--slotted,\n:host([scale=m]:not([appearance=transparent])) a.content--slotted*/[scale=m].sc-calcite-button-h:not([appearance=transparent]) button.content--slotted.sc-calcite-button,[scale=m].sc-calcite-button-h:not([appearance=transparent]) a.content--slotted.sc-calcite-button{--calcite-button-padding-y:7px}/*!@:host([scale=m][appearance=transparent]) button.content--slotted,\n:host([scale=m][appearance=transparent]) a.content--slotted*/[scale=m][appearance=transparent].sc-calcite-button-h button.content--slotted.sc-calcite-button,[scale=m][appearance=transparent].sc-calcite-button-h a.content--slotted.sc-calcite-button{--calcite-button-padding-x:0.75rem;--calcite-button-padding-y:0.5rem}/*!@:host([scale=l]) button.content--slotted,\n:host([scale=l]) a.content--slotted*/[scale=l].sc-calcite-button-h button.content--slotted.sc-calcite-button,[scale=l].sc-calcite-button-h a.content--slotted.sc-calcite-button{--calcite-button-padding-x:15px;font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@:host([scale=l]:not([appearance=transparent])) button.content--slotted,\n:host([scale=l]:not([appearance=transparent])) a.content--slotted*/[scale=l].sc-calcite-button-h:not([appearance=transparent]) button.content--slotted.sc-calcite-button,[scale=l].sc-calcite-button-h:not([appearance=transparent]) a.content--slotted.sc-calcite-button{--calcite-button-padding-y:11px}/*!@:host([scale=l][appearance=transparent]) button.content--slotted,\n:host([scale=l][appearance=transparent]) a.content--slotted*/[scale=l][appearance=transparent].sc-calcite-button-h button.content--slotted.sc-calcite-button,[scale=l][appearance=transparent].sc-calcite-button-h a.content--slotted.sc-calcite-button{--calcite-button-padding-x:1rem;--calcite-button-padding-y:0.75rem}/*!@:host([scale=s]) button:not(.content--slotted),\n:host([scale=s]) a:not(.content--slotted)*/[scale=s].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted),[scale=s].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted){--calcite-button-padding-x:0.125rem;--calcite-button-padding-y:3px;width:1.5rem;font-size:var(--calcite-font-size-0);line-height:1.25rem;min-height:1.5rem}/*!@:host([scale=s][appearance=transparent]) button:not(.content--slotted),\n:host([scale=s][appearance=transparent]) a:not(.content--slotted)*/[scale=s][appearance=transparent].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted),[scale=s][appearance=transparent].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted){--calcite-button-padding-y:0.25rem}/*!@:host([scale=m]) button:not(.content--slotted),\n:host([scale=m]) a:not(.content--slotted)*/[scale=m].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted),[scale=m].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted){--calcite-button-padding-x:0.125rem;--calcite-button-padding-y:7px;width:2rem;font-size:var(--calcite-font-size-0);line-height:1.25rem;min-height:2rem}/*!@:host([scale=m][appearance=transparent]) button:not(.content--slotted),\n:host([scale=m][appearance=transparent]) a:not(.content--slotted)*/[scale=m][appearance=transparent].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted),[scale=m][appearance=transparent].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted){--calcite-button-padding-y:0.5rem}/*!@:host([scale=l]) button:not(.content--slotted),\n:host([scale=l]) a:not(.content--slotted)*/[scale=l].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted),[scale=l].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted){--calcite-button-padding-x:0.125rem;--calcite-button-padding-y:9px;width:2.75rem;font-size:var(--calcite-font-size-0);line-height:1.25rem;min-height:2.75rem}/*!@:host([scale=l][appearance=transparent]) button:not(.content--slotted),\n:host([scale=l][appearance=transparent]) a:not(.content--slotted)*/[scale=l][appearance=transparent].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted),[scale=l][appearance=transparent].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted){--calcite-button-padding-y:0.625rem}/*!@:host([scale=s][icon-start][icon-end]) button:not(.content--slotted),\n:host([scale=s][icon-start][icon-end]) a:not(.content--slotted)*/[scale=s][icon-start][icon-end].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted),[scale=s][icon-start][icon-end].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted){--calcite-button-padding-x:23px;height:1.5rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@:host([scale=s][icon-start][icon-end][appearance=transparent]) button:not(.content--slotted),\n:host([scale=s][icon-start][icon-end][appearance=transparent]) a:not(.content--slotted)*/[scale=s][icon-start][icon-end][appearance=transparent].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted),[scale=s][icon-start][icon-end][appearance=transparent].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted){--calcite-button-padding-x:1.5rem}/*!@:host([scale=m][icon-start][icon-end]) button:not(.content--slotted),\n:host([scale=m][icon-start][icon-end]) a:not(.content--slotted)*/[scale=m][icon-start][icon-end].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted),[scale=m][icon-start][icon-end].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted){--calcite-button-padding-x:2rem;height:2rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@:host([scale=m][icon-start][icon-end][appearance=transparent]) button:not(.content--slotted),\n:host([scale=m][icon-start][icon-end][appearance=transparent]) a:not(.content--slotted)*/[scale=m][icon-start][icon-end][appearance=transparent].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted),[scale=m][icon-start][icon-end][appearance=transparent].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted){--calcite-button-padding-x:33px}/*!@:host([scale=l][icon-start][icon-end]) button:not(.content--slotted),\n:host([scale=l][icon-start][icon-end]) a:not(.content--slotted)*/[scale=l][icon-start][icon-end].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted),[scale=l][icon-start][icon-end].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted){--calcite-button-padding-x:43px;height:2.75rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@:host([scale=l][icon-start][icon-end]) button:not(.content--slotted) .icon--start + .icon--end,\n:host([scale=l][icon-start][icon-end]) a:not(.content--slotted) .icon--start + .icon--end*/[scale=l][icon-start][icon-end].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted) .icon--start.sc-calcite-button+.icon--end.sc-calcite-button,[scale=l][icon-start][icon-end].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted) .icon--start.sc-calcite-button+.icon--end.sc-calcite-button{-webkit-margin-start:1rem;margin-inline-start:1rem}/*!@:host([scale=l][icon-start][icon-end][appearance=transparent]) button:not(.content--slotted),\n:host([scale=l][icon-start][icon-end][appearance=transparent]) a:not(.content--slotted)*/[scale=l][icon-start][icon-end][appearance=transparent].sc-calcite-button-h button.sc-calcite-button:not(.content--slotted),[scale=l][icon-start][icon-end][appearance=transparent].sc-calcite-button-h a.sc-calcite-button:not(.content--slotted){--calcite-button-padding-x:2.75rem}";

/** Passing a 'href' will render an anchor link, instead of a button. Role will be set to link, or button, depending on this. */
/** It is the consumers responsibility to add aria information, rel, target, for links, and any button attributes for form submission */
/** @slot - A slot for adding text. */
class Button {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** optionally specify alignment of button elements. */
    this.alignment = "center";
    /** specify the appearance style of the button, defaults to solid. */
    this.appearance = "solid";
    /** specify the color of the button, defaults to blue */
    this.color = "blue";
    /** is the button disabled  */
    this.disabled = false;
    /** string to override English loading text
     * @default "Loading"
     */
    this.intlLoading = TEXT$j.loading;
    /** optionally add a calcite-loader component to the button, disabling interaction.  */
    this.loading = false;
    /** optionally add a round style to the button  */
    this.round = false;
    /** specify the scale of the button, defaults to m */
    this.scale = "m";
    /** is the button a child of a calcite-split-button */
    this.splitChild = false;
    /** specify the width of the button, defaults to auto */
    this.width = "auto";
    /** watches for changing text content **/
    this.mutationObserver = createObserver();
    /** determine if there is slotted content for styling purposes */
    this.hasContent = false;
    /** determine if loader present for styling purposes */
    this.hasLoader = false;
    // act on a requested or nearby form based on type
    this.handleClick = () => {
      const { formEl, type } = this;
      // this.type refers to type attribute, not child element type
      if (!this.href && type !== "button") {
        if (type === "submit") {
          formEl === null || formEl === void 0 ? void 0 : formEl.requestSubmit();
        }
        else if (type === "reset") {
          formEl === null || formEl === void 0 ? void 0 : formEl.reset();
        }
      }
    };
  }
  loadingChanged(newValue, oldValue) {
    if (!!newValue && !oldValue) {
      this.hasLoader = true;
    }
    if (!newValue && !!oldValue) {
      window.setTimeout(() => {
        this.hasLoader = false;
      }, 300);
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    this.hasLoader = this.loading;
    this.setupTextContentObserver();
    connectLabel(this);
    this.formEl = closestElementCrossShadowBoundary(this.el, this.form ? `#${this.form}` : "form");
  }
  disconnectedCallback() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    disconnectLabel(this);
    this.formEl = null;
  }
  componentWillLoad() {
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  render() {
    const childElType = this.href ? "a" : "button";
    const Tag = childElType;
    const loaderNode = this.hasLoader ? (hAsync("div", { class: CSS$J.buttonLoader }, hAsync("calcite-loader", { active: true, class: this.loading ? CSS$J.loadingIn : CSS$J.loadingOut, inline: true, label: this.intlLoading, scale: "m" }))) : null;
    const iconStartEl = (hAsync("calcite-icon", { class: { [CSS$J.icon]: true, [CSS$J.iconStart]: true }, flipRtl: this.iconFlipRtl === "start" || this.iconFlipRtl === "both", icon: this.iconStart, scale: "s" }));
    const iconEndEl = (hAsync("calcite-icon", { class: { [CSS$J.icon]: true, [CSS$J.iconEnd]: true }, flipRtl: this.iconFlipRtl === "end" || this.iconFlipRtl === "both", icon: this.iconEnd, scale: "s" }));
    const contentEl = (hAsync("span", { class: CSS$J.content }, hAsync("slot", null)));
    return (hAsync(Tag, { "aria-label": getLabelText(this), class: {
        [CSS$J.contentSlotted]: this.hasContent,
        [CSS$J.iconStartEmpty]: !this.iconStart,
        [CSS$J.iconEndEmpty]: !this.iconEnd
      }, disabled: this.disabled || this.loading, href: childElType === "a" && this.href, name: childElType === "button" && this.name, onClick: this.handleClick, ref: (el) => (this.childEl = el), rel: childElType === "a" && this.rel, tabIndex: this.disabled || this.loading ? -1 : null, target: childElType === "a" && this.target, type: childElType === "button" && this.type }, loaderNode, this.iconStart ? iconStartEl : null, this.hasContent ? contentEl : null, this.iconEnd ? iconEndEl : null));
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    this.childEl.focus();
  }
  updateHasContent() {
    var _a, _b;
    const slottedContent = this.el.textContent.trim().length > 0 || this.el.childNodes.length > 0;
    this.hasContent =
      this.el.childNodes.length === 1 && ((_a = this.el.childNodes[0]) === null || _a === void 0 ? void 0 : _a.nodeName) === "#text"
        ? ((_b = this.el.textContent) === null || _b === void 0 ? void 0 : _b.trim().length) > 0
        : slottedContent;
  }
  setupTextContentObserver() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el, { childList: true, subtree: true });
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  onLabelClick() {
    this.handleClick();
    this.setFocus();
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "loading": ["loadingChanged"]
  }; }
  static get style() { return buttonCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-button",
    "$members$": {
      "alignment": [513],
      "appearance": [513],
      "label": [1],
      "color": [513],
      "disabled": [516],
      "href": [513],
      "iconEnd": [513, "icon-end"],
      "iconFlipRtl": [513, "icon-flip-rtl"],
      "iconStart": [513, "icon-start"],
      "intlLoading": [1, "intl-loading"],
      "loading": [516],
      "name": [1],
      "rel": [1],
      "form": [1],
      "round": [516],
      "scale": [513],
      "splitChild": [520, "split-child"],
      "target": [1],
      "type": [1025],
      "width": [513],
      "hasContent": [32],
      "hasLoader": [32],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["alignment", "alignment"], ["appearance", "appearance"], ["color", "color"], ["disabled", "disabled"], ["href", "href"], ["iconEnd", "icon-end"], ["iconFlipRtl", "icon-flip-rtl"], ["iconStart", "icon-start"], ["loading", "loading"], ["round", "round"], ["scale", "scale"], ["splitChild", "split-child"], ["width", "width"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$I = {
  container: "container",
  header: "header",
  footer: "footer",
  title: "title",
  subtitle: "subtitle",
  thumbnailWrapper: "thumbnail-wrapper",
  checkboxWrapper: "checkbox-wrapper"
};
const SLOTS$j = {
  thumbnail: "thumbnail",
  title: "title",
  subtitle: "subtitle",
  footerLeading: "footer-leading",
  footerTrailing: "footer-trailing"
};
const TEXT$i = {
  select: "Select",
  deselect: "Deselect",
  loading: "Loading"
};

const cardCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-card:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-card{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-card{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-card{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-card{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-card{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-card:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-card-h{display:none}/*!@:host*/.sc-calcite-card-h{display:block;max-width:100%}/*!@:host .calcite-card-container*/.sc-calcite-card-h .calcite-card-container.sc-calcite-card{position:relative;display:-ms-flexbox;display:flex;height:100%;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-2);background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-3);--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);border-radius:var(--calcite-border-radius-base)}/*!@:host .calcite-card-container:hover*/.sc-calcite-card-h .calcite-card-container.sc-calcite-card:hover{--tw-shadow:0 4px 16px 0 rgba(0, 0, 0, 0.08), 0 2px 8px 0 rgba(0, 0, 0, 0.04);--tw-shadow-colored:0 4px 16px 0 var(--tw-shadow-color), 0 2px 8px 0 var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);z-index:1}/*!@:host .calcite-card-container:active*/.sc-calcite-card-h .calcite-card-container.sc-calcite-card:active{--tw-shadow:0 1px 6px -1px rgba(0, 0, 0, 0.16), 0 1px 2px -1px rgba(0, 0, 0, 0.08);--tw-shadow-colored:0 1px 6px -1px var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);-webkit-transition-duration:75ms;transition-duration:75ms;z-index:1}/*!@.container*/.container.sc-calcite-card{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column}/*!@:host([loading]) .calcite-card-container *:not(calcite-loader):not(.calcite-card-loader-container)*/[loading].sc-calcite-card-h .calcite-card-container.sc-calcite-card *.sc-calcite-card:not(calcite-loader):not(.calcite-card-loader-container){pointer-events:none;opacity:0}/*!@:host([loading]) .calcite-card-loader-container*/[loading].sc-calcite-card-h .calcite-card-loader-container.sc-calcite-card{position:absolute;top:0px;right:0px;bottom:0px;left:0px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}/*!@.header, .footer*/.header.sc-calcite-card,.footer.sc-calcite-card{display:-ms-flexbox;display:flex;padding-left:0.75rem;padding-right:0.75rem;padding-top:0.75rem;padding-bottom:0.25rem}/*!@.header*/.header.sc-calcite-card{-ms-flex-direction:column;flex-direction:column}/*!@.footer*/.footer.sc-calcite-card{margin-top:auto;-ms-flex-direction:row;flex-direction:row;-ms-flex-line-pack:justify;align-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding-left:0.75rem;padding-right:0.75rem;padding-top:0.25rem;padding-bottom:0.75rem}/*!@.card-content*/.card-content.sc-calcite-card{padding:0.75rem;font-size:var(--calcite-font-size--2);line-height:1.375;color:var(--calcite-ui-text-3)}/*!@:host([selectable]) .calcite-card-container:active*/[selectable].sc-calcite-card-h .calcite-card-container.sc-calcite-card:active{--tw-shadow:0 1px 6px -1px rgba(0, 0, 0, 0.16), 0 1px 2px -1px rgba(0, 0, 0, 0.08);--tw-shadow-colored:0 1px 6px -1px var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@:host([selected]) .calcite-card-container*/[selected].sc-calcite-card-h .calcite-card-container.sc-calcite-card{border-color:var(--calcite-ui-brand)}/*!@slot[name=title]::slotted(*), *::slotted([slot=title])*/slot[name=title].sc-calcite-card-s>*,*.sc-calcite-card-s>[slot=title]{margin:0px;font-size:var(--calcite-font-size--1);line-height:1.375;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1)}/*!@slot[name=subtitle]::slotted(*), *::slotted([slot=subtitle])*/slot[name=subtitle].sc-calcite-card-s>*,*.sc-calcite-card-s>[slot=subtitle]{margin:0px;margin-top:0.5rem;font-size:var(--calcite-font-size--2);line-height:1.375;font-weight:var(--calcite-font-weight-normal);color:var(--calcite-ui-text-2)}/*!@slot[name=thumbnail]::slotted(img), img::slotted([slot=thumbnail])*/slot[name=thumbnail].sc-calcite-card-s>img,img.sc-calcite-card-s>[slot=thumbnail]{min-width:100%;max-width:100%}/*!@slot[name=footer-leading]::slotted(*), *::slotted([slot=footer-leading])*/slot[name=footer-leading].sc-calcite-card-s>*,*.sc-calcite-card-s>[slot=footer-leading]{-ms-flex-item-align:center;align-self:center;font-size:var(--calcite-font-size--2);line-height:1.375;-webkit-margin-end:auto;margin-inline-end:auto}/*!@slot[name=footer-trailing]::slotted(*), *::slotted([slot=footer-trailing])*/slot[name=footer-trailing].sc-calcite-card-s>*,*.sc-calcite-card-s>[slot=footer-trailing]{-ms-flex-item-align:center;align-self:center;font-size:var(--calcite-font-size--2);line-height:1.375}/*!@.thumbnail-wrapper*/.thumbnail-wrapper.sc-calcite-card{font-size:var(--calcite-font-size-0);line-height:1.375}/*!@.checkbox-wrapper*/.checkbox-wrapper.sc-calcite-card{position:absolute;margin:0px;padding:0px;top:0.5rem;inset-inline-end:0.5rem}";

/** Cards do not include a grid or bounding container
 * - cards will expand to fit the width of their container
 */
/**
 * @slot - A slot for adding subheader/description content.
 * @slot thumbnail - A slot for adding a thumbnail to the card.
 * @slot title - A slot for adding a card title.
 * @slot subtitle - A slot for adding a card subtitle or short summary.
 * @slot footer-leading - A slot for adding a leading footer.
 * @slot footer-trailing - A slot for adding a trailing footer.
 */
class Card {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteCardSelect = createEvent(this, "calciteCardSelect", 7);
    //--------------------------------------------------------------------------
    //
    //  Public Properties
    //
    //--------------------------------------------------------------------------
    /**  When true, the cards content is waiting to be loaded. This state shows a busy indicator.*/
    this.loading = false;
    /** Indicates whether the card is selected. */
    this.selected = false;
    /** Indicates whether the card is selectable. */
    this.selectable = false;
    /** string to override English loading text
     * @default "Loading"
     */
    this.intlLoading = TEXT$i.loading;
    /** string to override English select text for checkbox when selectable is true
     * @default "Select"
     */
    this.intlSelect = TEXT$i.select;
    /** string to override English deselect text for checkbox when selectable is true
     * @default "Deselect"
     */
    this.intlDeselect = TEXT$i.deselect;
    //--------------------------------------------------------------------------
    //
    //  Private State/Props
    //
    //--------------------------------------------------------------------------
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.cardSelectClick = () => {
      this.selectCard();
    };
    this.cardSelectKeyDown = (e) => {
      switch (e.key) {
        case " ":
        case "Enter":
          this.selectCard();
          e.preventDefault();
          break;
      }
    };
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disonnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  render() {
    return (hAsync("div", { class: "calcite-card-container" }, this.loading ? (hAsync("div", { class: "calcite-card-loader-container" }, hAsync("calcite-loader", { active: true, label: this.intlLoading }))) : null, hAsync("section", { "aria-busy": this.loading.toString(), class: { [CSS$I.container]: true } }, this.selectable ? this.renderCheckbox() : null, this.renderThumbnail(), this.renderHeader(), hAsync("div", { class: "card-content" }, hAsync("slot", null)), this.renderFooter())));
  }
  selectCard() {
    this.selected = !this.selected;
    this.calciteCardSelect.emit();
  }
  renderThumbnail() {
    return getSlotted(this.el, SLOTS$j.thumbnail) ? (hAsync("div", { class: CSS$I.thumbnailWrapper, key: "thumbnail-wrapper" }, hAsync("slot", { name: SLOTS$j.thumbnail }))) : null;
  }
  renderCheckbox() {
    const checkboxLabel = this.selected ? this.intlDeselect : this.intlSelect;
    return (hAsync("calcite-label", { class: CSS$I.checkboxWrapper, onClick: this.cardSelectClick, onKeyDown: this.cardSelectKeyDown }, hAsync("calcite-checkbox", { checked: this.selected, label: checkboxLabel })));
  }
  renderHeader() {
    const { el } = this;
    const title = getSlotted(el, SLOTS$j.title);
    const subtitle = getSlotted(el, SLOTS$j.subtitle);
    const hasHeader = title || subtitle;
    return hasHeader ? (hAsync("header", { class: CSS$I.header }, hAsync("slot", { name: SLOTS$j.title }), hAsync("slot", { name: SLOTS$j.subtitle }))) : null;
  }
  renderFooter() {
    const { el } = this;
    const leadingFooter = getSlotted(el, SLOTS$j.footerLeading);
    const trailingFooter = getSlotted(el, SLOTS$j.footerTrailing);
    const hasFooter = leadingFooter || trailingFooter;
    return hasFooter ? (hAsync("footer", { class: CSS$I.footer }, hAsync("slot", { name: SLOTS$j.footerLeading }), hAsync("slot", { name: SLOTS$j.footerTrailing }))) : null;
  }
  get el() { return getElement(this); }
  static get style() { return cardCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-card",
    "$members$": {
      "loading": [516],
      "selected": [1540],
      "selectable": [516],
      "intlLoading": [1, "intl-loading"],
      "intlSelect": [1, "intl-select"],
      "intlDeselect": [1, "intl-deselect"]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["loading", "loading"], ["selected", "selected"], ["selectable", "selectable"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
/**
 * Exported for testing purposes.
 */
const hiddenFormInputSlotName = "hidden-form-input";
function isCheckable(component) {
  return "checked" in component;
}
const onFormResetMap = new WeakMap();
const formComponentSet = new WeakSet();
function hasRegisteredFormComponentParent(form, formComponentEl) {
  // we use events as a way to test for nested form-associated components across shadow bounds
  const formComponentRegisterEventName = "calciteInternalFormComponentRegister";
  let hasRegisteredFormComponentParent = false;
  form.addEventListener(formComponentRegisterEventName, (event) => {
    hasRegisteredFormComponentParent = event
      .composedPath()
      .some((element) => formComponentSet.has(element));
    event.stopPropagation();
  }, { once: true });
  formComponentEl.dispatchEvent(new CustomEvent(formComponentRegisterEventName, {
    bubbles: true,
    composed: true
  }));
  return hasRegisteredFormComponentParent;
}
/**
 * Helper to set up form interactions on connectedCallback.
 */
function connectForm(component) {
  const { el, value } = component;
  const form = closestElementCrossShadowBoundary(el, "form");
  if (!form || hasRegisteredFormComponentParent(form, el)) {
    return;
  }
  component.formEl = form;
  component.defaultValue = value;
  if (isCheckable(component)) {
    component.defaultChecked = component.checked;
  }
  const boundOnFormReset = (component.onFormReset || onFormReset).bind(component);
  form.addEventListener("reset", boundOnFormReset);
  formComponentSet.add(el);
}
function onFormReset() {
  if (isCheckable(this)) {
    this.checked = this.defaultChecked;
    return;
  }
  this.value = this.defaultValue;
}
/**
 * Helper to tear down form interactions on disconnectedCallback.
 */
function disconnectForm(component) {
  const { el, formEl } = component;
  if (!formEl) {
    return;
  }
  const boundOnFormReset = onFormResetMap.get(el);
  formEl.removeEventListener("reset", boundOnFormReset);
  onFormResetMap.delete(el);
  component.formEl = null;
  formComponentSet.delete(el);
}
/**
 * Helper for setting the default value on initialization after connectedCallback.
 *
 * Note that this is only needed if the default value cannot be determined on connectedCallback.
 */
function afterConnectDefaultValueSet(component, value) {
  component.defaultValue = value;
}
/**
 * Helper for maintaining a form-associated's hidden input in sync with the component.
 *
 * Based on Ionic's approach: https://github.com/ionic-team/ionic-framework/blob/e4bf052794af9aac07f887013b9250d2a045eba3/core/src/utils/helpers.ts#L198
 */
function syncHiddenFormInput(component) {
  const { el, formEl, name, value } = component;
  const { ownerDocument } = el;
  const inputs = el.querySelectorAll(`input[slot="${hiddenFormInputSlotName}"]`);
  if (!formEl || !name) {
    inputs.forEach((input) => input.remove());
    return;
  }
  const values = Array.isArray(value) ? value : [value];
  const extra = [];
  const seen = new Set();
  inputs.forEach((input) => {
    const valueMatch = values.find((val) => 
    /* intentional non-strict equality check */
    val == input.value);
    if (valueMatch != null) {
      seen.add(valueMatch);
      defaultSyncHiddenFormInput(component, input, valueMatch);
    }
    else {
      extra.push(input);
    }
  });
  let docFrag;
  values.forEach((value) => {
    if (seen.has(value)) {
      return;
    }
    let input = extra.pop();
    if (!input) {
      input = ownerDocument.createElement("input");
      input.slot = hiddenFormInputSlotName;
    }
    if (!docFrag) {
      docFrag = ownerDocument.createDocumentFragment();
    }
    docFrag.append(input);
    defaultSyncHiddenFormInput(component, input, value);
  });
  if (docFrag) {
    el.append(docFrag);
  }
  extra.forEach((input) => input.remove());
}
function defaultSyncHiddenFormInput(component, input, value) {
  var _a;
  const { defaultValue, disabled, name, required } = component;
  // keep in sync to prevent losing reset value
  input.defaultValue = defaultValue;
  input.disabled = disabled;
  input.name = name;
  input.required = required;
  input.tabIndex = -1;
  if (isCheckable(component)) {
    // keep in sync to prevent losing reset value
    input.defaultChecked = component.defaultChecked;
    // heuristic to support default/on mode from https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on
    input.value = component.checked ? value || "on" : "";
    // we disable the component when not checked to avoid having its value submitted
    if (!disabled && !component.checked) {
      input.disabled = true;
    }
  }
  else {
    input.value = value || "";
  }
  (_a = component.syncHiddenFormInput) === null || _a === void 0 ? void 0 : _a.call(component, input);
}
/**
 * Helper to render the slot for form-associated component's hidden input.
 *
 * If the component has a default slot, this must be placed at the bottom of the component's root container to ensure it is the last child.
 *
 * render(): VNode {
 *   <Host>
 *     <div class={CSS.container}>
 *     // ...
 *     <HiddenFormInputSlot component={this} />
 *     </div>
 *   </Host>
 * }
 *
 * Note that the hidden-form-input Sass mixin must be added to the component's style to apply specific styles.
 */
const HiddenFormInputSlot = ({ component }) => {
  syncHiddenFormInput(component);
  return hAsync("slot", { name: hiddenFormInputSlotName });
};

const checkboxCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-checkbox:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-checkbox{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-checkbox{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-checkbox{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-checkbox{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-checkbox{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-checkbox:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-checkbox-h{display:none}/*!@:host([scale=s])*/[scale=s].sc-calcite-checkbox-h{--calcite-checkbox-size:0.75rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-checkbox-h{--calcite-checkbox-size:var(--calcite-font-size--1)}/*!@:host([scale=l])*/[scale=l].sc-calcite-checkbox-h{--calcite-checkbox-size:1rem}/*!@:host*/.sc-calcite-checkbox-h{position:relative;display:-ms-inline-flexbox;display:inline-flex;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent}/*!@:host .check-svg*/.sc-calcite-checkbox-h .check-svg.sc-calcite-checkbox{pointer-events:none;-webkit-box-sizing:border-box;box-sizing:border-box;display:block;background-color:var(--calcite-ui-foreground-1);fill:currentColor;stroke:currentColor;stroke-width:1;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);overflow:hidden;width:var(--calcite-checkbox-size);height:var(--calcite-checkbox-size);-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-border-input);box-shadow:inset 0 0 0 1px var(--calcite-ui-border-input);color:var(--calcite-ui-background)}/*!@:host([checked]) .check-svg, :host([indeterminate]) .check-svg*/[checked].sc-calcite-checkbox-h .check-svg.sc-calcite-checkbox,[indeterminate].sc-calcite-checkbox-h .check-svg.sc-calcite-checkbox{background-color:var(--calcite-ui-brand);-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-brand);box-shadow:inset 0 0 0 1px var(--calcite-ui-brand)}/*!@:host([hovered]) .toggle .check-svg,\n:host .toggle:hover .check-svg*/[hovered].sc-calcite-checkbox-h .toggle.sc-calcite-checkbox .check-svg.sc-calcite-checkbox,.sc-calcite-checkbox-h .toggle.sc-calcite-checkbox:hover .check-svg.sc-calcite-checkbox{-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-brand);box-shadow:inset 0 0 0 2px var(--calcite-ui-brand)}/*!@:host .toggle:focus .check-svg,\n:host .toggle:active .check-svg*/.sc-calcite-checkbox-h .toggle.sc-calcite-checkbox:focus .check-svg.sc-calcite-checkbox,.sc-calcite-checkbox-h .toggle.sc-calcite-checkbox:active .check-svg.sc-calcite-checkbox{-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-brand), 0 0 0 2px var(--calcite-ui-foreground-1), 0 0 0 4px var(--calcite-ui-brand);box-shadow:inset 0 0 0 1px var(--calcite-ui-brand), 0 0 0 2px var(--calcite-ui-foreground-1), 0 0 0 4px var(--calcite-ui-brand);-webkit-transition:var(--calcite-animation-timing);transition:var(--calcite-animation-timing)}/*!@:host([disabled])*/[disabled].sc-calcite-checkbox-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-checkbox-h[disabled] .sc-calcite-checkbox-s>[calcite-hydrated][disabled],[disabled].sc-calcite-checkbox-h [calcite-hydrated][disabled].sc-calcite-checkbox{opacity:1}/*!@::slotted(input[slot=hidden-form-input])*/.sc-calcite-checkbox-s>input[slot=hidden-form-input]{bottom:0 !important;left:0 !important;margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;right:0 !important;top:0 !important;-webkit-transform:none !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}";

class Checkbox {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteInternalCheckboxBlur = createEvent(this, "calciteInternalCheckboxBlur", 7);
    this.calciteCheckboxChange = createEvent(this, "calciteCheckboxChange", 7);
    this.calciteInternalCheckboxFocus = createEvent(this, "calciteInternalCheckboxFocus", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** The checked state of the checkbox. */
    this.checked = false;
    /** True if the checkbox is disabled */
    this.disabled = false;
    /**
     * The hovered state of the checkbox.
     * @internal
     */
    this.hovered = false;
    /**
     * True if the checkbox is initially indeterminate,
     * which is independent from its checked state
     * https://css-tricks.com/indeterminate-checkboxes/
     * */
    this.indeterminate = false;
    /**
     * When true, makes the component required for form-submission.
     *
     * @internal
     */
    this.required = false;
    /** specify the scale of the checkbox, defaults to m */
    this.scale = "m";
    //--------------------------------------------------------------------------
    //
    //  Private Properties
    //
    //--------------------------------------------------------------------------
    this.checkedPath = "M5.5 12L2 8.689l.637-.636L5.5 10.727l8.022-7.87.637.637z";
    this.indeterminatePath = "M13 8v1H3V8z";
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.getPath = () => this.indeterminate ? this.indeterminatePath : this.checked ? this.checkedPath : "";
    this.toggle = () => {
      if (!this.disabled) {
        this.checked = !this.checked;
        this.setFocus();
        this.indeterminate = false;
        this.calciteCheckboxChange.emit();
      }
    };
    this.keyDownHandler = (event) => {
      if (event.key === " " || event.key === "Enter") {
        this.toggle();
        event.preventDefault();
      }
    };
    this.clickHandler = () => {
      this.toggle();
    };
    //--------------------------------------------------------------------------
    //
    //  Event Listeners
    //
    //--------------------------------------------------------------------------
    this.onToggleBlur = () => {
      this.calciteInternalCheckboxBlur.emit(false);
    };
    this.onToggleFocus = () => {
      this.calciteInternalCheckboxFocus.emit(true);
    };
    this.onLabelClick = () => {
      this.toggle();
    };
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    var _a;
    (_a = this.toggleEl) === null || _a === void 0 ? void 0 : _a.focus();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    this.guid = this.el.id || `calcite-checkbox-${guid()}`;
    connectLabel(this);
    connectForm(this);
  }
  disconnectedCallback() {
    disconnectLabel(this);
    disconnectForm(this);
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    return (hAsync(Host, { onClick: this.clickHandler, onKeyDown: this.keyDownHandler }, hAsync("div", { "aria-checked": this.checked.toString(), "aria-label": getLabelText(this), class: "toggle", onBlur: this.onToggleBlur, onFocus: this.onToggleFocus, ref: (toggleEl) => (this.toggleEl = toggleEl), role: "checkbox", tabIndex: this.disabled ? undefined : 0 }, hAsync("svg", { class: "check-svg", viewBox: "0 0 16 16" }, hAsync("path", { d: this.getPath() })), hAsync("slot", null)), hAsync(HiddenFormInputSlot, { component: this })));
  }
  get el() { return getElement(this); }
  static get style() { return checkboxCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-checkbox",
    "$members$": {
      "checked": [1540],
      "disabled": [516],
      "guid": [1537],
      "hovered": [1540],
      "indeterminate": [1540],
      "label": [1],
      "name": [520],
      "required": [516],
      "scale": [513],
      "value": [8],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["checked", "checked"], ["disabled", "disabled"], ["guid", "guid"], ["hovered", "hovered"], ["indeterminate", "indeterminate"], ["name", "name"], ["required", "required"], ["scale", "scale"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$H = {
  title: "title",
  close: "close",
  chipImageContainer: "chip-image-container",
  calciteChipIcon: "calcite-chip--icon"
};
const TEXT$h = {
  close: "Close"
};
const SLOTS$i = {
  image: "image"
};
const ICONS$a = {
  close: "x"
};

const chipCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-chip:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-chip{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-chip{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-chip{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-chip{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-chip{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-chip:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-chip-h{display:none}/*!@:host([scale=s])*/[scale=s].sc-calcite-chip-h{height:1.5rem;font-size:var(--calcite-font-size--2);--calcite-chip-spacing-unit-l:0.5rem;--calcite-chip-spacing-unit-s:0.25rem}/*!@:host([scale=s]) .chip-image-container*/[scale=s].sc-calcite-chip-h .chip-image-container.sc-calcite-chip{height:1.25rem;width:1.25rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-chip-h{height:2rem;font-size:var(--calcite-font-size--1);--calcite-chip-spacing-unit-l:0.75rem;--calcite-chip-spacing-unit-s:6px}/*!@:host([scale=m]) .chip-image-container*/[scale=m].sc-calcite-chip-h .chip-image-container.sc-calcite-chip{height:1.5rem;width:1.5rem;-webkit-padding-start:0.25rem;padding-inline-start:0.25rem}/*!@:host([scale=l])*/[scale=l].sc-calcite-chip-h{height:2.75rem;font-size:var(--calcite-font-size-0);--calcite-chip-spacing-unit-l:1rem;--calcite-chip-spacing-unit-s:0.5rem}/*!@:host([scale=l]) .chip-image-container*/[scale=l].sc-calcite-chip-h .chip-image-container.sc-calcite-chip{height:2rem;width:2rem;padding-left:0.25rem}/*!@:host*/.sc-calcite-chip-h{-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-inline-flexbox;display:inline-flex;cursor:default;-ms-flex-align:center;align-items:center;border-radius:9999px;border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-1);font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1)}/*!@.container*/.container.sc-calcite-chip{display:-ms-inline-flexbox;display:inline-flex;height:100%;max-width:100%;-ms-flex-align:center;align-items:center}/*!@.title*/.title.sc-calcite-chip{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}/*!@:host span*/.sc-calcite-chip-h span.sc-calcite-chip{padding:0 var(--calcite-chip-spacing-unit-l)}/*!@:host([dismissible]) span*/[dismissible].sc-calcite-chip-h span.sc-calcite-chip{padding-inline:var(--calcite-chip-spacing-unit-l) var(--calcite-chip-spacing-unit-s)}/*!@:host([icon]:not([dismissible])) span*/[icon].sc-calcite-chip-h:not([dismissible]) span.sc-calcite-chip{padding:0 var(--calcite-chip-spacing-unit-l)}/*!@:host button*/.sc-calcite-chip-h button.sc-calcite-chip{margin:0px;display:-ms-inline-flexbox;display:inline-flex;max-height:100%;min-height:100%;cursor:pointer;-ms-flex-align:center;align-items:center;-ms-flex-item-align:stretch;align-self:stretch;border-style:none;background-color:transparent;color:var(--calcite-ui-text-1);outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;-webkit-appearance:none;border-start-start-radius:0;border-start-end-radius:50px;border-end-end-radius:50px;border-end-start-radius:0;padding:0 var(--calcite-chip-spacing-unit-s);color:inherit;--calcite-chip-transparent-hover:var(--calcite-button-transparent-hover);--calcite-chip-transparent-press:var(--calcite-button-transparent-press)}/*!@:host button:hover*/.sc-calcite-chip-h button.sc-calcite-chip:hover{background-color:var(--calcite-chip-transparent-hover)}/*!@:host button:focus*/.sc-calcite-chip-h button.sc-calcite-chip:focus{background-color:var(--calcite-chip-transparent-hover);outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@:host button:active*/.sc-calcite-chip-h button.sc-calcite-chip:active{background-color:var(--calcite-chip-transparent-press)}/*!@.chip-image-container*/.chip-image-container.sc-calcite-chip{display:-ms-inline-flexbox;display:inline-flex;border-radius:50%;overflow:hidden}/*!@:host slot[name=image]::slotted(*)*/.sc-calcite-chip-h slot[name=image].sc-calcite-chip-s>*{display:-ms-flexbox;display:flex;height:100%;width:100%;border-radius:50%;overflow:hidden}/*!@.calcite-chip--icon*/.calcite-chip--icon.sc-calcite-chip{position:relative;margin-top:0px;margin-bottom:0px;display:-ms-inline-flexbox;display:inline-flex;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-margin-end:0;margin-inline-end:0;-webkit-margin-start:var(--calcite-chip-spacing-unit-l);margin-inline-start:var(--calcite-chip-spacing-unit-l);border-start-start-radius:0;border-start-end-radius:50px;border-end-end-radius:50px;border-end-start-radius:0}/*!@:host([color=blue][appearance=solid])*/[color=blue][appearance=solid].sc-calcite-chip-h{border-color:transparent;background-color:var(--calcite-ui-info);color:var(--calcite-ui-text-inverse)}/*!@:host([color=red][appearance=solid])*/[color=red][appearance=solid].sc-calcite-chip-h{border-color:transparent;background-color:var(--calcite-ui-danger);color:var(--calcite-ui-text-inverse)}/*!@:host([color=yellow][appearance=solid])*/[color=yellow][appearance=solid].sc-calcite-chip-h{border-color:transparent;background-color:var(--calcite-ui-warning);color:#151515}/*!@:host([color=green][appearance=solid])*/[color=green][appearance=solid].sc-calcite-chip-h{border-color:transparent;background-color:var(--calcite-ui-success);color:#151515}/*!@:host([color=grey][appearance=solid])*/[color=grey][appearance=solid].sc-calcite-chip-h{border-color:transparent;background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-text-1)}/*!@:host([color=grey][appearance=solid]) button,\n:host([color=grey][appearance=solid]) calcite-icon*/[color=grey][appearance=solid].sc-calcite-chip-h button.sc-calcite-chip,[color=grey][appearance=solid].sc-calcite-chip-h calcite-icon.sc-calcite-chip{color:var(--calcite-ui-text-3)}/*!@:host([color=blue][appearance=clear])*/[color=blue][appearance=clear].sc-calcite-chip-h{border-color:var(--calcite-ui-info)}/*!@:host([color=blue][appearance=clear]) .calcite-chip--icon*/[color=blue][appearance=clear].sc-calcite-chip-h .calcite-chip--icon.sc-calcite-chip{color:var(--calcite-ui-info)}/*!@:host([color=red][appearance=clear])*/[color=red][appearance=clear].sc-calcite-chip-h{border-color:var(--calcite-ui-danger)}/*!@:host([color=red][appearance=clear]) .calcite-chip--icon*/[color=red][appearance=clear].sc-calcite-chip-h .calcite-chip--icon.sc-calcite-chip{color:var(--calcite-ui-danger)}/*!@:host([color=yellow][appearance=clear])*/[color=yellow][appearance=clear].sc-calcite-chip-h{border-color:var(--calcite-ui-warning)}/*!@:host([color=yellow][appearance=clear]) .calcite-chip--icon*/[color=yellow][appearance=clear].sc-calcite-chip-h .calcite-chip--icon.sc-calcite-chip{color:var(--calcite-ui-warning)}/*!@:host([color=green][appearance=clear])*/[color=green][appearance=clear].sc-calcite-chip-h{border-color:var(--calcite-ui-success)}/*!@:host([color=green][appearance=clear]) .calcite-chip--icon*/[color=green][appearance=clear].sc-calcite-chip-h .calcite-chip--icon.sc-calcite-chip{color:var(--calcite-ui-success)}/*!@:host([color=grey][appearance=clear])*/[color=grey][appearance=clear].sc-calcite-chip-h{border-color:var(--calcite-ui-border-1)}/*!@:host([color=grey][appearance=clear]) .calcite-chip--icon*/[color=grey][appearance=clear].sc-calcite-chip-h .calcite-chip--icon.sc-calcite-chip{color:var(--calcite-ui-text-3)}";

/**
 * @slot - A slot for adding text.
 * @slot image - A slot for adding an image.
 */
class Chip {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteChipDismiss = createEvent(this, "calciteChipDismiss", 7);
    //--------------------------------------------------------------------------
    //
    //  Public Properties
    //
    //--------------------------------------------------------------------------
    /** specify the appearance style of the button, defaults to solid. */
    this.appearance = "solid";
    /** specify the color of the button, defaults to blue */
    this.color = "grey";
    /** Optionally show a button the user can click to dismiss the chip */
    this.dismissible = false;
    /** Aria label for the "x" button
     * @default "Close"
     */
    this.dismissLabel = TEXT$h.close;
    /** flip the icon in rtl */
    this.iconFlipRtl = false;
    /** specify the scale of the chip, defaults to m */
    this.scale = "m";
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.closeClickHandler = (event) => {
      event.preventDefault();
      this.calciteChipDismiss.emit(this.el);
    };
    this.guid = guid();
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    var _a;
    (_a = this.closeButton) === null || _a === void 0 ? void 0 : _a.focus();
  }
  //--------------------------------------------------------------------------
  //
  //  Render Methods
  //
  //--------------------------------------------------------------------------
  renderChipImage() {
    const { el } = this;
    const hasChipImage = getSlotted(el, SLOTS$i.image);
    return hasChipImage ? (hAsync("div", { class: CSS$H.chipImageContainer, key: "image" }, hAsync("slot", { name: SLOTS$i.image }))) : null;
  }
  render() {
    const iconEl = (hAsync("calcite-icon", { class: CSS$H.calciteChipIcon, flipRtl: this.iconFlipRtl, icon: this.icon, scale: "s" }));
    const closeButton = (hAsync("button", { "aria-describedby": this.guid, "aria-label": this.dismissLabel, class: CSS$H.close, onClick: this.closeClickHandler, ref: (el) => (this.closeButton = el) }, hAsync("calcite-icon", { icon: ICONS$a.close, scale: "s" })));
    return (hAsync("div", { class: "container" }, this.renderChipImage(), this.icon ? iconEl : null, hAsync("span", { class: CSS$H.title, id: this.guid }, hAsync("slot", null)), this.dismissible ? closeButton : null));
  }
  get el() { return getElement(this); }
  static get style() { return chipCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-chip",
    "$members$": {
      "appearance": [513],
      "color": [513],
      "dismissible": [516],
      "dismissLabel": [1, "dismiss-label"],
      "icon": [513],
      "iconFlipRtl": [516, "icon-flip-rtl"],
      "scale": [513],
      "value": [8],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["appearance", "appearance"], ["color", "color"], ["dismissible", "dismissible"], ["icon", "icon"], ["iconFlipRtl", "icon-flip-rtl"], ["scale", "scale"]]
  }; }
}

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function createCommonjsModule(fn, basedir, module) {
	return module = {
		path: basedir,
		exports: {},
		require: function (path, base) {
			return commonjsRequire();
		}
	}, fn(module, module.exports), module.exports;
}

function commonjsRequire () {
	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
}

var colorName$1 = {
	"aliceblue": [240, 248, 255],
	"antiquewhite": [250, 235, 215],
	"aqua": [0, 255, 255],
	"aquamarine": [127, 255, 212],
	"azure": [240, 255, 255],
	"beige": [245, 245, 220],
	"bisque": [255, 228, 196],
	"black": [0, 0, 0],
	"blanchedalmond": [255, 235, 205],
	"blue": [0, 0, 255],
	"blueviolet": [138, 43, 226],
	"brown": [165, 42, 42],
	"burlywood": [222, 184, 135],
	"cadetblue": [95, 158, 160],
	"chartreuse": [127, 255, 0],
	"chocolate": [210, 105, 30],
	"coral": [255, 127, 80],
	"cornflowerblue": [100, 149, 237],
	"cornsilk": [255, 248, 220],
	"crimson": [220, 20, 60],
	"cyan": [0, 255, 255],
	"darkblue": [0, 0, 139],
	"darkcyan": [0, 139, 139],
	"darkgoldenrod": [184, 134, 11],
	"darkgray": [169, 169, 169],
	"darkgreen": [0, 100, 0],
	"darkgrey": [169, 169, 169],
	"darkkhaki": [189, 183, 107],
	"darkmagenta": [139, 0, 139],
	"darkolivegreen": [85, 107, 47],
	"darkorange": [255, 140, 0],
	"darkorchid": [153, 50, 204],
	"darkred": [139, 0, 0],
	"darksalmon": [233, 150, 122],
	"darkseagreen": [143, 188, 143],
	"darkslateblue": [72, 61, 139],
	"darkslategray": [47, 79, 79],
	"darkslategrey": [47, 79, 79],
	"darkturquoise": [0, 206, 209],
	"darkviolet": [148, 0, 211],
	"deeppink": [255, 20, 147],
	"deepskyblue": [0, 191, 255],
	"dimgray": [105, 105, 105],
	"dimgrey": [105, 105, 105],
	"dodgerblue": [30, 144, 255],
	"firebrick": [178, 34, 34],
	"floralwhite": [255, 250, 240],
	"forestgreen": [34, 139, 34],
	"fuchsia": [255, 0, 255],
	"gainsboro": [220, 220, 220],
	"ghostwhite": [248, 248, 255],
	"gold": [255, 215, 0],
	"goldenrod": [218, 165, 32],
	"gray": [128, 128, 128],
	"green": [0, 128, 0],
	"greenyellow": [173, 255, 47],
	"grey": [128, 128, 128],
	"honeydew": [240, 255, 240],
	"hotpink": [255, 105, 180],
	"indianred": [205, 92, 92],
	"indigo": [75, 0, 130],
	"ivory": [255, 255, 240],
	"khaki": [240, 230, 140],
	"lavender": [230, 230, 250],
	"lavenderblush": [255, 240, 245],
	"lawngreen": [124, 252, 0],
	"lemonchiffon": [255, 250, 205],
	"lightblue": [173, 216, 230],
	"lightcoral": [240, 128, 128],
	"lightcyan": [224, 255, 255],
	"lightgoldenrodyellow": [250, 250, 210],
	"lightgray": [211, 211, 211],
	"lightgreen": [144, 238, 144],
	"lightgrey": [211, 211, 211],
	"lightpink": [255, 182, 193],
	"lightsalmon": [255, 160, 122],
	"lightseagreen": [32, 178, 170],
	"lightskyblue": [135, 206, 250],
	"lightslategray": [119, 136, 153],
	"lightslategrey": [119, 136, 153],
	"lightsteelblue": [176, 196, 222],
	"lightyellow": [255, 255, 224],
	"lime": [0, 255, 0],
	"limegreen": [50, 205, 50],
	"linen": [250, 240, 230],
	"magenta": [255, 0, 255],
	"maroon": [128, 0, 0],
	"mediumaquamarine": [102, 205, 170],
	"mediumblue": [0, 0, 205],
	"mediumorchid": [186, 85, 211],
	"mediumpurple": [147, 112, 219],
	"mediumseagreen": [60, 179, 113],
	"mediumslateblue": [123, 104, 238],
	"mediumspringgreen": [0, 250, 154],
	"mediumturquoise": [72, 209, 204],
	"mediumvioletred": [199, 21, 133],
	"midnightblue": [25, 25, 112],
	"mintcream": [245, 255, 250],
	"mistyrose": [255, 228, 225],
	"moccasin": [255, 228, 181],
	"navajowhite": [255, 222, 173],
	"navy": [0, 0, 128],
	"oldlace": [253, 245, 230],
	"olive": [128, 128, 0],
	"olivedrab": [107, 142, 35],
	"orange": [255, 165, 0],
	"orangered": [255, 69, 0],
	"orchid": [218, 112, 214],
	"palegoldenrod": [238, 232, 170],
	"palegreen": [152, 251, 152],
	"paleturquoise": [175, 238, 238],
	"palevioletred": [219, 112, 147],
	"papayawhip": [255, 239, 213],
	"peachpuff": [255, 218, 185],
	"peru": [205, 133, 63],
	"pink": [255, 192, 203],
	"plum": [221, 160, 221],
	"powderblue": [176, 224, 230],
	"purple": [128, 0, 128],
	"rebeccapurple": [102, 51, 153],
	"red": [255, 0, 0],
	"rosybrown": [188, 143, 143],
	"royalblue": [65, 105, 225],
	"saddlebrown": [139, 69, 19],
	"salmon": [250, 128, 114],
	"sandybrown": [244, 164, 96],
	"seagreen": [46, 139, 87],
	"seashell": [255, 245, 238],
	"sienna": [160, 82, 45],
	"silver": [192, 192, 192],
	"skyblue": [135, 206, 235],
	"slateblue": [106, 90, 205],
	"slategray": [112, 128, 144],
	"slategrey": [112, 128, 144],
	"snow": [255, 250, 250],
	"springgreen": [0, 255, 127],
	"steelblue": [70, 130, 180],
	"tan": [210, 180, 140],
	"teal": [0, 128, 128],
	"thistle": [216, 191, 216],
	"tomato": [255, 99, 71],
	"turquoise": [64, 224, 208],
	"violet": [238, 130, 238],
	"wheat": [245, 222, 179],
	"white": [255, 255, 255],
	"whitesmoke": [245, 245, 245],
	"yellow": [255, 255, 0],
	"yellowgreen": [154, 205, 50]
};

var isArrayish = function isArrayish(obj) {
	if (!obj || typeof obj === 'string') {
		return false;
	}

	return obj instanceof Array || Array.isArray(obj) ||
		(obj.length >= 0 && (obj.splice instanceof Function ||
			(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));
};

var simpleSwizzle = createCommonjsModule(function (module) {



var concat = Array.prototype.concat;
var slice = Array.prototype.slice;

var swizzle = module.exports = function swizzle(args) {
	var results = [];

	for (var i = 0, len = args.length; i < len; i++) {
		var arg = args[i];

		if (isArrayish(arg)) {
			// http://jsperf.com/javascript-array-concat-vs-push/98
			results = concat.call(results, slice.call(arg));
		} else {
			results.push(arg);
		}
	}

	return results;
};

swizzle.wrap = function (fn) {
	return function () {
		return fn(swizzle(arguments));
	};
};
});

var colorString = createCommonjsModule(function (module) {
/* MIT license */


var hasOwnProperty = Object.hasOwnProperty;

var reverseNames = {};

// create a list of reverse color names
for (var name in colorName$1) {
	if (hasOwnProperty.call(colorName$1, name)) {
		reverseNames[colorName$1[name]] = name;
	}
}

var cs = module.exports = {
	to: {},
	get: {}
};

cs.get = function (string) {
	var prefix = string.substring(0, 3).toLowerCase();
	var val;
	var model;
	switch (prefix) {
		case 'hsl':
			val = cs.get.hsl(string);
			model = 'hsl';
			break;
		case 'hwb':
			val = cs.get.hwb(string);
			model = 'hwb';
			break;
		default:
			val = cs.get.rgb(string);
			model = 'rgb';
			break;
	}

	if (!val) {
		return null;
	}

	return {model: model, value: val};
};

cs.get.rgb = function (string) {
	if (!string) {
		return null;
	}

	var abbr = /^#([a-f0-9]{3,4})$/i;
	var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
	var rgba = /^rgba?\(\s*([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/;
	var per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/;
	var keyword = /^(\w+)$/;

	var rgb = [0, 0, 0, 1];
	var match;
	var i;
	var hexAlpha;

	if (match = string.match(hex)) {
		hexAlpha = match[2];
		match = match[1];

		for (i = 0; i < 3; i++) {
			// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19
			var i2 = i * 2;
			rgb[i] = parseInt(match.slice(i2, i2 + 2), 16);
		}

		if (hexAlpha) {
			rgb[3] = parseInt(hexAlpha, 16) / 255;
		}
	} else if (match = string.match(abbr)) {
		match = match[1];
		hexAlpha = match[3];

		for (i = 0; i < 3; i++) {
			rgb[i] = parseInt(match[i] + match[i], 16);
		}

		if (hexAlpha) {
			rgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;
		}
	} else if (match = string.match(rgba)) {
		for (i = 0; i < 3; i++) {
			rgb[i] = parseInt(match[i + 1], 0);
		}

		if (match[4]) {
			if (match[5]) {
				rgb[3] = parseFloat(match[4]) * 0.01;
			} else {
				rgb[3] = parseFloat(match[4]);
			}
		}
	} else if (match = string.match(per)) {
		for (i = 0; i < 3; i++) {
			rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
		}

		if (match[4]) {
			if (match[5]) {
				rgb[3] = parseFloat(match[4]) * 0.01;
			} else {
				rgb[3] = parseFloat(match[4]);
			}
		}
	} else if (match = string.match(keyword)) {
		if (match[1] === 'transparent') {
			return [0, 0, 0, 0];
		}

		if (!hasOwnProperty.call(colorName$1, match[1])) {
			return null;
		}

		rgb = colorName$1[match[1]];
		rgb[3] = 1;

		return rgb;
	} else {
		return null;
	}

	for (i = 0; i < 3; i++) {
		rgb[i] = clamp(rgb[i], 0, 255);
	}
	rgb[3] = clamp(rgb[3], 0, 1);

	return rgb;
};

cs.get.hsl = function (string) {
	if (!string) {
		return null;
	}

	var hsl = /^hsla?\(\s*([+-]?(?:\d{0,3}\.)?\d+)(?:deg)?\s*,?\s*([+-]?[\d\.]+)%\s*,?\s*([+-]?[\d\.]+)%\s*(?:[,|\/]\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/;
	var match = string.match(hsl);

	if (match) {
		var alpha = parseFloat(match[4]);
		var h = ((parseFloat(match[1]) % 360) + 360) % 360;
		var s = clamp(parseFloat(match[2]), 0, 100);
		var l = clamp(parseFloat(match[3]), 0, 100);
		var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);

		return [h, s, l, a];
	}

	return null;
};

cs.get.hwb = function (string) {
	if (!string) {
		return null;
	}

	var hwb = /^hwb\(\s*([+-]?\d{0,3}(?:\.\d+)?)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/;
	var match = string.match(hwb);

	if (match) {
		var alpha = parseFloat(match[4]);
		var h = ((parseFloat(match[1]) % 360) + 360) % 360;
		var w = clamp(parseFloat(match[2]), 0, 100);
		var b = clamp(parseFloat(match[3]), 0, 100);
		var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
		return [h, w, b, a];
	}

	return null;
};

cs.to.hex = function () {
	var rgba = simpleSwizzle(arguments);

	return (
		'#' +
		hexDouble(rgba[0]) +
		hexDouble(rgba[1]) +
		hexDouble(rgba[2]) +
		(rgba[3] < 1
			? (hexDouble(Math.round(rgba[3] * 255)))
			: '')
	);
};

cs.to.rgb = function () {
	var rgba = simpleSwizzle(arguments);

	return rgba.length < 4 || rgba[3] === 1
		? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'
		: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';
};

cs.to.rgb.percent = function () {
	var rgba = simpleSwizzle(arguments);

	var r = Math.round(rgba[0] / 255 * 100);
	var g = Math.round(rgba[1] / 255 * 100);
	var b = Math.round(rgba[2] / 255 * 100);

	return rgba.length < 4 || rgba[3] === 1
		? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'
		: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';
};

cs.to.hsl = function () {
	var hsla = simpleSwizzle(arguments);
	return hsla.length < 4 || hsla[3] === 1
		? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'
		: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';
};

// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
// (hwb have alpha optional & 1 is default value)
cs.to.hwb = function () {
	var hwba = simpleSwizzle(arguments);

	var a = '';
	if (hwba.length >= 4 && hwba[3] !== 1) {
		a = ', ' + hwba[3];
	}

	return 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';
};

cs.to.keyword = function (rgb) {
	return reverseNames[rgb.slice(0, 3)];
};

// helpers
function clamp(num, min, max) {
	return Math.min(Math.max(min, num), max);
}

function hexDouble(num) {
	var str = Math.round(num).toString(16).toUpperCase();
	return (str.length < 2) ? '0' + str : str;
}
});

var colorName = {
	"aliceblue": [240, 248, 255],
	"antiquewhite": [250, 235, 215],
	"aqua": [0, 255, 255],
	"aquamarine": [127, 255, 212],
	"azure": [240, 255, 255],
	"beige": [245, 245, 220],
	"bisque": [255, 228, 196],
	"black": [0, 0, 0],
	"blanchedalmond": [255, 235, 205],
	"blue": [0, 0, 255],
	"blueviolet": [138, 43, 226],
	"brown": [165, 42, 42],
	"burlywood": [222, 184, 135],
	"cadetblue": [95, 158, 160],
	"chartreuse": [127, 255, 0],
	"chocolate": [210, 105, 30],
	"coral": [255, 127, 80],
	"cornflowerblue": [100, 149, 237],
	"cornsilk": [255, 248, 220],
	"crimson": [220, 20, 60],
	"cyan": [0, 255, 255],
	"darkblue": [0, 0, 139],
	"darkcyan": [0, 139, 139],
	"darkgoldenrod": [184, 134, 11],
	"darkgray": [169, 169, 169],
	"darkgreen": [0, 100, 0],
	"darkgrey": [169, 169, 169],
	"darkkhaki": [189, 183, 107],
	"darkmagenta": [139, 0, 139],
	"darkolivegreen": [85, 107, 47],
	"darkorange": [255, 140, 0],
	"darkorchid": [153, 50, 204],
	"darkred": [139, 0, 0],
	"darksalmon": [233, 150, 122],
	"darkseagreen": [143, 188, 143],
	"darkslateblue": [72, 61, 139],
	"darkslategray": [47, 79, 79],
	"darkslategrey": [47, 79, 79],
	"darkturquoise": [0, 206, 209],
	"darkviolet": [148, 0, 211],
	"deeppink": [255, 20, 147],
	"deepskyblue": [0, 191, 255],
	"dimgray": [105, 105, 105],
	"dimgrey": [105, 105, 105],
	"dodgerblue": [30, 144, 255],
	"firebrick": [178, 34, 34],
	"floralwhite": [255, 250, 240],
	"forestgreen": [34, 139, 34],
	"fuchsia": [255, 0, 255],
	"gainsboro": [220, 220, 220],
	"ghostwhite": [248, 248, 255],
	"gold": [255, 215, 0],
	"goldenrod": [218, 165, 32],
	"gray": [128, 128, 128],
	"green": [0, 128, 0],
	"greenyellow": [173, 255, 47],
	"grey": [128, 128, 128],
	"honeydew": [240, 255, 240],
	"hotpink": [255, 105, 180],
	"indianred": [205, 92, 92],
	"indigo": [75, 0, 130],
	"ivory": [255, 255, 240],
	"khaki": [240, 230, 140],
	"lavender": [230, 230, 250],
	"lavenderblush": [255, 240, 245],
	"lawngreen": [124, 252, 0],
	"lemonchiffon": [255, 250, 205],
	"lightblue": [173, 216, 230],
	"lightcoral": [240, 128, 128],
	"lightcyan": [224, 255, 255],
	"lightgoldenrodyellow": [250, 250, 210],
	"lightgray": [211, 211, 211],
	"lightgreen": [144, 238, 144],
	"lightgrey": [211, 211, 211],
	"lightpink": [255, 182, 193],
	"lightsalmon": [255, 160, 122],
	"lightseagreen": [32, 178, 170],
	"lightskyblue": [135, 206, 250],
	"lightslategray": [119, 136, 153],
	"lightslategrey": [119, 136, 153],
	"lightsteelblue": [176, 196, 222],
	"lightyellow": [255, 255, 224],
	"lime": [0, 255, 0],
	"limegreen": [50, 205, 50],
	"linen": [250, 240, 230],
	"magenta": [255, 0, 255],
	"maroon": [128, 0, 0],
	"mediumaquamarine": [102, 205, 170],
	"mediumblue": [0, 0, 205],
	"mediumorchid": [186, 85, 211],
	"mediumpurple": [147, 112, 219],
	"mediumseagreen": [60, 179, 113],
	"mediumslateblue": [123, 104, 238],
	"mediumspringgreen": [0, 250, 154],
	"mediumturquoise": [72, 209, 204],
	"mediumvioletred": [199, 21, 133],
	"midnightblue": [25, 25, 112],
	"mintcream": [245, 255, 250],
	"mistyrose": [255, 228, 225],
	"moccasin": [255, 228, 181],
	"navajowhite": [255, 222, 173],
	"navy": [0, 0, 128],
	"oldlace": [253, 245, 230],
	"olive": [128, 128, 0],
	"olivedrab": [107, 142, 35],
	"orange": [255, 165, 0],
	"orangered": [255, 69, 0],
	"orchid": [218, 112, 214],
	"palegoldenrod": [238, 232, 170],
	"palegreen": [152, 251, 152],
	"paleturquoise": [175, 238, 238],
	"palevioletred": [219, 112, 147],
	"papayawhip": [255, 239, 213],
	"peachpuff": [255, 218, 185],
	"peru": [205, 133, 63],
	"pink": [255, 192, 203],
	"plum": [221, 160, 221],
	"powderblue": [176, 224, 230],
	"purple": [128, 0, 128],
	"rebeccapurple": [102, 51, 153],
	"red": [255, 0, 0],
	"rosybrown": [188, 143, 143],
	"royalblue": [65, 105, 225],
	"saddlebrown": [139, 69, 19],
	"salmon": [250, 128, 114],
	"sandybrown": [244, 164, 96],
	"seagreen": [46, 139, 87],
	"seashell": [255, 245, 238],
	"sienna": [160, 82, 45],
	"silver": [192, 192, 192],
	"skyblue": [135, 206, 235],
	"slateblue": [106, 90, 205],
	"slategray": [112, 128, 144],
	"slategrey": [112, 128, 144],
	"snow": [255, 250, 250],
	"springgreen": [0, 255, 127],
	"steelblue": [70, 130, 180],
	"tan": [210, 180, 140],
	"teal": [0, 128, 128],
	"thistle": [216, 191, 216],
	"tomato": [255, 99, 71],
	"turquoise": [64, 224, 208],
	"violet": [238, 130, 238],
	"wheat": [245, 222, 179],
	"white": [255, 255, 255],
	"whitesmoke": [245, 245, 245],
	"yellow": [255, 255, 0],
	"yellowgreen": [154, 205, 50]
};

/* MIT license */
/* eslint-disable no-mixed-operators */


// NOTE: conversions should only return primitive values (i.e. arrays, or
//       values that give correct `typeof` results).
//       do not use box values types (i.e. Number(), String(), etc.)

const reverseKeywords = {};
for (const key of Object.keys(colorName)) {
	reverseKeywords[colorName[key]] = key;
}

const convert$1 = {
	rgb: {channels: 3, labels: 'rgb'},
	hsl: {channels: 3, labels: 'hsl'},
	hsv: {channels: 3, labels: 'hsv'},
	hwb: {channels: 3, labels: 'hwb'},
	cmyk: {channels: 4, labels: 'cmyk'},
	xyz: {channels: 3, labels: 'xyz'},
	lab: {channels: 3, labels: 'lab'},
	lch: {channels: 3, labels: 'lch'},
	hex: {channels: 1, labels: ['hex']},
	keyword: {channels: 1, labels: ['keyword']},
	ansi16: {channels: 1, labels: ['ansi16']},
	ansi256: {channels: 1, labels: ['ansi256']},
	hcg: {channels: 3, labels: ['h', 'c', 'g']},
	apple: {channels: 3, labels: ['r16', 'g16', 'b16']},
	gray: {channels: 1, labels: ['gray']}
};

var conversions = convert$1;

// Hide .channels and .labels properties
for (const model of Object.keys(convert$1)) {
	if (!('channels' in convert$1[model])) {
		throw new Error('missing channels property: ' + model);
	}

	if (!('labels' in convert$1[model])) {
		throw new Error('missing channel labels property: ' + model);
	}

	if (convert$1[model].labels.length !== convert$1[model].channels) {
		throw new Error('channel and label counts mismatch: ' + model);
	}

	const {channels, labels} = convert$1[model];
	delete convert$1[model].channels;
	delete convert$1[model].labels;
	Object.defineProperty(convert$1[model], 'channels', {value: channels});
	Object.defineProperty(convert$1[model], 'labels', {value: labels});
}

convert$1.rgb.hsl = function (rgb) {
	const r = rgb[0] / 255;
	const g = rgb[1] / 255;
	const b = rgb[2] / 255;
	const min = Math.min(r, g, b);
	const max = Math.max(r, g, b);
	const delta = max - min;
	let h;
	let s;

	if (max === min) {
		h = 0;
	} else if (r === max) {
		h = (g - b) / delta;
	} else if (g === max) {
		h = 2 + (b - r) / delta;
	} else if (b === max) {
		h = 4 + (r - g) / delta;
	}

	h = Math.min(h * 60, 360);

	if (h < 0) {
		h += 360;
	}

	const l = (min + max) / 2;

	if (max === min) {
		s = 0;
	} else if (l <= 0.5) {
		s = delta / (max + min);
	} else {
		s = delta / (2 - max - min);
	}

	return [h, s * 100, l * 100];
};

convert$1.rgb.hsv = function (rgb) {
	let rdif;
	let gdif;
	let bdif;
	let h;
	let s;

	const r = rgb[0] / 255;
	const g = rgb[1] / 255;
	const b = rgb[2] / 255;
	const v = Math.max(r, g, b);
	const diff = v - Math.min(r, g, b);
	const diffc = function (c) {
		return (v - c) / 6 / diff + 1 / 2;
	};

	if (diff === 0) {
		h = 0;
		s = 0;
	} else {
		s = diff / v;
		rdif = diffc(r);
		gdif = diffc(g);
		bdif = diffc(b);

		if (r === v) {
			h = bdif - gdif;
		} else if (g === v) {
			h = (1 / 3) + rdif - bdif;
		} else if (b === v) {
			h = (2 / 3) + gdif - rdif;
		}

		if (h < 0) {
			h += 1;
		} else if (h > 1) {
			h -= 1;
		}
	}

	return [
		h * 360,
		s * 100,
		v * 100
	];
};

convert$1.rgb.hwb = function (rgb) {
	const r = rgb[0];
	const g = rgb[1];
	let b = rgb[2];
	const h = convert$1.rgb.hsl(rgb)[0];
	const w = 1 / 255 * Math.min(r, Math.min(g, b));

	b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));

	return [h, w * 100, b * 100];
};

convert$1.rgb.cmyk = function (rgb) {
	const r = rgb[0] / 255;
	const g = rgb[1] / 255;
	const b = rgb[2] / 255;

	const k = Math.min(1 - r, 1 - g, 1 - b);
	const c = (1 - r - k) / (1 - k) || 0;
	const m = (1 - g - k) / (1 - k) || 0;
	const y = (1 - b - k) / (1 - k) || 0;

	return [c * 100, m * 100, y * 100, k * 100];
};

function comparativeDistance(x, y) {
	/*
		See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
	*/
	return (
		((x[0] - y[0]) ** 2) +
		((x[1] - y[1]) ** 2) +
		((x[2] - y[2]) ** 2)
	);
}

convert$1.rgb.keyword = function (rgb) {
	const reversed = reverseKeywords[rgb];
	if (reversed) {
		return reversed;
	}

	let currentClosestDistance = Infinity;
	let currentClosestKeyword;

	for (const keyword of Object.keys(colorName)) {
		const value = colorName[keyword];

		// Compute comparative distance
		const distance = comparativeDistance(rgb, value);

		// Check if its less, if so set as closest
		if (distance < currentClosestDistance) {
			currentClosestDistance = distance;
			currentClosestKeyword = keyword;
		}
	}

	return currentClosestKeyword;
};

convert$1.keyword.rgb = function (keyword) {
	return colorName[keyword];
};

convert$1.rgb.xyz = function (rgb) {
	let r = rgb[0] / 255;
	let g = rgb[1] / 255;
	let b = rgb[2] / 255;

	// Assume sRGB
	r = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);
	g = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);
	b = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);

	const x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
	const y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
	const z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);

	return [x * 100, y * 100, z * 100];
};

convert$1.rgb.lab = function (rgb) {
	const xyz = convert$1.rgb.xyz(rgb);
	let x = xyz[0];
	let y = xyz[1];
	let z = xyz[2];

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);

	const l = (116 * y) - 16;
	const a = 500 * (x - y);
	const b = 200 * (y - z);

	return [l, a, b];
};

convert$1.hsl.rgb = function (hsl) {
	const h = hsl[0] / 360;
	const s = hsl[1] / 100;
	const l = hsl[2] / 100;
	let t2;
	let t3;
	let val;

	if (s === 0) {
		val = l * 255;
		return [val, val, val];
	}

	if (l < 0.5) {
		t2 = l * (1 + s);
	} else {
		t2 = l + s - l * s;
	}

	const t1 = 2 * l - t2;

	const rgb = [0, 0, 0];
	for (let i = 0; i < 3; i++) {
		t3 = h + 1 / 3 * -(i - 1);
		if (t3 < 0) {
			t3++;
		}

		if (t3 > 1) {
			t3--;
		}

		if (6 * t3 < 1) {
			val = t1 + (t2 - t1) * 6 * t3;
		} else if (2 * t3 < 1) {
			val = t2;
		} else if (3 * t3 < 2) {
			val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
		} else {
			val = t1;
		}

		rgb[i] = val * 255;
	}

	return rgb;
};

convert$1.hsl.hsv = function (hsl) {
	const h = hsl[0];
	let s = hsl[1] / 100;
	let l = hsl[2] / 100;
	let smin = s;
	const lmin = Math.max(l, 0.01);

	l *= 2;
	s *= (l <= 1) ? l : 2 - l;
	smin *= lmin <= 1 ? lmin : 2 - lmin;
	const v = (l + s) / 2;
	const sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);

	return [h, sv * 100, v * 100];
};

convert$1.hsv.rgb = function (hsv) {
	const h = hsv[0] / 60;
	const s = hsv[1] / 100;
	let v = hsv[2] / 100;
	const hi = Math.floor(h) % 6;

	const f = h - Math.floor(h);
	const p = 255 * v * (1 - s);
	const q = 255 * v * (1 - (s * f));
	const t = 255 * v * (1 - (s * (1 - f)));
	v *= 255;

	switch (hi) {
		case 0:
			return [v, t, p];
		case 1:
			return [q, v, p];
		case 2:
			return [p, v, t];
		case 3:
			return [p, q, v];
		case 4:
			return [t, p, v];
		case 5:
			return [v, p, q];
	}
};

convert$1.hsv.hsl = function (hsv) {
	const h = hsv[0];
	const s = hsv[1] / 100;
	const v = hsv[2] / 100;
	const vmin = Math.max(v, 0.01);
	let sl;
	let l;

	l = (2 - s) * v;
	const lmin = (2 - s) * vmin;
	sl = s * vmin;
	sl /= (lmin <= 1) ? lmin : 2 - lmin;
	sl = sl || 0;
	l /= 2;

	return [h, sl * 100, l * 100];
};

// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
convert$1.hwb.rgb = function (hwb) {
	const h = hwb[0] / 360;
	let wh = hwb[1] / 100;
	let bl = hwb[2] / 100;
	const ratio = wh + bl;
	let f;

	// Wh + bl cant be > 1
	if (ratio > 1) {
		wh /= ratio;
		bl /= ratio;
	}

	const i = Math.floor(6 * h);
	const v = 1 - bl;
	f = 6 * h - i;

	if ((i & 0x01) !== 0) {
		f = 1 - f;
	}

	const n = wh + f * (v - wh); // Linear interpolation

	let r;
	let g;
	let b;
	/* eslint-disable max-statements-per-line,no-multi-spaces */
	switch (i) {
		default:
		case 6:
		case 0: r = v;  g = n;  b = wh; break;
		case 1: r = n;  g = v;  b = wh; break;
		case 2: r = wh; g = v;  b = n; break;
		case 3: r = wh; g = n;  b = v; break;
		case 4: r = n;  g = wh; b = v; break;
		case 5: r = v;  g = wh; b = n; break;
	}
	/* eslint-enable max-statements-per-line,no-multi-spaces */

	return [r * 255, g * 255, b * 255];
};

convert$1.cmyk.rgb = function (cmyk) {
	const c = cmyk[0] / 100;
	const m = cmyk[1] / 100;
	const y = cmyk[2] / 100;
	const k = cmyk[3] / 100;

	const r = 1 - Math.min(1, c * (1 - k) + k);
	const g = 1 - Math.min(1, m * (1 - k) + k);
	const b = 1 - Math.min(1, y * (1 - k) + k);

	return [r * 255, g * 255, b * 255];
};

convert$1.xyz.rgb = function (xyz) {
	const x = xyz[0] / 100;
	const y = xyz[1] / 100;
	const z = xyz[2] / 100;
	let r;
	let g;
	let b;

	r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
	g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
	b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);

	// Assume sRGB
	r = r > 0.0031308
		? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)
		: r * 12.92;

	g = g > 0.0031308
		? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)
		: g * 12.92;

	b = b > 0.0031308
		? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)
		: b * 12.92;

	r = Math.min(Math.max(0, r), 1);
	g = Math.min(Math.max(0, g), 1);
	b = Math.min(Math.max(0, b), 1);

	return [r * 255, g * 255, b * 255];
};

convert$1.xyz.lab = function (xyz) {
	let x = xyz[0];
	let y = xyz[1];
	let z = xyz[2];

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);

	const l = (116 * y) - 16;
	const a = 500 * (x - y);
	const b = 200 * (y - z);

	return [l, a, b];
};

convert$1.lab.xyz = function (lab) {
	const l = lab[0];
	const a = lab[1];
	const b = lab[2];
	let x;
	let y;
	let z;

	y = (l + 16) / 116;
	x = a / 500 + y;
	z = y - b / 200;

	const y2 = y ** 3;
	const x2 = x ** 3;
	const z2 = z ** 3;
	y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
	x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
	z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;

	x *= 95.047;
	y *= 100;
	z *= 108.883;

	return [x, y, z];
};

convert$1.lab.lch = function (lab) {
	const l = lab[0];
	const a = lab[1];
	const b = lab[2];
	let h;

	const hr = Math.atan2(b, a);
	h = hr * 360 / 2 / Math.PI;

	if (h < 0) {
		h += 360;
	}

	const c = Math.sqrt(a * a + b * b);

	return [l, c, h];
};

convert$1.lch.lab = function (lch) {
	const l = lch[0];
	const c = lch[1];
	const h = lch[2];

	const hr = h / 360 * 2 * Math.PI;
	const a = c * Math.cos(hr);
	const b = c * Math.sin(hr);

	return [l, a, b];
};

convert$1.rgb.ansi16 = function (args, saturation = null) {
	const [r, g, b] = args;
	let value = saturation === null ? convert$1.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization

	value = Math.round(value / 50);

	if (value === 0) {
		return 30;
	}

	let ansi = 30
		+ ((Math.round(b / 255) << 2)
		| (Math.round(g / 255) << 1)
		| Math.round(r / 255));

	if (value === 2) {
		ansi += 60;
	}

	return ansi;
};

convert$1.hsv.ansi16 = function (args) {
	// Optimization here; we already know the value and don't need to get
	// it converted for us.
	return convert$1.rgb.ansi16(convert$1.hsv.rgb(args), args[2]);
};

convert$1.rgb.ansi256 = function (args) {
	const r = args[0];
	const g = args[1];
	const b = args[2];

	// We use the extended greyscale palette here, with the exception of
	// black and white. normal palette only has 4 greyscale shades.
	if (r === g && g === b) {
		if (r < 8) {
			return 16;
		}

		if (r > 248) {
			return 231;
		}

		return Math.round(((r - 8) / 247) * 24) + 232;
	}

	const ansi = 16
		+ (36 * Math.round(r / 255 * 5))
		+ (6 * Math.round(g / 255 * 5))
		+ Math.round(b / 255 * 5);

	return ansi;
};

convert$1.ansi16.rgb = function (args) {
	let color = args % 10;

	// Handle greyscale
	if (color === 0 || color === 7) {
		if (args > 50) {
			color += 3.5;
		}

		color = color / 10.5 * 255;

		return [color, color, color];
	}

	const mult = (~~(args > 50) + 1) * 0.5;
	const r = ((color & 1) * mult) * 255;
	const g = (((color >> 1) & 1) * mult) * 255;
	const b = (((color >> 2) & 1) * mult) * 255;

	return [r, g, b];
};

convert$1.ansi256.rgb = function (args) {
	// Handle greyscale
	if (args >= 232) {
		const c = (args - 232) * 10 + 8;
		return [c, c, c];
	}

	args -= 16;

	let rem;
	const r = Math.floor(args / 36) / 5 * 255;
	const g = Math.floor((rem = args % 36) / 6) / 5 * 255;
	const b = (rem % 6) / 5 * 255;

	return [r, g, b];
};

convert$1.rgb.hex = function (args) {
	const integer = ((Math.round(args[0]) & 0xFF) << 16)
		+ ((Math.round(args[1]) & 0xFF) << 8)
		+ (Math.round(args[2]) & 0xFF);

	const string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert$1.hex.rgb = function (args) {
	const match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
	if (!match) {
		return [0, 0, 0];
	}

	let colorString = match[0];

	if (match[0].length === 3) {
		colorString = colorString.split('').map(char => {
			return char + char;
		}).join('');
	}

	const integer = parseInt(colorString, 16);
	const r = (integer >> 16) & 0xFF;
	const g = (integer >> 8) & 0xFF;
	const b = integer & 0xFF;

	return [r, g, b];
};

convert$1.rgb.hcg = function (rgb) {
	const r = rgb[0] / 255;
	const g = rgb[1] / 255;
	const b = rgb[2] / 255;
	const max = Math.max(Math.max(r, g), b);
	const min = Math.min(Math.min(r, g), b);
	const chroma = (max - min);
	let grayscale;
	let hue;

	if (chroma < 1) {
		grayscale = min / (1 - chroma);
	} else {
		grayscale = 0;
	}

	if (chroma <= 0) {
		hue = 0;
	} else
	if (max === r) {
		hue = ((g - b) / chroma) % 6;
	} else
	if (max === g) {
		hue = 2 + (b - r) / chroma;
	} else {
		hue = 4 + (r - g) / chroma;
	}

	hue /= 6;
	hue %= 1;

	return [hue * 360, chroma * 100, grayscale * 100];
};

convert$1.hsl.hcg = function (hsl) {
	const s = hsl[1] / 100;
	const l = hsl[2] / 100;

	const c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));

	let f = 0;
	if (c < 1.0) {
		f = (l - 0.5 * c) / (1.0 - c);
	}

	return [hsl[0], c * 100, f * 100];
};

convert$1.hsv.hcg = function (hsv) {
	const s = hsv[1] / 100;
	const v = hsv[2] / 100;

	const c = s * v;
	let f = 0;

	if (c < 1.0) {
		f = (v - c) / (1 - c);
	}

	return [hsv[0], c * 100, f * 100];
};

convert$1.hcg.rgb = function (hcg) {
	const h = hcg[0] / 360;
	const c = hcg[1] / 100;
	const g = hcg[2] / 100;

	if (c === 0.0) {
		return [g * 255, g * 255, g * 255];
	}

	const pure = [0, 0, 0];
	const hi = (h % 1) * 6;
	const v = hi % 1;
	const w = 1 - v;
	let mg = 0;

	/* eslint-disable max-statements-per-line */
	switch (Math.floor(hi)) {
		case 0:
			pure[0] = 1; pure[1] = v; pure[2] = 0; break;
		case 1:
			pure[0] = w; pure[1] = 1; pure[2] = 0; break;
		case 2:
			pure[0] = 0; pure[1] = 1; pure[2] = v; break;
		case 3:
			pure[0] = 0; pure[1] = w; pure[2] = 1; break;
		case 4:
			pure[0] = v; pure[1] = 0; pure[2] = 1; break;
		default:
			pure[0] = 1; pure[1] = 0; pure[2] = w;
	}
	/* eslint-enable max-statements-per-line */

	mg = (1.0 - c) * g;

	return [
		(c * pure[0] + mg) * 255,
		(c * pure[1] + mg) * 255,
		(c * pure[2] + mg) * 255
	];
};

convert$1.hcg.hsv = function (hcg) {
	const c = hcg[1] / 100;
	const g = hcg[2] / 100;

	const v = c + g * (1.0 - c);
	let f = 0;

	if (v > 0.0) {
		f = c / v;
	}

	return [hcg[0], f * 100, v * 100];
};

convert$1.hcg.hsl = function (hcg) {
	const c = hcg[1] / 100;
	const g = hcg[2] / 100;

	const l = g * (1.0 - c) + 0.5 * c;
	let s = 0;

	if (l > 0.0 && l < 0.5) {
		s = c / (2 * l);
	} else
	if (l >= 0.5 && l < 1.0) {
		s = c / (2 * (1 - l));
	}

	return [hcg[0], s * 100, l * 100];
};

convert$1.hcg.hwb = function (hcg) {
	const c = hcg[1] / 100;
	const g = hcg[2] / 100;
	const v = c + g * (1.0 - c);
	return [hcg[0], (v - c) * 100, (1 - v) * 100];
};

convert$1.hwb.hcg = function (hwb) {
	const w = hwb[1] / 100;
	const b = hwb[2] / 100;
	const v = 1 - b;
	const c = v - w;
	let g = 0;

	if (c < 1) {
		g = (v - c) / (1 - c);
	}

	return [hwb[0], c * 100, g * 100];
};

convert$1.apple.rgb = function (apple) {
	return [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];
};

convert$1.rgb.apple = function (rgb) {
	return [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];
};

convert$1.gray.rgb = function (args) {
	return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
};

convert$1.gray.hsl = function (args) {
	return [0, 0, args[0]];
};

convert$1.gray.hsv = convert$1.gray.hsl;

convert$1.gray.hwb = function (gray) {
	return [0, 100, gray[0]];
};

convert$1.gray.cmyk = function (gray) {
	return [0, 0, 0, gray[0]];
};

convert$1.gray.lab = function (gray) {
	return [gray[0], 0, 0];
};

convert$1.gray.hex = function (gray) {
	const val = Math.round(gray[0] / 100 * 255) & 0xFF;
	const integer = (val << 16) + (val << 8) + val;

	const string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert$1.rgb.gray = function (rgb) {
	const val = (rgb[0] + rgb[1] + rgb[2]) / 3;
	return [val / 255 * 100];
};

/*
	This function routes a model to all other models.

	all functions that are routed have a property `.conversion` attached
	to the returned synthetic function. This property is an array
	of strings, each with the steps in between the 'from' and 'to'
	color models (inclusive).

	conversions that are not possible simply are not included.
*/

function buildGraph() {
	const graph = {};
	// https://jsperf.com/object-keys-vs-for-in-with-closure/3
	const models = Object.keys(conversions);

	for (let len = models.length, i = 0; i < len; i++) {
		graph[models[i]] = {
			// http://jsperf.com/1-vs-infinity
			// micro-opt, but this is simple.
			distance: -1,
			parent: null
		};
	}

	return graph;
}

// https://en.wikipedia.org/wiki/Breadth-first_search
function deriveBFS(fromModel) {
	const graph = buildGraph();
	const queue = [fromModel]; // Unshift -> queue -> pop

	graph[fromModel].distance = 0;

	while (queue.length) {
		const current = queue.pop();
		const adjacents = Object.keys(conversions[current]);

		for (let len = adjacents.length, i = 0; i < len; i++) {
			const adjacent = adjacents[i];
			const node = graph[adjacent];

			if (node.distance === -1) {
				node.distance = graph[current].distance + 1;
				node.parent = current;
				queue.unshift(adjacent);
			}
		}
	}

	return graph;
}

function link(from, to) {
	return function (args) {
		return to(from(args));
	};
}

function wrapConversion(toModel, graph) {
	const path = [graph[toModel].parent, toModel];
	let fn = conversions[graph[toModel].parent][toModel];

	let cur = graph[toModel].parent;
	while (graph[cur].parent) {
		path.unshift(graph[cur].parent);
		fn = link(conversions[graph[cur].parent][cur], fn);
		cur = graph[cur].parent;
	}

	fn.conversion = path;
	return fn;
}

var route = function (fromModel) {
	const graph = deriveBFS(fromModel);
	const conversion = {};

	const models = Object.keys(graph);
	for (let len = models.length, i = 0; i < len; i++) {
		const toModel = models[i];
		const node = graph[toModel];

		if (node.parent === null) {
			// No possible conversion, or this node is the source model.
			continue;
		}

		conversion[toModel] = wrapConversion(toModel, graph);
	}

	return conversion;
};

const convert = {};

const models = Object.keys(conversions);

function wrapRaw(fn) {
	const wrappedFn = function (...args) {
		const arg0 = args[0];
		if (arg0 === undefined || arg0 === null) {
			return arg0;
		}

		if (arg0.length > 1) {
			args = arg0;
		}

		return fn(args);
	};

	// Preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

function wrapRounded(fn) {
	const wrappedFn = function (...args) {
		const arg0 = args[0];

		if (arg0 === undefined || arg0 === null) {
			return arg0;
		}

		if (arg0.length > 1) {
			args = arg0;
		}

		const result = fn(args);

		// We're assuming the result is an array here.
		// see notice in conversions.js; don't use box types
		// in conversion functions.
		if (typeof result === 'object') {
			for (let len = result.length, i = 0; i < len; i++) {
				result[i] = Math.round(result[i]);
			}
		}

		return result;
	};

	// Preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

models.forEach(fromModel => {
	convert[fromModel] = {};

	Object.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});
	Object.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});

	const routes = route(fromModel);
	const routeModels = Object.keys(routes);

	routeModels.forEach(toModel => {
		const fn = routes[toModel];

		convert[fromModel][toModel] = wrapRounded(fn);
		convert[fromModel][toModel].raw = wrapRaw(fn);
	});
});

var colorConvert = convert;

const _slice = [].slice;

const skippedModels = [
	// To be honest, I don't really feel like keyword belongs in color convert, but eh.
	'keyword',

	// Gray conflicts with some method names, and has its own method defined.
	'gray',

	// Shouldn't really be in color-convert either...
	'hex',
];

const hashedModelKeys = {};
for (const model of Object.keys(colorConvert)) {
	hashedModelKeys[_slice.call(colorConvert[model].labels).sort().join('')] = model;
}

const limiters = {};

function Color(object, model) {
	if (!(this instanceof Color)) {
		return new Color(object, model);
	}

	if (model && model in skippedModels) {
		model = null;
	}

	if (model && !(model in colorConvert)) {
		throw new Error('Unknown model: ' + model);
	}

	let i;
	let channels;

	if (object == null) { // eslint-disable-line no-eq-null,eqeqeq
		this.model = 'rgb';
		this.color = [0, 0, 0];
		this.valpha = 1;
	} else if (object instanceof Color) {
		this.model = object.model;
		this.color = object.color.slice();
		this.valpha = object.valpha;
	} else if (typeof object === 'string') {
		const result = colorString.get(object);
		if (result === null) {
			throw new Error('Unable to parse color from string: ' + object);
		}

		this.model = result.model;
		channels = colorConvert[this.model].channels;
		this.color = result.value.slice(0, channels);
		this.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;
	} else if (object.length > 0) {
		this.model = model || 'rgb';
		channels = colorConvert[this.model].channels;
		const newArray = _slice.call(object, 0, channels);
		this.color = zeroArray(newArray, channels);
		this.valpha = typeof object[channels] === 'number' ? object[channels] : 1;
	} else if (typeof object === 'number') {
		// This is always RGB - can be converted later on.
		this.model = 'rgb';
		this.color = [
			(object >> 16) & 0xFF,
			(object >> 8) & 0xFF,
			object & 0xFF,
		];
		this.valpha = 1;
	} else {
		this.valpha = 1;

		const keys = Object.keys(object);
		if ('alpha' in object) {
			keys.splice(keys.indexOf('alpha'), 1);
			this.valpha = typeof object.alpha === 'number' ? object.alpha : 0;
		}

		const hashedKeys = keys.sort().join('');
		if (!(hashedKeys in hashedModelKeys)) {
			throw new Error('Unable to parse color from object: ' + JSON.stringify(object));
		}

		this.model = hashedModelKeys[hashedKeys];

		const labels = colorConvert[this.model].labels;
		const color = [];
		for (i = 0; i < labels.length; i++) {
			color.push(object[labels[i]]);
		}

		this.color = zeroArray(color);
	}

	// Perform limitations (clamping, etc.)
	if (limiters[this.model]) {
		channels = colorConvert[this.model].channels;
		for (i = 0; i < channels; i++) {
			const limit = limiters[this.model][i];
			if (limit) {
				this.color[i] = limit(this.color[i]);
			}
		}
	}

	this.valpha = Math.max(0, Math.min(1, this.valpha));

	if (Object.freeze) {
		Object.freeze(this);
	}
}

Color.prototype = {
	toString() {
		return this.string();
	},

	toJSON() {
		return this[this.model]();
	},

	string(places) {
		let self = this.model in colorString.to ? this : this.rgb();
		self = self.round(typeof places === 'number' ? places : 1);
		const args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);
		return colorString.to[self.model](args);
	},

	percentString(places) {
		const self = this.rgb().round(typeof places === 'number' ? places : 1);
		const args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);
		return colorString.to.rgb.percent(args);
	},

	array() {
		return this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);
	},

	object() {
		const result = {};
		const channels = colorConvert[this.model].channels;
		const labels = colorConvert[this.model].labels;

		for (let i = 0; i < channels; i++) {
			result[labels[i]] = this.color[i];
		}

		if (this.valpha !== 1) {
			result.alpha = this.valpha;
		}

		return result;
	},

	unitArray() {
		const rgb = this.rgb().color;
		rgb[0] /= 255;
		rgb[1] /= 255;
		rgb[2] /= 255;

		if (this.valpha !== 1) {
			rgb.push(this.valpha);
		}

		return rgb;
	},

	unitObject() {
		const rgb = this.rgb().object();
		rgb.r /= 255;
		rgb.g /= 255;
		rgb.b /= 255;

		if (this.valpha !== 1) {
			rgb.alpha = this.valpha;
		}

		return rgb;
	},

	round(places) {
		places = Math.max(places || 0, 0);
		return new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);
	},

	alpha(value) {
		if (arguments.length > 0) {
			return new Color(this.color.concat(Math.max(0, Math.min(1, value))), this.model);
		}

		return this.valpha;
	},

	// Rgb
	red: getset('rgb', 0, maxfn(255)),
	green: getset('rgb', 1, maxfn(255)),
	blue: getset('rgb', 2, maxfn(255)),

	hue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),

	saturationl: getset('hsl', 1, maxfn(100)),
	lightness: getset('hsl', 2, maxfn(100)),

	saturationv: getset('hsv', 1, maxfn(100)),
	value: getset('hsv', 2, maxfn(100)),

	chroma: getset('hcg', 1, maxfn(100)),
	gray: getset('hcg', 2, maxfn(100)),

	white: getset('hwb', 1, maxfn(100)),
	wblack: getset('hwb', 2, maxfn(100)),

	cyan: getset('cmyk', 0, maxfn(100)),
	magenta: getset('cmyk', 1, maxfn(100)),
	yellow: getset('cmyk', 2, maxfn(100)),
	black: getset('cmyk', 3, maxfn(100)),

	x: getset('xyz', 0, maxfn(100)),
	y: getset('xyz', 1, maxfn(100)),
	z: getset('xyz', 2, maxfn(100)),

	l: getset('lab', 0, maxfn(100)),
	a: getset('lab', 1),
	b: getset('lab', 2),

	keyword(value) {
		if (arguments.length > 0) {
			return new Color(value);
		}

		return colorConvert[this.model].keyword(this.color);
	},

	hex(value) {
		if (arguments.length > 0) {
			return new Color(value);
		}

		return colorString.to.hex(this.rgb().round().color);
	},

	hexa(value) {
		if (arguments.length > 0) {
			return new Color(value);
		}

		const rgbArray = this.rgb().round().color;

		let alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();
		if (alphaHex.length === 1) {
			alphaHex = '0' + alphaHex;
		}

		return colorString.to.hex(rgbArray) + alphaHex;
	},

	rgbNumber() {
		const rgb = this.rgb().color;
		return ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);
	},

	luminosity() {
		// http://www.w3.org/TR/WCAG20/#relativeluminancedef
		const rgb = this.rgb().color;

		const lum = [];
		for (const [i, element] of rgb.entries()) {
			const chan = element / 255;
			lum[i] = (chan <= 0.039_28) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;
		}

		return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
	},

	contrast(color2) {
		// http://www.w3.org/TR/WCAG20/#contrast-ratiodef
		const lum1 = this.luminosity();
		const lum2 = color2.luminosity();

		if (lum1 > lum2) {
			return (lum1 + 0.05) / (lum2 + 0.05);
		}

		return (lum2 + 0.05) / (lum1 + 0.05);
	},

	level(color2) {
		const contrastRatio = this.contrast(color2);
		if (contrastRatio >= 7.1) {
			return 'AAA';
		}

		return (contrastRatio >= 4.5) ? 'AA' : '';
	},

	isDark() {
		// YIQ equation from http://24ways.org/2010/calculating-color-contrast
		const rgb = this.rgb().color;
		const yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
		return yiq < 128;
	},

	isLight() {
		return !this.isDark();
	},

	negate() {
		const rgb = this.rgb();
		for (let i = 0; i < 3; i++) {
			rgb.color[i] = 255 - rgb.color[i];
		}

		return rgb;
	},

	lighten(ratio) {
		const hsl = this.hsl();
		hsl.color[2] += hsl.color[2] * ratio;
		return hsl;
	},

	darken(ratio) {
		const hsl = this.hsl();
		hsl.color[2] -= hsl.color[2] * ratio;
		return hsl;
	},

	saturate(ratio) {
		const hsl = this.hsl();
		hsl.color[1] += hsl.color[1] * ratio;
		return hsl;
	},

	desaturate(ratio) {
		const hsl = this.hsl();
		hsl.color[1] -= hsl.color[1] * ratio;
		return hsl;
	},

	whiten(ratio) {
		const hwb = this.hwb();
		hwb.color[1] += hwb.color[1] * ratio;
		return hwb;
	},

	blacken(ratio) {
		const hwb = this.hwb();
		hwb.color[2] += hwb.color[2] * ratio;
		return hwb;
	},

	grayscale() {
		// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
		const rgb = this.rgb().color;
		const value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
		return Color.rgb(value, value, value);
	},

	fade(ratio) {
		return this.alpha(this.valpha - (this.valpha * ratio));
	},

	opaquer(ratio) {
		return this.alpha(this.valpha + (this.valpha * ratio));
	},

	rotate(degrees) {
		const hsl = this.hsl();
		let hue = hsl.color[0];
		hue = (hue + degrees) % 360;
		hue = hue < 0 ? 360 + hue : hue;
		hsl.color[0] = hue;
		return hsl;
	},

	mix(mixinColor, weight) {
		// Ported from sass implementation in C
		// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
		if (!mixinColor || !mixinColor.rgb) {
			throw new Error('Argument to "mix" was not a Color instance, but rather an instance of ' + typeof mixinColor);
		}

		const color1 = mixinColor.rgb();
		const color2 = this.rgb();
		const p = weight === undefined ? 0.5 : weight;

		const w = 2 * p - 1;
		const a = color1.alpha() - color2.alpha();

		const w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;
		const w2 = 1 - w1;

		return Color.rgb(
			w1 * color1.red() + w2 * color2.red(),
			w1 * color1.green() + w2 * color2.green(),
			w1 * color1.blue() + w2 * color2.blue(),
			color1.alpha() * p + color2.alpha() * (1 - p));
	},
};

// Model conversion methods and static constructors
for (const model of Object.keys(colorConvert)) {
	if (skippedModels.includes(model)) {
		continue;
	}

	const channels = colorConvert[model].channels;

	// Conversion methods
	Color.prototype[model] = function () {
		if (this.model === model) {
			return new Color(this);
		}

		if (arguments.length > 0) {
			return new Color(arguments, model);
		}

		const newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;
		return new Color(assertArray(colorConvert[this.model][model].raw(this.color)).concat(newAlpha), model);
	};

	// 'static' construction methods
	Color[model] = function (color) {
		if (typeof color === 'number') {
			color = zeroArray(_slice.call(arguments), channels);
		}

		return new Color(color, model);
	};
}

function roundTo(number, places) {
	return Number(number.toFixed(places));
}

function roundToPlace(places) {
	return function (number) {
		return roundTo(number, places);
	};
}

function getset(model, channel, modifier) {
	model = Array.isArray(model) ? model : [model];

	for (const m of model) {
		(limiters[m] || (limiters[m] = []))[channel] = modifier;
	}

	model = model[0];

	return function (value) {
		let result;

		if (arguments.length > 0) {
			if (modifier) {
				value = modifier(value);
			}

			result = this[model]();
			result.color[channel] = value;
			return result;
		}

		result = this[model]().color[channel];
		if (modifier) {
			result = modifier(result);
		}

		return result;
	};
}

function maxfn(max) {
	return function (v) {
		return Math.max(0, Math.min(max, v));
	};
}

function assertArray(value) {
	return Array.isArray(value) ? value : [value];
}

function zeroArray(array, length) {
	for (let i = 0; i < length; i++) {
		if (typeof array[i] !== 'number') {
			array[i] = 0;
		}
	}

	return array;
}

var color = Color;

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$G = {
  container: "container",
  controlSection: "control-section",
  hexOptions: "color-hex-options",
  section: "section",
  header: "header",
  control: "control",
  splitSection: "section--split",
  colorModeContainer: "color-mode-container",
  colorMode: "color-mode",
  channels: "channels",
  channel: "channel",
  savedColors: "saved-colors",
  savedColorsSection: "saved-colors-section",
  saveColor: "save-color",
  deleteColor: "delete-color",
  savedColorsButtons: "saved-colors-buttons",
  headerHex: "header--hex",
  colorFieldAndSlider: "color-field-and-slider",
  colorFieldAndSliderInteractive: "color-field-and-slider--interactive",
  colorFieldAndSliderWrap: "color-field-and-slider-wrap",
  scope: "scope",
  hueScope: "scope--hue",
  colorFieldScope: "scope--color-field",
  savedColor: "saved-color"
};
const DEFAULT_COLOR$1 = color("#007AC2");
const DEFAULT_STORAGE_KEY_PREFIX = "calcite-color-";
const RGB_LIMITS = {
  r: 255,
  g: 255,
  b: 255
};
const HSV_LIMITS = {
  h: 360,
  s: 100,
  v: 100
};
const TEXT$g = {
  b: "B",
  blue: "Blue",
  deleteColor: "Delete color",
  g: "G",
  green: "Green",
  h: "H",
  hsv: "HSV",
  hex: "Hex",
  hue: "Hue",
  noColor: "No color",
  r: "R",
  red: "Red",
  rgb: "RGB",
  s: "S",
  saturation: "Saturation",
  saveColor: "Save color",
  saved: "Saved",
  v: "V",
  value: "Value"
};
const DIMENSIONS = {
  s: {
    slider: {
      height: 10,
      width: 160
    },
    colorField: {
      height: 80,
      width: 160
    },
    thumb: {
      radius: 8
    }
  },
  m: {
    slider: {
      height: 14,
      width: 272
    },
    colorField: {
      height: 150,
      width: 272
    },
    thumb: {
      radius: 10
    }
  },
  l: {
    slider: {
      height: 16,
      width: 464
    },
    colorField: {
      height: 200,
      width: 464
    },
    thumb: {
      radius: 12
    }
  }
};

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const clamp = (value, min, max) => Math.max(min, Math.min(value, max));
const decimalPlaces = (value) => {
  const match = ("" + value).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
  if (!match) {
    return 0;
  }
  return Math.max(0, 
  // Number of digits right of decimal point.
  (match[1] ? match[1].length : 0) -
    // Adjust for scientific notation.
    (match[2] ? +match[2] : 0));
};

const colorPickerCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-color-picker:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-color-picker{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-color-picker{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-color-picker{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-color-picker{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-color-picker{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-color-picker:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-color-picker-h{display:none}/*!@:host*/.sc-calcite-color-picker-h{display:inline-block;font-size:var(--calcite-font-size--2);line-height:1rem;font-weight:var(--calcite-font-weight-normal)}/*!@:host([disabled])*/[disabled].sc-calcite-color-picker-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-color-picker-h[disabled] .sc-calcite-color-picker-s>[calcite-hydrated][disabled],[disabled].sc-calcite-color-picker-h [calcite-hydrated][disabled].sc-calcite-color-picker{opacity:1}/*!@:host([scale=s]) .container*/[scale=s].sc-calcite-color-picker-h .container.sc-calcite-color-picker{width:160px}/*!@:host([scale=s]) .saved-colors*/[scale=s].sc-calcite-color-picker-h .saved-colors.sc-calcite-color-picker{grid-template-columns:repeat(auto-fill, minmax(20px, 1fr))}/*!@:host([scale=s]) .channels*/[scale=s].sc-calcite-color-picker-h .channels.sc-calcite-color-picker{-ms-flex-direction:column;flex-direction:column}/*!@:host([scale=s]) .channel*/[scale=s].sc-calcite-color-picker-h .channel.sc-calcite-color-picker{width:100%;margin-bottom:4px}/*!@:host([scale=s]) .channel:last-child*/[scale=s].sc-calcite-color-picker-h .channel.sc-calcite-color-picker:last-child{margin-bottom:0}/*!@:host([scale=m]) .container*/[scale=m].sc-calcite-color-picker-h .container.sc-calcite-color-picker{width:272px}/*!@:host([scale=l]) .header*/[scale=l].sc-calcite-color-picker-h .header.sc-calcite-color-picker{padding-bottom:0px}/*!@:host([scale=l])*/[scale=l].sc-calcite-color-picker-h{font-size:var(--calcite-font-size--1);line-height:1rem}/*!@:host([scale=l]) .container*/[scale=l].sc-calcite-color-picker-h .container.sc-calcite-color-picker{width:464px}/*!@:host([scale=l]) .color-field-and-slider*/[scale=l].sc-calcite-color-picker-h .color-field-and-slider.sc-calcite-color-picker{margin-bottom:-20px}/*!@:host([scale=l]) .section*/[scale=l].sc-calcite-color-picker-h .section.sc-calcite-color-picker{padding:0 16px 16px}/*!@:host([scale=l]) .section:first-of-type*/[scale=l].sc-calcite-color-picker-h .section.sc-calcite-color-picker:first-of-type{padding-top:16px}/*!@:host([scale=l]) .saved-colors*/[scale=l].sc-calcite-color-picker-h .saved-colors.sc-calcite-color-picker{grid-template-columns:repeat(auto-fill, minmax(28px, 1fr));grid-gap:12px;padding-top:16px}/*!@:host([scale=l]) .control-section*/[scale=l].sc-calcite-color-picker-h .control-section.sc-calcite-color-picker{-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-align:baseline;align-items:baseline}/*!@:host([scale=l]) .control-section > :nth-child(2)*/[scale=l].sc-calcite-color-picker-h .control-section.sc-calcite-color-picker>.sc-calcite-color-picker:nth-child(2){-webkit-margin-start:12px;margin-inline-start:12px}/*!@:host([scale=l]) .color-hex-options*/[scale=l].sc-calcite-color-picker-h .color-hex-options.sc-calcite-color-picker{display:-ms-flexbox;display:flex;-ms-flex-negative:1;flex-shrink:1;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:distribute;justify-content:space-around;min-height:98px;width:160px}/*!@:host([scale=l]) .color-mode-container*/[scale=l].sc-calcite-color-picker-h .color-mode-container.sc-calcite-color-picker{-ms-flex-negative:3;flex-shrink:3}/*!@:host([appearance=minimal]) .container*/[appearance=minimal].sc-calcite-color-picker-h .container.sc-calcite-color-picker{border:none}/*!@.container*/.container.sc-calcite-color-picker{background-color:var(--calcite-ui-foreground-1);display:inline-block;border:1px solid var(--calcite-ui-border-1)}/*!@.color-field-and-slider-wrap*/.color-field-and-slider-wrap.sc-calcite-color-picker{position:relative}/*!@.scope*/.scope.sc-calcite-color-picker{pointer-events:none;position:absolute;margin-bottom:0px;margin-right:0px;height:0.5rem;width:0.5rem;padding:0px;font-size:var(--calcite-font-size--1);outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;margin-top:-0.25rem;margin-left:-0.25rem;outline-offset:10px}/*!@.scope:focus*/.scope.sc-calcite-color-picker:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:12px}/*!@.color-field-and-slider*/.color-field-and-slider.sc-calcite-color-picker{margin-bottom:-16px}/*!@.color-field-and-slider--interactive*/.color-field-and-slider--interactive.sc-calcite-color-picker{cursor:pointer}/*!@.control-section*/.control-section.sc-calcite-color-picker{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap}/*!@.section*/.section.sc-calcite-color-picker{padding:0 12px 12px}/*!@.section:first-of-type*/.section.sc-calcite-color-picker:first-of-type{padding-top:12px}/*!@.color-hex-options,\n.section--split*/.color-hex-options.sc-calcite-color-picker,.section--split.sc-calcite-color-picker{-ms-flex-positive:1;flex-grow:1}/*!@.header*/.header.sc-calcite-color-picker{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;padding-bottom:0.25rem;color:var(--calcite-ui-text-1)}/*!@.header--hex,\n.color-mode-container*/.header--hex.sc-calcite-color-picker,.color-mode-container.sc-calcite-color-picker{padding-top:12px}/*!@.channels*/.channels.sc-calcite-color-picker{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}/*!@.channel*/.channel.sc-calcite-color-picker{width:31%}/*!@.saved-colors*/.saved-colors.sc-calcite-color-picker{padding-top:12px;display:grid;grid-template-columns:repeat(auto-fill, minmax(24px, 1fr));grid-gap:8px;width:100%}/*!@.saved-colors-buttons*/.saved-colors-buttons.sc-calcite-color-picker{display:-ms-flexbox;display:flex}/*!@.saved-color*/.saved-color.sc-calcite-color-picker{outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;cursor:pointer}/*!@.saved-color:focus*/.saved-color.sc-calcite-color-picker:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:2px}/*!@.saved-color:hover*/.saved-color.sc-calcite-color-picker:hover{-webkit-transition:outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;transition:outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;outline:2px solid var(--calcite-ui-border-2);outline-offset:2px}";

const throttleFor60FpsInMs = 16;
const defaultValue = normalizeHex(DEFAULT_COLOR$1.hex());
const defaultFormat = "auto";
class ColorPicker {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteColorPickerChange = createEvent(this, "calciteColorPickerChange", 7);
    this.calciteColorPickerInput = createEvent(this, "calciteColorPickerInput", 7);
    //--------------------------------------------------------------------------
    //
    //  Public properties
    //
    //--------------------------------------------------------------------------
    /**
     * When false, empty color (null) will be allowed as a value. Otherwise, a color value is always enforced by the component.
     *
     * When true, clearing the input and blurring will restore the last valid color set. When false, it will set it to empty.
     */
    this.allowEmpty = false;
    /** specify the appearance - default (containing border), or minimal (no containing border) */
    this.appearance = "default";
    /**
     * Internal prop for advanced use-cases.
     *
     * @internal
     */
    this.color = DEFAULT_COLOR$1;
    /**
     * When true, disabled prevents user interaction.
     */
    this.disabled = false;
    /**
     * The format of the value property.
     *
     * When "auto", the format will be inferred from `value` when set.
     * @default "auto"
     */
    this.format = defaultFormat;
    /** When true, hides the hex input */
    this.hideHex = false;
    /** When true, hides the RGB/HSV channel inputs */
    this.hideChannels = false;
    /** When true, hides the saved colors section */
    this.hideSaved = false;
    /** Label used for the blue channel
     * @default "B"
     */
    this.intlB = TEXT$g.b;
    /** Label used for the blue channel description
     * @default "Blue"
     */
    this.intlBlue = TEXT$g.blue;
    /** Label used for the delete color button.
     * @default "Delete color"
     */
    this.intlDeleteColor = TEXT$g.deleteColor;
    /** Label used for the green channel
     * @default "G"
     */
    this.intlG = TEXT$g.g;
    /** Label used for the green channel description
     * @default "Green"
     */
    this.intlGreen = TEXT$g.green;
    /** Label used for the hue channel
     * @default "H"
     */
    this.intlH = TEXT$g.h;
    /** Label used for the HSV mode
     * @default "HSV"
     */
    this.intlHsv = TEXT$g.hsv;
    /** Label used for the hex input
     * @default "Hex"
     */
    this.intlHex = TEXT$g.hex;
    /** Label used for the hue channel description
     * @default "Hue"
     */
    this.intlHue = TEXT$g.hue;
    /**
     * Label used for the hex input when there is no color selected.
     * @default "No color"
     */
    this.intlNoColor = TEXT$g.noColor;
    /** Label used for the red channel
     * @default "R"
     */
    this.intlR = TEXT$g.r;
    /** Label used for the red channel description
     * @default "Red"
     */
    this.intlRed = TEXT$g.red;
    /** Label used for the RGB mode
     * @default "RGB"
     */
    this.intlRgb = TEXT$g.rgb;
    /** Label used for the saturation channel
     * @default "S"
     */
    this.intlS = TEXT$g.s;
    /** Label used for the saturation channel description
     * @default "Saturation"
     */
    this.intlSaturation = TEXT$g.saturation;
    /** Label used for the save color button.
     * @default "Save color"
     */
    this.intlSaveColor = TEXT$g.saveColor;
    /** Label used for the saved colors section
     * @default "Saved"
     */
    this.intlSaved = TEXT$g.saved;
    /** Label used for the value channel
     * @default "V"
     */
    this.intlV = TEXT$g.v;
    /** Label used for the
     * @default "Value"
     */
    this.intlValue = TEXT$g.value;
    /**
     * The scale of the color picker.
     */
    this.scale = "m";
    /**
     * The color value.
     *
     * This value can be either a {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color|CSS string}
     * a RGB, HSL or HSV object.
     *
     * The type will be preserved as the color is updated.
     * @default "#007ac2"
     * @see [ColorValue](https://github.com/Esri/calcite-components/blob/master/src/components/color-picker/interfaces.ts#L10)
     */
    this.value = defaultValue;
    this.colorFieldAndSliderHovered = false;
    this.hueThumbState = "idle";
    this.internalColorUpdateContext = null;
    this.mode = CSSColorMode.HEX;
    this.shiftKeyChannelAdjustment = 0;
    this.sliderThumbState = "idle";
    this.colorFieldAndSliderInteractive = false;
    this.channelMode = "rgb";
    this.channels = this.toChannels(DEFAULT_COLOR$1);
    this.dimensions = DIMENSIONS.m;
    this.savedColors = [];
    this.handleTabActivate = (event) => {
      this.channelMode = event.currentTarget.getAttribute("data-color-mode");
      this.updateChannelsFromColor(this.color);
    };
    this.handleColorFieldScopeKeyDown = (event) => {
      const key = event.key;
      const arrowKeyToXYOffset = {
        ArrowUp: { x: 0, y: -10 },
        ArrowRight: { x: 10, y: 0 },
        ArrowDown: { x: 0, y: 10 },
        ArrowLeft: { x: -10, y: 0 }
      };
      if (arrowKeyToXYOffset[key]) {
        event.preventDefault();
        this.scopeOrientation = key === "ArrowDown" || key === "ArrowUp" ? "vertical" : "horizontal";
        this.captureColorFieldColor(this.colorFieldScopeLeft + arrowKeyToXYOffset[key].x || 0, this.colorFieldScopeTop + arrowKeyToXYOffset[key].y || 0, false);
      }
    };
    this.handleHueScopeKeyDown = (event) => {
      const modifier = event.shiftKey ? 10 : 1;
      const key = event.key;
      const arrowKeyToXOffset = {
        ArrowUp: 1,
        ArrowRight: 1,
        ArrowDown: -1,
        ArrowLeft: -1
      };
      if (arrowKeyToXOffset[key]) {
        event.preventDefault();
        const delta = arrowKeyToXOffset[key] * modifier;
        const hue = this.baseColorFieldColor.hue();
        const color = this.baseColorFieldColor.hue(hue + delta);
        this.internalColorSet(color, false);
      }
    };
    this.handleHexInputChange = (event) => {
      event.stopPropagation();
      const { allowEmpty, color: color$1 } = this;
      const input = event.target;
      const hex = input.value;
      if (allowEmpty && !hex) {
        this.internalColorSet(null);
        return;
      }
      const normalizedHex = color$1 && normalizeHex(color$1.hex());
      if (hex !== normalizedHex) {
        this.internalColorSet(color(hex));
      }
    };
    this.handleSavedColorSelect = (event) => {
      const swatch = event.currentTarget;
      this.internalColorSet(color(swatch.color));
    };
    this.handleChannelInput = (event) => {
      const input = event.currentTarget;
      const internalInput = event.detail.nativeEvent.target;
      const channelIndex = Number(input.getAttribute("data-channel-index"));
      const limit = this.channelMode === "rgb"
        ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]
        : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];
      let inputValue;
      if (this.allowEmpty && !input.value) {
        inputValue = "";
      }
      else {
        const value = Number(input.value) + this.shiftKeyChannelAdjustment;
        const clamped = clamp(value, 0, limit);
        inputValue = clamped.toString();
      }
      input.value = inputValue;
      internalInput.value = inputValue;
    };
    this.handleChannelChange = (event) => {
      const input = event.currentTarget;
      const channelIndex = Number(input.getAttribute("data-channel-index"));
      const channels = [...this.channels];
      const shouldClearChannels = this.allowEmpty && !input.value;
      if (shouldClearChannels) {
        this.channels = [null, null, null];
        this.internalColorSet(null);
        return;
      }
      channels[channelIndex] = Number(input.value);
      this.updateColorFromChannels(channels);
    };
    this.handleSavedColorKeyDown = (event) => {
      if (event.key === " " || event.key === "Enter") {
        event.preventDefault();
        event.stopPropagation();
        this.handleSavedColorSelect(event);
      }
    };
    this.handleColorFieldAndSliderMouseLeave = () => {
      this.colorFieldAndSliderInteractive = false;
      this.colorFieldAndSliderHovered = false;
      if (this.sliderThumbState !== "drag" && this.hueThumbState !== "drag") {
        this.hueThumbState = "idle";
        this.sliderThumbState = "idle";
        this.drawColorFieldAndSlider();
      }
    };
    this.handleColorFieldAndSliderMouseDown = (event) => {
      const { offsetX, offsetY } = event;
      const region = this.getCanvasRegion(offsetY);
      if (region === "color-field") {
        this.hueThumbState = "drag";
        this.captureColorFieldColor(offsetX, offsetY);
        this.colorFieldScopeNode.focus();
      }
      else if (region === "slider") {
        this.sliderThumbState = "drag";
        this.captureHueSliderColor(offsetX);
        this.hueScopeNode.focus();
      }
      // prevent text selection outside of color field & slider area
      event.preventDefault();
      document.addEventListener("mousemove", this.globalMouseMoveHandler);
      document.addEventListener("mouseup", this.globalMouseUpHandler, { once: true });
      this.activeColorFieldAndSliderRect =
        this.fieldAndSliderRenderingContext.canvas.getBoundingClientRect();
    };
    this.globalMouseUpHandler = () => {
      const previouslyDragging = this.sliderThumbState === "drag" || this.hueThumbState === "drag";
      this.hueThumbState = "idle";
      this.sliderThumbState = "idle";
      this.activeColorFieldAndSliderRect = null;
      this.drawColorFieldAndSlider();
      if (previouslyDragging) {
        this.calciteColorPickerChange.emit();
      }
    };
    this.globalMouseMoveHandler = (event) => {
      const { el, dimensions } = this;
      const sliderThumbDragging = this.sliderThumbState === "drag";
      const hueThumbDragging = this.hueThumbState === "drag";
      if (!el.isConnected || (!sliderThumbDragging && !hueThumbDragging)) {
        return;
      }
      let samplingX;
      let samplingY;
      const colorFieldAndSliderRect = this.activeColorFieldAndSliderRect;
      const { clientX, clientY } = event;
      if (this.colorFieldAndSliderHovered) {
        samplingX = clientX - colorFieldAndSliderRect.x;
        samplingY = clientY - colorFieldAndSliderRect.y;
      }
      else {
        const colorFieldWidth = dimensions.colorField.width;
        const colorFieldHeight = dimensions.colorField.height;
        const hueSliderHeight = dimensions.slider.height;
        if (clientX < colorFieldAndSliderRect.x + colorFieldWidth &&
          clientX > colorFieldAndSliderRect.x) {
          samplingX = clientX - colorFieldAndSliderRect.x;
        }
        else if (clientX < colorFieldAndSliderRect.x) {
          samplingX = 0;
        }
        else {
          samplingX = colorFieldWidth;
        }
        if (clientY < colorFieldAndSliderRect.y + colorFieldHeight + hueSliderHeight &&
          clientY > colorFieldAndSliderRect.y) {
          samplingY = clientY - colorFieldAndSliderRect.y;
        }
        else if (clientY < colorFieldAndSliderRect.y) {
          samplingY = 0;
        }
        else {
          samplingY = colorFieldHeight + hueSliderHeight;
        }
      }
      if (hueThumbDragging) {
        this.captureColorFieldColor(samplingX, samplingY, false);
      }
      else {
        this.captureHueSliderColor(samplingX);
      }
    };
    this.handleColorFieldAndSliderMouseEnterOrMove = ({ offsetX, offsetY }) => {
      const { dimensions: { colorField, slider, thumb } } = this;
      this.colorFieldAndSliderInteractive = offsetY <= colorField.height + slider.height;
      this.colorFieldAndSliderHovered = true;
      const region = this.getCanvasRegion(offsetY);
      if (region === "color-field") {
        const prevHueThumbState = this.hueThumbState;
        const color = this.baseColorFieldColor.hsv();
        const centerX = Math.round(color.saturationv() / (HSV_LIMITS.s / colorField.width));
        const centerY = Math.round(colorField.height - color.value() / (HSV_LIMITS.v / colorField.height));
        const hoveringThumb = this.containsPoint(offsetX, offsetY, centerX, centerY, thumb.radius);
        let transitionedBetweenHoverAndIdle = false;
        if (prevHueThumbState === "idle" && hoveringThumb) {
          this.hueThumbState = "hover";
          transitionedBetweenHoverAndIdle = true;
        }
        else if (prevHueThumbState === "hover" && !hoveringThumb) {
          this.hueThumbState = "idle";
          transitionedBetweenHoverAndIdle = true;
        }
        if (this.hueThumbState !== "drag") {
          if (transitionedBetweenHoverAndIdle) {
            // refresh since we won't update color and thus no redraw
            this.drawColorFieldAndSlider();
          }
        }
      }
      else if (region === "slider") {
        const sliderThumbColor = this.baseColorFieldColor.hsv().saturationv(100).value(100);
        const prevSliderThumbState = this.sliderThumbState;
        const sliderThumbCenterX = Math.round(sliderThumbColor.hue() / (360 / slider.width));
        const sliderThumbCenterY = Math.round((slider.height + this.getSliderCapSpacing()) / 2) + colorField.height;
        const hoveringSliderThumb = this.containsPoint(offsetX, offsetY, sliderThumbCenterX, sliderThumbCenterY, thumb.radius);
        let sliderThumbTransitionedBetweenHoverAndIdle = false;
        if (prevSliderThumbState === "idle" && hoveringSliderThumb) {
          this.sliderThumbState = "hover";
          sliderThumbTransitionedBetweenHoverAndIdle = true;
        }
        else if (prevSliderThumbState === "hover" && !hoveringSliderThumb) {
          this.sliderThumbState = "idle";
          sliderThumbTransitionedBetweenHoverAndIdle = true;
        }
        if (this.sliderThumbState !== "drag") {
          if (sliderThumbTransitionedBetweenHoverAndIdle) {
            // refresh since we won't update color and thus no redraw
            this.drawColorFieldAndSlider();
          }
        }
      }
    };
    this.storeColorFieldScope = (node) => {
      this.colorFieldScopeNode = node;
    };
    this.storeHueScope = (node) => {
      this.hueScopeNode = node;
    };
    this.renderChannelsTabTitle = (channelMode) => {
      const { channelMode: activeChannelMode, intlRgb, intlHsv } = this;
      const active = channelMode === activeChannelMode;
      const label = channelMode === "rgb" ? intlRgb : intlHsv;
      return (hAsync("calcite-tab-title", { active: active, class: CSS$G.colorMode, "data-color-mode": channelMode, key: channelMode, onCalciteTabsActivate: this.handleTabActivate }, label));
    };
    this.renderChannelsTab = (channelMode) => {
      const { channelMode: activeChannelMode, channels, intlB, intlBlue, intlG, intlGreen, intlH, intlHue, intlR, intlRed, intlS, intlSaturation, intlV, intlValue } = this;
      const active = channelMode === activeChannelMode;
      const isRgb = channelMode === "rgb";
      const channelLabels = isRgb ? [intlR, intlG, intlB] : [intlH, intlS, intlV];
      const channelAriaLabels = isRgb
        ? [intlRed, intlGreen, intlBlue]
        : [intlHue, intlSaturation, intlValue];
      return (hAsync("calcite-tab", { active: active, class: CSS$G.control, key: channelMode }, hAsync("div", { class: CSS$G.channels }, channels.map((channel, index) => this.renderChannel(channel, index, channelLabels[index], channelAriaLabels[index])))));
    };
    this.renderChannel = (value, index, label, ariaLabel) => (hAsync("calcite-input", { class: CSS$G.channel, "data-channel-index": index, label: ariaLabel, numberButtonType: "none", onCalciteInputChange: this.handleChannelChange, onCalciteInputInput: this.handleChannelInput, prefixText: label, scale: this.scale === "l" ? "m" : "s", type: "number", value: value === null || value === void 0 ? void 0 : value.toString() }));
    this.deleteColor = () => {
      const colorToDelete = this.color.hex();
      const inStorage = this.savedColors.indexOf(colorToDelete) > -1;
      if (!inStorage) {
        return;
      }
      const savedColors = this.savedColors.filter((color) => color !== colorToDelete);
      this.savedColors = savedColors;
      const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;
      if (this.storageId) {
        localStorage.setItem(storageKey, JSON.stringify(savedColors));
      }
    };
    this.saveColor = () => {
      const colorToSave = this.color.hex();
      const alreadySaved = this.savedColors.indexOf(colorToSave) > -1;
      if (alreadySaved) {
        return;
      }
      const savedColors = [...this.savedColors, colorToSave];
      this.savedColors = savedColors;
      const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;
      if (this.storageId) {
        localStorage.setItem(storageKey, JSON.stringify(savedColors));
      }
    };
    this.drawColorFieldAndSlider = throttle$1(() => {
      if (!this.fieldAndSliderRenderingContext) {
        return;
      }
      this.drawColorField();
      this.drawHueSlider();
    }, throttleFor60FpsInMs);
    this.captureColorFieldColor = (x, y, skipEqual = true) => {
      const { dimensions: { colorField: { height, width } } } = this;
      const saturation = Math.round((HSV_LIMITS.s / width) * x);
      const value = Math.round((HSV_LIMITS.v / height) * (height - y));
      this.internalColorSet(this.baseColorFieldColor.hsv().saturationv(saturation).value(value), skipEqual);
    };
    this.initColorFieldAndSlider = (canvas) => {
      this.fieldAndSliderRenderingContext = canvas.getContext("2d");
      this.setCanvasContextSize(canvas, {
        width: this.dimensions.colorField.width,
        height: this.dimensions.colorField.height +
          this.dimensions.slider.height +
          this.getSliderCapSpacing() * 2
      });
      this.drawColorFieldAndSlider();
    };
  }
  handleColorChange(color, oldColor) {
    this.drawColorFieldAndSlider();
    this.updateChannelsFromColor(color);
    this.previousColor = oldColor;
    if (this.internalColorUpdateContext) {
      return;
    }
    this.value = this.toValue(color);
  }
  handleFormatChange(format) {
    this.setMode(format);
    this.value = this.toValue(this.color);
  }
  handleScaleChange(scale = "m") {
    this.updateDimensions(scale);
  }
  handleValueChange(value, oldValue) {
    const { allowEmpty, format } = this;
    const checkMode = !allowEmpty || value;
    let modeChanged = false;
    if (checkMode) {
      const nextMode = parseMode(value);
      if (!nextMode || (format !== "auto" && nextMode !== format)) {
        this.showIncompatibleColorWarning(value, format);
        this.value = oldValue;
        return;
      }
      modeChanged = this.mode !== nextMode;
      this.setMode(nextMode);
    }
    const dragging = this.sliderThumbState === "drag" || this.hueThumbState === "drag";
    if (this.internalColorUpdateContext) {
      if (this.internalColorUpdateContext === "initial") {
        return;
      }
      this.calciteColorPickerInput.emit();
      if (!dragging) {
        this.calciteColorPickerChange.emit();
      }
      return;
    }
    const color$1 = allowEmpty && !value ? null : color(value);
    const colorChanged = !colorEqual(color$1, this.color);
    if (modeChanged || colorChanged) {
      this.color = color$1;
      this.calciteColorPickerInput.emit();
      if (!dragging) {
        this.calciteColorPickerChange.emit();
      }
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Internal State/Props
  //
  //--------------------------------------------------------------------------
  get baseColorFieldColor() {
    return this.color || this.previousColor || DEFAULT_COLOR$1;
  }
  // using @Listen as a workaround for VDOM listener not firing
  handleChannelKeyUpOrDown(event) {
    this.shiftKeyChannelAdjustment = 0;
    const key = event.key;
    if ((key !== "ArrowUp" && key !== "ArrowDown") ||
      !event.composedPath().some((node) => { var _a; return (_a = node.classList) === null || _a === void 0 ? void 0 : _a.contains(CSS$G.channel); })) {
      return;
    }
    const { shiftKey } = event;
    event.preventDefault();
    if (!this.color) {
      this.internalColorSet(this.previousColor);
      event.stopPropagation();
      return;
    }
    // this gets applied to the input's up/down arrow increment/decrement
    const complementaryBump = 9;
    this.shiftKeyChannelAdjustment =
      key === "ArrowUp" && shiftKey
        ? complementaryBump
        : key === "ArrowDown" && shiftKey
          ? -complementaryBump
          : 0;
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    return focusElement(this.colorFieldScopeNode);
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillLoad() {
    const { allowEmpty, color: color$1, format, value } = this;
    const willSetNoColor = allowEmpty && !value;
    const parsedMode = parseMode(value);
    const valueIsCompatible = willSetNoColor || (format === "auto" && parsedMode) || format === parsedMode;
    const initialColor = willSetNoColor ? null : valueIsCompatible ? color(value) : color$1;
    if (!valueIsCompatible) {
      this.showIncompatibleColorWarning(value, format);
    }
    this.setMode(format);
    this.internalColorSet(initialColor, false, "initial");
    this.updateDimensions(this.scale);
    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;
    if (this.storageId && localStorage.getItem(storageKey)) {
      this.savedColors = JSON.parse(localStorage.getItem(storageKey));
    }
  }
  disconnectedCallback() {
    document.removeEventListener("mousemove", this.globalMouseMoveHandler);
    document.removeEventListener("mouseup", this.globalMouseUpHandler);
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  //--------------------------------------------------------------------------
  //
  //  Render Methods
  //
  //--------------------------------------------------------------------------
  render() {
    const { allowEmpty, color, intlDeleteColor, hideHex, hideChannels, hideSaved, intlHex, intlSaved, intlSaveColor, savedColors, scale } = this;
    const selectedColorInHex = color ? color.hex() : null;
    const hexInputScale = scale === "l" ? "m" : "s";
    const { colorFieldAndSliderInteractive, colorFieldScopeTop, colorFieldScopeLeft, hueScopeLeft, hueScopeTop, scopeOrientation, dimensions: { colorField: { height: colorFieldHeight, width: colorFieldWidth }, slider: { height: sliderHeight } } } = this;
    const hueTop = hueScopeTop !== null && hueScopeTop !== void 0 ? hueScopeTop : sliderHeight / 2 + colorFieldHeight;
    const hueLeft = hueScopeLeft !== null && hueScopeLeft !== void 0 ? hueScopeLeft : (colorFieldWidth * DEFAULT_COLOR$1.hue()) / HSV_LIMITS.h;
    const noColor = color === null;
    const vertical = scopeOrientation === "vertical";
    return (hAsync("div", { class: CSS$G.container }, hAsync("div", { class: CSS$G.colorFieldAndSliderWrap }, hAsync("canvas", { class: {
        [CSS$G.colorFieldAndSlider]: true,
        [CSS$G.colorFieldAndSliderInteractive]: colorFieldAndSliderInteractive
      }, onMouseDown: this.handleColorFieldAndSliderMouseDown, onMouseEnter: this.handleColorFieldAndSliderMouseEnterOrMove, onMouseLeave: this.handleColorFieldAndSliderMouseLeave, onMouseMove: this.handleColorFieldAndSliderMouseEnterOrMove, ref: this.initColorFieldAndSlider }), hAsync("div", { "aria-label": vertical ? this.intlValue : this.intlSaturation, "aria-valuemax": vertical ? HSV_LIMITS.v : HSV_LIMITS.s, "aria-valuemin": "0", "aria-valuenow": (vertical ? color === null || color === void 0 ? void 0 : color.saturationv() : color === null || color === void 0 ? void 0 : color.value()) || "0", class: { [CSS$G.scope]: true, [CSS$G.colorFieldScope]: true }, onKeyDown: this.handleColorFieldScopeKeyDown, ref: this.storeColorFieldScope, role: "slider", style: { top: `${colorFieldScopeTop || 0}px`, left: `${colorFieldScopeLeft || 0}px` }, tabindex: "0" }), hAsync("div", { "aria-label": this.intlHue, "aria-valuemax": HSV_LIMITS.h, "aria-valuemin": "0", "aria-valuenow": (color === null || color === void 0 ? void 0 : color.round().hue()) || DEFAULT_COLOR$1.round().hue(), class: { [CSS$G.scope]: true, [CSS$G.hueScope]: true }, onKeyDown: this.handleHueScopeKeyDown, ref: this.storeHueScope, role: "slider", style: { top: `${hueTop}px`, left: `${hueLeft}px` }, tabindex: "0" })), hideHex && hideChannels ? null : (hAsync("div", { class: {
        [CSS$G.controlSection]: true,
        [CSS$G.section]: true
      } }, hideHex ? null : (hAsync("div", { class: CSS$G.hexOptions }, hAsync("span", { class: {
        [CSS$G.header]: true,
        [CSS$G.headerHex]: true
      } }, intlHex), hAsync("calcite-color-picker-hex-input", { allowEmpty: allowEmpty, class: CSS$G.control, onCalciteColorPickerHexInputChange: this.handleHexInputChange, scale: hexInputScale, value: selectedColorInHex }))), hideChannels ? null : (hAsync("calcite-tabs", { class: {
        [CSS$G.colorModeContainer]: true,
        [CSS$G.splitSection]: true
      }, scale: hexInputScale }, hAsync("calcite-tab-nav", { slot: "tab-nav" }, this.renderChannelsTabTitle("rgb"), this.renderChannelsTabTitle("hsv")), this.renderChannelsTab("rgb"), this.renderChannelsTab("hsv"))))), hideSaved ? null : (hAsync("div", { class: { [CSS$G.savedColorsSection]: true, [CSS$G.section]: true } }, hAsync("div", { class: CSS$G.header }, hAsync("label", null, intlSaved), hAsync("div", { class: CSS$G.savedColorsButtons }, hAsync("calcite-button", { appearance: "transparent", class: CSS$G.deleteColor, color: "neutral", disabled: noColor, iconStart: "minus", label: intlDeleteColor, onClick: this.deleteColor, scale: hexInputScale, type: "button" }), hAsync("calcite-button", { appearance: "transparent", class: CSS$G.saveColor, color: "neutral", disabled: noColor, iconStart: "plus", label: intlSaveColor, onClick: this.saveColor, scale: hexInputScale, type: "button" }))), savedColors.length > 0 ? (hAsync("div", { class: CSS$G.savedColors }, [
      ...savedColors.map((color) => (hAsync("calcite-color-picker-swatch", { active: selectedColorInHex === color, class: CSS$G.savedColor, color: color, key: color, onClick: this.handleSavedColorSelect, onKeyDown: this.handleSavedColorKeyDown, scale: scale, tabIndex: 0 })))
    ])) : null))));
  }
  // --------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  showIncompatibleColorWarning(value, format) {
    console.warn(`ignoring color value (${value}) as it is not compatible with the current format (${format})`);
  }
  setMode(format) {
    this.mode = format === "auto" ? this.mode : format;
  }
  captureHueSliderColor(x) {
    const { dimensions: { slider: { width } } } = this;
    const hue = (360 / width) * x;
    this.internalColorSet(this.baseColorFieldColor.hue(hue), false);
  }
  getCanvasRegion(y) {
    const { dimensions: { colorField: { height: colorFieldHeight }, slider: { height: sliderHeight } } } = this;
    if (y <= colorFieldHeight) {
      return "color-field";
    }
    if (y <= colorFieldHeight + sliderHeight) {
      return "slider";
    }
    return "none";
  }
  internalColorSet(color, skipEqual = true, context = "internal") {
    if (skipEqual && colorEqual(color, this.color)) {
      return;
    }
    this.internalColorUpdateContext = context;
    this.color = color;
    this.value = this.toValue(color);
    this.internalColorUpdateContext = null;
  }
  toValue(color, format = this.mode) {
    if (!color) {
      return null;
    }
    const hexMode = "hex";
    if (format.includes(hexMode)) {
      return normalizeHex(color.round()[hexMode]());
    }
    if (format.includes("-css")) {
      return color[format.replace("-css", "").replace("a", "")]().round().string();
    }
    const colorObject = color[format]().round().object();
    if (format.endsWith("a")) {
      // normalize alpha prop
      colorObject.a = colorObject.alpha;
      delete colorObject.alpha;
    }
    return colorObject;
  }
  getSliderCapSpacing() {
    const { dimensions: { slider: { height }, thumb: { radius } } } = this;
    return radius * 2 - height;
  }
  updateDimensions(scale = "m") {
    this.dimensions = DIMENSIONS[scale];
  }
  drawColorField() {
    const context = this.fieldAndSliderRenderingContext;
    const { dimensions: { colorField: { height, width } } } = this;
    context.fillStyle = this.baseColorFieldColor.hsv().saturationv(100).value(100).string();
    context.fillRect(0, 0, width, height);
    const whiteGradient = context.createLinearGradient(0, 0, width, 0);
    whiteGradient.addColorStop(0, "rgba(255,255,255,1)");
    whiteGradient.addColorStop(1, "rgba(255,255,255,0)");
    context.fillStyle = whiteGradient;
    context.fillRect(0, 0, width, height);
    const blackGradient = context.createLinearGradient(0, 0, 0, height);
    blackGradient.addColorStop(0, "rgba(0,0,0,0)");
    blackGradient.addColorStop(1, "rgba(0,0,0,1)");
    context.fillStyle = blackGradient;
    context.fillRect(0, 0, width, height);
    this.drawActiveColorFieldColor();
  }
  setCanvasContextSize(canvas, { height, width }) {
    const devicePixelRatio = window.devicePixelRatio || 1;
    canvas.width = width * devicePixelRatio;
    canvas.height = height * devicePixelRatio;
    canvas.style.height = `${height}px`;
    canvas.style.width = `${width}px`;
    const context = canvas.getContext("2d");
    context.scale(devicePixelRatio, devicePixelRatio);
  }
  containsPoint(testPointX, testPointY, boundsX, boundsY, boundsRadius) {
    return (Math.pow(testPointX - boundsX, 2) + Math.pow(testPointY - boundsY, 2) <=
      Math.pow(boundsRadius, 2));
  }
  drawActiveColorFieldColor() {
    const { color } = this;
    if (!color) {
      return;
    }
    const hsvColor = color.hsv();
    const { dimensions: { colorField: { height, width }, thumb: { radius } } } = this;
    const x = hsvColor.saturationv() / (HSV_LIMITS.s / width);
    const y = height - hsvColor.value() / (HSV_LIMITS.v / height);
    requestAnimationFrame(() => {
      this.colorFieldScopeLeft = x;
      this.colorFieldScopeTop = y;
    });
    this.drawThumb(this.fieldAndSliderRenderingContext, radius, x, y, hsvColor, this.hueThumbState);
  }
  drawThumb(context, radius, x, y, color, state) {
    const startAngle = 0;
    const endAngle = 2 * Math.PI;
    context.beginPath();
    context.arc(x, y, radius, startAngle, endAngle);
    context.shadowBlur = state === "hover" ? 32 : 16;
    context.shadowColor = `rgba(0, 0, 0, ${state === "drag" ? 0.32 : 0.16})`;
    context.fillStyle = "#fff";
    context.fill();
    context.beginPath();
    context.arc(x, y, radius - 3, startAngle, endAngle);
    context.shadowBlur = 0;
    context.shadowColor = "transparent";
    context.fillStyle = color.rgb().string();
    context.fill();
  }
  drawActiveHueSliderColor() {
    const { color } = this;
    if (!color) {
      return;
    }
    const hsvColor = color.hsv().saturationv(100).value(100);
    const { dimensions: { colorField: { height: colorFieldHeight }, slider: { height, width }, thumb: { radius } } } = this;
    const x = hsvColor.hue() / (360 / width);
    const y = height / 2 + colorFieldHeight;
    requestAnimationFrame(() => {
      this.hueScopeLeft = x;
      this.hueScopeTop = y;
    });
    this.drawThumb(this.fieldAndSliderRenderingContext, radius, x, y, hsvColor, this.sliderThumbState);
  }
  drawHueSlider() {
    const context = this.fieldAndSliderRenderingContext;
    const { dimensions: { colorField: { height: colorFieldHeight }, slider: { height, width } } } = this;
    const gradient = context.createLinearGradient(0, 0, width, 0);
    const hueSliderColorStopKeywords = ["red", "yellow", "lime", "cyan", "blue", "magenta", "red"];
    const offset = 1 / (hueSliderColorStopKeywords.length - 1);
    let currentOffset = 0;
    hueSliderColorStopKeywords.forEach((keyword) => {
      gradient.addColorStop(currentOffset, color(keyword).string());
      currentOffset += offset;
    });
    context.fillStyle = gradient;
    context.clearRect(0, colorFieldHeight, width, height + this.getSliderCapSpacing() * 2);
    context.fillRect(0, colorFieldHeight, width, height);
    this.drawActiveHueSliderColor();
  }
  updateColorFromChannels(channels) {
    this.internalColorSet(color(channels, this.channelMode));
  }
  updateChannelsFromColor(color) {
    this.channels = color ? this.toChannels(color) : [null, null, null];
  }
  toChannels(color) {
    const { channelMode } = this;
    return color[channelMode]()
      .array()
      .map((value) => Math.floor(value));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "color": ["handleColorChange"],
    "format": ["handleFormatChange"],
    "scale": ["handleScaleChange"],
    "value": ["handleValueChange"]
  }; }
  static get style() { return colorPickerCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-color-picker",
    "$members$": {
      "allowEmpty": [4, "allow-empty"],
      "appearance": [513],
      "color": [1040],
      "disabled": [516],
      "format": [1],
      "hideHex": [4, "hide-hex"],
      "hideChannels": [4, "hide-channels"],
      "hideSaved": [4, "hide-saved"],
      "intlB": [1, "intl-b"],
      "intlBlue": [1, "intl-blue"],
      "intlDeleteColor": [1, "intl-delete-color"],
      "intlG": [1, "intl-g"],
      "intlGreen": [1, "intl-green"],
      "intlH": [1, "intl-h"],
      "intlHsv": [1, "intl-hsv"],
      "intlHex": [1, "intl-hex"],
      "intlHue": [1, "intl-hue"],
      "intlNoColor": [1, "intl-no-color"],
      "intlR": [1, "intl-r"],
      "intlRed": [1, "intl-red"],
      "intlRgb": [1, "intl-rgb"],
      "intlS": [1, "intl-s"],
      "intlSaturation": [1, "intl-saturation"],
      "intlSaveColor": [1, "intl-save-color"],
      "intlSaved": [1, "intl-saved"],
      "intlV": [1, "intl-v"],
      "intlValue": [1, "intl-value"],
      "scale": [513],
      "storageId": [1, "storage-id"],
      "value": [1025],
      "colorFieldAndSliderInteractive": [32],
      "channelMode": [32],
      "channels": [32],
      "dimensions": [32],
      "savedColors": [32],
      "colorFieldScopeTop": [32],
      "colorFieldScopeLeft": [32],
      "scopeOrientation": [32],
      "hueScopeLeft": [32],
      "hueScopeTop": [32],
      "setFocus": [64]
    },
    "$listeners$": [[2, "keydown", "handleChannelKeyUpOrDown"], [2, "keyup", "handleChannelKeyUpOrDown"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["appearance", "appearance"], ["disabled", "disabled"], ["scale", "scale"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$F = {
  container: "container",
  preview: "preview",
  input: "input"
};

const colorPickerHexInputCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-color-picker-hex-input:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-color-picker-hex-input{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-color-picker-hex-input{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-color-picker-hex-input{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-color-picker-hex-input{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-color-picker-hex-input{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-color-picker-hex-input:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-color-picker-hex-input-h{display:none}/*!@:host*/.sc-calcite-color-picker-hex-input-h{display:block}/*!@.container*/.container.sc-calcite-color-picker-hex-input{display:inline-grid;width:100%;-ms-flex-align:center;align-items:center;grid-template-columns:1fr auto}/*!@.preview*/.preview.sc-calcite-color-picker-hex-input{grid-column:2/3;pointer-events:none;margin-top:0px;margin-bottom:0px;margin-left:0.25rem;margin-right:0.25rem;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;z-index:1}/*!@.preview,\n.input*/.preview.sc-calcite-color-picker-hex-input,.input.sc-calcite-color-picker-hex-input{grid-row:1}/*!@.input*/.input.sc-calcite-color-picker-hex-input{grid-column:1/3;width:100%;text-transform:uppercase}";

const DEFAULT_COLOR = color();
class ColorPickerHexInput {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteColorPickerHexInputChange = createEvent(this, "calciteColorPickerHexInputChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Public Properties
    //
    //--------------------------------------------------------------------------
    /**
     * When false, empty color (null) will be allowed as a value. Otherwise, a color value is always enforced by the component.
     *
     * When true, clearing the input and blurring will restore the last valid color set. When false, it will set it to empty.
     */
    this.allowEmpty = false;
    /**
     * Label used for the hex input.
     * @default "Hex"
     */
    this.intlHex = TEXT$g.hex;
    /**
     * Label used for the hex input when there is no color selected.
     * @default "No color"
     */
    this.intlNoColor = TEXT$g.noColor;
    /**
     * The component's scale.
     */
    this.scale = "m";
    /**
     * The hex value.
     */
    this.value = normalizeHex(DEFAULT_COLOR.hex());
    this.onCalciteInputBlur = () => {
      const node = this.inputNode;
      const inputValue = node.value;
      const hex = `#${inputValue}`;
      const willClearValue = this.allowEmpty && !inputValue;
      if (willClearValue || (isValidHex(hex) && isLonghandHex(hex))) {
        return;
      }
      // manipulating DOM directly since rerender doesn't update input value
      node.value =
        this.allowEmpty && !this.internalColor
          ? ""
          : this.formatForInternalInput(rgbToHex(this.internalColor.object()));
    };
    this.onInputChange = () => {
      const inputValue = this.inputNode.value;
      let value;
      if (inputValue) {
        const hex = inputValue;
        const color = hexToRGB(`#${hex}`);
        if (!color) {
          return;
        }
        value = normalizeHex(hex);
      }
      else if (this.allowEmpty) {
        value = null;
      }
      this.value = value;
      this.calciteColorPickerHexInputChange.emit();
    };
    /**
     * The last valid/selected color. Used as a fallback if an invalid hex code is entered.
     */
    this.internalColor = DEFAULT_COLOR;
    this.previousNonNullValue = this.value;
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.storeInputRef = (node) => {
      this.inputNode = node;
    };
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    const { allowEmpty, value } = this;
    if (value) {
      const normalized = normalizeHex(value);
      if (isValidHex(normalized)) {
        this.internalColor = color(normalized);
        this.value = normalized;
      }
      return;
    }
    if (allowEmpty) {
      this.internalColor = null;
      this.value = null;
    }
  }
  handleValueChange(value, oldValue) {
    if (value) {
      const normalized = normalizeHex(value);
      if (isValidHex(normalized)) {
        const { internalColor } = this;
        const changed = !internalColor || normalized !== normalizeHex(internalColor.hex());
        this.internalColor = color(normalized);
        this.previousNonNullValue = normalized;
        this.value = normalized;
        if (changed) {
          this.calciteColorPickerHexInputChange.emit();
        }
        return;
      }
    }
    else if (this.allowEmpty) {
      this.internalColor = null;
      this.value = null;
      this.calciteColorPickerHexInputChange.emit();
      return;
    }
    this.value = oldValue;
  }
  // using @Listen as a workaround for VDOM listener not firing
  onInputKeyDown(event) {
    const { altKey, ctrlKey, metaKey, shiftKey } = event;
    const { internalColor, value } = this;
    const key = event.key;
    if (key === "Tab" || key === "Enter") {
      this.onInputChange();
      return;
    }
    const isNudgeKey = key === "ArrowDown" || key === "ArrowUp";
    if (isNudgeKey) {
      if (!value) {
        this.value = this.previousNonNullValue;
        event.preventDefault();
        return;
      }
      const direction = key === "ArrowUp" ? 1 : -1;
      const bump = shiftKey ? 10 : 1;
      this.value = normalizeHex(this.nudgeRGBChannels(internalColor, bump * direction).hex());
      event.preventDefault();
      return;
    }
    const withModifiers = altKey || ctrlKey || metaKey;
    const singleChar = key.length === 1;
    const validHexChar = hexChar.test(key);
    if (singleChar && !withModifiers && !validHexChar) {
      event.preventDefault();
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    const { intlHex, value } = this;
    const hexInputValue = this.formatForInternalInput(value);
    return (hAsync("div", { class: CSS$F.container }, hAsync("calcite-input", { class: CSS$F.input, label: intlHex, maxLength: 6, onCalciteInputBlur: this.onCalciteInputBlur, onCalciteInputChange: this.onInputChange, prefixText: "#", ref: this.storeInputRef, scale: this.scale, value: hexInputValue }), hexInputValue ? (hAsync("calcite-color-picker-swatch", { active: true, class: CSS$F.preview, color: `#${hexInputValue}`, scale: this.scale })) : null));
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    focusElement(this.inputNode);
  }
  formatForInternalInput(hex) {
    return hex ? hex.replace("#", "") : "";
  }
  nudgeRGBChannels(color$1, amount) {
    return color.rgb(color$1.array().map((channel) => channel + amount));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "value": ["handleValueChange"]
  }; }
  static get style() { return colorPickerHexInputCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-color-picker-hex-input",
    "$members$": {
      "allowEmpty": [4, "allow-empty"],
      "intlHex": [1, "intl-hex"],
      "intlNoColor": [1, "intl-no-color"],
      "scale": [513],
      "value": [1537],
      "internalColor": [32],
      "setFocus": [64]
    },
    "$listeners$": [[2, "keydown", "onInputKeyDown"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["scale", "scale"], ["value", "value"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$E = {
  swatch: "swatch",
  noColorIcon: "no-color-icon"
};
const COLORS = {
  borderLight: "rgba(0, 0, 0, 0.3)",
  borderDark: "rgba(255, 255, 255, 0.15)"
};

const colorPickerSwatchCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-color-picker-swatch:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-color-picker-swatch{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-color-picker-swatch{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-color-picker-swatch{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-color-picker-swatch{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-color-picker-swatch{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-color-picker-swatch:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-color-picker-swatch-h{display:none}/*!@:host*/.sc-calcite-color-picker-swatch-h{position:relative;display:-ms-inline-flexbox;display:inline-flex}/*!@:host([scale=s])*/[scale=s].sc-calcite-color-picker-swatch-h{height:1.25rem;width:1.25rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-color-picker-swatch-h{height:1.5rem;width:1.5rem}/*!@:host([scale=l])*/[scale=l].sc-calcite-color-picker-swatch-h{height:2rem;width:2rem}/*!@.swatch*/.swatch.sc-calcite-color-picker-swatch{overflow:visible;height:inherit;width:inherit}/*!@.swatch rect*/.swatch.sc-calcite-color-picker-swatch rect.sc-calcite-color-picker-swatch{-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}/*!@.no-color-icon*/.no-color-icon.sc-calcite-color-picker-swatch{position:absolute;top:0px;right:0px;bottom:0px;left:0px;height:100%;width:100%}";

class ColorPickerSwatch {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /**
     * Used to display whether the swatch is active or not.
     */
    this.active = false;
    /**
     * The component scale.
     */
    this.scale = "m";
  }
  handleColorChange(color$1) {
    this.internalColor = color(color$1);
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillLoad() {
    this.handleColorChange(this.color);
  }
  render() {
    const { active, el, internalColor } = this;
    const borderRadius = active ? "100%" : "0";
    const hex = internalColor.hex();
    const theme = getThemeName(el);
    const borderColor = theme === "light" ? COLORS.borderLight : COLORS.borderDark;
    return (hAsync("svg", { class: CSS$E.swatch, xmlns: "http://www.w3.org/2000/svg" }, hAsync("title", null, hex), hAsync("rect", { fill: hex, height: "100%", id: "swatch", rx: borderRadius, stroke: borderColor, "stroke-width": "2", style: { "clip-path": `inset(0 round ${borderRadius})` }, width: "100%" })));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "color": ["handleColorChange"]
  }; }
  static get style() { return colorPickerSwatchCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-color-picker-swatch",
    "$members$": {
      "active": [516],
      "color": [1],
      "scale": [513]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["active", "active"], ["scale", "scale"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const filter = (data, value) => {
  const escapedValue = escapeRegExp(value);
  const regex = new RegExp(escapedValue, "i");
  if (data.length === 0) {
    console.warn(`No data was passed to the filter function.
    The data argument should be an array of objects`);
  }
  const find = (input, RE) => {
    var _a;
    if ((_a = input) === null || _a === void 0 ? void 0 : _a.constant) {
      return true;
    }
    let found = false;
    forIn(input, (val) => {
      if (typeof val === "function") {
        return;
      }
      if (Array.isArray(val) || (typeof val === "object" && val !== null)) {
        if (find(val, RE)) {
          found = true;
        }
      }
      else if (RE.test(val)) {
        found = true;
      }
    });
    return found;
  };
  const result = data.filter((item) => {
    return find(item, regex);
  });
  return result;
};

var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [top, bottom, right, left];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}

function getWindow(node) {
  if (node == null) {
    return window;
  }

  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}

function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }

  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}

// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function effect$2(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }

      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


var applyStyles$1 = {
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: effect$2,
  requires: ['computeStyles']
};

function getBasePlacement(placement) {
  return placement.split('-')[0];
}

var max = Math.max;
var min = Math.min;
var round = Math.round;

function getBoundingClientRect(element, includeScale) {
  if (includeScale === void 0) {
    includeScale = false;
  }

  var rect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;

  if (isHTMLElement(element) && includeScale) {
    var offsetHeight = element.offsetHeight;
    var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale
    // Fallback to 1 in case both values are `0`

    if (offsetWidth > 0) {
      scaleX = round(rect.width) / offsetWidth || 1;
    }

    if (offsetHeight > 0) {
      scaleY = round(rect.height) / offsetHeight || 1;
    }
  }

  return {
    width: rect.width / scaleX,
    height: rect.height / scaleY,
    top: rect.top / scaleY,
    right: rect.right / scaleX,
    bottom: rect.bottom / scaleY,
    left: rect.left / scaleX,
    x: rect.left / scaleX,
    y: rect.top / scaleY
  };
}

// means it doesn't take into account transforms.

function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;

  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }

  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }

  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && isShadowRoot(rootNode)) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe[prop-missing]: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}

function getComputedStyle$1(element) {
  return getWindow(element).getComputedStyle(element);
}

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
}

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}

function getParentNode(element) {
  if (getNodeName(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ( // DOM Element detected
    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element) // fallback

  );
}

function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle$1(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;
  var isIE = navigator.userAgent.indexOf('Trident') !== -1;

  if (isIE && isHTMLElement(element)) {
    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
    var elementCss = getComputedStyle$1(element);

    if (elementCss.position === 'fixed') {
      return null;
    }
  }

  var currentNode = getParentNode(element);

  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }

  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle$1(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  var window = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static')) {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}

function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}

function within(min$1, value, max$1) {
  return max(min$1, min(value, max$1));
}
function withinMaxClamp(min, value, max) {
  var v = within(min, value, max);
  return v > max ? max : v;
}

function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}

function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
};

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name,
      options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === 'y' ? top : left;
  var maxProp = axis === 'y' ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = within(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function effect$1(_ref2) {
  var state = _ref2.state,
      options = _ref2.options;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if (!contains(state.elements.popper, arrowElement)) {

    return;
  }

  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules


var arrow$1 = {
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: effect$1,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
};

function getVariation(placement) {
  return placement.split('-')[1];
}

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref) {
  var x = _ref.x,
      y = _ref.y;
  var win = window;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(x * dpr) / dpr || 0,
    y: round(y * dpr) / dpr || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      variation = _ref2.variation,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets,
      isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x,
      x = _offsets$x === void 0 ? 0 : _offsets$x,
      _offsets$y = offsets.y,
      y = _offsets$y === void 0 ? 0 : _offsets$y;

  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
    x: x,
    y: y
  }) : {
    x: x,
    y: y
  };

  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = left;
  var sideY = top;
  var win = window;

  if (adaptive) {
    var offsetParent = getOffsetParent(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';

    if (offsetParent === getWindow(popper)) {
      offsetParent = getDocumentElement(popper);

      if (getComputedStyle$1(offsetParent).position !== 'static' && position === 'absolute') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


    offsetParent = offsetParent;

    if (placement === top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]
      offsetParent[heightProp];
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === left || (placement === top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]
      offsetParent[widthProp];
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x: x,
    y: y
  }) : {
    x: x,
    y: y
  };

  x = _ref4.x;
  y = _ref4.y;

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref5) {
  var state = _ref5.state,
      options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;

  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration,
    isFixed: state.options.strategy === 'fixed'
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var computeStyles$1 = {
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
};

var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


var eventListeners = {
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
};

var hash$1 = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash$1[matched];
  });
}

var hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return hash[matched];
  });
}

function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}

function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}

function getViewportRect(element) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper
  // can be obscured underneath it.
  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even
  // if it isn't open, so if this isn't available, the popper will be detected
  // to overflow the bottom of the screen too early.

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)
    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding
    // errors due to floating point numbers, so we need to check precision.
    // Safari returns a number <= 0, usually < -1 when pinch-zoomed
    // Feature detection fails in mobile emulation mode in Chrome.
    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <
    // 0.001
    // Fallback here: "Not Safari" userAgent

    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + getWindowScrollBarX(element),
    y: y
  };
}

// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var _element$ownerDocumen;

  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;

  if (getComputedStyle$1(body || html).direction === 'rtl') {
    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = getComputedStyle$1(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }

  return getScrollParent(getParentNode(node));
}

/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  var _element$ownerDocumen;

  if (list === void 0) {
    list = [];
  }

  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents(getParentNode(target)));
}

function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

function getInnerBoundingClientRect(element) {
  var rect = getBoundingClientRect(element);
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = listScrollParents(getParentNode(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle$1(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;

  if (!isElement(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;
    }
  }

  return offsets;
}

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}

function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
    return getVariation(placement) === variation;
  }) : basePlacements;
  var allowedPlacements = placements$1.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements$1;
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[getBasePlacement(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}

function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }

  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}

function flip(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = getBasePlacement(placement);

    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }

    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


var flip$1 = {
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
};

function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


var hide$1 = {
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
};

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var offset$1 = {
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
};

function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var popperOffsets$1 = {
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
};

function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}

function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis) {
    var _offsetModifierState$;

    var mainSide = mainAxis === 'y' ? top : left;
    var altSide = mainAxis === 'y' ? bottom : right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min$1 = offset + overflow[mainSide];
    var max$1 = offset - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset, tether ? max(max$1, tetherMax) : max$1);
    popperOffsets[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset;
  }

  if (checkAltAxis) {
    var _offsetModifierState$2;

    var _mainSide = mainAxis === 'x' ? top : left;

    var _altSide = mainAxis === 'x' ? bottom : right;

    var _offset = popperOffsets[altAxis];

    var _len = altAxis === 'y' ? 'height' : 'width';

    var _min = _offset + overflow[_mainSide];

    var _max = _offset - overflow[_altSide];

    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;

    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;

    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;

    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;

    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);

    popperOffsets[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var preventOverflow$1 = {
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
};

function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}

function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round(rect.width) / element.offsetWidth || 1;
  var scaleY = round(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.


function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }

    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

function debounce$1(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}

function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}

var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(setOptionsAction) {
        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
          popper: listScrollParents(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        }); // Validate the provided modifiers so that the consumer will get warned

        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {

          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),
          popper: getLayoutRect(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });

        for (var index = 0; index < state.orderedModifiers.length; index++) {

          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce$1(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {

      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref3) {
        var name = _ref3.name,
            _ref3$options = _ref3.options,
            options = _ref3$options === void 0 ? {} : _ref3$options,
            effect = _ref3.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}

var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];
var createPopper$1 = /*#__PURE__*/popperGenerator({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const defaultMenuPlacement = "bottom-leading";
const popperMenuFlipPlacements = [
  "top-start",
  "top",
  "top-end",
  "bottom-start",
  "bottom",
  "bottom-end"
];
const CSS$D = {
  animation: "calcite-popper-anim",
  animationActive: "calcite-popper-anim--active"
};
function getPlacement(el, placement) {
  const placements = ["left", "right"];
  const variations = ["start", "end"];
  if (getElementDir(el) === "rtl") {
    placements.reverse();
    variations.reverse();
  }
  return placement
    .replace(/-leading/gi, `-${variations[0]}`)
    .replace(/-trailing/gi, `-${variations[1]}`)
    .replace(/leading/gi, placements[0])
    .replace(/trailing/gi, placements[1]);
}
function createPopper({ referenceEl, el, placement, overlayPositioning = "absolute", modifiers }) {
  if (!referenceEl) {
    return null;
  }
  return createPopper$1(referenceEl, el, {
    strategy: overlayPositioning,
    placement: getPlacement(el, placement),
    modifiers
  });
}
async function updatePopper({ el, modifiers, placement: PopperPlacement, popper }) {
  const placement = getPlacement(el, PopperPlacement);
  await popper.setOptions({
    modifiers,
    placement
  });
}
function hypotenuse(sideA, sideB) {
  return Math.sqrt(Math.pow(sideA, 2) + Math.pow(sideB, 2));
}
const visiblePointerSize = 4;
const defaultOffsetDistance = Math.ceil(hypotenuse(visiblePointerSize, visiblePointerSize));

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const ComboboxItem$1 = "CALCITE-COMBOBOX-ITEM";
const ComboboxItemGroup$1 = "CALCITE-COMBOBOX-ITEM-GROUP";
const ComboboxChildSelector = `${ComboboxItem$1}, ${ComboboxItemGroup$1}`;
const TEXT$f = {
  removeTag: "Remove tag"
};

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
function getAncestors(element) {
  var _a, _b;
  const parent = (_a = element.parentElement) === null || _a === void 0 ? void 0 : _a.closest(ComboboxChildSelector);
  const grandparent = (_b = parent === null || parent === void 0 ? void 0 : parent.parentElement) === null || _b === void 0 ? void 0 : _b.closest(ComboboxChildSelector);
  return [parent, grandparent].filter((el) => el);
}
function getItemAncestors(item) {
  var _a;
  return (((_a = item.ancestors) === null || _a === void 0 ? void 0 : _a.filter((el) => el.nodeName === "CALCITE-COMBOBOX-ITEM")) || []);
}
function getItemChildren(item) {
  return nodeListToArray$1(item.querySelectorAll("calcite-combobox-item"));
}
function hasActiveChildren(node) {
  const items = nodeListToArray$1(node.querySelectorAll("calcite-combobox-item"));
  return items.filter((item) => item.selected).length > 0;
}
function getDepth(element) {
  {
    return 0;
  }
}

const comboboxCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-combobox:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-combobox{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-combobox{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-combobox{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-combobox{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-combobox{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-combobox:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-combobox-h{display:none}/*!@:host*/.sc-calcite-combobox-h{position:relative;display:block}/*!@:host([disabled])*/[disabled].sc-calcite-combobox-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-combobox-h[disabled] .sc-calcite-combobox-s>[calcite-hydrated][disabled],[disabled].sc-calcite-combobox-h [calcite-hydrated][disabled].sc-calcite-combobox{opacity:1}/*!@:host([scale=s])*/[scale=s].sc-calcite-combobox-h{font-size:var(--calcite-font-size--2);--calcite-combobox-item-spacing-unit-l:0.5rem;--calcite-combobox-item-spacing-unit-s:0.25rem;--calcite-combobox-input-height:1.5rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-combobox-h{font-size:var(--calcite-font-size--1);--calcite-combobox-item-spacing-unit-l:0.75rem;--calcite-combobox-item-spacing-unit-s:0.5rem;--calcite-combobox-input-height:2rem}/*!@:host([scale=l])*/[scale=l].sc-calcite-combobox-h{font-size:var(--calcite-font-size-0);--calcite-combobox-item-spacing-unit-l:1rem;--calcite-combobox-item-spacing-unit-s:0.75rem;--calcite-combobox-input-height:2.75rem}/*!@.wrapper*/.wrapper.sc-calcite-combobox{display:-ms-flexbox;display:flex;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-1);outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-border-input);box-shadow:inset 0 0 0 1px var(--calcite-ui-border-input);padding:calc(var(--calcite-combobox-item-spacing-unit-s) / 4) var(--calcite-combobox-item-spacing-unit-l)}/*!@:host(:focus-within) .wrapper, .wrapper--active*/.sc-calcite-combobox-h:focus-within .wrapper.sc-calcite-combobox,.wrapper--active.sc-calcite-combobox{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@.wrapper--single*/.wrapper--single.sc-calcite-combobox{padding:0 var(--calcite-combobox-item-spacing-unit-l);cursor:pointer;-ms-flex-wrap:nowrap;flex-wrap:nowrap}/*!@.grid-input*/.grid-input.sc-calcite-combobox{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;padding:0px}/*!@.input*/.input.sc-calcite-combobox{-ms-flex-positive:1;flex-grow:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;border-style:none;background-color:transparent;padding:0px;font-family:inherit;color:var(--calcite-ui-text-1);font-size:inherit;height:var(--calcite-combobox-input-height);line-height:var(--calcite-combobox-input-height);min-width:120px;margin-bottom:var(--calcite-combobox-item-spacing-unit-s)}/*!@.input:focus*/.input.sc-calcite-combobox:focus{outline:2px solid transparent;outline-offset:2px}/*!@.input--transparent*/.input--transparent.sc-calcite-combobox{opacity:0}/*!@.input--single*/.input--single.sc-calcite-combobox{margin-bottom:0px;margin-top:0px;padding:0px}/*!@.wrapper--active .input-single*/.wrapper--active.sc-calcite-combobox .input-single.sc-calcite-combobox{cursor:text}/*!@.input--hidden*/.input--hidden.sc-calcite-combobox{pointer-events:none;width:0px;min-width:0px;opacity:0}/*!@.input--icon*/.input--icon.sc-calcite-combobox{padding:0 var(--calcite-combobox-item-spacing-unit-l)}/*!@.input-wrap*/.input-wrap.sc-calcite-combobox{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1}/*!@.input-wrap--single*/.input-wrap--single.sc-calcite-combobox{-ms-flex:1 1 0%;flex:1 1 0%;overflow:hidden}/*!@.label*/.label.sc-calcite-combobox{pointer-events:none;display:-ms-flexbox;display:flex;max-width:100%;-ms-flex:1 1 auto;flex:1 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;padding:0px;font-weight:var(--calcite-font-weight-normal);height:var(--calcite-combobox-input-height);line-height:var(--calcite-combobox-input-height)}/*!@.label--spaced*/.label--spaced.sc-calcite-combobox{padding-top:0px;padding-bottom:0px;padding-left:var(--calcite-combobox-item-spacing-unit-l);padding-right:var(--calcite-combobox-item-spacing-unit-l)}/*!@.icon-end, .icon-start*/.icon-end.sc-calcite-combobox,.icon-start.sc-calcite-combobox{display:-ms-flexbox;display:flex;width:1rem;cursor:pointer;-ms-flex-align:center;align-items:center}/*!@.icon-end*/.icon-end.sc-calcite-combobox{-ms-flex:none;flex:none}/*!@.popper-container*/.popper-container.sc-calcite-combobox{width:100%;display:block;position:absolute;z-index:900;-webkit-transform:scale(0);transform:scale(0);visibility:hidden;pointer-events:none}/*!@.popper-container .calcite-popper-anim*/.popper-container.sc-calcite-combobox .calcite-popper-anim.sc-calcite-combobox{position:relative;z-index:1;-webkit-transition:var(--calcite-popper-transition);transition:var(--calcite-popper-transition);visibility:hidden;-webkit-transition-property:visibility, opacity, -webkit-transform;transition-property:visibility, opacity, -webkit-transform;transition-property:transform, visibility, opacity;transition-property:transform, visibility, opacity, -webkit-transform;opacity:0;-webkit-box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);border-radius:0.25rem}/*!@.popper-container[data-popper-placement^=bottom] .calcite-popper-anim*/.popper-container[data-popper-placement^=bottom].sc-calcite-combobox .calcite-popper-anim.sc-calcite-combobox{-webkit-transform:translateY(-5px);transform:translateY(-5px)}/*!@.popper-container[data-popper-placement^=top] .calcite-popper-anim*/.popper-container[data-popper-placement^=top].sc-calcite-combobox .calcite-popper-anim.sc-calcite-combobox{-webkit-transform:translateY(5px);transform:translateY(5px)}/*!@.popper-container[data-popper-placement^=left] .calcite-popper-anim*/.popper-container[data-popper-placement^=left].sc-calcite-combobox .calcite-popper-anim.sc-calcite-combobox{-webkit-transform:translateX(5px);transform:translateX(5px)}/*!@.popper-container[data-popper-placement^=right] .calcite-popper-anim*/.popper-container[data-popper-placement^=right].sc-calcite-combobox .calcite-popper-anim.sc-calcite-combobox{-webkit-transform:translateX(-5px);transform:translateX(-5px)}/*!@.popper-container[data-popper-placement] .calcite-popper-anim--active*/.popper-container[data-popper-placement].sc-calcite-combobox .calcite-popper-anim--active.sc-calcite-combobox{opacity:1;visibility:visible;-webkit-transform:translate(0);transform:translate(0)}/*!@.popper-container--active*/.popper-container--active.sc-calcite-combobox{pointer-events:initial;visibility:visible}/*!@.screen-readers-only*/.screen-readers-only.sc-calcite-combobox{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}/*!@.list-container*/.list-container.sc-calcite-combobox{max-height:100vh;overflow-y:auto;background-color:var(--calcite-ui-foreground-1);width:var(--calcite-dropdown-width)}/*!@.list*/.list.sc-calcite-combobox{margin:0px;display:block;padding:0px}/*!@.list--hide*/.list--hide.sc-calcite-combobox{height:0px;overflow:hidden}/*!@.chip*/.chip.sc-calcite-combobox{margin-block:calc(var(--calcite-combobox-item-spacing-unit-s) / 4);margin-inline:0 var(--calcite-combobox-item-spacing-unit-s);max-width:100%}/*!@.chip--active*/.chip--active.sc-calcite-combobox{background-color:var(--calcite-ui-foreground-3)}/*!@.item*/.item.sc-calcite-combobox{display:block}/*!@::slotted(input[slot=hidden-form-input])*/.sc-calcite-combobox-s>input[slot=hidden-form-input]{bottom:0 !important;left:0 !important;margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;right:0 !important;top:0 !important;-webkit-transform:none !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}";

const isGroup = (el) => el.tagName === ComboboxItemGroup$1;
const itemUidPrefix = "combobox-item-";
const chipUidPrefix = "combobox-chip-";
const labelUidPrefix = "combobox-label-";
const listboxUidPrefix = "combobox-listbox-";
const inputUidPrefix = "combobox-input-";
/**
 * @slot - A slot for adding `calcite-combobox-item`s.
 */
class Combobox {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteLookupChange = createEvent(this, "calciteLookupChange", 7);
    this.calciteComboboxChange = createEvent(this, "calciteComboboxChange", 7);
    this.calciteComboboxFilterChange = createEvent(this, "calciteComboboxFilterChange", 7);
    this.calciteComboboxChipDismiss = createEvent(this, "calciteComboboxChipDismiss", 7);
    this.calciteComboboxOpen = createEvent(this, "calciteComboboxOpen", 7);
    this.calciteComboboxClose = createEvent(this, "calciteComboboxClose", 7);
    //--------------------------------------------------------------------------
    //
    //  Public Properties
    //
    //--------------------------------------------------------------------------
    /** Opens or closes the combobox */
    this.active = false;
    /** Disable combobox input */
    this.disabled = false;
    /** Specify the maximum number of combobox items (including nested children) to display before showing the scroller */
    this.maxItems = 0;
    /** Describes the type of positioning to use for the overlaid content. If your element is in a fixed container, use the 'fixed' value. */
    this.overlayPositioning = "absolute";
    /**
     * When true, makes the component required for form-submission.
     *
     * @internal
     */
    this.required = false;
    /** specify the selection mode
     * - multi: allow any number of selected items (default)
     * - single: only one selection)
     * - ancestors: like multi, but show ancestors of selected items as selected, only deepest children shown in chips
     */
    this.selectionMode = "multi";
    /** Specify the scale of the combobox, defaults to m */
    this.scale = "m";
    /** The value(s) of the selectedItem(s) */
    this.value = null;
    /** string to override the English "Remove tag" text for when an item is selected.
     * @default "Remove tag"
     */
    this.intlRemoveTag = TEXT$f.removeTag;
    //--------------------------------------------------------------------------
    //
    //  Private State/Props
    //
    //--------------------------------------------------------------------------
    this.internalValueChangeFlag = false;
    this.items = [];
    this.groupItems = [];
    this.selectedItems = [];
    this.visibleItems = [];
    this.activeItemIndex = -1;
    this.activeChipIndex = -1;
    this.activeDescendant = "";
    this.text = "";
    this.textInput = null;
    this.mutationObserver = createObserver();
    this.resizeObserver = createObserver();
    this.guid = guid();
    this.inputHeight = 0;
    this.ignoreSelectedEventsFlag = false;
    this.activeTransitionProp = "opacity";
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.getValue = () => {
      const items = this.selectedItems.map((item) => item === null || item === void 0 ? void 0 : item.value.toString());
      return (items === null || items === void 0 ? void 0 : items.length) ? (items.length > 1 ? items : items[0]) : "";
    };
    this.onLabelClick = () => {
      this.setFocus();
    };
    this.keydownHandler = (event) => {
      const { key } = event;
      switch (key) {
        case "Tab":
          this.activeChipIndex = -1;
          this.activeItemIndex = -1;
          if (this.allowCustomValues && this.text) {
            this.addCustomChip(this.text, true);
            event.preventDefault();
          }
          else {
            this.active = false;
          }
          break;
        case "ArrowLeft":
          this.previousChip();
          break;
        case "ArrowRight":
          this.nextChip();
          break;
        case "ArrowUp":
          event.preventDefault();
          this.active = true;
          this.shiftActiveItemIndex(-1);
          break;
        case "ArrowDown":
          event.preventDefault();
          this.active = true;
          this.shiftActiveItemIndex(1);
          break;
        case "Home":
          this.active = true;
          this.updateActiveItemIndex(0);
          break;
        case "End":
          this.active = true;
          this.updateActiveItemIndex(this.visibleItems.length - 1);
          break;
        case "Escape":
          this.active = false;
          break;
        case "Enter":
          if (this.activeItemIndex > -1) {
            this.toggleSelection(this.visibleItems[this.activeItemIndex]);
          }
          else if (this.activeChipIndex > -1) {
            this.removeActiveChip();
          }
          else if (this.allowCustomValues && this.text) {
            this.addCustomChip(this.text, true);
          }
          break;
        case "Delete":
        case "Backspace":
          if (this.activeChipIndex > -1) {
            this.removeActiveChip();
          }
          else if (!this.text && this.isMulti()) {
            this.removeLastChip();
          }
          break;
        default:
          if (!this.active) {
            this.setFocus();
          }
          break;
      }
    };
    this.toggleCloseEnd = () => {
      this.active = false;
      this.el.removeEventListener("calciteComboboxClose", this.toggleCloseEnd);
    };
    this.toggleOpenEnd = () => {
      this.active = true;
      this.el.removeEventListener("calciteComboboxOpen", this.toggleOpenEnd);
    };
    this.transitionEnd = (event) => {
      if (event.propertyName === this.activeTransitionProp) {
        this.active ? this.calciteComboboxOpen.emit() : this.calciteComboboxClose.emit();
      }
    };
    this.setMaxScrollerHeight = () => {
      const { active, listContainerEl } = this;
      if (!listContainerEl || !active) {
        return;
      }
      this.reposition();
      const maxScrollerHeight = this.getMaxScrollerHeight();
      listContainerEl.style.maxHeight = maxScrollerHeight > 0 ? `${maxScrollerHeight}px` : "";
      this.reposition();
    };
    this.calciteChipDismissHandler = (event, comboboxItem) => {
      this.active = false;
      const selection = this.items.find((item) => item === comboboxItem);
      if (selection) {
        this.toggleSelection(selection, false);
      }
      this.calciteComboboxChipDismiss.emit(event.detail);
    };
    this.setFocusClick = (event) => {
      if (event.composedPath().some((node) => node.tagName === "CALCITE-CHIP")) {
        return;
      }
      this.setFocus();
    };
    this.setInactiveIfNotContained = (event) => {
      const composedPath = event.composedPath();
      if (!this.active || composedPath.includes(this.el) || composedPath.includes(this.referenceEl)) {
        return;
      }
      if (this.allowCustomValues && this.text) {
        this.addCustomChip(this.text);
      }
      if (this.selectionMode === "single") {
        if (this.textInput) {
          this.textInput.value = "";
        }
        this.text = "";
        this.filterItems("");
        this.updateActiveItemIndex(-1);
      }
      this.active = false;
    };
    this.setMenuEl = (el) => {
      this.menuEl = el;
    };
    this.setListContainerEl = (el) => {
      this.resizeObserver.observe(el);
      this.listContainerEl = el;
    };
    this.setReferenceEl = (el) => {
      this.referenceEl = el;
    };
    this.inputHandler = (event) => {
      const value = event.target.value;
      this.text = value;
      this.filterItems(value);
      if (value) {
        this.activeChipIndex = -1;
      }
    };
    this.filterItems = (() => {
      const find = (item, filteredData) => item &&
        filteredData.some(({ label, value }) => {
          if (isGroup(item)) {
            return value === item.label || value === item.label;
          }
          return (value === item.textLabel ||
            value === item.value ||
            label === item.textLabel ||
            label === item.value);
        });
      return debounce$2((text) => {
        const filteredData = filter(this.data, text);
        const items = this.getCombinedItems();
        items.forEach((item) => {
          const hidden = !find(item, filteredData);
          item.hidden = hidden;
          const [parent, grandparent] = item.ancestors;
          if (find(parent, filteredData) || find(grandparent, filteredData)) {
            item.hidden = false;
          }
          if (!hidden) {
            item.ancestors.forEach((ancestor) => (ancestor.hidden = false));
          }
        });
        this.visibleItems = this.getVisibleItems();
        this.calciteComboboxFilterChange.emit({ visibleItems: [...this.visibleItems], text: text });
      }, 100);
    })();
    this.internalCalciteLookupChangeEvent = () => {
      this.calciteLookupChange.emit(this.selectedItems);
    };
    this.emitCalciteLookupChange = debounce$2(this.internalCalciteLookupChangeEvent, 0);
    this.internalComboboxChangeEvent = () => {
      const { selectedItems } = this;
      this.calciteComboboxChange.emit({ selectedItems });
    };
    this.emitComboboxChange = debounce$2(this.internalComboboxChangeEvent, 0);
    this.updateItems = () => {
      this.items = this.getItems();
      this.groupItems = this.getGroupItems();
      this.data = this.getData();
      this.selectedItems = this.getSelectedItems();
      this.visibleItems = this.getVisibleItems();
      this.needsIcon = this.getNeedsIcon();
      if (!this.allowCustomValues) {
        this.setMaxScrollerHeight();
      }
    };
    this.comboboxFocusHandler = () => {
      var _a;
      this.active = true;
      (_a = this.textInput) === null || _a === void 0 ? void 0 : _a.focus();
    };
    this.comboboxBlurHandler = (event) => {
      this.setInactiveIfNotContained(event);
    };
  }
  activeHandler() {
    if (this.disabled) {
      this.active = false;
      return;
    }
    this.reposition();
  }
  handleDisabledChange(value) {
    if (!value) {
      this.active = false;
    }
  }
  maxItemsHandler() {
    this.setMaxScrollerHeight();
  }
  valueHandler(value) {
    if (!this.internalValueChangeFlag) {
      const items = this.getItems();
      if (Array.isArray(value)) {
        items.forEach((item) => (item.selected = value.includes(item.value)));
      }
      else if (value) {
        items.forEach((item) => (item.selected = value === item.value));
      }
      else {
        items.forEach((item) => (item.selected = false));
      }
      this.updateItems();
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  documentClickHandler(event) {
    this.setInactiveIfNotContained(event);
  }
  calciteComboboxItemChangeHandler(event) {
    if (this.ignoreSelectedEventsFlag) {
      return;
    }
    const target = event.target;
    this.toggleSelection(target, target.selected);
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Updates the position of the component. */
  async reposition() {
    const { popper, menuEl } = this;
    const modifiers = this.getModifiers();
    popper
      ? await updatePopper({
        el: menuEl,
        modifiers,
        placement: defaultMenuPlacement,
        popper
      })
      : this.createPopper();
  }
  /** Sets focus on the component. */
  async setFocus() {
    var _a;
    this.active = true;
    (_a = this.textInput) === null || _a === void 0 ? void 0 : _a.focus();
    this.activeChipIndex = -1;
    this.activeItemIndex = -1;
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    var _a;
    this.internalValueChangeFlag = true;
    this.value = this.getValue();
    this.internalValueChangeFlag = false;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el, { childList: true, subtree: true });
    this.createPopper();
    connectLabel(this);
    connectForm(this);
  }
  componentWillLoad() {
    this.updateItems();
  }
  componentDidLoad() {
    afterConnectDefaultValueSet(this, this.getValue());
  }
  componentDidRender() {
    if (this.el.offsetHeight !== this.inputHeight) {
      this.reposition();
      this.inputHeight = this.el.offsetHeight;
    }
    updateHostInteraction(this);
  }
  disconnectedCallback() {
    var _a, _b;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    (_b = this.resizeObserver) === null || _b === void 0 ? void 0 : _b.disconnect();
    this.destroyPopper();
    disconnectLabel(this);
    disconnectForm(this);
  }
  selectedItemsHandler() {
    this.internalValueChangeFlag = true;
    this.value = this.getValue();
    this.internalValueChangeFlag = false;
  }
  /** when search text is cleared, reset active to  */
  textHandler() {
    this.updateActiveItemIndex(-1);
  }
  getModifiers() {
    const flipModifier = {
      name: "flip",
      enabled: true
    };
    flipModifier.options = {
      fallbackPlacements: this.flipPlacements || popperMenuFlipPlacements
    };
    const eventListenerModifier = {
      name: "eventListeners",
      enabled: this.active
    };
    return [flipModifier, eventListenerModifier];
  }
  createPopper() {
    this.destroyPopper();
    const { menuEl, referenceEl, overlayPositioning } = this;
    const modifiers = this.getModifiers();
    this.popper = createPopper({
      el: menuEl,
      modifiers,
      overlayPositioning,
      placement: defaultMenuPlacement,
      referenceEl
    });
  }
  destroyPopper() {
    const { popper } = this;
    if (popper) {
      popper.destroy();
    }
    this.popper = null;
  }
  getMaxScrollerHeight() {
    const items = this.getCombinedItems().filter((item) => !item.hidden);
    const { maxItems } = this;
    let itemsToProcess = 0;
    let maxScrollerHeight = 0;
    if (items.length > maxItems) {
      items.forEach((item) => {
        if (itemsToProcess < maxItems && maxItems > 0) {
          const height = this.calculateSingleItemHeight(item);
          if (height > 0) {
            maxScrollerHeight += height;
            itemsToProcess++;
          }
        }
      });
    }
    return maxScrollerHeight;
  }
  calculateSingleItemHeight(item) {
    let height = item.offsetHeight;
    // if item has children items, don't count their height twice
    const children = Array.from(item.querySelectorAll(ComboboxChildSelector));
    children
      .map((child) => child === null || child === void 0 ? void 0 : child.offsetHeight)
      .forEach((offsetHeight) => {
      height -= offsetHeight;
    });
    return height;
  }
  getCombinedItems() {
    return [...this.groupItems, ...this.items];
  }
  toggleSelection(item, value = !item.selected) {
    if (!item) {
      return;
    }
    if (this.isMulti()) {
      item.selected = value;
      this.updateAncestors(item);
      this.selectedItems = this.getSelectedItems();
      this.emitCalciteLookupChange();
      this.emitComboboxChange();
      this.resetText();
      this.filterItems("");
    }
    else {
      this.ignoreSelectedEventsFlag = true;
      this.items.forEach((el) => (el.selected = el === item ? value : false));
      this.ignoreSelectedEventsFlag = false;
      this.selectedItems = this.getSelectedItems();
      this.emitComboboxChange();
      if (this.textInput) {
        this.textInput.value = item.textLabel;
      }
      this.active = false;
      this.updateActiveItemIndex(-1);
      this.resetText();
      this.filterItems("");
    }
  }
  updateAncestors(item) {
    if (this.selectionMode !== "ancestors") {
      return;
    }
    const ancestors = getItemAncestors(item);
    const children = getItemChildren(item);
    if (item.selected) {
      ancestors.forEach((el) => {
        el.selected = true;
      });
    }
    else {
      children.forEach((el) => (el.selected = false));
      [...ancestors].forEach((el) => {
        if (!hasActiveChildren(el)) {
          el.selected = false;
        }
      });
    }
  }
  getVisibleItems() {
    return this.items.filter((item) => !item.hidden);
  }
  getSelectedItems() {
    if (!this.isMulti()) {
      const match = this.items.find(({ selected }) => selected);
      return match ? [match] : [];
    }
    return (this.items
      .filter((item) => item.selected && (this.selectionMode !== "ancestors" || !hasActiveChildren(item)))
      /** Preserve order of entered tags */
      .sort((a, b) => {
      const aIdx = this.selectedItems.indexOf(a);
      const bIdx = this.selectedItems.indexOf(b);
      if (aIdx > -1 && bIdx > -1) {
        return aIdx - bIdx;
      }
      return bIdx - aIdx;
    }));
  }
  getData() {
    return this.items.map((item) => ({
      constant: item.constant,
      value: item.value,
      label: item.textLabel,
      guid: item.guid
    }));
  }
  getNeedsIcon() {
    return this.selectionMode === "single" && this.items.some((item) => item.icon);
  }
  resetText() {
    if (this.textInput) {
      this.textInput.value = "";
    }
    this.text = "";
  }
  getItems() {
    const items = Array.from(this.el.querySelectorAll(ComboboxItem$1));
    return items.filter((item) => !item.disabled);
  }
  getGroupItems() {
    return Array.from(this.el.querySelectorAll(ComboboxItemGroup$1));
  }
  addCustomChip(value, focus) {
    const existingItem = this.items.find((el) => el.textLabel === value);
    if (existingItem) {
      this.toggleSelection(existingItem, true);
    }
    else {
      if (!this.isMulti()) {
        this.toggleSelection(this.selectedItems[this.selectedItems.length - 1], false);
      }
      const item = document.createElement(ComboboxItem$1);
      item.value = value;
      item.textLabel = value;
      item.selected = true;
      this.el.appendChild(item);
      this.resetText();
      if (focus) {
        this.setFocus();
      }
      this.updateItems();
      this.filterItems("");
      this.emitCalciteLookupChange();
      this.emitComboboxChange();
    }
  }
  removeActiveChip() {
    this.toggleSelection(this.selectedItems[this.activeChipIndex], false);
    this.setFocus();
  }
  removeLastChip() {
    this.toggleSelection(this.selectedItems[this.selectedItems.length - 1], false);
    this.setFocus();
  }
  previousChip() {
    if (this.text) {
      return;
    }
    const length = this.selectedItems.length - 1;
    const active = this.activeChipIndex;
    this.activeChipIndex = active === -1 ? length : Math.max(active - 1, 0);
    this.updateActiveItemIndex(-1);
    this.focusChip();
  }
  nextChip() {
    if (this.text || this.activeChipIndex === -1) {
      return;
    }
    const last = this.selectedItems.length - 1;
    const newIndex = this.activeChipIndex + 1;
    if (newIndex > last) {
      this.activeChipIndex = -1;
      this.setFocus();
    }
    else {
      this.activeChipIndex = newIndex;
      this.focusChip();
    }
    this.updateActiveItemIndex(-1);
  }
  focusChip() {
    var _a;
    const guid = (_a = this.selectedItems[this.activeChipIndex]) === null || _a === void 0 ? void 0 : _a.guid;
    const chip = guid
      ? this.referenceEl.querySelector(`#${chipUidPrefix}${guid}`)
      : null;
    chip === null || chip === void 0 ? void 0 : chip.setFocus();
  }
  shiftActiveItemIndex(delta) {
    const length = this.visibleItems.length;
    const newIndex = (this.activeItemIndex + length + delta) % length;
    this.updateActiveItemIndex(newIndex);
    // ensure active item is in view if we have scrolling
    const activeItem = this.visibleItems[this.activeItemIndex];
    const height = this.calculateSingleItemHeight(activeItem);
    const { offsetHeight, scrollTop } = this.listContainerEl;
    if (offsetHeight + scrollTop < activeItem.offsetTop + height) {
      this.listContainerEl.scrollTop = activeItem.offsetTop - offsetHeight + height;
    }
    else if (activeItem.offsetTop < scrollTop) {
      this.listContainerEl.scrollTop = activeItem.offsetTop;
    }
  }
  updateActiveItemIndex(index) {
    var _a;
    this.activeItemIndex = index;
    let activeDescendant = null;
    this.visibleItems.forEach((el, i) => {
      if (i === index) {
        el.active = true;
        activeDescendant = el.guid;
      }
      else {
        el.active = false;
      }
    });
    this.activeDescendant = activeDescendant;
    if (this.activeItemIndex > -1) {
      this.activeChipIndex = -1;
      (_a = this.textInput) === null || _a === void 0 ? void 0 : _a.focus();
    }
  }
  isMulti() {
    return this.selectionMode !== "single";
  }
  //--------------------------------------------------------------------------
  //
  //  Render Methods
  //
  //--------------------------------------------------------------------------
  renderChips() {
    const { activeChipIndex, scale, selectionMode, intlRemoveTag } = this;
    return this.selectedItems.map((item, i) => {
      const chipClasses = {
        chip: true,
        "chip--active": activeChipIndex === i
      };
      const ancestors = [...getItemAncestors(item)].reverse();
      const pathLabel = [...ancestors, item].map((el) => el.textLabel);
      const label = selectionMode !== "ancestors" ? item.textLabel : pathLabel.join(" / ");
      return (hAsync("calcite-chip", { class: chipClasses, dismissLabel: intlRemoveTag, dismissible: true, icon: item.icon, id: item.guid ? `${chipUidPrefix}${item.guid}` : null, key: item.textLabel, onCalciteChipDismiss: (event) => this.calciteChipDismissHandler(event, item), scale: scale, title: label, value: item.value }, label));
    });
  }
  renderInput() {
    const { guid, active, disabled, placeholder, selectionMode, needsIcon, selectedItems } = this;
    const single = selectionMode === "single";
    const selectedItem = selectedItems[0];
    const showLabel = !active && single && !!selectedItem;
    return (hAsync("span", { class: {
        "input-wrap": true,
        "input-wrap--single": single
      } }, showLabel && (hAsync("span", { class: {
        label: true,
        "label--spaced": needsIcon
      }, key: "label", onFocus: this.comboboxFocusHandler, tabindex: "0" }, selectedItem.textLabel)), hAsync("input", { "aria-activedescendant": this.activeDescendant, "aria-autocomplete": "list", "aria-controls": `${listboxUidPrefix}${guid}`, "aria-label": getLabelText(this), class: {
        input: true,
        "input--single": true,
        "input--transparent": this.activeChipIndex > -1,
        "input--hidden": showLabel,
        "input--icon": single && needsIcon
      }, disabled: disabled, id: `${inputUidPrefix}${guid}`, key: "input", onBlur: this.comboboxBlurHandler, onFocus: this.comboboxFocusHandler, onInput: this.inputHandler, placeholder: placeholder, ref: (el) => (this.textInput = el), type: "text" })));
  }
  renderListBoxOptions() {
    return this.visibleItems.map((item) => (hAsync("li", { "aria-selected": (!!item.selected).toString(), id: item.guid ? `${itemUidPrefix}${item.guid}` : null, role: "option", tabindex: "-1" }, item.textLabel)));
  }
  renderPopperContainer() {
    const { active, setMenuEl, setListContainerEl } = this;
    const classes = {
      "list-container": true,
      [CSS$D.animation]: true,
      [CSS$D.animationActive]: active
    };
    return (hAsync("div", { "aria-hidden": "true", class: { "popper-container": true, "popper-container--active": active }, ref: setMenuEl }, hAsync("div", { class: classes, onTransitionEnd: this.transitionEnd, ref: setListContainerEl }, hAsync("ul", { class: { list: true, "list--hide": !active } }, hAsync("slot", null)))));
  }
  renderIconStart() {
    const { selectionMode, needsIcon, selectedItems } = this;
    const selectedItem = selectedItems[0];
    return (selectionMode === "single" &&
      needsIcon && (hAsync("span", { class: "icon-start" }, (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.icon) && (hAsync("calcite-icon", { class: "selected-icon", icon: selectedItem.icon, scale: "s" })))));
  }
  renderIconEnd() {
    return (hAsync("span", { class: "icon-end" }, hAsync("calcite-icon", { icon: "chevron-down", scale: "s" })));
  }
  render() {
    const { active, guid, label } = this;
    const single = this.selectionMode === "single";
    return (hAsync(Host, { onKeyDown: this.keydownHandler }, hAsync("div", { "aria-autocomplete": "list", "aria-expanded": active.toString(), "aria-haspopup": "listbox", "aria-labelledby": `${labelUidPrefix}${guid}`, "aria-owns": `${listboxUidPrefix}${guid}`, class: {
        wrapper: true,
        "wrapper--single": single || !this.selectedItems.length,
        "wrapper--active": active
      }, onClick: this.setFocusClick, ref: this.setReferenceEl, role: "combobox" }, hAsync("div", { class: "grid-input" }, this.renderIconStart(), !single && this.renderChips(), hAsync("label", { class: "screen-readers-only", htmlFor: `${inputUidPrefix}${guid}`, id: `${labelUidPrefix}${guid}` }, label), this.renderInput()), this.renderIconEnd()), hAsync("ul", { "aria-labelledby": `${labelUidPrefix}${guid}`, "aria-multiselectable": "true", class: "screen-readers-only", id: `${listboxUidPrefix}${guid}`, role: "listbox", tabIndex: -1 }, this.renderListBoxOptions()), this.renderPopperContainer(), hAsync(HiddenFormInputSlot, { component: this })));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "active": ["activeHandler"],
    "disabled": ["handleDisabledChange"],
    "maxItems": ["maxItemsHandler"],
    "value": ["valueHandler"],
    "selectedItems": ["selectedItemsHandler"],
    "text": ["textHandler"]
  }; }
  static get style() { return comboboxCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-combobox",
    "$members$": {
      "active": [1540],
      "disabled": [516],
      "label": [1],
      "placeholder": [1],
      "maxItems": [2, "max-items"],
      "name": [513],
      "allowCustomValues": [4, "allow-custom-values"],
      "overlayPositioning": [1, "overlay-positioning"],
      "required": [4],
      "selectionMode": [513, "selection-mode"],
      "scale": [513],
      "value": [1025],
      "intlRemoveTag": [1, "intl-remove-tag"],
      "flipPlacements": [16],
      "items": [32],
      "groupItems": [32],
      "selectedItems": [32],
      "visibleItems": [32],
      "needsIcon": [32],
      "activeItemIndex": [32],
      "activeChipIndex": [32],
      "activeDescendant": [32],
      "text": [32],
      "reposition": [64],
      "setFocus": [64]
    },
    "$listeners$": [[4, "click", "documentClickHandler"], [0, "calciteComboboxItemChange", "calciteComboboxItemChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["active", "active"], ["disabled", "disabled"], ["name", "name"], ["selectionMode", "selection-mode"], ["scale", "scale"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$C = {
  icon: "icon",
  iconActive: "icon--active",
  custom: "icon--custom",
  dot: "icon--dot",
  single: "label--single",
  label: "label",
  active: "label--active",
  selected: "label--selected",
  title: "title",
  textContainer: "text-container"
};

const comboboxItemCss = "@charset \"UTF-8\";@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-combobox-item:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-combobox-item{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-combobox-item{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-combobox-item{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-combobox-item{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-combobox-item{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-combobox-item:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-combobox-item-h{display:none}/*!@.scale--s*/.scale--s.sc-calcite-combobox-item{font-size:var(--calcite-font-size--2);line-height:1rem;--calcite-combobox-item-spacing-unit-l:0.5rem;--calcite-combobox-item-spacing-unit-s:0.25rem;--calcite-combobox-item-spacing-indent:0.5rem}/*!@.scale--m*/.scale--m.sc-calcite-combobox-item{font-size:var(--calcite-font-size--1);line-height:1rem;--calcite-combobox-item-spacing-unit-l:0.75rem;--calcite-combobox-item-spacing-unit-s:0.5rem;--calcite-combobox-item-spacing-indent:0.75rem}/*!@.scale--l*/.scale--l.sc-calcite-combobox-item{font-size:var(--calcite-font-size-0);line-height:1.25rem;--calcite-combobox-item-spacing-unit-l:1rem;--calcite-combobox-item-spacing-unit-s:0.75rem;--calcite-combobox-item-spacing-indent:1rem}/*!@.container*/.container.sc-calcite-combobox-item{--calcite-combobox-item-indent-value:calc(\n    var(--calcite-combobox-item-spacing-indent) * var(--calcite-combobox-item-spacing-indent-multiplier)\n  )}/*!@:host(:focus)*/.sc-calcite-combobox-item-h:focus{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@:host([disabled])*/[disabled].sc-calcite-combobox-item-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-combobox-item-h[disabled] .sc-calcite-combobox-item-s>[calcite-hydrated][disabled],[disabled].sc-calcite-combobox-item-h [calcite-hydrated][disabled].sc-calcite-combobox-item{opacity:1}/*!@:host, ul*/.sc-calcite-combobox-item-h,ul.sc-calcite-combobox-item{margin:0px;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding:0px;outline:2px solid transparent;outline-offset:2px}/*!@.label*/.label.sc-calcite-combobox-item{position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;width:100%;min-width:100%;cursor:pointer;-ms-flex-align:center;align-items:center;color:var(--calcite-ui-text-3);-webkit-text-decoration-line:none;text-decoration-line:none;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;padding:var(--calcite-combobox-item-spacing-unit-s) var(--calcite-combobox-item-spacing-unit-l)}/*!@:host([disabled]) .label*/[disabled].sc-calcite-combobox-item-h .label.sc-calcite-combobox-item{cursor:default}/*!@.label--selected*/.label--selected.sc-calcite-combobox-item{font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1)}/*!@.label--active*/.label--active.sc-calcite-combobox-item{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@.label:hover, .label:active*/.label.sc-calcite-combobox-item:hover,.label.sc-calcite-combobox-item:active{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-text-1);-webkit-text-decoration-line:none;text-decoration-line:none;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@.title*/.title.sc-calcite-combobox-item{padding:0 var(--calcite-combobox-item-spacing-unit-l)}/*!@.icon*/.icon.sc-calcite-combobox-item{display:-ms-inline-flexbox;display:inline-flex;opacity:0;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);color:var(--calcite-ui-border-1)}/*!@.icon--indent*/.icon--indent.sc-calcite-combobox-item{-webkit-padding-start:var(--calcite-combobox-item-indent-value);padding-inline-start:var(--calcite-combobox-item-indent-value)}/*!@.icon--custom*/.icon--custom.sc-calcite-combobox-item{margin-top:-1px;color:var(--calcite-ui-text-3)}/*!@.icon--active*/.icon--active.sc-calcite-combobox-item{color:var(--calcite-ui-text-1)}/*!@.icon--dot*/.icon--dot.sc-calcite-combobox-item{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;width:var(--calcite-combobox-item-spacing-unit-l)}/*!@.icon--dot:before*/.icon--dot.sc-calcite-combobox-item:before{text-align:start;content:\"•\"}/*!@.label--active .icon*/.label--active.sc-calcite-combobox-item .icon.sc-calcite-combobox-item{opacity:1}/*!@.label--selected .icon*/.label--selected.sc-calcite-combobox-item .icon.sc-calcite-combobox-item{opacity:1;color:var(--calcite-ui-brand)}/*!@:host(:hover[disabled]) .icon*/.sc-calcite-combobox-item-h:hover[disabled] .icon.sc-calcite-combobox-item{opacity:1}";

/**
 * @slot - A slot for adding nested `calcite-combobox-item`s.
 */
class ComboboxItem {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteComboboxItemChange = createEvent(this, "calciteComboboxItemChange", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /** When true, the item cannot be clicked and is visually muted. */
    this.disabled = false;
    /** Set this to true to pre-select an item. Toggles when an item is checked/unchecked. */
    this.selected = false;
    /** True when item is highlighted either from keyboard or mouse hover */
    this.active = false;
    /** Unique identifier, used for accessibility */
    this.guid = guid();
    this.scale = "m";
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.itemClickHandler = (event) => {
      event.preventDefault();
      if (this.disabled) {
        return;
      }
      this.selected = !this.selected;
    };
  }
  selectedWatchHandler() {
    this.calciteComboboxItemChange.emit(this.el);
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    this.ancestors = getAncestors(this.el);
    this.scale = getElementProp(this.el, "scale", this.scale);
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /**
   * Used to toggle the selection state. By default this won't trigger an event.
   * The first argument allows the value to be coerced, rather than swapping values.
   */
  async toggleSelected(coerce) {
    if (this.disabled) {
      return;
    }
    this.selected = typeof coerce === "boolean" ? coerce : !this.selected;
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderIcon(isSingle) {
    const { icon, disabled, selected } = this;
    const level = `${CSS$C.icon}--indent`;
    const defaultIcon = isSingle ? "dot" : "check";
    const iconPath = disabled ? "circle-disallowed" : defaultIcon;
    const showDot = isSingle && !icon && !disabled;
    return showDot ? (hAsync("span", { class: {
        [CSS$C.icon]: true,
        [CSS$C.dot]: true,
        [level]: true
      } })) : (hAsync("calcite-icon", { class: {
        [CSS$C.icon]: !icon,
        [CSS$C.custom]: !!icon,
        [CSS$C.iconActive]: icon && selected,
        [level]: true
      }, icon: icon || iconPath, scale: "s" }));
  }
  renderChildren() {
    if (getSlotted(this.el)) {
      return (hAsync("ul", { key: "default-slot-container" }, hAsync("slot", null)));
    }
    return null;
  }
  render() {
    const isSingleSelect = getElementProp(this.el, "selection-mode", "multi") === "single";
    const classes = {
      [CSS$C.label]: true,
      [CSS$C.selected]: this.selected,
      [CSS$C.active]: this.active,
      [CSS$C.single]: isSingleSelect
    };
    const depth = getDepth();
    return (hAsync(Host, { "aria-hidden": "true" }, hAsync("div", { class: `container scale--${this.scale}`, style: { "--calcite-combobox-item-spacing-indent-multiplier": `${depth}` } }, hAsync("li", { class: classes, id: this.guid, onClick: this.itemClickHandler }, this.renderIcon(isSingleSelect), hAsync("span", { class: CSS$C.title }, this.textLabel)), this.renderChildren())));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "selected": ["selectedWatchHandler"]
  }; }
  static get style() { return comboboxItemCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-combobox-item",
    "$members$": {
      "disabled": [516],
      "selected": [1540],
      "active": [4],
      "ancestors": [1040],
      "guid": [1],
      "icon": [1],
      "textLabel": [513, "text-label"],
      "value": [8],
      "constant": [516],
      "toggleSelected": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["selected", "selected"], ["textLabel", "text-label"], ["constant", "constant"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$B = {
  list: "list",
  label: "label",
  title: "title"
};

const comboboxItemGroupCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-combobox-item-group:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-combobox-item-group{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-combobox-item-group{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-combobox-item-group{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-combobox-item-group{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-combobox-item-group{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-combobox-item-group:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-combobox-item-group-h{display:none}/*!@.scale--s*/.scale--s.sc-calcite-combobox-item-group{font-size:var(--calcite-font-size--2);line-height:1rem;--calcite-combobox-item-spacing-unit-l:0.5rem;--calcite-combobox-item-spacing-unit-s:0.25rem;--calcite-combobox-item-spacing-indent-1:0.5rem;--calcite-combobox-item-spacing-indent-2:1rem}/*!@.scale--m*/.scale--m.sc-calcite-combobox-item-group{font-size:var(--calcite-font-size--1);line-height:1rem;--calcite-combobox-item-spacing-unit-l:0.75rem;--calcite-combobox-item-spacing-unit-s:0.5rem;--calcite-combobox-item-spacing-indent-1:0.75rem;--calcite-combobox-item-spacing-indent-2:1.5rem}/*!@.scale--l*/.scale--l.sc-calcite-combobox-item-group{font-size:var(--calcite-font-size-0);line-height:1.25rem;--calcite-combobox-item-spacing-unit-l:1rem;--calcite-combobox-item-spacing-unit-s:0.75rem;--calcite-combobox-item-spacing-indent-1:1rem;--calcite-combobox-item-spacing-indent-2:2rem}/*!@:host, .list*/.sc-calcite-combobox-item-group-h,.list.sc-calcite-combobox-item-group{margin:0px;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding:0px;outline:2px solid transparent;outline-offset:2px}/*!@.label*/.label.sc-calcite-combobox-item-group{-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;width:100%;min-width:0px;max-width:100%;color:var(--calcite-ui-text-3)}/*!@.label--indent-1*/.label--indent-1.sc-calcite-combobox-item-group{-webkit-padding-start:var(--calcite-combobox-item-spacing-indent-1);padding-inline-start:var(--calcite-combobox-item-spacing-indent-1)}/*!@.label--indent-2*/.label--indent-2.sc-calcite-combobox-item-group{-webkit-padding-start:var(--calcite-combobox-item-spacing-indent-2);padding-inline-start:var(--calcite-combobox-item-spacing-indent-2)}/*!@.title*/.title.sc-calcite-combobox-item-group{border:0 solid;display:block;-ms-flex:1 1 0%;flex:1 1 0%;border-bottom-width:1px;font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-2);word-wrap:break-word;word-break:break-word;border-bottom-color:var(--calcite-ui-border-3);padding:var(--calcite-combobox-item-spacing-unit-l) 0;margin-left:var(--calcite-combobox-item-spacing-unit-s);margin-right:var(--calcite-combobox-item-spacing-unit-s)}";

/**
 * @slot - A slot for adding `calcite-combobox-item`s.
 */
class ComboboxItemGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.guid = guid();
    this.scale = "m";
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    this.ancestors = getAncestors(this.el);
    this.scale = getElementProp(this.el, "scale", this.scale);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    const { el, scale } = this;
    const indent = `${CSS$B.label}--indent-${getDepth()}`;
    return (hAsync("ul", { "aria-labelledby": this.guid, class: { [CSS$B.list]: true, [`scale--${scale}`]: true }, role: "group" }, hAsync("li", { class: { [CSS$B.label]: true, [indent]: true }, id: this.guid, role: "presentation" }, hAsync("span", { class: CSS$B.title }, this.label)), hAsync("slot", null)));
  }
  get el() { return getElement(this); }
  static get style() { return comboboxItemGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-combobox-item-group",
    "$members$": {
      "ancestors": [1040],
      "label": [1]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
function isActivationKey(key) {
  return key === "Enter" || key === " ";
}
const numberKeys = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
function isValidNumber(numberString) {
  return !(!numberString || isNaN(Number(numberString)));
}
function parseNumberString(numberString) {
  if (!numberString || !stringContainsNumbers(numberString)) {
    return "";
  }
  return sanitizeExponentialNumberString(numberString, (nonExpoNumString) => {
    let containsDecimal = false;
    const result = nonExpoNumString
      .split("")
      .filter((value, i) => {
      if (value.match(/\./g) && !containsDecimal) {
        containsDecimal = true;
        return true;
      }
      if (value.match(/\-/g) && i === 0) {
        return true;
      }
      return numberKeys.includes(value);
    })
      .reduce((string, part) => string + part);
    return isValidNumber(result) ? Number(result).toString() : null;
  });
}
function sanitizeDecimalString(decimalString) {
  const decimalAtEndOfStringButNotStart = /(?!^\.)\.$/;
  return decimalString.replace(decimalAtEndOfStringButNotStart, "");
}
function sanitizeNegativeString(negativeString) {
  const allHyphensExceptTheStart = /(?!^-)-/g;
  return negativeString.replace(allHyphensExceptTheStart, "");
}
function sanitizeLeadingZeroString(zeroString) {
  const allLeadingZerosOptionallyNegative = /^([-0])0+(?=\d)/;
  return zeroString.replace(allLeadingZerosOptionallyNegative, "$1");
}
function sanitizeNumberString(numberString) {
  return sanitizeExponentialNumberString(numberString, (nonExpoNumString) => {
    const sanitizedValue = sanitizeNegativeString(sanitizeDecimalString(sanitizeLeadingZeroString(nonExpoNumString)));
    const isNegativeDecimalOnlyZeros = /^-\b0\b\.?0*$/;
    return isValidNumber(sanitizedValue)
      ? isNegativeDecimalOnlyZeros.test(sanitizedValue)
        ? sanitizedValue
        : Number(sanitizedValue).toString()
      : nonExpoNumString;
  });
}
function sanitizeExponentialNumberString(numberString, func) {
  if (!numberString) {
    return numberString;
  }
  const firstE = numberString.toLowerCase().indexOf("e") + 1;
  return numberString
    .replace(/[eE]*$/g, "")
    .substring(0, firstE)
    .concat(numberString.slice(firstE).replace(/[eE]/g, ""))
    .split(/[eE]/)
    .map((section, i) => (i === 1 ? func(section.replace(/\./g, "")) : func(section)))
    .join("e")
    .replace(/^e/, "1e");
}
function stringContainsNumbers(string) {
  return numberKeys.some((number) => string.includes(number));
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
function createLocaleNumberFormatter(locale) {
  return new Intl.NumberFormat(locale, {
    minimumFractionDigits: 0,
    maximumFractionDigits: 20
  });
}
function delocalizeNumberString(numberString, locale) {
  return sanitizeExponentialNumberString(numberString, (nonExpoNumString) => {
    if (nonExpoNumString) {
      const groupSeparator = getGroupSeparator(locale);
      const decimalSeparator = getDecimalSeparator(locale);
      const splitNumberString = nonExpoNumString.split("");
      const decimalIndex = splitNumberString.lastIndexOf(decimalSeparator);
      const delocalizedNumberString = splitNumberString
        .map((value, index) => {
        if (value === groupSeparator || (value === decimalSeparator && index !== decimalIndex)) {
          return "";
        }
        return value;
      })
        .reduce((string, part) => string + part)
        .replace(decimalSeparator, ".");
      return isNaN(Number(delocalizedNumberString)) ? nonExpoNumString : delocalizedNumberString;
    }
    return nonExpoNumString;
  });
}
function getGroupSeparator(locale) {
  const formatter = createLocaleNumberFormatter(locale);
  const parts = formatter.formatToParts(1234567.8);
  const value = parts.find((part) => part.type === "group").value;
  return value.trim().length === 0 ? " " : value;
}
function getDecimalSeparator(locale) {
  const formatter = createLocaleNumberFormatter(locale);
  const parts = formatter.formatToParts(1234567.8);
  const value = parts.find((part) => part.type === "decimal").value;
  return value.trim().length === 0 ? " " : value;
}
function localizeNumberString(numberString, locale, displayGroupSeparator = false) {
  return sanitizeExponentialNumberString(numberString, (nonExpoNumString) => {
    if (nonExpoNumString) {
      const number = Number(sanitizeDecimalString(nonExpoNumString));
      if (!isNaN(number)) {
        const formatter = createLocaleNumberFormatter(locale);
        const parts = formatter.formatToParts(number);
        const localizedNumberString = parts
          .map(({ type, value }) => {
          switch (type) {
            case "group":
              return displayGroupSeparator ? getGroupSeparator(locale) : "";
            case "decimal":
              return getDecimalSeparator(locale);
            default:
              return value;
          }
        })
          .reduce((string, part) => string + part);
        return localizedNumberString;
      }
      return nonExpoNumString;
    }
  });
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
/**
 * Check if date is within a min and max
 */
function inRange(date, min, max) {
  const time = date.getTime();
  const afterMin = !(min instanceof Date) || time >= min.getTime();
  const beforeMax = !(max instanceof Date) || time <= max.getTime();
  return afterMin && beforeMax;
}
/**
 * Ensures date is within range,
 * returns min or max if out of bounds
 */
function dateFromRange(date, min, max) {
  if (!(date instanceof Date)) {
    return null;
  }
  const time = date.getTime();
  const beforeMin = min instanceof Date && time < min.getTime();
  const afterMax = max instanceof Date && time > max.getTime();
  if (beforeMin) {
    return min;
  }
  if (afterMax) {
    return max;
  }
  return date;
}
/**
 * Parse an iso8601 string (YYYY-mm-dd) into a valid date.
 * TODO: handle time when time of day UI is added
 */
function dateFromISO(iso8601) {
  if (iso8601 instanceof Date) {
    return iso8601;
  }
  if (!iso8601 || typeof iso8601 !== "string") {
    return null;
  }
  const d = iso8601.split(/[: T-]/).map(parseFloat);
  const date = new Date(d[0], (d[1] || 1) - 1, d[2] || 1);
  date.setFullYear(d[0]);
  if (isNaN(date.getTime())) {
    throw new Error(`Invalid ISO 8601 date: "${iso8601}"`);
  }
  return date;
}
/**
 * Return first portion of ISO string (YYYY-mm-dd)
 */
function dateToISO(date) {
  if (typeof date === "string") {
    return date;
  }
  if (date instanceof Date) {
    return new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split("T")[0];
  }
  return "";
}
/**
 * Check if two dates are the same day, month, year
 */
function sameDate(d1, d2) {
  return (d1 instanceof Date &&
    d2 instanceof Date &&
    d1.getDate() === d2.getDate() &&
    d1.getMonth() === d2.getMonth() &&
    d1.getFullYear() === d2.getFullYear());
}
/**
 * Get a date one month in the past
 */
function prevMonth(date) {
  const month = date.getMonth();
  const nextDate = new Date(date);
  nextDate.setMonth(month - 1);
  // date doesn't exist in new month, use last day
  if (month === nextDate.getMonth()) {
    return new Date(date.getFullYear(), month, 0);
  }
  return nextDate;
}
/**
 * Get a date one month in the future
 */
function nextMonth(date) {
  const month = date.getMonth();
  const nextDate = new Date(date);
  nextDate.setMonth(month + 1);
  // date doesn't exist in new month, use last day
  if ((month + 2) % 7 === nextDate.getMonth() % 7) {
    return new Date(date.getFullYear(), month + 2, 0);
  }
  return nextDate;
}
/**
 * Translate a number into a given locals numeral system
 */
function localizeNumber(num, localeData) {
  return String(num)
    .split("")
    .map((i) => localeData.numerals[i])
    .join("");
}
/**
 * Calculate actual number from localized string
 */
function parseNumber(str, localeData) {
  const numerals = "0123456789";
  return parseInt(str
    .split("")
    .map((i) => numerals[localeData.numerals.indexOf(i)])
    .filter((num) => num)
    .join(""));
}
/**
 * Parse numeric units for day, month, and year from a localized string
 * month starts at 0 (can pass to date constructor)
 */
function parseDateString(str, localeData) {
  const { separator, unitOrder } = localeData;
  const order = getOrder(unitOrder);
  const values = replaceArabicNumerals(str).split(separator);
  return {
    day: parseInt(values[order.indexOf("d")]),
    month: parseInt(values[order.indexOf("m")]) - 1,
    year: parseInt(values[order.indexOf("y")])
  };
}
/**
 * Convert eastern arbic numerals
 */
function replaceArabicNumerals(str = "") {
  return str
    .replace(/[\u0660-\u0669]/g, (c) => (c.charCodeAt(0) - 0x0660))
    .replace(/[\u06f0-\u06f9]/g, (c) => (c.charCodeAt(0) - 0x06f0));
}
/**
 * Based on the unitOrder string, find order of month, day, and year for locale
 */
function getOrder(unitOrder) {
  const signifiers = ["d", "m", "y"];
  const order = unitOrder.toLowerCase();
  return signifiers.sort((a, b) => order.indexOf(a) - order.indexOf(b));
}
/**
 * Get number of days between two dates
 */
function getDaysDiff(date1, date2) {
  const ts1 = date1.getTime();
  const ts2 = date2.getTime();
  return (ts1 - ts2) / (1000 * 3600 * 24);
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const HEADING_LEVEL$6 = 2;
const TEXT$e = {
  nextMonth: "Next month",
  prevMonth: "Previous month",
  year: "Year"
};

const datePickerCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-date-picker:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-date-picker{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-date-picker{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-date-picker{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-date-picker{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-date-picker{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-date-picker:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-date-picker-h{display:none}/*!@:host*/.sc-calcite-date-picker-h{position:relative;display:inline-block;width:100%;overflow:visible;border-radius:0px;border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-2);background-color:var(--calcite-ui-foreground-1);vertical-align:top}/*!@:host([scale=s])*/[scale=s].sc-calcite-date-picker-h{max-width:216px}/*!@:host([scale=m])*/[scale=m].sc-calcite-date-picker-h{max-width:286px}/*!@:host([scale=l])*/[scale=l].sc-calcite-date-picker-h{max-width:398px}";

class DatePicker {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteDatePickerChange = createEvent(this, "calciteDatePickerChange", 7);
    this.calciteDatePickerRangeChange = createEvent(this, "calciteDatePickerRangeChange", 7);
    /** Localized string for "previous month" (used for aria label)
     * @default "Previous month"
     */
    this.intlPrevMonth = TEXT$e.prevMonth;
    /** Localized string for "next month" (used for aria label)
     * @default "Next month"
     */
    this.intlNextMonth = TEXT$e.nextMonth;
    /** Localized string for "year" (used for aria label)
     * @default "Year"
     */
    this.intlYear = TEXT$e.year;
    /** BCP 47 language tag for desired language and country format */
    this.locale = document.documentElement.lang || "en";
    /** specify the scale of the date picker */
    this.scale = "m";
    /** Range mode activation */
    this.range = false;
    /** Disables the default behaviour on the third click of narrowing or extending the range and instead starts a new range. */
    this.proximitySelectionDisabled = false;
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.keyUpHandler = (e) => {
      if (e.key === "Escape") {
        this.reset();
      }
    };
    this.monthHeaderSelectChange = (e) => {
      const date = new Date(e.detail);
      if (!this.range) {
        this.activeDate = date;
      }
      else {
        if (this.activeRange === "end") {
          this.activeEndDate = date;
        }
        else {
          this.activeStartDate = date;
        }
        this.mostRecentRangeValue = date;
      }
    };
    this.monthActiveDateChange = (e) => {
      const date = new Date(e.detail);
      if (!this.range) {
        this.activeDate = date;
      }
      else {
        if (this.activeRange === "end") {
          this.activeEndDate = date;
        }
        else {
          this.activeStartDate = date;
        }
        this.mostRecentRangeValue = date;
      }
    };
    this.monthHoverChange = (e) => {
      if (!this.startAsDate) {
        this.hoverRange = undefined;
        return;
      }
      const date = new Date(e.detail);
      this.hoverRange = {
        focused: this.activeRange || "start",
        start: this.startAsDate,
        end: this.endAsDate
      };
      if (!this.proximitySelectionDisabled) {
        if (this.endAsDate) {
          const startDiff = getDaysDiff(date, this.startAsDate);
          const endDiff = getDaysDiff(date, this.endAsDate);
          if (endDiff > 0) {
            this.hoverRange.end = date;
            this.hoverRange.focused = "end";
          }
          else if (startDiff < 0) {
            this.hoverRange.start = date;
            this.hoverRange.focused = "start";
          }
          else if (startDiff > endDiff) {
            this.hoverRange.start = date;
            this.hoverRange.focused = "start";
          }
          else {
            this.hoverRange.end = date;
            this.hoverRange.focused = "end";
          }
        }
        else {
          if (date < this.startAsDate) {
            this.hoverRange = {
              focused: "start",
              start: date,
              end: this.startAsDate
            };
          }
          else {
            this.hoverRange.end = date;
            this.hoverRange.focused = "end";
          }
        }
      }
      else {
        if (!this.endAsDate) {
          if (date < this.startAsDate) {
            this.hoverRange = {
              focused: "start",
              start: date,
              end: this.startAsDate
            };
          }
          else {
            this.hoverRange.end = date;
            this.hoverRange.focused = "end";
          }
        }
        else {
          this.hoverRange = undefined;
        }
      }
    };
    this.monthMouseOutChange = () => {
      if (this.hoverRange) {
        this.hoverRange = undefined;
      }
    };
    /**
     * Reset active date and close
     */
    this.reset = () => {
      var _a, _b, _c, _d, _e, _f;
      if (!Array.isArray(this.valueAsDate) &&
        this.valueAsDate &&
        ((_a = this.valueAsDate) === null || _a === void 0 ? void 0 : _a.getTime()) !== ((_b = this.activeDate) === null || _b === void 0 ? void 0 : _b.getTime())) {
        this.activeDate = new Date(this.valueAsDate);
      }
      if (this.startAsDate && ((_c = this.startAsDate) === null || _c === void 0 ? void 0 : _c.getTime()) !== ((_d = this.activeStartDate) === null || _d === void 0 ? void 0 : _d.getTime())) {
        this.activeStartDate = new Date(this.startAsDate);
      }
      if (this.endAsDate && ((_e = this.endAsDate) === null || _e === void 0 ? void 0 : _e.getTime()) !== ((_f = this.activeEndDate) === null || _f === void 0 ? void 0 : _f.getTime())) {
        this.activeEndDate = new Date(this.endAsDate);
      }
    };
    /**
     * Event handler for when the selected date changes
     */
    this.monthDateChange = (e) => {
      const date = new Date(e.detail);
      if (!this.range) {
        this.value = date ? dateToISO(date) : "";
        this.valueAsDate = date || null;
        this.activeDate = date || null;
        this.calciteDatePickerChange.emit(date);
        return;
      }
      if (!this.startAsDate || (!this.endAsDate && date < this.startAsDate)) {
        if (this.startAsDate) {
          this.setEndDate(new Date(this.startAsDate));
        }
        if (this.activeRange == "end") {
          this.setEndDate(date);
        }
        else {
          this.setStartDate(date);
        }
      }
      else if (!this.endAsDate) {
        this.setEndDate(date);
      }
      else {
        if (!this.proximitySelectionDisabled) {
          if (this.activeRange) {
            if (this.activeRange == "end") {
              this.setEndDate(date);
            }
            else {
              this.setStartDate(date);
            }
          }
          else {
            const startDiff = getDaysDiff(date, this.startAsDate);
            const endDiff = getDaysDiff(date, this.endAsDate);
            if (endDiff === 0 || startDiff < 0) {
              this.setStartDate(date);
            }
            else if (startDiff === 0 || endDiff < 0) {
              this.setEndDate(date);
            }
            else if (startDiff < endDiff) {
              this.setStartDate(date);
            }
            else {
              this.setEndDate(date);
            }
          }
        }
        else {
          this.setStartDate(date);
          this.endAsDate = this.activeEndDate = this.end = undefined;
        }
      }
      this.calciteDatePickerChange.emit(date);
    };
  }
  handleValueAsDate(date) {
    if (!Array.isArray(date) && date && date !== this.activeDate) {
      this.activeDate = date;
    }
  }
  handleRangeChange() {
    const { startAsDate: startDate, endAsDate: endDate } = this;
    this.activeEndDate = endDate;
    this.activeStartDate = startDate;
  }
  onMinChanged(min) {
    this.minAsDate = dateFromISO(min);
  }
  onMaxChanged(max) {
    this.maxAsDate = dateFromISO(max);
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    if (Array.isArray(this.value)) {
      this.valueAsDate = this.value.map((v) => dateFromISO(v));
      this.start = this.value[0];
      this.end = this.value[1];
    }
    else if (this.value) {
      this.valueAsDate = dateFromISO(this.value);
    }
    if (this.start) {
      this.setStartAsDate(dateFromISO(this.start));
    }
    if (this.end) {
      this.setEndAsDate(dateFromISO(this.end));
    }
    if (this.min) {
      this.minAsDate = dateFromISO(this.min);
    }
    if (this.max) {
      this.maxAsDate = dateFromISO(this.max);
    }
  }
  async componentWillLoad() {
    await this.loadLocaleData();
    this.onMinChanged(this.min);
    this.onMaxChanged(this.max);
  }
  render() {
    var _a;
    const date = dateFromRange(this.range ? this.startAsDate : this.valueAsDate, this.minAsDate, this.maxAsDate);
    const activeStartDate = this.range
      ? this.getActiveStartDate(date, this.minAsDate, this.maxAsDate)
      : this.getActiveDate(date, this.minAsDate, this.maxAsDate);
    let activeDate = activeStartDate;
    const endDate = this.range
      ? dateFromRange(this.endAsDate, this.minAsDate, this.maxAsDate)
      : null;
    const activeEndDate = this.getActiveEndDate(endDate, this.minAsDate, this.maxAsDate);
    if ((this.activeRange === "end" ||
      (((_a = this.hoverRange) === null || _a === void 0 ? void 0 : _a.focused) === "end" && (!this.proximitySelectionDisabled || endDate))) &&
      activeEndDate) {
      activeDate = activeEndDate;
    }
    if (this.range && this.mostRecentRangeValue) {
      activeDate = this.mostRecentRangeValue;
    }
    const minDate = this.range && this.activeRange
      ? this.activeRange === "start"
        ? this.minAsDate
        : date || this.minAsDate
      : this.minAsDate;
    const maxDate = this.range && this.activeRange
      ? this.activeRange === "start"
        ? endDate || this.maxAsDate
        : this.maxAsDate
      : this.maxAsDate;
    return (hAsync(Host, { onBlur: this.reset, onKeyUp: this.keyUpHandler, role: "application" }, this.renderCalendar(activeDate, maxDate, minDate, date, endDate)));
  }
  valueHandler(value) {
    if (Array.isArray(value)) {
      this.valueAsDate = value.map((v) => dateFromISO(v));
      this.start = value[0];
      this.end = value[1];
    }
    else if (value) {
      this.valueAsDate = dateFromISO(value);
      this.start = "";
      this.end = "";
    }
  }
  startWatcher(start) {
    this.setStartAsDate(dateFromISO(start));
  }
  endWatcher(end) {
    this.setEndAsDate(dateFromISO(end));
  }
  async loadLocaleData() {
    {
      return;
    }
  }
  /**
   * Render calcite-date-picker-month-header and calcite-date-picker-month
   */
  renderCalendar(activeDate, maxDate, minDate, date, endDate) {
    return (this.localeData && [
      hAsync("calcite-date-picker-month-header", { activeDate: activeDate, headingLevel: this.headingLevel || HEADING_LEVEL$6, intlNextMonth: this.intlNextMonth, intlPrevMonth: this.intlPrevMonth, intlYear: this.intlYear, localeData: this.localeData, max: maxDate, min: minDate, onCalciteDatePickerSelect: this.monthHeaderSelectChange, scale: this.scale, selectedDate: this.activeRange === "end" ? endDate : date || new Date() }),
      hAsync("calcite-date-picker-month", { activeDate: activeDate, endDate: this.range ? endDate : undefined, hoverRange: this.hoverRange, localeData: this.localeData, max: maxDate, min: minDate, onCalciteDatePickerActiveDateChange: this.monthActiveDateChange, onCalciteDatePickerHover: this.monthHoverChange, onCalciteDatePickerMouseOut: this.monthMouseOutChange, onCalciteDatePickerSelect: this.monthDateChange, scale: this.scale, selectedDate: this.activeRange === "end" ? endDate : date, startDate: this.range ? date : undefined })
    ]);
  }
  /**
   * Update date instance of start if valid
   */
  setStartAsDate(startDate, emit) {
    this.startAsDate = startDate;
    this.mostRecentRangeValue = this.startAsDate;
    if (emit) {
      this.calciteDatePickerRangeChange.emit({
        startDate,
        endDate: this.endAsDate
      });
    }
  }
  /**
   * Update date instance of end if valid
   */
  setEndAsDate(endDate, emit) {
    this.endAsDate = endDate;
    this.mostRecentRangeValue = this.endAsDate;
    if (emit) {
      this.calciteDatePickerRangeChange.emit({
        startDate: this.startAsDate,
        endDate
      });
    }
  }
  setEndDate(date) {
    this.end = date ? dateToISO(date) : "";
    this.setEndAsDate(date, true);
    this.activeEndDate = date || null;
  }
  setStartDate(date) {
    this.start = date ? dateToISO(date) : "";
    this.setStartAsDate(date, true);
    this.activeStartDate = date || null;
  }
  /**
   * Get an active date using the value, or current date as default
   */
  getActiveDate(value, min, max) {
    return dateFromRange(this.activeDate, min, max) || value || dateFromRange(new Date(), min, max);
  }
  getActiveStartDate(value, min, max) {
    return (dateFromRange(this.activeStartDate, min, max) || value || dateFromRange(new Date(), min, max));
  }
  getActiveEndDate(value, min, max) {
    return (dateFromRange(this.activeEndDate, min, max) || value || dateFromRange(new Date(), min, max));
  }
  static get assetsDirs() { return ["assets"]; }
  get el() { return getElement(this); }
  static get watchers() { return {
    "valueAsDate": ["handleValueAsDate"],
    "startAsDate": ["handleRangeChange"],
    "endAsDate": ["handleRangeChange"],
    "min": ["onMinChanged"],
    "max": ["onMaxChanged"],
    "value": ["valueHandler"],
    "start": ["startWatcher"],
    "end": ["endWatcher"],
    "locale": ["loadLocaleData"]
  }; }
  static get style() { return datePickerCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-date-picker",
    "$members$": {
      "activeRange": [1, "active-range"],
      "value": [1025],
      "headingLevel": [2, "heading-level"],
      "valueAsDate": [1040],
      "startAsDate": [1040],
      "endAsDate": [1040],
      "minAsDate": [1040],
      "maxAsDate": [1040],
      "min": [1025],
      "max": [1025],
      "intlPrevMonth": [1, "intl-prev-month"],
      "intlNextMonth": [1, "intl-next-month"],
      "intlYear": [1, "intl-year"],
      "locale": [1],
      "scale": [513],
      "range": [516],
      "start": [1025],
      "end": [1025],
      "proximitySelectionDisabled": [4, "proximity-selection-disabled"],
      "activeDate": [32],
      "activeStartDate": [32],
      "activeEndDate": [32],
      "localeData": [32],
      "hoverRange": [32]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["scale", "scale"], ["range", "range"]]
  }; }
}

const datePickerDayCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-date-picker-day:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-date-picker-day{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-date-picker-day{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-date-picker-day{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-date-picker-day{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-date-picker-day{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-date-picker-day:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-date-picker-day-h{display:none}/*!@:host*/.sc-calcite-date-picker-day-h{display:-ms-flexbox;display:flex;min-width:0px;cursor:pointer;-ms-flex-pack:center;justify-content:center;color:var(--calcite-ui-text-3);width:14.2857142857%}/*!@:host([disabled])*/[disabled].sc-calcite-date-picker-day-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-date-picker-day-h[disabled] .sc-calcite-date-picker-day-s>[calcite-hydrated][disabled],[disabled].sc-calcite-date-picker-day-h [calcite-hydrated][disabled].sc-calcite-date-picker-day{opacity:1}/*!@.day-v-wrapper*/.day-v-wrapper.sc-calcite-date-picker-day{-ms-flex:1 1 auto;flex:1 1 auto}/*!@.day-wrapper*/.day-wrapper.sc-calcite-date-picker-day{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center}/*!@.day*/.day.sc-calcite-date-picker-day{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border-radius:9999px;font-size:var(--calcite-font-size--2);line-height:1rem;line-height:1;color:var(--calcite-ui-text-3);opacity:var(--calcite-ui-opacity-disabled);-webkit-transition-property:all;transition-property:all;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transition-duration:150ms;transition-duration:150ms;background:none;-webkit-box-shadow:0 0 0 2px transparent, 0 0 0 0px transparent;box-shadow:0 0 0 2px transparent, 0 0 0 0px transparent}/*!@.text*/.text.sc-calcite-date-picker-day{margin-top:1px;margin-right:0px;margin-bottom:0px;margin-left:1px}/*!@:host([scale=s]) .day-v-wrapper*/[scale=s].sc-calcite-date-picker-day-h .day-v-wrapper.sc-calcite-date-picker-day{padding-top:0.125rem;padding-bottom:0.125rem}/*!@:host([scale=s]) .day-wrapper*/[scale=s].sc-calcite-date-picker-day-h .day-wrapper.sc-calcite-date-picker-day{padding:0px}/*!@:host([scale=s]) .day*/[scale=s].sc-calcite-date-picker-day-h .day.sc-calcite-date-picker-day{height:27px;width:27px;font-size:var(--calcite-font-size--2)}/*!@:host([scale=m]) .day-v-wrapper*/[scale=m].sc-calcite-date-picker-day-h .day-v-wrapper.sc-calcite-date-picker-day{padding-top:0.25rem;padding-bottom:0.25rem}/*!@:host([scale=m]) .day-wrapper*/[scale=m].sc-calcite-date-picker-day-h .day-wrapper.sc-calcite-date-picker-day{padding-left:0.25rem;padding-right:0.25rem}/*!@:host([scale=m]) .day*/[scale=m].sc-calcite-date-picker-day-h .day.sc-calcite-date-picker-day{height:33px;width:33px;font-size:var(--calcite-font-size--1)}/*!@:host([scale=l]) .day-v-wrapper*/[scale=l].sc-calcite-date-picker-day-h .day-v-wrapper.sc-calcite-date-picker-day{padding-top:0.25rem;padding-bottom:0.25rem}/*!@:host([scale=l]) .day-wrapper*/[scale=l].sc-calcite-date-picker-day-h .day-wrapper.sc-calcite-date-picker-day{padding-left:0.25rem;padding-right:0.25rem}/*!@:host([scale=l]) .day*/[scale=l].sc-calcite-date-picker-day-h .day.sc-calcite-date-picker-day{height:43px;width:43px;font-size:var(--calcite-font-size-0)}/*!@:host([current-month]) .day*/[current-month].sc-calcite-date-picker-day-h .day.sc-calcite-date-picker-day{opacity:1}/*!@:host(:hover:not([disabled])) .day, :host([active]:not([range])) .day*/.sc-calcite-date-picker-day-h:hover:not([disabled]) .day.sc-calcite-date-picker-day,[active].sc-calcite-date-picker-day-h:not([range]) .day.sc-calcite-date-picker-day{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-text-1)}/*!@:host(:focus), :host([active])*/.sc-calcite-date-picker-day-h:focus,[active].sc-calcite-date-picker-day-h{outline:2px solid transparent;outline-offset:2px;z-index:1}/*!@:host(:focus:not([disabled])) .day*/.sc-calcite-date-picker-day-h:focus:not([disabled]) .day.sc-calcite-date-picker-day{-webkit-box-shadow:0 0 0 2px var(--calcite-ui-foreground-1), 0 0 0 4px var(--calcite-ui-brand);box-shadow:0 0 0 2px var(--calcite-ui-foreground-1), 0 0 0 4px var(--calcite-ui-brand)}/*!@:host([selected]) .day*/[selected].sc-calcite-date-picker-day-h .day.sc-calcite-date-picker-day{font-weight:var(--calcite-font-weight-medium);background-color:var(--calcite-ui-brand) !important;color:var(--calcite-ui-foreground-1) !important;z-index:1}/*!@:host([range][selected]) .day-wrapper*/[range][selected].sc-calcite-date-picker-day-h .day-wrapper.sc-calcite-date-picker-day{background-color:var(--calcite-ui-foreground-current)}/*!@:host([start-of-range]) .day-wrapper*/[start-of-range].sc-calcite-date-picker-day-h .day-wrapper.sc-calcite-date-picker-day{border-start-start-radius:40%;border-end-start-radius:40%}/*!@:host([end-of-range]) .day-wrapper*/[end-of-range].sc-calcite-date-picker-day-h .day-wrapper.sc-calcite-date-picker-day{border-start-end-radius:40%;border-end-end-radius:40%}/*!@:host([start-of-range]) :not(.calcite--rtl) .day-wrapper,\n:host([end-of-range]) .calcite--rtl .day-wrapper*/[start-of-range].sc-calcite-date-picker-day-h .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[end-of-range].sc-calcite-date-picker-day-h .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{-webkit-box-shadow:inset 4px 0 var(--calcite-ui-foreground-1);box-shadow:inset 4px 0 var(--calcite-ui-foreground-1)}/*!@:host([start-of-range]) :not(.calcite--rtl) .day,\n:host([end-of-range]) .calcite--rtl .day*/[start-of-range].sc-calcite-date-picker-day-h .sc-calcite-date-picker-day:not(.calcite--rtl) .day.sc-calcite-date-picker-day,[end-of-range].sc-calcite-date-picker-day-h .calcite--rtl.sc-calcite-date-picker-day .day.sc-calcite-date-picker-day{opacity:1}/*!@:host([start-of-range]:not(:focus)) :not(.calcite--rtl) .day,\n:host([end-of-range]:not(:focus)) .calcite--rtl .day*/[start-of-range].sc-calcite-date-picker-day-h:not(:focus) .sc-calcite-date-picker-day:not(.calcite--rtl) .day.sc-calcite-date-picker-day,[end-of-range].sc-calcite-date-picker-day-h:not(:focus) .calcite--rtl.sc-calcite-date-picker-day .day.sc-calcite-date-picker-day{-webkit-box-shadow:0 0 0 2px var(--calcite-ui-foreground-1);box-shadow:0 0 0 2px var(--calcite-ui-foreground-1)}/*!@:host([end-of-range]) :not(.calcite--rtl) .day-wrapper,\n:host([start-of-range]) .calcite--rtl .day-wrapper*/[end-of-range].sc-calcite-date-picker-day-h .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[start-of-range].sc-calcite-date-picker-day-h .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{-webkit-box-shadow:inset -4px 0 var(--calcite-ui-foreground-1);box-shadow:inset -4px 0 var(--calcite-ui-foreground-1)}/*!@:host([end-of-range]) :not(.calcite--rtl) .day,\n:host([start-of-range]) .calcite--rtl .day*/[end-of-range].sc-calcite-date-picker-day-h .sc-calcite-date-picker-day:not(.calcite--rtl) .day.sc-calcite-date-picker-day,[start-of-range].sc-calcite-date-picker-day-h .calcite--rtl.sc-calcite-date-picker-day .day.sc-calcite-date-picker-day{opacity:1}/*!@:host([end-of-range]:not(:focus)) :not(.calcite--rtl) .day,\n:host([start-of-range]:not(:focus)) .calcite--rtl .day*/[end-of-range].sc-calcite-date-picker-day-h:not(:focus) .sc-calcite-date-picker-day:not(.calcite--rtl) .day.sc-calcite-date-picker-day,[start-of-range].sc-calcite-date-picker-day-h:not(:focus) .calcite--rtl.sc-calcite-date-picker-day .day.sc-calcite-date-picker-day{-webkit-box-shadow:0 0 0 2px var(--calcite-ui-foreground-1);box-shadow:0 0 0 2px var(--calcite-ui-foreground-1)}/*!@:host([end-of-range][scale=l]) :not(.calcite--rtl) .day-wrapper,\n:host([start-of-range][scale=l]) .calcite--rtl .day-wrapper*/[end-of-range][scale=l].sc-calcite-date-picker-day-h .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[start-of-range][scale=l].sc-calcite-date-picker-day-h .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{-webkit-box-shadow:inset -8px 0 var(--calcite-ui-foreground-1);box-shadow:inset -8px 0 var(--calcite-ui-foreground-1)}/*!@:host([start-of-range][scale=l]) :not(.calcite--rtl) .day-wrapper,\n:host([end-of-range][scale=l]) .calcite--rtl .day-wrapper*/[start-of-range][scale=l].sc-calcite-date-picker-day-h .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[end-of-range][scale=l].sc-calcite-date-picker-day-h .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{-webkit-box-shadow:inset 8px 0 var(--calcite-ui-foreground-1);box-shadow:inset 8px 0 var(--calcite-ui-foreground-1)}/*!@:host([highlighted]) .day-wrapper*/[highlighted].sc-calcite-date-picker-day-h .day-wrapper.sc-calcite-date-picker-day{background-color:var(--calcite-ui-foreground-current)}/*!@:host([highlighted]) .day-wrapper .day*/[highlighted].sc-calcite-date-picker-day-h .day-wrapper.sc-calcite-date-picker-day .day.sc-calcite-date-picker-day{color:var(--calcite-ui-text-1)}/*!@:host([highlighted]:not([active]:focus)) .day*/[highlighted].sc-calcite-date-picker-day-h:not([active]:focus) .day.sc-calcite-date-picker-day{border-radius:0px;color:var(--calcite-ui-text-1)}/*!@:host([range-hover]:not([selected])) .day-wrapper*/[range-hover].sc-calcite-date-picker-day-h:not([selected]) .day-wrapper.sc-calcite-date-picker-day{background-color:var(--calcite-ui-foreground-2)}/*!@:host([range-hover]:not([selected])) .day*/[range-hover].sc-calcite-date-picker-day-h:not([selected]) .day.sc-calcite-date-picker-day{border-radius:0px}/*!@:host([end-of-range][range-hover]) :not(.calcite--rtl) .day-wrapper,\n:host([start-of-range][range-hover]) .calcite--rtl .day-wrapper*/[end-of-range][range-hover].sc-calcite-date-picker-day-h .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[start-of-range][range-hover].sc-calcite-date-picker-day-h .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{background-image:-webkit-gradient(linear, left top, right top, from(var(--calcite-ui-foreground-current)), color-stop(var(--calcite-ui-foreground-current)), color-stop(var(--calcite-ui-foreground-2)), to(var(--calcite-ui-foreground-2)));background-image:linear-gradient(to right, var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2));border-radius:0px;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@:host([start-of-range][range-hover]) :not(.calcite--rtl) .day-wrapper,\n:host([end-of-range][range-hover]) .calcite--rtl .day-wrapper*/[start-of-range][range-hover].sc-calcite-date-picker-day-h .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[end-of-range][range-hover].sc-calcite-date-picker-day-h .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{background-image:-webkit-gradient(linear, right top, left top, from(var(--calcite-ui-foreground-current)), color-stop(var(--calcite-ui-foreground-current)), color-stop(var(--calcite-ui-foreground-2)), to(var(--calcite-ui-foreground-2)));background-image:linear-gradient(to left, var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2));border-radius:0px;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@:host(:hover[end-of-range][range-hover]) :not(.calcite--rtl) .day-wrapper,\n:host(:hover[start-of-range][range-hover]) .calcite--rtl .day-wrapper*/.sc-calcite-date-picker-day-h:hover[end-of-range][range-hover] .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,.sc-calcite-date-picker-day-h:hover[start-of-range][range-hover] .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{background-image:-webkit-gradient(linear, left top, right top, from(var(--calcite-ui-foreground-current)), color-stop(var(--calcite-ui-foreground-current)), color-stop(var(--calcite-ui-foreground-1)), to(var(--calcite-ui-foreground-1)));background-image:linear-gradient(to right, var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-1), var(--calcite-ui-foreground-1));border-radius:0px;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@:host(:hover[start-of-range][range-hover]) :not(.calcite--rtl) .day-wrapper,\n:host(:hover[end-of-range][range-hover]) .calcite--rtl .day-wrapper*/.sc-calcite-date-picker-day-h:hover[start-of-range][range-hover] .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,.sc-calcite-date-picker-day-h:hover[end-of-range][range-hover] .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{background-image:-webkit-gradient(linear, right top, left top, from(var(--calcite-ui-foreground-current)), color-stop(var(--calcite-ui-foreground-current)), color-stop(var(--calcite-ui-foreground-1)), to(var(--calcite-ui-foreground-1)));background-image:linear-gradient(to left, var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-1), var(--calcite-ui-foreground-1));border-radius:0px;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@:host(:hover[range-hover]:not([selected]).focused--end) :not(.calcite--rtl) .day-wrapper,\n:host(:hover[range-hover]:not([selected]).focused--start) .calcite--rtl .day-wrapper*/.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--end .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--start .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{background-image:-webkit-gradient(linear, left top, right top, from(var(--calcite-ui-foreground-2)), color-stop(var(--calcite-ui-foreground-2)), color-stop(var(--calcite-ui-foreground-current)), to(var(--calcite-ui-foreground-current)));background-image:linear-gradient(to right, var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current))}/*!@:host(:hover[range-hover]:not([selected]).focused--end) :not(.calcite--rtl) .day, :host(:hover[range-hover]:not([selected]).focused--start) .calcite--rtl .day*/.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--end .sc-calcite-date-picker-day:not(.calcite--rtl) .day.sc-calcite-date-picker-day,.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--start .calcite--rtl.sc-calcite-date-picker-day .day.sc-calcite-date-picker-day{border-radius:9999px;opacity:1;-webkit-box-shadow:0 0 0 2px var(--calcite-ui-foreground-1);box-shadow:0 0 0 2px var(--calcite-ui-foreground-1)}/*!@:host(:hover[range-hover]:not([selected]).focused--start) :not(.calcite--rtl) .day-wrapper,\n:host(:hover[range-hover]:not([selected]).focused--end) .calcite--rtl .day-wrapper*/.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--start .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--end .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{background-image:-webkit-gradient(linear, left top, right top, from(var(--calcite-ui-foreground-current)), color-stop(var(--calcite-ui-foreground-current)), color-stop(var(--calcite-ui-foreground-2)), to(var(--calcite-ui-foreground-2)));background-image:linear-gradient(to right, var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2))}/*!@:host(:hover[range-hover]:not([selected]).focused--start) :not(.calcite--rtl) .day, :host(:hover[range-hover]:not([selected]).focused--end) .calcite--rtl .day*/.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--start .sc-calcite-date-picker-day:not(.calcite--rtl) .day.sc-calcite-date-picker-day,.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--end .calcite--rtl.sc-calcite-date-picker-day .day.sc-calcite-date-picker-day{border-radius:9999px;opacity:1;-webkit-box-shadow:0 0 0 2px var(--calcite-ui-foreground-1);box-shadow:0 0 0 2px var(--calcite-ui-foreground-1)}/*!@:host(:hover[range-hover]:not([selected]).focused--start.hover--outside-range) :not(.calcite--rtl) .day-wrapper,\n:host(:hover[range-hover]:not([selected]).focused--end.hover--outside-range) .calcite--rtl .day-wrapper*/.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--start.hover--outside-range .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--end.hover--outside-range .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{background-image:-webkit-gradient(linear, left top, right top, from(var(--calcite-ui-foreground-1)), color-stop(var(--calcite-ui-foreground-1)), color-stop(var(--calcite-ui-foreground-2)), to(var(--calcite-ui-foreground-2)));background-image:linear-gradient(to right, var(--calcite-ui-foreground-1), var(--calcite-ui-foreground-1), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2))}/*!@:host(:hover[range-hover]:not([selected]).focused--start.hover--outside-range) :not(.calcite--rtl) .day, :host(:hover[range-hover]:not([selected]).focused--end.hover--outside-range) .calcite--rtl .day*/.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--start.hover--outside-range .sc-calcite-date-picker-day:not(.calcite--rtl) .day.sc-calcite-date-picker-day,.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--end.hover--outside-range .calcite--rtl.sc-calcite-date-picker-day .day.sc-calcite-date-picker-day{border-radius:9999px;opacity:1;-webkit-box-shadow:0 0 0 2px var(--calcite-ui-foreground-1);box-shadow:0 0 0 2px var(--calcite-ui-foreground-1)}/*!@:host(:hover[range-hover]:not([selected]).focused--end.hover--outside-range) :not(.calcite--rtl) .day-wrapper,\n:host(:hover[range-hover]:not([selected]).focused--start.hover--outside-range) .calcite--rtl .day-wrapper*/.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--end.hover--outside-range .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--start.hover--outside-range .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{background-image:-webkit-gradient(linear, left top, right top, from(var(--calcite-ui-foreground-2)), color-stop(var(--calcite-ui-foreground-2)), color-stop(var(--calcite-ui-foreground-1)), to(var(--calcite-ui-foreground-1)));background-image:linear-gradient(to right, var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-1), var(--calcite-ui-foreground-1))}/*!@:host(:hover[range-hover]:not([selected]).focused--end.hover--outside-range) :not(.calcite--rtl) .day, :host(:hover[range-hover]:not([selected]).focused--start.hover--outside-range) .calcite--rtl .day*/.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--end.hover--outside-range .sc-calcite-date-picker-day:not(.calcite--rtl) .day.sc-calcite-date-picker-day,.sc-calcite-date-picker-day-h:hover[range-hover]:not([selected]).focused--start.hover--outside-range .calcite--rtl.sc-calcite-date-picker-day .day.sc-calcite-date-picker-day{border-radius:9999px;opacity:1;-webkit-box-shadow:0 0 0 2px var(--calcite-ui-foreground-1);box-shadow:0 0 0 2px var(--calcite-ui-foreground-1)}/*!@:host(:hover[start-of-range].hover--inside-range.focused--end) .day-wrapper, :host(:hover[end-of-range].hover--inside-range.focused--start) .day-wrapper*/.sc-calcite-date-picker-day-h:hover[start-of-range].hover--inside-range.focused--end .day-wrapper.sc-calcite-date-picker-day,.sc-calcite-date-picker-day-h:hover[end-of-range].hover--inside-range.focused--start .day-wrapper.sc-calcite-date-picker-day{background-image:none}/*!@:host([start-of-range].hover--inside-range.focused--end) .day-wrapper, :host([end-of-range].hover--inside-range.focused--start) .day-wrapper*/[start-of-range].hover--inside-range.focused--end.sc-calcite-date-picker-day-h .day-wrapper.sc-calcite-date-picker-day,[end-of-range].hover--inside-range.focused--start.sc-calcite-date-picker-day-h .day-wrapper.sc-calcite-date-picker-day{background-color:var(--calcite-ui-foreground-2)}/*!@:host([highlighted]:last-child) :not(.calcite--rtl) .day-wrapper,\n:host([range-hover]:last-child) :not(.calcite--rtl) .day-wrapper,\n:host([highlighted]:first-child) .calcite--rtl .day-wrapper,\n:host([range-hover]:first-child) .calcite--rtl .day-wrapper*/[highlighted].sc-calcite-date-picker-day-h:last-child .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[range-hover].sc-calcite-date-picker-day-h:last-child .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[highlighted].sc-calcite-date-picker-day-h:first-child .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day,[range-hover].sc-calcite-date-picker-day-h:first-child .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{-webkit-box-shadow:inset -4px 0px 0px 0px var(--calcite-ui-foreground-1);box-shadow:inset -4px 0px 0px 0px var(--calcite-ui-foreground-1)}/*!@:host([highlighted]:first-child) :not(.calcite--rtl) .day-wrapper,\n:host([range-hover]:first-child) :not(.calcite--rtl) .day-wrapper,\n:host([highlighted]:last-child) .calcite--rtl .day-wrapper,\n:host([range-hover]:last-child) .calcite--rtl .day-wrapper*/[highlighted].sc-calcite-date-picker-day-h:first-child .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[range-hover].sc-calcite-date-picker-day-h:first-child .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[highlighted].sc-calcite-date-picker-day-h:last-child .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day,[range-hover].sc-calcite-date-picker-day-h:last-child .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{-webkit-box-shadow:inset 4px 0px 0px 0px var(--calcite-ui-foreground-1);box-shadow:inset 4px 0px 0px 0px var(--calcite-ui-foreground-1)}/*!@:host([scale=s][highlighted]:last-child) :not(.calcite--rtl) .day-wrapper,\n:host([scale=s][range-hover]:last-child) :not(.calcite--rtl) .day-wrapper,\n:host([scale=s][highlighted]:first-child) .calcite--rtl .day-wrapper,\n:host([scale=s][range-hover]:first-child) .calcite--rtl .day-wrapper*/[scale=s][highlighted].sc-calcite-date-picker-day-h:last-child .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[scale=s][range-hover].sc-calcite-date-picker-day-h:last-child .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[scale=s][highlighted].sc-calcite-date-picker-day-h:first-child .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day,[scale=s][range-hover].sc-calcite-date-picker-day-h:first-child .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{-webkit-box-shadow:inset -1px 0px 0px 0px var(--calcite-ui-foreground-1);box-shadow:inset -1px 0px 0px 0px var(--calcite-ui-foreground-1)}/*!@:host([scale=s][highlighted]:first-child) :not(.calcite--rtl) .day-wrapper,\n:host([scale=s][range-hover]:first-child) :not(.calcite--rtl) .day-wrapper,\n:host([scale=s][highlighted]:last-child) .calcite--rtl .day-wrapper,\n:host([scale=s][range-hover]:last-child) .calcite--rtl .day-wrapper*/[scale=s][highlighted].sc-calcite-date-picker-day-h:first-child .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[scale=s][range-hover].sc-calcite-date-picker-day-h:first-child .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[scale=s][highlighted].sc-calcite-date-picker-day-h:last-child .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day,[scale=s][range-hover].sc-calcite-date-picker-day-h:last-child .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{-webkit-box-shadow:inset 1px 0px 0px 0px var(--calcite-ui-foreground-1);box-shadow:inset 1px 0px 0px 0px var(--calcite-ui-foreground-1)}/*!@:host([scale=l][highlighted]:first-child) :not(.calcite--rtl) .day-wrapper,\n:host([scale=l][range-hover]:first-child) :not(.calcite--rtl) .day-wrapper,\n:host([scale=l][highlighted]:last-child) .calcite--rtl .day-wrapper,\n:host([scale=l][range-hover]:last-child) .calcite--rtl .day-wrapper*/[scale=l][highlighted].sc-calcite-date-picker-day-h:first-child .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[scale=l][range-hover].sc-calcite-date-picker-day-h:first-child .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[scale=l][highlighted].sc-calcite-date-picker-day-h:last-child .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day,[scale=l][range-hover].sc-calcite-date-picker-day-h:last-child .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{-webkit-box-shadow:inset 6px 0px 0px 0px var(--calcite-ui-foreground-1);box-shadow:inset 6px 0px 0px 0px var(--calcite-ui-foreground-1)}/*!@:host([highlighted]:first-child) .day-wrapper,\n:host([range-hover]:first-child) .day-wrapper*/[highlighted].sc-calcite-date-picker-day-h:first-child .day-wrapper.sc-calcite-date-picker-day,[range-hover].sc-calcite-date-picker-day-h:first-child .day-wrapper.sc-calcite-date-picker-day{border-start-start-radius:45%;border-end-start-radius:45%}/*!@:host([highlighted]:last-child) .day-wrapper,\n:host([range-hover]:last-child) .day-wrapper*/[highlighted].sc-calcite-date-picker-day-h:last-child .day-wrapper.sc-calcite-date-picker-day,[range-hover].sc-calcite-date-picker-day-h:last-child .day-wrapper.sc-calcite-date-picker-day{border-start-end-radius:45%;border-end-end-radius:45%}/*!@:host([scale=l][highlighted]:last-child) :not(.calcite--rtl) .day-wrapper,\n:host([scale=l][range-hover]:last-child) :not(.calcite--rtl) .day-wrapper,\n:host([scale=l][highlighted]:first-child) .calcite--rtl .day-wrapper,\n:host([scale=l][range-hover]:first-child) .calcite--rtl .day-wrapper*/[scale=l][highlighted].sc-calcite-date-picker-day-h:last-child .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[scale=l][range-hover].sc-calcite-date-picker-day-h:last-child .sc-calcite-date-picker-day:not(.calcite--rtl) .day-wrapper.sc-calcite-date-picker-day,[scale=l][highlighted].sc-calcite-date-picker-day-h:first-child .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day,[scale=l][range-hover].sc-calcite-date-picker-day-h:first-child .calcite--rtl.sc-calcite-date-picker-day .day-wrapper.sc-calcite-date-picker-day{-webkit-box-shadow:inset -6px 0px 0px 0px var(--calcite-ui-foreground-1);box-shadow:inset -6px 0px 0px 0px var(--calcite-ui-foreground-1)}@media (forced-colors: active){/*!@:host(:hover:not([disabled])) .day, :host([active]:not([range])) .day*/.sc-calcite-date-picker-day-h:hover:not([disabled]) .day.sc-calcite-date-picker-day,[active].sc-calcite-date-picker-day-h:not([range]) .day.sc-calcite-date-picker-day{border-radius:0px}/*!@:host([selected])*/[selected].sc-calcite-date-picker-day-h{outline:2px solid canvasText;z-index:1}/*!@:host([selected]) .day*/[selected].sc-calcite-date-picker-day-h .day.sc-calcite-date-picker-day{border-radius:0px}/*!@:host([selected]) .day*/[selected].sc-calcite-date-picker-day-h .day.sc-calcite-date-picker-day{background-color:highlight}/*!@:host([range][selected]) .day-wrapper,\n:host([highlighted]) .day-wrapper,\n:host([range-hover]:not([selected])) .day-wrapper*/[range][selected].sc-calcite-date-picker-day-h .day-wrapper.sc-calcite-date-picker-day,[highlighted].sc-calcite-date-picker-day-h .day-wrapper.sc-calcite-date-picker-day,[range-hover].sc-calcite-date-picker-day-h:not([selected]) .day-wrapper.sc-calcite-date-picker-day{background-color:highlight}/*!@:host([range][selected][start-of-range]) .day-wrapper,\n:host([range][selected][end-of-range]) .day-wrapper*/[range][selected][start-of-range].sc-calcite-date-picker-day-h .day-wrapper.sc-calcite-date-picker-day,[range][selected][end-of-range].sc-calcite-date-picker-day-h .day-wrapper.sc-calcite-date-picker-day{background-color:canvas}}";

class DatePickerDay {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteDaySelect = createEvent(this, "calciteDaySelect", 7);
    this.calciteDayHover = createEvent(this, "calciteDayHover", 7);
    /** Date is outside of range and can't be selected */
    this.disabled = false;
    /** Date is in the current month. */
    this.currentMonth = false;
    /** Date is the current selected date of the picker */
    this.selected = false;
    /** Date is currently highlighted as part of the range */
    this.highlighted = false;
    /** Showing date range */
    this.range = false;
    /** Date is the start of date range */
    this.startOfRange = false;
    /** Date is the end of date range */
    this.endOfRange = false;
    /** Date is being hovered and within the set range */
    this.rangeHover = false;
    /** Date is actively in focus for keyboard navigation */
    this.active = false;
    //--------------------------------------------------------------------------
    //
    //  Event Listeners
    //
    //--------------------------------------------------------------------------
    this.onClick = () => {
      !this.disabled && this.calciteDaySelect.emit();
    };
    this.keyDownHandler = (e) => {
      const key = e.key;
      if (key === " " || key === "Enter") {
        !this.disabled && this.calciteDaySelect.emit();
      }
    };
  }
  mouseoverHandler() {
    this.calciteDayHover.emit({
      disabled: this.disabled
    });
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    const formattedDay = String(this.day)
      .split("")
      .map((i) => this.localeData.numerals[i])
      .join("");
    const dir = getElementDir(this.el);
    return (hAsync(Host, { onClick: this.onClick, onKeyDown: this.keyDownHandler, role: "gridcell" }, hAsync("div", { class: { "day-v-wrapper": true, [CSS_UTILITY.rtl]: dir === "rtl" } }, hAsync("div", { class: "day-wrapper" }, hAsync("span", { class: "day" }, hAsync("span", { class: "text" }, formattedDay))))));
  }
  componentDidRender() {
    updateHostInteraction(this, this.isTabbable);
  }
  isTabbable() {
    return this.active;
  }
  get el() { return getElement(this); }
  static get style() { return datePickerDayCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-date-picker-day",
    "$members$": {
      "day": [2],
      "disabled": [516],
      "currentMonth": [516, "current-month"],
      "selected": [516],
      "highlighted": [516],
      "range": [516],
      "startOfRange": [516, "start-of-range"],
      "endOfRange": [516, "end-of-range"],
      "rangeHover": [516, "range-hover"],
      "active": [516],
      "localeData": [16],
      "scale": [513],
      "value": [16]
    },
    "$listeners$": [[1, "mouseover", "mouseoverHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["currentMonth", "current-month"], ["selected", "selected"], ["highlighted", "highlighted"], ["range", "range"], ["startOfRange", "start-of-range"], ["endOfRange", "end-of-range"], ["rangeHover", "range-hover"], ["active", "active"], ["scale", "scale"]]
  }; }
}

const datePickerMonthCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-date-picker-month:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-date-picker-month{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-date-picker-month{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-date-picker-month{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-date-picker-month{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-date-picker-month{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-date-picker-month:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-date-picker-month-h{display:none}/*!@.calender*/.calender.sc-calcite-date-picker-month{margin-bottom:0.25rem}/*!@.week-headers*/.week-headers.sc-calcite-date-picker-month{display:-ms-flexbox;display:flex;border-width:0px;border-top-width:1px;border-style:solid;border-color:var(--calcite-ui-border-3);padding-top:0px;padding-bottom:0px;padding-left:0.25rem;padding-right:0.25rem}/*!@.week-header*/.week-header.sc-calcite-date-picker-month{text-align:center;font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-3);width:14.2857142857%}/*!@:host([scale=s]) .week-header*/[scale=s].sc-calcite-date-picker-month-h .week-header.sc-calcite-date-picker-month{padding-left:0px;padding-right:0px;padding-top:0.5rem;padding-bottom:0.75rem;font-size:var(--calcite-font-size--2);line-height:1rem}/*!@:host([scale=m]) .week-header*/[scale=m].sc-calcite-date-picker-month-h .week-header.sc-calcite-date-picker-month{padding-left:0px;padding-right:0px;padding-top:0.75rem;padding-bottom:1rem;font-size:var(--calcite-font-size--2);line-height:1rem}/*!@:host([scale=l]) .week-header*/[scale=l].sc-calcite-date-picker-month-h .week-header.sc-calcite-date-picker-month{padding-left:0px;padding-right:0px;padding-top:1rem;padding-bottom:1.25rem;font-size:var(--calcite-font-size--1);line-height:1rem}/*!@.week-days*/.week-days.sc-calcite-date-picker-month{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;padding-top:0px;padding-bottom:0px;padding-left:6px;padding-right:6px}/*!@.week-days:focus*/.week-days.sc-calcite-date-picker-month:focus{outline:2px solid transparent;outline-offset:2px}";

class DatePickerMonth {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteDatePickerSelect = createEvent(this, "calciteDatePickerSelect", 7);
    this.calciteDatePickerHover = createEvent(this, "calciteDatePickerHover", 7);
    this.calciteDatePickerActiveDateChange = createEvent(this, "calciteDatePickerActiveDateChange", 7);
    this.calciteDatePickerMouseOut = createEvent(this, "calciteDatePickerMouseOut", 7);
    /** Date currently active.*/
    this.activeDate = new Date();
    //--------------------------------------------------------------------------
    //
    //  Event Listeners
    //
    //--------------------------------------------------------------------------
    this.keyDownHandler = (e) => {
      const isRTL = this.el.dir === "rtl";
      switch (e.key) {
        case "ArrowUp":
          e.preventDefault();
          this.addDays(-7);
          break;
        case "ArrowRight":
          e.preventDefault();
          this.addDays(isRTL ? -1 : 1);
          break;
        case "ArrowDown":
          e.preventDefault();
          this.addDays(7);
          break;
        case "ArrowLeft":
          e.preventDefault();
          this.addDays(isRTL ? 1 : -1);
          break;
        case "PageUp":
          e.preventDefault();
          this.addMonths(-1);
          break;
        case "PageDown":
          e.preventDefault();
          this.addMonths(1);
          break;
        case "Home":
          e.preventDefault();
          this.activeDate.setDate(1);
          this.addDays();
          break;
        case "End":
          e.preventDefault();
          this.activeDate.setDate(new Date(this.activeDate.getFullYear(), this.activeDate.getMonth() + 1, 0).getDate());
          this.addDays();
          break;
        case "Enter":
        case " ":
          e.preventDefault();
          break;
        case "Tab":
          this.activeFocus = false;
      }
    };
    /**
     * Once user is not interacting via keyboard,
     * disable auto focusing of active date
     */
    this.disableActiveFocus = () => {
      this.activeFocus = false;
    };
    this.dayHover = (e) => {
      const target = e.target;
      if (e.detail.disabled) {
        this.calciteDatePickerMouseOut.emit();
      }
      else {
        this.calciteDatePickerHover.emit(target.value);
      }
    };
    this.daySelect = (e) => {
      const target = e.target;
      this.calciteDatePickerSelect.emit(target.value);
    };
  }
  mouseoutHandler() {
    this.calciteDatePickerMouseOut.emit();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    const month = this.activeDate.getMonth();
    const year = this.activeDate.getFullYear();
    const startOfWeek = this.localeData.weekStart % 7;
    const { abbreviated, short, narrow } = this.localeData.days;
    const weekDays = this.scale === "s" ? narrow || short || abbreviated : short || abbreviated || narrow;
    const adjustedWeekDays = [...weekDays.slice(startOfWeek, 7), ...weekDays.slice(0, startOfWeek)];
    const curMonDays = this.getCurrentMonthDays(month, year);
    const prevMonDays = this.getPrevMonthdays(month, year, startOfWeek);
    const nextMonDays = this.getNextMonthDays(month, year, startOfWeek);
    const days = [
      ...prevMonDays.map((day) => {
        const date = new Date(year, month - 1, day);
        return this.renderDateDay(false, day, date);
      }),
      ...curMonDays.map((day) => {
        const date = new Date(year, month, day);
        const active = sameDate(date, this.activeDate);
        return this.renderDateDay(active, day, date, true, true);
      }),
      ...nextMonDays.map((day) => {
        const date = new Date(year, month + 1, day);
        return this.renderDateDay(false, day, date);
      })
    ];
    const weeks = [];
    for (let i = 0; i < days.length; i += 7) {
      weeks.push(days.slice(i, i + 7));
    }
    return (hAsync(Host, { onFocusOut: this.disableActiveFocus, onKeyDown: this.keyDownHandler }, hAsync("div", { class: "calender", role: "grid" }, hAsync("div", { class: "week-headers", role: "row" }, adjustedWeekDays.map((weekday) => (hAsync("span", { class: "week-header", role: "columnheader" }, weekday)))), weeks.map((days) => (hAsync("div", { class: "week-days", role: "row" }, days))))));
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Add n months to the current month
   */
  addMonths(step) {
    const nextDate = new Date(this.activeDate);
    nextDate.setMonth(this.activeDate.getMonth() + step);
    this.calciteDatePickerActiveDateChange.emit(dateFromRange(nextDate, this.min, this.max));
    this.activeFocus = true;
  }
  /**
   * Add n days to the current date
   */
  addDays(step = 0) {
    const nextDate = new Date(this.activeDate);
    nextDate.setDate(this.activeDate.getDate() + step);
    this.calciteDatePickerActiveDateChange.emit(dateFromRange(nextDate, this.min, this.max));
    this.activeFocus = true;
  }
  /**
   * Get dates for last days of the previous month
   */
  getPrevMonthdays(month, year, startOfWeek) {
    const lastDate = new Date(year, month, 0);
    const date = lastDate.getDate();
    const day = lastDate.getDay();
    const days = [];
    if (day - 6 === startOfWeek) {
      return days;
    }
    for (let i = lastDate.getDay(); i >= startOfWeek; i--) {
      days.push(date - i);
    }
    return days;
  }
  /**
   * Get dates for the current month
   */
  getCurrentMonthDays(month, year) {
    const num = new Date(year, month + 1, 0).getDate();
    const days = [];
    for (let i = 0; i < num; i++) {
      days.push(i + 1);
    }
    return days;
  }
  /**
   * Get dates for first days of the next month
   */
  getNextMonthDays(month, year, startOfWeek) {
    const endDay = new Date(year, month + 1, 0).getDay();
    const days = [];
    if (endDay === (startOfWeek + 6) % 7) {
      return days;
    }
    for (let i = 0; i < (6 - (endDay - startOfWeek)) % 7; i++) {
      days.push(i + 1);
    }
    return days;
  }
  /**
   * Determine if the date is in between the start and end dates
   */
  betweenSelectedRange(date) {
    return !!(this.startDate &&
      this.endDate &&
      date > this.startDate &&
      date < this.endDate &&
      !this.isRangeHover(date));
  }
  /**
   * Determine if the date should be in selected state
   */
  isSelected(date) {
    return !!(sameDate(date, this.selectedDate) ||
      (this.startDate && sameDate(date, this.startDate)) ||
      (this.endDate && sameDate(date, this.endDate)));
  }
  /**
   * Determine if the date is the start of the date range
   */
  isStartOfRange(date) {
    return !!(this.startDate &&
      !sameDate(this.startDate, this.endDate) &&
      sameDate(this.startDate, date) &&
      !this.isEndOfRange(date));
  }
  isEndOfRange(date) {
    return !!((this.endDate && !sameDate(this.startDate, this.endDate) && sameDate(this.endDate, date)) ||
      (!this.endDate &&
        this.hoverRange &&
        sameDate(this.startDate, this.hoverRange.end) &&
        sameDate(date, this.hoverRange.end)));
  }
  /**
   * Render calcite-date-picker-day
   */
  renderDateDay(active, day, date, currentMonth, ref) {
    var _a;
    const isFocusedOnStart = this.isFocusedOnStart();
    const isHoverInRange = this.isHoverInRange() ||
      (!this.endDate && this.hoverRange && sameDate((_a = this.hoverRange) === null || _a === void 0 ? void 0 : _a.end, this.startDate));
    return (hAsync("calcite-date-picker-day", { active: active, class: {
        "hover--inside-range": this.startDate && isHoverInRange,
        "hover--outside-range": this.startDate && !isHoverInRange,
        "focused--start": isFocusedOnStart,
        "focused--end": !isFocusedOnStart
      }, currentMonth: currentMonth, day: day, disabled: !inRange(date, this.min, this.max), endOfRange: this.isEndOfRange(date), highlighted: this.betweenSelectedRange(date), key: date.toDateString(), localeData: this.localeData, onCalciteDayHover: this.dayHover, onCalciteDaySelect: this.daySelect, range: !!this.startDate && !!this.endDate && !sameDate(this.startDate, this.endDate), rangeHover: this.isRangeHover(date), ref: (el) => {
        // when moving via keyboard, focus must be updated on active date
        if (ref && active && this.activeFocus) {
          el === null || el === void 0 ? void 0 : el.focus();
        }
      }, scale: this.scale, selected: this.isSelected(date), startOfRange: this.isStartOfRange(date), value: date }));
  }
  isFocusedOnStart() {
    var _a;
    return ((_a = this.hoverRange) === null || _a === void 0 ? void 0 : _a.focused) === "start";
  }
  isHoverInRange() {
    if (!this.hoverRange) {
      return false;
    }
    const { start, end } = this.hoverRange;
    return !!((!this.isFocusedOnStart() && this.startDate && (!this.endDate || end < this.endDate)) ||
      (this.isFocusedOnStart() && this.startDate && start > this.startDate));
  }
  isRangeHover(date) {
    if (!this.hoverRange) {
      return false;
    }
    const { start, end } = this.hoverRange;
    const isStart = this.isFocusedOnStart();
    const insideRange = this.isHoverInRange();
    const cond1 = insideRange &&
      ((!isStart && date > this.startDate && (date < end || sameDate(date, end))) ||
        (isStart && date < this.endDate && (date > start || sameDate(date, start))));
    const cond2 = !insideRange &&
      ((!isStart && date >= this.endDate && (date < end || sameDate(date, end))) ||
        (isStart &&
          (date < this.startDate || (this.endDate && sameDate(date, this.startDate))) &&
          (date > start || sameDate(date, start))));
    return cond1 || cond2;
  }
  get el() { return getElement(this); }
  static get style() { return datePickerMonthCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-date-picker-month",
    "$members$": {
      "selectedDate": [16],
      "activeDate": [16],
      "startDate": [16],
      "endDate": [16],
      "min": [16],
      "max": [16],
      "scale": [513],
      "localeData": [16],
      "hoverRange": [16]
    },
    "$listeners$": [[1, "mouseout", "mouseoutHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["scale", "scale"]]
  }; }
}

const datePickerMonthHeaderCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-date-picker-month-header:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-date-picker-month-header{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-date-picker-month-header{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-date-picker-month-header{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-date-picker-month-header{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-date-picker-month-header{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-date-picker-month-header:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-date-picker-month-header-h{display:none}/*!@:host*/.sc-calcite-date-picker-month-header-h{display:block}/*!@.header*/.header.sc-calcite-date-picker-month-header{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;padding-top:0px;padding-bottom:0px;padding-left:0.25rem;padding-right:0.25rem}/*!@:host([scale=s]) .text*/[scale=s].sc-calcite-date-picker-month-header-h .text.sc-calcite-date-picker-month-header{margin-top:0.5rem;margin-bottom:0.5rem;font-size:var(--calcite-font-size--1);line-height:1rem}/*!@:host([scale=s]) .chevron*/[scale=s].sc-calcite-date-picker-month-header-h .chevron.sc-calcite-date-picker-month-header{height:2.25rem}/*!@:host([scale=m]) .text*/[scale=m].sc-calcite-date-picker-month-header-h .text.sc-calcite-date-picker-month-header{margin-top:0.75rem;margin-bottom:0.75rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@:host([scale=m]) .chevron*/[scale=m].sc-calcite-date-picker-month-header-h .chevron.sc-calcite-date-picker-month-header{height:3rem}/*!@:host([scale=l]) .text*/[scale=l].sc-calcite-date-picker-month-header-h .text.sc-calcite-date-picker-month-header{margin-top:1rem;margin-bottom:1rem;font-size:var(--calcite-font-size-1);line-height:1.5rem}/*!@:host([scale=l]) .chevron*/[scale=l].sc-calcite-date-picker-month-header-h .chevron.sc-calcite-date-picker-month-header{height:3.5rem}/*!@.chevron*/.chevron.sc-calcite-date-picker-month-header{margin-left:-0.25rem;margin-right:-0.25rem;-webkit-box-sizing:content-box;box-sizing:content-box;display:-ms-flexbox;display:flex;-ms-flex-positive:0;flex-grow:0;cursor:pointer;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border-style:none;background-color:var(--calcite-ui-foreground-1);padding-left:0.25rem;padding-right:0.25rem;color:var(--calcite-ui-text-3);outline:2px solid transparent;outline-offset:2px;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;width:14.2857142857%}/*!@.chevron:focus*/.chevron.sc-calcite-date-picker-month-header:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@.chevron:hover, .chevron:focus*/.chevron.sc-calcite-date-picker-month-header:hover,.chevron.sc-calcite-date-picker-month-header:focus{background-color:var(--calcite-ui-foreground-2);fill:var(--calcite-ui-text-1);color:var(--calcite-ui-text-1)}/*!@.chevron:active*/.chevron.sc-calcite-date-picker-month-header:active{background-color:var(--calcite-ui-foreground-3)}/*!@.chevron[aria-disabled=true]*/.chevron[aria-disabled=true].sc-calcite-date-picker-month-header{pointer-events:none;opacity:0}/*!@.text*/.text.sc-calcite-date-picker-month-header{margin-top:auto;margin-bottom:auto;width:100%;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;text-align:center;line-height:1}/*!@.text-nreverse*/.text-nreverse.sc-calcite-date-picker-month-header{-ms-flex-direction:row-reverse;flex-direction:row-reverse}/*!@.month, .year, .suffix*/.month.sc-calcite-date-picker-month-header,.year.sc-calcite-date-picker-month-header,.suffix.sc-calcite-date-picker-month-header{margin-left:0.25rem;margin-right:0.25rem;margin-top:auto;margin-bottom:auto;display:inline-block;background-color:var(--calcite-ui-foreground-1);font-weight:var(--calcite-font-weight-medium);line-height:1.25;color:var(--calcite-ui-text-1);font-size:inherit}/*!@.year*/.year.sc-calcite-date-picker-month-header{position:relative;width:3rem;border-style:none;background-color:transparent;text-align:center;font-family:inherit;outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;z-index:2}/*!@.year:hover*/.year.sc-calcite-date-picker-month-header:hover{-webkit-transition-duration:100ms;transition-duration:100ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transition-property:outline-color;transition-property:outline-color;outline:2px solid var(--calcite-ui-border-2);outline-offset:2px}/*!@.year:focus*/.year.sc-calcite-date-picker-month-header:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:2px}/*!@.year--suffix*/.year--suffix.sc-calcite-date-picker-month-header{width:4rem;text-align:left}/*!@.year-wrap*/.year-wrap.sc-calcite-date-picker-month-header{position:relative}/*!@.suffix*/.suffix.sc-calcite-date-picker-month-header{position:absolute;top:0px;left:0px;width:4rem;white-space:nowrap;text-align:left}/*!@.suffix__invisible*/.suffix__invisible.sc-calcite-date-picker-month-header{visibility:hidden}";

class DatePickerMonthHeader {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteDatePickerSelect = createEvent(this, "calciteDatePickerSelect", 7);
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    /**
     * Increment year on UP/DOWN keys
     */
    this.onYearKey = (e) => {
      const year = e.target.value;
      switch (e.key) {
        case "ArrowDown":
          e.preventDefault();
          this.setYear(year, -1);
          break;
        case "ArrowUp":
          e.preventDefault();
          this.setYear(year, 1);
          break;
      }
    };
    this.yearChanged = (event) => {
      this.setYear(event.target.value);
    };
    this.prevMonthClick = (e) => {
      this.handleArrowClick(e, this.prevMonthDate);
    };
    this.prevMonthKeydown = (e) => {
      const key = e.key;
      if (key === " " || key === "Enter") {
        this.prevMonthClick(e);
      }
    };
    this.nextMonthClick = (e) => {
      this.handleArrowClick(e, this.nextMonthDate);
    };
    this.nextMonthKeydown = (e) => {
      const key = e.key;
      if (key === " " || key === "Enter") {
        this.nextMonthClick(e);
      }
    };
    /*
     * Update active month on clicks of left/right arrows
     */
    this.handleArrowClick = (e, date) => {
      e === null || e === void 0 ? void 0 : e.preventDefault();
      e.stopPropagation();
      this.calciteDatePickerSelect.emit(date);
    };
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    this.setNextPrevMonthDates();
  }
  render() {
    return hAsync("div", { class: "header" }, this.renderContent());
  }
  renderContent() {
    var _a;
    if (!this.activeDate || !this.localeData) {
      return null;
    }
    const activeMonth = this.activeDate.getMonth();
    const { months, unitOrder } = this.localeData;
    const localizedMonth = (months.wide || months.narrow || months.abbreviated)[activeMonth];
    const localizedYear = localizeNumber(this.activeDate.getFullYear(), this.localeData);
    const iconScale = this.scale === "l" ? "m" : "s";
    const order = getOrder(unitOrder);
    const reverse = order.indexOf("y") < order.indexOf("m");
    const suffix = (_a = this.localeData.year) === null || _a === void 0 ? void 0 : _a.suffix;
    return (hAsync(Fragment, null, hAsync("a", { "aria-disabled": (this.prevMonthDate.getMonth() === activeMonth).toString(), "aria-label": this.intlPrevMonth, class: "chevron", href: "#", onClick: this.prevMonthClick, onKeyDown: this.prevMonthKeydown, role: "button", tabindex: this.prevMonthDate.getMonth() === activeMonth ? -1 : 0 }, hAsync("calcite-icon", { "flip-rtl": true, icon: "chevron-left", scale: iconScale })), hAsync("div", { class: { text: true, "text--reverse": reverse } }, hAsync(Heading, { class: "month", level: this.headingLevel }, localizedMonth), hAsync("span", { class: "year-wrap" }, hAsync("input", { "aria-label": this.intlYear, class: {
        year: true,
        "year--suffix": !!suffix
      }, inputmode: "numeric", maxlength: "4", minlength: "1", onInput: this.yearChanged, onKeyDown: this.onYearKey, pattern: "\\d*", ref: (el) => (this.yearInput = el), type: "text", value: localizedYear }), suffix && (hAsync("span", { class: "suffix" }, hAsync("span", { "aria-hidden": "true", class: "suffix__invisible" }, localizedYear), " " + suffix)))), hAsync("a", { "aria-disabled": (this.nextMonthDate.getMonth() === activeMonth).toString(), "aria-label": this.intlNextMonth, class: "chevron", href: "#", onClick: this.nextMonthClick, onKeyDown: this.nextMonthKeydown, role: "button", tabindex: this.nextMonthDate.getMonth() === activeMonth ? -1 : 0 }, hAsync("calcite-icon", { "flip-rtl": true, icon: "chevron-right", scale: iconScale }))));
  }
  setNextPrevMonthDates() {
    if (!this.activeDate) {
      return;
    }
    this.nextMonthDate = dateFromRange(nextMonth(this.activeDate), this.min, this.max);
    this.prevMonthDate = dateFromRange(prevMonth(this.activeDate), this.min, this.max);
  }
  /**
   * Parse localized year string from input,
   * set to active if in range
   */
  setYear(localizedYear, increment = 0) {
    const { min, max, activeDate, localeData, yearInput } = this;
    const parsedYear = parseNumber(localizedYear, localeData);
    const length = parsedYear.toString().length;
    const year = isNaN(parsedYear) ? false : parsedYear + increment;
    const inRange = year && (!min || min.getFullYear() <= year) && (!max || max.getFullYear() >= year);
    // if you've supplied a year and it's in range, update active date
    if (year && inRange && length === localizedYear.length) {
      const nextDate = new Date(activeDate);
      nextDate.setFullYear(year);
      const inRangeDate = dateFromRange(nextDate, min, max);
      this.calciteDatePickerSelect.emit(inRangeDate);
      yearInput.value = localizeNumber(inRangeDate.getFullYear(), localeData);
    }
    else {
      // leave the current active date and clean up garbage input
      yearInput.value = localizeNumber(activeDate.getFullYear(), localeData);
    }
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "min": ["setNextPrevMonthDates"],
    "max": ["setNextPrevMonthDates"],
    "activeDate": ["setNextPrevMonthDates"]
  }; }
  static get style() { return datePickerMonthHeaderCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-date-picker-month-header",
    "$members$": {
      "selectedDate": [16],
      "activeDate": [16],
      "headingLevel": [2, "heading-level"],
      "min": [16],
      "max": [16],
      "locale": [1],
      "intlPrevMonth": [1, "intl-prev-month"],
      "intlNextMonth": [1, "intl-next-month"],
      "intlYear": [1, "intl-year"],
      "scale": [513],
      "localeData": [16],
      "nextMonthDate": [32],
      "prevMonthDate": [32]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["scale", "scale"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const SLOTS$h = {
  dropdownTrigger: "dropdown-trigger"
};

const dropdownCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-dropdown:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-dropdown{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-dropdown{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-dropdown{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-dropdown{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-dropdown{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-dropdown:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-dropdown-h{display:none}/*!@:host*/.sc-calcite-dropdown-h{display:-ms-inline-flexbox;display:inline-flex;-ms-flex:0 1 auto;flex:0 1 auto}/*!@:host([disabled])*/[disabled].sc-calcite-dropdown-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-dropdown-h[disabled] .sc-calcite-dropdown-s>[calcite-hydrated][disabled],[disabled].sc-calcite-dropdown-h [calcite-hydrated][disabled].sc-calcite-dropdown{opacity:1}/*!@:host .calcite-dropdown-wrapper*/.sc-calcite-dropdown-h .calcite-dropdown-wrapper.sc-calcite-dropdown{display:block;position:absolute;z-index:900;-webkit-transform:scale(0);transform:scale(0);visibility:hidden;pointer-events:none}/*!@.calcite-dropdown-wrapper .calcite-popper-anim*/.calcite-dropdown-wrapper.sc-calcite-dropdown .calcite-popper-anim.sc-calcite-dropdown{position:relative;z-index:1;-webkit-transition:var(--calcite-popper-transition);transition:var(--calcite-popper-transition);visibility:hidden;-webkit-transition-property:visibility, opacity, -webkit-transform;transition-property:visibility, opacity, -webkit-transform;transition-property:transform, visibility, opacity;transition-property:transform, visibility, opacity, -webkit-transform;opacity:0;-webkit-box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);border-radius:0.25rem}/*!@.calcite-dropdown-wrapper[data-popper-placement^=bottom] .calcite-popper-anim*/.calcite-dropdown-wrapper[data-popper-placement^=bottom].sc-calcite-dropdown .calcite-popper-anim.sc-calcite-dropdown{-webkit-transform:translateY(-5px);transform:translateY(-5px)}/*!@.calcite-dropdown-wrapper[data-popper-placement^=top] .calcite-popper-anim*/.calcite-dropdown-wrapper[data-popper-placement^=top].sc-calcite-dropdown .calcite-popper-anim.sc-calcite-dropdown{-webkit-transform:translateY(5px);transform:translateY(5px)}/*!@.calcite-dropdown-wrapper[data-popper-placement^=left] .calcite-popper-anim*/.calcite-dropdown-wrapper[data-popper-placement^=left].sc-calcite-dropdown .calcite-popper-anim.sc-calcite-dropdown{-webkit-transform:translateX(5px);transform:translateX(5px)}/*!@.calcite-dropdown-wrapper[data-popper-placement^=right] .calcite-popper-anim*/.calcite-dropdown-wrapper[data-popper-placement^=right].sc-calcite-dropdown .calcite-popper-anim.sc-calcite-dropdown{-webkit-transform:translateX(-5px);transform:translateX(-5px)}/*!@.calcite-dropdown-wrapper[data-popper-placement] .calcite-popper-anim--active*/.calcite-dropdown-wrapper[data-popper-placement].sc-calcite-dropdown .calcite-popper-anim--active.sc-calcite-dropdown{opacity:1;visibility:visible;-webkit-transform:translate(0);transform:translate(0)}/*!@:host([active]) .calcite-dropdown-wrapper*/[active].sc-calcite-dropdown-h .calcite-dropdown-wrapper.sc-calcite-dropdown{pointer-events:initial;visibility:visible}/*!@:host .calcite-dropdown-content*/.sc-calcite-dropdown-h .calcite-dropdown-content.sc-calcite-dropdown{width:auto;overflow-y:auto;overflow-x:hidden;background-color:var(--calcite-ui-foreground-1);max-height:90vh;width:var(--calcite-dropdown-width)}/*!@.calcite-dropdown-trigger-container*/.calcite-dropdown-trigger-container.sc-calcite-dropdown{position:relative;display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto}/*!@:host([width=s])*/[width=s].sc-calcite-dropdown-h{--calcite-dropdown-width:12rem}/*!@:host([width=m])*/[width=m].sc-calcite-dropdown-h{--calcite-dropdown-width:14rem}/*!@:host([width=l])*/[width=l].sc-calcite-dropdown-h{--calcite-dropdown-width:16rem}";

/**
 * @slot - A slot for adding `calcite-dropdown-group`s or `calcite-dropdown-item`s.
 * @slot dropdown-trigger - A slot for the element that triggers the dropdown.
 */
class Dropdown {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteDropdownSelect = createEvent(this, "calciteDropdownSelect", 7);
    this.calciteDropdownOpen = createEvent(this, "calciteDropdownOpen", 7);
    this.calciteDropdownClose = createEvent(this, "calciteDropdownClose", 7);
    //--------------------------------------------------------------------------
    //
    //  Public Properties
    //
    //--------------------------------------------------------------------------
    /** Opens or closes the dropdown */
    this.active = false;
    /**
     allow the dropdown to remain open after a selection is made
     if the selection-mode of the selected item's containing group is "none", the dropdown will always close
     */
    this.disableCloseOnSelect = false;
    /** is the dropdown disabled  */
    this.disabled = false;
    /**
     specify the maximum number of calcite-dropdown-items to display before showing the scroller, must be greater than 0 -
     this value does not include groupTitles passed to calcite-dropdown-group
    */
    this.maxItems = 0;
    /** Describes the type of positioning to use for the overlaid content. If your element is in a fixed container, use the 'fixed' value. */
    this.overlayPositioning = "absolute";
    /**
     * Determines where the dropdown will be positioned relative to the button.
     * @default "bottom-leading"
     */
    this.placement = defaultMenuPlacement;
    /** specify the scale of dropdown, defaults to m */
    this.scale = "m";
    /**
     * **read-only** The currently selected items
     *
     * @readonly
     */
    this.selectedItems = [];
    /** specify whether the dropdown is opened by hover or click of a trigger element */
    this.type = "click";
    /** specify the width of dropdown, defaults to m */
    this.width = "m";
    //--------------------------------------------------------------------------
    //
    //  Private State/Props
    //
    //--------------------------------------------------------------------------
    this.items = [];
    this.activeTransitionProp = "visibility";
    this.mutationObserver = createObserver();
    this.resizeObserver = createObserver();
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.updateItems = () => {
      this.updateSelectedItems();
      this.triggers = getSlotted(this.el, "dropdown-trigger", { all: true });
      this.items = Array.from(this.el.querySelectorAll("calcite-dropdown-item"));
      this.reposition();
    };
    this.setMaxScrollerHeight = () => {
      const { active, scrollerEl } = this;
      if (!scrollerEl || !active) {
        return;
      }
      this.reposition();
      const maxScrollerHeight = this.getMaxScrollerHeight();
      scrollerEl.style.maxHeight = maxScrollerHeight > 0 ? `${maxScrollerHeight}px` : "";
      this.reposition();
    };
    this.setScrollerEl = (scrollerEl) => {
      this.resizeObserver.observe(scrollerEl);
      this.scrollerEl = scrollerEl;
    };
    this.transitionEnd = (event) => {
      if (event.propertyName === this.activeTransitionProp) {
        this.active ? this.calciteDropdownOpen.emit() : this.calciteDropdownClose.emit();
      }
    };
    this.setReferenceEl = (el) => {
      this.referenceEl = el;
    };
    this.setMenuEl = (el) => {
      this.menuEl = el;
    };
    this.keyDownHandler = (e) => {
      const target = e.target;
      if (target !== this.referenceEl) {
        return;
      }
      const key = e.key;
      if (this.active && (key === "Escape" || (e.shiftKey && key === "Tab"))) {
        this.closeCalciteDropdown();
        return;
      }
      switch (key) {
        case " ":
        case "Enter":
          this.openCalciteDropdown();
          break;
        case "Escape":
          this.closeCalciteDropdown();
          break;
      }
    };
    this.focusOnFirstActiveOrFirstItem = () => {
      this.getFocusableElement(this.items.find((item) => item.active) || this.items[0]);
    };
    this.toggleOpenEnd = () => {
      this.focusOnFirstActiveOrFirstItem();
      this.el.removeEventListener("calciteDropdownOpen", this.toggleOpenEnd);
    };
    this.openCalciteDropdown = () => {
      this.active = !this.active;
      if (this.active) {
        this.el.addEventListener("calciteDropdownOpen", this.toggleOpenEnd);
      }
    };
  }
  activeHandler() {
    if (!this.disabled) {
      this.reposition();
      return;
    }
    this.active = false;
  }
  handleDisabledChange(value) {
    if (!value) {
      this.active = false;
    }
  }
  maxItemsHandler() {
    this.setMaxScrollerHeight();
  }
  placementHandler() {
    this.reposition();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el, { childList: true, subtree: true });
    this.createPopper();
    this.updateItems();
  }
  componentDidLoad() {
    this.reposition();
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  disconnectedCallback() {
    var _a, _b;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    (_b = this.resizeObserver) === null || _b === void 0 ? void 0 : _b.disconnect();
    this.destroyPopper();
  }
  render() {
    const { active } = this;
    return (hAsync(Host, null, hAsync("div", { class: "calcite-dropdown-trigger-container", onClick: this.openCalciteDropdown, onKeyDown: this.keyDownHandler, ref: this.setReferenceEl }, hAsync("slot", { "aria-expanded": active.toString(), "aria-haspopup": "true", name: SLOTS$h.dropdownTrigger })), hAsync("div", { "aria-hidden": (!active).toString(), class: "calcite-dropdown-wrapper", ref: this.setMenuEl }, hAsync("div", { class: {
        ["calcite-dropdown-content"]: true,
        [CSS$D.animation]: true,
        [CSS$D.animationActive]: active
      }, onTransitionEnd: this.transitionEnd, ref: this.setScrollerEl }, hAsync("div", { hidden: !this.active }, hAsync("slot", null))))));
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Updates the position of the component. */
  async reposition() {
    const { popper, menuEl, placement } = this;
    const modifiers = this.getModifiers();
    popper
      ? await updatePopper({
        el: menuEl,
        modifiers,
        placement,
        popper
      })
      : this.createPopper();
  }
  closeCalciteDropdownOnClick(e) {
    if (!this.active || e.composedPath().includes(this.el)) {
      return;
    }
    this.closeCalciteDropdown(false);
  }
  closeCalciteDropdownOnEvent() {
    this.closeCalciteDropdown();
  }
  closeCalciteDropdownOnOpenEvent(e) {
    if (e.composedPath().includes(this.el)) {
      return;
    }
    this.active = false;
  }
  mouseEnterHandler() {
    if (this.type === "hover") {
      this.openCalciteDropdown();
    }
  }
  mouseLeaveHandler() {
    if (this.type === "hover") {
      this.closeCalciteDropdown();
    }
  }
  calciteDropdownItemKeyEvent(e) {
    const { keyboardEvent } = e.detail;
    // handle edge
    const target = keyboardEvent.target;
    const itemToFocus = target.nodeName !== "A" ? target : target.parentNode;
    const isFirstItem = this.itemIndex(itemToFocus) === 0;
    const isLastItem = this.itemIndex(itemToFocus) === this.items.length - 1;
    switch (keyboardEvent.key) {
      case "Tab":
        if (isLastItem && !keyboardEvent.shiftKey) {
          this.closeCalciteDropdown();
        }
        else if (isFirstItem && keyboardEvent.shiftKey) {
          this.closeCalciteDropdown();
        }
        else if (keyboardEvent.shiftKey) {
          this.focusPrevItem(itemToFocus);
        }
        else {
          this.focusNextItem(itemToFocus);
        }
        break;
      case "ArrowDown":
        this.focusNextItem(itemToFocus);
        break;
      case "ArrowUp":
        this.focusPrevItem(itemToFocus);
        break;
      case "Home":
        this.focusFirstItem();
        break;
      case "End":
        this.focusLastItem();
        break;
    }
    e.stopPropagation();
  }
  handleItemSelect(event) {
    this.updateSelectedItems();
    event.stopPropagation();
    this.calciteDropdownSelect.emit();
    if (!this.disableCloseOnSelect ||
      event.detail.requestedDropdownGroup.selectionMode === "none") {
      this.closeCalciteDropdown();
    }
  }
  getModifiers() {
    const flipModifier = {
      name: "flip",
      enabled: true
    };
    flipModifier.options = {
      fallbackPlacements: this.flipPlacements || popperMenuFlipPlacements
    };
    const eventListenerModifier = {
      name: "eventListeners",
      enabled: this.active
    };
    return [flipModifier, eventListenerModifier];
  }
  createPopper() {
    this.destroyPopper();
    const { menuEl, referenceEl, placement, overlayPositioning } = this;
    const modifiers = this.getModifiers();
    this.popper = createPopper({
      el: menuEl,
      modifiers,
      overlayPositioning,
      placement,
      referenceEl
    });
  }
  destroyPopper() {
    const { popper } = this;
    if (popper) {
      popper.destroy();
    }
    this.popper = null;
  }
  updateSelectedItems() {
    const items = Array.from(this.el.querySelectorAll("calcite-dropdown-item"));
    this.selectedItems = items.filter((item) => item.active);
  }
  getMaxScrollerHeight() {
    const groups = Array.from(this.el.querySelectorAll("calcite-dropdown-group"));
    const { maxItems } = this;
    let itemsToProcess = 0;
    let maxScrollerHeight = 0;
    let groupHeaderHeight;
    groups.forEach((group) => {
      if (maxItems > 0 && itemsToProcess < maxItems) {
        Array.from(group.children).forEach((item, index) => {
          if (index === 0) {
            if (isNaN(groupHeaderHeight)) {
              groupHeaderHeight = item.offsetTop;
            }
            maxScrollerHeight += groupHeaderHeight;
          }
          if (itemsToProcess < maxItems) {
            maxScrollerHeight += item.offsetHeight;
            itemsToProcess += 1;
          }
        });
      }
    });
    return maxScrollerHeight;
  }
  closeCalciteDropdown(focusTrigger = true) {
    this.active = false;
    if (focusTrigger) {
      focusElement(this.triggers[0]);
    }
  }
  focusFirstItem() {
    const firstItem = this.items[0];
    this.getFocusableElement(firstItem);
  }
  focusLastItem() {
    const lastItem = this.items[this.items.length - 1];
    this.getFocusableElement(lastItem);
  }
  focusNextItem(e) {
    const index = this.itemIndex(e);
    const nextItem = this.items[index + 1] || this.items[0];
    this.getFocusableElement(nextItem);
  }
  focusPrevItem(e) {
    const index = this.itemIndex(e);
    const prevItem = this.items[index - 1] || this.items[this.items.length - 1];
    this.getFocusableElement(prevItem);
  }
  itemIndex(e) {
    return this.items.indexOf(e);
  }
  getFocusableElement(item) {
    if (!item) {
      return;
    }
    const target = item.attributes.isLink
      ? item.shadowRoot.querySelector("a")
      : item;
    focusElement(target);
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "active": ["activeHandler"],
    "disabled": ["handleDisabledChange"],
    "maxItems": ["maxItemsHandler"],
    "placement": ["placementHandler"]
  }; }
  static get style() { return dropdownCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-dropdown",
    "$members$": {
      "active": [1540],
      "disableCloseOnSelect": [516, "disable-close-on-select"],
      "disabled": [516],
      "flipPlacements": [16],
      "maxItems": [2, "max-items"],
      "overlayPositioning": [1, "overlay-positioning"],
      "placement": [513],
      "scale": [513],
      "selectedItems": [1040],
      "type": [513],
      "width": [513],
      "reposition": [64]
    },
    "$listeners$": [[8, "click", "closeCalciteDropdownOnClick"], [0, "calciteDropdownCloseRequest", "closeCalciteDropdownOnEvent"], [8, "calciteDropdownOpen", "closeCalciteDropdownOnOpenEvent"], [1, "mouseenter", "mouseEnterHandler"], [1, "mouseleave", "mouseLeaveHandler"], [0, "calciteDropdownItemKeyEvent", "calciteDropdownItemKeyEvent"], [0, "calciteDropdownItemSelect", "handleItemSelect"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["active", "active"], ["disableCloseOnSelect", "disable-close-on-select"], ["disabled", "disabled"], ["placement", "placement"], ["scale", "scale"], ["type", "type"], ["width", "width"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$A = {
  containerSmall: "container--s",
  containerMedium: "container--m",
  containerLarge: "container--l"
};

const dropdownGroupCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-dropdown-group:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-dropdown-group{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-dropdown-group{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-dropdown-group{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-dropdown-group{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-dropdown-group{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-dropdown-group:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-dropdown-group-h{display:none}/*!@:host*/.sc-calcite-dropdown-group-h{display:block}/*!@.container--s*/.container--s.sc-calcite-dropdown-group{font-size:var(--calcite-font-size--2);line-height:1rem}/*!@.container--s .dropdown-title*/.container--s.sc-calcite-dropdown-group .dropdown-title.sc-calcite-dropdown-group{padding:0.5rem}/*!@.container--m*/.container--m.sc-calcite-dropdown-group{font-size:var(--calcite-font-size--1);line-height:1rem}/*!@.container--m .dropdown-title*/.container--m.sc-calcite-dropdown-group .dropdown-title.sc-calcite-dropdown-group{padding:0.75rem}/*!@.container--l*/.container--l.sc-calcite-dropdown-group{font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@.container--l .dropdown-title*/.container--l.sc-calcite-dropdown-group .dropdown-title.sc-calcite-dropdown-group{padding:1rem}/*!@.dropdown-title*/.dropdown-title.sc-calcite-dropdown-group{margin-bottom:-1px;display:block;cursor:default;overflow-wrap:break-word;border-width:0px;border-bottom-width:1px;border-style:solid;border-color:var(--calcite-ui-border-3);font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-2)}/*!@.dropdown-separator*/.dropdown-separator.sc-calcite-dropdown-group{display:block;height:1px;background-color:var(--calcite-ui-border-3)}";

/**
 * @slot - A slot for adding `calcite-dropdown-item`s.
 */
class DropdownGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteDropdownItemChange = createEvent(this, "calciteDropdownItemChange", 7);
    /** specify the selection mode - multi (allow any number of (or no) active items), single (allow and require one active item),
     none (no active items), defaults to single */
    this.selectionMode = "single";
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillLoad() {
    this.groupPosition = this.getGroupPosition();
  }
  render() {
    const scale = this.scale || getElementProp(this.el, "scale", "m");
    const groupTitle = this.groupTitle ? (hAsync("span", { "aria-hidden": "true", class: "dropdown-title" }, this.groupTitle)) : null;
    const dropdownSeparator = this.groupPosition > 0 ? hAsync("div", { class: "dropdown-separator", role: "separator" }) : null;
    return (hAsync(Host, { role: "menu" }, hAsync("div", { class: {
        container: true,
        [CSS$A.containerSmall]: scale === "s",
        [CSS$A.containerMedium]: scale === "m",
        [CSS$A.containerLarge]: scale === "l"
      }, title: this.groupTitle }, dropdownSeparator, groupTitle, hAsync("slot", null))));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  updateActiveItemOnChange(event) {
    this.requestedDropdownGroup = event.detail.requestedDropdownGroup;
    this.requestedDropdownItem = event.detail.requestedDropdownItem;
    this.calciteDropdownItemChange.emit({
      requestedDropdownGroup: this.requestedDropdownGroup,
      requestedDropdownItem: this.requestedDropdownItem
    });
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  getGroupPosition() {
    return Array.prototype.indexOf.call(this.el.parentElement.querySelectorAll("calcite-dropdown-group"), this.el);
  }
  get el() { return getElement(this); }
  static get style() { return dropdownGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-dropdown-group",
    "$members$": {
      "groupTitle": [513, "group-title"],
      "selectionMode": [513, "selection-mode"],
      "scale": [513]
    },
    "$listeners$": [[0, "calciteDropdownItemSelect", "updateActiveItemOnChange"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["groupTitle", "group-title"], ["selectionMode", "selection-mode"], ["scale", "scale"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$z = {
  containerLink: "container--link",
  containerSmall: "container--s",
  containerMedium: "container--m",
  containerLarge: "container--l",
  containerMulti: "container--multi-selection",
  containerSingle: "container--single-selection",
  containerNone: "container--none-selection"
};

const dropdownItemCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-dropdown-item:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-dropdown-item{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-dropdown-item{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-dropdown-item{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-dropdown-item{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-dropdown-item{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-dropdown-item:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-dropdown-item-h{display:none}/*!@.container--s*/.container--s.sc-calcite-dropdown-item{padding-top:0.25rem;padding-bottom:0.25rem;font-size:var(--calcite-font-size--2);line-height:1rem;-webkit-padding-end:0.5rem;padding-inline-end:0.5rem;-webkit-padding-start:1.5rem;padding-inline-start:1.5rem}/*!@.container--m*/.container--m.sc-calcite-dropdown-item{padding-top:0.5rem;padding-bottom:0.5rem;font-size:var(--calcite-font-size--1);line-height:1rem;-webkit-padding-end:0.75rem;padding-inline-end:0.75rem;-webkit-padding-start:2rem;padding-inline-start:2rem}/*!@.container--l*/.container--l.sc-calcite-dropdown-item{padding-top:0.75rem;padding-bottom:0.75rem;font-size:var(--calcite-font-size-0);line-height:1.25rem;-webkit-padding-end:1rem;padding-inline-end:1rem;-webkit-padding-start:2.5rem;padding-inline-start:2.5rem}/*!@.container--s.container--none-selection*/.container--s.container--none-selection.sc-calcite-dropdown-item{-webkit-padding-start:0.25rem;padding-inline-start:0.25rem}/*!@.container--s.container--none-selection .dropdown-link*/.container--s.container--none-selection.sc-calcite-dropdown-item .dropdown-link.sc-calcite-dropdown-item{-webkit-padding-start:0px;padding-inline-start:0px}/*!@.container--m.container--none-selection*/.container--m.container--none-selection.sc-calcite-dropdown-item{-webkit-padding-start:0.5rem;padding-inline-start:0.5rem}/*!@.container--m.container--none-selection .dropdown-link*/.container--m.container--none-selection.sc-calcite-dropdown-item .dropdown-link.sc-calcite-dropdown-item{-webkit-padding-start:0px;padding-inline-start:0px}/*!@.container--l.container--none-selection*/.container--l.container--none-selection.sc-calcite-dropdown-item{-webkit-padding-start:0.75rem;padding-inline-start:0.75rem}/*!@.container--l.container--none-selection .dropdown-link*/.container--l.container--none-selection.sc-calcite-dropdown-item .dropdown-link.sc-calcite-dropdown-item{-webkit-padding-start:0px;padding-inline-start:0px}/*!@:host*/.sc-calcite-dropdown-item-h{position:relative;display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center}/*!@.container*/.container.sc-calcite-dropdown-item{position:relative;display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;cursor:pointer;-ms-flex-align:center;align-items:center;color:var(--calcite-ui-text-3);-webkit-text-decoration-line:none;text-decoration-line:none;outline:2px solid transparent;outline-offset:2px;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}/*!@.dropdown-item-content*/.dropdown-item-content.sc-calcite-dropdown-item{-ms-flex:1 1 auto;flex:1 1 auto;-webkit-padding-end:auto;padding-inline-end:auto;-webkit-padding-start:0.25rem;padding-inline-start:0.25rem}/*!@:host, .container--link a*/.sc-calcite-dropdown-item-h,.container--link.sc-calcite-dropdown-item a.sc-calcite-dropdown-item{outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@:host(:focus)*/.sc-calcite-dropdown-item-h:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@.container--link*/.container--link.sc-calcite-dropdown-item{padding:0px}/*!@.container--link a*/.container--link.sc-calcite-dropdown-item a.sc-calcite-dropdown-item{position:relative;display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;cursor:pointer;-ms-flex-align:center;align-items:center;color:var(--calcite-ui-text-3);-webkit-text-decoration-line:none;text-decoration-line:none;outline:2px solid transparent;outline-offset:2px;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}/*!@.container--s .dropdown-link*/.container--s.sc-calcite-dropdown-item .dropdown-link.sc-calcite-dropdown-item{padding-top:0.25rem;padding-bottom:0.25rem;font-size:var(--calcite-font-size--2);line-height:1rem;-webkit-padding-end:0.5rem;padding-inline-end:0.5rem;-webkit-padding-start:1.5rem;padding-inline-start:1.5rem}/*!@.container--m .dropdown-link*/.container--m.sc-calcite-dropdown-item .dropdown-link.sc-calcite-dropdown-item{padding-top:0.5rem;padding-bottom:0.5rem;font-size:var(--calcite-font-size--1);line-height:1rem;-webkit-padding-end:0.75rem;padding-inline-end:0.75rem;-webkit-padding-start:2rem;padding-inline-start:2rem}/*!@.container--l .dropdown-link*/.container--l.sc-calcite-dropdown-item .dropdown-link.sc-calcite-dropdown-item{padding-top:0.75rem;padding-bottom:0.75rem;font-size:var(--calcite-font-size-0);line-height:1.25rem;-webkit-padding-end:1rem;padding-inline-end:1rem;-webkit-padding-start:2.5rem;padding-inline-start:2.5rem}/*!@:host(:hover) .container, :host(:active) .container*/.sc-calcite-dropdown-item-h:hover .container.sc-calcite-dropdown-item,.sc-calcite-dropdown-item-h:active .container.sc-calcite-dropdown-item{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-text-1);-webkit-text-decoration-line:none;text-decoration-line:none}/*!@:host(:hover) .container--link .dropdown-link, :host(:active) .container--link .dropdown-link*/.sc-calcite-dropdown-item-h:hover .container--link.sc-calcite-dropdown-item .dropdown-link.sc-calcite-dropdown-item,.sc-calcite-dropdown-item-h:active .container--link.sc-calcite-dropdown-item .dropdown-link.sc-calcite-dropdown-item{color:var(--calcite-ui-text-1)}/*!@:host(:focus) .container*/.sc-calcite-dropdown-item-h:focus .container.sc-calcite-dropdown-item{color:var(--calcite-ui-text-1);-webkit-text-decoration-line:none;text-decoration-line:none}/*!@:host(:active) .container*/.sc-calcite-dropdown-item-h:active .container.sc-calcite-dropdown-item{background-color:var(--calcite-ui-foreground-3)}/*!@:host(:hover) .container:before, :host(:active) .container:before, :host(:focus) .container:before*/.sc-calcite-dropdown-item-h:hover .container.sc-calcite-dropdown-item:before,.sc-calcite-dropdown-item-h:active .container.sc-calcite-dropdown-item:before,.sc-calcite-dropdown-item-h:focus .container.sc-calcite-dropdown-item:before{opacity:1}/*!@:host([active]) .container:not(.container--none-selection), :host([active]) .container--link .dropdown-link*/[active].sc-calcite-dropdown-item-h .container.sc-calcite-dropdown-item:not(.container--none-selection),[active].sc-calcite-dropdown-item-h .container--link.sc-calcite-dropdown-item .dropdown-link.sc-calcite-dropdown-item{font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1)}/*!@:host([active]) .container:not(.container--none-selection):before, :host([active]) .container--link .dropdown-link:before*/[active].sc-calcite-dropdown-item-h .container.sc-calcite-dropdown-item:not(.container--none-selection):before,[active].sc-calcite-dropdown-item-h .container--link.sc-calcite-dropdown-item .dropdown-link.sc-calcite-dropdown-item:before{opacity:1;color:var(--calcite-ui-brand)}/*!@:host([active]) .container:not(.container--none-selection) calcite-icon,\n:host([active]) .container--link .dropdown-link calcite-icon*/[active].sc-calcite-dropdown-item-h .container.sc-calcite-dropdown-item:not(.container--none-selection) calcite-icon.sc-calcite-dropdown-item,[active].sc-calcite-dropdown-item-h .container--link.sc-calcite-dropdown-item .dropdown-link.sc-calcite-dropdown-item calcite-icon.sc-calcite-dropdown-item{color:var(--calcite-ui-brand)}/*!@.container--multi-selection:before, .container--none-selection:before*/.container--multi-selection.sc-calcite-dropdown-item:before,.container--none-selection.sc-calcite-dropdown-item:before{display:none}/*!@.container--s:before*/.container--s.sc-calcite-dropdown-item:before{inset-inline-start:0.5rem}/*!@.container--m:before*/.container--m.sc-calcite-dropdown-item:before{inset-inline-start:0.75rem}/*!@.container--l:before*/.container--l.sc-calcite-dropdown-item:before{inset-inline-start:1rem}/*!@.dropdown-item-icon*/.dropdown-item-icon.sc-calcite-dropdown-item{position:absolute;opacity:0;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(0.9);transform:scale(0.9)}/*!@.container--s .dropdown-item-icon*/.container--s.sc-calcite-dropdown-item .dropdown-item-icon.sc-calcite-dropdown-item{inset-inline-start:0.25rem}/*!@.container--m .dropdown-item-icon*/.container--m.sc-calcite-dropdown-item .dropdown-item-icon.sc-calcite-dropdown-item{inset-inline-start:0.5rem}/*!@.container--l .dropdown-item-icon*/.container--l.sc-calcite-dropdown-item .dropdown-item-icon.sc-calcite-dropdown-item{inset-inline-start:0.75rem}/*!@:host(:hover) .dropdown-item-icon*/.sc-calcite-dropdown-item-h:hover .dropdown-item-icon.sc-calcite-dropdown-item{color:var(--calcite-ui-border-1);opacity:1}/*!@:host([active]) .dropdown-item-icon*/[active].sc-calcite-dropdown-item-h .dropdown-item-icon.sc-calcite-dropdown-item{color:var(--calcite-ui-brand);opacity:1}/*!@.container--s .dropdown-item-icon-start*/.container--s.sc-calcite-dropdown-item .dropdown-item-icon-start.sc-calcite-dropdown-item{-webkit-margin-end:0.5rem;margin-inline-end:0.5rem;-webkit-margin-start:0.25rem;margin-inline-start:0.25rem}/*!@.container--s .dropdown-item-icon-end*/.container--s.sc-calcite-dropdown-item .dropdown-item-icon-end.sc-calcite-dropdown-item{-webkit-margin-start:0.5rem;margin-inline-start:0.5rem}/*!@.container--m .dropdown-item-icon-start*/.container--m.sc-calcite-dropdown-item .dropdown-item-icon-start.sc-calcite-dropdown-item{-webkit-margin-end:0.75rem;margin-inline-end:0.75rem;-webkit-margin-start:0.25rem;margin-inline-start:0.25rem}/*!@.container--m .dropdown-item-icon-end*/.container--m.sc-calcite-dropdown-item .dropdown-item-icon-end.sc-calcite-dropdown-item{-webkit-margin-start:0.75rem;margin-inline-start:0.75rem}/*!@.container--l .dropdown-item-icon-start*/.container--l.sc-calcite-dropdown-item .dropdown-item-icon-start.sc-calcite-dropdown-item{-webkit-margin-end:1rem;margin-inline-end:1rem;-webkit-margin-start:0.25rem;margin-inline-start:0.25rem}/*!@.container--l .dropdown-item-icon-end*/.container--l.sc-calcite-dropdown-item .dropdown-item-icon-end.sc-calcite-dropdown-item{-webkit-margin-start:1rem;margin-inline-start:1rem}";

/**
 * @slot - A slot for adding text.
 */
class DropdownItem {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteDropdownItemSelect = createEvent(this, "calciteDropdownItemSelect", 7);
    this.calciteDropdownItemKeyEvent = createEvent(this, "calciteDropdownItemKeyEvent", 7);
    this.calciteDropdownCloseRequest = createEvent(this, "calciteDropdownCloseRequest", 7);
    //--------------------------------------------------------------------------
    //
    //  Public Properties
    //
    //--------------------------------------------------------------------------
    /** Indicates whether the item is active. */
    this.active = false;
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    this.el.focus();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillLoad() {
    this.initialize();
  }
  connectedCallback() {
    this.initialize();
  }
  render() {
    const scale = getElementProp(this.el, "scale", "m");
    const iconStartEl = (hAsync("calcite-icon", { class: "dropdown-item-icon-start", flipRtl: this.iconFlipRtl === "start" || this.iconFlipRtl === "both", icon: this.iconStart, scale: "s" }));
    const contentNode = (hAsync("span", { class: "dropdown-item-content" }, hAsync("slot", null)));
    const iconEndEl = (hAsync("calcite-icon", { class: "dropdown-item-icon-end", flipRtl: this.iconFlipRtl === "end" || this.iconFlipRtl === "both", icon: this.iconEnd, scale: "s" }));
    const slottedContent = this.iconStart && this.iconEnd
      ? [iconStartEl, contentNode, iconEndEl]
      : this.iconStart
        ? [iconStartEl, hAsync("slot", null)]
        : this.iconEnd
          ? [contentNode, iconEndEl]
          : contentNode;
    const contentEl = !this.href ? (slottedContent) : (hAsync("a", { "aria-label": this.label, class: "dropdown-link", href: this.href, ref: (el) => (this.childLink = el), rel: this.rel, target: this.target }, slottedContent));
    const itemRole = this.href
      ? null
      : this.selectionMode === "single"
        ? "menuitemradio"
        : this.selectionMode === "multi"
          ? "menuitemcheckbox"
          : "menuitem";
    const itemAria = this.selectionMode !== "none" ? this.active.toString() : null;
    return (hAsync(Host, { "aria-checked": itemAria, role: itemRole, tabindex: "0" }, hAsync("div", { class: {
        container: true,
        [CSS$z.containerLink]: !!this.href,
        [CSS$z.containerSmall]: scale === "s",
        [CSS$z.containerMedium]: scale === "m",
        [CSS$z.containerLarge]: scale === "l",
        [CSS$z.containerMulti]: this.selectionMode === "multi",
        [CSS$z.containerSingle]: this.selectionMode === "single",
        [CSS$z.containerNone]: this.selectionMode === "none"
      } }, this.selectionMode !== "none" ? (hAsync("calcite-icon", { class: "dropdown-item-icon", icon: this.selectionMode === "multi" ? "check" : "bullet-point", scale: "s" })) : null, contentEl)));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  onClick() {
    this.emitRequestedItem();
  }
  keyDownHandler(e) {
    switch (e.key) {
      case " ":
        this.emitRequestedItem();
        if (this.href) {
          e.preventDefault();
          this.childLink.click();
        }
        break;
      case "Enter":
        this.emitRequestedItem();
        if (this.href) {
          this.childLink.click();
        }
        break;
      case "Escape":
        this.calciteDropdownCloseRequest.emit();
        break;
      case "Tab":
      case "ArrowUp":
      case "ArrowDown":
      case "Home":
      case "End":
        this.calciteDropdownItemKeyEvent.emit({ keyboardEvent: e });
        break;
    }
    e.preventDefault();
  }
  updateActiveItemOnChange(event) {
    const parentEmittedChange = event.composedPath().includes(this.parentDropdownGroupEl);
    if (parentEmittedChange) {
      this.requestedDropdownGroup = event.detail.requestedDropdownGroup;
      this.requestedDropdownItem = event.detail.requestedDropdownItem;
      this.determineActiveItem();
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  initialize() {
    this.selectionMode = getElementProp(this.el, "selection-mode", "single");
    this.parentDropdownGroupEl = this.el.closest("calcite-dropdown-group");
    if (this.selectionMode === "none") {
      this.active = false;
    }
  }
  determineActiveItem() {
    switch (this.selectionMode) {
      case "multi":
        if (this.el === this.requestedDropdownItem) {
          this.active = !this.active;
        }
        break;
      case "single":
        if (this.el === this.requestedDropdownItem) {
          this.active = true;
        }
        else if (this.requestedDropdownGroup === this.parentDropdownGroupEl) {
          this.active = false;
        }
        break;
      case "none":
        this.active = false;
        break;
    }
  }
  emitRequestedItem() {
    this.calciteDropdownItemSelect.emit({
      requestedDropdownItem: this.el,
      requestedDropdownGroup: this.parentDropdownGroupEl
    });
  }
  get el() { return getElement(this); }
  static get style() { return dropdownItemCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-dropdown-item",
    "$members$": {
      "active": [1540],
      "iconFlipRtl": [513, "icon-flip-rtl"],
      "iconStart": [513, "icon-start"],
      "iconEnd": [513, "icon-end"],
      "href": [513],
      "label": [1],
      "rel": [1],
      "target": [1],
      "setFocus": [64]
    },
    "$listeners$": [[0, "click", "onClick"], [0, "keydown", "keyDownHandler"], [16, "calciteDropdownItemChange", "updateActiveItemOnChange"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["active", "active"], ["iconFlipRtl", "icon-flip-rtl"], ["iconStart", "icon-start"], ["iconEnd", "icon-end"], ["href", "href"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$y = {
  button: "button"
};
const ICONS$9 = {
  plus: "plus"
};

const fabCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-fab:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-fab{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-fab{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-fab{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-fab{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-fab{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-fab:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-fab-h{display:none}/*!@:host*/.sc-calcite-fab-h{display:-ms-flexbox;display:flex;background-color:transparent}/*!@:host([disabled])*/[disabled].sc-calcite-fab-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-fab-h[disabled] .sc-calcite-fab-s>[calcite-hydrated][disabled],[disabled].sc-calcite-fab-h [calcite-hydrated][disabled].sc-calcite-fab{opacity:1}/*!@calcite-button*/calcite-button.sc-calcite-fab{--tw-shadow:0 6px 20px -4px rgba(0, 0, 0, 0.1), 0 4px 12px -2px rgba(0, 0, 0, 0.08);--tw-shadow-colored:0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@calcite-button:hover*/calcite-button.sc-calcite-fab:hover{--tw-shadow:0 12px 32px -2px rgba(0, 0, 0, 0.1), 0 4px 20px 0 rgba(0, 0, 0, 0.08);--tw-shadow-colored:0 12px 32px -2px var(--tw-shadow-color), 0 4px 20px 0 var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@calcite-button:active*/calcite-button.sc-calcite-fab:active{--tw-shadow:0 2px 12px -4px rgba(0, 0, 0, 0.2), 0 2px 4px -2px rgba(0, 0, 0, 0.16);--tw-shadow-colored:0 2px 12px -4px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}";

class Fab {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * Used to set the button's appearance. Default is outline.
     */
    this.appearance = "outline";
    /**
     * Used to set the button's color. Default is light.
     */
    this.color = "neutral";
    /**
     * When true, disabled prevents interaction. This state shows items with lower opacity/grayed.
     */
    this.disabled = false;
    /**
     * The name of the icon to display. The value of this property must match the icon name from https://esri.github.io/calcite-ui-icons/.
     * @default "plus"
     */
    this.icon = ICONS$9.plus;
    /**
     * When true, content is waiting to be loaded. This state shows a busy indicator.
     */
    this.loading = false;
    /**
     * Specifies the size of the fab.
     */
    this.scale = "m";
    /**
     * Indicates whether the text is displayed.
     */
    this.textEnabled = false;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentDidRender() {
    updateHostInteraction(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Methods
  //
  // --------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    focusElement(this.buttonEl);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    const { appearance, color, disabled, loading, scale, textEnabled, icon, label, text } = this;
    const title = !textEnabled ? label || text || null : null;
    return (hAsync("calcite-button", { appearance: appearance === "solid" ? "solid" : "outline", class: CSS$y.button, color: color, disabled: disabled, iconStart: icon, label: label, loading: loading, ref: (buttonEl) => {
        this.buttonEl = buttonEl;
      }, round: true, scale: scale, title: title, type: "button", width: "auto" }, this.textEnabled ? this.text : null));
  }
  get el() { return getElement(this); }
  static get style() { return fabCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-fab",
    "$members$": {
      "appearance": [513],
      "color": [513],
      "disabled": [516],
      "icon": [1],
      "label": [1],
      "loading": [516],
      "scale": [513],
      "text": [1],
      "textEnabled": [516, "text-enabled"],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["appearance", "appearance"], ["color", "color"], ["disabled", "disabled"], ["loading", "loading"], ["scale", "scale"], ["textEnabled", "text-enabled"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$x = {
  container: "container",
  searchIcon: "search-icon",
  clearButton: "clear-button"
};
const TEXT$d = {
  filterLabel: "Filter",
  clear: "Clear filter"
};
const ICONS$8 = {
  search: "search",
  close: "x"
};

const filterCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-filter:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-filter{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-filter{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-filter{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-filter{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-filter{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:host*/.sc-calcite-filter-h{-webkit-box-sizing:border-box;box-sizing:border-box;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-2);font-size:var(--calcite-font-size--1)}/*!@:host **/.sc-calcite-filter-h *.sc-calcite-filter{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@:root*/.sc-calcite-filter:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-filter-h{display:none}/*!@:host*/.sc-calcite-filter-h{display:-ms-flexbox;display:flex;width:100%}/*!@:host([disabled])*/[disabled].sc-calcite-filter-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-filter-h[disabled] .sc-calcite-filter-s>[calcite-hydrated][disabled],[disabled].sc-calcite-filter-h [calcite-hydrated][disabled].sc-calcite-filter{opacity:1}/*!@.container*/.container.sc-calcite-filter{display:-ms-flexbox;display:flex;width:100%;padding:0.5rem}/*!@label*/label.sc-calcite-filter{position:relative;margin-left:0.25rem;margin-right:0.25rem;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;width:100%;-ms-flex-align:center;align-items:center;overflow:hidden}/*!@input[type=text]*/input[type=text].sc-calcite-filter{margin-bottom:0.25rem;width:100%;border-style:none;background-color:transparent;padding-top:0.25rem;padding-bottom:0.25rem;padding-right:0.25rem;padding-left:1.5rem;font-family:inherit;font-size:var(--calcite-font-size--2);line-height:1rem;color:var(--calcite-ui-text-1);-webkit-transition:padding var(--calcite-animation-timing), -webkit-box-shadow var(--calcite-animation-timing);transition:padding var(--calcite-animation-timing), -webkit-box-shadow var(--calcite-animation-timing);transition:padding var(--calcite-animation-timing), box-shadow var(--calcite-animation-timing);transition:padding var(--calcite-animation-timing), box-shadow var(--calcite-animation-timing), -webkit-box-shadow var(--calcite-animation-timing)}/*!@input[type=text]::-ms-clear*/input[type=text].sc-calcite-filter::-ms-clear{display:none}/*!@calcite-input*/calcite-input.sc-calcite-filter{width:100%}/*!@.search-icon*/.search-icon.sc-calcite-filter{position:absolute;display:-ms-flexbox;display:flex;color:var(--calcite-ui-text-2);inset-inline-start:0;-webkit-transition:left var(--calcite-animation-timing), right var(--calcite-animation-timing), opacity var(--calcite-animation-timing);transition:left var(--calcite-animation-timing), right var(--calcite-animation-timing), opacity var(--calcite-animation-timing)}/*!@input[type=text]:focus*/input[type=text].sc-calcite-filter:focus{border-color:var(--calcite-ui-brand);outline:2px solid transparent;outline-offset:2px;padding-inline:0.25rem}/*!@input[type=text]:focus ~ .search-icon*/input[type=text].sc-calcite-filter:focus~.search-icon.sc-calcite-filter{inset-inline-start:calc(1rem * -1);opacity:0}/*!@.clear-button*/.clear-button.sc-calcite-filter{display:-ms-flexbox;display:flex;cursor:pointer;-ms-flex-align:center;align-items:center;border-width:0px;background-color:transparent;color:var(--calcite-ui-text-2)}/*!@.clear-button:hover, .clear-button:focus*/.clear-button.sc-calcite-filter:hover,.clear-button.sc-calcite-filter:focus{color:var(--calcite-ui-text-1)}";

const filterDebounceInMs = 250;
class Filter {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteFilterChange = createEvent(this, "calciteFilterChange", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * The items to filter through. The filter uses this as the starting point, and returns items
     * that contain the string entered in the input, using a partial match and recursive search.
     *
     * This property is required.
     */
    this.items = [];
    /**
     * When true, disabled prevents interaction. This state shows items with lower opacity/grayed.
     */
    this.disabled = false;
    /**
     * The resulting items after filtering.
     *
     * @readonly
     */
    this.filteredItems = [];
    /** specify the scale of filter, defaults to m */
    this.scale = "m";
    /**
     * Filter value.
     */
    this.value = "";
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.filter = debounce$2((value) => {
      const regex = new RegExp(value, "i");
      if (this.items.length === 0) {
        this.updateFiltered([]);
        return;
      }
      const find = (input, RE) => {
        let found = false;
        forIn(input, (val) => {
          if (typeof val === "function") {
            return;
          }
          if (Array.isArray(val) || (typeof val === "object" && val !== null)) {
            if (find(val, RE)) {
              found = true;
            }
          }
          else if (RE.test(val)) {
            found = true;
          }
        });
        return found;
      };
      const result = this.items.filter((item) => {
        return find(item, regex);
      });
      this.updateFiltered(result);
    }, filterDebounceInMs);
    this.inputHandler = (event) => {
      const target = event.target;
      this.value = target.value;
    };
    this.keyDownHandler = ({ key }) => {
      if (key === "Escape") {
        this.clear();
      }
    };
    this.clear = () => {
      this.value = "";
      this.setFocus();
    };
  }
  watchItemsHandler() {
    this.filter(this.value);
  }
  valueHandler(value) {
    this.filter(value);
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentDidRender() {
    updateHostInteraction(this);
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillLoad() {
    this.filter(this.value);
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    focusElement(this.textInput);
  }
  updateFiltered(filtered) {
    this.filteredItems.length = 0;
    this.filteredItems = this.filteredItems.concat(filtered);
    this.calciteFilterChange.emit();
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    const { disabled, scale } = this;
    return (hAsync(Fragment, null, hAsync("div", { class: CSS$x.container }, hAsync("label", null, hAsync("calcite-input", { "aria-label": this.intlLabel || TEXT$d.filterLabel, disabled: disabled, icon: ICONS$8.search, onCalciteInputInput: this.inputHandler, onKeyDown: this.keyDownHandler, placeholder: this.placeholder, ref: (el) => {
        this.textInput = el;
      }, scale: scale, type: "text", value: this.value })), this.value ? (hAsync("button", { "aria-label": this.intlClear || TEXT$d.clear, class: CSS$x.clearButton, disabled: disabled, onClick: this.clear }, hAsync("calcite-icon", { icon: ICONS$8.close, scale: scale }))) : null)));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "items": ["watchItemsHandler"],
    "value": ["valueHandler"]
  }; }
  static get style() { return filterCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-filter",
    "$members$": {
      "items": [1040],
      "disabled": [516],
      "filteredItems": [1040],
      "intlClear": [1, "intl-clear"],
      "intlLabel": [1, "intl-label"],
      "placeholder": [1],
      "scale": [513],
      "value": [1025],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["scale", "scale"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$w = {
  frame: "frame",
  frameAdvancing: "frame--advancing",
  frameRetreating: "frame--retreating"
};

const flowCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-flow:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-flow{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-flow{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-flow{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-flow{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-flow{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:host*/.sc-calcite-flow-h{-webkit-box-sizing:border-box;box-sizing:border-box;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-2);font-size:var(--calcite-font-size--1)}/*!@:host **/.sc-calcite-flow-h *.sc-calcite-flow{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@:root*/.sc-calcite-flow:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-flow-h{display:none}/*!@:host*/.sc-calcite-flow-h{position:relative;display:-ms-flexbox;display:flex;width:100%;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-align:stretch;align-items:stretch;background-color:transparent;overflow:hidden}/*!@:host .frame*/.sc-calcite-flow-h .frame.sc-calcite-flow{position:relative;margin:0px;display:-ms-flexbox;display:flex;width:100%;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:stretch;align-items:stretch;padding:0px}/*!@:host ::slotted(calcite-panel)*/.sc-calcite-flow-h .sc-calcite-flow-s>calcite-panel{height:100%}/*!@:host ::slotted(.calcite-match-height:last-child)*/.sc-calcite-flow-h .sc-calcite-flow-s>.calcite-match-height:last-child{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;overflow:hidden}/*!@:host .frame--advancing*/.sc-calcite-flow-h .frame--advancing.sc-calcite-flow{-webkit-animation:calcite-frame-advance var(--calcite-animation-timing);animation:calcite-frame-advance var(--calcite-animation-timing)}/*!@:host .frame--retreating*/.sc-calcite-flow-h .frame--retreating.sc-calcite-flow{-webkit-animation:calcite-frame-retreat var(--calcite-animation-timing);animation:calcite-frame-retreat var(--calcite-animation-timing)}@-webkit-keyframes calcite-frame-advance{0%{--tw-bg-opacity:0.5}0%{-webkit-transform:translate3d(50px, 0, 0);transform:translate3d(50px, 0, 0)}100%{--tw-bg-opacity:1}100%{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}}@keyframes calcite-frame-advance{0%{--tw-bg-opacity:0.5}0%{-webkit-transform:translate3d(50px, 0, 0);transform:translate3d(50px, 0, 0)}100%{--tw-bg-opacity:1}100%{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}}@-webkit-keyframes calcite-frame-retreat{0%{--tw-bg-opacity:0.5}0%{-webkit-transform:translate3d(-50px, 0, 0);transform:translate3d(-50px, 0, 0)}100%{--tw-bg-opacity:1}100%{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}}@keyframes calcite-frame-retreat{0%{--tw-bg-opacity:0.5}0%{-webkit-transform:translate3d(-50px, 0, 0);transform:translate3d(-50px, 0, 0)}100%{--tw-bg-opacity:1}100%{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}}";

/**
 * @slot - A slot for adding `calcite-panel`s to the flow.
 */
class Flow {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.panelCount = 0;
    this.flowDirection = null;
    this.panels = [];
    this.getFlowDirection = (oldPanelCount, newPanelCount) => {
      const allowRetreatingDirection = oldPanelCount > 1;
      const allowAdvancingDirection = oldPanelCount && newPanelCount > 1;
      if (!allowAdvancingDirection && !allowRetreatingDirection) {
        return null;
      }
      return newPanelCount < oldPanelCount ? "retreating" : "advancing";
    };
    this.updateFlowProps = () => {
      const { panels } = this;
      const newPanels = Array.from(this.el.querySelectorAll("calcite-panel"));
      const oldPanelCount = panels.length;
      const newPanelCount = newPanels.length;
      const activePanel = newPanels[newPanelCount - 1];
      const previousPanel = newPanels[newPanelCount - 2];
      if (newPanelCount && activePanel) {
        newPanels.forEach((panelNode) => {
          panelNode.showBackButton = newPanelCount > 1;
          panelNode.hidden = panelNode !== activePanel;
        });
      }
      if (previousPanel) {
        previousPanel.menuOpen = false;
      }
      this.panels = newPanels;
      if (oldPanelCount !== newPanelCount) {
        const flowDirection = this.getFlowDirection(oldPanelCount, newPanelCount);
        this.panelCount = newPanelCount;
        this.flowDirection = flowDirection;
      }
    };
    this.panelItemMutationObserver = createObserver();
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /**
   * Removes the currently active `calcite-panel`.
   */
  async back() {
    const lastItem = this.el.querySelector("calcite-panel:last-child");
    if (!lastItem) {
      return;
    }
    const beforeBack = lastItem.beforeBack
      ? lastItem.beforeBack
      : () => Promise.resolve();
    return beforeBack.call(lastItem).then(() => {
      lastItem.remove();
      return lastItem;
    });
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    var _a;
    (_a = this.panelItemMutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el, { childList: true, subtree: true });
    this.updateFlowProps();
  }
  disconnectedCallback() {
    var _a;
    (_a = this.panelItemMutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
  }
  // --------------------------------------------------------------------------
  //
  //  Private Methods
  //
  // --------------------------------------------------------------------------
  handleCalcitePanelBackClick() {
    this.back();
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    const { flowDirection, panelCount } = this;
    const frameDirectionClasses = {
      [CSS$w.frame]: true,
      [CSS$w.frameAdvancing]: flowDirection === "advancing",
      [CSS$w.frameRetreating]: flowDirection === "retreating"
    };
    return (hAsync("div", { class: frameDirectionClasses, key: panelCount }, hAsync("slot", null)));
  }
  get el() { return getElement(this); }
  static get style() { return flowCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-flow",
    "$members$": {
      "panelCount": [32],
      "flowDirection": [32],
      "panels": [32],
      "back": [64]
    },
    "$listeners$": [[0, "calcitePanelBackClick", "handleCalcitePanelBackClick"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
/**
 * Calculate slope of the tangents
 * uses Steffen interpolation as it's monotonic
 * http://jrwalsh1.github.io/posts/interpolations/
 */
function slope(p0, p1, p2) {
  const dx = p1[0] - p0[0];
  const dx1 = p2[0] - p1[0];
  const dy = p1[1] - p0[1];
  const dy1 = p2[1] - p1[1];
  const m = dy / (dx || (dx1 < 0 && 0));
  const m1 = dy1 / (dx1 || (dx < 0 && 0));
  const p = (m * dx1 + m1 * dx) / (dx + dx1);
  return (Math.sign(m) + Math.sign(m1)) * Math.min(Math.abs(m), Math.abs(m1), 0.5 * Math.abs(p)) || 0;
}
/**
 * Calculate slope for just one tangent (single-sided)
 */
function slopeSingle(p0, p1, m) {
  const dx = p1[0] - p0[0];
  const dy = p1[1] - p0[1];
  return dx ? ((3 * dy) / dx - m) / 2 : m;
}
/**
 * Given two points and their tangent slopes,
 * calculate the bezier handle coordinates and return draw command.
 *
 * Translates Hermite Spline to Beziér curve:
 * stackoverflow.com/questions/42574940/
 */
function bezier(p0, p1, m0, m1, t) {
  const [x0, y0] = p0;
  const [x1, y1] = p1;
  const dx = (x1 - x0) / 3;
  const h1 = t([x0 + dx, y0 + dx * m0]).join(",");
  const h2 = t([x1 - dx, y1 - dx * m1]).join(",");
  const p = t([x1, y1]).join(",");
  return `C ${h1} ${h2} ${p}`;
}
/**
 * Generate a function which will translate a point
 * from the data coordinate space to svg viewbox oriented pixels
 */
function translate({ width, height, min, max }) {
  const rangeX = max[0] - min[0];
  const rangeY = max[1] - min[1];
  return (point) => {
    const x = ((point[0] - min[0]) / rangeX) * width;
    const y = height - (point[1] / rangeY) * height;
    return [x, y];
  };
}
/**
 * Get the min and max values from the dataset
 */
function range(data) {
  const [startX, startY] = data[0];
  const min = [startX, startY];
  const max = [startX, startY];
  return data.reduce(({ min, max }, [x, y]) => ({
    min: [Math.min(min[0], x), Math.min(min[1], y)],
    max: [Math.max(max[0], x), Math.max(max[1], y)]
  }), { min, max });
}
/**
 * Generate drawing commands for an area graph
 * returns a string can can be passed directly to a path element's `d` attribute
 */
function area({ data, min, max, t }) {
  if (data.length === 0) {
    return "";
  }
  // important points for beginning and ending the path
  const [startX, startY] = t(data[0]);
  const [minX, minY] = t(min);
  const [maxX] = t(max);
  // keep track of previous slope/points
  let m;
  let p0;
  let p1;
  // iterate over data points, calculating command for each
  const commands = data.reduce((acc, point, i) => {
    p0 = data[i - 2];
    p1 = data[i - 1];
    if (i > 1) {
      const m1 = slope(p0, p1, point);
      const m0 = m === undefined ? slopeSingle(p0, p1, m1) : m;
      const command = bezier(p0, p1, m0, m1, t);
      m = m1;
      return `${acc} ${command}`;
    }
    return acc;
  }, `M ${minX},${minY} L ${minX},${startY} L ${startX},${startY}`);
  // close the path
  const last = data[data.length - 1];
  const end = bezier(p1, last, m, slopeSingle(p1, last, m), t);
  return `${commands} ${end} L ${maxX},${minY} Z`;
}

const graphCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-graph:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-graph{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-graph{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-graph{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-graph{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-graph{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-graph:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-graph-h{display:none}/*!@:host*/.sc-calcite-graph-h{display:block}/*!@.svg*/.svg.sc-calcite-graph{fill:currentColor;stroke:transparent;margin:0px;display:block;height:100%;width:100%;padding:0px}/*!@.svg .graph-path--highlight*/.svg.sc-calcite-graph .graph-path--highlight.sc-calcite-graph{fill:var(--calcite-ui-brand);opacity:0.5}";

class Graph {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /**
     * Array of tuples describing a single data point ([x, y])
     * These data points should be sorted by x-axis value
     */
    this.data = [];
    //--------------------------------------------------------------------------
    //
    //  Private State/Props
    //
    //--------------------------------------------------------------------------
    this.graphId = `calcite-graph-${guid()}`;
    this.resizeObserver = createObserver();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    var _a;
    (_a = this.resizeObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el);
  }
  disconnectedCallback() {
    var _a;
    (_a = this.resizeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
  }
  render() {
    const { data, colorStops, el, highlightMax, highlightMin, min, max } = this;
    const id = this.graphId;
    const { clientHeight: height, clientWidth: width } = el;
    // if we have no data, return empty svg
    if (!data || data.length === 0) {
      return (hAsync("svg", { class: "svg", height: height, preserveAspectRatio: "none", viewBox: `0 0 ${width} ${height}`, width: width }));
    }
    const { min: rangeMin, max: rangeMax } = range(data);
    let currentMin = rangeMin;
    let currentMax = rangeMax;
    if (min < rangeMin[0] || min > rangeMin[0]) {
      currentMin = [min, 0];
    }
    if (max > rangeMax[0] || max < rangeMax[0]) {
      currentMax = [max, rangeMax[1]];
    }
    const t = translate({ min: currentMin, max: currentMax, width, height });
    const [hMinX] = t([highlightMin, currentMax[1]]);
    const [hMaxX] = t([highlightMax, currentMax[1]]);
    const areaPath = area({ data, min: rangeMin, max: rangeMax, t });
    const fill = colorStops ? `url(#linear-gradient-${id})` : undefined;
    return (hAsync("svg", { class: "svg", height: height, preserveAspectRatio: "none", viewBox: `0 0 ${width} ${height}`, width: width }, colorStops ? (hAsync("defs", null, hAsync("linearGradient", { id: `linear-gradient-${id}`, x1: "0", x2: "1", y1: "0", y2: "0" }, colorStops.map(({ offset, color, opacity }) => (hAsync("stop", { offset: `${offset * 100}%`, "stop-color": color, "stop-opacity": opacity })))))) : null, highlightMin !== undefined ? ([
      hAsync("mask", { height: "100%", id: `${id}1`, width: "100%", x: "0%", y: "0%" }, hAsync("path", { d: `
            M 0,0
            L ${hMinX - 1},0
            L ${hMinX - 1},${height}
            L 0,${height}
            Z
          `, fill: "white" })),
      hAsync("mask", { height: "100%", id: `${id}2`, width: "100%", x: "0%", y: "0%" }, hAsync("path", { d: `
            M ${hMinX + 1},0
            L ${hMaxX - 1},0
            L ${hMaxX - 1},${height}
            L ${hMinX + 1}, ${height}
            Z
          `, fill: "white" })),
      hAsync("mask", { height: "100%", id: `${id}3`, width: "100%", x: "0%", y: "0%" }, hAsync("path", { d: `
                M ${hMaxX + 1},0
                L ${width},0
                L ${width},${height}
                L ${hMaxX + 1}, ${height}
                Z
              `, fill: "white" })),
      hAsync("path", { class: "graph-path", d: areaPath, fill: fill, mask: `url(#${id}1)` }),
      hAsync("path", { class: "graph-path--highlight", d: areaPath, fill: fill, mask: `url(#${id}2)` }),
      hAsync("path", { class: "graph-path", d: areaPath, fill: fill, mask: `url(#${id}3)` })
    ]) : (hAsync("path", { class: "graph-path", d: areaPath, fill: fill }))));
  }
  get el() { return getElement(this); }
  static get style() { return graphCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-graph",
    "$members$": {
      "data": [16],
      "colorStops": [16],
      "highlightMin": [2, "highlight-min"],
      "highlightMax": [2, "highlight-max"],
      "min": [2],
      "max": [2]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$v = {
  handle: "handle",
  handleActivated: "handle--activated"
};
const ICONS$7 = {
  drag: "drag"
};

const handleCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-handle:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-handle{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-handle{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-handle{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-handle{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-handle{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-handle:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-handle-h{display:none}/*!@:host*/.sc-calcite-handle-h{display:-ms-flexbox;display:flex}/*!@.handle*/.handle.sc-calcite-handle{display:-ms-flexbox;display:flex;cursor:move;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-item-align:stretch;align-self:stretch;border-style:none;background-color:transparent;outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;color:var(--calcite-ui-border-3);padding:0.75rem 0.25rem;line-height:0}/*!@.handle:hover*/.handle.sc-calcite-handle:hover{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-text-1)}/*!@.handle:focus*/.handle.sc-calcite-handle:focus{color:var(--calcite-ui-text-1);outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@.handle--activated*/.handle--activated.sc-calcite-handle{background-color:var(--calcite-ui-foreground-3);color:var(--calcite-ui-text-1)}/*!@.handle calcite-icon*/.handle.sc-calcite-handle calcite-icon.sc-calcite-handle{color:inherit}";

class Handle {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteHandleNudge = createEvent(this, "calciteHandleNudge", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * @internal - stores the activated state of the drag handle.
     */
    this.activated = false;
    /**
     * Value for the button title attribute
     */
    this.textTitle = "handle";
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.handleKeyDown = (event) => {
      switch (event.key) {
        case " ":
          this.activated = !this.activated;
          break;
        case "ArrowUp":
        case "ArrowDown":
          if (!this.activated) {
            return;
          }
          const direction = event.key.toLowerCase().replace("arrow", "");
          this.calciteHandleNudge.emit({ handle: this.el, direction });
          break;
      }
    };
    this.handleBlur = () => {
      this.activated = false;
    };
  }
  // --------------------------------------------------------------------------
  //
  //  Methods
  //
  // --------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    this.handleButton.focus();
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    return (
    // Needs to be a span because of https://github.com/SortableJS/Sortable/issues/1486
    hAsync("span", { "aria-pressed": this.activated.toString(), class: { [CSS$v.handle]: true, [CSS$v.handleActivated]: this.activated }, onBlur: this.handleBlur, onKeyDown: this.handleKeyDown, ref: (el) => {
        this.handleButton = el;
      }, role: "button", tabindex: "0", title: this.textTitle }, hAsync("calcite-icon", { icon: ICONS$7.drag, scale: "s" })));
  }
  get el() { return getElement(this); }
  static get style() { return handleCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-handle",
    "$members$": {
      "activated": [1540],
      "textTitle": [513, "text-title"],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["activated", "activated"], ["textTitle", "text-title"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$u = {
  icon: "icon",
  flipRtl: "flip-rtl"
};

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const scaleToPx = {
  s: 16,
  m: 24,
  l: 32
};

const iconCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-icon:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-icon{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-icon{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-icon{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-icon{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-icon{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-icon:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-icon-h{display:none}/*!@:host*/.sc-calcite-icon-h{display:-ms-inline-flexbox;display:inline-flex;color:var(--calcite-ui-icon-color)}/*!@:host([scale=s])*/[scale=s].sc-calcite-icon-h{height:1rem;width:1rem;min-width:1rem;min-height:1rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-icon-h{height:1.5rem;width:1.5rem;min-width:1.5rem;min-height:1.5rem}/*!@:host([scale=l])*/[scale=l].sc-calcite-icon-h{height:2rem;width:2rem;min-width:2rem;min-height:2rem}/*!@.flip-rtl*/.flip-rtl.sc-calcite-icon{-webkit-transform:scaleX(-1);transform:scaleX(-1)}/*!@.svg*/.svg.sc-calcite-icon{display:block}";

class Icon {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /**
     * The name of the icon to display. The value of this property must match the icon name from https://esri.github.io/calcite-ui-icons/.
     */
    this.icon = null;
    /**
     * When true, the icon will be flipped when the element direction is 'rtl'.
     */
    this.flipRtl = false;
    /**
     * Icon scale.
     */
    this.scale = "m";
    this.visible = false;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    this.waitUntilVisible(() => {
      this.visible = true;
      this.loadIconPathData();
    });
  }
  disconnectedCallback() {
    var _a;
    (_a = this.intersectionObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    this.intersectionObserver = null;
  }
  async componentWillLoad() {
    this.loadIconPathData();
  }
  render() {
    const { el, flipRtl, pathData, scale, textLabel } = this;
    const dir = getElementDir(el);
    const size = scaleToPx[scale];
    const semantic = !!textLabel;
    const paths = [].concat(pathData || "");
    return (hAsync(Host, { "aria-hidden": (!semantic).toString(), "aria-label": semantic ? textLabel : null, role: semantic ? "img" : null }, hAsync("svg", { class: {
        [CSS$u.flipRtl]: dir === "rtl" && flipRtl,
        svg: true
      }, fill: "currentColor", height: "100%", viewBox: `0 0 ${size} ${size}`, width: "100%", xmlns: "http://www.w3.org/2000/svg" }, paths.map((path) => typeof path === "string" ? (hAsync("path", { d: path })) : (hAsync("path", { d: path.d, opacity: "opacity" in path ? path.opacity : 1 }))))));
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  async loadIconPathData() {
    {
      return;
    }
  }
  waitUntilVisible(callback) {
    this.intersectionObserver = createObserver();
    if (!this.intersectionObserver) {
      callback();
      return;
    }
    this.intersectionObserver.observe(this.el);
  }
  static get assetsDirs() { return ["assets"]; }
  get el() { return getElement(this); }
  static get watchers() { return {
    "icon": ["loadIconPathData"],
    "scale": ["loadIconPathData"]
  }; }
  static get style() { return iconCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-icon",
    "$members$": {
      "icon": [513],
      "flipRtl": [516, "flip-rtl"],
      "scale": [513],
      "textLabel": [1, "text-label"],
      "pathData": [32],
      "visible": [32]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["icon", "icon"], ["flipRtl", "flip-rtl"], ["scale", "scale"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$t = {
  wrapper: "wrapper",
  confirmChangesButton: "confirm-changes-button",
  cancelEditingButton: "cancel-editing-button",
  inputWrapper: "input-wrapper",
  cancelEditingButtonWrapper: "cancel-editing-button-wrapper",
  enableEditingButton: "enable-editing-button",
  controlsWrapper: "controls-wrapper"
};
const TEXT$c = {
  intlEnablingEditing: "Click to edit",
  intlCancelEditing: "Cancel",
  intlConfirmChanges: "Save"
};

const inlineEditableCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-inline-editable:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-inline-editable{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-inline-editable{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-inline-editable{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-inline-editable{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-inline-editable{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-inline-editable:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-inline-editable-h{display:none}/*!@:host*/.sc-calcite-inline-editable-h{display:block}/*!@:host([scale=s]) .controls-wrapper*/[scale=s].sc-calcite-inline-editable-h .controls-wrapper.sc-calcite-inline-editable{height:1.5rem}/*!@:host([scale=m]) .controls-wrapper*/[scale=m].sc-calcite-inline-editable-h .controls-wrapper.sc-calcite-inline-editable{height:2rem}/*!@:host([scale=l]) .controls-wrapper*/[scale=l].sc-calcite-inline-editable-h .controls-wrapper.sc-calcite-inline-editable{height:2.75rem}/*!@:host(:not([editing-enabled]):not([disabled])) .wrapper:hover*/.sc-calcite-inline-editable-h:not([editing-enabled]):not([disabled]) .wrapper.sc-calcite-inline-editable:hover{background-color:var(--calcite-ui-foreground-2)}/*!@.wrapper*/.wrapper.sc-calcite-inline-editable{-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;background-color:var(--calcite-ui-foreground-1);-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s}/*!@.wrapper .input-wrapper*/.wrapper.sc-calcite-inline-editable .input-wrapper.sc-calcite-inline-editable{-ms-flex:1 1 0%;flex:1 1 0%}/*!@.controls-wrapper*/.controls-wrapper.sc-calcite-inline-editable{display:-ms-flexbox;display:flex}/*!@:host([disabled])*/[disabled].sc-calcite-inline-editable-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) .cancel-editing-button-wrapper*/[disabled].sc-calcite-inline-editable-h .cancel-editing-button-wrapper.sc-calcite-inline-editable{border-color:var(--calcite-ui-border-2)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-inline-editable-h[disabled] .sc-calcite-inline-editable-s>[calcite-hydrated][disabled],[disabled].sc-calcite-inline-editable-h [calcite-hydrated][disabled].sc-calcite-inline-editable{opacity:1}";

/**
 * @slot - A slot for adding a `calcite-input`.
 */
class InlineEditable {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteInlineEditableEditCancel = createEvent(this, "calciteInlineEditableEditCancel", 7);
    this.calciteInlineEditableEditConfirm = createEvent(this, "calciteInlineEditableEditConfirm", 7);
    this.calciteInlineEditableEnableEditingChange = createEvent(this, "calciteInlineEditableEnableEditingChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Props
    //
    //--------------------------------------------------------------------------
    /** specify whether editing can be enabled */
    this.disabled = false;
    /** specify whether the wrapped input element is editable, defaults to false */
    this.editingEnabled = false;
    /** specify whether the confirm button should display a loading state, defaults to false */
    this.loading = false;
    /** specify whether save/cancel controls should be displayed when editingEnabled is true, defaults to false */
    this.controls = false;
    /** specify text to be user for the enable editing button's aria-label, defaults to `Click to edit`
     * @default "Click to edit"
     */
    this.intlEnableEditing = TEXT$c.intlEnablingEditing;
    /** specify text to be user for the cancel editing button's aria-label, defaults to `Cancel`
     * @default "Cancel"
     */
    this.intlCancelEditing = TEXT$c.intlCancelEditing;
    /** specify text to be user for the confirm changes button's aria-label, defaults to `Save`
     * @default "Save"
     */
    this.intlConfirmChanges = TEXT$c.intlConfirmChanges;
    this.mutationObserver = createObserver();
    this.transitionEnd = () => {
      if (!this.editingEnabled && !!this.shouldEmitCancel) {
        this.calciteInlineEditableEditCancel.emit();
      }
    };
    this.enableEditing = () => {
      var _a, _b;
      this.valuePriorToEditing = (_a = this.inputElement) === null || _a === void 0 ? void 0 : _a.value;
      this.editingEnabled = true;
      (_b = this.inputElement) === null || _b === void 0 ? void 0 : _b.setFocus();
      this.calciteInlineEditableEnableEditingChange.emit();
    };
    this.disableEditing = () => {
      this.editingEnabled = false;
    };
    this.cancelEditing = () => {
      if (this.inputElement) {
        this.inputElement.value = this.valuePriorToEditing;
      }
      this.disableEditing();
      this.enableEditingButton.setFocus();
    };
    this.escapeKeyHandler = async (e) => {
      var _a;
      if (e.key !== "Escape") {
        if (e.key === "Tab" && this.shouldShowControls) {
          if (!e.shiftKey && e.target === this.inputElement) {
            e.preventDefault();
            this.cancelEditingButton.setFocus();
          }
          if (!!e.shiftKey && e.target === this.cancelEditingButton) {
            e.preventDefault();
            (_a = this.inputElement) === null || _a === void 0 ? void 0 : _a.setFocus();
          }
        }
        return;
      }
      this.cancelEditing();
    };
    this.cancelEditingHandler = async (e) => {
      e.preventDefault();
      this.cancelEditing();
    };
    this.enableEditingHandler = async (e) => {
      if (this.disabled ||
        e.target === this.cancelEditingButton ||
        e.target === this.confirmEditingButton) {
        return;
      }
      e.preventDefault();
      if (!this.editingEnabled) {
        this.enableEditing();
      }
    };
    this.confirmChangesHandler = async (e) => {
      e.preventDefault();
      this.calciteInlineEditableEditConfirm.emit();
      try {
        if (this.afterConfirm) {
          this.loading = true;
          await this.afterConfirm();
          this.disableEditing();
          this.enableEditingButton.setFocus();
        }
      }
      catch (e) {
      }
      finally {
        this.loading = false;
      }
    };
  }
  disabledWatcher(disabled) {
    if (this.inputElement) {
      this.inputElement.disabled = disabled;
    }
  }
  editingEnabledWatcher(newValue, oldValue) {
    if (this.inputElement) {
      this.inputElement.editingEnabled = newValue;
    }
    if (!newValue && !!oldValue) {
      this.shouldEmitCancel = true;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    var _a;
    connectLabel(this);
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el, { childList: true });
    this.mutationObserverCallback();
  }
  disconnectedCallback() {
    var _a;
    disconnectLabel(this);
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  render() {
    return (hAsync("div", { class: CSS$t.wrapper, onClick: this.enableEditingHandler, onKeyDown: this.escapeKeyHandler, onTransitionEnd: this.transitionEnd }, hAsync("div", { class: CSS$t.inputWrapper }, hAsync("slot", null)), hAsync("div", { class: CSS$t.controlsWrapper }, hAsync("calcite-button", { appearance: "transparent", class: CSS$t.enableEditingButton, color: "neutral", disabled: this.disabled, iconStart: "pencil", label: this.intlEnableEditing, onClick: this.enableEditingHandler, ref: (el) => (this.enableEditingButton = el), scale: this.scale, style: {
        opacity: this.editingEnabled ? "0" : "1",
        width: this.editingEnabled ? "0" : "inherit"
      }, type: "button" }), this.shouldShowControls && [
      hAsync("div", { class: CSS$t.cancelEditingButtonWrapper }, hAsync("calcite-button", { appearance: "transparent", class: CSS$t.cancelEditingButton, color: "neutral", disabled: this.disabled, iconStart: "x", label: this.intlCancelEditing, onClick: this.cancelEditingHandler, ref: (el) => (this.cancelEditingButton = el), scale: this.scale, type: "button" })),
      hAsync("calcite-button", { appearance: "solid", class: CSS$t.confirmChangesButton, color: "blue", disabled: this.disabled, iconStart: "check", label: this.intlConfirmChanges, loading: this.loading, onClick: this.confirmChangesHandler, ref: (el) => (this.confirmEditingButton = el), scale: this.scale, type: "button" })
    ])));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  blurHandler() {
    if (!this.controls) {
      this.disableEditing();
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  async setFocus() {
    var _a, _b;
    if (this.editingEnabled) {
      (_a = this.inputElement) === null || _a === void 0 ? void 0 : _a.setFocus();
    }
    else {
      (_b = this.enableEditingButton) === null || _b === void 0 ? void 0 : _b.setFocus();
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  mutationObserverCallback() {
    var _a;
    this.updateSlottedInput();
    this.scale =
      this.scale || ((_a = this.inputElement) === null || _a === void 0 ? void 0 : _a.scale) || getElementProp(this.el, "scale", undefined);
  }
  onLabelClick() {
    this.setFocus();
  }
  updateSlottedInput() {
    const inputElement = getSlotted(this.el, {
      matches: "calcite-input"
    });
    this.inputElement = inputElement;
    if (!inputElement) {
      return;
    }
    this.inputElement.disabled = this.disabled;
    this.inputElement.label = this.inputElement.label || getLabelText(this);
  }
  get shouldShowControls() {
    return this.editingEnabled && this.controls;
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "disabled": ["disabledWatcher"],
    "editingEnabled": ["editingEnabledWatcher"]
  }; }
  static get style() { return inlineEditableCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-inline-editable",
    "$members$": {
      "disabled": [516],
      "editingEnabled": [1540, "editing-enabled"],
      "loading": [1540],
      "controls": [516],
      "intlEnableEditing": [513, "intl-enable-editing"],
      "intlCancelEditing": [513, "intl-cancel-editing"],
      "intlConfirmChanges": [513, "intl-confirm-changes"],
      "scale": [1537],
      "afterConfirm": [16],
      "setFocus": [64]
    },
    "$listeners$": [[0, "calciteInputBlur", "blurHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["editingEnabled", "editing-enabled"], ["loading", "loading"], ["controls", "controls"], ["intlEnableEditing", "intl-enable-editing"], ["intlCancelEditing", "intl-cancel-editing"], ["intlConfirmChanges", "intl-confirm-changes"], ["scale", "scale"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$s = {
  loader: "loader",
  clearButton: "clear-button",
  editingEnabled: "editing-enabled",
  inlineChild: "inline-child",
  inputIcon: "icon",
  prefix: "prefix",
  suffix: "suffix",
  numberButtonWrapper: "number-button-wrapper",
  buttonItemHorizontal: "number-button-item--horizontal",
  wrapper: "element-wrapper",
  inputWrapper: "wrapper",
  actionWrapper: "action-wrapper",
  resizeIconWrapper: "resize-icon-wrapper",
  numberButtonItem: "number-button-item"
};
const INPUT_TYPE_ICONS = {
  tel: "phone",
  password: "lock",
  email: "email-address",
  date: "calendar",
  time: "clock",
  search: "search"
};
const SLOTS$g = {
  action: "action"
};

const inputCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-input:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-input{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-input{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-input{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-input{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-input{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-input:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-input-h{display:none}/*!@:host*/.sc-calcite-input-h{display:block}/*!@:host([scale=s]) input, :host([scale=s]) .prefix, :host([scale=s]) .suffix*/[scale=s].sc-calcite-input-h input.sc-calcite-input,[scale=s].sc-calcite-input-h .prefix.sc-calcite-input,[scale=s].sc-calcite-input-h .suffix.sc-calcite-input{height:1.5rem;padding:0.5rem;font-size:var(--calcite-font-size--2);line-height:1rem}/*!@:host([scale=s]) textarea*/[scale=s].sc-calcite-input-h textarea.sc-calcite-input{height:1.5rem;min-height:1.5rem}/*!@:host([scale=s]) .number-button-wrapper, :host([scale=s]) .action-wrapper calcite-button, :host([scale=s]) .action-wrapper calcite-button button*/[scale=s].sc-calcite-input-h .number-button-wrapper.sc-calcite-input,[scale=s].sc-calcite-input-h .action-wrapper.sc-calcite-input calcite-button.sc-calcite-input,[scale=s].sc-calcite-input-h .action-wrapper.sc-calcite-input calcite-button.sc-calcite-input button.sc-calcite-input{height:1.5rem}/*!@:host([scale=s]) input[type=file]*/[scale=s].sc-calcite-input-h input[type=file].sc-calcite-input{height:1.5rem}/*!@:host([scale=s]) .clear-button*/[scale=s].sc-calcite-input-h .clear-button.sc-calcite-input{min-height:1.5rem;min-width:1.5rem}/*!@:host([scale=s]) textarea*/[scale=s].sc-calcite-input-h textarea.sc-calcite-input{height:auto;padding-top:0.25rem;padding-bottom:0.25rem;padding-left:0.5rem;padding-right:0.5rem;font-size:var(--calcite-font-size--2);line-height:1rem}/*!@:host([scale=m]) input, :host([scale=m]) .prefix, :host([scale=m]) .suffix*/[scale=m].sc-calcite-input-h input.sc-calcite-input,[scale=m].sc-calcite-input-h .prefix.sc-calcite-input,[scale=m].sc-calcite-input-h .suffix.sc-calcite-input{height:2rem;padding:0.75rem;font-size:var(--calcite-font-size--1);line-height:1rem}/*!@:host([scale=m]) textarea*/[scale=m].sc-calcite-input-h textarea.sc-calcite-input{min-height:2rem}/*!@:host([scale=m]) .number-button-wrapper, :host([scale=m]) .action-wrapper calcite-button, :host([scale=m]) .action-wrapper calcite-button button*/[scale=m].sc-calcite-input-h .number-button-wrapper.sc-calcite-input,[scale=m].sc-calcite-input-h .action-wrapper.sc-calcite-input calcite-button.sc-calcite-input,[scale=m].sc-calcite-input-h .action-wrapper.sc-calcite-input calcite-button.sc-calcite-input button.sc-calcite-input{height:2rem}/*!@:host([scale=m]) input[type=file]*/[scale=m].sc-calcite-input-h input[type=file].sc-calcite-input{height:2rem}/*!@:host([scale=m]) .clear-button*/[scale=m].sc-calcite-input-h .clear-button.sc-calcite-input{min-height:2rem;min-width:2rem}/*!@:host([scale=m]) textarea*/[scale=m].sc-calcite-input-h textarea.sc-calcite-input{height:auto;padding-top:0.5rem;padding-bottom:0.5rem;padding-left:0.75rem;padding-right:0.75rem;font-size:var(--calcite-font-size--1);line-height:1rem}/*!@:host([scale=l]) input, :host([scale=l]) .prefix, :host([scale=l]) .suffix*/[scale=l].sc-calcite-input-h input.sc-calcite-input,[scale=l].sc-calcite-input-h .prefix.sc-calcite-input,[scale=l].sc-calcite-input-h .suffix.sc-calcite-input{height:2.75rem;padding:1rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@:host([scale=l]) textarea*/[scale=l].sc-calcite-input-h textarea.sc-calcite-input{min-height:2.75rem}/*!@:host([scale=l]) .number-button-wrapper, :host([scale=l]) .action-wrapper calcite-button, :host([scale=l]) .action-wrapper calcite-button button*/[scale=l].sc-calcite-input-h .number-button-wrapper.sc-calcite-input,[scale=l].sc-calcite-input-h .action-wrapper.sc-calcite-input calcite-button.sc-calcite-input,[scale=l].sc-calcite-input-h .action-wrapper.sc-calcite-input calcite-button.sc-calcite-input button.sc-calcite-input{height:2.75rem}/*!@:host([scale=l]) input[type=file]*/[scale=l].sc-calcite-input-h input[type=file].sc-calcite-input{height:2.75rem}/*!@:host([scale=l]) .clear-button*/[scale=l].sc-calcite-input-h .clear-button.sc-calcite-input{min-height:2.75rem;min-width:2.75rem}/*!@:host([scale=l]) textarea*/[scale=l].sc-calcite-input-h textarea.sc-calcite-input{height:auto;padding-top:0.75rem;padding-bottom:0.75rem;padding-left:1rem;padding-right:1rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@:host([disabled])*/[disabled].sc-calcite-input-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) textarea*/[disabled].sc-calcite-input-h textarea.sc-calcite-input{resize:none}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-input-h[disabled] .sc-calcite-input-s>[calcite-hydrated][disabled],[disabled].sc-calcite-input-h [calcite-hydrated][disabled].sc-calcite-input{opacity:1}/*!@:host textarea,\n:host input*/.sc-calcite-input-h textarea.sc-calcite-input,.sc-calcite-input-h input.sc-calcite-input{-webkit-transition:var(--calcite-animation-timing), height 0s;transition:var(--calcite-animation-timing), height 0s;-webkit-appearance:none;position:relative;margin:0px;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;max-height:100%;width:100%;max-width:100%;-ms-flex:1 1 0%;flex:1 1 0%;border-radius:0px;background-color:var(--calcite-ui-foreground-1);font-family:inherit;font-weight:var(--calcite-font-weight-normal);color:var(--calcite-ui-text-1)}/*!@:host input[type=search]::-webkit-search-decoration*/.sc-calcite-input-h input[type=search].sc-calcite-input::-webkit-search-decoration{-webkit-appearance:none}/*!@:host input, :host textarea*/.sc-calcite-input-h input.sc-calcite-input,.sc-calcite-input-h textarea.sc-calcite-input{border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-input);color:var(--calcite-ui-text-1)}/*!@:host input:-ms-input-placeholder, :host textarea:-ms-input-placeholder*/.sc-calcite-input-h input.sc-calcite-input:-ms-input-placeholder,.sc-calcite-input-h textarea.sc-calcite-input:-ms-input-placeholder{font-weight:var(--calcite-font-weight-normal);color:var(--calcite-ui-text-3)}/*!@:host input::placeholder, :host input:-ms-input-placeholder, :host input::-ms-input-placeholder, :host textarea::placeholder, :host textarea:-ms-input-placeholder, :host textarea::-ms-input-placeholder*/.sc-calcite-input-h input.sc-calcite-input:-ms-input-placeholder,.sc-calcite-input-h textarea.sc-calcite-input:-ms-input-placeholder{font-weight:var(--calcite-font-weight-normal);color:var(--calcite-ui-text-3)}.sc-calcite-input-h input.sc-calcite-input::-ms-input-placeholder,.sc-calcite-input-h textarea.sc-calcite-input::-ms-input-placeholder{font-weight:var(--calcite-font-weight-normal);color:var(--calcite-ui-text-3)}.sc-calcite-input-h input.sc-calcite-input::placeholder,.sc-calcite-input-h input.sc-calcite-input:-ms-input-placeholder,.sc-calcite-input-h input.sc-calcite-input::-ms-input-placeholder,.sc-calcite-input-h textarea.sc-calcite-input::placeholder,.sc-calcite-input-h textarea.sc-calcite-input:-ms-input-placeholder,.sc-calcite-input-h textarea.sc-calcite-input::-ms-input-placeholder{font-weight:var(--calcite-font-weight-normal);color:var(--calcite-ui-text-3)}/*!@:host input:focus, :host textarea:focus*/.sc-calcite-input-h input.sc-calcite-input:focus,.sc-calcite-input-h textarea.sc-calcite-input:focus{border-color:var(--calcite-ui-brand);color:var(--calcite-ui-text-1)}/*!@:host input[readonly], :host textarea[readonly]*/.sc-calcite-input-h input[readonly].sc-calcite-input,.sc-calcite-input-h textarea[readonly].sc-calcite-input{background-color:var(--calcite-ui-background);font-weight:var(--calcite-font-weight-medium)}/*!@:host input[readonly]:focus, :host textarea[readonly]:focus*/.sc-calcite-input-h input[readonly].sc-calcite-input:focus,.sc-calcite-input-h textarea[readonly].sc-calcite-input:focus{color:var(--calcite-ui-text-1)}/*!@:host calcite-icon*/.sc-calcite-input-h calcite-icon.sc-calcite-input{color:var(--calcite-ui-text-3)}/*!@:host textarea, :host input*/.sc-calcite-input-h textarea.sc-calcite-input,.sc-calcite-input-h input.sc-calcite-input{outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@:host textarea:focus, :host input:focus*/.sc-calcite-input-h textarea.sc-calcite-input:focus,.sc-calcite-input-h input.sc-calcite-input:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@:host([status=invalid]) input, :host([status=invalid]) textarea*/[status=invalid].sc-calcite-input-h input.sc-calcite-input,[status=invalid].sc-calcite-input-h textarea.sc-calcite-input{border-color:var(--calcite-ui-danger)}/*!@:host([status=invalid]) input:focus, :host([status=invalid]) textarea:focus*/[status=invalid].sc-calcite-input-h input.sc-calcite-input:focus,[status=invalid].sc-calcite-input-h textarea.sc-calcite-input:focus{outline:2px solid var(--calcite-ui-danger);outline-offset:-2px}/*!@:host([scale=s]) .icon*/[scale=s].sc-calcite-input-h .icon.sc-calcite-input{inset-inline-start:0.5rem}/*!@:host([scale=m]) .icon*/[scale=m].sc-calcite-input-h .icon.sc-calcite-input{inset-inline-start:0.75rem}/*!@:host([scale=l]) .icon*/[scale=l].sc-calcite-input-h .icon.sc-calcite-input{inset-inline-start:1rem}/*!@:host([icon][scale=s]) input*/[icon][scale=s].sc-calcite-input-h input.sc-calcite-input{-webkit-padding-start:2rem;padding-inline-start:2rem}/*!@:host([icon][scale=m]) input*/[icon][scale=m].sc-calcite-input-h input.sc-calcite-input{-webkit-padding-start:2.5rem;padding-inline-start:2.5rem}/*!@:host([icon][scale=l]) input*/[icon][scale=l].sc-calcite-input-h input.sc-calcite-input{-webkit-padding-start:3rem;padding-inline-start:3rem}/*!@.element-wrapper*/.element-wrapper.sc-calcite-input{position:relative;-ms-flex-order:3;order:3;display:-ms-inline-flexbox;display:inline-flex;-ms-flex:1 1 0%;flex:1 1 0%;-ms-flex-align:center;align-items:center}/*!@.icon*/.icon.sc-calcite-input{pointer-events:none;position:absolute;z-index:10;display:block;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s}/*!@input[type=text]::-ms-clear, input[type=text]::-ms-reveal*/input[type=text].sc-calcite-input::-ms-clear,input[type=text].sc-calcite-input::-ms-reveal{display:none;height:0px;width:0px}/*!@input[type=search]::-webkit-search-decoration, input[type=search]::-webkit-search-cancel-button, input[type=search]::-webkit-search-results-button, input[type=search]::-webkit-search-results-decoration, input[type=date]::-webkit-clear-button, input[type=time]::-webkit-clear-button*/input[type=search].sc-calcite-input::-webkit-search-decoration,input[type=search].sc-calcite-input::-webkit-search-cancel-button,input[type=search].sc-calcite-input::-webkit-search-results-button,input[type=search].sc-calcite-input::-webkit-search-results-decoration,input[type=date].sc-calcite-input::-webkit-clear-button,input[type=time].sc-calcite-input::-webkit-clear-button{display:none}/*!@.clear-button*/.clear-button.sc-calcite-input{pointer-events:initial;-ms-flex-order:4;order:4;margin:0px;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;min-height:100%;cursor:pointer;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-item-align:stretch;align-self:stretch;border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-input);background-color:var(--calcite-ui-foreground-1);outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;border-inline-start-width:0px}/*!@.clear-button:hover*/.clear-button.sc-calcite-input:hover{background-color:var(--calcite-ui-foreground-2);-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s}/*!@.clear-button:hover calcite-icon*/.clear-button.sc-calcite-input:hover calcite-icon.sc-calcite-input{color:var(--calcite-ui-text-1);-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s}/*!@.clear-button:active*/.clear-button.sc-calcite-input:active{background-color:var(--calcite-ui-foreground-3)}/*!@.clear-button:active calcite-icon*/.clear-button.sc-calcite-input:active calcite-icon.sc-calcite-input{color:var(--calcite-ui-text-1)}/*!@.clear-button:focus*/.clear-button.sc-calcite-input:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@.clear-button:disabled*/.clear-button.sc-calcite-input:disabled{opacity:var(--calcite-ui-opacity-disabled)}/*!@.loader*/.loader.sc-calcite-input{top:1px;left:1px;right:1px;pointer-events:none;position:absolute;display:block}/*!@.action-wrapper*/.action-wrapper.sc-calcite-input{-ms-flex-order:7;order:7;display:-ms-flexbox;display:flex}/*!@.prefix, .suffix*/.prefix.sc-calcite-input,.suffix.sc-calcite-input{-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;height:auto;min-height:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-flex-line-pack:center;align-content:center;-ms-flex-align:center;align-items:center;overflow-wrap:break-word;border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-input);background-color:var(--calcite-ui-background);font-weight:var(--calcite-font-weight-medium);line-height:1;color:var(--calcite-ui-text-2)}/*!@.prefix*/.prefix.sc-calcite-input{-ms-flex-order:2;order:2;border-inline-end-width:0px}/*!@.suffix*/.suffix.sc-calcite-input{-ms-flex-order:5;order:5;border-inline-start-width:0px}/*!@:host([alignment=start]) textarea, :host([alignment=start]) input*/[alignment=start].sc-calcite-input-h textarea.sc-calcite-input,[alignment=start].sc-calcite-input-h input.sc-calcite-input{text-align:start}/*!@:host([alignment=end]) textarea, :host([alignment=end]) input*/[alignment=end].sc-calcite-input-h textarea.sc-calcite-input,[alignment=end].sc-calcite-input-h input.sc-calcite-input{text-align:end}/*!@:host input[type=number]*/.sc-calcite-input-h input[type=number].sc-calcite-input{-moz-appearance:textfield}/*!@:host input[type=number]::-webkit-inner-spin-button, :host input[type=number]::-webkit-outer-spin-button*/.sc-calcite-input-h input[type=number].sc-calcite-input::-webkit-inner-spin-button,.sc-calcite-input-h input[type=number].sc-calcite-input::-webkit-outer-spin-button{-webkit-appearance:none;-moz-appearance:textfield;margin:0px}/*!@.number-button-wrapper*/.number-button-wrapper.sc-calcite-input{pointer-events:none;-ms-flex-order:6;order:6;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s}/*!@:host([number-button-type=vertical]) .wrapper*/[number-button-type=vertical].sc-calcite-input-h .wrapper.sc-calcite-input{-ms-flex-direction:row;flex-direction:row;display:-ms-flexbox;display:flex}/*!@:host([number-button-type=vertical]) input, :host([number-button-type=vertical]) textarea*/[number-button-type=vertical].sc-calcite-input-h input.sc-calcite-input,[number-button-type=vertical].sc-calcite-input-h textarea.sc-calcite-input{-ms-flex-order:2;order:2}/*!@:host([number-button-type=horizontal]) .calcite--rtl .number-button-item[data-adjustment=down] calcite-icon*/[number-button-type=horizontal].sc-calcite-input-h .calcite--rtl.sc-calcite-input .number-button-item[data-adjustment=down].sc-calcite-input calcite-icon.sc-calcite-input{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}/*!@:host([number-button-type=horizontal]) .calcite--rtl .number-button-item[data-adjustment=up] calcite-icon*/[number-button-type=horizontal].sc-calcite-input-h .calcite--rtl.sc-calcite-input .number-button-item[data-adjustment=up].sc-calcite-input calcite-icon.sc-calcite-input{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}/*!@.number-button-item.number-button-item--horizontal[data-adjustment=down], .number-button-item.number-button-item--horizontal[data-adjustment=up]*/.number-button-item.number-button-item--horizontal[data-adjustment=down].sc-calcite-input,.number-button-item.number-button-item--horizontal[data-adjustment=up].sc-calcite-input{-ms-flex-order:1;order:1;max-height:100%;min-height:100%;-ms-flex-item-align:stretch;align-self:stretch}/*!@.number-button-item.number-button-item--horizontal[data-adjustment=down] calcite-icon, .number-button-item.number-button-item--horizontal[data-adjustment=up] calcite-icon*/.number-button-item.number-button-item--horizontal[data-adjustment=down].sc-calcite-input calcite-icon.sc-calcite-input,.number-button-item.number-button-item--horizontal[data-adjustment=up].sc-calcite-input calcite-icon.sc-calcite-input{-webkit-transform:rotate(90deg);transform:rotate(90deg)}/*!@.number-button-item.number-button-item--horizontal[data-adjustment=down]*/.number-button-item.number-button-item--horizontal[data-adjustment=down].sc-calcite-input{border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-input);border-inline-end-width:0px}/*!@.number-button-item.number-button-item--horizontal[data-adjustment=down]:hover*/.number-button-item.number-button-item--horizontal[data-adjustment=down].sc-calcite-input:hover{background-color:var(--calcite-ui-foreground-2)}/*!@.number-button-item.number-button-item--horizontal[data-adjustment=down]:hover calcite-icon*/.number-button-item.number-button-item--horizontal[data-adjustment=down].sc-calcite-input:hover calcite-icon.sc-calcite-input{color:var(--calcite-ui-text-1)}/*!@.number-button-item.number-button-item--horizontal[data-adjustment=up]*/.number-button-item.number-button-item--horizontal[data-adjustment=up].sc-calcite-input{-ms-flex-order:5;order:5}/*!@.number-button-item.number-button-item--horizontal[data-adjustment=up]:hover*/.number-button-item.number-button-item--horizontal[data-adjustment=up].sc-calcite-input:hover{background-color:var(--calcite-ui-foreground-2)}/*!@.number-button-item.number-button-item--horizontal[data-adjustment=up]:hover calcite-icon*/.number-button-item.number-button-item--horizontal[data-adjustment=up].sc-calcite-input:hover calcite-icon.sc-calcite-input{color:var(--calcite-ui-text-1)}/*!@:host([number-button-type=vertical]) .number-button-item[data-adjustment=down]:hover*/[number-button-type=vertical].sc-calcite-input-h .number-button-item[data-adjustment=down].sc-calcite-input:hover{background-color:var(--calcite-ui-foreground-2)}/*!@:host([number-button-type=vertical]) .number-button-item[data-adjustment=down]:hover calcite-icon*/[number-button-type=vertical].sc-calcite-input-h .number-button-item[data-adjustment=down].sc-calcite-input:hover calcite-icon.sc-calcite-input{color:var(--calcite-ui-text-1)}/*!@:host([number-button-type=vertical]) .number-button-item[data-adjustment=up]:hover*/[number-button-type=vertical].sc-calcite-input-h .number-button-item[data-adjustment=up].sc-calcite-input:hover{background-color:var(--calcite-ui-foreground-2)}/*!@:host([number-button-type=vertical]) .number-button-item[data-adjustment=up]:hover calcite-icon*/[number-button-type=vertical].sc-calcite-input-h .number-button-item[data-adjustment=up].sc-calcite-input:hover calcite-icon.sc-calcite-input{color:var(--calcite-ui-text-1)}/*!@:host([number-button-type=vertical]) .number-button-item[data-adjustment=down]*/[number-button-type=vertical].sc-calcite-input-h .number-button-item[data-adjustment=down].sc-calcite-input{border-top-width:0px}/*!@.number-button-item*/.number-button-item.sc-calcite-input{max-height:50%;min-height:50%;pointer-events:initial;margin:0px;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;cursor:pointer;-ms-flex-align:center;align-items:center;-ms-flex-item-align:center;align-self:center;border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-input);background-color:var(--calcite-ui-foreground-1);padding-top:0px;padding-bottom:0px;padding-left:0.5rem;padding-right:0.5rem;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;border-inline-start-width:0px}/*!@.number-button-item calcite-icon*/.number-button-item.sc-calcite-input calcite-icon.sc-calcite-input{pointer-events:none;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s}/*!@.number-button-item:focus*/.number-button-item.sc-calcite-input:focus{background-color:var(--calcite-ui-foreground-2)}/*!@.number-button-item:focus calcite-icon*/.number-button-item.sc-calcite-input:focus calcite-icon.sc-calcite-input{color:var(--calcite-ui-text-1)}/*!@.number-button-item:active*/.number-button-item.sc-calcite-input:active{background-color:var(--calcite-ui-foreground-3)}/*!@.wrapper*/.wrapper.sc-calcite-input{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center}/*!@:host input::-webkit-calendar-picker-indicator*/.sc-calcite-input-h input.sc-calcite-input::-webkit-calendar-picker-indicator{display:none}/*!@:host input[type=date]::-webkit-input-placeholder*/.sc-calcite-input-h input[type=date].sc-calcite-input::-webkit-input-placeholder{visibility:hidden !important}/*!@:host textarea::-webkit-resizer*/.sc-calcite-input-h textarea.sc-calcite-input::-webkit-resizer{position:absolute;bottom:0px;-webkit-box-sizing:border-box;box-sizing:border-box;padding-top:0px;padding-bottom:0px;padding-left:0.25rem;padding-right:0.25rem;inset-inline-end:0}/*!@.resize-icon-wrapper*/.resize-icon-wrapper.sc-calcite-input{bottom:2px;inset-inline-end:2px;pointer-events:none;position:absolute;z-index:10;height:0.75rem;width:0.75rem;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-3)}/*!@.resize-icon-wrapper calcite-icon*/.resize-icon-wrapper.sc-calcite-input calcite-icon.sc-calcite-input{bottom:0.25rem;inset-inline-end:0.25rem;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}/*!@.calcite--rtl .resize-icon-wrapper calcite-icon*/.calcite--rtl.sc-calcite-input .resize-icon-wrapper.sc-calcite-input calcite-icon.sc-calcite-input{-webkit-transform:rotate(45deg);transform:rotate(45deg)}/*!@:host([type=color]) input*/[type=color].sc-calcite-input-h input.sc-calcite-input{padding:0.25rem}/*!@:host([type=file]) input*/[type=file].sc-calcite-input-h input.sc-calcite-input{cursor:pointer;border-width:1px;border-style:dashed;border-color:var(--calcite-ui-border-input);background-color:var(--calcite-ui-foreground-1);text-align:center}/*!@:host([type=file][scale=s]) input*/[type=file][scale=s].sc-calcite-input-h input.sc-calcite-input{padding-top:1px;padding-bottom:1px;padding-left:0.5rem;padding-right:0.5rem}/*!@:host([type=file][scale=m]) input*/[type=file][scale=m].sc-calcite-input-h input.sc-calcite-input{padding-top:0.25rem;padding-bottom:0.25rem;padding-left:0.75rem;padding-right:0.75rem}/*!@:host([type=file][scale=l]) input*/[type=file][scale=l].sc-calcite-input-h input.sc-calcite-input{padding-top:0.5rem;padding-bottom:0.5rem;padding-left:1rem;padding-right:1rem}/*!@:host(.no-bottom-border) input*/.no-bottom-border.sc-calcite-input-h input.sc-calcite-input{border-bottom-width:0px}/*!@:host(.border-top-color-one) input*/.border-top-color-one.sc-calcite-input-h input.sc-calcite-input{border-top-color:var(--calcite-ui-border-1)}/*!@:host .inline-child*/.sc-calcite-input-h .inline-child.sc-calcite-input{background-color:transparent;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s}/*!@:host .inline-child .editing-enabled*/.sc-calcite-input-h .inline-child.sc-calcite-input .editing-enabled.sc-calcite-input{background-color:inherit}/*!@:host .inline-child:not(.editing-enabled)*/.sc-calcite-input-h .inline-child.sc-calcite-input:not(.editing-enabled){display:-ms-flexbox;display:flex;cursor:pointer;border-color:transparent;-webkit-padding-start:0;padding-inline-start:0}/*!@::slotted(input[slot=hidden-form-input])*/.sc-calcite-input-s>input[slot=hidden-form-input]{bottom:0 !important;left:0 !important;margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;right:0 !important;top:0 !important;-webkit-transform:none !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}";

/**
 * @slot action - A slot for positioning a button next to an input
 */
class Input {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteInputFocus = createEvent(this, "calciteInputFocus", 7);
    this.calciteInputBlur = createEvent(this, "calciteInputBlur", 7);
    this.calciteInputInput = createEvent(this, "calciteInputInput", 7);
    this.calciteInputChange = createEvent(this, "calciteInputChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** specify the alignment of the value of the input */
    this.alignment = "start";
    /** should the input autofocus */
    this.autofocus = false;
    /** optionally display a clear button that displays when field has a value
     * shows by default for search, time, date
     * will not display for type="textarea" */
    this.clearable = false;
    /** is the input disabled  */
    this.disabled = false;
    /** for number values, displays the locale's group separator */
    this.groupSeparator = false;
    /** when true, the component will not be visible */
    this.hidden = false;
    /**
     * string to override English loading text
     * @default "Loading"
     */
    this.intlLoading = TEXT$r.loading;
    /** flip the icon in rtl */
    this.iconFlipRtl = false;
    /** specify if the input is in loading state */
    this.loading = false;
    /** BCP 47 language tag for desired language and country format */
    this.locale = document.documentElement.lang || "en";
    /**
     * Toggles locale formatting for numbers.
     * @internal
     */
    this.localeFormat = false;
    /** specify the placement of the number buttons */
    this.numberButtonType = "vertical";
    /** When true, a field cannot be modified. */
    this.readOnly = false;
    /** is the input required */
    this.required = false;
    /** specify the scale of the input, defaults to m */
    this.scale = "m";
    /** specify the status of the input field, determines message and icons */
    this.status = "idle";
    /** @internal adds inline styles for text input when slotted in calcite-inline-editable */
    this.editingEnabled = false;
    /**
     * specify the input type
     *
     * Note that the following types add type-specific icons by default: `date`, `email`, `password`, `search`, `tel`, `time`
     */
    this.type = "text";
    /** input value */
    this.value = "";
    /** keep track of the rendered child type */
    this.childElType = "input";
    /** whether the value of the input was changed as a result of user typing or not */
    this.internalValueChange = false;
    this.mutationObserver = createObserver();
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.keyDownHandler = (event) => {
      /* prevent default behavior for input to move the cursor to the beginning of the input with every ArrowUp press */
      if (event.key === "ArrowUp") {
        event.preventDefault();
      }
      if (this.readOnly || this.disabled) {
        return;
      }
      if (this.isClearable && event.key === "Escape") {
        this.clearInputValue(event);
        event.preventDefault();
      }
    };
    this.clearInputValue = (nativeEvent) => {
      this.setValue({
        committing: true,
        nativeEvent,
        value: ""
      });
    };
    this.inputBlurHandler = () => {
      if (this.type === "number") {
        this.setValue({ value: this.value });
      }
      this.calciteInputBlur.emit({
        element: this.childEl,
        value: this.value
      });
      if (this.preFocusValue !== this.value) {
        this.calciteInputChange.emit();
      }
    };
    this.inputFocusHandler = (event) => {
      const slottedActionEl = getSlotted(this.el, "action");
      if (event.target !== slottedActionEl) {
        this.setFocus();
      }
      this.calciteInputFocus.emit({
        element: this.childEl,
        value: this.value
      });
      this.preFocusValue = this.value;
    };
    this.inputInputHandler = (nativeEvent) => {
      if (this.disabled || this.readOnly) {
        return;
      }
      this.setValue({
        nativeEvent,
        value: nativeEvent.target.value
      });
    };
    this.inputKeyDownHandler = (event) => {
      if (this.disabled || this.readOnly) {
        return;
      }
      if (event.key === "Enter") {
        this.calciteInputChange.emit();
      }
    };
    this.inputNumberInputHandler = (nativeEvent) => {
      if (this.disabled || this.readOnly) {
        return;
      }
      const value = nativeEvent.target.value;
      const delocalizedValue = delocalizeNumberString(value, this.locale);
      if (nativeEvent.inputType === "insertFromPaste") {
        if (!isValidNumber(delocalizedValue)) {
          nativeEvent.preventDefault();
        }
        this.setValue({
          nativeEvent,
          value: parseNumberString(delocalizedValue)
        });
        this.childNumberEl.value = this.localizedValue;
      }
      else {
        this.setValue({
          nativeEvent,
          value: delocalizeNumberString(value, this.locale)
        });
      }
    };
    this.inputNumberKeyDownHandler = (event) => {
      if (this.type !== "number" || this.disabled || this.readOnly) {
        return;
      }
      if (event.key === "ArrowUp") {
        this.nudgeNumberValue("up", event);
        return;
      }
      if (event.key === "ArrowDown") {
        this.nudgeNumberValue("down", event);
        return;
      }
      const supportedKeys = [
        ...numberKeys,
        "ArrowLeft",
        "ArrowRight",
        "Backspace",
        "Delete",
        "Enter",
        "Escape",
        "Tab"
      ];
      if (event.altKey || event.ctrlKey || event.metaKey) {
        return;
      }
      const isShiftTabEvent = event.shiftKey && event.key === "Tab";
      if (supportedKeys.includes(event.key) && (!event.shiftKey || isShiftTabEvent)) {
        if (event.key === "Enter") {
          this.calciteInputChange.emit();
        }
        return;
      }
      const decimalSeparator = getDecimalSeparator(this.locale);
      if (event.key === decimalSeparator) {
        if (!this.value && !this.childNumberEl.value) {
          return;
        }
        if (this.value && this.childNumberEl.value.indexOf(decimalSeparator) === -1) {
          return;
        }
      }
      if (/[eE]/.test(event.key)) {
        if (!this.value && !this.childNumberEl.value) {
          return;
        }
        if (this.value && !/[eE]/.test(this.childNumberEl.value)) {
          return;
        }
      }
      if (event.key === "-") {
        if (!this.value && !this.childNumberEl.value) {
          return;
        }
        if (this.value && this.childNumberEl.value.split("-").length <= 2) {
          return;
        }
      }
      event.preventDefault();
    };
    this.nudgeNumberValue = (direction, nativeEvent) => {
      if ((nativeEvent instanceof KeyboardEvent && nativeEvent.repeat) || this.type !== "number") {
        return;
      }
      const inputMax = this.maxString ? parseFloat(this.maxString) : null;
      const inputMin = this.minString ? parseFloat(this.minString) : null;
      const valueNudgeDelayInMs = 100;
      this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);
      if (this.nudgeNumberValueIntervalId) {
        window.clearInterval(this.nudgeNumberValueIntervalId);
      }
      let firstValueNudge = true;
      this.nudgeNumberValueIntervalId = window.setInterval(() => {
        if (firstValueNudge) {
          firstValueNudge = false;
          return;
        }
        this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);
      }, valueNudgeDelayInMs);
    };
    this.numberButtonMouseUpAndMouseOutHandler = () => {
      window.clearInterval(this.nudgeNumberValueIntervalId);
    };
    this.numberButtonMouseDownHandler = (event) => {
      event.preventDefault();
      const direction = event.target.dataset.adjustment;
      this.nudgeNumberValue(direction, event);
    };
    this.setChildElRef = (el) => {
      this.childEl = el;
    };
    this.setChildNumberElRef = (el) => {
      this.childNumberEl = el;
    };
    this.setInputValue = (newInputValue) => {
      if (this.type === "text" && !this.childEl) {
        return;
      }
      if (this.type === "number" && !this.childNumberEl) {
        return;
      }
      this[`child${this.type === "number" ? "Number" : ""}El`].value = newInputValue;
    };
    this.setPreviousValue = (newPreviousValue) => {
      this.previousValue =
        this.type === "number"
          ? isValidNumber(newPreviousValue)
            ? newPreviousValue
            : ""
          : newPreviousValue;
    };
    this.setValue = ({ committing = false, nativeEvent, origin = "internal", value }) => {
      const previousLocalizedValue = this.type === "number"
        ? localizeNumberString(this.previousValue, this.locale, this.groupSeparator)
        : "";
      const sanitizedValue = this.type === "number" ? sanitizeNumberString(value) : value;
      const newValue = this.type === "number" && value && !sanitizedValue
        ? isValidNumber(this.previousValue)
          ? this.previousValue
          : ""
        : sanitizedValue;
      const newLocalizedValue = this.type === "number"
        ? localizeNumberString(newValue, this.locale, this.groupSeparator)
        : "";
      this.internalValueChange = origin === "internal" && this.value !== newValue;
      this.setPreviousValue(this.value);
      this.value = newValue;
      if (this.type === "number") {
        this.localizedValue = newLocalizedValue;
      }
      if (origin === "external") {
        this.setInputValue(this.type === "number" ? newLocalizedValue : newValue);
      }
      if (nativeEvent) {
        const calciteInputInputEvent = this.calciteInputInput.emit({
          element: this.childEl,
          nativeEvent,
          value: this.value
        });
        if (calciteInputInputEvent.defaultPrevented) {
          this.value = this.previousValue;
          this.localizedValue = previousLocalizedValue;
        }
        else if (committing) {
          this.calciteInputChange.emit();
        }
      }
    };
    this.inputKeyUpHandler = () => {
      window.clearInterval(this.nudgeNumberValueIntervalId);
    };
  }
  disabledWatcher() {
    this.setDisabledAction();
  }
  /** watcher to update number-to-string for max */
  maxWatcher() {
    var _a;
    this.maxString = ((_a = this.max) === null || _a === void 0 ? void 0 : _a.toString()) || null;
  }
  /** watcher to update number-to-string for min */
  minWatcher() {
    var _a;
    this.minString = ((_a = this.min) === null || _a === void 0 ? void 0 : _a.toString()) || null;
  }
  valueWatcher(newValue) {
    if (!this.internalValueChange) {
      this.setValue({
        origin: "external",
        value: newValue == null || newValue == ""
          ? ""
          : this.type === "number"
            ? isValidNumber(newValue)
              ? newValue
              : this.previousValue || ""
            : newValue
      });
      this.warnAboutInvalidNumberValue(newValue);
    }
    this.internalValueChange = false;
  }
  updateRequestedIcon() {
    this.requestedIcon = setRequestedIcon(INPUT_TYPE_ICONS, this.icon, this.type);
  }
  get isClearable() {
    return !this.isTextarea && (this.clearable || this.type === "search") && this.value.length > 0;
  }
  get isTextarea() {
    return this.childElType === "textarea";
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    var _a;
    this.scale = getElementProp(this.el, "scale", this.scale);
    this.status = getElementProp(this.el, "status", this.status);
    this.inlineEditableEl = this.el.closest("calcite-inline-editable");
    if (this.inlineEditableEl) {
      this.editingEnabled = this.inlineEditableEl.editingEnabled || false;
    }
    this.setPreviousValue(this.value);
    if (this.type === "number") {
      this.warnAboutInvalidNumberValue(this.value);
      this.setValue({
        origin: "loading",
        value: isValidNumber(this.value) ? this.value : ""
      });
    }
    connectLabel(this);
    connectForm(this);
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el, { childList: true });
    this.setDisabledAction();
  }
  disconnectedCallback() {
    var _a;
    disconnectLabel(this);
    disconnectForm(this);
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
  }
  componentWillLoad() {
    var _a, _b;
    this.childElType = this.type === "textarea" ? "textarea" : "input";
    this.maxString = (_a = this.max) === null || _a === void 0 ? void 0 : _a.toString();
    this.minString = (_b = this.min) === null || _b === void 0 ? void 0 : _b.toString();
    this.requestedIcon = setRequestedIcon(INPUT_TYPE_ICONS, this.icon, this.type);
  }
  componentShouldUpdate(newValue, oldValue, property) {
    if (this.type === "number" && property === "value" && newValue && !isValidNumber(newValue)) {
      this.setValue({
        value: oldValue
      });
      return false;
    }
    return true;
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    var _a, _b;
    if (this.type === "number") {
      (_a = this.childNumberEl) === null || _a === void 0 ? void 0 : _a.focus();
    }
    else {
      (_b = this.childEl) === null || _b === void 0 ? void 0 : _b.focus();
    }
  }
  onLabelClick() {
    this.setFocus();
  }
  incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent) {
    const { value } = this;
    const inputStep = this.step === "any" ? 1 : Math.abs(this.step || 1);
    const inputVal = value && value !== "" ? parseFloat(value) : 0;
    const adjustment = direction === "up" ? 1 : -1;
    const nudgedValue = inputVal + inputStep * adjustment;
    const finalValue = (typeof inputMin === "number" && !isNaN(inputMin) && nudgedValue < inputMin) ||
      (typeof inputMax === "number" && !isNaN(inputMax) && nudgedValue > inputMax)
      ? inputVal
      : nudgedValue;
    const inputValPlaces = decimalPlaces(inputVal);
    const inputStepPlaces = decimalPlaces(inputStep);
    this.setValue({
      committing: true,
      nativeEvent,
      value: finalValue.toFixed(Math.max(inputValPlaces, inputStepPlaces))
    });
  }
  onFormReset() {
    this.setValue({
      value: this.defaultValue
    });
  }
  syncHiddenFormInput(input) {
    var _a, _b, _c, _d;
    if (this.type === "number") {
      input.type = "number";
      input.min = (_b = (_a = this.min) === null || _a === void 0 ? void 0 : _a.toString(10)) !== null && _b !== void 0 ? _b : "";
      input.max = (_d = (_c = this.max) === null || _c === void 0 ? void 0 : _c.toString(10)) !== null && _d !== void 0 ? _d : "";
    }
    else if (this.type === "text") {
      input.type = "text";
      if (this.minLength != null) {
        input.minLength = this.minLength;
      }
      if (this.maxLength != null) {
        input.maxLength = this.maxLength;
      }
    }
    else if (this.type === "password") {
      input.type = "password";
    }
  }
  setDisabledAction() {
    const slottedActionEl = getSlotted(this.el, "action");
    if (!slottedActionEl) {
      return;
    }
    this.disabled
      ? slottedActionEl.setAttribute("disabled", "")
      : slottedActionEl.removeAttribute("disabled");
  }
  warnAboutInvalidNumberValue(value) {
    if (this.type === "number" && value && !isValidNumber(value)) {
      console.warn(`The specified value "${value}" cannot be parsed, or is out of range.`);
    }
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    const dir = getElementDir(this.el);
    const loader = (hAsync("div", { class: CSS$s.loader }, hAsync("calcite-progress", { label: this.intlLoading, type: "indeterminate" })));
    const inputClearButton = (hAsync("button", { class: CSS$s.clearButton, disabled: this.disabled || this.readOnly, onClick: this.clearInputValue, tabIndex: this.disabled ? -1 : 0, type: "button" }, hAsync("calcite-icon", { icon: "x", scale: "s" })));
    const iconEl = (hAsync("calcite-icon", { class: CSS$s.inputIcon, flipRtl: this.iconFlipRtl, icon: this.requestedIcon, scale: "s" }));
    const isHorizontalNumberButton = this.numberButtonType === "horizontal";
    const numberButtonsHorizontalUp = (hAsync("button", { class: {
        [CSS$s.numberButtonItem]: true,
        [CSS$s.buttonItemHorizontal]: isHorizontalNumberButton
      }, "data-adjustment": "up", disabled: this.disabled || this.readOnly, onMouseDown: this.numberButtonMouseDownHandler, onMouseOut: this.numberButtonMouseUpAndMouseOutHandler, onMouseUp: this.numberButtonMouseUpAndMouseOutHandler, tabIndex: -1, type: "button" }, hAsync("calcite-icon", { icon: "chevron-up", scale: "s" })));
    const numberButtonsHorizontalDown = (hAsync("button", { class: {
        [CSS$s.numberButtonItem]: true,
        [CSS$s.buttonItemHorizontal]: isHorizontalNumberButton
      }, "data-adjustment": "down", disabled: this.disabled || this.readOnly, onMouseDown: this.numberButtonMouseDownHandler, onMouseOut: this.numberButtonMouseUpAndMouseOutHandler, onMouseUp: this.numberButtonMouseUpAndMouseOutHandler, tabIndex: -1, type: "button" }, hAsync("calcite-icon", { icon: "chevron-down", scale: "s" })));
    const numberButtonsVertical = (hAsync("div", { class: CSS$s.numberButtonWrapper }, numberButtonsHorizontalUp, numberButtonsHorizontalDown));
    const prefixText = hAsync("div", { class: CSS$s.prefix }, this.prefixText);
    const suffixText = hAsync("div", { class: CSS$s.suffix }, this.suffixText);
    const localeNumberInput = this.type === "number" ? (hAsync("input", { "aria-label": getLabelText(this), autofocus: this.autofocus ? true : null, defaultValue: this.defaultValue, disabled: this.disabled ? true : null, enterKeyHint: this.el.enterKeyHint, inputMode: this.el.inputMode, key: "localized-input", maxLength: this.maxLength, minLength: this.minLength, name: undefined, onBlur: this.inputBlurHandler, onFocus: this.inputFocusHandler, onInput: this.inputNumberInputHandler, onKeyDown: this.inputNumberKeyDownHandler, onKeyUp: this.inputKeyUpHandler, placeholder: this.placeholder || "", readOnly: this.readOnly, ref: this.setChildNumberElRef, type: "text", value: this.localizedValue })) : null;
    const childEl = this.type !== "number"
      ? [
        hAsync(this.childElType, { "aria-label": getLabelText(this), autofocus: this.autofocus ? true : null, class: {
            [CSS$s.editingEnabled]: this.editingEnabled,
            [CSS$s.inlineChild]: !!this.inlineEditableEl
          }, defaultValue: this.defaultValue, disabled: this.disabled ? true : null, enterKeyHint: this.el.enterKeyHint, inputMode: this.el.inputMode, max: this.maxString, maxLength: this.maxLength, min: this.minString, minLength: this.minLength, name: this.name, onBlur: this.inputBlurHandler, onFocus: this.inputFocusHandler, onInput: this.inputInputHandler, onKeyDown: this.inputKeyDownHandler, onKeyUp: this.inputKeyUpHandler, placeholder: this.placeholder || "", readOnly: this.readOnly, ref: this.setChildElRef, required: this.required ? true : null, step: this.step, tabIndex: this.disabled || (this.inlineEditableEl && !this.editingEnabled) ? -1 : null, type: this.type, value: this.value }),
        this.isTextarea ? (hAsync("div", { class: CSS$s.resizeIconWrapper }, hAsync("calcite-icon", { icon: "chevron-down", scale: "s" }))) : null
      ]
      : null;
    return (hAsync(Host, { onClick: this.inputFocusHandler, onKeyDown: this.keyDownHandler }, hAsync("div", { class: { [CSS$s.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === "rtl" } }, this.type === "number" && this.numberButtonType === "horizontal" && !this.readOnly
      ? numberButtonsHorizontalDown
      : null, this.prefixText ? prefixText : null, hAsync("div", { class: CSS$s.wrapper }, localeNumberInput, childEl, this.isClearable ? inputClearButton : null, this.requestedIcon ? iconEl : null, this.loading ? loader : null), hAsync("div", { class: CSS$s.actionWrapper }, hAsync("slot", { name: SLOTS$g.action })), this.type === "number" && this.numberButtonType === "vertical" && !this.readOnly
      ? numberButtonsVertical
      : null, this.suffixText ? suffixText : null, this.type === "number" && this.numberButtonType === "horizontal" && !this.readOnly
      ? numberButtonsHorizontalUp
      : null, hAsync(HiddenFormInputSlot, { component: this }))));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "disabled": ["disabledWatcher"],
    "max": ["maxWatcher"],
    "min": ["minWatcher"],
    "value": ["valueWatcher"],
    "icon": ["updateRequestedIcon"],
    "type": ["updateRequestedIcon"]
  }; }
  static get style() { return inputCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-input",
    "$members$": {
      "alignment": [513],
      "autofocus": [4],
      "clearable": [516],
      "disabled": [516],
      "groupSeparator": [4, "group-separator"],
      "hidden": [4],
      "icon": [520],
      "intlLoading": [1, "intl-loading"],
      "iconFlipRtl": [516, "icon-flip-rtl"],
      "label": [1],
      "loading": [516],
      "locale": [1],
      "localeFormat": [4, "locale-format"],
      "max": [514],
      "min": [514],
      "maxlength": [514],
      "maxLength": [514, "max-length"],
      "minLength": [514, "min-length"],
      "name": [513],
      "numberButtonType": [513, "number-button-type"],
      "placeholder": [1],
      "prefixText": [1, "prefix-text"],
      "readOnly": [4, "read-only"],
      "required": [4],
      "scale": [1537],
      "status": [1537],
      "step": [520],
      "suffixText": [1, "suffix-text"],
      "editingEnabled": [1540, "editing-enabled"],
      "type": [513],
      "value": [1025],
      "localizedValue": [32],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["alignment", "alignment"], ["clearable", "clearable"], ["disabled", "disabled"], ["icon", "icon"], ["iconFlipRtl", "icon-flip-rtl"], ["loading", "loading"], ["max", "max"], ["min", "min"], ["maxlength", "maxlength"], ["maxLength", "max-length"], ["minLength", "min-length"], ["name", "name"], ["numberButtonType", "number-button-type"], ["scale", "scale"], ["status", "status"], ["step", "step"], ["editingEnabled", "editing-enabled"], ["type", "type"]]
  }; }
}

const inputDatePickerCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-input-date-picker:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-input-date-picker{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-input-date-picker{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-input-date-picker{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-input-date-picker{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-input-date-picker{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:host*/.sc-calcite-input-date-picker-h{--calcite-icon-size:1rem;--calcite-spacing-eighth:0.125rem;--calcite-spacing-quarter:0.25rem;--calcite-spacing-half:0.5rem;--calcite-spacing-three-quarters:0.75rem;--calcite-spacing:1rem;--calcite-spacing-plus-quarter:1.25rem;--calcite-spacing-plus-half:1.5rem;--calcite-spacing-double:2rem;--calcite-menu-min-width:10rem;--calcite-header-min-height:3rem;--calcite-footer-min-height:3rem}/*!@:root*/.sc-calcite-input-date-picker:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-input-date-picker-h{display:none}/*!@:host*/.sc-calcite-input-date-picker-h{position:relative;display:inline-block;width:100%;overflow:visible;vertical-align:top;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@:host([disabled])*/[disabled].sc-calcite-input-date-picker-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-input-date-picker-h[disabled] .sc-calcite-input-date-picker-s>[calcite-hydrated][disabled],[disabled].sc-calcite-input-date-picker-h [calcite-hydrated][disabled].sc-calcite-input-date-picker{opacity:1}/*!@.calendar-picker-wrapper*/.calendar-picker-wrapper.sc-calcite-input-date-picker{position:static;width:100%;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}/*!@.input-wrapper*/.input-wrapper.sc-calcite-input-date-picker{position:relative}/*!@:host([range]) .input-container*/[range].sc-calcite-input-date-picker-h .input-container.sc-calcite-input-date-picker{display:-ms-flexbox;display:flex}/*!@:host([range]) .input-wrapper*/[range].sc-calcite-input-date-picker-h .input-wrapper.sc-calcite-input-date-picker{-ms-flex:1 1 auto;flex:1 1 auto}/*!@:host([range]) .horizontal-arrow-container*/[range].sc-calcite-input-date-picker-h .horizontal-arrow-container.sc-calcite-input-date-picker{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;border-width:1px;border-left-width:0px;border-right-width:0px;border-style:solid;border-color:var(--calcite-ui-border-input);background-color:var(--calcite-ui-background);padding-top:0px;padding-bottom:0px;padding-left:0.25rem;padding-right:0.25rem}/*!@:host([range][layout=vertical]) .input-wrapper*/[range][layout=vertical].sc-calcite-input-date-picker-h .input-wrapper.sc-calcite-input-date-picker{width:100%}/*!@:host([range][layout=vertical]) .input-container*/[range][layout=vertical].sc-calcite-input-date-picker-h .input-container.sc-calcite-input-date-picker{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start}/*!@:host([range][layout=vertical]) .calendar-picker-wrapper--end*/[range][layout=vertical].sc-calcite-input-date-picker-h .calendar-picker-wrapper--end.sc-calcite-input-date-picker{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}/*!@:host([range][layout=vertical]) .vertical-arrow-container*/[range][layout=vertical].sc-calcite-input-date-picker-h .vertical-arrow-container.sc-calcite-input-date-picker{top:1.5rem;position:absolute;left:0px;z-index:10;margin-left:1px;margin-right:1px;background-color:var(--calcite-ui-foreground-1);padding-left:0.625rem;padding-right:0.625rem}/*!@:host([scale=s][range]:not([layout=vertical])) .calendar-picker-wrapper*/[scale=s][range].sc-calcite-input-date-picker-h:not([layout=vertical]) .calendar-picker-wrapper.sc-calcite-input-date-picker{width:216px}/*!@:host([scale=m][range]:not([layout=vertical])) .calendar-picker-wrapper*/[scale=m][range].sc-calcite-input-date-picker-h:not([layout=vertical]) .calendar-picker-wrapper.sc-calcite-input-date-picker{width:286px}/*!@:host([scale=l][range]:not([layout=vertical])) .calendar-picker-wrapper*/[scale=l][range].sc-calcite-input-date-picker-h:not([layout=vertical]) .calendar-picker-wrapper.sc-calcite-input-date-picker{width:398px}/*!@.menu-container*/.menu-container.sc-calcite-input-date-picker{display:block;position:absolute;z-index:900;-webkit-transform:scale(0);transform:scale(0);visibility:hidden;pointer-events:none}/*!@.menu-container .calcite-popper-anim*/.menu-container.sc-calcite-input-date-picker .calcite-popper-anim.sc-calcite-input-date-picker{position:relative;z-index:1;-webkit-transition:var(--calcite-popper-transition);transition:var(--calcite-popper-transition);visibility:hidden;-webkit-transition-property:visibility, opacity, -webkit-transform;transition-property:visibility, opacity, -webkit-transform;transition-property:transform, visibility, opacity;transition-property:transform, visibility, opacity, -webkit-transform;opacity:0;-webkit-box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);border-radius:0.25rem}/*!@.menu-container[data-popper-placement^=bottom] .calcite-popper-anim*/.menu-container[data-popper-placement^=bottom].sc-calcite-input-date-picker .calcite-popper-anim.sc-calcite-input-date-picker{-webkit-transform:translateY(-5px);transform:translateY(-5px)}/*!@.menu-container[data-popper-placement^=top] .calcite-popper-anim*/.menu-container[data-popper-placement^=top].sc-calcite-input-date-picker .calcite-popper-anim.sc-calcite-input-date-picker{-webkit-transform:translateY(5px);transform:translateY(5px)}/*!@.menu-container[data-popper-placement^=left] .calcite-popper-anim*/.menu-container[data-popper-placement^=left].sc-calcite-input-date-picker .calcite-popper-anim.sc-calcite-input-date-picker{-webkit-transform:translateX(5px);transform:translateX(5px)}/*!@.menu-container[data-popper-placement^=right] .calcite-popper-anim*/.menu-container[data-popper-placement^=right].sc-calcite-input-date-picker .calcite-popper-anim.sc-calcite-input-date-picker{-webkit-transform:translateX(-5px);transform:translateX(-5px)}/*!@.menu-container[data-popper-placement] .calcite-popper-anim--active*/.menu-container[data-popper-placement].sc-calcite-input-date-picker .calcite-popper-anim--active.sc-calcite-input-date-picker{opacity:1;visibility:visible;-webkit-transform:translate(0);transform:translate(0)}/*!@:host([active]) .menu-container*/[active].sc-calcite-input-date-picker-h .menu-container.sc-calcite-input-date-picker{pointer-events:initial;visibility:visible}/*!@.menu-container--active .menu-container .calcite-popper-anim*/.menu-container--active.sc-calcite-input-date-picker .menu-container.sc-calcite-input-date-picker .calcite-popper-anim.sc-calcite-input-date-picker{position:relative;z-index:1;-webkit-transition:var(--calcite-popper-transition);transition:var(--calcite-popper-transition);visibility:hidden;-webkit-transition-property:visibility, opacity, -webkit-transform;transition-property:visibility, opacity, -webkit-transform;transition-property:transform, visibility, opacity;transition-property:transform, visibility, opacity, -webkit-transform;opacity:0;-webkit-box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);border-radius:0.25rem}/*!@.menu-container--active .menu-container[data-popper-placement^=bottom] .calcite-popper-anim*/.menu-container--active.sc-calcite-input-date-picker .menu-container[data-popper-placement^=bottom].sc-calcite-input-date-picker .calcite-popper-anim.sc-calcite-input-date-picker{-webkit-transform:translateY(-5px);transform:translateY(-5px)}/*!@.menu-container--active .menu-container[data-popper-placement^=top] .calcite-popper-anim*/.menu-container--active.sc-calcite-input-date-picker .menu-container[data-popper-placement^=top].sc-calcite-input-date-picker .calcite-popper-anim.sc-calcite-input-date-picker{-webkit-transform:translateY(5px);transform:translateY(5px)}/*!@.menu-container--active .menu-container[data-popper-placement^=left] .calcite-popper-anim*/.menu-container--active.sc-calcite-input-date-picker .menu-container[data-popper-placement^=left].sc-calcite-input-date-picker .calcite-popper-anim.sc-calcite-input-date-picker{-webkit-transform:translateX(5px);transform:translateX(5px)}/*!@.menu-container--active .menu-container[data-popper-placement^=right] .calcite-popper-anim*/.menu-container--active.sc-calcite-input-date-picker .menu-container[data-popper-placement^=right].sc-calcite-input-date-picker .calcite-popper-anim.sc-calcite-input-date-picker{-webkit-transform:translateX(-5px);transform:translateX(-5px)}/*!@.menu-container--active .menu-container[data-popper-placement] .calcite-popper-anim--active*/.menu-container--active.sc-calcite-input-date-picker .menu-container[data-popper-placement].sc-calcite-input-date-picker .calcite-popper-anim--active.sc-calcite-input-date-picker{opacity:1;visibility:visible;-webkit-transform:translate(0);transform:translate(0)}/*!@.input .calcite-input__wrapper*/.input.sc-calcite-input-date-picker .calcite-input__wrapper.sc-calcite-input-date-picker{margin-top:0px}/*!@:host([range][layout=vertical][scale=m]) .vertical-arrow-container*/[range][layout=vertical][scale=m].sc-calcite-input-date-picker-h .vertical-arrow-container.sc-calcite-input-date-picker{top:1.5rem;padding-left:0.75rem}/*!@:host([range][layout=vertical][scale=m]) .vertical-arrow-container calcite-icon*/[range][layout=vertical][scale=m].sc-calcite-input-date-picker-h .vertical-arrow-container.sc-calcite-input-date-picker calcite-icon.sc-calcite-input-date-picker{height:0.75rem;width:0.75rem;min-width:0px}/*!@:host([range][layout=vertical][scale=l]) .vertical-arrow-container*/[range][layout=vertical][scale=l].sc-calcite-input-date-picker-h .vertical-arrow-container.sc-calcite-input-date-picker{top:2.25rem;padding-left:0.875rem;padding-right:0.875rem}/*!@:host([range][layout=vertical][active]) .vertical-arrow-container*/[range][layout=vertical][active].sc-calcite-input-date-picker-h .vertical-arrow-container.sc-calcite-input-date-picker{display:none}/*!@::slotted(input[slot=hidden-form-input])*/.sc-calcite-input-date-picker-s>input[slot=hidden-form-input]{bottom:0 !important;left:0 !important;margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;right:0 !important;top:0 !important;-webkit-transform:none !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}";

class InputDatePicker {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteDatePickerChange = createEvent(this, "calciteDatePickerChange", 7);
    this.calciteDatePickerRangeChange = createEvent(this, "calciteDatePickerRangeChange", 7);
    this.calciteInputDatePickerChange = createEvent(this, "calciteInputDatePickerChange", 7);
    this.calciteInputDatePickerOpen = createEvent(this, "calciteInputDatePickerOpen", 7);
    this.calciteInputDatePickerClose = createEvent(this, "calciteInputDatePickerClose", 7);
    //--------------------------------------------------------------------------
    //
    //  Public Properties
    //
    //--------------------------------------------------------------------------
    /**
     * When false, the component won't be interactive.
     */
    this.disabled = false;
    /** Expand or collapse when calendar does not have input */
    this.active = false;
    /** Localized string for "previous month" (used for aria label)
     * @default "Previous month"
     */
    this.intlPrevMonth = TEXT$e.prevMonth;
    /** Localized string for "next month" (used for aria label)
     * @default "Next month"
     */
    this.intlNextMonth = TEXT$e.nextMonth;
    /** Localized string for "year" (used for aria label)
     * @default "Year"
     */
    this.intlYear = TEXT$e.year;
    /** BCP 47 language tag for desired language and country format */
    this.locale = document.documentElement.lang || "en";
    /** specify the scale of the date picker */
    this.scale = "m";
    /** Range mode activation */
    this.range = false;
    /**
     * When true, makes the component required for form-submission.
     *
     * @internal
     */
    this.required = false;
    /** Describes the type of positioning to use for the overlaid content. If your element is in a fixed container, use the 'fixed' value. */
    this.overlayPositioning = "absolute";
    /** Disables the default behaviour on the third click of narrowing or extending the range and instead starts a new range. */
    this.proximitySelectionDisabled = false;
    /** Layout */
    this.layout = "horizontal";
    this.focusedInput = "start";
    this.activeTransitionProp = "opacity";
    this.transitionEnd = (event) => {
      if (event.propertyName === this.activeTransitionProp) {
        this.active
          ? this.calciteInputDatePickerOpen.emit()
          : this.calciteInputDatePickerClose.emit();
      }
    };
    this.setStartInput = (el) => {
      this.startInput = el;
    };
    this.setEndInput = (el) => {
      this.endInput = el;
    };
    this.deactivate = () => {
      this.active = false;
    };
    this.keyUpHandler = (e) => {
      if (e.key === "Escape") {
        this.active = false;
      }
    };
    this.inputBlur = (e) => {
      this.blur(e.detail);
    };
    this.startInputFocus = () => {
      this.active = true;
      this.focusedInput = "start";
    };
    this.endInputFocus = () => {
      this.active = true;
      this.focusedInput = "end";
    };
    this.inputInput = (e) => {
      this.input(e.detail.value);
    };
    this.setMenuEl = (el) => {
      if (el) {
        this.menuEl = el;
        this.createPopper();
      }
    };
    this.setStartWrapper = (el) => {
      this.startWrapper = el;
      this.setReferenceEl();
    };
    this.setEndWrapper = (el) => {
      this.endWrapper = el;
      this.setReferenceEl();
    };
    /**
     * Event handler for when the selected date changes
     */
    this.handleDateChange = (event) => {
      if (this.range) {
        return;
      }
      this.value = dateToISO(event.detail);
    };
    this.handleDateRangeChange = (event) => {
      var _a, _b;
      if (!this.range || !event.detail) {
        return;
      }
      const { startDate, endDate } = event.detail;
      this.start = dateToISO(startDate);
      this.end = dateToISO(endDate);
      this.value = [this.start, this.end];
      if (this.shouldFocusRangeEnd()) {
        (_a = this.endInput) === null || _a === void 0 ? void 0 : _a.setFocus();
      }
      else if (this.shouldFocusRangeStart()) {
        (_b = this.startInput) === null || _b === void 0 ? void 0 : _b.setFocus();
      }
    };
  }
  handleDisabledChange(value) {
    if (!value) {
      this.active = false;
    }
  }
  valueHandler(value) {
    if (Array.isArray(value)) {
      this.valueAsDate = value.map((v) => dateFromISO(v));
      this.start = value[0];
      this.end = value[1];
    }
    else if (value) {
      this.valueAsDate = dateFromISO(value);
      this.start = "";
      this.end = "";
    }
    else {
      this.valueAsDate = undefined;
      this.start = undefined;
      this.end = undefined;
    }
  }
  onMinChanged(min) {
    this.minAsDate = dateFromISO(min);
  }
  onMaxChanged(max) {
    this.maxAsDate = dateFromISO(max);
  }
  activeHandler() {
    if (!this.disabled) {
      this.reposition();
      return;
    }
    this.active = false;
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  handleDateOrRangeChange() {
    this.calciteInputDatePickerChange.emit();
  }
  calciteDaySelectHandler() {
    if (this.shouldFocusRangeStart() || this.shouldFocusRangeEnd()) {
      return;
    }
    this.active = false;
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /** Updates the position of the component. */
  async setFocus() {
    var _a;
    (_a = this.startInput) === null || _a === void 0 ? void 0 : _a.setFocus();
  }
  /** Updates the position of the component. */
  async reposition() {
    const { popper, menuEl } = this;
    const modifiers = this.getModifiers();
    popper
      ? await updatePopper({
        el: menuEl,
        modifiers,
        placement: defaultMenuPlacement,
        popper
      })
      : this.createPopper();
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    if (Array.isArray(this.value)) {
      this.valueAsDate = this.value.map((v) => dateFromISO(v));
      this.start = this.value[0];
      this.end = this.value[1];
    }
    else if (this.value) {
      this.valueAsDate = dateFromISO(this.value);
      this.start = "";
      this.end = "";
    }
    if (this.start) {
      this.startAsDate = dateFromISO(this.start);
    }
    if (this.end) {
      this.endAsDate = dateFromISO(this.end);
    }
    if (this.min) {
      this.minAsDate = dateFromISO(this.min);
    }
    if (this.max) {
      this.maxAsDate = dateFromISO(this.max);
    }
    this.createPopper();
    connectLabel(this);
    connectForm(this);
  }
  async componentWillLoad() {
    await this.loadLocaleData();
    this.onMinChanged(this.min);
    this.onMaxChanged(this.max);
  }
  disconnectedCallback() {
    this.destroyPopper();
    disconnectLabel(this);
    disconnectForm(this);
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  render() {
    var _a, _b;
    const { disabled } = this;
    const date = dateFromRange(this.range ? this.startAsDate : this.valueAsDate, this.minAsDate, this.maxAsDate);
    const endDate = this.range
      ? dateFromRange(this.endAsDate, this.minAsDate, this.maxAsDate)
      : null;
    const formattedEndDate = endDate ? endDate.toLocaleDateString(this.locale) : "";
    const formattedDate = date ? date.toLocaleDateString(this.locale) : "";
    return (hAsync(Host, { onBlur: this.deactivate, onKeyUp: this.keyUpHandler, role: "application" }, this.localeData && (hAsync("div", { "aria-expanded": this.active.toString(), class: "input-container", role: "application" }, hAsync("div", { class: "input-wrapper", ref: this.setStartWrapper }, hAsync("calcite-input", { class: `input ${this.layout === "vertical" && this.range ? `no-bottom-border` : ``}`, disabled: disabled, icon: "calendar", label: getLabelText(this), "number-button-type": "none", onCalciteInputBlur: this.inputBlur, onCalciteInputFocus: this.startInputFocus, onCalciteInputInput: this.inputInput, placeholder: (_a = this.localeData) === null || _a === void 0 ? void 0 : _a.placeholder, ref: this.setStartInput, scale: this.scale, type: "text", value: formattedDate })), hAsync("div", { "aria-hidden": (!this.active).toString(), class: {
        "menu-container": true,
        "menu-container--active": this.active
      }, ref: this.setMenuEl }, hAsync("div", { class: {
        ["calendar-picker-wrapper"]: true,
        ["calendar-picker-wrapper--end"]: this.focusedInput === "end",
        [CSS$D.animation]: true,
        [CSS$D.animationActive]: this.active
      }, onTransitionEnd: this.transitionEnd }, hAsync("calcite-date-picker", { activeRange: this.focusedInput, endAsDate: this.endAsDate, headingLevel: this.headingLevel, intlNextMonth: this.intlNextMonth, intlPrevMonth: this.intlPrevMonth, intlYear: this.intlYear, locale: this.locale, max: this.max, maxAsDate: this.maxAsDate, min: this.min, minAsDate: this.minAsDate, onCalciteDatePickerChange: this.handleDateChange, onCalciteDatePickerRangeChange: this.handleDateRangeChange, proximitySelectionDisabled: this.proximitySelectionDisabled, range: this.range, scale: this.scale, startAsDate: this.startAsDate, tabIndex: 0, valueAsDate: this.valueAsDate }))), this.range && this.layout === "horizontal" && (hAsync("div", { class: "horizontal-arrow-container" }, hAsync("calcite-icon", { flipRtl: true, icon: "arrow-right", scale: "s" }))), this.range && this.layout === "vertical" && this.scale !== "s" && (hAsync("div", { class: "vertical-arrow-container" }, hAsync("calcite-icon", { icon: "arrow-down", scale: "s" }))), this.range && (hAsync("div", { class: "input-wrapper", ref: this.setEndWrapper }, hAsync("calcite-input", { class: {
        input: true,
        "border-top-color-one": this.layout === "vertical" && this.range
      }, disabled: disabled, icon: "calendar", "number-button-type": "none", onCalciteInputBlur: this.inputBlur, onCalciteInputFocus: this.endInputFocus, onCalciteInputInput: this.inputInput, placeholder: (_b = this.localeData) === null || _b === void 0 ? void 0 : _b.placeholder, ref: this.setEndInput, scale: this.scale, type: "text", value: formattedEndDate }))))), hAsync(HiddenFormInputSlot, { component: this })));
  }
  setReferenceEl() {
    const { focusedInput, layout, endWrapper, startWrapper } = this;
    this.referenceEl =
      focusedInput === "end" || layout === "vertical"
        ? endWrapper || startWrapper
        : startWrapper || endWrapper;
    this.createPopper();
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  onLabelClick() {
    this.setFocus();
  }
  getModifiers() {
    const flipModifier = {
      name: "flip",
      enabled: true
    };
    flipModifier.options = {
      fallbackPlacements: this.flipPlacements || popperMenuFlipPlacements
    };
    const eventListenerModifier = {
      name: "eventListeners",
      enabled: this.active
    };
    return [flipModifier, eventListenerModifier];
  }
  createPopper() {
    this.destroyPopper();
    const { menuEl, referenceEl, overlayPositioning } = this;
    if (!menuEl || !referenceEl) {
      return;
    }
    const modifiers = this.getModifiers();
    this.popper = createPopper({
      el: menuEl,
      modifiers,
      overlayPositioning,
      placement: defaultMenuPlacement,
      referenceEl
    });
  }
  destroyPopper() {
    const { popper } = this;
    if (popper) {
      popper.destroy();
    }
    this.popper = null;
  }
  startWatcher(start) {
    this.startAsDate = dateFromISO(start);
  }
  endWatcher(end) {
    this.endAsDate = dateFromISO(end);
  }
  async loadLocaleData() {
    {
      return;
    }
  }
  clearCurrentValue() {
    if (!this.range) {
      this.value = "";
      return;
    }
    const { focusedInput } = this;
    if (focusedInput === "start") {
      this.value = Array.isArray(this.value) ? ["", this.value[1] || ""] : [""];
      this.start = undefined;
    }
    else if (focusedInput === "end") {
      this.value = Array.isArray(this.value) ? [this.value[0] || "", ""] : ["", ""];
      this.end = undefined;
    }
  }
  /**
   * If inputted string is a valid date, update value/active
   */
  input(value) {
    const date = this.getDateFromInput(value);
    if (!date) {
      this.clearCurrentValue();
      return;
    }
    if (!this.range) {
      this.value = dateToISO(date);
      this.calciteDatePickerChange.emit(date);
      return;
    }
    const { focusedInput } = this;
    if (focusedInput === "start") {
      if (!this.startAsDate || !sameDate(date, this.startAsDate)) {
        const startDateISO = dateToISO(date);
        this.value = Array.isArray(this.value)
          ? [startDateISO, this.value[1] || ""]
          : [startDateISO];
        this.start = startDateISO;
        this.calciteDatePickerRangeChange.emit({
          startDate: date,
          endDate: this.endAsDate
        });
      }
    }
    else if (focusedInput === "end") {
      if (!this.endAsDate || !sameDate(date, this.endAsDate)) {
        const endDateISO = dateToISO(date);
        this.value = Array.isArray(this.value)
          ? [this.value[0] || "", endDateISO]
          : ["", endDateISO];
        this.end = endDateISO;
        this.calciteDatePickerRangeChange.emit({
          startDate: this.startAsDate,
          endDate: date
        });
      }
    }
  }
  /**
   * Clean up invalid date from input on blur
   */
  blur(target) {
    const { locale, focusedInput, endAsDate, range, startAsDate, valueAsDate } = this;
    const date = this.getDateFromInput(target.value);
    if (!date) {
      if (!range && valueAsDate) {
        target.value = Array.isArray(valueAsDate)
          ? valueAsDate[focusedInput === "end" ? 1 : 0].toLocaleDateString(locale)
          : valueAsDate.toLocaleDateString(locale);
      }
      else if (focusedInput === "start" && startAsDate) {
        target.value = startAsDate.toLocaleDateString(locale);
      }
      else if (focusedInput === "end" && endAsDate) {
        target.value = endAsDate.toLocaleDateString(locale);
      }
    }
  }
  shouldFocusRangeStart() {
    return !!(this.endAsDate &&
      !this.startAsDate &&
      this.focusedInput === "end" &&
      this.startInput);
  }
  shouldFocusRangeEnd() {
    return !!(this.startAsDate &&
      !this.endAsDate &&
      this.focusedInput === "start" &&
      this.endInput);
  }
  /**
   * Find a date from input string
   * return false if date is invalid, or out of range
   */
  getDateFromInput(value) {
    if (!this.localeData) {
      return false;
    }
    const { separator } = this.localeData;
    const { day, month, year } = parseDateString(value, this.localeData);
    const validDay = day > 0;
    const validMonth = month > -1;
    const date = new Date(year, month, day);
    date.setFullYear(year);
    const validDate = !isNaN(date.getTime());
    const validLength = value.split(separator).filter((c) => c).length > 2;
    const validYear = year.toString().length > 0;
    if (validDay &&
      validMonth &&
      validDate &&
      validLength &&
      validYear &&
      inRange(date, this.min, this.max)) {
      return date;
    }
    return false;
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "disabled": ["handleDisabledChange"],
    "value": ["valueHandler"],
    "min": ["onMinChanged"],
    "max": ["onMaxChanged"],
    "active": ["activeHandler"],
    "layout": ["setReferenceEl"],
    "focusedInput": ["setReferenceEl"],
    "start": ["startWatcher"],
    "end": ["endWatcher"],
    "locale": ["loadLocaleData"]
  }; }
  static get style() { return inputDatePickerCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-input-date-picker",
    "$members$": {
      "disabled": [516],
      "value": [1025],
      "flipPlacements": [16],
      "headingLevel": [2, "heading-level"],
      "valueAsDate": [1040],
      "startAsDate": [1040],
      "endAsDate": [1040],
      "minAsDate": [1040],
      "maxAsDate": [1040],
      "min": [1025],
      "max": [1025],
      "active": [1540],
      "name": [1],
      "intlPrevMonth": [1, "intl-prev-month"],
      "intlNextMonth": [1, "intl-next-month"],
      "intlYear": [1, "intl-year"],
      "locale": [1],
      "scale": [513],
      "range": [516],
      "required": [516],
      "start": [1025],
      "end": [1025],
      "overlayPositioning": [1, "overlay-positioning"],
      "proximitySelectionDisabled": [4, "proximity-selection-disabled"],
      "layout": [513],
      "focusedInput": [32],
      "localeData": [32],
      "setFocus": [64],
      "reposition": [64]
    },
    "$listeners$": [[0, "calciteDatePickerChange", "handleDateOrRangeChange"], [0, "calciteDatePickerRangeChange", "handleDateOrRangeChange"], [0, "calciteDaySelect", "calciteDaySelectHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["active", "active"], ["scale", "scale"], ["range", "range"], ["required", "required"], ["layout", "layout"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
var StatusIconDefaults;
(function (StatusIconDefaults) {
  StatusIconDefaults["valid"] = "check-circle";
  StatusIconDefaults["invalid"] = "exclamation-mark-triangle";
  StatusIconDefaults["idle"] = "information";
})(StatusIconDefaults || (StatusIconDefaults = {}));

const inputMessageCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-input-message:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-input-message{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-input-message{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-input-message{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-input-message{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-input-message{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-input-message:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-input-message-h{display:none}/*!@:host([active][scale=m]),\n:host([active][scale=l])*/[active][scale=m].sc-calcite-input-message-h,[active][scale=l].sc-calcite-input-message-h{--calcite-input-message-spacing-value:0.25rem}/*!@:host*/.sc-calcite-input-message-h{visibility:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;height:0px;width:100%;-ms-flex-align:center;align-items:center;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1);opacity:0;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s}/*!@:host([active])*/[active].sc-calcite-input-message-h{visibility:visible;height:auto;opacity:1;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s}/*!@:host([active][scale=m]),\n:host([active][scale=l])*/[active][scale=m].sc-calcite-input-message-h,[active][scale=l].sc-calcite-input-message-h{margin-top:var(--calcite-input-message-spacing-value)}/*!@.calcite-input-message-icon*/.calcite-input-message-icon.sc-calcite-input-message{pointer-events:none;display:-ms-inline-flexbox;display:inline-flex;-ms-flex-negative:0;flex-shrink:0;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;-webkit-margin-end:0.5rem;margin-inline-end:0.5rem}/*!@:host([status=invalid]) .calcite-input-message-icon*/[status=invalid].sc-calcite-input-message-h .calcite-input-message-icon.sc-calcite-input-message{color:var(--calcite-ui-danger)}/*!@:host([status=warning]) .calcite-input-message-icon*/[status=warning].sc-calcite-input-message-h .calcite-input-message-icon.sc-calcite-input-message{color:var(--calcite-ui-warning)}/*!@:host([status=valid]) .calcite-input-message-icon*/[status=valid].sc-calcite-input-message-h .calcite-input-message-icon.sc-calcite-input-message{color:var(--calcite-ui-success)}/*!@:host([status=idle]) .calcite-input-message-icon*/[status=idle].sc-calcite-input-message-h .calcite-input-message-icon.sc-calcite-input-message{color:var(--calcite-ui-brand)}/*!@:host([status][active])*/[status][active].sc-calcite-input-message-h{font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1)}/*!@:host([status][active][scale=s])*/[status][active][scale=s].sc-calcite-input-message-h{font-size:var(--calcite-font-size--3);line-height:0.75rem}/*!@:host([status][active][scale=m])*/[status][active][scale=m].sc-calcite-input-message-h{margin-top:0.25rem;font-size:var(--calcite-font-size--2);line-height:1rem}/*!@:host([status][active][scale=l])*/[status][active][scale=l].sc-calcite-input-message-h{margin-top:0.25rem;font-size:var(--calcite-font-size--1);line-height:1rem}";

/**
 * @slot - A slot for adding text.
 */
class InputMessage {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** Indicates whether the message is displayed. */
    this.active = false;
    /** specify the scale of the input, defaults to m */
    this.scale = "m";
    /** specify the status of the input field, determines message and icons */
    this.status = "idle";
  }
  handleIconEl() {
    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    this.status = getElementProp(this.el, "status", this.status);
    this.scale = getElementProp(this.el, "scale", this.scale);
    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);
  }
  render() {
    const hidden = !this.active;
    return (hAsync(Host, { "calcite-hydrated-hidden": hidden }, this.renderIcon(this.requestedIcon), hAsync("slot", null)));
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  renderIcon(iconName) {
    if (iconName) {
      return hAsync("calcite-icon", { class: "calcite-input-message-icon", icon: iconName, scale: "s" });
    }
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "status": ["handleIconEl"],
    "icon": ["handleIconEl"]
  }; }
  static get style() { return inputMessageCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-input-message",
    "$members$": {
      "active": [516],
      "icon": [520],
      "scale": [1537],
      "status": [1537],
      "type": [513]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["active", "active"], ["icon", "icon"], ["scale", "scale"], ["status", "status"], ["type", "type"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const maxTenthForMinuteAndSecond = 5;
function createLocaleDateTimeFormatter(locale, includeSeconds = true) {
  try {
    const options = {
      hour: "2-digit",
      minute: "2-digit",
      timeZone: "UTC"
    };
    if (includeSeconds) {
      options.second = "2-digit";
    }
    return new Intl.DateTimeFormat(locale, options);
  }
  catch (e) {
    throw new Error(`Invalid locale supplied while attempting to create a DateTime formatter: ${locale}`);
  }
}
function formatTimePart(number) {
  const numberAsString = number.toString();
  return number >= 0 && number <= 9 ? numberAsString.padStart(2, "0") : numberAsString;
}
function formatTimeString(value) {
  if (!isValidTime(value)) {
    return null;
  }
  const [hourString, minuteString, secondString] = value.split(":");
  const hour = formatTimePart(parseInt(hourString));
  const minute = formatTimePart(parseInt(minuteString));
  if (secondString) {
    const second = formatTimePart(parseInt(secondString));
    return `${hour}:${minute}:${second}`;
  }
  return `${hour}:${minute}`;
}
function getLocaleHourCycle(locale) {
  const formatter = createLocaleDateTimeFormatter(locale);
  const parts = formatter.formatToParts(new Date(Date.UTC(0, 0, 0, 0, 0, 0)));
  return getLocalizedTimePart("meridiem", parts) ? "12" : "24";
}
function getLocalizedTimePart(part, parts) {
  var _a, _b, _c, _d;
  if (!part || !parts) {
    return null;
  }
  if (part === "hourSuffix") {
    const hourIndex = parts.indexOf(parts.find(({ type }) => type === "hour"));
    const minuteIndex = parts.indexOf(parts.find(({ type }) => type === "minute"));
    const hourSuffix = parts[hourIndex + 1];
    return hourSuffix && hourSuffix.type === "literal" && minuteIndex - hourIndex === 2
      ? ((_a = hourSuffix.value) === null || _a === void 0 ? void 0 : _a.trim()) || null
      : null;
  }
  if (part === "minuteSuffix") {
    const minuteIndex = parts.indexOf(parts.find(({ type }) => type === "minute"));
    const secondIndex = parts.indexOf(parts.find(({ type }) => type === "second"));
    const minuteSuffix = parts[minuteIndex + 1];
    return minuteSuffix && minuteSuffix.type === "literal" && secondIndex - minuteIndex === 2
      ? ((_b = minuteSuffix.value) === null || _b === void 0 ? void 0 : _b.trim()) || null
      : null;
  }
  if (part === "secondSuffix") {
    const secondIndex = parts.indexOf(parts.find(({ type }) => type === "second"));
    const secondSuffix = parts[secondIndex + 1];
    return secondSuffix && secondSuffix.type === "literal" ? ((_c = secondSuffix.value) === null || _c === void 0 ? void 0 : _c.trim()) || null : null;
  }
  return ((_d = parts.find(({ type }) => (part == "meridiem" ? type === "dayPeriod" : type === part))) === null || _d === void 0 ? void 0 : _d.value) || null;
}
function getMeridiem(hour) {
  if (!isValidNumber(hour)) {
    return null;
  }
  const hourAsNumber = parseInt(hour);
  return hourAsNumber >= 0 && hourAsNumber <= 11 ? "AM" : "PM";
}
function isValidTime(value) {
  if (!value || value.startsWith(":") || value.endsWith(":")) {
    return false;
  }
  const splitValue = value.split(":");
  const validLength = splitValue.length > 1 && splitValue.length < 4;
  if (!validLength) {
    return false;
  }
  const [hour, minute, second] = splitValue;
  const hourAsNumber = parseInt(splitValue[0]);
  const minuteAsNumber = parseInt(splitValue[1]);
  const secondAsNumber = parseInt(splitValue[2]);
  const hourValid = isValidNumber(hour) && hourAsNumber >= 0 && hourAsNumber < 24;
  const minuteValid = isValidNumber(minute) && minuteAsNumber >= 0 && minuteAsNumber < 60;
  const secondValid = isValidNumber(second) && secondAsNumber >= 0 && secondAsNumber < 60;
  if ((hourValid && minuteValid && !second) || (hourValid && minuteValid && secondValid)) {
    return true;
  }
}
function isValidTimePart(value, part) {
  if (part === "meridiem") {
    return value === "AM" || value === "PM";
  }
  if (!isValidNumber(value)) {
    return false;
  }
  const valueAsNumber = Number(value);
  return part === "hour" ? valueAsNumber >= 0 && valueAsNumber < 24 : valueAsNumber >= 0 && valueAsNumber < 60;
}
function localizeTimePart(value, part, locale) {
  if (!isValidTimePart(value, part)) {
    return;
  }
  const valueAsNumber = parseInt(value);
  const date = new Date(Date.UTC(0, 0, 0, part === "hour" ? valueAsNumber : part === "meridiem" ? (value === "AM" ? 0 : 12) : 0, part === "minute" ? valueAsNumber : 0, part === "second" ? valueAsNumber : 0));
  if (!date) {
    return;
  }
  const formatter = createLocaleDateTimeFormatter(locale);
  const parts = formatter.formatToParts(date);
  return getLocalizedTimePart(part, parts);
}
function localizeTimeString(value, locale = "en", includeSeconds = true) {
  if (!isValidTime(value)) {
    return null;
  }
  const { hour, minute, second = "0" } = parseTimeString(value);
  const dateFromTimeString = new Date(Date.UTC(0, 0, 0, parseInt(hour), parseInt(minute), parseInt(second)));
  const formatter = createLocaleDateTimeFormatter(locale, includeSeconds);
  return (formatter === null || formatter === void 0 ? void 0 : formatter.format(dateFromTimeString)) || null;
}
function localizeTimeStringToParts(value, locale = "en") {
  if (!isValidTime(value)) {
    return null;
  }
  const { hour, minute, second = "0" } = parseTimeString(value);
  const dateFromTimeString = new Date(Date.UTC(0, 0, 0, parseInt(hour), parseInt(minute), parseInt(second)));
  if (dateFromTimeString) {
    const formatter = createLocaleDateTimeFormatter(locale);
    const parts = formatter.formatToParts(dateFromTimeString);
    return {
      localizedHour: getLocalizedTimePart("hour", parts),
      localizedHourSuffix: getLocalizedTimePart("hourSuffix", parts),
      localizedMinute: getLocalizedTimePart("minute", parts),
      localizedMinuteSuffix: getLocalizedTimePart("minuteSuffix", parts),
      localizedSecond: getLocalizedTimePart("second", parts),
      localizedSecondSuffix: getLocalizedTimePart("secondSuffix", parts),
      localizedMeridiem: getLocalizedTimePart("meridiem", parts)
    };
  }
  return null;
}
function getTimeParts(value, locale = "en") {
  if (!isValidTime(value)) {
    return null;
  }
  const { hour, minute, second = "0" } = parseTimeString(value);
  const dateFromTimeString = new Date(Date.UTC(0, 0, 0, parseInt(hour), parseInt(minute), parseInt(second)));
  if (dateFromTimeString) {
    const formatter = createLocaleDateTimeFormatter(locale);
    const parts = formatter.formatToParts(dateFromTimeString);
    return parts;
  }
  return null;
}
function parseTimeString(value) {
  if (isValidTime(value)) {
    const [hour, minute, second] = value.split(":");
    return {
      hour,
      minute,
      second
    };
  }
  return {
    hour: null,
    minute: null,
    second: null
  };
}

const inputTimePickerCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-input-time-picker:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-input-time-picker{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-input-time-picker{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-input-time-picker{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-input-time-picker{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-input-time-picker{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-input-time-picker:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-input-time-picker-h{display:none}/*!@:host*/.sc-calcite-input-time-picker-h{display:inline-block;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}/*!@:host([disabled])*/[disabled].sc-calcite-input-time-picker-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-input-time-picker-h[disabled] .sc-calcite-input-time-picker-s>[calcite-hydrated][disabled],[disabled].sc-calcite-input-time-picker-h [calcite-hydrated][disabled].sc-calcite-input-time-picker{opacity:1}/*!@::slotted(input[slot=hidden-form-input])*/.sc-calcite-input-time-picker-s>input[slot=hidden-form-input]{bottom:0 !important;left:0 !important;margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;right:0 !important;top:0 !important;-webkit-transform:none !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}";

class InputTimePicker {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteInputTimePickerChange = createEvent(this, "calciteInputTimePickerChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** The active state of the time input */
    this.active = false;
    /** The disabled state of the time input */
    this.disabled = false;
    /**
     * BCP 47 language tag for desired language and country format
     * @internal
     */
    this.locale = document.documentElement.lang || navigator.language || "en";
    /**
     * When true, makes the component required for form-submission.
     *
     * @internal
     */
    this.required = false;
    /** The scale (size) of the time input */
    this.scale = "m";
    /** number (seconds) that specifies the granularity that the value must adhere to */
    this.step = 60;
    /** The selected time in UTC (always 24-hour format) */
    this.value = null;
    /** whether the value of the input was changed as a result of user typing or not */
    this.internalValueChange = false;
    this.previousValidValue = null;
    this.referenceElementId = `input-time-picker-${guid()}`;
    //--------------------------------------------------------------------------
    //
    //  Event Listeners
    //
    //--------------------------------------------------------------------------
    this.calciteInputBlurHandler = () => {
      this.active = false;
      const shouldIncludeSeconds = this.shouldIncludeSeconds();
      const localizedInputValue = localizeTimeString(this.calciteInputEl.value, this.locale, shouldIncludeSeconds);
      this.setInputValue(localizedInputValue || localizeTimeString(this.value, this.locale, shouldIncludeSeconds));
    };
    this.calciteInputFocusHandler = () => {
      this.active = true;
    };
    this.calciteInputInputHandler = (event) => {
      const target = event.target;
      this.setValue({ value: target.value });
    };
    this.timePickerChangeHandler = (event) => {
      event.stopPropagation();
      const target = event.target;
      const value = target.value;
      this.setValue({ value, origin: "time-picker" });
    };
    this.setCalciteInputEl = (el) => {
      this.calciteInputEl = el;
    };
    this.setCalciteTimePickerEl = (el) => {
      this.calciteTimePickerEl = el;
    };
    this.setInputValue = (newInputValue) => {
      if (!this.calciteInputEl) {
        return;
      }
      this.calciteInputEl.value = newInputValue;
    };
    this.setValue = ({ value, origin = "input" }) => {
      const previousValue = this.value;
      const newValue = formatTimeString(value);
      const newLocalizedValue = localizeTimeString(newValue, this.locale, this.shouldIncludeSeconds());
      this.internalValueChange = origin !== "external" && origin !== "loading";
      const shouldEmit = origin !== "loading" &&
        origin !== "external" &&
        ((value !== this.previousValidValue && !value) ||
          !!(!this.previousValidValue && newValue) ||
          (newValue !== this.previousValidValue && newValue));
      if (value) {
        if (shouldEmit) {
          this.previousValidValue = newValue;
        }
        if (newValue && newValue !== this.value) {
          this.value = newValue;
        }
        this.localizedValue = newLocalizedValue;
      }
      else {
        this.value = value;
        this.localizedValue = null;
      }
      if (origin === "time-picker" || origin === "external") {
        this.setInputValue(newLocalizedValue);
      }
      if (shouldEmit) {
        const changeEvent = this.calciteInputTimePickerChange.emit();
        if (changeEvent.defaultPrevented) {
          this.internalValueChange = false;
          this.value = previousValue;
          this.setInputValue(previousValue);
          this.previousValidValue = previousValue;
        }
        else {
          this.previousValidValue = newValue;
        }
      }
    };
  }
  activeHandler() {
    if (this.disabled) {
      this.active = false;
    }
  }
  handleDisabledChange(value) {
    if (!value) {
      this.active = false;
    }
  }
  localeWatcher(newLocale) {
    this.setInputValue(localizeTimeString(this.value, newLocale, this.shouldIncludeSeconds()));
  }
  valueWatcher(newValue) {
    if (!this.internalValueChange) {
      this.setValue({ value: newValue, origin: "external" });
    }
    this.internalValueChange = false;
  }
  clickHandler(event) {
    if (event.composedPath().includes(this.calciteTimePickerEl)) {
      return;
    }
    this.setFocus();
  }
  keyUpHandler(event) {
    if (event.key === "Escape" && this.active) {
      this.active = false;
    }
  }
  timePickerBlurHandler(event) {
    event.preventDefault();
    event.stopPropagation();
    this.active = false;
  }
  timePickerFocusHandler(event) {
    event.preventDefault();
    event.stopPropagation();
    this.active = true;
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    this.calciteInputEl.setFocus();
  }
  // --------------------------------------------------------------------------
  //
  //  Private Methods
  //
  // --------------------------------------------------------------------------
  onLabelClick() {
    this.setFocus();
  }
  shouldIncludeSeconds() {
    return this.step < 60;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    if (this.value) {
      this.setValue({ value: isValidTime(this.value) ? this.value : undefined, origin: "loading" });
    }
    connectLabel(this);
    connectForm(this);
  }
  componentDidLoad() {
    this.setInputValue(this.localizedValue);
  }
  disconnectedCallback() {
    disconnectLabel(this);
    disconnectForm(this);
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    const popoverId = `${this.referenceElementId}-popover`;
    return (hAsync(Host, null, hAsync("div", { "aria-controls": popoverId, "aria-haspopup": "dialog", "aria-label": this.name, "aria-owns": popoverId, id: this.referenceElementId, role: "combobox" }, hAsync("calcite-input", { disabled: this.disabled, icon: "clock", label: getLabelText(this), onCalciteInputBlur: this.calciteInputBlurHandler, onCalciteInputFocus: this.calciteInputFocusHandler, onCalciteInputInput: this.calciteInputInputHandler, ref: this.setCalciteInputEl, scale: this.scale, step: this.step })), hAsync("calcite-popover", { id: popoverId, label: "Time Picker", open: this.active, referenceElement: this.referenceElementId }, hAsync("calcite-time-picker", { intlHour: this.intlHour, intlHourDown: this.intlHourDown, intlHourUp: this.intlHourUp, intlMeridiem: this.intlMeridiem, intlMeridiemDown: this.intlMeridiemDown, intlMeridiemUp: this.intlMeridiemUp, intlMinute: this.intlMinute, intlMinuteDown: this.intlMinuteDown, intlMinuteUp: this.intlMinuteUp, intlSecond: this.intlSecond, intlSecondDown: this.intlSecondDown, intlSecondUp: this.intlSecondUp, lang: this.locale, onCalciteTimePickerChange: this.timePickerChangeHandler, ref: this.setCalciteTimePickerEl, scale: this.scale, step: this.step, value: this.value })), hAsync(HiddenFormInputSlot, { component: this })));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "active": ["activeHandler"],
    "disabled": ["handleDisabledChange"],
    "locale": ["localeWatcher"],
    "value": ["valueWatcher"]
  }; }
  static get style() { return inputTimePickerCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-input-time-picker",
    "$members$": {
      "active": [1540],
      "disabled": [516],
      "intlHour": [1, "intl-hour"],
      "intlHourDown": [1, "intl-hour-down"],
      "intlHourUp": [1, "intl-hour-up"],
      "intlMeridiem": [1, "intl-meridiem"],
      "intlMeridiemDown": [1, "intl-meridiem-down"],
      "intlMeridiemUp": [1, "intl-meridiem-up"],
      "intlMinute": [1, "intl-minute"],
      "intlMinuteDown": [1, "intl-minute-down"],
      "intlMinuteUp": [1, "intl-minute-up"],
      "intlSecond": [1, "intl-second"],
      "intlSecondDown": [1, "intl-second-down"],
      "intlSecondUp": [1, "intl-second-up"],
      "locale": [1025, "lang"],
      "name": [1],
      "required": [516],
      "scale": [513],
      "step": [2],
      "value": [1025],
      "localizedValue": [32],
      "setFocus": [64]
    },
    "$listeners$": [[0, "click", "clickHandler"], [0, "keyup", "keyUpHandler"], [0, "calciteTimePickerBlur", "timePickerBlurHandler"], [0, "calciteTimePickerFocus", "timePickerFocusHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["active", "active"], ["disabled", "disabled"], ["required", "required"], ["scale", "scale"]]
  }; }
}

const appendToMap = (map, propName, value) => {
    const items = map.get(propName);
    if (!items) {
        map.set(propName, [value]);
    }
    else if (!items.includes(value)) {
        items.push(value);
    }
};
const debounce = (fn, ms) => {
    let timeoutId;
    return (...args) => {
        if (timeoutId) {
            clearTimeout(timeoutId);
        }
        timeoutId = setTimeout(() => {
            timeoutId = 0;
            fn(...args);
        }, ms);
    };
};

/**
 * Check if a possible element isConnected.
 * The property might not be there, so we check for it.
 *
 * We want it to return true if isConnected is not a property,
 * otherwise we would remove these elements and would not update.
 *
 * Better leak in Edge than to be useless.
 */
const isConnected = (maybeElement) => !('isConnected' in maybeElement) || maybeElement.isConnected;
const cleanupElements = debounce((map) => {
    for (let key of map.keys()) {
        map.set(key, map.get(key).filter(isConnected));
    }
}, 2000);
const stencilSubscription = () => {
    if (typeof getRenderingRef !== 'function') {
        // If we are not in a stencil project, we do nothing.
        // This function is not really exported by @stencil/core.
        return {};
    }
    const elmsToUpdate = new Map();
    return {
        dispose: () => elmsToUpdate.clear(),
        get: (propName) => {
            const elm = getRenderingRef();
            if (elm) {
                appendToMap(elmsToUpdate, propName, elm);
            }
        },
        set: (propName) => {
            const elements = elmsToUpdate.get(propName);
            if (elements) {
                elmsToUpdate.set(propName, elements.filter(forceUpdate$1));
            }
            cleanupElements(elmsToUpdate);
        },
        reset: () => {
            elmsToUpdate.forEach((elms) => elms.forEach(forceUpdate$1));
            cleanupElements(elmsToUpdate);
        },
    };
};

const createObservableMap = (defaultState, shouldUpdate = (a, b) => a !== b) => {
    let states = new Map(Object.entries(defaultState !== null && defaultState !== void 0 ? defaultState : {}));
    const handlers = {
        dispose: [],
        get: [],
        set: [],
        reset: [],
    };
    const reset = () => {
        states = new Map(Object.entries(defaultState !== null && defaultState !== void 0 ? defaultState : {}));
        handlers.reset.forEach((cb) => cb());
    };
    const dispose = () => {
        // Call first dispose as resetting the state would
        // cause less updates ;)
        handlers.dispose.forEach((cb) => cb());
        reset();
    };
    const get = (propName) => {
        handlers.get.forEach((cb) => cb(propName));
        return states.get(propName);
    };
    const set = (propName, value) => {
        const oldValue = states.get(propName);
        if (shouldUpdate(value, oldValue, propName)) {
            states.set(propName, value);
            handlers.set.forEach((cb) => cb(propName, value, oldValue));
        }
    };
    const state = (typeof Proxy === 'undefined'
        ? {}
        : new Proxy(defaultState, {
            get(_, propName) {
                return get(propName);
            },
            ownKeys(_) {
                return Array.from(states.keys());
            },
            getOwnPropertyDescriptor() {
                return {
                    enumerable: true,
                    configurable: true,
                };
            },
            has(_, propName) {
                return states.has(propName);
            },
            set(_, propName, value) {
                set(propName, value);
                return true;
            },
        }));
    const on = (eventName, callback) => {
        handlers[eventName].push(callback);
        return () => {
            removeFromArray(handlers[eventName], callback);
        };
    };
    const onChange = (propName, cb) => {
        const unSet = on('set', (key, newValue) => {
            if (key === propName) {
                cb(newValue);
            }
        });
        const unReset = on('reset', () => cb(defaultState[propName]));
        return () => {
            unSet();
            unReset();
        };
    };
    const use = (...subscriptions) => {
        const unsubs = subscriptions.reduce((unsubs, subscription) => {
            if (subscription.set) {
                unsubs.push(on('set', subscription.set));
            }
            if (subscription.get) {
                unsubs.push(on('get', subscription.get));
            }
            if (subscription.reset) {
                unsubs.push(on('reset', subscription.reset));
            }
            if (subscription.dispose) {
                unsubs.push(on('dispose', subscription.dispose));
            }
            return unsubs;
        }, []);
        return () => unsubs.forEach((unsub) => unsub());
    };
    const forceUpdate = (key) => {
        const oldValue = states.get(key);
        handlers.set.forEach((cb) => cb(key, oldValue, oldValue));
    };
    return {
        state,
        get,
        set,
        on,
        onChange,
        use,
        dispose,
        reset,
        forceUpdate,
    };
};
const removeFromArray = (array, item) => {
    const index = array.indexOf(item);
    if (index >= 0) {
        array[index] = array[array.length - 1];
        array.length--;
    }
};

const createStore = (defaultState, shouldUpdate) => {
    const map = createObservableMap(defaultState, shouldUpdate);
    map.use(stencilSubscription());
    return map;
};

/** @license
 * Copyright 2021 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Used to share state across components
// eslint-disable-next-line @typescript-eslint/unbound-method
const { state, onChange, dispose, reset } = createStore({
  models: {},
  featureServices: [],
  spatialReferenceInfo: {
    enabled: false,
    services: [],
    spatialReference: undefined
  },
  dispose: () => dispose(),
  reset: () => reset()
});
const modelsChangedEvent = new CustomEvent("modelsChanged", {
  bubbles: true,
  cancelable: false,
  composed: true
});
onChange('models', () => {
  dispatchEvent(modelsChangedEvent);
});

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
/**
 * Checks parameters to see if we should use FormData to send the request
 * @param params The object whose keys will be encoded.
 * @return A boolean indicating if FormData will be required.
 */
function requiresFormData(params) {
    return Object.keys(params).some(function (key) {
        var value = params[key];
        if (!value) {
            return false;
        }
        if (value && value.toParam) {
            value = value.toParam();
        }
        var type = value.constructor.name;
        switch (type) {
            case "Array":
                return false;
            case "Object":
                return false;
            case "Date":
                return false;
            case "Function":
                return false;
            case "Boolean":
                return false;
            case "String":
                return false;
            case "Number":
                return false;
            default:
                return true;
        }
    });
}
/**
 * Converts parameters to the proper representation to send to the ArcGIS REST API.
 * @param params The object whose keys will be encoded.
 * @return A new object with properly encoded values.
 */
function processParams(params) {
    var newParams = {};
    Object.keys(params).forEach(function (key) {
        var _a, _b;
        var param = params[key];
        if (param && param.toParam) {
            param = param.toParam();
        }
        if (!param &&
            param !== 0 &&
            typeof param !== "boolean" &&
            typeof param !== "string") {
            return;
        }
        var type = param.constructor.name;
        var value;
        // properly encodes objects, arrays and dates for arcgis.com and other services.
        // ported from https://github.com/Esri/esri-leaflet/blob/master/src/Request.js#L22-L30
        // also see https://github.com/Esri/arcgis-rest-js/issues/18:
        // null, undefined, function are excluded. If you want to send an empty key you need to send an empty string "".
        switch (type) {
            case "Array":
                // Based on the first element of the array, classify array as an array of arrays, an array of objects
                // to be stringified, or an array of non-objects to be comma-separated
                // eslint-disable-next-line no-case-declarations
                var firstElementType = (_b = (_a = param[0]) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.name;
                value =
                    firstElementType === "Array" ? param : // pass thru array of arrays
                        firstElementType === "Object" ? JSON.stringify(param) : // stringify array of objects
                            param.join(","); // join other types of array elements
                break;
            case "Object":
                value = JSON.stringify(param);
                break;
            case "Date":
                value = param.valueOf();
                break;
            case "Function":
                value = null;
                break;
            case "Boolean":
                value = param + "";
                break;
            default:
                value = param;
                break;
        }
        if (value || value === 0 || typeof value === "string" || Array.isArray(value)) {
            newParams[key] = value;
        }
    });
    return newParams;
}

/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
/**
 * Encodes keys and parameters for use in a URL's query string.
 *
 * @param key Parameter's key
 * @param value Parameter's value
 * @returns Query string with key and value pairs separated by "&"
 */
function encodeParam(key, value) {
    // For array of arrays, repeat key=value for each element of containing array
    if (Array.isArray(value) && value[0] && Array.isArray(value[0])) {
        return value.map(function (arrayElem) { return encodeParam(key, arrayElem); }).join("&");
    }
    return encodeURIComponent(key) + "=" + encodeURIComponent(value);
}
/**
 * Encodes the passed object as a query string.
 *
 * @param params An object to be encoded.
 * @returns An encoded query string.
 */
function encodeQueryString(params) {
    var newParams = processParams(params);
    return Object.keys(newParams)
        .map(function (key) {
        return encodeParam(key, newParams[key]);
    })
        .join("&");
}

/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
/**
 * Encodes parameters in a [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object in browsers or in a [FormData](https://github.com/form-data/form-data) in Node.js
 *
 * @param params An object to be encoded.
 * @returns The complete [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object.
 */
function encodeFormData(params, forceFormData) {
    // see https://github.com/Esri/arcgis-rest-js/issues/499 for more info.
    var useFormData = requiresFormData(params) || forceFormData;
    var newParams = processParams(params);
    if (useFormData) {
        var formData_1 = new FormData();
        Object.keys(newParams).forEach(function (key) {
            if (typeof Blob !== "undefined" && newParams[key] instanceof Blob) {
                /* To name the Blob:
                 1. look to an alternate request parameter called 'fileName'
                 2. see if 'name' has been tacked onto the Blob manually
                 3. if all else fails, use the request parameter
                */
                var filename = newParams["fileName"] || newParams[key].name || key;
                formData_1.append(key, newParams[key], filename);
            }
            else {
                formData_1.append(key, newParams[key]);
            }
        });
        return formData_1;
    }
    else {
        return encodeQueryString(params);
    }
}

/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
// TypeScript 2.1 no longer allows you to extend built in types. See https://github.com/Microsoft/TypeScript/issues/12790#issuecomment-265981442
// and https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
//
// This code is from MDN https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types.
var ArcGISRequestError = /** @class */ (function () {
    /**
     * Create a new `ArcGISRequestError`  object.
     *
     * @param message - The error message from the API
     * @param code - The error code from the API
     * @param response - The original response from the API that caused the error
     * @param url - The original url of the request
     * @param options - The original options and parameters of the request
     */
    function ArcGISRequestError(message, code, response, url, options) {
        message = message || "UNKNOWN_ERROR";
        code = code || "UNKNOWN_ERROR_CODE";
        this.name = "ArcGISRequestError";
        this.message =
            code === "UNKNOWN_ERROR_CODE" ? message : code + ": " + message;
        this.originalMessage = message;
        this.code = code;
        this.response = response;
        this.url = url;
        this.options = options;
    }
    return ArcGISRequestError;
}());
ArcGISRequestError.prototype = Object.create(Error.prototype);
ArcGISRequestError.prototype.constructor = ArcGISRequestError;

/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
var NODEJS_DEFAULT_REFERER_HEADER = "@esri/arcgis-rest-js";
var DEFAULT_ARCGIS_REQUEST_OPTIONS = {
    httpMethod: "POST",
    params: {
        f: "json",
    },
};
var ArcGISAuthError = /** @class */ (function (_super) {
    __extends(ArcGISAuthError, _super);
    /**
     * Create a new `ArcGISAuthError`  object.
     *
     * @param message - The error message from the API
     * @param code - The error code from the API
     * @param response - The original response from the API that caused the error
     * @param url - The original url of the request
     * @param options - The original options of the request
     */
    function ArcGISAuthError(message, code, response, url, options) {
        if (message === void 0) { message = "AUTHENTICATION_ERROR"; }
        if (code === void 0) { code = "AUTHENTICATION_ERROR_CODE"; }
        var _this = _super.call(this, message, code, response, url, options) || this;
        _this.name = "ArcGISAuthError";
        _this.message =
            code === "AUTHENTICATION_ERROR_CODE" ? message : code + ": " + message;
        return _this;
    }
    ArcGISAuthError.prototype.retry = function (getSession, retryLimit) {
        var _this = this;
        if (retryLimit === void 0) { retryLimit = 3; }
        var tries = 0;
        var retryRequest = function (resolve, reject) {
            getSession(_this.url, _this.options)
                .then(function (session) {
                var newOptions = __assign(__assign({}, _this.options), { authentication: session });
                tries = tries + 1;
                return request(_this.url, newOptions);
            })
                .then(function (response) {
                resolve(response);
            })
                .catch(function (e) {
                if (e.name === "ArcGISAuthError" && tries < retryLimit) {
                    retryRequest(resolve, reject);
                }
                else if (e.name === "ArcGISAuthError" && tries >= retryLimit) {
                    reject(_this);
                }
                else {
                    reject(e);
                }
            });
        };
        return new Promise(function (resolve, reject) {
            retryRequest(resolve, reject);
        });
    };
    return ArcGISAuthError;
}(ArcGISRequestError));
/**
 * Checks for errors in a JSON response from the ArcGIS REST API. If there are no errors, it will return the `data` passed in. If there is an error, it will throw an `ArcGISRequestError` or `ArcGISAuthError`.
 *
 * @param data The response JSON to check for errors.
 * @param url The url of the original request
 * @param params The parameters of the original request
 * @param options The options of the original request
 * @returns The data that was passed in the `data` parameter
 */
function checkForErrors(response, url, params, options, originalAuthError) {
    // this is an error message from billing.arcgis.com backend
    if (response.code >= 400) {
        var message = response.message, code = response.code;
        throw new ArcGISRequestError(message, code, response, url, options);
    }
    // error from ArcGIS Online or an ArcGIS Portal or server instance.
    if (response.error) {
        var _a = response.error, message = _a.message, code = _a.code, messageCode = _a.messageCode;
        var errorCode = messageCode || code || "UNKNOWN_ERROR_CODE";
        if (code === 498 ||
            code === 499 ||
            messageCode === "GWM_0003" ||
            (code === 400 && message === "Unable to generate token.")) {
            if (originalAuthError) {
                throw originalAuthError;
            }
            else {
                throw new ArcGISAuthError(message, errorCode, response, url, options);
            }
        }
        throw new ArcGISRequestError(message, errorCode, response, url, options);
    }
    // error from a status check
    if (response.status === "failed" || response.status === "failure") {
        var message = void 0;
        var code = "UNKNOWN_ERROR_CODE";
        try {
            message = JSON.parse(response.statusMessage).message;
            code = JSON.parse(response.statusMessage).code;
        }
        catch (e) {
            message = response.statusMessage || response.message;
        }
        throw new ArcGISRequestError(message, code, response, url, options);
    }
    return response;
}
/**
 * ```js
 * import { request } from '@esri/arcgis-rest-request';
 * //
 * request('https://www.arcgis.com/sharing/rest')
 *   .then(response) // response.currentVersion === 5.2
 * //
 * request('https://www.arcgis.com/sharing/rest', {
 *   httpMethod: "GET"
 * })
 * //
 * request('https://www.arcgis.com/sharing/rest/search', {
 *   params: { q: 'parks' }
 * })
 *   .then(response) // response.total => 78379
 * ```
 * Generic method for making HTTP requests to ArcGIS REST API endpoints.
 *
 * @param url - The URL of the ArcGIS REST API endpoint.
 * @param requestOptions - Options for the request, including parameters relevant to the endpoint.
 * @returns A Promise that will resolve with the data from the response.
 */
function request(url, requestOptions) {
    if (requestOptions === void 0) { requestOptions = { params: { f: "json" } }; }
    var options = __assign(__assign(__assign({ httpMethod: "POST" }, DEFAULT_ARCGIS_REQUEST_OPTIONS), requestOptions), {
        params: __assign(__assign({}, DEFAULT_ARCGIS_REQUEST_OPTIONS.params), requestOptions.params),
        headers: __assign(__assign({}, DEFAULT_ARCGIS_REQUEST_OPTIONS.headers), requestOptions.headers),
    });
    var missingGlobals = [];
    var recommendedPackages = [];
    // don't check for a global fetch if a custom implementation was passed through
    if (!options.fetch && typeof fetch !== "undefined") {
        options.fetch = fetch.bind(Function("return this")());
    }
    else {
        missingGlobals.push("`fetch`");
        recommendedPackages.push("`node-fetch`");
    }
    if (typeof Promise === "undefined") {
        missingGlobals.push("`Promise`");
        recommendedPackages.push("`es6-promise`");
    }
    if (typeof FormData === "undefined") {
        missingGlobals.push("`FormData`");
        recommendedPackages.push("`isomorphic-form-data`");
    }
    if (!options.fetch ||
        typeof Promise === "undefined" ||
        typeof FormData === "undefined") {
        throw new Error("`arcgis-rest-request` requires a `fetch` implementation and global variables for `Promise` and `FormData` to be present in the global scope. You are missing " + missingGlobals.join(", ") + ". We recommend installing the " + recommendedPackages.join(", ") + " modules at the root of your application to add these to the global scope. See https://bit.ly/2KNwWaJ for more info.");
    }
    var httpMethod = options.httpMethod, authentication = options.authentication, rawResponse = options.rawResponse;
    var params = __assign({ f: "json" }, options.params);
    var originalAuthError = null;
    var fetchOptions = {
        method: httpMethod,
        /* ensures behavior mimics XMLHttpRequest.
        needed to support sending IWA cookies */
        credentials: options.credentials || "same-origin",
    };
    // the /oauth2/platformSelf route will add X-Esri-Auth-Client-Id header
    // and that request needs to send cookies cross domain
    // so we need to set the credentials to "include"
    if (options.headers &&
        options.headers["X-Esri-Auth-Client-Id"] &&
        url.indexOf("/oauth2/platformSelf") > -1) {
        fetchOptions.credentials = "include";
    }
    return (authentication
        ? authentication.getToken(url, { fetch: options.fetch }).catch(function (err) {
            /**
             * append original request url and requestOptions
             * to the error thrown by getToken()
             * to assist with retrying
             */
            err.url = url;
            err.options = options;
            /**
             * if an attempt is made to talk to an unfederated server
             * first try the request anonymously. if a 'token required'
             * error is thrown, throw the UNFEDERATED error then.
             */
            originalAuthError = err;
            return Promise.resolve("");
        })
        : Promise.resolve(""))
        .then(function (token) {
        if (token.length) {
            params.token = token;
        }
        if (authentication && authentication.getDomainCredentials) {
            fetchOptions.credentials = authentication.getDomainCredentials(url);
        }
        // Custom headers to add to request. IRequestOptions.headers with merge over requestHeaders.
        var requestHeaders = {};
        if (fetchOptions.method === "GET") {
            // Prevents token from being passed in query params when hideToken option is used.
            /* istanbul ignore if - window is always defined in a browser. Test case is covered by Jasmine in node test */
            if (params.token &&
                options.hideToken &&
                // Sharing API does not support preflight check required by modern browsers https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request
                typeof window === "undefined") {
                requestHeaders["X-Esri-Authorization"] = "Bearer " + params.token;
                delete params.token;
            }
            // encode the parameters into the query string
            var queryParams = encodeQueryString(params);
            // dont append a '?' unless parameters are actually present
            var urlWithQueryString = queryParams === "" ? url : url + "?" + encodeQueryString(params);
            if (
            // This would exceed the maximum length for URLs specified by the consumer and requires POST
            (options.maxUrlLength &&
                urlWithQueryString.length > options.maxUrlLength) ||
                // Or if the customer requires the token to be hidden and it has not already been hidden in the header (for browsers)
                (params.token && options.hideToken)) {
                // the consumer specified a maximum length for URLs
                // and this would exceed it, so use post instead
                fetchOptions.method = "POST";
                // If the token was already added as a Auth header, add the token back to body with other params instead of header
                if (token.length && options.hideToken) {
                    params.token = token;
                    // Remove existing header that was added before url query length was checked
                    delete requestHeaders["X-Esri-Authorization"];
                }
            }
            else {
                // just use GET
                url = urlWithQueryString;
            }
        }
        /* updateResources currently requires FormData even when the input parameters dont warrant it.
    https://developers.arcgis.com/rest/users-groups-and-items/update-resources.htm
        see https://github.com/Esri/arcgis-rest-js/pull/500 for more info. */
        var forceFormData = new RegExp("/items/.+/updateResources").test(url);
        if (fetchOptions.method === "POST") {
            fetchOptions.body = encodeFormData(params, forceFormData);
        }
        // Mixin headers from request options
        fetchOptions.headers = __assign(__assign({}, requestHeaders), options.headers);
        /* istanbul ignore next - karma reports coverage on browser tests only */
        if (typeof window === "undefined" && !fetchOptions.headers.referer) {
            fetchOptions.headers.referer = NODEJS_DEFAULT_REFERER_HEADER;
        }
        /* istanbul ignore else blob responses are difficult to make cross platform we will just have to trust the isomorphic fetch will do its job */
        if (!requiresFormData(params) && !forceFormData) {
            fetchOptions.headers["Content-Type"] =
                "application/x-www-form-urlencoded";
        }
        return options.fetch(url, fetchOptions);
    })
        .then(function (response) {
        if (!response.ok) {
            // server responded w/ an actual error (404, 500, etc)
            var status_1 = response.status, statusText = response.statusText;
            throw new ArcGISRequestError(statusText, "HTTP " + status_1, response, url, options);
        }
        if (rawResponse) {
            return response;
        }
        switch (params.f) {
            case "json":
                return response.json();
            case "geojson":
                return response.json();
            case "html":
                return response.text();
            case "text":
                return response.text();
            /* istanbul ignore next blob responses are difficult to make cross platform we will just have to trust that isomorphic fetch will do its job */
            default:
                return response.blob();
        }
    })
        .then(function (data) {
        if ((params.f === "json" || params.f === "geojson") && !rawResponse) {
            var response = checkForErrors(data, url, params, options, originalAuthError);
            if (originalAuthError) {
                /* If the request was made to an unfederated service that
                didn't require authentication, add the base url and a dummy token
                to the list of trusted servers to avoid another federation check
                in the event of a repeat request */
                var truncatedUrl = url
                    .toLowerCase()
                    .split(/\/rest(\/admin)?\/services\//)[0];
                options.authentication.federatedServers[truncatedUrl] = {
                    token: [],
                    // default to 24 hours
                    expires: new Date(Date.now() + 86400 * 1000),
                };
                originalAuthError = null;
            }
            return response;
        }
        else {
            return data;
        }
    });
}

/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
/**
 * Helper method to ensure that user supplied urls don't include whitespace or a trailing slash.
 */
function cleanUrl(url) {
    // Guard so we don't try to trim something that's not a string
    if (typeof url !== "string") {
        return url;
    }
    // trim leading and trailing spaces, but not spaces inside the url
    url = url.trim();
    // remove the trailing slash to the url if one was included
    if (url[url.length - 1] === "/") {
        url = url.slice(0, -1);
    }
    return url;
}

/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
/**
 * Helper that returns the appropriate portal url for a given request. `requestOptions.portal` is given
 * precedence over `authentication.portal`. If neither `portal` nor `authentication` is present,
 * `www.arcgis.com/sharing/rest` is returned.
 *
 * @param requestOptions - Request options that may have authentication manager
 * @returns Portal url to be used in API requests
 */
function getPortalUrl(requestOptions) {
    if (requestOptions === void 0) { requestOptions = {}; }
    // use portal in options if specified
    if (requestOptions.portal) {
        return cleanUrl(requestOptions.portal);
    }
    // if auth was passed, use that portal
    if (requestOptions.authentication) {
        // the portal url is already scrubbed in the auth package
        return requestOptions.authentication.portal;
    }
    // default to arcgis.com
    return "https://www.arcgis.com/sharing/rest";
}

/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
/**
 * Serialize an item and its data into a json format accepted by the Portal API for create and update operations
 *
 * @param item Item to be serialized
 * @returns a formatted json object to be sent to Portal
 */
function serializeItem(item) {
    // create a clone so we're not messing with the original
    var clone = JSON.parse(JSON.stringify(item));
    // binary data needs POSTed as a `file`
    // JSON object literals should be passed as `text`.
    if (clone.data) {
        (typeof Blob !== "undefined" && item.data instanceof Blob) ||
            // Node.js doesn't implement Blob
            item.data.constructor.name === "ReadStream"
            ? (clone.file = item.data)
            : (clone.text = item.data);
        delete clone.data;
    }
    return clone;
}
/**
 * `requestOptions.owner` is given priority, `requestOptions.item.owner` will be checked next. If neither are present, `authentication.getUserName()` will be used instead.
 */
function determineOwner(requestOptions) {
    if (requestOptions.owner) {
        return Promise.resolve(requestOptions.owner);
    }
    else if (requestOptions.item && requestOptions.item.owner) {
        return Promise.resolve(requestOptions.item.owner);
    }
    else if (requestOptions.authentication &&
        requestOptions.authentication.getUsername) {
        return requestOptions.authentication.getUsername();
    }
    else {
        return Promise.reject(new Error("Could not determine the owner of this item. Pass the `owner`, `item.owner`, or `authentication` option."));
    }
}

/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
/**
 * ```js
 * import { updateItem } from "@esri/arcgis-rest-portal";
 * //
 * updateItem({
 *   item: {
 *     id: "3ef",
 *     description: "A three hour tour"
 *   },
 *   authentication
 * })
 *   .then(response)
 * ```
 * Update an Item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-item.htm) for more information.
 *
 * @param requestOptions - Options for the request.
 * @returns A Promise that updates an item.
 */
function updateItem$1(requestOptions) {
    return determineOwner(requestOptions).then(function (owner) {
        var url = requestOptions.folderId
            ? getPortalUrl(requestOptions) + "/content/users/" + owner + "/" + requestOptions.folderId + "/items/" + requestOptions.item.id + "/update"
            : getPortalUrl(requestOptions) + "/content/users/" + owner + "/items/" + requestOptions.item.id + "/update";
        // serialize the item into something Portal will accept
        requestOptions.params = __assign(__assign({}, requestOptions.params), serializeItem(requestOptions.item));
        return request(url, requestOptions);
    });
}
/**
 * ```js
 * import { updateItemResource } from "@esri/arcgis-rest-portal";
 * //
 * updateItemResource({
 *   id: '3ef',
 *   resource: file,
 *   name: 'bigkahuna.jpg',
 *   authentication
 * })
 *   .then(response)
 * ```
 * Update a resource associated with an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-resources.htm) for more information.
 *
 * @param requestOptions - Options for the request
 * @returns A Promise that updates an item resource.
 */
function updateItemResource(requestOptions) {
    return determineOwner(requestOptions).then(function (owner) {
        var url = getPortalUrl(requestOptions) + "/content/users/" + owner + "/items/" + requestOptions.id + "/updateResources";
        // mix in user supplied params
        requestOptions.params = __assign({ file: requestOptions.resource, fileName: requestOptions.name, resourcesPrefix: requestOptions.prefix, text: requestOptions.content }, requestOptions.params);
        // only override the access specified previously if 'private' is passed explicitly
        if (typeof requestOptions.private !== "undefined") {
            requestOptions.params.access = requestOptions.private
                ? "private"
                : "inherit";
        }
        return request(url, requestOptions);
    });
}

/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
/**
 * ```js
 * import { addItemResource } from "@esri/arcgis-rest-portal";
 * //
 * // Add a file resource
 * addItemResource({
 *   id: '3ef',
 *   resource: file,
 *   name: 'bigkahuna.jpg',
 *   authentication
 * })
 *   .then(response)
 * //
 * // Add a text resource
 * addItemResource({
 *   id: '4fg',
 *   content: "Text content",
 *   name: 'bigkahuna.txt',
 *   authentication
 * })
 *   .then(response)
 * ```
 * Add a resource associated with an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/add-resources.htm) for more information.
 *
 * @param requestOptions - Options for the request
 * @returns A Promise to add item resources.
 */
function addItemResource(requestOptions) {
    return determineOwner(requestOptions).then(function (owner) {
        var url = getPortalUrl(requestOptions) + "/content/users/" + owner + "/items/" + requestOptions.id + "/addResources";
        requestOptions.params = __assign({ file: requestOptions.resource, fileName: requestOptions.name, resourcesPrefix: requestOptions.prefix, text: requestOptions.content, access: requestOptions.private ? "private" : "inherit" }, requestOptions.params);
        return request(url, requestOptions);
    });
}

/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
/**
 * Remove a resource associated with an item
 *
 * @param requestOptions - Options for the request
 * @returns A Promise that deletes an item resource.
 */
function removeItemResource(requestOptions) {
    return determineOwner(requestOptions).then(function (owner) {
        var url = getPortalUrl(requestOptions) + "/content/users/" + owner + "/items/" + requestOptions.id + "/removeResources";
        // mix in user supplied params
        requestOptions.params = __assign(__assign({}, requestOptions.params), { resource: requestOptions.resource });
        // only override the deleteAll param specified previously if it is passed explicitly
        if (typeof requestOptions.deleteAll !== "undefined") {
            requestOptions.params.deleteAll = requestOptions.deleteAll;
        }
        return request(url, requestOptions);
    });
}

createCommonjsModule(function (module, exports) {
/*!

JSZip v3.7.0 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/master/LICENSE
*/

!function(e){module.exports=e();}(function(){return function s(o,a,f){function u(r,e){if(!a[r]){if(!o[r]){var t="function"==typeof commonjsRequire&&commonjsRequire;if(!e&&t)return t(r,!0);if(d)return d(r,!0);var n=new Error("Cannot find module '"+r+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[r]={exports:{}};o[r][0].call(i.exports,function(e){var t=o[r][1][e];return u(t||e)},i,i.exports,s,o,a,f);}return a[r].exports}for(var d="function"==typeof commonjsRequire&&commonjsRequire,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(h,t,n){(function(r){!function(e){"object"==typeof n&&void 0!==t?t.exports=e():("undefined"!=typeof window?window:void 0!==r?r:"undefined"!=typeof self?self:this).JSZip=e();}(function(){return function s(o,a,f){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof h&&h;if(!e&&r)return r(t,!0);if(d)return d(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=a[t]={exports:{}};o[t][0].call(i.exports,function(e){return u(o[t][1][e]||e)},i,i.exports,s,o,a,f);}return a[t].exports}for(var d="function"==typeof h&&h,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(e,t,r){var c=e("./utils"),h=e("./support"),p="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";r.encode=function(e){for(var t,r,n,i,s,o,a,f=[],u=0,d=e.length,h=d,l="string"!==c.getTypeOf(e);u<e.length;)h=d-u,n=l?(t=e[u++],r=u<d?e[u++]:0,u<d?e[u++]:0):(t=e.charCodeAt(u++),r=u<d?e.charCodeAt(u++):0,u<d?e.charCodeAt(u++):0),i=t>>2,s=(3&t)<<4|r>>4,o=1<h?(15&r)<<2|n>>6:64,a=2<h?63&n:64,f.push(p.charAt(i)+p.charAt(s)+p.charAt(o)+p.charAt(a));return f.join("")},r.decode=function(e){var t,r,n,i,s,o,a=0,f=0;if("data:"===e.substr(0,"data:".length))throw new Error("Invalid base64 input, it looks like a data url.");var u,d=3*(e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"")).length/4;if(e.charAt(e.length-1)===p.charAt(64)&&d--,e.charAt(e.length-2)===p.charAt(64)&&d--,d%1!=0)throw new Error("Invalid base64 input, bad content length.");for(u=h.uint8array?new Uint8Array(0|d):new Array(0|d);a<e.length;)t=p.indexOf(e.charAt(a++))<<2|(i=p.indexOf(e.charAt(a++)))>>4,r=(15&i)<<4|(s=p.indexOf(e.charAt(a++)))>>2,n=(3&s)<<6|(o=p.indexOf(e.charAt(a++))),u[f++]=t,64!==s&&(u[f++]=r),64!==o&&(u[f++]=n);return u};},{"./support":30,"./utils":32}],2:[function(e,t,r){var n=e("./external"),i=e("./stream/DataWorker"),s=e("./stream/Crc32Probe"),o=e("./stream/DataLengthProbe");function a(e,t,r,n,i){this.compressedSize=e,this.uncompressedSize=t,this.crc32=r,this.compression=n,this.compressedContent=i;}a.prototype={getContentWorker:function(){var e=new i(n.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new o("data_length")),t=this;return e.on("end",function(){if(this.streamInfo.data_length!==t.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")}),e},getCompressedWorker:function(){return new i(n.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)}},a.createWorkerFrom=function(e,t,r){return e.pipe(new s).pipe(new o("uncompressedSize")).pipe(t.compressWorker(r)).pipe(new o("compressedSize")).withStreamInfo("compression",t)},t.exports=a;},{"./external":6,"./stream/Crc32Probe":25,"./stream/DataLengthProbe":26,"./stream/DataWorker":27}],3:[function(e,t,r){var n=e("./stream/GenericWorker");r.STORE={magic:"\0\0",compressWorker:function(e){return new n("STORE compression")},uncompressWorker:function(){return new n("STORE decompression")}},r.DEFLATE=e("./flate");},{"./flate":7,"./stream/GenericWorker":28}],4:[function(e,t,r){var n=e("./utils"),o=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e;}return t}();t.exports=function(e,t){return void 0!==e&&e.length?"string"!==n.getTypeOf(e)?function(e,t,r){var n=o,i=0+r;e^=-1;for(var s=0;s<i;s++)e=e>>>8^n[255&(e^t[s])];return -1^e}(0|t,e,e.length):function(e,t,r){var n=o,i=0+r;e^=-1;for(var s=0;s<i;s++)e=e>>>8^n[255&(e^t.charCodeAt(s))];return -1^e}(0|t,e,e.length):0};},{"./utils":32}],5:[function(e,t,r){r.base64=!1,r.binary=!1,r.dir=!1,r.createFolders=!0,r.date=null,r.compression=null,r.compressionOptions=null,r.comment=null,r.unixPermissions=null,r.dosPermissions=null;},{}],6:[function(e,t,r){var n;n="undefined"!=typeof Promise?Promise:e("lie"),t.exports={Promise:n};},{lie:37}],7:[function(e,t,r){var n="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Uint32Array,i=e("pako"),s=e("./utils"),o=e("./stream/GenericWorker"),a=n?"uint8array":"array";function f(e,t){o.call(this,"FlateWorker/"+e),this._pako=null,this._pakoAction=e,this._pakoOptions=t,this.meta={};}r.magic="\b\0",s.inherits(f,o),f.prototype.processChunk=function(e){this.meta=e.meta,null===this._pako&&this._createPako(),this._pako.push(s.transformTo(a,e.data),!1);},f.prototype.flush=function(){o.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0);},f.prototype.cleanUp=function(){o.prototype.cleanUp.call(this),this._pako=null;},f.prototype._createPako=function(){this._pako=new i[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var t=this;this._pako.onData=function(e){t.push({data:e,meta:t.meta});};},r.compressWorker=function(e){return new f("Deflate",e)},r.uncompressWorker=function(){return new f("Inflate",{})};},{"./stream/GenericWorker":28,"./utils":32,pako:38}],8:[function(e,t,r){function O(e,t){var r,n="";for(r=0;r<t;r++)n+=String.fromCharCode(255&e),e>>>=8;return n}function i(e,t,r,n,i,s){var o,a,f=e.file,u=e.compression,d=s!==D.utf8encode,h=I.transformTo("string",s(f.name)),l=I.transformTo("string",D.utf8encode(f.name)),c=f.comment,p=I.transformTo("string",s(c)),m=I.transformTo("string",D.utf8encode(c)),_=l.length!==f.name.length,w=m.length!==c.length,v="",g="",y="",b=f.dir,k=f.date,x={crc32:0,compressedSize:0,uncompressedSize:0};t&&!r||(x.crc32=e.crc32,x.compressedSize=e.compressedSize,x.uncompressedSize=e.uncompressedSize);var S=0;t&&(S|=8),d||!_&&!w||(S|=2048);var E,z=0,C=0;b&&(z|=16),"UNIX"===i?(C=798,z|=((E=f.unixPermissions)||(E=b?16893:33204),(65535&E)<<16)):(C=20,z|=63&(f.dosPermissions||0)),o=k.getUTCHours(),o<<=6,o|=k.getUTCMinutes(),o<<=5,o|=k.getUTCSeconds()/2,a=k.getUTCFullYear()-1980,a<<=4,a|=k.getUTCMonth()+1,a<<=5,a|=k.getUTCDate(),_&&(v+="up"+O((g=O(1,1)+O(B(h),4)+l).length,2)+g),w&&(v+="uc"+O((y=O(1,1)+O(B(p),4)+m).length,2)+y);var A="";return A+="\n\0",A+=O(S,2),A+=u.magic,A+=O(o,2),A+=O(a,2),A+=O(x.crc32,4),A+=O(x.compressedSize,4),A+=O(x.uncompressedSize,4),A+=O(h.length,2),A+=O(v.length,2),{fileRecord:T.LOCAL_FILE_HEADER+A+h+v,dirRecord:T.CENTRAL_FILE_HEADER+O(C,2)+A+O(p.length,2)+"\0\0\0\0"+O(z,4)+O(n,4)+h+v+p}}var I=e("../utils"),s=e("../stream/GenericWorker"),D=e("../utf8"),B=e("../crc32"),T=e("../signature");function n(e,t,r,n){s.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=t,this.zipPlatform=r,this.encodeFileName=n,this.streamFiles=e,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[];}I.inherits(n,s),n.prototype.push=function(e){var t=e.meta.percent||0,r=this.entriesCount,n=this._sources.length;this.accumulate?this.contentBuffer.push(e):(this.bytesWritten+=e.data.length,s.prototype.push.call(this,{data:e.data,meta:{currentFile:this.currentFile,percent:r?(t+100*(r-n-1))/r:100}}));},n.prototype.openedSource=function(e){this.currentSourceOffset=this.bytesWritten,this.currentFile=e.file.name;var t=this.streamFiles&&!e.file.dir;if(t){var r=i(e,t,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:r.fileRecord,meta:{percent:0}});}else this.accumulate=!0;},n.prototype.closedSource=function(e){this.accumulate=!1;var t,r=this.streamFiles&&!e.file.dir,n=i(e,r,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(n.dirRecord),r)this.push({data:(t=e,T.DATA_DESCRIPTOR+O(t.crc32,4)+O(t.compressedSize,4)+O(t.uncompressedSize,4)),meta:{percent:100}});else for(this.push({data:n.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null;},n.prototype.flush=function(){for(var e=this.bytesWritten,t=0;t<this.dirRecords.length;t++)this.push({data:this.dirRecords[t],meta:{percent:100}});var r,n,i,s,o,a,f=this.bytesWritten-e,u=(r=this.dirRecords.length,n=f,i=e,s=this.zipComment,o=this.encodeFileName,a=I.transformTo("string",o(s)),T.CENTRAL_DIRECTORY_END+"\0\0\0\0"+O(r,2)+O(r,2)+O(n,4)+O(i,4)+O(a.length,2)+a);this.push({data:u,meta:{percent:100}});},n.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume();},n.prototype.registerPrevious=function(e){this._sources.push(e);var t=this;return e.on("data",function(e){t.processChunk(e);}),e.on("end",function(){t.closedSource(t.previous.streamInfo),t._sources.length?t.prepareNextSource():t.end();}),e.on("error",function(e){t.error(e);}),this},n.prototype.resume=function(){return !!s.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},n.prototype.error=function(e){var t=this._sources;if(!s.prototype.error.call(this,e))return !1;for(var r=0;r<t.length;r++)try{t[r].error(e);}catch(e){}return !0},n.prototype.lock=function(){s.prototype.lock.call(this);for(var e=this._sources,t=0;t<e.length;t++)e[t].lock();},t.exports=n;},{"../crc32":4,"../signature":23,"../stream/GenericWorker":28,"../utf8":31,"../utils":32}],9:[function(e,t,r){var u=e("../compressions"),n=e("./ZipFileWorker");r.generateWorker=function(e,o,t){var a=new n(o.streamFiles,t,o.platform,o.encodeFileName),f=0;try{e.forEach(function(e,t){f++;var r=function(e,t){var r=e||t,n=u[r];if(!n)throw new Error(r+" is not a valid compression method !");return n}(t.options.compression,o.compression),n=t.options.compressionOptions||o.compressionOptions||{},i=t.dir,s=t.date;t._compressWorker(r,n).withStreamInfo("file",{name:e,dir:i,date:s,comment:t.comment||"",unixPermissions:t.unixPermissions,dosPermissions:t.dosPermissions}).pipe(a);}),a.entriesCount=f;}catch(e){a.error(e);}return a};},{"../compressions":3,"./ZipFileWorker":8}],10:[function(e,t,r){function n(){if(!(this instanceof n))return new n;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files={},this.comment=null,this.root="",this.clone=function(){var e=new n;for(var t in this)"function"!=typeof this[t]&&(e[t]=this[t]);return e};}(n.prototype=e("./object")).loadAsync=e("./load"),n.support=e("./support"),n.defaults=e("./defaults"),n.version="3.5.0",n.loadAsync=function(e,t){return (new n).loadAsync(e,t)},n.external=e("./external"),t.exports=n;},{"./defaults":5,"./external":6,"./load":11,"./object":15,"./support":30}],11:[function(e,t,r){var n=e("./utils"),i=e("./external"),a=e("./utf8"),f=e("./zipEntries"),s=e("./stream/Crc32Probe"),u=e("./nodejsUtils");function d(n){return new i.Promise(function(e,t){var r=n.decompressed.getContentWorker().pipe(new s);r.on("error",function(e){t(e);}).on("end",function(){r.streamInfo.crc32!==n.decompressed.crc32?t(new Error("Corrupted zip : CRC32 mismatch")):e();}).resume();})}t.exports=function(e,s){var o=this;return s=n.extend(s||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:a.utf8decode}),u.isNode&&u.isStream(e)?i.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):n.prepareContent("the loaded zip file",e,!0,s.optimizedBinaryString,s.base64).then(function(e){var t=new f(s);return t.load(e),t}).then(function(e){var t=[i.Promise.resolve(e)],r=e.files;if(s.checkCRC32)for(var n=0;n<r.length;n++)t.push(d(r[n]));return i.Promise.all(t)}).then(function(e){for(var t=e.shift(),r=t.files,n=0;n<r.length;n++){var i=r[n];o.file(i.fileNameStr,i.decompressed,{binary:!0,optimizedBinaryString:!0,date:i.date,dir:i.dir,comment:i.fileCommentStr.length?i.fileCommentStr:null,unixPermissions:i.unixPermissions,dosPermissions:i.dosPermissions,createFolders:s.createFolders});}return t.zipComment.length&&(o.comment=t.zipComment),o})};},{"./external":6,"./nodejsUtils":14,"./stream/Crc32Probe":25,"./utf8":31,"./utils":32,"./zipEntries":33}],12:[function(e,t,r){var n=e("../utils"),i=e("../stream/GenericWorker");function s(e,t){i.call(this,"Nodejs stream input adapter for "+e),this._upstreamEnded=!1,this._bindStream(t);}n.inherits(s,i),s.prototype._bindStream=function(e){var t=this;(this._stream=e).pause(),e.on("data",function(e){t.push({data:e,meta:{percent:0}});}).on("error",function(e){t.isPaused?this.generatedError=e:t.error(e);}).on("end",function(){t.isPaused?t._upstreamEnded=!0:t.end();});},s.prototype.pause=function(){return !!i.prototype.pause.call(this)&&(this._stream.pause(),!0)},s.prototype.resume=function(){return !!i.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},t.exports=s;},{"../stream/GenericWorker":28,"../utils":32}],13:[function(e,t,r){var i=e("readable-stream").Readable;function n(e,t,r){i.call(this,t),this._helper=e;var n=this;e.on("data",function(e,t){n.push(e)||n._helper.pause(),r&&r(t);}).on("error",function(e){n.emit("error",e);}).on("end",function(){n.push(null);});}e("../utils").inherits(n,i),n.prototype._read=function(){this._helper.resume();},t.exports=n;},{"../utils":32,"readable-stream":16}],14:[function(e,t,r){t.exports={isNode:"undefined"!=typeof Buffer,newBufferFrom:function(e,t){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(e,t);if("number"==typeof e)throw new Error('The "data" argument must not be a number');return new Buffer(e,t)},allocBuffer:function(e){if(Buffer.alloc)return Buffer.alloc(e);var t=new Buffer(e);return t.fill(0),t},isBuffer:function(e){return Buffer.isBuffer(e)},isStream:function(e){return e&&"function"==typeof e.on&&"function"==typeof e.pause&&"function"==typeof e.resume}};},{}],15:[function(e,t,r){function s(e,t,r){var n,i=d.getTypeOf(t),s=d.extend(r||{},l);s.date=s.date||new Date,null!==s.compression&&(s.compression=s.compression.toUpperCase()),"string"==typeof s.unixPermissions&&(s.unixPermissions=parseInt(s.unixPermissions,8)),s.unixPermissions&&16384&s.unixPermissions&&(s.dir=!0),s.dosPermissions&&16&s.dosPermissions&&(s.dir=!0),s.dir&&(e=u(e)),s.createFolders&&(n=function(e){"/"===e.slice(-1)&&(e=e.substring(0,e.length-1));var t=e.lastIndexOf("/");return 0<t?e.substring(0,t):""}(e))&&w.call(this,n,!0);var o,a="string"===i&&!1===s.binary&&!1===s.base64;r&&void 0!==r.binary||(s.binary=!a),(t instanceof c&&0===t.uncompressedSize||s.dir||!t||0===t.length)&&(s.base64=!1,s.binary=!0,t="",s.compression="STORE",i="string"),o=t instanceof c||t instanceof h?t:m.isNode&&m.isStream(t)?new _(e,t):d.prepareContent(e,t,s.binary,s.optimizedBinaryString,s.base64);var f=new p(e,o,s);this.files[e]=f;}function u(e){return "/"!==e.slice(-1)&&(e+="/"),e}var i=e("./utf8"),d=e("./utils"),h=e("./stream/GenericWorker"),o=e("./stream/StreamHelper"),l=e("./defaults"),c=e("./compressedObject"),p=e("./zipObject"),a=e("./generate"),m=e("./nodejsUtils"),_=e("./nodejs/NodejsStreamInputAdapter"),w=function(e,t){return t=void 0!==t?t:l.createFolders,e=u(e),this.files[e]||s.call(this,e,null,{dir:!0,createFolders:t}),this.files[e]};function f(e){return "[object RegExp]"===Object.prototype.toString.call(e)}var n={load:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},forEach:function(e){var t,r,n;for(t in this.files)this.files.hasOwnProperty(t)&&(n=this.files[t],(r=t.slice(this.root.length,t.length))&&t.slice(0,this.root.length)===this.root&&e(r,n));},filter:function(r){var n=[];return this.forEach(function(e,t){r(e,t)&&n.push(t);}),n},file:function(e,t,r){if(1!==arguments.length)return e=this.root+e,s.call(this,e,t,r),this;if(f(e)){var n=e;return this.filter(function(e,t){return !t.dir&&n.test(e)})}var i=this.files[this.root+e];return i&&!i.dir?i:null},folder:function(r){if(!r)return this;if(f(r))return this.filter(function(e,t){return t.dir&&r.test(e)});var e=this.root+r,t=w.call(this,e),n=this.clone();return n.root=t.name,n},remove:function(r){r=this.root+r;var e=this.files[r];if(e||("/"!==r.slice(-1)&&(r+="/"),e=this.files[r]),e&&!e.dir)delete this.files[r];else for(var t=this.filter(function(e,t){return t.name.slice(0,r.length)===r}),n=0;n<t.length;n++)delete this.files[t[n].name];return this},generate:function(e){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},generateInternalStream:function(e){var t,r={};try{if((r=d.extend(e||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:i.utf8encode})).type=r.type.toLowerCase(),r.compression=r.compression.toUpperCase(),"binarystring"===r.type&&(r.type="string"),!r.type)throw new Error("No output type specified.");d.checkSupport(r.type),"darwin"!==r.platform&&"freebsd"!==r.platform&&"linux"!==r.platform&&"sunos"!==r.platform||(r.platform="UNIX"),"win32"===r.platform&&(r.platform="DOS");var n=r.comment||this.comment||"";t=a.generateWorker(this,r,n);}catch(e){(t=new h("error")).error(e);}return new o(t,r.type||"string",r.mimeType)},generateAsync:function(e,t){return this.generateInternalStream(e).accumulate(t)},generateNodeStream:function(e,t){return (e=e||{}).type||(e.type="nodebuffer"),this.generateInternalStream(e).toNodejsStream(t)}};t.exports=n;},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":12,"./nodejsUtils":14,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31,"./utils":32,"./zipObject":35}],16:[function(e,t,r){t.exports=e("stream");},{stream:void 0}],17:[function(e,t,r){var n=e("./DataReader");function i(e){n.call(this,e);for(var t=0;t<this.data.length;t++)e[t]=255&e[t];}e("../utils").inherits(i,n),i.prototype.byteAt=function(e){return this.data[this.zero+e]},i.prototype.lastIndexOfSignature=function(e){for(var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.length-4;0<=s;--s)if(this.data[s]===t&&this.data[s+1]===r&&this.data[s+2]===n&&this.data[s+3]===i)return s-this.zero;return -1},i.prototype.readAndCheckSignature=function(e){var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.readData(4);return t===s[0]&&r===s[1]&&n===s[2]&&i===s[3]},i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return [];var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i;},{"../utils":32,"./DataReader":18}],18:[function(e,t,r){var n=e("../utils");function i(e){this.data=e,this.length=e.length,this.index=0,this.zero=0;}i.prototype={checkOffset:function(e){this.checkIndex(this.index+e);},checkIndex:function(e){if(this.length<this.zero+e||e<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+e+"). Corrupted zip ?")},setIndex:function(e){this.checkIndex(e),this.index=e;},skip:function(e){this.setIndex(this.index+e);},byteAt:function(e){},readInt:function(e){var t,r=0;for(this.checkOffset(e),t=this.index+e-1;t>=this.index;t--)r=(r<<8)+this.byteAt(t);return this.index+=e,r},readString:function(e){return n.transformTo("string",this.readData(e))},readData:function(e){},lastIndexOfSignature:function(e){},readAndCheckSignature:function(e){},readDate:function(){var e=this.readInt(4);return new Date(Date.UTC(1980+(e>>25&127),(e>>21&15)-1,e>>16&31,e>>11&31,e>>5&63,(31&e)<<1))}},t.exports=i;},{"../utils":32}],19:[function(e,t,r){var n=e("./Uint8ArrayReader");function i(e){n.call(this,e);}e("../utils").inherits(i,n),i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i;},{"../utils":32,"./Uint8ArrayReader":21}],20:[function(e,t,r){var n=e("./DataReader");function i(e){n.call(this,e);}e("../utils").inherits(i,n),i.prototype.byteAt=function(e){return this.data.charCodeAt(this.zero+e)},i.prototype.lastIndexOfSignature=function(e){return this.data.lastIndexOf(e)-this.zero},i.prototype.readAndCheckSignature=function(e){return e===this.readData(4)},i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i;},{"../utils":32,"./DataReader":18}],21:[function(e,t,r){var n=e("./ArrayReader");function i(e){n.call(this,e);}e("../utils").inherits(i,n),i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return new Uint8Array(0);var t=this.data.subarray(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i;},{"../utils":32,"./ArrayReader":17}],22:[function(e,t,r){var n=e("../utils"),i=e("../support"),s=e("./ArrayReader"),o=e("./StringReader"),a=e("./NodeBufferReader"),f=e("./Uint8ArrayReader");t.exports=function(e){var t=n.getTypeOf(e);return n.checkSupport(t),"string"!==t||i.uint8array?"nodebuffer"===t?new a(e):i.uint8array?new f(n.transformTo("uint8array",e)):new s(n.transformTo("array",e)):new o(e)};},{"../support":30,"../utils":32,"./ArrayReader":17,"./NodeBufferReader":19,"./StringReader":20,"./Uint8ArrayReader":21}],23:[function(e,t,r){r.LOCAL_FILE_HEADER="PK",r.CENTRAL_FILE_HEADER="PK",r.CENTRAL_DIRECTORY_END="PK",r.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK",r.ZIP64_CENTRAL_DIRECTORY_END="PK",r.DATA_DESCRIPTOR="PK\b";},{}],24:[function(e,t,r){var n=e("./GenericWorker"),i=e("../utils");function s(e){n.call(this,"ConvertWorker to "+e),this.destType=e;}i.inherits(s,n),s.prototype.processChunk=function(e){this.push({data:i.transformTo(this.destType,e.data),meta:e.meta});},t.exports=s;},{"../utils":32,"./GenericWorker":28}],25:[function(e,t,r){var n=e("./GenericWorker"),i=e("../crc32");function s(){n.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0);}e("../utils").inherits(s,n),s.prototype.processChunk=function(e){this.streamInfo.crc32=i(e.data,this.streamInfo.crc32||0),this.push(e);},t.exports=s;},{"../crc32":4,"../utils":32,"./GenericWorker":28}],26:[function(e,t,r){var n=e("../utils"),i=e("./GenericWorker");function s(e){i.call(this,"DataLengthProbe for "+e),this.propName=e,this.withStreamInfo(e,0);}n.inherits(s,i),s.prototype.processChunk=function(e){if(e){var t=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=t+e.data.length;}i.prototype.processChunk.call(this,e);},t.exports=s;},{"../utils":32,"./GenericWorker":28}],27:[function(e,t,r){var n=e("../utils"),i=e("./GenericWorker");function s(e){i.call(this,"DataWorker");var t=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,e.then(function(e){t.dataIsReady=!0,t.data=e,t.max=e&&e.length||0,t.type=n.getTypeOf(e),t.isPaused||t._tickAndRepeat();},function(e){t.error(e);});}n.inherits(s,i),s.prototype.cleanUp=function(){i.prototype.cleanUp.call(this),this.data=null;},s.prototype.resume=function(){return !!i.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,n.delay(this._tickAndRepeat,[],this)),!0)},s.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(n.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0));},s.prototype._tick=function(){if(this.isPaused||this.isFinished)return !1;var e=null,t=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case"string":e=this.data.substring(this.index,t);break;case"uint8array":e=this.data.subarray(this.index,t);break;case"array":case"nodebuffer":e=this.data.slice(this.index,t);}return this.index=t,this.push({data:e,meta:{percent:this.max?this.index/this.max*100:0}})},t.exports=s;},{"../utils":32,"./GenericWorker":28}],28:[function(e,t,r){function n(e){this.name=e||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null;}n.prototype={push:function(e){this.emit("data",e);},end:function(){if(this.isFinished)return !1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0;}catch(e){this.emit("error",e);}return !0},error:function(e){return !this.isFinished&&(this.isPaused?this.generatedError=e:(this.isFinished=!0,this.emit("error",e),this.previous&&this.previous.error(e),this.cleanUp()),!0)},on:function(e,t){return this._listeners[e].push(t),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[];},emit:function(e,t){if(this._listeners[e])for(var r=0;r<this._listeners[e].length;r++)this._listeners[e][r].call(this,t);},pipe:function(e){return e.registerPrevious(this)},registerPrevious:function(e){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=e.streamInfo,this.mergeStreamInfo(),this.previous=e;var t=this;return e.on("data",function(e){t.processChunk(e);}),e.on("end",function(){t.end();}),e.on("error",function(e){t.error(e);}),this},pause:function(){return !this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return !1;var e=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),e=!0),this.previous&&this.previous.resume(),!e},flush:function(){},processChunk:function(e){this.push(e);},withStreamInfo:function(e,t){return this.extraStreamInfo[e]=t,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var e in this.extraStreamInfo)this.extraStreamInfo.hasOwnProperty(e)&&(this.streamInfo[e]=this.extraStreamInfo[e]);},lock:function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock();},toString:function(){var e="Worker "+this.name;return this.previous?this.previous+" -> "+e:e}},t.exports=n;},{}],29:[function(e,t,r){var u=e("../utils"),i=e("./ConvertWorker"),s=e("./GenericWorker"),d=e("../base64"),n=e("../support"),o=e("../external"),a=null;if(n.nodestream)try{a=e("../nodejs/NodejsStreamOutputAdapter");}catch(e){}function f(e,t,r){var n=t;switch(t){case"blob":case"arraybuffer":n="uint8array";break;case"base64":n="string";}try{this._internalType=n,this._outputType=t,this._mimeType=r,u.checkSupport(n),this._worker=e.pipe(new i(n)),e.lock();}catch(e){this._worker=new s("error"),this._worker.error(e);}}f.prototype={accumulate:function(e){return a=this,f=e,new o.Promise(function(t,r){var n=[],i=a._internalType,s=a._outputType,o=a._mimeType;a.on("data",function(e,t){n.push(e),f&&f(t);}).on("error",function(e){n=[],r(e);}).on("end",function(){try{var e=function(e,t,r){switch(e){case"blob":return u.newBlob(u.transformTo("arraybuffer",t),r);case"base64":return d.encode(t);default:return u.transformTo(e,t)}}(s,function(e,t){var r,n=0,i=null,s=0;for(r=0;r<t.length;r++)s+=t[r].length;switch(e){case"string":return t.join("");case"array":return Array.prototype.concat.apply([],t);case"uint8array":for(i=new Uint8Array(s),r=0;r<t.length;r++)i.set(t[r],n),n+=t[r].length;return i;case"nodebuffer":return Buffer.concat(t);default:throw new Error("concat : unsupported type '"+e+"'")}}(i,n),o);t(e);}catch(e){r(e);}n=[];}).resume();});var a,f;},on:function(e,t){var r=this;return "data"===e?this._worker.on(e,function(e){t.call(r,e.data,e.meta);}):this._worker.on(e,function(){u.delay(t,arguments,r);}),this},resume:function(){return u.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(e){if(u.checkSupport("nodestream"),"nodebuffer"!==this._outputType)throw new Error(this._outputType+" is not supported by this method");return new a(this,{objectMode:"nodebuffer"!==this._outputType},e)}},t.exports=f;},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":13,"../support":30,"../utils":32,"./ConvertWorker":24,"./GenericWorker":28}],30:[function(e,t,r){if(r.base64=!0,r.array=!0,r.string=!0,r.arraybuffer="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof Uint8Array,r.nodebuffer="undefined"!=typeof Buffer,r.uint8array="undefined"!=typeof Uint8Array,"undefined"==typeof ArrayBuffer)r.blob=!1;else {var n=new ArrayBuffer(0);try{r.blob=0===new Blob([n],{type:"application/zip"}).size;}catch(e){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);i.append(n),r.blob=0===i.getBlob("application/zip").size;}catch(e){r.blob=!1;}}}try{r.nodestream=!!e("readable-stream").Readable;}catch(e){r.nodestream=!1;}},{"readable-stream":16}],31:[function(e,t,s){for(var a=e("./utils"),f=e("./support"),r=e("./nodejsUtils"),n=e("./stream/GenericWorker"),u=new Array(256),i=0;i<256;i++)u[i]=252<=i?6:248<=i?5:240<=i?4:224<=i?3:192<=i?2:1;function o(){n.call(this,"utf-8 decode"),this.leftOver=null;}function d(){n.call(this,"utf-8 encode");}u[254]=u[254]=1,s.utf8encode=function(e){return f.nodebuffer?r.newBufferFrom(e,"utf-8"):function(e){var t,r,n,i,s,o=e.length,a=0;for(i=0;i<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<o&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),a+=r<128?1:r<2048?2:r<65536?3:4;for(t=f.uint8array?new Uint8Array(a):new Array(a),i=s=0;s<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<o&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t}(e)},s.utf8decode=function(e){return f.nodebuffer?a.transformTo("nodebuffer",e).toString("utf-8"):function(e){var t,r,n,i,s=e.length,o=new Array(2*s);for(t=r=0;t<s;)if((n=e[t++])<128)o[r++]=n;else if(4<(i=u[n]))o[r++]=65533,t+=i-1;else {for(n&=2===i?31:3===i?15:7;1<i&&t<s;)n=n<<6|63&e[t++],i--;1<i?o[r++]=65533:n<65536?o[r++]=n:(n-=65536,o[r++]=55296|n>>10&1023,o[r++]=56320|1023&n);}return o.length!==r&&(o.subarray?o=o.subarray(0,r):o.length=r),a.applyFromCharCode(o)}(e=a.transformTo(f.uint8array?"uint8array":"array",e))},a.inherits(o,n),o.prototype.processChunk=function(e){var t=a.transformTo(f.uint8array?"uint8array":"array",e.data);if(this.leftOver&&this.leftOver.length){if(f.uint8array){var r=t;(t=new Uint8Array(r.length+this.leftOver.length)).set(this.leftOver,0),t.set(r,this.leftOver.length);}else t=this.leftOver.concat(t);this.leftOver=null;}var n=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t}(t),i=t;n!==t.length&&(f.uint8array?(i=t.subarray(0,n),this.leftOver=t.subarray(n,t.length)):(i=t.slice(0,n),this.leftOver=t.slice(n,t.length))),this.push({data:s.utf8decode(i),meta:e.meta});},o.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:s.utf8decode(this.leftOver),meta:{}}),this.leftOver=null);},s.Utf8DecodeWorker=o,a.inherits(d,n),d.prototype.processChunk=function(e){this.push({data:s.utf8encode(e.data),meta:e.meta});},s.Utf8EncodeWorker=d;},{"./nodejsUtils":14,"./stream/GenericWorker":28,"./support":30,"./utils":32}],32:[function(e,t,a){var f=e("./support"),u=e("./base64"),r=e("./nodejsUtils"),n=e("set-immediate-shim"),d=e("./external");function i(e){return e}function h(e,t){for(var r=0;r<e.length;++r)t[r]=255&e.charCodeAt(r);return t}a.newBlob=function(t,r){a.checkSupport("blob");try{return new Blob([t],{type:r})}catch(e){try{var n=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return n.append(t),n.getBlob(r)}catch(e){throw new Error("Bug : can't construct the Blob.")}}};var s={stringifyByChunk:function(e,t,r){var n=[],i=0,s=e.length;if(s<=r)return String.fromCharCode.apply(null,e);for(;i<s;)"array"===t||"nodebuffer"===t?n.push(String.fromCharCode.apply(null,e.slice(i,Math.min(i+r,s)))):n.push(String.fromCharCode.apply(null,e.subarray(i,Math.min(i+r,s)))),i+=r;return n.join("")},stringifyByChar:function(e){for(var t="",r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t},applyCanBeUsed:{uint8array:function(){try{return f.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(e){return !1}}(),nodebuffer:function(){try{return f.nodebuffer&&1===String.fromCharCode.apply(null,r.allocBuffer(1)).length}catch(e){return !1}}()}};function o(e){var t=65536,r=a.getTypeOf(e),n=!0;if("uint8array"===r?n=s.applyCanBeUsed.uint8array:"nodebuffer"===r&&(n=s.applyCanBeUsed.nodebuffer),n)for(;1<t;)try{return s.stringifyByChunk(e,r,t)}catch(e){t=Math.floor(t/2);}return s.stringifyByChar(e)}function l(e,t){for(var r=0;r<e.length;r++)t[r]=e[r];return t}a.applyFromCharCode=o;var c={};c.string={string:i,array:function(e){return h(e,new Array(e.length))},arraybuffer:function(e){return c.string.uint8array(e).buffer},uint8array:function(e){return h(e,new Uint8Array(e.length))},nodebuffer:function(e){return h(e,r.allocBuffer(e.length))}},c.array={string:o,array:i,arraybuffer:function(e){return new Uint8Array(e).buffer},uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(e)}},c.arraybuffer={string:function(e){return o(new Uint8Array(e))},array:function(e){return l(new Uint8Array(e),new Array(e.byteLength))},arraybuffer:i,uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(new Uint8Array(e))}},c.uint8array={string:o,array:function(e){return l(e,new Array(e.length))},arraybuffer:function(e){return e.buffer},uint8array:i,nodebuffer:function(e){return r.newBufferFrom(e)}},c.nodebuffer={string:o,array:function(e){return l(e,new Array(e.length))},arraybuffer:function(e){return c.nodebuffer.uint8array(e).buffer},uint8array:function(e){return l(e,new Uint8Array(e.length))},nodebuffer:i},a.transformTo=function(e,t){if(t=t||"",!e)return t;a.checkSupport(e);var r=a.getTypeOf(t);return c[r][e](t)},a.getTypeOf=function(e){return "string"==typeof e?"string":"[object Array]"===Object.prototype.toString.call(e)?"array":f.nodebuffer&&r.isBuffer(e)?"nodebuffer":f.uint8array&&e instanceof Uint8Array?"uint8array":f.arraybuffer&&e instanceof ArrayBuffer?"arraybuffer":void 0},a.checkSupport=function(e){if(!f[e.toLowerCase()])throw new Error(e+" is not supported by this platform")},a.MAX_VALUE_16BITS=65535,a.MAX_VALUE_32BITS=-1,a.pretty=function(e){var t,r,n="";for(r=0;r<(e||"").length;r++)n+="\\x"+((t=e.charCodeAt(r))<16?"0":"")+t.toString(16).toUpperCase();return n},a.delay=function(e,t,r){n(function(){e.apply(r||null,t||[]);});},a.inherits=function(e,t){function r(){}r.prototype=t.prototype,e.prototype=new r;},a.extend=function(){var e,t,r={};for(e=0;e<arguments.length;e++)for(t in arguments[e])arguments[e].hasOwnProperty(t)&&void 0===r[t]&&(r[t]=arguments[e][t]);return r},a.prepareContent=function(n,e,i,s,o){return d.Promise.resolve(e).then(function(n){return f.blob&&(n instanceof Blob||-1!==["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(n)))&&"undefined"!=typeof FileReader?new d.Promise(function(t,r){var e=new FileReader;e.onload=function(e){t(e.target.result);},e.onerror=function(e){r(e.target.error);},e.readAsArrayBuffer(n);}):n}).then(function(e){var t,r=a.getTypeOf(e);return r?("arraybuffer"===r?e=a.transformTo("uint8array",e):"string"===r&&(o?e=u.decode(e):i&&!0!==s&&(e=h(t=e,f.uint8array?new Uint8Array(t.length):new Array(t.length)))),e):d.Promise.reject(new Error("Can't read the data of '"+n+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))})};},{"./base64":1,"./external":6,"./nodejsUtils":14,"./support":30,"set-immediate-shim":54}],33:[function(e,t,r){var n=e("./reader/readerFor"),i=e("./utils"),s=e("./signature"),o=e("./zipEntry"),a=(e("./utf8"),e("./support"));function f(e){this.files=[],this.loadOptions=e;}f.prototype={checkSignature:function(e){if(!this.reader.readAndCheckSignature(e)){this.reader.index-=4;var t=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+i.pretty(t)+", expected "+i.pretty(e)+")")}},isSignature:function(e,t){var r=this.reader.index;this.reader.setIndex(e);var n=this.reader.readString(4)===t;return this.reader.setIndex(r),n},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var e=this.reader.readData(this.zipCommentLength),t=a.uint8array?"uint8array":"array",r=i.transformTo(t,e);this.zipComment=this.loadOptions.decodeFileName(r);},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var e,t,r,n=this.zip64EndOfCentralSize-44;0<n;)e=this.reader.readInt(2),t=this.reader.readInt(4),r=this.reader.readData(t),this.zip64ExtensibleData[e]={id:e,length:t,value:r};},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error("Multi-volumes zip are not supported")},readLocalFiles:function(){var e,t;for(e=0;e<this.files.length;e++)t=this.files[e],this.reader.setIndex(t.localHeaderOffset),this.checkSignature(s.LOCAL_FILE_HEADER),t.readLocalPart(this.reader),t.handleUTF8(),t.processAttributes();},readCentralDir:function(){var e;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER);)(e=new o({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(e);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},readEndOfCentral:function(){var e=this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);if(e<0)throw this.isSignature(0,s.LOCAL_FILE_HEADER)?new Error("Corrupted zip: can't find end of central directory"):new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");this.reader.setIndex(e);var t=e;if(this.checkSignature(s.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,(e=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(e),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,s.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral();}var r=this.centralDirOffset+this.centralDirSize;this.zip64&&(r+=20,r+=12+this.zip64EndOfCentralSize);var n=t-r;if(0<n)this.isSignature(t,s.CENTRAL_FILE_HEADER)||(this.reader.zero=n);else if(n<0)throw new Error("Corrupted zip: missing "+Math.abs(n)+" bytes.")},prepareReader:function(e){this.reader=n(e);},load:function(e){this.prepareReader(e),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles();}},t.exports=f;},{"./reader/readerFor":22,"./signature":23,"./support":30,"./utf8":31,"./utils":32,"./zipEntry":34}],34:[function(e,t,r){var n=e("./reader/readerFor"),s=e("./utils"),i=e("./compressedObject"),o=e("./crc32"),a=e("./utf8"),f=e("./compressions"),u=e("./support");function d(e,t){this.options=e,this.loadOptions=t;}d.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(e){var t,r;if(e.skip(22),this.fileNameLength=e.readInt(2),r=e.readInt(2),this.fileName=e.readData(this.fileNameLength),e.skip(r),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");if(null===(t=function(e){for(var t in f)if(f.hasOwnProperty(t)&&f[t].magic===e)return f[t];return null}(this.compressionMethod)))throw new Error("Corrupted zip : compression "+s.pretty(this.compressionMethod)+" unknown (inner file : "+s.transformTo("string",this.fileName)+")");this.decompressed=new i(this.compressedSize,this.uncompressedSize,this.crc32,t,e.readData(this.compressedSize));},readCentralPart:function(e){this.versionMadeBy=e.readInt(2),e.skip(2),this.bitFlag=e.readInt(2),this.compressionMethod=e.readString(2),this.date=e.readDate(),this.crc32=e.readInt(4),this.compressedSize=e.readInt(4),this.uncompressedSize=e.readInt(4);var t=e.readInt(2);if(this.extraFieldsLength=e.readInt(2),this.fileCommentLength=e.readInt(2),this.diskNumberStart=e.readInt(2),this.internalFileAttributes=e.readInt(2),this.externalFileAttributes=e.readInt(4),this.localHeaderOffset=e.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");e.skip(t),this.readExtraFields(e),this.parseZIP64ExtraField(e),this.fileComment=e.readData(this.fileCommentLength);},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var e=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0==e&&(this.dosPermissions=63&this.externalFileAttributes),3==e&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||"/"!==this.fileNameStr.slice(-1)||(this.dir=!0);},parseZIP64ExtraField:function(e){if(this.extraFields[1]){var t=n(this.extraFields[1].value);this.uncompressedSize===s.MAX_VALUE_32BITS&&(this.uncompressedSize=t.readInt(8)),this.compressedSize===s.MAX_VALUE_32BITS&&(this.compressedSize=t.readInt(8)),this.localHeaderOffset===s.MAX_VALUE_32BITS&&(this.localHeaderOffset=t.readInt(8)),this.diskNumberStart===s.MAX_VALUE_32BITS&&(this.diskNumberStart=t.readInt(4));}},readExtraFields:function(e){var t,r,n,i=e.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});e.index+4<i;)t=e.readInt(2),r=e.readInt(2),n=e.readData(r),this.extraFields[t]={id:t,length:r,value:n};e.setIndex(i);},handleUTF8:function(){var e=u.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=a.utf8decode(this.fileName),this.fileCommentStr=a.utf8decode(this.fileComment);else {var t=this.findExtraFieldUnicodePath();if(null!==t)this.fileNameStr=t;else {var r=s.transformTo(e,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(r);}var n=this.findExtraFieldUnicodeComment();if(null!==n)this.fileCommentStr=n;else {var i=s.transformTo(e,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(i);}}},findExtraFieldUnicodePath:function(){var e=this.extraFields[28789];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:o(this.fileName)!==t.readInt(4)?null:a.utf8decode(t.readData(e.length-5))}return null},findExtraFieldUnicodeComment:function(){var e=this.extraFields[25461];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:o(this.fileComment)!==t.readInt(4)?null:a.utf8decode(t.readData(e.length-5))}return null}},t.exports=d;},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":22,"./support":30,"./utf8":31,"./utils":32}],35:[function(e,t,r){function n(e,t,r){this.name=e,this.dir=r.dir,this.date=r.date,this.comment=r.comment,this.unixPermissions=r.unixPermissions,this.dosPermissions=r.dosPermissions,this._data=t,this._dataBinary=r.binary,this.options={compression:r.compression,compressionOptions:r.compressionOptions};}var s=e("./stream/StreamHelper"),i=e("./stream/DataWorker"),o=e("./utf8"),a=e("./compressedObject"),f=e("./stream/GenericWorker");n.prototype={internalStream:function(e){var t=null,r="string";try{if(!e)throw new Error("No output type specified.");var n="string"===(r=e.toLowerCase())||"text"===r;"binarystring"!==r&&"text"!==r||(r="string"),t=this._decompressWorker();var i=!this._dataBinary;i&&!n&&(t=t.pipe(new o.Utf8EncodeWorker)),!i&&n&&(t=t.pipe(new o.Utf8DecodeWorker));}catch(e){(t=new f("error")).error(e);}return new s(t,r,"")},async:function(e,t){return this.internalStream(e).accumulate(t)},nodeStream:function(e,t){return this.internalStream(e||"nodebuffer").toNodejsStream(t)},_compressWorker:function(e,t){if(this._data instanceof a&&this._data.compression.magic===e.magic)return this._data.getCompressedWorker();var r=this._decompressWorker();return this._dataBinary||(r=r.pipe(new o.Utf8EncodeWorker)),a.createWorkerFrom(r,e,t)},_decompressWorker:function(){return this._data instanceof a?this._data.getContentWorker():this._data instanceof f?this._data:new i(this._data)}};for(var u=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],d=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},h=0;h<u.length;h++)n.prototype[u[h]]=d;t.exports=n;},{"./compressedObject":2,"./stream/DataWorker":27,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31}],36:[function(e,d,t){(function(t){var r,n,e=t.MutationObserver||t.WebKitMutationObserver;if(e){var i=0,s=new e(u),o=t.document.createTextNode("");s.observe(o,{characterData:!0}),r=function(){o.data=i=++i%2;};}else if(t.setImmediate||void 0===t.MessageChannel)r="document"in t&&"onreadystatechange"in t.document.createElement("script")?function(){var e=t.document.createElement("script");e.onreadystatechange=function(){u(),e.onreadystatechange=null,e.parentNode.removeChild(e),e=null;},t.document.documentElement.appendChild(e);}:function(){setTimeout(u,0);};else {var a=new t.MessageChannel;a.port1.onmessage=u,r=function(){a.port2.postMessage(0);};}var f=[];function u(){var e,t;n=!0;for(var r=f.length;r;){for(t=f,f=[],e=-1;++e<r;)t[e]();r=f.length;}n=!1;}d.exports=function(e){1!==f.push(e)||n||r();};}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}],37:[function(e,t,r){var i=e("immediate");function u(){}var d={},s=["REJECTED"],o=["FULFILLED"],n=["PENDING"];function a(e){if("function"!=typeof e)throw new TypeError("resolver must be a function");this.state=n,this.queue=[],this.outcome=void 0,e!==u&&c(this,e);}function f(e,t,r){this.promise=e,"function"==typeof t&&(this.onFulfilled=t,this.callFulfilled=this.otherCallFulfilled),"function"==typeof r&&(this.onRejected=r,this.callRejected=this.otherCallRejected);}function h(t,r,n){i(function(){var e;try{e=r(n);}catch(e){return d.reject(t,e)}e===t?d.reject(t,new TypeError("Cannot resolve promise with itself")):d.resolve(t,e);});}function l(e){var t=e&&e.then;if(e&&("object"==typeof e||"function"==typeof e)&&"function"==typeof t)return function(){t.apply(e,arguments);}}function c(t,e){var r=!1;function n(e){r||(r=!0,d.reject(t,e));}function i(e){r||(r=!0,d.resolve(t,e));}var s=p(function(){e(i,n);});"error"===s.status&&n(s.value);}function p(e,t){var r={};try{r.value=e(t),r.status="success";}catch(e){r.status="error",r.value=e;}return r}(t.exports=a).prototype.finally=function(t){if("function"!=typeof t)return this;var r=this.constructor;return this.then(function(e){return r.resolve(t()).then(function(){return e})},function(e){return r.resolve(t()).then(function(){throw e})})},a.prototype.catch=function(e){return this.then(null,e)},a.prototype.then=function(e,t){if("function"!=typeof e&&this.state===o||"function"!=typeof t&&this.state===s)return this;var r=new this.constructor(u);return this.state!==n?h(r,this.state===o?e:t,this.outcome):this.queue.push(new f(r,e,t)),r},f.prototype.callFulfilled=function(e){d.resolve(this.promise,e);},f.prototype.otherCallFulfilled=function(e){h(this.promise,this.onFulfilled,e);},f.prototype.callRejected=function(e){d.reject(this.promise,e);},f.prototype.otherCallRejected=function(e){h(this.promise,this.onRejected,e);},d.resolve=function(e,t){var r=p(l,t);if("error"===r.status)return d.reject(e,r.value);var n=r.value;if(n)c(e,n);else {e.state=o,e.outcome=t;for(var i=-1,s=e.queue.length;++i<s;)e.queue[i].callFulfilled(t);}return e},d.reject=function(e,t){e.state=s,e.outcome=t;for(var r=-1,n=e.queue.length;++r<n;)e.queue[r].callRejected(t);return e},a.resolve=function(e){return e instanceof this?e:d.resolve(new this(u),e)},a.reject=function(e){var t=new this(u);return d.reject(t,e)},a.all=function(e){var r=this;if("[object Array]"!==Object.prototype.toString.call(e))return this.reject(new TypeError("must be an array"));var n=e.length,i=!1;if(!n)return this.resolve([]);for(var s=new Array(n),o=0,t=-1,a=new this(u);++t<n;)f(e[t],t);return a;function f(e,t){r.resolve(e).then(function(e){s[t]=e,++o!==n||i||(i=!0,d.resolve(a,s));},function(e){i||(i=!0,d.reject(a,e));});}},a.race=function(e){if("[object Array]"!==Object.prototype.toString.call(e))return this.reject(new TypeError("must be an array"));var t=e.length,r=!1;if(!t)return this.resolve([]);for(var n,i=-1,s=new this(u);++i<t;)n=e[i],this.resolve(n).then(function(e){r||(r=!0,d.resolve(s,e));},function(e){r||(r=!0,d.reject(s,e));});return s};},{immediate:36}],38:[function(e,t,r){var n={};(0, e("./lib/utils/common").assign)(n,e("./lib/deflate"),e("./lib/inflate"),e("./lib/zlib/constants")),t.exports=n;},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(e,t,r){var o=e("./zlib/deflate"),a=e("./utils/common"),f=e("./utils/strings"),i=e("./zlib/messages"),s=e("./zlib/zstream"),u=Object.prototype.toString,d=0,h=-1,l=0,c=8;function p(e){if(!(this instanceof p))return new p(e);this.options=a.assign({level:h,method:c,chunkSize:16384,windowBits:15,memLevel:8,strategy:l,to:""},e||{});var t=this.options;t.raw&&0<t.windowBits?t.windowBits=-t.windowBits:t.gzip&&0<t.windowBits&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new s,this.strm.avail_out=0;var r=o.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(r!==d)throw new Error(i[r]);if(t.header&&o.deflateSetHeader(this.strm,t.header),t.dictionary){var n;if(n="string"==typeof t.dictionary?f.string2buf(t.dictionary):"[object ArrayBuffer]"===u.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,(r=o.deflateSetDictionary(this.strm,n))!==d)throw new Error(i[r]);this._dict_set=!0;}}function n(e,t){var r=new p(t);if(r.push(e,!0),r.err)throw r.msg||i[r.err];return r.result}p.prototype.push=function(e,t){var r,n,i=this.strm,s=this.options.chunkSize;if(this.ended)return !1;n=t===~~t?t:!0===t?4:0,"string"==typeof e?i.input=f.string2buf(e):"[object ArrayBuffer]"===u.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;do{if(0===i.avail_out&&(i.output=new a.Buf8(s),i.next_out=0,i.avail_out=s),1!==(r=o.deflate(i,n))&&r!==d)return this.onEnd(r),!(this.ended=!0);0!==i.avail_out&&(0!==i.avail_in||4!==n&&2!==n)||("string"===this.options.to?this.onData(f.buf2binstring(a.shrinkBuf(i.output,i.next_out))):this.onData(a.shrinkBuf(i.output,i.next_out)));}while((0<i.avail_in||0===i.avail_out)&&1!==r);return 4===n?(r=o.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===d):2!==n||(this.onEnd(d),!(i.avail_out=0))},p.prototype.onData=function(e){this.chunks.push(e);},p.prototype.onEnd=function(e){e===d&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=a.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg;},r.Deflate=p,r.deflate=n,r.deflateRaw=function(e,t){return (t=t||{}).raw=!0,n(e,t)},r.gzip=function(e,t){return (t=t||{}).gzip=!0,n(e,t)};},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(e,t,r){var l=e("./zlib/inflate"),c=e("./utils/common"),p=e("./utils/strings"),m=e("./zlib/constants"),n=e("./zlib/messages"),i=e("./zlib/zstream"),s=e("./zlib/gzheader"),_=Object.prototype.toString;function o(e){if(!(this instanceof o))return new o(e);this.options=c.assign({chunkSize:16384,windowBits:0,to:""},e||{});var t=this.options;t.raw&&0<=t.windowBits&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(0<=t.windowBits&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),15<t.windowBits&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new i,this.strm.avail_out=0;var r=l.inflateInit2(this.strm,t.windowBits);if(r!==m.Z_OK)throw new Error(n[r]);this.header=new s,l.inflateGetHeader(this.strm,this.header);}function a(e,t){var r=new o(t);if(r.push(e,!0),r.err)throw r.msg||n[r.err];return r.result}o.prototype.push=function(e,t){var r,n,i,s,o,a,f=this.strm,u=this.options.chunkSize,d=this.options.dictionary,h=!1;if(this.ended)return !1;n=t===~~t?t:!0===t?m.Z_FINISH:m.Z_NO_FLUSH,"string"==typeof e?f.input=p.binstring2buf(e):"[object ArrayBuffer]"===_.call(e)?f.input=new Uint8Array(e):f.input=e,f.next_in=0,f.avail_in=f.input.length;do{if(0===f.avail_out&&(f.output=new c.Buf8(u),f.next_out=0,f.avail_out=u),(r=l.inflate(f,m.Z_NO_FLUSH))===m.Z_NEED_DICT&&d&&(a="string"==typeof d?p.string2buf(d):"[object ArrayBuffer]"===_.call(d)?new Uint8Array(d):d,r=l.inflateSetDictionary(this.strm,a)),r===m.Z_BUF_ERROR&&!0===h&&(r=m.Z_OK,h=!1),r!==m.Z_STREAM_END&&r!==m.Z_OK)return this.onEnd(r),!(this.ended=!0);f.next_out&&(0!==f.avail_out&&r!==m.Z_STREAM_END&&(0!==f.avail_in||n!==m.Z_FINISH&&n!==m.Z_SYNC_FLUSH)||("string"===this.options.to?(i=p.utf8border(f.output,f.next_out),s=f.next_out-i,o=p.buf2string(f.output,i),f.next_out=s,f.avail_out=u-s,s&&c.arraySet(f.output,f.output,i,s,0),this.onData(o)):this.onData(c.shrinkBuf(f.output,f.next_out)))),0===f.avail_in&&0===f.avail_out&&(h=!0);}while((0<f.avail_in||0===f.avail_out)&&r!==m.Z_STREAM_END);return r===m.Z_STREAM_END&&(n=m.Z_FINISH),n===m.Z_FINISH?(r=l.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===m.Z_OK):n!==m.Z_SYNC_FLUSH||(this.onEnd(m.Z_OK),!(f.avail_out=0))},o.prototype.onData=function(e){this.chunks.push(e);},o.prototype.onEnd=function(e){e===m.Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=c.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg;},r.Inflate=o,r.inflate=a,r.inflateRaw=function(e,t){return (t=t||{}).raw=!0,a(e,t)},r.ungzip=a;},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(e,t,r){var n="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;r.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var r=t.shift();if(r){if("object"!=typeof r)throw new TypeError(r+"must be non-object");for(var n in r)r.hasOwnProperty(n)&&(e[n]=r[n]);}}return e},r.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var i={arraySet:function(e,t,r,n,i){if(t.subarray&&e.subarray)e.set(t.subarray(r,r+n),i);else for(var s=0;s<n;s++)e[i+s]=t[r+s];},flattenChunks:function(e){var t,r,n,i,s,o;for(t=n=0,r=e.length;t<r;t++)n+=e[t].length;for(o=new Uint8Array(n),t=i=0,r=e.length;t<r;t++)s=e[t],o.set(s,i),i+=s.length;return o}},s={arraySet:function(e,t,r,n,i){for(var s=0;s<n;s++)e[i+s]=t[r+s];},flattenChunks:function(e){return [].concat.apply([],e)}};r.setTyped=function(e){e?(r.Buf8=Uint8Array,r.Buf16=Uint16Array,r.Buf32=Int32Array,r.assign(r,i)):(r.Buf8=Array,r.Buf16=Array,r.Buf32=Array,r.assign(r,s));},r.setTyped(n);},{}],42:[function(e,t,r){var f=e("./common"),i=!0,s=!0;try{String.fromCharCode.apply(null,[0]);}catch(e){i=!1;}try{String.fromCharCode.apply(null,new Uint8Array(1));}catch(e){s=!1;}for(var u=new f.Buf8(256),n=0;n<256;n++)u[n]=252<=n?6:248<=n?5:240<=n?4:224<=n?3:192<=n?2:1;function d(e,t){if(t<65537&&(e.subarray&&s||!e.subarray&&i))return String.fromCharCode.apply(null,f.shrinkBuf(e,t));for(var r="",n=0;n<t;n++)r+=String.fromCharCode(e[n]);return r}u[254]=u[254]=1,r.string2buf=function(e){var t,r,n,i,s,o=e.length,a=0;for(i=0;i<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<o&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),a+=r<128?1:r<2048?2:r<65536?3:4;for(t=new f.Buf8(a),i=s=0;s<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<o&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t},r.buf2binstring=function(e){return d(e,e.length)},r.binstring2buf=function(e){for(var t=new f.Buf8(e.length),r=0,n=t.length;r<n;r++)t[r]=e.charCodeAt(r);return t},r.buf2string=function(e,t){var r,n,i,s,o=t||e.length,a=new Array(2*o);for(r=n=0;r<o;)if((i=e[r++])<128)a[n++]=i;else if(4<(s=u[i]))a[n++]=65533,r+=s-1;else {for(i&=2===s?31:3===s?15:7;1<s&&r<o;)i=i<<6|63&e[r++],s--;1<s?a[n++]=65533:i<65536?a[n++]=i:(i-=65536,a[n++]=55296|i>>10&1023,a[n++]=56320|1023&i);}return d(a,n)},r.utf8border=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t};},{"./common":41}],43:[function(e,t,r){t.exports=function(e,t,r,n){for(var i=65535&e|0,s=e>>>16&65535|0,o=0;0!==r;){for(r-=o=2e3<r?2e3:r;s=s+(i=i+t[n++]|0)|0,--o;);i%=65521,s%=65521;}return i|s<<16|0};},{}],44:[function(e,t,r){t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};},{}],45:[function(e,t,r){var a=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e;}return t}();t.exports=function(e,t,r,n){var i=a,s=n+r;e^=-1;for(var o=n;o<s;o++)e=e>>>8^i[255&(e^t[o])];return -1^e};},{}],46:[function(e,t,r){var f,l=e("../utils/common"),u=e("./trees"),c=e("./adler32"),p=e("./crc32"),n=e("./messages"),d=0,h=0,m=-2,i=2,_=8,s=286,o=30,a=19,w=2*s+1,v=15,g=3,y=258,b=y+g+1,k=42,x=113;function S(e,t){return e.msg=n[t],t}function E(e){return (e<<1)-(4<e?9:0)}function z(e){for(var t=e.length;0<=--t;)e[t]=0;}function C(e){var t=e.state,r=t.pending;r>e.avail_out&&(r=e.avail_out),0!==r&&(l.arraySet(e.output,t.pending_buf,t.pending_out,r,e.next_out),e.next_out+=r,t.pending_out+=r,e.total_out+=r,e.avail_out-=r,t.pending-=r,0===t.pending&&(t.pending_out=0));}function A(e,t){u._tr_flush_block(e,0<=e.block_start?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,C(e.strm);}function O(e,t){e.pending_buf[e.pending++]=t;}function I(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t;}function D(e,t){var r,n,i=e.max_chain_length,s=e.strstart,o=e.prev_length,a=e.nice_match,f=e.strstart>e.w_size-b?e.strstart-(e.w_size-b):0,u=e.window,d=e.w_mask,h=e.prev,l=e.strstart+y,c=u[s+o-1],p=u[s+o];e.prev_length>=e.good_match&&(i>>=2),a>e.lookahead&&(a=e.lookahead);do{if(u[(r=t)+o]===p&&u[r+o-1]===c&&u[r]===u[s]&&u[++r]===u[s+1]){s+=2,r++;do{}while(u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&s<l);if(n=y-(l-s),s=l-y,o<n){if(e.match_start=t,a<=(o=n))break;c=u[s+o-1],p=u[s+o];}}}while((t=h[t&d])>f&&0!=--i);return o<=e.lookahead?o:e.lookahead}function B(e){var t,r,n,i,s,o,a,f,u,d,h=e.w_size;do{if(i=e.window_size-e.lookahead-e.strstart,e.strstart>=h+(h-b)){for(l.arraySet(e.window,e.window,h,h,0),e.match_start-=h,e.strstart-=h,e.block_start-=h,t=r=e.hash_size;n=e.head[--t],e.head[t]=h<=n?n-h:0,--r;);for(t=r=h;n=e.prev[--t],e.prev[t]=h<=n?n-h:0,--r;);i+=h;}if(0===e.strm.avail_in)break;if(o=e.strm,a=e.window,f=e.strstart+e.lookahead,d=void 0,(u=i)<(d=o.avail_in)&&(d=u),r=0===d?0:(o.avail_in-=d,l.arraySet(a,o.input,o.next_in,d,f),1===o.state.wrap?o.adler=c(o.adler,a,d,f):2===o.state.wrap&&(o.adler=p(o.adler,a,d,f)),o.next_in+=d,o.total_in+=d,d),e.lookahead+=r,e.lookahead+e.insert>=g)for(s=e.strstart-e.insert,e.ins_h=e.window[s],e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+g-1])&e.hash_mask,e.prev[s&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=s,s++,e.insert--,!(e.lookahead+e.insert<g)););}while(e.lookahead<b&&0!==e.strm.avail_in)}function T(e,t){for(var r,n;;){if(e.lookahead<b){if(B(e),e.lookahead<b&&t===d)return 1;if(0===e.lookahead)break}if(r=0,e.lookahead>=g&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+g-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==r&&e.strstart-r<=e.w_size-b&&(e.match_length=D(e,r)),e.match_length>=g)if(n=u._tr_tally(e,e.strstart-e.match_start,e.match_length-g),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=g){for(e.match_length--;e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+g-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart,0!=--e.match_length;);e.strstart++;}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else n=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(A(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<g-1?e.strstart:g-1,4===t?(A(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(A(e,!1),0===e.strm.avail_out)?1:2}function R(e,t){for(var r,n,i;;){if(e.lookahead<b){if(B(e),e.lookahead<b&&t===d)return 1;if(0===e.lookahead)break}if(r=0,e.lookahead>=g&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+g-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=g-1,0!==r&&e.prev_length<e.max_lazy_match&&e.strstart-r<=e.w_size-b&&(e.match_length=D(e,r),e.match_length<=5&&(1===e.strategy||e.match_length===g&&4096<e.strstart-e.match_start)&&(e.match_length=g-1)),e.prev_length>=g&&e.match_length<=e.prev_length){for(i=e.strstart+e.lookahead-g,n=u._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-g),e.lookahead-=e.prev_length-1,e.prev_length-=2;++e.strstart<=i&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+g-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!=--e.prev_length;);if(e.match_available=0,e.match_length=g-1,e.strstart++,n&&(A(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if((n=u._tr_tally(e,0,e.window[e.strstart-1]))&&A(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--;}return e.match_available&&(n=u._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<g-1?e.strstart:g-1,4===t?(A(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(A(e,!1),0===e.strm.avail_out)?1:2}function F(e,t,r,n,i){this.good_length=e,this.max_lazy=t,this.nice_length=r,this.max_chain=n,this.func=i;}function N(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=_,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new l.Buf16(2*w),this.dyn_dtree=new l.Buf16(2*(2*o+1)),this.bl_tree=new l.Buf16(2*(2*a+1)),z(this.dyn_ltree),z(this.dyn_dtree),z(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new l.Buf16(v+1),this.heap=new l.Buf16(2*s+1),z(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new l.Buf16(2*s+1),z(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0;}function U(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=i,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?k:x,e.adler=2===t.wrap?0:1,t.last_flush=d,u._tr_init(t),h):S(e,m)}function L(e){var t,r=U(e);return r===h&&((t=e.state).window_size=2*t.w_size,z(t.head),t.max_lazy_match=f[t.level].max_lazy,t.good_match=f[t.level].good_length,t.nice_match=f[t.level].nice_length,t.max_chain_length=f[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=g-1,t.match_available=0,t.ins_h=0),r}function P(e,t,r,n,i,s){if(!e)return m;var o=1;if(-1===t&&(t=6),n<0?(o=0,n=-n):15<n&&(o=2,n-=16),i<1||9<i||r!==_||n<8||15<n||t<0||9<t||s<0||4<s)return S(e,m);8===n&&(n=9);var a=new N;return (e.state=a).strm=e,a.wrap=o,a.gzhead=null,a.w_bits=n,a.w_size=1<<a.w_bits,a.w_mask=a.w_size-1,a.hash_bits=i+7,a.hash_size=1<<a.hash_bits,a.hash_mask=a.hash_size-1,a.hash_shift=~~((a.hash_bits+g-1)/g),a.window=new l.Buf8(2*a.w_size),a.head=new l.Buf16(a.hash_size),a.prev=new l.Buf16(a.w_size),a.lit_bufsize=1<<i+6,a.pending_buf_size=4*a.lit_bufsize,a.pending_buf=new l.Buf8(a.pending_buf_size),a.d_buf=1*a.lit_bufsize,a.l_buf=3*a.lit_bufsize,a.level=t,a.strategy=s,a.method=r,L(e)}f=[new F(0,0,0,0,function(e,t){var r=65535;for(r>e.pending_buf_size-5&&(r=e.pending_buf_size-5);;){if(e.lookahead<=1){if(B(e),0===e.lookahead&&t===d)return 1;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var n=e.block_start+r;if((0===e.strstart||e.strstart>=n)&&(e.lookahead=e.strstart-n,e.strstart=n,A(e,!1),0===e.strm.avail_out))return 1;if(e.strstart-e.block_start>=e.w_size-b&&(A(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,4===t?(A(e,!0),0===e.strm.avail_out?3:4):(e.strstart>e.block_start&&(A(e,!1),e.strm.avail_out),1)}),new F(4,4,8,4,T),new F(4,5,16,8,T),new F(4,6,32,32,T),new F(4,4,16,16,R),new F(8,16,32,32,R),new F(8,16,128,128,R),new F(8,32,128,256,R),new F(32,128,258,1024,R),new F(32,258,258,4096,R)],r.deflateInit=function(e,t){return P(e,t,_,15,8,0)},r.deflateInit2=P,r.deflateReset=L,r.deflateResetKeep=U,r.deflateSetHeader=function(e,t){return e&&e.state?2!==e.state.wrap?m:(e.state.gzhead=t,h):m},r.deflate=function(e,t){var r,n,i,s;if(!e||!e.state||5<t||t<0)return e?S(e,m):m;if(n=e.state,!e.output||!e.input&&0!==e.avail_in||666===n.status&&4!==t)return S(e,0===e.avail_out?-5:m);if(n.strm=e,r=n.last_flush,n.last_flush=t,n.status===k)if(2===n.wrap)e.adler=0,O(n,31),O(n,139),O(n,8),n.gzhead?(O(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),O(n,255&n.gzhead.time),O(n,n.gzhead.time>>8&255),O(n,n.gzhead.time>>16&255),O(n,n.gzhead.time>>24&255),O(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),O(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(O(n,255&n.gzhead.extra.length),O(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(e.adler=p(e.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=69):(O(n,0),O(n,0),O(n,0),O(n,0),O(n,0),O(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),O(n,3),n.status=x);else {var o=_+(n.w_bits-8<<4)<<8;o|=(2<=n.strategy||n.level<2?0:n.level<6?1:6===n.level?2:3)<<6,0!==n.strstart&&(o|=32),o+=31-o%31,n.status=x,I(n,o),0!==n.strstart&&(I(n,e.adler>>>16),I(n,65535&e.adler)),e.adler=1;}if(69===n.status)if(n.gzhead.extra){for(i=n.pending;n.gzindex<(65535&n.gzhead.extra.length)&&(n.pending!==n.pending_buf_size||(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),C(e),i=n.pending,n.pending!==n.pending_buf_size));)O(n,255&n.gzhead.extra[n.gzindex]),n.gzindex++;n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),n.gzindex===n.gzhead.extra.length&&(n.gzindex=0,n.status=73);}else n.status=73;if(73===n.status)if(n.gzhead.name){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),C(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,O(n,s);}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.gzindex=0,n.status=91);}else n.status=91;if(91===n.status)if(n.gzhead.comment){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),C(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,O(n,s);}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.status=103);}else n.status=103;if(103===n.status&&(n.gzhead.hcrc?(n.pending+2>n.pending_buf_size&&C(e),n.pending+2<=n.pending_buf_size&&(O(n,255&e.adler),O(n,e.adler>>8&255),e.adler=0,n.status=x)):n.status=x),0!==n.pending){if(C(e),0===e.avail_out)return n.last_flush=-1,h}else if(0===e.avail_in&&E(t)<=E(r)&&4!==t)return S(e,-5);if(666===n.status&&0!==e.avail_in)return S(e,-5);if(0!==e.avail_in||0!==n.lookahead||t!==d&&666!==n.status){var a=2===n.strategy?function(e,t){for(var r;;){if(0===e.lookahead&&(B(e),0===e.lookahead)){if(t===d)return 1;break}if(e.match_length=0,r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,r&&(A(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,4===t?(A(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(A(e,!1),0===e.strm.avail_out)?1:2}(n,t):3===n.strategy?function(e,t){for(var r,n,i,s,o=e.window;;){if(e.lookahead<=y){if(B(e),e.lookahead<=y&&t===d)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=g&&0<e.strstart&&(n=o[i=e.strstart-1])===o[++i]&&n===o[++i]&&n===o[++i]){s=e.strstart+y;do{}while(n===o[++i]&&n===o[++i]&&n===o[++i]&&n===o[++i]&&n===o[++i]&&n===o[++i]&&n===o[++i]&&n===o[++i]&&i<s);e.match_length=y-(s-i),e.match_length>e.lookahead&&(e.match_length=e.lookahead);}if(e.match_length>=g?(r=u._tr_tally(e,1,e.match_length-g),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),r&&(A(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,4===t?(A(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(A(e,!1),0===e.strm.avail_out)?1:2}(n,t):f[n.level].func(n,t);if(3!==a&&4!==a||(n.status=666),1===a||3===a)return 0===e.avail_out&&(n.last_flush=-1),h;if(2===a&&(1===t?u._tr_align(n):5!==t&&(u._tr_stored_block(n,0,0,!1),3===t&&(z(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),C(e),0===e.avail_out))return n.last_flush=-1,h}return 4!==t?h:n.wrap<=0?1:(2===n.wrap?(O(n,255&e.adler),O(n,e.adler>>8&255),O(n,e.adler>>16&255),O(n,e.adler>>24&255),O(n,255&e.total_in),O(n,e.total_in>>8&255),O(n,e.total_in>>16&255),O(n,e.total_in>>24&255)):(I(n,e.adler>>>16),I(n,65535&e.adler)),C(e),0<n.wrap&&(n.wrap=-n.wrap),0!==n.pending?h:1)},r.deflateEnd=function(e){var t;return e&&e.state?(t=e.state.status)!==k&&69!==t&&73!==t&&91!==t&&103!==t&&t!==x&&666!==t?S(e,m):(e.state=null,t===x?S(e,-3):h):m},r.deflateSetDictionary=function(e,t){var r,n,i,s,o,a,f,u,d=t.length;if(!e||!e.state)return m;if(2===(s=(r=e.state).wrap)||1===s&&r.status!==k||r.lookahead)return m;for(1===s&&(e.adler=c(e.adler,t,d,0)),r.wrap=0,d>=r.w_size&&(0===s&&(z(r.head),r.strstart=0,r.block_start=0,r.insert=0),u=new l.Buf8(r.w_size),l.arraySet(u,t,d-r.w_size,r.w_size,0),t=u,d=r.w_size),o=e.avail_in,a=e.next_in,f=e.input,e.avail_in=d,e.next_in=0,e.input=t,B(r);r.lookahead>=g;){for(n=r.strstart,i=r.lookahead-(g-1);r.ins_h=(r.ins_h<<r.hash_shift^r.window[n+g-1])&r.hash_mask,r.prev[n&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=n,n++,--i;);r.strstart=n,r.lookahead=g-1,B(r);}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=g-1,r.match_available=0,e.next_in=a,e.input=f,e.avail_in=o,r.wrap=s,h},r.deflateInfo="pako deflate (from Nodeca project)";},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(e,t,r){t.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1;};},{}],48:[function(e,t,r){t.exports=function(e,t){var r,n,i,s,o,a,f,u,d,h,l,c,p,m,_,w,v,g,y,b,k,x,S,E,z;r=e.state,n=e.next_in,E=e.input,i=n+(e.avail_in-5),s=e.next_out,z=e.output,o=s-(t-e.avail_out),a=s+(e.avail_out-257),f=r.dmax,u=r.wsize,d=r.whave,h=r.wnext,l=r.window,c=r.hold,p=r.bits,m=r.lencode,_=r.distcode,w=(1<<r.lenbits)-1,v=(1<<r.distbits)-1;e:do{p<15&&(c+=E[n++]<<p,p+=8,c+=E[n++]<<p,p+=8),g=m[c&w];t:for(;;){if(c>>>=y=g>>>24,p-=y,0==(y=g>>>16&255))z[s++]=65535&g;else {if(!(16&y)){if(0==(64&y)){g=m[(65535&g)+(c&(1<<y)-1)];continue t}if(32&y){r.mode=12;break e}e.msg="invalid literal/length code",r.mode=30;break e}b=65535&g,(y&=15)&&(p<y&&(c+=E[n++]<<p,p+=8),b+=c&(1<<y)-1,c>>>=y,p-=y),p<15&&(c+=E[n++]<<p,p+=8,c+=E[n++]<<p,p+=8),g=_[c&v];r:for(;;){if(c>>>=y=g>>>24,p-=y,!(16&(y=g>>>16&255))){if(0==(64&y)){g=_[(65535&g)+(c&(1<<y)-1)];continue r}e.msg="invalid distance code",r.mode=30;break e}if(k=65535&g,p<(y&=15)&&(c+=E[n++]<<p,(p+=8)<y&&(c+=E[n++]<<p,p+=8)),f<(k+=c&(1<<y)-1)){e.msg="invalid distance too far back",r.mode=30;break e}if(c>>>=y,p-=y,(y=s-o)<k){if(d<(y=k-y)&&r.sane){e.msg="invalid distance too far back",r.mode=30;break e}if(S=l,(x=0)===h){if(x+=u-y,y<b){for(b-=y;z[s++]=l[x++],--y;);x=s-k,S=z;}}else if(h<y){if(x+=u+h-y,(y-=h)<b){for(b-=y;z[s++]=l[x++],--y;);if(x=0,h<b){for(b-=y=h;z[s++]=l[x++],--y;);x=s-k,S=z;}}}else if(x+=h-y,y<b){for(b-=y;z[s++]=l[x++],--y;);x=s-k,S=z;}for(;2<b;)z[s++]=S[x++],z[s++]=S[x++],z[s++]=S[x++],b-=3;b&&(z[s++]=S[x++],1<b&&(z[s++]=S[x++]));}else {for(x=s-k;z[s++]=z[x++],z[s++]=z[x++],z[s++]=z[x++],2<(b-=3););b&&(z[s++]=z[x++],1<b&&(z[s++]=z[x++]));}break}}break}}while(n<i&&s<a);n-=b=p>>3,c&=(1<<(p-=b<<3))-1,e.next_in=n,e.next_out=s,e.avail_in=n<i?i-n+5:5-(n-i),e.avail_out=s<a?a-s+257:257-(s-a),r.hold=c,r.bits=p;};},{}],49:[function(e,t,r){var O=e("../utils/common"),I=e("./adler32"),D=e("./crc32"),B=e("./inffast"),T=e("./inftrees"),R=1,F=2,N=0,U=-2,L=1,n=852,i=592;function P(e){return (e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function s(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new O.Buf16(320),this.work=new O.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0;}function o(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=L,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new O.Buf32(n),t.distcode=t.distdyn=new O.Buf32(i),t.sane=1,t.back=-1,N):U}function a(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,o(e)):U}function f(e,t){var r,n;return e&&e.state?(n=e.state,t<0?(r=0,t=-t):(r=1+(t>>4),t<48&&(t&=15)),t&&(t<8||15<t)?U:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=r,n.wbits=t,a(e))):U}function u(e,t){var r,n;return e?(n=new s,(e.state=n).window=null,(r=f(e,t))!==N&&(e.state=null),r):U}var d,h,l=!0;function j(e){if(l){var t;for(d=new O.Buf32(512),h=new O.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(T(R,e.lens,0,288,d,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;T(F,e.lens,0,32,h,0,e.work,{bits:5}),l=!1;}e.lencode=d,e.lenbits=9,e.distcode=h,e.distbits=5;}function Z(e,t,r,n){var i,s=e.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new O.Buf8(s.wsize)),n>=s.wsize?(O.arraySet(s.window,t,r-s.wsize,s.wsize,0),s.wnext=0,s.whave=s.wsize):(n<(i=s.wsize-s.wnext)&&(i=n),O.arraySet(s.window,t,r-n,i,s.wnext),(n-=i)?(O.arraySet(s.window,t,r-n,n,0),s.wnext=n,s.whave=s.wsize):(s.wnext+=i,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=i))),0}r.inflateReset=a,r.inflateReset2=f,r.inflateResetKeep=o,r.inflateInit=function(e){return u(e,15)},r.inflateInit2=u,r.inflate=function(e,t){var r,n,i,s,o,a,f,u,d,h,l,c,p,m,_,w,v,g,y,b,k,x,S,E,z=0,C=new O.Buf8(4),A=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return U;12===(r=e.state).mode&&(r.mode=13),o=e.next_out,i=e.output,f=e.avail_out,s=e.next_in,n=e.input,a=e.avail_in,u=r.hold,d=r.bits,h=a,l=f,x=N;e:for(;;)switch(r.mode){case L:if(0===r.wrap){r.mode=13;break}for(;d<16;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}if(2&r.wrap&&35615===u){C[r.check=0]=255&u,C[1]=u>>>8&255,r.check=D(r.check,C,2,0),d=u=0,r.mode=2;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&u)<<8)+(u>>8))%31){e.msg="incorrect header check",r.mode=30;break}if(8!=(15&u)){e.msg="unknown compression method",r.mode=30;break}if(d-=4,k=8+(15&(u>>>=4)),0===r.wbits)r.wbits=k;else if(k>r.wbits){e.msg="invalid window size",r.mode=30;break}r.dmax=1<<k,e.adler=r.check=1,r.mode=512&u?10:12,d=u=0;break;case 2:for(;d<16;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}if(r.flags=u,8!=(255&r.flags)){e.msg="unknown compression method",r.mode=30;break}if(57344&r.flags){e.msg="unknown header flags set",r.mode=30;break}r.head&&(r.head.text=u>>8&1),512&r.flags&&(C[0]=255&u,C[1]=u>>>8&255,r.check=D(r.check,C,2,0)),d=u=0,r.mode=3;case 3:for(;d<32;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}r.head&&(r.head.time=u),512&r.flags&&(C[0]=255&u,C[1]=u>>>8&255,C[2]=u>>>16&255,C[3]=u>>>24&255,r.check=D(r.check,C,4,0)),d=u=0,r.mode=4;case 4:for(;d<16;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}r.head&&(r.head.xflags=255&u,r.head.os=u>>8),512&r.flags&&(C[0]=255&u,C[1]=u>>>8&255,r.check=D(r.check,C,2,0)),d=u=0,r.mode=5;case 5:if(1024&r.flags){for(;d<16;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}r.length=u,r.head&&(r.head.extra_len=u),512&r.flags&&(C[0]=255&u,C[1]=u>>>8&255,r.check=D(r.check,C,2,0)),d=u=0;}else r.head&&(r.head.extra=null);r.mode=6;case 6:if(1024&r.flags&&(a<(c=r.length)&&(c=a),c&&(r.head&&(k=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Array(r.head.extra_len)),O.arraySet(r.head.extra,n,s,c,k)),512&r.flags&&(r.check=D(r.check,n,c,s)),a-=c,s+=c,r.length-=c),r.length))break e;r.length=0,r.mode=7;case 7:if(2048&r.flags){if(0===a)break e;for(c=0;k=n[s+c++],r.head&&k&&r.length<65536&&(r.head.name+=String.fromCharCode(k)),k&&c<a;);if(512&r.flags&&(r.check=D(r.check,n,c,s)),a-=c,s+=c,k)break e}else r.head&&(r.head.name=null);r.length=0,r.mode=8;case 8:if(4096&r.flags){if(0===a)break e;for(c=0;k=n[s+c++],r.head&&k&&r.length<65536&&(r.head.comment+=String.fromCharCode(k)),k&&c<a;);if(512&r.flags&&(r.check=D(r.check,n,c,s)),a-=c,s+=c,k)break e}else r.head&&(r.head.comment=null);r.mode=9;case 9:if(512&r.flags){for(;d<16;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}if(u!==(65535&r.check)){e.msg="header crc mismatch",r.mode=30;break}d=u=0;}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),e.adler=r.check=0,r.mode=12;break;case 10:for(;d<32;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}e.adler=r.check=P(u),d=u=0,r.mode=11;case 11:if(0===r.havedict)return e.next_out=o,e.avail_out=f,e.next_in=s,e.avail_in=a,r.hold=u,r.bits=d,2;e.adler=r.check=1,r.mode=12;case 12:if(5===t||6===t)break e;case 13:if(r.last){u>>>=7&d,d-=7&d,r.mode=27;break}for(;d<3;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}switch(r.last=1&u,d-=1,3&(u>>>=1)){case 0:r.mode=14;break;case 1:if(j(r),r.mode=20,6!==t)break;u>>>=2,d-=2;break e;case 2:r.mode=17;break;case 3:e.msg="invalid block type",r.mode=30;}u>>>=2,d-=2;break;case 14:for(u>>>=7&d,d-=7&d;d<32;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}if((65535&u)!=(u>>>16^65535)){e.msg="invalid stored block lengths",r.mode=30;break}if(r.length=65535&u,d=u=0,r.mode=15,6===t)break e;case 15:r.mode=16;case 16:if(c=r.length){if(a<c&&(c=a),f<c&&(c=f),0===c)break e;O.arraySet(i,n,s,c,o),a-=c,s+=c,f-=c,o+=c,r.length-=c;break}r.mode=12;break;case 17:for(;d<14;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}if(r.nlen=257+(31&u),u>>>=5,d-=5,r.ndist=1+(31&u),u>>>=5,d-=5,r.ncode=4+(15&u),u>>>=4,d-=4,286<r.nlen||30<r.ndist){e.msg="too many length or distance symbols",r.mode=30;break}r.have=0,r.mode=18;case 18:for(;r.have<r.ncode;){for(;d<3;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}r.lens[A[r.have++]]=7&u,u>>>=3,d-=3;}for(;r.have<19;)r.lens[A[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,S={bits:r.lenbits},x=T(0,r.lens,0,19,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg="invalid code lengths set",r.mode=30;break}r.have=0,r.mode=19;case 19:for(;r.have<r.nlen+r.ndist;){for(;w=(z=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,v=65535&z,!((_=z>>>24)<=d);){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}if(v<16)u>>>=_,d-=_,r.lens[r.have++]=v;else {if(16===v){for(E=_+2;d<E;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}if(u>>>=_,d-=_,0===r.have){e.msg="invalid bit length repeat",r.mode=30;break}k=r.lens[r.have-1],c=3+(3&u),u>>>=2,d-=2;}else if(17===v){for(E=_+3;d<E;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}d-=_,k=0,c=3+(7&(u>>>=_)),u>>>=3,d-=3;}else {for(E=_+7;d<E;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}d-=_,k=0,c=11+(127&(u>>>=_)),u>>>=7,d-=7;}if(r.have+c>r.nlen+r.ndist){e.msg="invalid bit length repeat",r.mode=30;break}for(;c--;)r.lens[r.have++]=k;}}if(30===r.mode)break;if(0===r.lens[256]){e.msg="invalid code -- missing end-of-block",r.mode=30;break}if(r.lenbits=9,S={bits:r.lenbits},x=T(R,r.lens,0,r.nlen,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg="invalid literal/lengths set",r.mode=30;break}if(r.distbits=6,r.distcode=r.distdyn,S={bits:r.distbits},x=T(F,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,S),r.distbits=S.bits,x){e.msg="invalid distances set",r.mode=30;break}if(r.mode=20,6===t)break e;case 20:r.mode=21;case 21:if(6<=a&&258<=f){e.next_out=o,e.avail_out=f,e.next_in=s,e.avail_in=a,r.hold=u,r.bits=d,B(e,l),o=e.next_out,i=e.output,f=e.avail_out,s=e.next_in,n=e.input,a=e.avail_in,u=r.hold,d=r.bits,12===r.mode&&(r.back=-1);break}for(r.back=0;w=(z=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,v=65535&z,!((_=z>>>24)<=d);){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}if(w&&0==(240&w)){for(g=_,y=w,b=v;w=(z=r.lencode[b+((u&(1<<g+y)-1)>>g)])>>>16&255,v=65535&z,!(g+(_=z>>>24)<=d);){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}u>>>=g,d-=g,r.back+=g;}if(u>>>=_,d-=_,r.back+=_,r.length=v,0===w){r.mode=26;break}if(32&w){r.back=-1,r.mode=12;break}if(64&w){e.msg="invalid literal/length code",r.mode=30;break}r.extra=15&w,r.mode=22;case 22:if(r.extra){for(E=r.extra;d<E;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}r.length+=u&(1<<r.extra)-1,u>>>=r.extra,d-=r.extra,r.back+=r.extra;}r.was=r.length,r.mode=23;case 23:for(;w=(z=r.distcode[u&(1<<r.distbits)-1])>>>16&255,v=65535&z,!((_=z>>>24)<=d);){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}if(0==(240&w)){for(g=_,y=w,b=v;w=(z=r.distcode[b+((u&(1<<g+y)-1)>>g)])>>>16&255,v=65535&z,!(g+(_=z>>>24)<=d);){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}u>>>=g,d-=g,r.back+=g;}if(u>>>=_,d-=_,r.back+=_,64&w){e.msg="invalid distance code",r.mode=30;break}r.offset=v,r.extra=15&w,r.mode=24;case 24:if(r.extra){for(E=r.extra;d<E;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}r.offset+=u&(1<<r.extra)-1,u>>>=r.extra,d-=r.extra,r.back+=r.extra;}if(r.offset>r.dmax){e.msg="invalid distance too far back",r.mode=30;break}r.mode=25;case 25:if(0===f)break e;if(c=l-f,r.offset>c){if((c=r.offset-c)>r.whave&&r.sane){e.msg="invalid distance too far back",r.mode=30;break}p=c>r.wnext?(c-=r.wnext,r.wsize-c):r.wnext-c,c>r.length&&(c=r.length),m=r.window;}else m=i,p=o-r.offset,c=r.length;for(f<c&&(c=f),f-=c,r.length-=c;i[o++]=m[p++],--c;);0===r.length&&(r.mode=21);break;case 26:if(0===f)break e;i[o++]=r.length,f--,r.mode=21;break;case 27:if(r.wrap){for(;d<32;){if(0===a)break e;a--,u|=n[s++]<<d,d+=8;}if(l-=f,e.total_out+=l,r.total+=l,l&&(e.adler=r.check=r.flags?D(r.check,i,l,o-l):I(r.check,i,l,o-l)),l=f,(r.flags?u:P(u))!==r.check){e.msg="incorrect data check",r.mode=30;break}d=u=0;}r.mode=28;case 28:if(r.wrap&&r.flags){for(;d<32;){if(0===a)break e;a--,u+=n[s++]<<d,d+=8;}if(u!==(4294967295&r.total)){e.msg="incorrect length check",r.mode=30;break}d=u=0;}r.mode=29;case 29:x=1;break e;case 30:x=-3;break e;case 31:return -4;case 32:default:return U}return e.next_out=o,e.avail_out=f,e.next_in=s,e.avail_in=a,r.hold=u,r.bits=d,(r.wsize||l!==e.avail_out&&r.mode<30&&(r.mode<27||4!==t))&&Z(e,e.output,e.next_out,l-e.avail_out)?(r.mode=31,-4):(h-=e.avail_in,l-=e.avail_out,e.total_in+=h,e.total_out+=l,r.total+=l,r.wrap&&l&&(e.adler=r.check=r.flags?D(r.check,i,l,e.next_out-l):I(r.check,i,l,e.next_out-l)),e.data_type=r.bits+(r.last?64:0)+(12===r.mode?128:0)+(20===r.mode||15===r.mode?256:0),(0==h&&0===l||4===t)&&x===N&&(x=-5),x)},r.inflateEnd=function(e){if(!e||!e.state)return U;var t=e.state;return t.window&&(t.window=null),e.state=null,N},r.inflateGetHeader=function(e,t){var r;return e&&e.state?0==(2&(r=e.state).wrap)?U:((r.head=t).done=!1,N):U},r.inflateSetDictionary=function(e,t){var r,n=t.length;return e&&e.state?0!==(r=e.state).wrap&&11!==r.mode?U:11===r.mode&&I(1,t,n,0)!==r.check?-3:Z(e,t,n,n)?(r.mode=31,-4):(r.havedict=1,N):U},r.inflateInfo="pako inflate (from Nodeca project)";},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(e,t,r){var R=e("../utils/common"),F=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],N=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],U=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],L=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(e,t,r,n,i,s,o,a){var f,u,d,h,l,c,p,m,_,w=a.bits,v=0,g=0,y=0,b=0,k=0,x=0,S=0,E=0,z=0,C=0,A=null,O=0,I=new R.Buf16(16),D=new R.Buf16(16),B=null,T=0;for(v=0;v<=15;v++)I[v]=0;for(g=0;g<n;g++)I[t[r+g]]++;for(k=w,b=15;1<=b&&0===I[b];b--);if(b<k&&(k=b),0===b)return i[s++]=20971520,i[s++]=20971520,a.bits=1,0;for(y=1;y<b&&0===I[y];y++);for(k<y&&(k=y),v=E=1;v<=15;v++)if(E<<=1,(E-=I[v])<0)return -1;if(0<E&&(0===e||1!==b))return -1;for(D[1]=0,v=1;v<15;v++)D[v+1]=D[v]+I[v];for(g=0;g<n;g++)0!==t[r+g]&&(o[D[t[r+g]]++]=g);if(c=0===e?(A=B=o,19):1===e?(A=F,O-=257,B=N,T-=257,256):(A=U,B=L,-1),v=y,l=s,S=g=C=0,d=-1,h=(z=1<<(x=k))-1,1===e&&852<z||2===e&&592<z)return 1;for(;;){for(p=v-S,_=o[g]<c?(m=0,o[g]):o[g]>c?(m=B[T+o[g]],A[O+o[g]]):(m=96,0),f=1<<v-S,y=u=1<<x;i[l+(C>>S)+(u-=f)]=p<<24|m<<16|_|0,0!==u;);for(f=1<<v-1;C&f;)f>>=1;if(0!==f?(C&=f-1,C+=f):C=0,g++,0==--I[v]){if(v===b)break;v=t[r+o[g]];}if(k<v&&(C&h)!==d){for(0===S&&(S=k),l+=y,E=1<<(x=v-S);x+S<b&&!((E-=I[x+S])<=0);)x++,E<<=1;if(z+=1<<x,1===e&&852<z||2===e&&592<z)return 1;i[d=C&h]=k<<24|x<<16|l-s|0;}}return 0!==C&&(i[l+C]=v-S<<24|64<<16|0),a.bits=k,0};},{"../utils/common":41}],51:[function(e,t,r){t.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"};},{}],52:[function(e,t,r){var a=e("../utils/common");function n(e){for(var t=e.length;0<=--t;)e[t]=0;}var _=15,i=16,f=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],u=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],o=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],d=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],h=new Array(576);n(h);var l=new Array(60);n(l);var c=new Array(512);n(c);var p=new Array(256);n(p);var m=new Array(29);n(m);var w,v,g,y=new Array(30);function b(e,t,r,n,i){this.static_tree=e,this.extra_bits=t,this.extra_base=r,this.elems=n,this.max_length=i,this.has_stree=e&&e.length;}function s(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t;}function k(e){return e<256?c[e]:c[256+(e>>>7)]}function x(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255;}function S(e,t,r){e.bi_valid>i-r?(e.bi_buf|=t<<e.bi_valid&65535,x(e,e.bi_buf),e.bi_buf=t>>i-e.bi_valid,e.bi_valid+=r-i):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=r);}function E(e,t,r){S(e,r[2*t],r[2*t+1]);}function z(e,t){for(var r=0;r|=1&e,e>>>=1,r<<=1,0<--t;);return r>>>1}function C(e,t,r){var n,i,s=new Array(_+1),o=0;for(n=1;n<=_;n++)s[n]=o=o+r[n-1]<<1;for(i=0;i<=t;i++){var a=e[2*i+1];0!==a&&(e[2*i]=z(s[a]++,a));}}function A(e){var t;for(t=0;t<286;t++)e.dyn_ltree[2*t]=0;for(t=0;t<30;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0;}function O(e){8<e.bi_valid?x(e,e.bi_buf):0<e.bi_valid&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0;}function I(e,t,r,n){var i=2*t,s=2*r;return e[i]<e[s]||e[i]===e[s]&&n[t]<=n[r]}function D(e,t,r){for(var n=e.heap[r],i=r<<1;i<=e.heap_len&&(i<e.heap_len&&I(t,e.heap[i+1],e.heap[i],e.depth)&&i++,!I(t,n,e.heap[i],e.depth));)e.heap[r]=e.heap[i],r=i,i<<=1;e.heap[r]=n;}function B(e,t,r){var n,i,s,o,a=0;if(0!==e.last_lit)for(;n=e.pending_buf[e.d_buf+2*a]<<8|e.pending_buf[e.d_buf+2*a+1],i=e.pending_buf[e.l_buf+a],a++,0===n?E(e,i,t):(E(e,(s=p[i])+256+1,t),0!==(o=f[s])&&S(e,i-=m[s],o),E(e,s=k(--n),r),0!==(o=u[s])&&S(e,n-=y[s],o)),a<e.last_lit;);E(e,256,t);}function T(e,t){var r,n,i,s=t.dyn_tree,o=t.stat_desc.static_tree,a=t.stat_desc.has_stree,f=t.stat_desc.elems,u=-1;for(e.heap_len=0,e.heap_max=573,r=0;r<f;r++)0!==s[2*r]?(e.heap[++e.heap_len]=u=r,e.depth[r]=0):s[2*r+1]=0;for(;e.heap_len<2;)s[2*(i=e.heap[++e.heap_len]=u<2?++u:0)]=1,e.depth[i]=0,e.opt_len--,a&&(e.static_len-=o[2*i+1]);for(t.max_code=u,r=e.heap_len>>1;1<=r;r--)D(e,s,r);for(i=f;r=e.heap[1],e.heap[1]=e.heap[e.heap_len--],D(e,s,1),n=e.heap[1],e.heap[--e.heap_max]=r,e.heap[--e.heap_max]=n,s[2*i]=s[2*r]+s[2*n],e.depth[i]=(e.depth[r]>=e.depth[n]?e.depth[r]:e.depth[n])+1,s[2*r+1]=s[2*n+1]=i,e.heap[1]=i++,D(e,s,1),2<=e.heap_len;);e.heap[--e.heap_max]=e.heap[1],function(e,t){var r,n,i,s,o,a,f=t.dyn_tree,u=t.max_code,d=t.stat_desc.static_tree,h=t.stat_desc.has_stree,l=t.stat_desc.extra_bits,c=t.stat_desc.extra_base,p=t.stat_desc.max_length,m=0;for(s=0;s<=_;s++)e.bl_count[s]=0;for(f[2*e.heap[e.heap_max]+1]=0,r=e.heap_max+1;r<573;r++)p<(s=f[2*f[2*(n=e.heap[r])+1]+1]+1)&&(s=p,m++),f[2*n+1]=s,u<n||(e.bl_count[s]++,o=0,c<=n&&(o=l[n-c]),a=f[2*n],e.opt_len+=a*(s+o),h&&(e.static_len+=a*(d[2*n+1]+o)));if(0!==m){do{for(s=p-1;0===e.bl_count[s];)s--;e.bl_count[s]--,e.bl_count[s+1]+=2,e.bl_count[p]--,m-=2;}while(0<m);for(s=p;0!==s;s--)for(n=e.bl_count[s];0!==n;)u<(i=e.heap[--r])||(f[2*i+1]!==s&&(e.opt_len+=(s-f[2*i+1])*f[2*i],f[2*i+1]=s),n--);}}(e,t),C(s,u,e.bl_count);}function R(e,t,r){var n,i,s=-1,o=t[1],a=0,f=7,u=4;for(0===o&&(f=138,u=3),t[2*(r+1)+1]=65535,n=0;n<=r;n++)i=o,o=t[2*(n+1)+1],++a<f&&i===o||(a<u?e.bl_tree[2*i]+=a:0!==i?(i!==s&&e.bl_tree[2*i]++,e.bl_tree[32]++):a<=10?e.bl_tree[34]++:e.bl_tree[36]++,s=i,u=(a=0)===o?(f=138,3):i===o?(f=6,3):(f=7,4));}function F(e,t,r){var n,i,s=-1,o=t[1],a=0,f=7,u=4;for(0===o&&(f=138,u=3),n=0;n<=r;n++)if(i=o,o=t[2*(n+1)+1],!(++a<f&&i===o)){if(a<u)for(;E(e,i,e.bl_tree),0!=--a;);else 0!==i?(i!==s&&(E(e,i,e.bl_tree),a--),E(e,16,e.bl_tree),S(e,a-3,2)):a<=10?(E(e,17,e.bl_tree),S(e,a-3,3)):(E(e,18,e.bl_tree),S(e,a-11,7));s=i,u=(a=0)===o?(f=138,3):i===o?(f=6,3):(f=7,4);}}n(y);var N=!1;function U(e,t,r,n){var i,s,o;S(e,0+(n?1:0),3),s=t,o=r,O(i=e),x(i,o),x(i,~o),a.arraySet(i.pending_buf,i.window,s,o,i.pending),i.pending+=o;}r._tr_init=function(e){N||(function(){var e,t,r,n,i,s=new Array(_+1);for(n=r=0;n<28;n++)for(m[n]=r,e=0;e<1<<f[n];e++)p[r++]=n;for(p[r-1]=n,n=i=0;n<16;n++)for(y[n]=i,e=0;e<1<<u[n];e++)c[i++]=n;for(i>>=7;n<30;n++)for(y[n]=i<<7,e=0;e<1<<u[n]-7;e++)c[256+i++]=n;for(t=0;t<=_;t++)s[t]=0;for(e=0;e<=143;)h[2*e+1]=8,e++,s[8]++;for(;e<=255;)h[2*e+1]=9,e++,s[9]++;for(;e<=279;)h[2*e+1]=7,e++,s[7]++;for(;e<=287;)h[2*e+1]=8,e++,s[8]++;for(C(h,287,s),e=0;e<30;e++)l[2*e+1]=5,l[2*e]=z(e,5);w=new b(h,f,257,286,_),v=new b(l,u,0,30,_),g=new b(new Array(0),o,0,19,7);}(),N=!0),e.l_desc=new s(e.dyn_ltree,w),e.d_desc=new s(e.dyn_dtree,v),e.bl_desc=new s(e.bl_tree,g),e.bi_buf=0,e.bi_valid=0,A(e);},r._tr_stored_block=U,r._tr_flush_block=function(e,t,r,n){var i,s,o=0;0<e.level?(2===e.strm.data_type&&(e.strm.data_type=function(e){var t,r=4093624447;for(t=0;t<=31;t++,r>>>=1)if(1&r&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<256;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0}(e)),T(e,e.l_desc),T(e,e.d_desc),o=function(e){var t;for(R(e,e.dyn_ltree,e.l_desc.max_code),R(e,e.dyn_dtree,e.d_desc.max_code),T(e,e.bl_desc),t=18;3<=t&&0===e.bl_tree[2*d[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),i=e.opt_len+3+7>>>3,(s=e.static_len+3+7>>>3)<=i&&(i=s)):i=s=r+5,r+4<=i&&-1!==t?U(e,t,r,n):4===e.strategy||s===i?(S(e,2+(n?1:0),3),B(e,h,l)):(S(e,4+(n?1:0),3),function(e,t,r,n){var i;for(S(e,t-257,5),S(e,r-1,5),S(e,n-4,4),i=0;i<n;i++)S(e,e.bl_tree[2*d[i]+1],3);F(e,e.dyn_ltree,t-1),F(e,e.dyn_dtree,r-1);}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,o+1),B(e,e.dyn_ltree,e.dyn_dtree)),A(e),n&&O(e);},r._tr_tally=function(e,t,r){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&r,e.last_lit++,0===t?e.dyn_ltree[2*r]++:(e.matches++,t--,e.dyn_ltree[2*(p[r]+256+1)]++,e.dyn_dtree[2*k(t)]++),e.last_lit===e.lit_bufsize-1},r._tr_align=function(e){var t;S(e,2,3),E(e,256,h),16===(t=e).bi_valid?(x(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):8<=t.bi_valid&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8);};},{"../utils/common":41}],53:[function(e,t,r){t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0;};},{}],54:[function(e,t,r){t.exports="function"==typeof setImmediate?setImmediate:function(){var e=[].slice.apply(arguments);e.splice(1,0,0),setTimeout.apply(null,e);};},{}]},{},[10])(10)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,void 0!==r?r:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});}).call(this,"undefined"!=typeof commonjsGlobal?commonjsGlobal:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});},{}]},{},[1])(1)});
});

/*!
 * @esri/arcgis-html-sanitizer - v2.8.0 - Tue Oct 19 2021 10:15:21 GMT-0400 (Eastern Daylight Time)
 * Copyright (c) 2021 - Environmental Systems Research Institute, Inc.
 * Apache-2.0
 * 
 * js-xss
 * Copyright (c) 2012-2017 Zongmin Lei(雷宗民) <leizongmin@gmail.com>
 * http://ucdok.com
 * MIT License, see https://github.com/leizongmin/js-xss/blob/master/LICENSE for details
 * 
 * Lodash/isPlainObject
 * Copyright (c) JS Foundation and other contributors <https://js.foundation/>
 * MIT License, see https://raw.githubusercontent.com/lodash/lodash/4.17.10-npm/LICENSE for details
 */

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to infer the `Object` constructor. */
funcToString.call(Object);

var lib$1 = {exports: {}};

var _default$1 = {};

var lib = {exports: {}};

var _default = {};

/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

function getDefaultWhiteList$1 () {
  // 白名单值说明：
  // true: 允许该属性
  // Function: function (val) { } 返回true表示允许该属性，其他值均表示不允许
  // RegExp: regexp.test(val) 返回true表示允许该属性，其他值均表示不允许
  // 除上面列出的值外均表示不允许
  var whiteList = {};

  whiteList['align-content'] = false; // default: auto
  whiteList['align-items'] = false; // default: auto
  whiteList['align-self'] = false; // default: auto
  whiteList['alignment-adjust'] = false; // default: auto
  whiteList['alignment-baseline'] = false; // default: baseline
  whiteList['all'] = false; // default: depending on individual properties
  whiteList['anchor-point'] = false; // default: none
  whiteList['animation'] = false; // default: depending on individual properties
  whiteList['animation-delay'] = false; // default: 0
  whiteList['animation-direction'] = false; // default: normal
  whiteList['animation-duration'] = false; // default: 0
  whiteList['animation-fill-mode'] = false; // default: none
  whiteList['animation-iteration-count'] = false; // default: 1
  whiteList['animation-name'] = false; // default: none
  whiteList['animation-play-state'] = false; // default: running
  whiteList['animation-timing-function'] = false; // default: ease
  whiteList['azimuth'] = false; // default: center
  whiteList['backface-visibility'] = false; // default: visible
  whiteList['background'] = true; // default: depending on individual properties
  whiteList['background-attachment'] = true; // default: scroll
  whiteList['background-clip'] = true; // default: border-box
  whiteList['background-color'] = true; // default: transparent
  whiteList['background-image'] = true; // default: none
  whiteList['background-origin'] = true; // default: padding-box
  whiteList['background-position'] = true; // default: 0% 0%
  whiteList['background-repeat'] = true; // default: repeat
  whiteList['background-size'] = true; // default: auto
  whiteList['baseline-shift'] = false; // default: baseline
  whiteList['binding'] = false; // default: none
  whiteList['bleed'] = false; // default: 6pt
  whiteList['bookmark-label'] = false; // default: content()
  whiteList['bookmark-level'] = false; // default: none
  whiteList['bookmark-state'] = false; // default: open
  whiteList['border'] = true; // default: depending on individual properties
  whiteList['border-bottom'] = true; // default: depending on individual properties
  whiteList['border-bottom-color'] = true; // default: current color
  whiteList['border-bottom-left-radius'] = true; // default: 0
  whiteList['border-bottom-right-radius'] = true; // default: 0
  whiteList['border-bottom-style'] = true; // default: none
  whiteList['border-bottom-width'] = true; // default: medium
  whiteList['border-collapse'] = true; // default: separate
  whiteList['border-color'] = true; // default: depending on individual properties
  whiteList['border-image'] = true; // default: none
  whiteList['border-image-outset'] = true; // default: 0
  whiteList['border-image-repeat'] = true; // default: stretch
  whiteList['border-image-slice'] = true; // default: 100%
  whiteList['border-image-source'] = true; // default: none
  whiteList['border-image-width'] = true; // default: 1
  whiteList['border-left'] = true; // default: depending on individual properties
  whiteList['border-left-color'] = true; // default: current color
  whiteList['border-left-style'] = true; // default: none
  whiteList['border-left-width'] = true; // default: medium
  whiteList['border-radius'] = true; // default: 0
  whiteList['border-right'] = true; // default: depending on individual properties
  whiteList['border-right-color'] = true; // default: current color
  whiteList['border-right-style'] = true; // default: none
  whiteList['border-right-width'] = true; // default: medium
  whiteList['border-spacing'] = true; // default: 0
  whiteList['border-style'] = true; // default: depending on individual properties
  whiteList['border-top'] = true; // default: depending on individual properties
  whiteList['border-top-color'] = true; // default: current color
  whiteList['border-top-left-radius'] = true; // default: 0
  whiteList['border-top-right-radius'] = true; // default: 0
  whiteList['border-top-style'] = true; // default: none
  whiteList['border-top-width'] = true; // default: medium
  whiteList['border-width'] = true; // default: depending on individual properties
  whiteList['bottom'] = false; // default: auto
  whiteList['box-decoration-break'] = true; // default: slice
  whiteList['box-shadow'] = true; // default: none
  whiteList['box-sizing'] = true; // default: content-box
  whiteList['box-snap'] = true; // default: none
  whiteList['box-suppress'] = true; // default: show
  whiteList['break-after'] = true; // default: auto
  whiteList['break-before'] = true; // default: auto
  whiteList['break-inside'] = true; // default: auto
  whiteList['caption-side'] = false; // default: top
  whiteList['chains'] = false; // default: none
  whiteList['clear'] = true; // default: none
  whiteList['clip'] = false; // default: auto
  whiteList['clip-path'] = false; // default: none
  whiteList['clip-rule'] = false; // default: nonzero
  whiteList['color'] = true; // default: implementation dependent
  whiteList['color-interpolation-filters'] = true; // default: auto
  whiteList['column-count'] = false; // default: auto
  whiteList['column-fill'] = false; // default: balance
  whiteList['column-gap'] = false; // default: normal
  whiteList['column-rule'] = false; // default: depending on individual properties
  whiteList['column-rule-color'] = false; // default: current color
  whiteList['column-rule-style'] = false; // default: medium
  whiteList['column-rule-width'] = false; // default: medium
  whiteList['column-span'] = false; // default: none
  whiteList['column-width'] = false; // default: auto
  whiteList['columns'] = false; // default: depending on individual properties
  whiteList['contain'] = false; // default: none
  whiteList['content'] = false; // default: normal
  whiteList['counter-increment'] = false; // default: none
  whiteList['counter-reset'] = false; // default: none
  whiteList['counter-set'] = false; // default: none
  whiteList['crop'] = false; // default: auto
  whiteList['cue'] = false; // default: depending on individual properties
  whiteList['cue-after'] = false; // default: none
  whiteList['cue-before'] = false; // default: none
  whiteList['cursor'] = false; // default: auto
  whiteList['direction'] = false; // default: ltr
  whiteList['display'] = true; // default: depending on individual properties
  whiteList['display-inside'] = true; // default: auto
  whiteList['display-list'] = true; // default: none
  whiteList['display-outside'] = true; // default: inline-level
  whiteList['dominant-baseline'] = false; // default: auto
  whiteList['elevation'] = false; // default: level
  whiteList['empty-cells'] = false; // default: show
  whiteList['filter'] = false; // default: none
  whiteList['flex'] = false; // default: depending on individual properties
  whiteList['flex-basis'] = false; // default: auto
  whiteList['flex-direction'] = false; // default: row
  whiteList['flex-flow'] = false; // default: depending on individual properties
  whiteList['flex-grow'] = false; // default: 0
  whiteList['flex-shrink'] = false; // default: 1
  whiteList['flex-wrap'] = false; // default: nowrap
  whiteList['float'] = false; // default: none
  whiteList['float-offset'] = false; // default: 0 0
  whiteList['flood-color'] = false; // default: black
  whiteList['flood-opacity'] = false; // default: 1
  whiteList['flow-from'] = false; // default: none
  whiteList['flow-into'] = false; // default: none
  whiteList['font'] = true; // default: depending on individual properties
  whiteList['font-family'] = true; // default: implementation dependent
  whiteList['font-feature-settings'] = true; // default: normal
  whiteList['font-kerning'] = true; // default: auto
  whiteList['font-language-override'] = true; // default: normal
  whiteList['font-size'] = true; // default: medium
  whiteList['font-size-adjust'] = true; // default: none
  whiteList['font-stretch'] = true; // default: normal
  whiteList['font-style'] = true; // default: normal
  whiteList['font-synthesis'] = true; // default: weight style
  whiteList['font-variant'] = true; // default: normal
  whiteList['font-variant-alternates'] = true; // default: normal
  whiteList['font-variant-caps'] = true; // default: normal
  whiteList['font-variant-east-asian'] = true; // default: normal
  whiteList['font-variant-ligatures'] = true; // default: normal
  whiteList['font-variant-numeric'] = true; // default: normal
  whiteList['font-variant-position'] = true; // default: normal
  whiteList['font-weight'] = true; // default: normal
  whiteList['grid'] = false; // default: depending on individual properties
  whiteList['grid-area'] = false; // default: depending on individual properties
  whiteList['grid-auto-columns'] = false; // default: auto
  whiteList['grid-auto-flow'] = false; // default: none
  whiteList['grid-auto-rows'] = false; // default: auto
  whiteList['grid-column'] = false; // default: depending on individual properties
  whiteList['grid-column-end'] = false; // default: auto
  whiteList['grid-column-start'] = false; // default: auto
  whiteList['grid-row'] = false; // default: depending on individual properties
  whiteList['grid-row-end'] = false; // default: auto
  whiteList['grid-row-start'] = false; // default: auto
  whiteList['grid-template'] = false; // default: depending on individual properties
  whiteList['grid-template-areas'] = false; // default: none
  whiteList['grid-template-columns'] = false; // default: none
  whiteList['grid-template-rows'] = false; // default: none
  whiteList['hanging-punctuation'] = false; // default: none
  whiteList['height'] = true; // default: auto
  whiteList['hyphens'] = false; // default: manual
  whiteList['icon'] = false; // default: auto
  whiteList['image-orientation'] = false; // default: auto
  whiteList['image-resolution'] = false; // default: normal
  whiteList['ime-mode'] = false; // default: auto
  whiteList['initial-letters'] = false; // default: normal
  whiteList['inline-box-align'] = false; // default: last
  whiteList['justify-content'] = false; // default: auto
  whiteList['justify-items'] = false; // default: auto
  whiteList['justify-self'] = false; // default: auto
  whiteList['left'] = false; // default: auto
  whiteList['letter-spacing'] = true; // default: normal
  whiteList['lighting-color'] = true; // default: white
  whiteList['line-box-contain'] = false; // default: block inline replaced
  whiteList['line-break'] = false; // default: auto
  whiteList['line-grid'] = false; // default: match-parent
  whiteList['line-height'] = false; // default: normal
  whiteList['line-snap'] = false; // default: none
  whiteList['line-stacking'] = false; // default: depending on individual properties
  whiteList['line-stacking-ruby'] = false; // default: exclude-ruby
  whiteList['line-stacking-shift'] = false; // default: consider-shifts
  whiteList['line-stacking-strategy'] = false; // default: inline-line-height
  whiteList['list-style'] = true; // default: depending on individual properties
  whiteList['list-style-image'] = true; // default: none
  whiteList['list-style-position'] = true; // default: outside
  whiteList['list-style-type'] = true; // default: disc
  whiteList['margin'] = true; // default: depending on individual properties
  whiteList['margin-bottom'] = true; // default: 0
  whiteList['margin-left'] = true; // default: 0
  whiteList['margin-right'] = true; // default: 0
  whiteList['margin-top'] = true; // default: 0
  whiteList['marker-offset'] = false; // default: auto
  whiteList['marker-side'] = false; // default: list-item
  whiteList['marks'] = false; // default: none
  whiteList['mask'] = false; // default: border-box
  whiteList['mask-box'] = false; // default: see individual properties
  whiteList['mask-box-outset'] = false; // default: 0
  whiteList['mask-box-repeat'] = false; // default: stretch
  whiteList['mask-box-slice'] = false; // default: 0 fill
  whiteList['mask-box-source'] = false; // default: none
  whiteList['mask-box-width'] = false; // default: auto
  whiteList['mask-clip'] = false; // default: border-box
  whiteList['mask-image'] = false; // default: none
  whiteList['mask-origin'] = false; // default: border-box
  whiteList['mask-position'] = false; // default: center
  whiteList['mask-repeat'] = false; // default: no-repeat
  whiteList['mask-size'] = false; // default: border-box
  whiteList['mask-source-type'] = false; // default: auto
  whiteList['mask-type'] = false; // default: luminance
  whiteList['max-height'] = true; // default: none
  whiteList['max-lines'] = false; // default: none
  whiteList['max-width'] = true; // default: none
  whiteList['min-height'] = true; // default: 0
  whiteList['min-width'] = true; // default: 0
  whiteList['move-to'] = false; // default: normal
  whiteList['nav-down'] = false; // default: auto
  whiteList['nav-index'] = false; // default: auto
  whiteList['nav-left'] = false; // default: auto
  whiteList['nav-right'] = false; // default: auto
  whiteList['nav-up'] = false; // default: auto
  whiteList['object-fit'] = false; // default: fill
  whiteList['object-position'] = false; // default: 50% 50%
  whiteList['opacity'] = false; // default: 1
  whiteList['order'] = false; // default: 0
  whiteList['orphans'] = false; // default: 2
  whiteList['outline'] = false; // default: depending on individual properties
  whiteList['outline-color'] = false; // default: invert
  whiteList['outline-offset'] = false; // default: 0
  whiteList['outline-style'] = false; // default: none
  whiteList['outline-width'] = false; // default: medium
  whiteList['overflow'] = false; // default: depending on individual properties
  whiteList['overflow-wrap'] = false; // default: normal
  whiteList['overflow-x'] = false; // default: visible
  whiteList['overflow-y'] = false; // default: visible
  whiteList['padding'] = true; // default: depending on individual properties
  whiteList['padding-bottom'] = true; // default: 0
  whiteList['padding-left'] = true; // default: 0
  whiteList['padding-right'] = true; // default: 0
  whiteList['padding-top'] = true; // default: 0
  whiteList['page'] = false; // default: auto
  whiteList['page-break-after'] = false; // default: auto
  whiteList['page-break-before'] = false; // default: auto
  whiteList['page-break-inside'] = false; // default: auto
  whiteList['page-policy'] = false; // default: start
  whiteList['pause'] = false; // default: implementation dependent
  whiteList['pause-after'] = false; // default: implementation dependent
  whiteList['pause-before'] = false; // default: implementation dependent
  whiteList['perspective'] = false; // default: none
  whiteList['perspective-origin'] = false; // default: 50% 50%
  whiteList['pitch'] = false; // default: medium
  whiteList['pitch-range'] = false; // default: 50
  whiteList['play-during'] = false; // default: auto
  whiteList['position'] = false; // default: static
  whiteList['presentation-level'] = false; // default: 0
  whiteList['quotes'] = false; // default: text
  whiteList['region-fragment'] = false; // default: auto
  whiteList['resize'] = false; // default: none
  whiteList['rest'] = false; // default: depending on individual properties
  whiteList['rest-after'] = false; // default: none
  whiteList['rest-before'] = false; // default: none
  whiteList['richness'] = false; // default: 50
  whiteList['right'] = false; // default: auto
  whiteList['rotation'] = false; // default: 0
  whiteList['rotation-point'] = false; // default: 50% 50%
  whiteList['ruby-align'] = false; // default: auto
  whiteList['ruby-merge'] = false; // default: separate
  whiteList['ruby-position'] = false; // default: before
  whiteList['shape-image-threshold'] = false; // default: 0.0
  whiteList['shape-outside'] = false; // default: none
  whiteList['shape-margin'] = false; // default: 0
  whiteList['size'] = false; // default: auto
  whiteList['speak'] = false; // default: auto
  whiteList['speak-as'] = false; // default: normal
  whiteList['speak-header'] = false; // default: once
  whiteList['speak-numeral'] = false; // default: continuous
  whiteList['speak-punctuation'] = false; // default: none
  whiteList['speech-rate'] = false; // default: medium
  whiteList['stress'] = false; // default: 50
  whiteList['string-set'] = false; // default: none
  whiteList['tab-size'] = false; // default: 8
  whiteList['table-layout'] = false; // default: auto
  whiteList['text-align'] = true; // default: start
  whiteList['text-align-last'] = true; // default: auto
  whiteList['text-combine-upright'] = true; // default: none
  whiteList['text-decoration'] = true; // default: none
  whiteList['text-decoration-color'] = true; // default: currentColor
  whiteList['text-decoration-line'] = true; // default: none
  whiteList['text-decoration-skip'] = true; // default: objects
  whiteList['text-decoration-style'] = true; // default: solid
  whiteList['text-emphasis'] = true; // default: depending on individual properties
  whiteList['text-emphasis-color'] = true; // default: currentColor
  whiteList['text-emphasis-position'] = true; // default: over right
  whiteList['text-emphasis-style'] = true; // default: none
  whiteList['text-height'] = true; // default: auto
  whiteList['text-indent'] = true; // default: 0
  whiteList['text-justify'] = true; // default: auto
  whiteList['text-orientation'] = true; // default: mixed
  whiteList['text-overflow'] = true; // default: clip
  whiteList['text-shadow'] = true; // default: none
  whiteList['text-space-collapse'] = true; // default: collapse
  whiteList['text-transform'] = true; // default: none
  whiteList['text-underline-position'] = true; // default: auto
  whiteList['text-wrap'] = true; // default: normal
  whiteList['top'] = false; // default: auto
  whiteList['transform'] = false; // default: none
  whiteList['transform-origin'] = false; // default: 50% 50% 0
  whiteList['transform-style'] = false; // default: flat
  whiteList['transition'] = false; // default: depending on individual properties
  whiteList['transition-delay'] = false; // default: 0s
  whiteList['transition-duration'] = false; // default: 0s
  whiteList['transition-property'] = false; // default: all
  whiteList['transition-timing-function'] = false; // default: ease
  whiteList['unicode-bidi'] = false; // default: normal
  whiteList['vertical-align'] = false; // default: baseline
  whiteList['visibility'] = false; // default: visible
  whiteList['voice-balance'] = false; // default: center
  whiteList['voice-duration'] = false; // default: auto
  whiteList['voice-family'] = false; // default: implementation dependent
  whiteList['voice-pitch'] = false; // default: medium
  whiteList['voice-range'] = false; // default: medium
  whiteList['voice-rate'] = false; // default: normal
  whiteList['voice-stress'] = false; // default: normal
  whiteList['voice-volume'] = false; // default: medium
  whiteList['volume'] = false; // default: medium
  whiteList['white-space'] = false; // default: normal
  whiteList['widows'] = false; // default: 2
  whiteList['width'] = true; // default: auto
  whiteList['will-change'] = false; // default: auto
  whiteList['word-break'] = true; // default: normal
  whiteList['word-spacing'] = true; // default: normal
  whiteList['word-wrap'] = true; // default: normal
  whiteList['wrap-flow'] = false; // default: auto
  whiteList['wrap-through'] = false; // default: wrap
  whiteList['writing-mode'] = false; // default: horizontal-tb
  whiteList['z-index'] = false; // default: auto

  return whiteList;
}


/**
 * 匹配到白名单上的一个属性时
 *
 * @param {String} name
 * @param {String} value
 * @param {Object} options
 * @return {String}
 */
function onAttr (name, value, options) {
  // do nothing
}

/**
 * 匹配到不在白名单上的一个属性时
 *
 * @param {String} name
 * @param {String} value
 * @param {Object} options
 * @return {String}
 */
function onIgnoreAttr (name, value, options) {
  // do nothing
}

var REGEXP_URL_JAVASCRIPT = /javascript\s*\:/img;

/**
 * 过滤属性值
 *
 * @param {String} name
 * @param {String} value
 * @return {String}
 */
function safeAttrValue$1(name, value) {
  if (REGEXP_URL_JAVASCRIPT.test(value)) return '';
  return value;
}


_default.whiteList = getDefaultWhiteList$1();
_default.getDefaultWhiteList = getDefaultWhiteList$1;
_default.onAttr = onAttr;
_default.onIgnoreAttr = onIgnoreAttr;
_default.safeAttrValue = safeAttrValue$1;

var util$1 = {
  indexOf: function (arr, item) {
    var i, j;
    if (Array.prototype.indexOf) {
      return arr.indexOf(item);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      if (arr[i] === item) {
        return i;
      }
    }
    return -1;
  },
  forEach: function (arr, fn, scope) {
    var i, j;
    if (Array.prototype.forEach) {
      return arr.forEach(fn, scope);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      fn.call(scope, arr[i], i, arr);
    }
  },
  trim: function (str) {
    if (String.prototype.trim) {
      return str.trim();
    }
    return str.replace(/(^\s*)|(\s*$)/g, '');
  },
  trimRight: function (str) {
    if (String.prototype.trimRight) {
      return str.trimRight();
    }
    return str.replace(/(\s*$)/g, '');
  }
};

/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

var _$3 = util$1;


/**
 * 解析style
 *
 * @param {String} css
 * @param {Function} onAttr 处理属性的函数
 *   参数格式： function (sourcePosition, position, name, value, source)
 * @return {String}
 */
function parseStyle$1 (css, onAttr) {
  css = _$3.trimRight(css);
  if (css[css.length - 1] !== ';') css += ';';
  var cssLength = css.length;
  var isParenthesisOpen = false;
  var lastPos = 0;
  var i = 0;
  var retCSS = '';

  function addNewAttr () {
    // 如果没有正常的闭合圆括号，则直接忽略当前属性
    if (!isParenthesisOpen) {
      var source = _$3.trim(css.slice(lastPos, i));
      var j = source.indexOf(':');
      if (j !== -1) {
        var name = _$3.trim(source.slice(0, j));
        var value = _$3.trim(source.slice(j + 1));
        // 必须有属性名称
        if (name) {
          var ret = onAttr(lastPos, retCSS.length, name, value, source);
          if (ret) retCSS += ret + '; ';
        }
      }
    }
    lastPos = i + 1;
  }

  for (; i < cssLength; i++) {
    var c = css[i];
    if (c === '/' && css[i + 1] === '*') {
      // 备注开始
      var j = css.indexOf('*/', i + 2);
      // 如果没有正常的备注结束，则后面的部分全部跳过
      if (j === -1) break;
      // 直接将当前位置调到备注结尾，并且初始化状态
      i = j + 1;
      lastPos = i + 1;
      isParenthesisOpen = false;
    } else if (c === '(') {
      isParenthesisOpen = true;
    } else if (c === ')') {
      isParenthesisOpen = false;
    } else if (c === ';') {
      if (isParenthesisOpen) ; else {
        addNewAttr();
      }
    } else if (c === '\n') {
      addNewAttr();
    }
  }

  return _$3.trim(retCSS);
}

var parser$2 = parseStyle$1;

/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

var DEFAULT$1 = _default;
var parseStyle = parser$2;


/**
 * 返回值是否为空
 *
 * @param {Object} obj
 * @return {Boolean}
 */
function isNull$1 (obj) {
  return (obj === undefined || obj === null);
}

/**
 * 浅拷贝对象
 *
 * @param {Object} obj
 * @return {Object}
 */
function shallowCopyObject$1 (obj) {
  var ret = {};
  for (var i in obj) {
    ret[i] = obj[i];
  }
  return ret;
}

/**
 * 创建CSS过滤器
 *
 * @param {Object} options
 *   - {Object} whiteList
 *   - {Function} onAttr
 *   - {Function} onIgnoreAttr
 *   - {Function} safeAttrValue
 */
function FilterCSS$2 (options) {
  options = shallowCopyObject$1(options || {});
  options.whiteList = options.whiteList || DEFAULT$1.whiteList;
  options.onAttr = options.onAttr || DEFAULT$1.onAttr;
  options.onIgnoreAttr = options.onIgnoreAttr || DEFAULT$1.onIgnoreAttr;
  options.safeAttrValue = options.safeAttrValue || DEFAULT$1.safeAttrValue;
  this.options = options;
}

FilterCSS$2.prototype.process = function (css) {
  // 兼容各种奇葩输入
  css = css || '';
  css = css.toString();
  if (!css) return '';

  var me = this;
  var options = me.options;
  var whiteList = options.whiteList;
  var onAttr = options.onAttr;
  var onIgnoreAttr = options.onIgnoreAttr;
  var safeAttrValue = options.safeAttrValue;

  var retCSS = parseStyle(css, function (sourcePosition, position, name, value, source) {

    var check = whiteList[name];
    var isWhite = false;
    if (check === true) isWhite = check;
    else if (typeof check === 'function') isWhite = check(value);
    else if (check instanceof RegExp) isWhite = check.test(value);
    if (isWhite !== true) isWhite = false;

    // 如果过滤后 value 为空则直接忽略
    value = safeAttrValue(name, value);
    if (!value) return;

    var opts = {
      position: position,
      sourcePosition: sourcePosition,
      source: source,
      isWhite: isWhite
    };

    if (isWhite) {

      var ret = onAttr(name, value, opts);
      if (isNull$1(ret)) {
        return name + ':' + value;
      } else {
        return ret;
      }

    } else {

      var ret = onIgnoreAttr(name, value, opts);
      if (!isNull$1(ret)) {
        return ret;
      }

    }
  });

  return retCSS;
};


var css$1 = FilterCSS$2;

/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

(function (module, exports) {
var DEFAULT = _default;
var FilterCSS = css$1;


/**
 * XSS过滤
 *
 * @param {String} css 要过滤的CSS代码
 * @param {Object} options 选项：whiteList, onAttr, onIgnoreAttr
 * @return {String}
 */
function filterCSS (html, options) {
  var xss = new FilterCSS(options);
  return xss.process(html);
}


// 输出
exports = module.exports = filterCSS;
exports.FilterCSS = FilterCSS;
for (var i in DEFAULT) exports[i] = DEFAULT[i];
}(lib, lib.exports));

var util = {
  indexOf: function (arr, item) {
    var i, j;
    if (Array.prototype.indexOf) {
      return arr.indexOf(item);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      if (arr[i] === item) {
        return i;
      }
    }
    return -1;
  },
  forEach: function (arr, fn, scope) {
    var i, j;
    if (Array.prototype.forEach) {
      return arr.forEach(fn, scope);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      fn.call(scope, arr[i], i, arr);
    }
  },
  trim: function (str) {
    if (String.prototype.trim) {
      return str.trim();
    }
    return str.replace(/(^\s*)|(\s*$)/g, "");
  },
  spaceIndex: function (str) {
    var reg = /\s|\n|\t/;
    var match = reg.exec(str);
    return match ? match.index : -1;
  },
};

/**
 * default settings
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

var FilterCSS$1 = lib.exports.FilterCSS;
var getDefaultCSSWhiteList = lib.exports.getDefaultWhiteList;
var _$2 = util;

function getDefaultWhiteList() {
  return {
    a: ["target", "href", "title"],
    abbr: ["title"],
    address: [],
    area: ["shape", "coords", "href", "alt"],
    article: [],
    aside: [],
    audio: [
      "autoplay",
      "controls",
      "crossorigin",
      "loop",
      "muted",
      "preload",
      "src",
    ],
    b: [],
    bdi: ["dir"],
    bdo: ["dir"],
    big: [],
    blockquote: ["cite"],
    br: [],
    caption: [],
    center: [],
    cite: [],
    code: [],
    col: ["align", "valign", "span", "width"],
    colgroup: ["align", "valign", "span", "width"],
    dd: [],
    del: ["datetime"],
    details: ["open"],
    div: [],
    dl: [],
    dt: [],
    em: [],
    figcaption: [],
    figure: [],
    font: ["color", "size", "face"],
    footer: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    header: [],
    hr: [],
    i: [],
    img: ["src", "alt", "title", "width", "height"],
    ins: ["datetime"],
    li: [],
    mark: [],
    nav: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    section: [],
    small: [],
    span: [],
    sub: [],
    summary: [],
    sup: [],
    strong: [],
    strike: [],
    table: ["width", "border", "align", "valign"],
    tbody: ["align", "valign"],
    td: ["width", "rowspan", "colspan", "align", "valign"],
    tfoot: ["align", "valign"],
    th: ["width", "rowspan", "colspan", "align", "valign"],
    thead: ["align", "valign"],
    tr: ["rowspan", "align", "valign"],
    tt: [],
    u: [],
    ul: [],
    video: [
      "autoplay",
      "controls",
      "crossorigin",
      "loop",
      "muted",
      "playsinline",
      "poster",
      "preload",
      "src",
      "height",
      "width",
    ],
  };
}

var defaultCSSFilter = new FilterCSS$1();

/**
 * default onTag function
 *
 * @param {String} tag
 * @param {String} html
 * @param {Object} options
 * @return {String}
 */
function onTag(tag, html, options) {
  // do nothing
}

/**
 * default onIgnoreTag function
 *
 * @param {String} tag
 * @param {String} html
 * @param {Object} options
 * @return {String}
 */
function onIgnoreTag(tag, html, options) {
  // do nothing
}

/**
 * default onTagAttr function
 *
 * @param {String} tag
 * @param {String} name
 * @param {String} value
 * @return {String}
 */
function onTagAttr(tag, name, value) {
  // do nothing
}

/**
 * default onIgnoreTagAttr function
 *
 * @param {String} tag
 * @param {String} name
 * @param {String} value
 * @return {String}
 */
function onIgnoreTagAttr(tag, name, value) {
  // do nothing
}

/**
 * default escapeHtml function
 *
 * @param {String} html
 */
function escapeHtml(html) {
  return html.replace(REGEXP_LT, "&lt;").replace(REGEXP_GT, "&gt;");
}

/**
 * default safeAttrValue function
 *
 * @param {String} tag
 * @param {String} name
 * @param {String} value
 * @param {Object} cssFilter
 * @return {String}
 */
function safeAttrValue(tag, name, value, cssFilter) {
  // unescape attribute value firstly
  value = friendlyAttrValue(value);

  if (name === "href" || name === "src") {
    // filter `href` and `src` attribute
    // only allow the value that starts with `http://` | `https://` | `mailto:` | `/` | `#`
    value = _$2.trim(value);
    if (value === "#") return "#";
    if (
      !(
        value.substr(0, 7) === "http://" ||
        value.substr(0, 8) === "https://" ||
        value.substr(0, 7) === "mailto:" ||
        value.substr(0, 4) === "tel:" ||
        value.substr(0, 11) === "data:image/" ||
        value.substr(0, 6) === "ftp://" ||
        value.substr(0, 2) === "./" ||
        value.substr(0, 3) === "../" ||
        value[0] === "#" ||
        value[0] === "/"
      )
    ) {
      return "";
    }
  } else if (name === "background") {
    // filter `background` attribute (maybe no use)
    // `javascript:`
    REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;
    if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {
      return "";
    }
  } else if (name === "style") {
    // `expression()`
    REGEXP_DEFAULT_ON_TAG_ATTR_7.lastIndex = 0;
    if (REGEXP_DEFAULT_ON_TAG_ATTR_7.test(value)) {
      return "";
    }
    // `url()`
    REGEXP_DEFAULT_ON_TAG_ATTR_8.lastIndex = 0;
    if (REGEXP_DEFAULT_ON_TAG_ATTR_8.test(value)) {
      REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;
      if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {
        return "";
      }
    }
    if (cssFilter !== false) {
      cssFilter = cssFilter || defaultCSSFilter;
      value = cssFilter.process(value);
    }
  }

  // escape `<>"` before returns
  value = escapeAttrValue(value);
  return value;
}

// RegExp list
var REGEXP_LT = /</g;
var REGEXP_GT = />/g;
var REGEXP_QUOTE = /"/g;
var REGEXP_QUOTE_2 = /&quot;/g;
var REGEXP_ATTR_VALUE_1 = /&#([a-zA-Z0-9]*);?/gim;
var REGEXP_ATTR_VALUE_COLON = /&colon;?/gim;
var REGEXP_ATTR_VALUE_NEWLINE = /&newline;?/gim;
var REGEXP_DEFAULT_ON_TAG_ATTR_4 =
  /((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a)\:/gi;
var REGEXP_DEFAULT_ON_TAG_ATTR_7 =
  /e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi;
var REGEXP_DEFAULT_ON_TAG_ATTR_8 = /u\s*r\s*l\s*\(.*/gi;

/**
 * escape double quote
 *
 * @param {String} str
 * @return {String} str
 */
function escapeQuote(str) {
  return str.replace(REGEXP_QUOTE, "&quot;");
}

/**
 * unescape double quote
 *
 * @param {String} str
 * @return {String} str
 */
function unescapeQuote(str) {
  return str.replace(REGEXP_QUOTE_2, '"');
}

/**
 * escape html entities
 *
 * @param {String} str
 * @return {String}
 */
function escapeHtmlEntities(str) {
  return str.replace(REGEXP_ATTR_VALUE_1, function replaceUnicode(str, code) {
    return code[0] === "x" || code[0] === "X"
      ? String.fromCharCode(parseInt(code.substr(1), 16))
      : String.fromCharCode(parseInt(code, 10));
  });
}

/**
 * escape html5 new danger entities
 *
 * @param {String} str
 * @return {String}
 */
function escapeDangerHtml5Entities(str) {
  return str
    .replace(REGEXP_ATTR_VALUE_COLON, ":")
    .replace(REGEXP_ATTR_VALUE_NEWLINE, " ");
}

/**
 * clear nonprintable characters
 *
 * @param {String} str
 * @return {String}
 */
function clearNonPrintableCharacter(str) {
  var str2 = "";
  for (var i = 0, len = str.length; i < len; i++) {
    str2 += str.charCodeAt(i) < 32 ? " " : str.charAt(i);
  }
  return _$2.trim(str2);
}

/**
 * get friendly attribute value
 *
 * @param {String} str
 * @return {String}
 */
function friendlyAttrValue(str) {
  str = unescapeQuote(str);
  str = escapeHtmlEntities(str);
  str = escapeDangerHtml5Entities(str);
  str = clearNonPrintableCharacter(str);
  return str;
}

/**
 * unescape attribute value
 *
 * @param {String} str
 * @return {String}
 */
function escapeAttrValue(str) {
  str = escapeQuote(str);
  str = escapeHtml(str);
  return str;
}

/**
 * `onIgnoreTag` function for removing all the tags that are not in whitelist
 */
function onIgnoreTagStripAll() {
  return "";
}

/**
 * remove tag body
 * specify a `tags` list, if the tag is not in the `tags` list then process by the specify function (optional)
 *
 * @param {array} tags
 * @param {function} next
 */
function StripTagBody(tags, next) {
  if (typeof next !== "function") {
    next = function () {};
  }

  var isRemoveAllTag = !Array.isArray(tags);
  function isRemoveTag(tag) {
    if (isRemoveAllTag) return true;
    return _$2.indexOf(tags, tag) !== -1;
  }

  var removeList = [];
  var posStart = false;

  return {
    onIgnoreTag: function (tag, html, options) {
      if (isRemoveTag(tag)) {
        if (options.isClosing) {
          var ret = "[/removed]";
          var end = options.position + ret.length;
          removeList.push([
            posStart !== false ? posStart : options.position,
            end,
          ]);
          posStart = false;
          return ret;
        } else {
          if (!posStart) {
            posStart = options.position;
          }
          return "[removed]";
        }
      } else {
        return next(tag, html, options);
      }
    },
    remove: function (html) {
      var rethtml = "";
      var lastPos = 0;
      _$2.forEach(removeList, function (pos) {
        rethtml += html.slice(lastPos, pos[0]);
        lastPos = pos[1];
      });
      rethtml += html.slice(lastPos);
      return rethtml;
    },
  };
}

/**
 * remove html comments
 *
 * @param {String} html
 * @return {String}
 */
function stripCommentTag(html) {
  var retHtml = "";
  var lastPos = 0;
  while (lastPos < html.length) {
    var i = html.indexOf("<!--", lastPos);
    if (i === -1) {
      retHtml += html.slice(lastPos);
      break;
    }
    retHtml += html.slice(lastPos, i);
    var j = html.indexOf("-->", i);
    if (j === -1) {
      break;
    }
    lastPos = j + 3;
  }
  return retHtml;
}

/**
 * remove invisible characters
 *
 * @param {String} html
 * @return {String}
 */
function stripBlankChar(html) {
  var chars = html.split("");
  chars = chars.filter(function (char) {
    var c = char.charCodeAt(0);
    if (c === 127) return false;
    if (c <= 31) {
      if (c === 10 || c === 13) return true;
      return false;
    }
    return true;
  });
  return chars.join("");
}

_default$1.whiteList = getDefaultWhiteList();
_default$1.getDefaultWhiteList = getDefaultWhiteList;
_default$1.onTag = onTag;
_default$1.onIgnoreTag = onIgnoreTag;
_default$1.onTagAttr = onTagAttr;
_default$1.onIgnoreTagAttr = onIgnoreTagAttr;
_default$1.safeAttrValue = safeAttrValue;
_default$1.escapeHtml = escapeHtml;
_default$1.escapeQuote = escapeQuote;
_default$1.unescapeQuote = unescapeQuote;
_default$1.escapeHtmlEntities = escapeHtmlEntities;
_default$1.escapeDangerHtml5Entities = escapeDangerHtml5Entities;
_default$1.clearNonPrintableCharacter = clearNonPrintableCharacter;
_default$1.friendlyAttrValue = friendlyAttrValue;
_default$1.escapeAttrValue = escapeAttrValue;
_default$1.onIgnoreTagStripAll = onIgnoreTagStripAll;
_default$1.StripTagBody = StripTagBody;
_default$1.stripCommentTag = stripCommentTag;
_default$1.stripBlankChar = stripBlankChar;
_default$1.cssFilter = defaultCSSFilter;
_default$1.getDefaultCSSWhiteList = getDefaultCSSWhiteList;

var parser$1 = {};

/**
 * Simple HTML Parser
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

var _$1 = util;

/**
 * get tag name
 *
 * @param {String} html e.g. '<a hef="#">'
 * @return {String}
 */
function getTagName(html) {
  var i = _$1.spaceIndex(html);
  if (i === -1) {
    var tagName = html.slice(1, -1);
  } else {
    var tagName = html.slice(1, i + 1);
  }
  tagName = _$1.trim(tagName).toLowerCase();
  if (tagName.slice(0, 1) === "/") tagName = tagName.slice(1);
  if (tagName.slice(-1) === "/") tagName = tagName.slice(0, -1);
  return tagName;
}

/**
 * is close tag?
 *
 * @param {String} html 如：'<a hef="#">'
 * @return {Boolean}
 */
function isClosing(html) {
  return html.slice(0, 2) === "</";
}

/**
 * parse input html and returns processed html
 *
 * @param {String} html
 * @param {Function} onTag e.g. function (sourcePosition, position, tag, html, isClosing)
 * @param {Function} escapeHtml
 * @return {String}
 */
function parseTag$1(html, onTag, escapeHtml) {

  var rethtml = "";
  var lastPos = 0;
  var tagStart = false;
  var quoteStart = false;
  var currentPos = 0;
  var len = html.length;
  var currentTagName = "";
  var currentHtml = "";

  chariterator: for (currentPos = 0; currentPos < len; currentPos++) {
    var c = html.charAt(currentPos);
    if (tagStart === false) {
      if (c === "<") {
        tagStart = currentPos;
        continue;
      }
    } else {
      if (quoteStart === false) {
        if (c === "<") {
          rethtml += escapeHtml(html.slice(lastPos, currentPos));
          tagStart = currentPos;
          lastPos = currentPos;
          continue;
        }
        if (c === ">") {
          rethtml += escapeHtml(html.slice(lastPos, tagStart));
          currentHtml = html.slice(tagStart, currentPos + 1);
          currentTagName = getTagName(currentHtml);
          rethtml += onTag(
            tagStart,
            rethtml.length,
            currentTagName,
            currentHtml,
            isClosing(currentHtml)
          );
          lastPos = currentPos + 1;
          tagStart = false;
          continue;
        }
        if (c === '"' || c === "'") {
          var i = 1;
          var ic = html.charAt(currentPos - i);

          while (ic.trim() === "" || ic === "=") {
            if (ic === "=") {
              quoteStart = c;
              continue chariterator;
            }
            ic = html.charAt(currentPos - ++i);
          }
        }
      } else {
        if (c === quoteStart) {
          quoteStart = false;
          continue;
        }
      }
    }
  }
  if (lastPos < html.length) {
    rethtml += escapeHtml(html.substr(lastPos));
  }

  return rethtml;
}

var REGEXP_ILLEGAL_ATTR_NAME = /[^a-zA-Z0-9_:\.\-]/gim;

/**
 * parse input attributes and returns processed attributes
 *
 * @param {String} html e.g. `href="#" target="_blank"`
 * @param {Function} onAttr e.g. `function (name, value)`
 * @return {String}
 */
function parseAttr$1(html, onAttr) {

  var lastPos = 0;
  var retAttrs = [];
  var tmpName = false;
  var len = html.length;

  function addAttr(name, value) {
    name = _$1.trim(name);
    name = name.replace(REGEXP_ILLEGAL_ATTR_NAME, "").toLowerCase();
    if (name.length < 1) return;
    var ret = onAttr(name, value || "");
    if (ret) retAttrs.push(ret);
  }

  // 逐个分析字符
  for (var i = 0; i < len; i++) {
    var c = html.charAt(i);
    var v, j;
    if (tmpName === false && c === "=") {
      tmpName = html.slice(lastPos, i);
      lastPos = i + 1;
      continue;
    }
    if (tmpName !== false) {
      if (
        i === lastPos &&
        (c === '"' || c === "'") &&
        html.charAt(i - 1) === "="
      ) {
        j = html.indexOf(c, i + 1);
        if (j === -1) {
          break;
        } else {
          v = _$1.trim(html.slice(lastPos + 1, j));
          addAttr(tmpName, v);
          tmpName = false;
          i = j;
          lastPos = i + 1;
          continue;
        }
      }
    }
    if (/\s|\n|\t/.test(c)) {
      html = html.replace(/\s|\n|\t/g, " ");
      if (tmpName === false) {
        j = findNextEqual(html, i);
        if (j === -1) {
          v = _$1.trim(html.slice(lastPos, i));
          addAttr(v);
          tmpName = false;
          lastPos = i + 1;
          continue;
        } else {
          i = j - 1;
          continue;
        }
      } else {
        j = findBeforeEqual(html, i - 1);
        if (j === -1) {
          v = _$1.trim(html.slice(lastPos, i));
          v = stripQuoteWrap(v);
          addAttr(tmpName, v);
          tmpName = false;
          lastPos = i + 1;
          continue;
        } else {
          continue;
        }
      }
    }
  }

  if (lastPos < html.length) {
    if (tmpName === false) {
      addAttr(html.slice(lastPos));
    } else {
      addAttr(tmpName, stripQuoteWrap(_$1.trim(html.slice(lastPos))));
    }
  }

  return _$1.trim(retAttrs.join(" "));
}

function findNextEqual(str, i) {
  for (; i < str.length; i++) {
    var c = str[i];
    if (c === " ") continue;
    if (c === "=") return i;
    return -1;
  }
}

function findBeforeEqual(str, i) {
  for (; i > 0; i--) {
    var c = str[i];
    if (c === " ") continue;
    if (c === "=") return i;
    return -1;
  }
}

function isQuoteWrapString(text) {
  if (
    (text[0] === '"' && text[text.length - 1] === '"') ||
    (text[0] === "'" && text[text.length - 1] === "'")
  ) {
    return true;
  } else {
    return false;
  }
}

function stripQuoteWrap(text) {
  if (isQuoteWrapString(text)) {
    return text.substr(1, text.length - 2);
  } else {
    return text;
  }
}

parser$1.parseTag = parseTag$1;
parser$1.parseAttr = parseAttr$1;

/**
 * filter xss
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

var FilterCSS = lib.exports.FilterCSS;
var DEFAULT = _default$1;
var parser = parser$1;
var parseTag = parser.parseTag;
var parseAttr = parser.parseAttr;
var _ = util;

/**
 * returns `true` if the input value is `undefined` or `null`
 *
 * @param {Object} obj
 * @return {Boolean}
 */
function isNull(obj) {
  return obj === undefined || obj === null;
}

/**
 * get attributes for a tag
 *
 * @param {String} html
 * @return {Object}
 *   - {String} html
 *   - {Boolean} closing
 */
function getAttrs(html) {
  var i = _.spaceIndex(html);
  if (i === -1) {
    return {
      html: "",
      closing: html[html.length - 2] === "/",
    };
  }
  html = _.trim(html.slice(i + 1, -1));
  var isClosing = html[html.length - 1] === "/";
  if (isClosing) html = _.trim(html.slice(0, -1));
  return {
    html: html,
    closing: isClosing,
  };
}

/**
 * shallow copy
 *
 * @param {Object} obj
 * @return {Object}
 */
function shallowCopyObject(obj) {
  var ret = {};
  for (var i in obj) {
    ret[i] = obj[i];
  }
  return ret;
}

/**
 * FilterXSS class
 *
 * @param {Object} options
 *        whiteList, onTag, onTagAttr, onIgnoreTag,
 *        onIgnoreTagAttr, safeAttrValue, escapeHtml
 *        stripIgnoreTagBody, allowCommentTag, stripBlankChar
 *        css{whiteList, onAttr, onIgnoreAttr} `css=false` means don't use `cssfilter`
 */
function FilterXSS(options) {
  options = shallowCopyObject(options || {});

  if (options.stripIgnoreTag) {
    if (options.onIgnoreTag) {
      console.error(
        'Notes: cannot use these two options "stripIgnoreTag" and "onIgnoreTag" at the same time'
      );
    }
    options.onIgnoreTag = DEFAULT.onIgnoreTagStripAll;
  }

  options.whiteList = options.whiteList || DEFAULT.whiteList;
  options.onTag = options.onTag || DEFAULT.onTag;
  options.onTagAttr = options.onTagAttr || DEFAULT.onTagAttr;
  options.onIgnoreTag = options.onIgnoreTag || DEFAULT.onIgnoreTag;
  options.onIgnoreTagAttr = options.onIgnoreTagAttr || DEFAULT.onIgnoreTagAttr;
  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;
  options.escapeHtml = options.escapeHtml || DEFAULT.escapeHtml;
  this.options = options;

  if (options.css === false) {
    this.cssFilter = false;
  } else {
    options.css = options.css || {};
    this.cssFilter = new FilterCSS(options.css);
  }
}

/**
 * start process and returns result
 *
 * @param {String} html
 * @return {String}
 */
FilterXSS.prototype.process = function (html) {
  // compatible with the input
  html = html || "";
  html = html.toString();
  if (!html) return "";

  var me = this;
  var options = me.options;
  var whiteList = options.whiteList;
  var onTag = options.onTag;
  var onIgnoreTag = options.onIgnoreTag;
  var onTagAttr = options.onTagAttr;
  var onIgnoreTagAttr = options.onIgnoreTagAttr;
  var safeAttrValue = options.safeAttrValue;
  var escapeHtml = options.escapeHtml;
  var cssFilter = me.cssFilter;

  // remove invisible characters
  if (options.stripBlankChar) {
    html = DEFAULT.stripBlankChar(html);
  }

  // remove html comments
  if (!options.allowCommentTag) {
    html = DEFAULT.stripCommentTag(html);
  }

  // if enable stripIgnoreTagBody
  var stripIgnoreTagBody = false;
  if (options.stripIgnoreTagBody) {
    var stripIgnoreTagBody = DEFAULT.StripTagBody(
      options.stripIgnoreTagBody,
      onIgnoreTag
    );
    onIgnoreTag = stripIgnoreTagBody.onIgnoreTag;
  }

  var retHtml = parseTag(
    html,
    function (sourcePosition, position, tag, html, isClosing) {
      var info = {
        sourcePosition: sourcePosition,
        position: position,
        isClosing: isClosing,
        isWhite: whiteList.hasOwnProperty(tag),
      };

      // call `onTag()`
      var ret = onTag(tag, html, info);
      if (!isNull(ret)) return ret;

      if (info.isWhite) {
        if (info.isClosing) {
          return "</" + tag + ">";
        }

        var attrs = getAttrs(html);
        var whiteAttrList = whiteList[tag];
        var attrsHtml = parseAttr(attrs.html, function (name, value) {
          // call `onTagAttr()`
          var isWhiteAttr = _.indexOf(whiteAttrList, name) !== -1;
          var ret = onTagAttr(tag, name, value, isWhiteAttr);
          if (!isNull(ret)) return ret;

          if (isWhiteAttr) {
            // call `safeAttrValue()`
            value = safeAttrValue(tag, name, value, cssFilter);
            if (value) {
              return name + '="' + value + '"';
            } else {
              return name;
            }
          } else {
            // call `onIgnoreTagAttr()`
            var ret = onIgnoreTagAttr(tag, name, value, isWhiteAttr);
            if (!isNull(ret)) return ret;
            return;
          }
        });

        // build new tag html
        var html = "<" + tag;
        if (attrsHtml) html += " " + attrsHtml;
        if (attrs.closing) html += " /";
        html += ">";
        return html;
      } else {
        // call `onIgnoreTag()`
        var ret = onIgnoreTag(tag, html, info);
        if (!isNull(ret)) return ret;
        return escapeHtml(html);
      }
    },
    escapeHtml
  );

  // if enable stripIgnoreTagBody
  if (stripIgnoreTagBody) {
    retHtml = stripIgnoreTagBody.remove(retHtml);
  }

  return retHtml;
};

var xss = FilterXSS;

/**
 * xss
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

(function (module, exports) {
var DEFAULT = _default$1;
var parser = parser$1;
var FilterXSS = xss;

/**
 * filter xss function
 *
 * @param {String} html
 * @param {Object} options { whiteList, onTag, onTagAttr, onIgnoreTag, onIgnoreTagAttr, safeAttrValue, escapeHtml }
 * @return {String}
 */
function filterXSS(html, options) {
  var xss = new FilterXSS(options);
  return xss.process(html);
}

exports = module.exports = filterXSS;
exports.filterXSS = filterXSS;
exports.FilterXSS = FilterXSS;
for (var i in DEFAULT) exports[i] = DEFAULT[i];
for (var i in parser) exports[i] = parser[i];

// using `xss` on the WebWorker, output `filterXSS` to the globals
function isWorkerEnv() {
  return (
    typeof self !== "undefined" &&
    typeof DedicatedWorkerGlobalScope !== "undefined" &&
    self instanceof DedicatedWorkerGlobalScope
  );
}
if (isWorkerEnv()) {
  self.filterXSS = module.exports;
}
}(lib$1, lib$1.exports));

/** @license
 * Copyright 2020 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Supplies the File constructor for Microsoft Legacy Edge.
 *
 * @param fileBits Contents for file
 * @param fileName Name for file
 * @param options Bucket of options, euch as `type` for the MIME type; defaults to empty string for `type`
 * @return File or, for Microsoft Legacy Edge, Blob
 * @see https://developer.mozilla.org/en-US/docs/Web/API/File/File
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob
 */
function new_File(fileBits, fileName, options) {
    let file;
    try {
        // Modern browser
        file = new File(fileBits, fileName, options);
    }
    catch (error) {
        // Microsoft Legacy Edge
        /* istanbul ignore next */
        file = (function () {
            if (typeof options === "undefined") {
                // Microsoft Legacy Edge fails in karma if options is not defined
                options = {
                    type: ""
                };
            }
            const blob = new Blob(fileBits, options);
            blob.lastModified = new Date();
            blob.name = fileName;
            return blob;
        })();
    }
    return file;
}

/** @license
 * Copyright 2018 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Extracts JSON from a Blob.
 *
 * @param blob Blob to use as source
 * @return A promise that will resolve with JSON or null
 */
function blobToJson(blob) {
    return new Promise(resolve => {
        blobToText(blob).then(blobContents => {
            try {
                resolve(JSON.parse(blobContents));
            }
            catch (err) {
                resolve(null);
            }
        }, () => resolve(null));
    });
}
/**
 * Converts a Blob to a File.
 *
 * @param blob Blob to use as source
 * @param filename Name to use for file
 * @param mimeType MIME type to override blob's MIME type
 * @return File created out of Blob and filename
 */
function blobToFile(blob, filename, mimeType) {
    return blob
        ? new_File([blob], filename ? filename : "", {
            type: mimeType || blob.type
        })
        : null;
}
/**
 * Extracts text from a Blob.
 *
 * @param blob Blob to use as source
 * @return A promise that will resolve with text read from blob
 */
function blobToText(blob) {
    return new Promise(resolve => {
        const reader = new FileReader();
        reader.onload = function (evt) {
            // Disable needed because Node requires cast
            // tslint:disable-next-line: no-unnecessary-type-assertion
            const blobContents = evt.target.result;
            resolve(blobContents ? blobContents : ""); // not handling ArrayContents variant
        };
        reader.readAsText(blob);
    });
}
/**
 * Checks that a URL path ends with a slash.
 *
 * @param url URL to check
 * @return URL, appended with slash if missing
 */
function checkUrlPathTermination(url) {
    return url ? (url.endsWith("/") ? url : url + "/") : url;
}
/**
 * Makes a deep clone, including arrays but not functions.
 *
 * @param obj Object to be cloned
 * @return Clone of obj
 * @example
 * ```js
 * import { cloneObject } from "utils/object-helpers";
 * const original = { foo: "bar" }
 * const copy = cloneObject(original)
 * copy.foo // "bar"
 * copy === original // false
 * ```
 */
function cloneObject(obj) {
    let clone = {};
    // first check array
    if (Array.isArray(obj)) {
        clone = obj.map(cloneObject);
    }
    else if (typeof obj === "object") {
        if (obj instanceof File) {
            const fileOptions = obj.type ? { type: obj.type } : undefined;
            clone = new File([obj], obj.name, fileOptions);
        }
        else {
            for (const i in obj) {
                if (obj[i] != null && typeof obj[i] === "object") {
                    clone[i] = cloneObject(obj[i]);
                }
                else {
                    clone[i] = obj[i];
                }
            }
        }
    }
    else {
        clone = obj;
    }
    return clone;
}
/**
 * Gets a property out of a deeply nested object.
 * Does not handle anything but nested object graph
 *
 * @param obj Object to retrieve value from
 * @param path Path into an object, e.g., "data.values.webmap", where "data" is a top-level property
 *             in obj
 * @return Value at end of path
 */
function getProp(obj, path) {
    return path.split(".").reduce(function (prev, curr) {
        /* istanbul ignore next no need to test undefined scenario */
        return prev ? prev[curr] : undefined;
    }, obj);
}
/**
 * Sets a deeply nested property of an object.
 * Creates the full path if it does not exist.
 *
 * @param obj Object to set value of
 * @param path Path into an object, e.g., "data.values.webmap", where "data" is a top-level property in obj
 * @param value The value to set at the end of the path
 */
function setCreateProp(obj, path, value) {
    const pathParts = path.split(".");
    pathParts.reduce((a, b, c) => {
        if (c === pathParts.length - 1) {
            a[b] = value;
            return value;
        }
        else {
            if (!a[b]) {
                a[b] = {};
            }
            return a[b];
        }
    }, obj);
}
/**
 * Sets a deeply nested property of an object.
 * Does nothing if the full path does not exist.
 *
 * @param obj Object to set value of
 * @param path Path into an object, e.g., "data.values.webmap", where "data" is a top-level property in obj
 * @param value The value to set at the end of the path
 */
function setProp(obj, path, value) {
    if (getProp(obj, path)) {
        const pathParts = path.split(".");
        pathParts.reduce((a, b, c) => {
            if (c === pathParts.length - 1) {
                a[b] = value;
                return value;
            }
            else {
                return a[b];
            }
        }, obj);
    }
}

/**
 * Gets a Blob from a web site.
 *
 * @param url Address of Blob
 * @param authentication Credentials for the request
 * @param requestOptions - Options for the request, including parameters relevant to the endpoint.
 * @return Promise that will resolve with Blob or an AGO-style JSON failure response
 */
function getBlob(url, authentication, requestOptions = {}) {
    if (!url) {
        return Promise.reject("Url must be provided");
    }
    const blobRequestOptions = {
        authentication: authentication,
        rawResponse: true,
        ...requestOptions
    };
    return request(url, blobRequestOptions).then(response => {
        return response.blob();
    });
}

/** @license
 * Copyright 2018 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// ------------------------------------------------------------------------------------------------------------------ //
const ZIP_FILE_HEADER_SIGNATURE = "PK";
/**
 * Gets a Blob from a web site and casts it as a file using the supplied name.
 *
 * @param url Address of Blob
 * @param filename Name to use for file
 * @param authentication Credentials for the request
 * @return Promise that will resolve with a File, undefined if the Blob is null, or an AGO-style JSON failure response
 */
function getBlobAsFile(url, filename, authentication, ignoreErrors = [], mimeType) {
    return new Promise((resolve, reject) => {
        // Get the blob from the URL
        getBlobCheckForError(url, authentication, ignoreErrors).then(blob => !blob ? resolve(null) : resolve(blobToFile(blob, filename, mimeType)), reject);
    });
}
/**
 * Gets a Blob from a web site and checks for a JSON error packet in the Blob.
 *
 * @param url Address of Blob
 * @param authentication Credentials for the request
 * @param ignoreErrors List of HTTP error codes that should be ignored
 * @return Promise that will resolve with Blob or an AGO-REST JSON failure response
 */
function getBlobCheckForError(url, authentication, ignoreErrors = []) {
    return new Promise((resolve, reject) => {
        // Get the blob from the URL
        getBlob(url, authentication).then(blob => {
            // Reclassify text/plain blobs as needed
            _fixTextBlobType(blob).then(adjustedBlob => {
                if (adjustedBlob.type === "application/json") {
                    // Blob may be an error
                    // eslint-disable-next-line @typescript-eslint/no-floating-promises
                    blobToJson(adjustedBlob).then((json) => {
                        // Check for valid JSON with an error
                        if (json?.error) {
                            const code = json.error.code;
                            if (code !== undefined && ignoreErrors.indexOf(code) >= 0) {
                                resolve(null); // Error, but ignored
                            }
                            else {
                                reject(json); // Other error; fail with error
                            }
                        }
                        else {
                            resolve(adjustedBlob);
                        }
                    });
                }
                else {
                    resolve(adjustedBlob);
                }
            }, reject);
        }, reject);
    });
}
/**
 * Gets the data information of an AGO item in its JSON form.
 *
 * @param itemId Id of an item whose data information is sought
 * @param filename Name to use for file
 * @param authentication Credentials for the request to AGO
 * @return Promise that will resolve with JSON, or an AGO-style JSON failure response
 */
function getItemDataAsJson(itemId, authentication) {
    return new Promise(resolve => {
        getItemDataBlob(itemId, authentication).then(blob => resolve(blobToJson(blob)), () => resolve(null));
    });
}
/**
 * Gets the data information of an AGO item in its raw (Blob) form.
 *
 * @param itemId Id of an item whose data information is sought
 * @param authentication Credentials for the request to AGO
 * @return A promise that will resolve with the data Blob or null if the item doesn't have a data section
 */
function getItemDataBlob(itemId, authentication) {
    return new Promise(resolve => {
        const url = getItemDataBlobUrl(itemId, authentication);
        getBlobCheckForError(url, authentication, [400, 500]).then(blob => resolve(_fixTextBlobType(blob)), () => resolve(null));
    });
}
/**
 * Gets the URL to the data information of an AGO item in its raw (Blob) form.
 *
 * @param itemId Id of an item whose data information is sought
 * @param authentication Credentials for the request to AGO
 * @return URL string
 */
function getItemDataBlobUrl(itemId, authentication) {
    return `${getPortalSharingUrlFromAuth(authentication)}/content/items/${itemId}/data`;
}
/**
 * Extracts the portal sharing url from a supplied authentication.
 *
 * @param authentication Credentials for the request to AGO
 * @returns Portal sharing url to be used in API requests, defaulting to `https://www.arcgis.com/sharing/rest`
 */
function getPortalSharingUrlFromAuth(authentication) {
    // If auth was passed, use that portal
    return getProp(authentication, "portal");
}
function getThumbnailFile(url, filename, authentication) {
    return new Promise(resolve => {
        getBlobAsFile(url, filename, authentication, [500]).then(resolve, () => resolve(null));
    });
}
// ------------------------------------------------------------------------------------------------------------------ //
/**
 * Fixes the types of Blobs incorrectly typed as text/plain.
 *
 * @param blob Blob to check
 * @return Promise resolving to original Blob, unless it's originally typed as text/plain but is
 * really JSON, ZIP, or XML
 * @protected
 */
function _fixTextBlobType(blob) {
    return new Promise((resolve, reject) => {
        if (blob &&
            blob.size > 0 &&
            (blob.type.startsWith("text/plain") ||
                blob.type.startsWith("application/json"))) {
            blobToText(blob).then(blobText => {
                // Convertible to JSON?
                try {
                    JSON.parse(blobText);
                    // Yes; reclassify as JSON
                    resolve(new Blob([blob], { type: "application/json" }));
                }
                catch (ignored) {
                    // Nope; test for ZIP file
                    if (blobText.length > 4 &&
                        blobText.substr(0, 4) === ZIP_FILE_HEADER_SIGNATURE) {
                        // Yes; reclassify as ZIP
                        resolve(new Blob([blob], { type: "application/zip" }));
                    }
                    else if (blobText.startsWith("<")) {
                        // Reclassify as XML; since the blob started out as text/plain, it's more likely that is
                        // meant to be human-readable, so we'll use text/xml instead of application/xml
                        resolve(new Blob([blob], { type: "text/xml" }));
                    }
                    else {
                        // Leave as text
                        resolve(blob);
                    }
                }
            }, 
            // Faulty blob
            reject);
        }
        else {
            // Empty or not typed as plain text, so simply return
            if (blob) {
                resolve(blob);
            }
            else {
                reject();
            }
        }
    });
}

/** @license
 * Copyright 2018 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Updates an item.
 *
 * @param itemInfo The base info of an item; note that this content will be serialized, which doesn't work
 * for binary content
 * @param authentication Credentials for request
 * @param folderId Item's folder
 * @param additionalParams Updates that are put under the `params` property, which is not serialized
 * @return
 */
function updateItem(itemInfo, authentication, folderId, additionalParams) {
    return new Promise((resolve, reject) => {
        const updateOptions = {
            item: itemInfo,
            folderId: folderId,
            authentication: authentication,
            params: {
                ...(additionalParams ?? {})
            }
        };
        updateItem$1(updateOptions).then(response => (response.success ? resolve(response) : reject(response)), err => reject(err));
    });
}

/** @license
 * Copyright 2018 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A visit flag used in the topological sort algorithm.
 *
 * @protected
 */
var ESortVisitState;
(function (ESortVisitState) {
    /** not yet visited */
    ESortVisitState[ESortVisitState["NotYetVisited"] = 0] = "NotYetVisited";
    /** visited, in progress */
    ESortVisitState[ESortVisitState["InProgress"] = 1] = "InProgress";
    /** finished */
    ESortVisitState[ESortVisitState["Finished"] = 2] = "Finished"; // BLACK
})(ESortVisitState || (ESortVisitState = {}));

/** @license
 * Copyright 2018 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//#endregion ---------------------------------------------------------------------------------------------------------//
const SolutionTemplateFormatVersion = 1;
//#region Enums ------------------------------------------------------------------------------------------------------//
/**
 * Flag for storing an item's binary resources.
 */
var EFileType;
(function (EFileType) {
    EFileType[EFileType["Data"] = 0] = "Data";
    EFileType[EFileType["Info"] = 1] = "Info";
    EFileType[EFileType["Metadata"] = 2] = "Metadata";
    EFileType[EFileType["Resource"] = 3] = "Resource";
    EFileType[EFileType["Thumbnail"] = 4] = "Thumbnail";
})(EFileType || (EFileType = {}));
var SFileType;
(function (SFileType) {
    SFileType[SFileType["Data"] = 0] = "Data";
    SFileType[SFileType["Info"] = 1] = "Info";
    SFileType[SFileType["Metadata"] = 2] = "Metadata";
    SFileType[SFileType["Resource"] = 3] = "Resource";
    SFileType[SFileType["Thumbnail"] = 4] = "Thumbnail";
})(SFileType || (SFileType = {}));
/**
 * Flags for reporting the status of creating or deploying an item.
 */
var EItemProgressStatus;
(function (EItemProgressStatus) {
    EItemProgressStatus[EItemProgressStatus["Started"] = 0] = "Started";
    EItemProgressStatus[EItemProgressStatus["Created"] = 1] = "Created";
    EItemProgressStatus[EItemProgressStatus["Cancelled"] = 2] = "Cancelled";
    EItemProgressStatus[EItemProgressStatus["Finished"] = 3] = "Finished";
    EItemProgressStatus[EItemProgressStatus["Ignored"] = 4] = "Ignored";
    EItemProgressStatus[EItemProgressStatus["Failed"] = 5] = "Failed";
    EItemProgressStatus[EItemProgressStatus["Unknown"] = 6] = "Unknown";
})(EItemProgressStatus || (EItemProgressStatus = {}));
//#endregion ---------------------------------------------------------------------------------------------------------//

/** @license
 * Copyright 2020 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Generates a folder and filename for storing a copy of an item's resource in a storage item.
 *
 * @param prefix Base prefix for resource
 * @param storageVersion Version of the Solution template
 * @param sourceResourceFilename Either filename or folder/filename to resource
 * @return Folder and filename for storage; folder is the itemID plus ("_" + storageFolder) if storageFolder
 * exists plus ("_" + part of sourceResourceFilename before "/" if that separator exists);
 * file is sourceResourceFilename
 * @see convertStorageResourceToItemResource
 */
function convertItemResourceToStorageResource(prefix, sourceResourceFilename, storageVersion = 0) {
    let folder = prefix;
    let filename = sourceResourceFilename;
    const iLastSlash = filename.lastIndexOf("/");
    if (iLastSlash >= 0) {
        let subpath = filename.substr(0, iLastSlash);
        if (storageVersion === 0) {
            subpath = subpath.replace("/", "_");
            folder += "_" + subpath;
        }
        else {
            folder += "/" + subpath;
        }
        filename = filename.substr(iLastSlash + 1);
    }
    return { folder, filename };
}

/** @license
 * Copyright 2020 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Extracts an item's resource folder and filename from the filename used to store a copy in a storage item.
 *
 * @param storageResourceFilename Filename used to store the resource, metadata, or thumbnail of an item
 * @param storageVersion Version of the Solution template
 * @return Folder and filename for storing information in an item, as well as the type (resource, metadata,
 * or thumbnail) of the information; the folder property is only meaningful for the resource type
 * @see generateResourceStorageFilename
 * @see generateMetadataStorageFilename
 * @see generateThumbnailStorageFilename
 * @see convertItemResourceToStorageResource
 */
function convertStorageResourceToItemResource(storageResourceFilename, storageVersion = 0) {
    const nameParts = storageResourceFilename.split("/");
    let filename = nameParts.pop();
    let folder = "";
    const firstPrefixPart = nameParts.shift(); // undefined if there's no folder
    // Handle special "folders"
    let type = EFileType.Resource;
    if (firstPrefixPart) {
        if (firstPrefixPart.endsWith("_info_thumbnail")) {
            type = EFileType.Thumbnail;
        }
        else if (firstPrefixPart.endsWith("_info_metadata")) {
            type = EFileType.Metadata;
            filename = "metadata.xml";
        }
        else if (firstPrefixPart.endsWith("_info_data")) {
            type = EFileType.Data;
        }
        else if (firstPrefixPart.endsWith("_info_dataz")) {
            filename = filename.replace(/\.zip$/, "");
            type = EFileType.Data;
            // Otherwise, strip off item id
        }
        else if (storageVersion < 1) {
            // Version 0
            const folderStart = firstPrefixPart.indexOf("_");
            if (folderStart > 0) {
                folder = firstPrefixPart.substr(folderStart + 1);
            }
        }
        else {
            // Version ≥ 1
            folder = nameParts.join("/"); // folder is optional, in which case this will be ""
        }
    }
    return { type, folder, filename };
}

/** @license
 * Copyright 2018 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Generates the URL for reading an item's resource given the filename of the resource.
 *
 * @param sourcePortalSharingUrl Server/sharing
 * @param itemId Id of item
 * @param sourceResourceFilename Either filename or folder/filename to resource
 * @return URL string
 */
function generateSourceResourceUrl(sourcePortalSharingUrl, itemId, sourceResourceFilename) {
    return (checkUrlPathTermination(sourcePortalSharingUrl) +
        "content/items/" +
        itemId +
        "/resources/" +
        sourceResourceFilename);
}
/**
 * Generates a list of full URLs and folder/filename combinations used to store the resources, metadata,
 * and thumbnail of an item.
 *
 * @param portalSharingUrl Server/sharing
 * @param storageItemId Id of storage item
 * @param resourceFilenames List of resource filenames for an item, e.g., ["file1", "myFolder/file2"]
 * @param storageVersion Version of the Solution template
 * @return List of item files' URLs and folder/filenames for storing the files
 */
function generateStorageFilePaths(portalSharingUrl, storageItemId, resourceFilenames = [], storageVersion = 0) {
    return resourceFilenames.map(resourceFilename => {
        return {
            url: generateSourceResourceUrl(portalSharingUrl, storageItemId, resourceFilename),
            ...convertStorageResourceToItemResource(resourceFilename, storageVersion)
        };
    });
}
/**
 * Gets the thumbnail of an item or group.
 *
 * @param authentication Credentials for the request to the storage
 * @param filePaths List of item files' URLs and folder/filenames for storing the files
 * @return A promise which resolves to a boolean indicating if the copies were successful
 */
function getThumbnailFromStorageItem(authentication, filePaths) {
    let thumbnailUrl;
    let thumbnailFilename;
    filePaths.forEach(path => {
        if (path.type === EFileType.Thumbnail) {
            thumbnailUrl = path.url;
            thumbnailFilename = path.filename;
        }
    });
    if (!thumbnailUrl) {
        return Promise.resolve(null);
    }
    return getThumbnailFile(thumbnailUrl, thumbnailFilename, authentication);
}

/** @license
 * Copyright 2020 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Denotes type information for a SolutionResource
 */
var SolutionResourceType;
(function (SolutionResourceType) {
    SolutionResourceType[SolutionResourceType["thumbnail"] = 0] = "thumbnail";
    SolutionResourceType[SolutionResourceType["metadata"] = 1] = "metadata";
    SolutionResourceType[SolutionResourceType["resource"] = 2] = "resource";
    SolutionResourceType[SolutionResourceType["data"] = 3] = "data";
    SolutionResourceType[SolutionResourceType["fakezip"] = 4] = "fakezip";
    SolutionResourceType[SolutionResourceType["info"] = 5] = "info";
})(SolutionResourceType || (SolutionResourceType = {}));

const jsonEditorCss = ":host{display:block;-webkit-box-sizing:border-box;box-sizing:border-box;margin-left:0.75rem;margin-right:0.75rem;min-width:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:1;flex-shrink:1}:host-group-1-up>.block{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}:host-group-2-up>.block{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}:host-group-3-up>.block{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}:host-group-4-up>.block{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}:host-group-5-up>.block{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}:host-group-6-up>.block{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}:host-group-7-up>.block{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}:host-group-8-up>.block{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}.tablet-block-group-1-up>:host{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}.tablet-block-group-2-up>:host{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}.tablet-block-group-3-up>:host{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}.tablet-block-group-4-up>:host{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}.tablet-block-group-5-up>:host{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}.tablet-block-group-6-up>:host{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}.tablet-block-group-7-up>:host{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}.tablet-block-group-8-up>:host{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}.phone-block-group-1-up>:host{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}.phone-block-group-2-up>:host{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}.phone-block-group-3-up>:host{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}.phone-block-group-4-up>:host{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}.phone-block-group-5-up>:host{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}.phone-block-group-6-up>:host{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}.phone-block-group-7-up>:host{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}.phone-block-group-8-up>:host{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}.code-face :host{letter-spacing:0em;font-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;font-weight:400;font-style:normal}.code-face :host b,.code-face :host strong{font-weight:400}.code-italic :host{letter-spacing:0em;font-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;font-weight:400;font-style:italic}.code-italic :host b,.code-italic :host strong{font-weight:400}.editor-container{position:relative;height:100%}.editor-controls{height:2.75rem;background-color:#F4F4F4}.editor-buttons{float:right}html[dir=rtl] .editor-buttons{float:left}.edit-button{padding-top:0.25rem;-webkit-padding-start:0.5rem;padding-inline-start:0.5rem}.editor-text{width:100%;overflow-y:auto;background-color:#FFFFFF}.edit-width{width:100%}.edit-parent{-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;height:calc(100% - 46px)}.json-edit-container{height:100%;width:100%;border:1px #808080 solid}.padding-right{-webkit-padding-end:0.125rem;padding-inline-end:0.125rem}.btn{margin-bottom:1rem;display:-ms-flexbox;display:flex;-ms-flex-line-pack:center;align-content:center;height:25px;width:120px}.select-ctrl{margin-bottom:1rem}.all-edits{margin-top:4rem}.json-editor-position{position:absolute;left:0px;top:0px;margin:0px;height:100%;width:100%;padding:0px;overflow:hidden;max-height:100% !important}";

class JsonEditor {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    //--------------------------------------------------------------------------
    //
    //  Properties (public)
    //
    //--------------------------------------------------------------------------
    /**
     * Contains the original source item json as it was when the component was created.
     *
     */
    this.original = "";
    /**
     * Contains the translations for this component.
     */
    this.translations = {};
    /**
     * Contains the public value for this component.
     * This should be an item Id for one of the models in the store.
     */
    this.value = undefined;
    /**
     * Contains a unique identifier for when we have multiple instances of the editor.
     * For example when we want to show an items data as well as an items properties.
     *
     * Need to rethink this..would like it to be more generic.
     * We are currently tied to either data or props as this helps us know how to get the correct model from the store.
     */
    this.instanceid = "";
    /**
     * Contains a public value to indicate if the model has any errors
     * that would prevent saving it.
     */
    this.hasErrors = false;
    this._useDiffEditor = false;
    this._loaded = false;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    return (hAsync(Host, { class: "json-editor-position" }, hAsync("div", { id: `${this.instanceid}-editor-container`, class: "editor-container padding-right" }, hAsync("div", { class: "editor-controls" }, hAsync("div", { class: "editor-buttons" }, hAsync("calcite-button", { id: `${this.instanceid}-undo`, color: "blue", appearance: "solid", title: this.translations.undo, onClick: () => this._undo(), scale: "s", class: "edit-button" }, hAsync("calcite-icon", { icon: "undo", scale: "s" })), hAsync("calcite-button", { id: `${this.instanceid}-redo`, color: "blue", appearance: "solid", title: this.translations.redo, onClick: () => this._redo(), scale: "s", class: "edit-button" }, hAsync("calcite-icon", { icon: "redo", scale: "s" })), hAsync("calcite-button", { id: `${this.instanceid}-diff`, color: "blue", appearance: "solid", title: this.translations.diff, onClick: () => this._toggleEditor(), scale: "s", class: "edit-button" }, hAsync("calcite-icon", { icon: "compare", scale: "s" })), hAsync("calcite-button", { id: `${this.instanceid}-search`, appearance: "outline", color: "blue", title: this.translations.search, onClick: () => this._search(), scale: "s", class: "edit-button" }, hAsync("calcite-icon", { icon: "search", scale: "s" })), hAsync("calcite-button", { id: `${this.instanceid}-reset`, color: "blue", appearance: "solid", disabled: true, title: this.translations.cancelEdits, onClick: () => this._reset(), scale: "s", class: "edit-button" }, hAsync("calcite-icon", { icon: "reset", scale: "s" })))), hAsync("div", { class: "edit-parent" }, hAsync("div", { id: `${this.instanceid}-container`, class: "json-edit-container" }), hAsync("div", { id: `${this.instanceid}-diff-container`, class: "json-edit-container display-none" })))));
  }
  componentWillLoad() {
    this._initValueObserver();
  }
  disconnectedCallback() {
    // The doc makes me question what all we should do here
    // StencilJS doc: Called every time the component is disconnected from the DOM, ie, it can
    // be dispatched more than once, DO not confuse with a "onDestroy" kind of event.
    this._destroyEditor();
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  organizationVariableSelected(event) {
    if (this._isTabActive()) {
      this._insertValue(event.detail.value);
    }
  }
  solutionVariableSelected(event) {
    if (this._isTabActive()) {
      this._insertValue(event.detail.value);
    }
  }
  _modelsChanged() {
    if (!this._loaded && this.value) {
      if (state && state.models && Object.keys(state.models).indexOf(this.value) > -1) {
        //get the model and state from the store
        this._setEditModel(this.value);
      }
    }
  }
  _solutionItemSelected(event) {
    if (this.value && event.detail.itemId !== this.value) {
      this._saveCurrentModel(this.value);
    }
  }
  featureServiceSpatialReferenceChange(event) {
    if (this.instanceid === "props" && state.models[this.value].title === event.detail.name) {
      this._setFeatureServiceWkid(event.detail.enabled);
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Events
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Public Methods (async)
  //
  //--------------------------------------------------------------------------
  async reset() {
    return new Promise((resolve, reject) => {
      try {
        this._setEditModel(this.value);
        this._reset();
        resolve({ success: true });
      }
      catch (e) {
        reject(e);
      }
    });
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Initializes the editor when the web component is connected.
   *
   * @protected
   */
  _initEditor() {
    // Set up embedded editor
    if (monaco && monaco.editor) {
      this._editor = monaco.editor.create(document.getElementById(`${this.instanceid}-container`), {
        model: this.model,
        language: 'json',
        readOnly: false,
        theme: "vs",
        minimap: {
          enabled: false
        },
        automaticLayout: true,
        scrollBeyondLastLine: false
      });
      this._currentModel = this._editor.getModel();
      this._contentChanged = this._currentModel.onDidChangeContent(this._onEditorChange.bind(this));
      this._decorationsChanged = this._editor.onDidChangeModelDecorations(this._onDecorationsChange.bind(this));
      this._diffEditor = monaco.editor.createDiffEditor(document.getElementById(`${this.instanceid}-diff-container`), {
        automaticLayout: true
      });
      this._setDiffModel();
      this._loaded = true;
    }
  }
  /**
   * Initializes the observer that will monitor and respond to changes of the value
   *
   * @protected
   */
  _initValueObserver() {
    this._valueObserver = new MutationObserver(ml => {
      ml.forEach(mutation => {
        if (mutation.type === 'attributes' && mutation.attributeName === "value") {
          if (state && state.models && Object.keys(state.models).indexOf(this.value) > -1) {
            const newValue = mutation.target[mutation.attributeName];
            if ((newValue !== mutation.oldValue && this._loaded)) {
              // store the current state
              this._saveCurrentModel(mutation.oldValue);
              // get the model and state from the store
              this._setEditModel(newValue);
            }
            else if (!this._loaded) {
              this._setEditModel(this.value);
            }
          }
        }
      });
    });
    this._valueObserver.observe(this.el, { attributes: true, attributeOldValue: true });
  }
  /**
   * Update the undo redo buttons as necessary
   *
   * @protected
   */
  _onEditorChange() {
    this._toggleUndoRedo();
  }
  /**
   * Decorations are added when errors are found in the editor content
   *
   * @protected
   */
  _onDecorationsChange() {
    const model = this._editor.getModel();
    if (model === null) {
      return;
    }
    const owner = model.getModeId();
    const markers = monaco.editor.getModelMarkers({ owner });
    this.hasErrors = markers.length > 0;
  }
  /**
   * Undo the current edit operation
   *
   * @protected
   */
  _undo() {
    var _a;
    if ((_a = this._currentModel) === null || _a === void 0 ? void 0 : _a.canUndo()) {
      this._currentModel.undo();
      this._toggleUndoRedo();
    }
  }
  /**
   * Redo the previous edit operation
   *
   * @protected
   */
  _redo() {
    var _a;
    if ((_a = this._currentModel) === null || _a === void 0 ? void 0 : _a.canRedo()) {
      this._currentModel.redo();
      this._toggleUndoRedo();
    }
  }
  /**
   * Show/Hide the appropriate editor
   *
   * @protected
   */
  _toggleEditor() {
    this._useDiffEditor = !this._useDiffEditor;
    let diffContainer = document.getElementById(`${this.instanceid}-diff-container`);
    let container = document.getElementById(`${this.instanceid}-container`);
    if (this._useDiffEditor) {
      this._setDiffModel();
      diffContainer.classList.remove("display-none");
      container.classList.add("display-none");
    }
    else {
      diffContainer.classList.add("display-none");
      container.classList.remove("display-none");
    }
  }
  /**
   * Toggle the undo and redo buttons
   *
   * @protected
   */
  _toggleUndoRedo() {
    var _a, _b, _c, _d;
    if ((_a = this._currentModel) === null || _a === void 0 ? void 0 : _a.canUndo()) {
      this._enableButton(`${this.instanceid}-undo`);
    }
    else {
      this._disableButton(`${this.instanceid}-undo`);
    }
    if ((_b = this._currentModel) === null || _b === void 0 ? void 0 : _b.canRedo()) {
      this._enableButton(`${this.instanceid}-redo`);
    }
    else {
      this._disableButton(`${this.instanceid}-redo`);
    }
    if (((_c = this._currentModel) === null || _c === void 0 ? void 0 : _c.canUndo()) || ((_d = this._currentModel) === null || _d === void 0 ? void 0 : _d.canRedo())) {
      this._enableButton(`${this.instanceid}-reset`);
    }
    else {
      this._disableButton(`${this.instanceid}-reset`);
    }
  }
  /**
   * Overrides the editors selection with the value passed in
   *
   * @protected
   */
  _insertValue(v) {
    const editor = this._getEditor();
    const range = editor.getSelection();
    // use pushEditOperations so it will push to the undo stack
    this._currentModel.pushEditOperations([], [{
        forceMoveMarkers: true,
        text: v,
        range
      }]);
    editor.revealRange(range);
  }
  /**
   * Gets the current active editor for diff editor
   *
   * @protected
   */
  _getEditor() {
    return this._useDiffEditor ? this._diffEditor : this._editor;
  }
  /**
   * Frees the editor events and memory when the web component is disconnected.
   *
   * @protected
   */
  _destroyEditor() {
    var _a, _b, _c, _d, _e, _f;
    (_a = this._searchBtnHandler) === null || _a === void 0 ? void 0 : _a.removeEventListener("click", this._search);
    (_b = this._cancelEditsBtnHandler) === null || _b === void 0 ? void 0 : _b.removeEventListener("click", this._reset);
    (_c = this._valueObserver) === null || _c === void 0 ? void 0 : _c.disconnect();
    (_d = this._contentChanged) === null || _d === void 0 ? void 0 : _d.dispose();
    (_e = this._decorationsChanged) === null || _e === void 0 ? void 0 : _e.dispose();
    (_f = this._editor) === null || _f === void 0 ? void 0 : _f.dispose();
    this.original = "";
  }
  /**
   * Resets the stored model to the original value.
   *
   * @protected
   */
  _reset() {
    // update the model
    const org = this._getOriginalValue();
    this.model = monaco.editor.createModel(JSON.stringify(JSON.parse(org), null, '\t'), "json");
    // update the editor
    this._editor.setModel(this.model);
    this._setCurrentModel();
    this._setDiffModel();
    this._saveCurrentModel(this.value);
    this._setEditorFocus();
    // update the ui
    this._toggleUndoRedo();
  }
  /**
   * Disables a button.
   *
   * @param buttonId Id of button to disable
   *
    * @protected
   */
  _disableButton(buttonId) {
    var _a;
    (_a = document.getElementById(buttonId)) === null || _a === void 0 ? void 0 : _a.setAttribute("disabled", "");
  }
  /**
   * Enables a button.
   *
   * @param buttonId Id of button to enable
   *
   * @protected
   */
  _enableButton(buttonId) {
    var _a;
    (_a = document.getElementById(buttonId)) === null || _a === void 0 ? void 0 : _a.removeAttribute("disabled");
  }
  /**
   * Handles click on "Search" button.
   *
   * @protected
   */
  _search() {
    const editor = this._getEditor();
    // force focus should likely just be a workaround
    //https://github.com/microsoft/monaco-editor/issues/2355
    editor.focus();
    editor.trigger('toggleFind', 'actions.find');
  }
  /**
   * Save the current model state to the store
   *
   * @protected
   */
  _saveCurrentModel(id) {
    if (this._editor && id && Object.keys(state.models).indexOf(id) > -1) {
      state.models[id][this._isData() ? "dataModel" : "propsModel"] = this.model;
      state.models[id].state = this._editor.saveViewState();
    }
  }
  /**
   * Change the editors model
   *
   * @protected
   */
  _setEditModel(id) {
    const data = state.models[id];
    this.model = this._isData() ? data.dataModel : data.propsModel;
    this.original = this._isData() ? data.dataOriginValue : data.propsOriginValue;
    if (this._editor) {
      this._editor.setModel(this.model);
      if (data.state) {
        this._editor.restoreViewState(data.state);
      }
      this._setDiffModel();
      this._setEditorFocus();
    }
    else {
      this._initEditor();
    }
    this._setCurrentModel();
    this._toggleUndoRedo();
  }
  /**
   * Set the current model and event handler
   *
   * @protected
   */
  _setCurrentModel() {
    this._currentModel = this._editor.getModel();
    if (this._contentChanged) {
      this._contentChanged.dispose();
    }
    this._contentChanged = this._currentModel.onDidChangeContent(this._onEditorChange.bind(this));
  }
  /**
   * Set the models for the diff editor
   *
   * @protected
   */
  _setDiffModel() {
    if (this._diffEditor) {
      this._diffEditor.setModel({
        original: monaco.editor.createModel(JSON.stringify(JSON.parse(this.original), null, '\t'), "json"),
        modified: this._editor.getModel()
      });
    }
  }
  /**
   * Set the models for the diff editor
   *
   * @protected
   */
  _setEditorFocus() {
    if (this._useDiffEditor) {
      this._diffEditor.focus();
    }
    else {
      this._editor.focus();
    }
  }
  /**
   * When the json-editor is embedded within a solition-item component we will have two tabs
   * with the json editor. This provides a way for us to check if that parent tab is active
   * while inserting variables.
   *
   * @protected
   */
  _isTabActive() {
    const tab = document.getElementById(`${this.instanceid}-tab`);
    return tab ? tab.active : true;
  }
  /**
   * When the json-editor is embedded within a solition-item component we will have two tabs
   * with the json editor. One for the data section of the item and one for the props section.
   * This provides a way to check what one we are working with.
   *
   * @protected
   */
  _isData() {
    return this.instanceid === "data";
  }
  /**
   * When the json-editor is embedded within a solition-item component it needs to be aware
   * if the spatial reference control has modified the data.
   * Edits from the spatial reference control do not add to the undo/redo stack and are not removed on reset as
   * they are only controlled via the spatial reference control.
   * This allows us to use the true original value or the one that has been modified by the spatial ref control
   * when using the diff editor or resetting.
   *
   * @protected
   */
  _getOriginalValue() {
    const m = state.models[this.value];
    const serviceActive = getProp(state, `spatialReferenceInfo.services.${m === null || m === void 0 ? void 0 : m.name}`);
    const srEnabled = getProp(state, 'spatialReferenceInfo.enabled');
    return (serviceActive && srEnabled && !this._isData()) ? m.propsDiffOriginValue : this.original;
  }
  /**
   * Update the current feature service models wkid
   *
   * This functions responds to events fired from the spatial reference control.
   *
   * @param enabled does the given service support the wkid variable (true) or the current wkid (false)
   *
   * @protected
   */
  _setFeatureServiceWkid(enabled) {
    const editor = this._getEditor();
    const m = editor.getModel();
    const model = this._useDiffEditor ? m.modified : m;
    const matches = model.findMatches(/["]wkid["].*[,]/, false, true, true, null, true);
    if (matches.length > 0) {
      const range = matches[0].range;
      const currentText = model.getValueInRange(range);
      const endsWith = currentText.indexOf(",") > -1 ? "," : "";
      const wkid = /[0-9]+/.exec(currentText);
      const wkidVar = enabled ? `"{{params.wkid||${wkid}}}"` : wkid;
      const text = `"wkid": ${wkidVar}${endsWith}`;
      model.pushEditOperations([], [{
          forceMoveMarkers: true,
          text,
          range
        }]);
    }
  }
  static get assetsDirs() { return ["assets"]; }
  get el() { return getElement(this); }
  static get style() { return jsonEditorCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "json-editor",
    "$members$": {
      "original": [1032],
      "translations": [1032],
      "value": [1544],
      "model": [1544],
      "instanceid": [1544],
      "hasErrors": [1540, "has-errors"],
      "reset": [64]
    },
    "$listeners$": [[8, "organizationVariableSelected", "organizationVariableSelected"], [8, "solutionVariableSelected", "solutionVariableSelected"], [8, "modelsChanged", "_modelsChanged"], [8, "solutionItemSelected", "_solutionItemSelected"], [8, "featureServiceSpatialReferenceChange", "featureServiceSpatialReferenceChange"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["value", "value"], ["model", "model"], ["instanceid", "instanceid"], ["hasErrors", "has-errors"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$r = {
  container: "container"
};

const labelCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-label:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-label{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-label{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-label{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-label{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-label{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-label:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-label-h{display:none}/*!@:host*/.sc-calcite-label-h{display:inline}/*!@:host([alignment=start])*/[alignment=start].sc-calcite-label-h{text-align:start}/*!@:host([alignment=end])*/[alignment=end].sc-calcite-label-h{text-align:end}/*!@:host([alignment=center])*/[alignment=center].sc-calcite-label-h{text-align:center}/*!@:host([scale=s]) .container*/[scale=s].sc-calcite-label-h .container.sc-calcite-label{margin-bottom:0.5rem;font-size:var(--calcite-font-size--2);line-height:1rem}/*!@:host([scale=m]) .container*/[scale=m].sc-calcite-label-h .container.sc-calcite-label{margin-bottom:0.75rem;font-size:var(--calcite-font-size--1);line-height:1rem}/*!@:host([scale=l]) .container*/[scale=l].sc-calcite-label-h .container.sc-calcite-label{margin-bottom:1rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@:host .container*/.sc-calcite-label-h .container.sc-calcite-label{margin-top:0px;margin-right:0px;margin-left:0px;width:100%;line-height:1.375;color:var(--calcite-ui-text-1)}/*!@:host([layout=default]) .container*/[layout=default].sc-calcite-label-h .container.sc-calcite-label{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;gap:0.25rem}/*!@:host([layout=inline]) .container, :host([layout=inline-space-between]) .container*/[layout=inline].sc-calcite-label-h .container.sc-calcite-label,[layout=inline-space-between].sc-calcite-label-h .container.sc-calcite-label{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center;gap:0.5rem}/*!@:host([layout=inline][scale=l]) .container*/[layout=inline][scale=l].sc-calcite-label-h .container.sc-calcite-label{gap:0.75rem}/*!@:host([layout=inline-space-between]) .container*/[layout=inline-space-between].sc-calcite-label-h .container.sc-calcite-label{-ms-flex-pack:justify;justify-content:space-between}/*!@:host([disabled])*/[disabled].sc-calcite-label-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) > .container*/[disabled].sc-calcite-label-h>.container.sc-calcite-label{pointer-events:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted(*)*/.sc-calcite-label-h[disabled] .sc-calcite-label-s>*{pointer-events:none}/*!@:host([disabled]) ::slotted(*[disabled]), :host([disabled]) ::slotted(*[disabled] *)*/.sc-calcite-label-h[disabled] .sc-calcite-label-s>*[disabled],.sc-calcite-label-h[disabled] .sc-calcite-label-s>*[disabled] *{--tw-bg-opacity:1}/*!@:host([disabled]) ::slotted(calcite-input-message:not([active]))*/.sc-calcite-label-h[disabled] .sc-calcite-label-s>calcite-input-message:not([active]){--tw-bg-opacity:0}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-label-h[disabled] .sc-calcite-label-s>[calcite-hydrated][disabled],[disabled].sc-calcite-label-h [calcite-hydrated][disabled].sc-calcite-label{opacity:1}/*!@:host([disable-spacing]) .container*/[disable-spacing].sc-calcite-label-h .container.sc-calcite-label{margin:0px;gap:0px}";

/**
 * @slot - A slot for adding text and a component that can be labeled.
 */
class Label {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteInternalLabelClick = createEvent(this, "calciteInternalLabelClick", 3);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** specify the text alignment of the label */
    this.alignment = "start";
    /**
     * specify the status of the label and any child input / input messages
     * @deprecated set directly on child element instead
     */
    this.status = "idle";
    /** specify the scale of the label, defaults to m */
    this.scale = "m";
    /** is the wrapped element positioned inline with the label slotted text */
    this.layout = "default";
    /** eliminates any space around the label */
    this.disableSpacing = false;
    /**
     * is the label disabled
     *
     * @deprecated use the `disabled` property on the interactive components instead
     */
    this.disabled = false;
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.labelClickHandler = (event) => {
      this.calciteInternalLabelClick.emit({
        sourceEvent: event
      });
    };
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    document.dispatchEvent(new CustomEvent(labelConnectedEvent));
  }
  disconnectedCallback() {
    document.dispatchEvent(new CustomEvent(labelDisconnectedEvent));
  }
  render() {
    return (hAsync(Host, { onClick: this.labelClickHandler }, hAsync("div", { class: CSS$r.container }, hAsync("slot", null))));
  }
  get el() { return getElement(this); }
  static get style() { return labelCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-label",
    "$members$": {
      "alignment": [513],
      "status": [513],
      "for": [513],
      "scale": [513],
      "layout": [513],
      "disableSpacing": [4, "disable-spacing"],
      "disabled": [516]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["alignment", "alignment"], ["status", "status"], ["for", "for"], ["scale", "scale"], ["layout", "layout"], ["disabled", "disabled"]]
  }; }
}

const linkCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-link:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-link{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-link{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-link{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-link{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-link{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-link:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-link-h{display:none}/*!@:host*/.sc-calcite-link-h{display:inline}/*!@:host a, :host span*/.sc-calcite-link-h a.sc-calcite-link,.sc-calcite-link-h span.sc-calcite-link{position:relative;display:-ms-flexbox;display:flex;cursor:pointer;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border-radius:0px;border-style:none;font-family:inherit;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;text-decoration:none;line-height:inherit;font-size:inherit;-webkit-appearance:none}/*!@:host a:hover,\n:host span:hover*/.sc-calcite-link-h a.sc-calcite-link:hover,.sc-calcite-link-h span.sc-calcite-link:hover{text-decoration:none}/*!@:host a, :host span*/.sc-calcite-link-h a.sc-calcite-link,.sc-calcite-link-h span.sc-calcite-link{outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@:host a:focus, :host span:focus*/.sc-calcite-link-h a.sc-calcite-link:focus,.sc-calcite-link-h span.sc-calcite-link:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@calcite-icon*/calcite-icon.sc-calcite-link{width:1em;height:1em;min-width:unset;min-height:unset}/*!@.calcite-link--icon*/.calcite-link--icon.sc-calcite-link{vertical-align:text-top;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;margin-top:0.125rem}/*!@:host .calcite-link--icon.icon-start*/.sc-calcite-link-h .calcite-link--icon.icon-start.sc-calcite-link{-webkit-margin-end:0.5rem;margin-inline-end:0.5rem}/*!@:host .calcite-link--icon.icon-end*/.sc-calcite-link-h .calcite-link--icon.icon-end.sc-calcite-link{-webkit-margin-start:0.5rem;margin-inline-start:0.5rem}/*!@:host span, :host a*/.sc-calcite-link-h span.sc-calcite-link,.sc-calcite-link-h a.sc-calcite-link{position:relative;display:inline;border-style:none;background-color:transparent;padding:0px;color:var(--calcite-ui-text-link);-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;line-height:inherit;white-space:initial;background-image:-webkit-gradient(linear, left top, left bottom, from(currentColor), to(currentColor)), -webkit-gradient(linear, left top, left bottom, from(var(--calcite-link-blue-underline)), to(var(--calcite-link-blue-underline)));background-image:linear-gradient(currentColor, currentColor), linear-gradient(var(--calcite-link-blue-underline), var(--calcite-link-blue-underline));background-position:0% 100%, 100% 100%;background-repeat:no-repeat, no-repeat;background-size:0% 1px, 100% 1px}/*!@:host span:hover, :host span:focus,\n:host a:hover,\n:host a:focus*/.sc-calcite-link-h span.sc-calcite-link:hover,.sc-calcite-link-h span.sc-calcite-link:focus,.sc-calcite-link-h a.sc-calcite-link:hover,.sc-calcite-link-h a.sc-calcite-link:focus{background-size:100% 1px, 100% 1px}/*!@:host span:active,\n:host a:active*/.sc-calcite-link-h span.sc-calcite-link:active,.sc-calcite-link-h a.sc-calcite-link:active{background-size:100% 2px, 100% 2px}/*!@:host span.calcite--rtl,\n:host a.calcite--rtl*/.sc-calcite-link-h span.calcite--rtl.sc-calcite-link,.sc-calcite-link-h a.calcite--rtl.sc-calcite-link{background-position:100% 100%, 100% 100%}/*!@:host([disabled])*/[disabled].sc-calcite-link-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-link-h[disabled] .sc-calcite-link-s>[calcite-hydrated][disabled],[disabled].sc-calcite-link-h [calcite-hydrated][disabled].sc-calcite-link{opacity:1}";

/** Any attributes placed on <calcite-link> component will propagate to the rendered child */
/** Passing a 'href' will render an anchor link, instead of a span. Role will be set to link, or link, depending on this. */
/** It is the consumers responsibility to add aria information, rel, target, for links, and any link attributes for form submission */
/** @slot - A slot for adding text. */
class Link {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** is the link disabled  */
    this.disabled = false;
    /** Prompts the user to save the linked URL instead of navigating to it. Can be used with or without a value:
     * Without a value, the browser will suggest a filename/extension
     * See: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-download
     */
    this.download = false;
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.storeTagRef = (el) => {
      this.childEl = el;
    };
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentDidRender() {
    updateHostInteraction(this);
  }
  render() {
    const { download, el } = this;
    const dir = getElementDir(el);
    const childElType = this.href ? "a" : "span";
    const iconStartEl = (hAsync("calcite-icon", { class: "calcite-link--icon icon-start", flipRtl: this.iconFlipRtl === "start" || this.iconFlipRtl === "both", icon: this.iconStart, scale: "s" }));
    const iconEndEl = (hAsync("calcite-icon", { class: "calcite-link--icon icon-end", flipRtl: this.iconFlipRtl === "end" || this.iconFlipRtl === "both", icon: this.iconEnd, scale: "s" }));
    const Tag = childElType;
    const role = childElType === "span" ? "link" : null;
    const tabIndex = childElType === "span" ? 0 : null;
    return (hAsync(Host, { role: "presentation" }, hAsync(Tag, { class: { [CSS_UTILITY.rtl]: dir === "rtl" },
      /*
      When the 'download' property of type 'boolean | string' is set to true, the value is "".
      This works around that issue for now.
      */
      download: Tag === "a" && (download === "" || download) ? download : null, href: Tag === "a" && this.href, ref: this.storeTagRef, rel: Tag === "a" && this.rel, role: role, tabIndex: tabIndex, target: Tag === "a" && this.target }, this.iconStart ? iconStartEl : null, hAsync("slot", null), this.iconEnd ? iconEndEl : null)));
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    focusElement(this.childEl);
  }
  get el() { return getElement(this); }
  static get style() { return linkCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-link",
    "$members$": {
      "disabled": [516],
      "download": [520],
      "href": [513],
      "iconEnd": [513, "icon-end"],
      "iconFlipRtl": [513, "icon-flip-rtl"],
      "iconStart": [513, "icon-start"],
      "rel": [1],
      "target": [1],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["download", "download"], ["href", "href"], ["iconEnd", "icon-end"], ["iconFlipRtl", "icon-flip-rtl"], ["iconStart", "icon-start"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$q = {
  container: "container"
};

const listCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-list:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-list{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-list{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-list{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-list{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-list{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-list:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-list-h{display:none}/*!@:host*/.sc-calcite-list-h{display:block}/*!@:host([disabled])*/[disabled].sc-calcite-list-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-list-h[disabled] .sc-calcite-list-s>[calcite-hydrated][disabled],[disabled].sc-calcite-list-h [calcite-hydrated][disabled].sc-calcite-list{opacity:1}/*!@.container*/.container.sc-calcite-list{-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;width:100%;-ms-flex-direction:column;flex-direction:column;background-color:transparent}/*!@.container **/.container.sc-calcite-list *.sc-calcite-list{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@::slotted(calcite-list-item)*/.sc-calcite-list-s>calcite-list-item{margin-bottom:1px;--tw-shadow:0 1px 0 var(--calcite-ui-border-3);--tw-shadow-colored:0 1px 0 var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@::slotted(calcite-list-item:last-child)*/.sc-calcite-list-s>calcite-list-item:last-child{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}";

/**
 * A general purpose list that enables users to construct list items that conform to Calcite styling.
 * @slot - A slot for adding `calcite-list-item` elements.
 */
class List$1 {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * When true, disabled prevents user interaction.
     */
    this.disabled = false;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentDidRender() {
    updateHostInteraction(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    const firstListItem = this.el.querySelector(`calcite-list-item:not([non-interactive])`);
    firstListItem === null || firstListItem === void 0 ? void 0 : firstListItem.setFocus();
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    return (hAsync(Host, { role: "list" }, hAsync("div", { class: CSS$q.container }, hAsync("slot", null))));
  }
  get el() { return getElement(this); }
  static get style() { return listCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-list",
    "$members$": {
      "disabled": [516],
      "headingLevel": [2, "heading-level"],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$p = {
  container: "container",
  contentContainer: "content-container",
  nestedContainer: "nested-container",
  contentContainerButton: "content-container--button",
  content: "content",
  actionsStart: "actions-start",
  contentStart: "content-start",
  label: "label",
  description: "description",
  contentEnd: "content-end",
  actionsEnd: "actions-end"
};
const SLOTS$f = {
  actionsStart: "actions-start",
  contentStart: "content-start",
  contentEnd: "content-end",
  actionsEnd: "actions-end"
};

const listItemCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-list-item:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-list-item{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-list-item{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-list-item{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-list-item{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-list-item{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-list-item:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-list-item-h{display:none}/*!@:host*/.sc-calcite-list-item-h{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}/*!@:host([disabled])*/[disabled].sc-calcite-list-item-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-list-item-h[disabled] .sc-calcite-list-item-s>[calcite-hydrated][disabled],[disabled].sc-calcite-list-item-h [calcite-hydrated][disabled].sc-calcite-list-item{opacity:1}/*!@.container*/.container.sc-calcite-list-item{-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;-ms-flex:1 1 0%;flex:1 1 0%;background-color:var(--calcite-ui-foreground-1);font-family:var(--calcite-sans-family)}/*!@.container **/.container.sc-calcite-list-item *.sc-calcite-list-item{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@.nested-container*/.nested-container.sc-calcite-list-item{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;background-color:var(--calcite-ui-foreground-1)}/*!@.content-container*/.content-container.sc-calcite-list-item{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-align:stretch;align-items:stretch;padding:0px;color:var(--calcite-ui-text-2);outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@.content-container--button*/.content-container--button.sc-calcite-list-item{cursor:pointer;border-style:none;background-color:var(--calcite-ui-foreground-1);outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;text-align:initial}/*!@.content-container--button:hover*/.content-container--button.sc-calcite-list-item:hover{background-color:var(--calcite-ui-foreground-2)}/*!@.content-container--button:hover .label, .content-container--button:hover .description*/.content-container--button.sc-calcite-list-item:hover .label.sc-calcite-list-item,.content-container--button.sc-calcite-list-item:hover .description.sc-calcite-list-item{color:var(--calcite-ui-text-1)}/*!@.content-container--button:focus*/.content-container--button.sc-calcite-list-item:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@.content*/.content.sc-calcite-list-item{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;padding-left:0.75rem;padding-right:0.75rem;padding-top:0.5rem;padding-bottom:0.5rem;font-size:var(--calcite-font-size--2);line-height:1.375}/*!@.label, .description*/.label.sc-calcite-list-item,.description.sc-calcite-list-item{font-family:var(--calcite-sans-family);font-size:var(--calcite-font-size--2);font-weight:var(--calcite-font-weight-normal);word-wrap:break-word;word-break:break-word}/*!@.label:only-child, .description:only-child*/.label.sc-calcite-list-item:only-child,.description.sc-calcite-list-item:only-child{margin:0px;padding-top:0.25rem;padding-bottom:0.25rem}/*!@.label*/.label.sc-calcite-list-item{color:var(--calcite-ui-text-1)}/*!@.description*/.description.sc-calcite-list-item{margin-top:0.125rem;color:var(--calcite-ui-text-3)}/*!@.content-start, .content-end*/.content-start.sc-calcite-list-item,.content-end.sc-calcite-list-item{pointer-events:none;-ms-flex:0 1 auto;flex:0 1 auto}/*!@.actions-start, .actions-end, .content-start, .content-end*/.actions-start.sc-calcite-list-item,.actions-end.sc-calcite-list-item,.content-start.sc-calcite-list-item,.content-end.sc-calcite-list-item{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}/*!@.content-start ::slotted(calcite-icon), .content-end ::slotted(calcite-icon)*/.content-start .sc-calcite-list-item-s>calcite-icon,.content-end.sc-calcite-list-item-s>calcite-icon,.content-end .sc-calcite-list-item-s>calcite-icon{-ms-flex-item-align:center;align-self:center;padding-left:0.75rem;padding-right:0.75rem}/*!@.actions-start ::slotted(calcite-action), .actions-end ::slotted(calcite-action)*/.actions-start .sc-calcite-list-item-s>calcite-action,.actions-end.sc-calcite-list-item-s>calcite-action,.actions-end .sc-calcite-list-item-s>calcite-action{-ms-flex-item-align:stretch;align-self:stretch;color:inherit}/*!@::slotted(calcite-list-item-group), ::slotted(calcite-list-item)*/.sc-calcite-list-item-s>calcite-list-item-group,.sc-calcite-list-item-s>calcite-list-item{padding-left:0.5rem}";

/**
 * @slot - A slot for adding `calcite-list-item` and `calcite-list-item-group` elements.
 * @slot actions-start - A slot for adding actionable `calcite-action` elements before the content of the list item.
 * @slot content-start - A slot for adding non-actionable elements before the label and description of the list item.
 * @slot content-end - A slot for adding non-actionable elements after the label and description of the list item.
 * @slot actions-end - A slot for adding actionable `calcite-action` elements after the content of the list item.
 */
class ListItem {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * When true, prevents the content of the list item from user interaction.
     */
    this.nonInteractive = false;
    /**
     * When true, disabled prevents interaction.
     */
    this.disabled = false;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentDidRender() {
    updateHostInteraction(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    var _a;
    (_a = this.focusEl) === null || _a === void 0 ? void 0 : _a.focus();
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderActionsStart() {
    const { el } = this;
    return getSlotted(el, SLOTS$f.actionsStart) ? (hAsync("div", { class: CSS$p.actionsStart }, hAsync("slot", { name: SLOTS$f.actionsStart }))) : null;
  }
  renderActionsEnd() {
    const { el } = this;
    return getSlotted(el, SLOTS$f.actionsEnd) ? (hAsync("div", { class: CSS$p.actionsEnd }, hAsync("slot", { name: SLOTS$f.actionsEnd }))) : null;
  }
  renderContentStart() {
    const { el } = this;
    return getSlotted(el, SLOTS$f.contentStart) ? (hAsync("div", { class: CSS$p.contentStart }, hAsync("slot", { name: SLOTS$f.contentStart }))) : null;
  }
  renderContentEnd() {
    const { el } = this;
    return getSlotted(el, SLOTS$f.contentEnd) ? (hAsync("div", { class: CSS$p.contentEnd }, hAsync("slot", { name: SLOTS$f.contentEnd }))) : null;
  }
  renderContent() {
    const { label, description } = this;
    return !!label || !!description ? (hAsync("div", { class: CSS$p.content }, label ? hAsync("div", { class: CSS$p.label }, label) : null, description ? hAsync("div", { class: CSS$p.description }, description) : null)) : null;
  }
  renderContentContainer() {
    const { disabled, nonInteractive } = this;
    const content = [this.renderContentStart(), this.renderContent(), this.renderContentEnd()];
    return !nonInteractive ? (hAsync("button", { class: { [CSS$p.contentContainer]: true, [CSS$p.contentContainerButton]: true }, disabled: disabled, ref: (focusEl) => (this.focusEl = focusEl) }, content)) : (hAsync("div", { class: CSS$p.contentContainer, ref: () => (this.focusEl = null) }, content));
  }
  render() {
    return (hAsync(Host, { role: "listitem" }, hAsync("div", { class: CSS$p.container }, this.renderActionsStart(), this.renderContentContainer(), this.renderActionsEnd()), hAsync("div", { class: CSS$p.nestedContainer }, hAsync("slot", null))));
  }
  get el() { return getElement(this); }
  static get style() { return listItemCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-list-item",
    "$members$": {
      "nonInteractive": [516, "non-interactive"],
      "description": [1],
      "disabled": [516],
      "label": [1],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["nonInteractive", "non-interactive"], ["disabled", "disabled"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$o = {
  heading: "heading",
  container: "container"
};
const HEADING_LEVEL$5 = 3;

const listItemGroupCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-list-item-group:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-list-item-group{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-list-item-group{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-list-item-group{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-list-item-group{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-list-item-group{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-list-item-group:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-list-item-group-h{display:none}/*!@:host*/.sc-calcite-list-item-group-h{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}/*!@.heading*/.heading.sc-calcite-list-item-group{margin:0px;display:-ms-flexbox;display:flex;-ms-flex:1 1 0%;flex:1 1 0%;background-color:var(--calcite-ui-foreground-2);padding:0.75rem;font-family:var(--calcite-sans-family);font-size:var(--calcite-font-size--1);font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-2)}/*!@.container*/.container.sc-calcite-list-item-group{display:-ms-flexbox;display:flex;width:100%;-ms-flex-direction:column;flex-direction:column;background-color:var(--calcite-ui-foreground-1)}/*!@::slotted(calcite-list-item-group)*/.sc-calcite-list-item-group-s>calcite-list-item-group{padding-left:0.5rem}";

/**
 * @slot - A slot for adding `calcite-list-item` and `calcite-list-item-group` elements.
 */
class ListItemGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    var _a;
    const { el, heading, headingLevel } = this;
    const parentLevel = (_a = el.closest("calcite-list, calcite-list-item-group")) === null || _a === void 0 ? void 0 : _a.headingLevel;
    const relativeLevel = parentLevel ? constrainHeadingLevel(parentLevel + 1) : null;
    const level = headingLevel || relativeLevel || HEADING_LEVEL$5;
    return (hAsync(Host, null, heading ? (hAsync(Heading, { class: CSS$o.heading, level: level }, heading)) : null, hAsync("div", { class: CSS$o.container, role: "group" }, hAsync("slot", null))));
  }
  get el() { return getElement(this); }
  static get style() { return listItemGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-list-item-group",
    "$members$": {
      "heading": [513],
      "headingLevel": [2, "heading-level"]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["heading", "heading"]]
  }; }
}

const loaderCss = "@charset \"UTF-8\";@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-loader:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-loader{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-loader{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-loader{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-loader{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-loader{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-loader:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-loader-h{display:none}/*!@:host*/.sc-calcite-loader-h{position:relative;margin-left:auto;margin-right:auto;display:none;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;padding-top:4rem;padding-bottom:4rem;opacity:1;min-height:var(--calcite-loader-size);font-size:var(--calcite-loader-font-size);stroke:var(--calcite-ui-brand);stroke-width:3;fill:none;-webkit-transform:scale(1, 1);transform:scale(1, 1);animation:loader-color-shift 6s alternate-reverse infinite linear}/*!@:host([scale=s])*/[scale=s].sc-calcite-loader-h{--calcite-loader-font-size:var(--calcite-font-size--2);--calcite-loader-size:2rem;--calcite-loader-size-inline:0.75rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-loader-h{--calcite-loader-font-size:var(--calcite-font-size-0);--calcite-loader-size:4rem;--calcite-loader-size-inline:1rem}/*!@:host([scale=l])*/[scale=l].sc-calcite-loader-h{--calcite-loader-font-size:var(--calcite-font-size-2);--calcite-loader-size:6rem;--calcite-loader-size-inline:1.5rem}/*!@:host([no-padding])*/[no-padding].sc-calcite-loader-h{padding-top:0px;padding-bottom:0px}/*!@:host*/.sc-calcite-loader-h{display:none}/*!@:host([active])*/[active].sc-calcite-loader-h{display:-ms-flexbox;display:flex}/*!@.loader__text*/.loader__text.sc-calcite-loader{display:block;text-align:center;font-size:var(--calcite-font-size--2);line-height:1rem;color:var(--calcite-ui-text-1);margin-top:calc(var(--calcite-loader-size) + 1.5rem)}/*!@.loader__percentage*/.loader__percentage.sc-calcite-loader{position:absolute;display:block;text-align:center;color:var(--calcite-ui-text-1);font-size:var(--calcite-loader-font-size);width:var(--calcite-loader-size);left:50%;margin-left:calc(var(--calcite-loader-size) / 2 * -1);line-height:0.25;-webkit-transform:scale(1, 1);transform:scale(1, 1)}/*!@.loader__svgs*/.loader__svgs.sc-calcite-loader{position:absolute;overflow:visible;opacity:1;width:var(--calcite-loader-size);height:var(--calcite-loader-size);left:50%;margin-left:calc(var(--calcite-loader-size) / 2 * -1);-webkit-transform:scale(1, 1);transform:scale(1, 1)}/*!@.loader__svg*/.loader__svg.sc-calcite-loader{position:absolute;top:0px;left:0px;-webkit-transform-origin:center;transform-origin:center;overflow:visible;width:var(--calcite-loader-size);height:var(--calcite-loader-size);-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:linear;animation-timing-function:linear;-webkit-animation-name:loader-clockwise;animation-name:loader-clockwise}@supports (display: grid){/*!@.loader__svg--1*/.loader__svg--1.sc-calcite-loader{-webkit-animation-name:loader-offset-1;animation-name:loader-offset-1}/*!@.loader__svg--2*/.loader__svg--2.sc-calcite-loader{-webkit-animation-name:loader-offset-2;animation-name:loader-offset-2}/*!@.loader__svg--3*/.loader__svg--3.sc-calcite-loader{-webkit-animation-name:loader-offset-3;animation-name:loader-offset-3}}/*!@:host([type=determinate])*/[type=determinate].sc-calcite-loader-h{-webkit-animation:none;animation:none;stroke:var(--calcite-ui-border-3)}/*!@:host([type=determinate]) .loader__svg--3*/[type=determinate].sc-calcite-loader-h .loader__svg--3.sc-calcite-loader{-webkit-animation:none;animation:none;stroke:var(--calcite-ui-brand);stroke-dasharray:150.79632;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);-webkit-transition:all var(--calcite-internal-animation-timing-fast) linear;transition:all var(--calcite-internal-animation-timing-fast) linear}/*!@:host([inline])*/[inline].sc-calcite-loader-h{position:relative;margin:0px;-webkit-animation:none;animation:none;stroke:currentColor;stroke-width:2;padding-top:0px;padding-bottom:0px;height:var(--calcite-loader-size-inline);min-height:var(--calcite-loader-size-inline);width:var(--calcite-loader-size-inline);-webkit-margin-end:calc(var(--calcite-loader-size-inline) * 0.5);margin-inline-end:calc(var(--calcite-loader-size-inline) * 0.5);vertical-align:calc(var(--calcite-loader-size-inline) * -1 * 0.2)}/*!@:host([active][inline])*/[active][inline].sc-calcite-loader-h{display:inline-block}/*!@:host([inline]) .loader__svgs*/[inline].sc-calcite-loader-h .loader__svgs.sc-calcite-loader{top:0px;left:0px;margin:0px;width:var(--calcite-loader-size-inline);height:var(--calcite-loader-size-inline)}/*!@:host([inline]) .loader__svg*/[inline].sc-calcite-loader-h .loader__svg.sc-calcite-loader{width:var(--calcite-loader-size-inline);height:var(--calcite-loader-size-inline)}/*!@:host([complete])*/[complete].sc-calcite-loader-h{opacity:0;-webkit-transform:scale(0.75, 0.75);transform:scale(0.75, 0.75);-webkit-transform-origin:center;transform-origin:center;-webkit-transition:opacity var(--calcite-internal-animation-timing-medium) linear 1000ms, -webkit-transform var(--calcite-internal-animation-timing-medium) linear 1000ms;transition:opacity var(--calcite-internal-animation-timing-medium) linear 1000ms, -webkit-transform var(--calcite-internal-animation-timing-medium) linear 1000ms;transition:opacity var(--calcite-internal-animation-timing-medium) linear 1000ms, transform var(--calcite-internal-animation-timing-medium) linear 1000ms;transition:opacity var(--calcite-internal-animation-timing-medium) linear 1000ms, transform var(--calcite-internal-animation-timing-medium) linear 1000ms, -webkit-transform var(--calcite-internal-animation-timing-medium) linear 1000ms}/*!@:host([complete]) .loader__svgs*/[complete].sc-calcite-loader-h .loader__svgs.sc-calcite-loader{opacity:0;-webkit-transform:scale(0.75, 0.75);transform:scale(0.75, 0.75);-webkit-transform-origin:center;transform-origin:center;-webkit-transition:opacity calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms, -webkit-transform calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms;transition:opacity calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms, -webkit-transform calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms;transition:opacity calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms, transform calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms;transition:opacity calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms, transform calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms, -webkit-transform calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms}/*!@:host([complete]) .loader__percentage*/[complete].sc-calcite-loader-h .loader__percentage.sc-calcite-loader{color:var(--calcite-ui-brand);-webkit-transform:scale(1.05, 1.05);transform:scale(1.05, 1.05);-webkit-transform-origin:center;transform-origin:center;-webkit-transition:color var(--calcite-internal-animation-timing-medium) linear, -webkit-transform var(--calcite-internal-animation-timing-medium) linear;transition:color var(--calcite-internal-animation-timing-medium) linear, -webkit-transform var(--calcite-internal-animation-timing-medium) linear;transition:color var(--calcite-internal-animation-timing-medium) linear, transform var(--calcite-internal-animation-timing-medium) linear;transition:color var(--calcite-internal-animation-timing-medium) linear, transform var(--calcite-internal-animation-timing-medium) linear, -webkit-transform var(--calcite-internal-animation-timing-medium) linear}/*!@.loader__svg--1*/.loader__svg--1.sc-calcite-loader{stroke-dasharray:27.9252444444% 139.6262222222%;-webkit-animation-duration:0.72s;animation-duration:0.72s}@-webkit-keyframes loader-offset-1{0%{stroke-dasharray:27.9252444444% 251.3272%;stroke-dashoffset:0}50%{stroke-dasharray:139.6262222222% 139.6262222222%;stroke-dashoffset:-83.7757333333%}100%{stroke-dasharray:27.9252444444% 251.3272%;stroke-dashoffset:-279.2524444444%}}@keyframes loader-offset-1{0%{stroke-dasharray:27.9252444444% 251.3272%;stroke-dashoffset:0}50%{stroke-dasharray:139.6262222222% 139.6262222222%;stroke-dashoffset:-83.7757333333%}100%{stroke-dasharray:27.9252444444% 251.3272%;stroke-dashoffset:-279.2524444444%}}/*!@.loader__svg--2*/.loader__svg--2.sc-calcite-loader{stroke-dasharray:55.8504888889% 139.6262222222%;-webkit-animation-duration:0.96s;animation-duration:0.96s}@-webkit-keyframes loader-offset-2{0%{stroke-dasharray:55.8504888889% 223.4019555556%;stroke-dashoffset:0}50%{stroke-dasharray:139.6262222222% 139.6262222222%;stroke-dashoffset:-97.7383555556%}100%{stroke-dasharray:55.8504888889% 223.4019555556%;stroke-dashoffset:-279.2524444444%}}@keyframes loader-offset-2{0%{stroke-dasharray:55.8504888889% 223.4019555556%;stroke-dashoffset:0}50%{stroke-dasharray:139.6262222222% 139.6262222222%;stroke-dashoffset:-97.7383555556%}100%{stroke-dasharray:55.8504888889% 223.4019555556%;stroke-dashoffset:-279.2524444444%}}/*!@.loader__svg--3*/.loader__svg--3.sc-calcite-loader{stroke-dasharray:13.9626222222% 139.6262222222%;-webkit-animation-duration:1.16s;animation-duration:1.16s}@-webkit-keyframes loader-offset-3{0%{stroke-dasharray:13.9626222222% 265.2898222222%;stroke-dashoffset:0}50%{stroke-dasharray:139.6262222222% 139.6262222222%;stroke-dashoffset:-76.7944222222%}100%{stroke-dasharray:13.9626222222% 265.2898222222%;stroke-dashoffset:-279.2524444444%}}@keyframes loader-offset-3{0%{stroke-dasharray:13.9626222222% 265.2898222222%;stroke-dashoffset:0}50%{stroke-dasharray:139.6262222222% 139.6262222222%;stroke-dashoffset:-76.7944222222%}100%{stroke-dasharray:13.9626222222% 265.2898222222%;stroke-dashoffset:-279.2524444444%}}@-webkit-keyframes loader-color-shift{0%{stroke:var(--calcite-ui-brand)}33%{stroke:var(--calcite-ui-brand-press)}66%{stroke:var(--calcite-ui-brand-hover)}100%{stroke:var(--calcite-ui-brand)}}@keyframes loader-color-shift{0%{stroke:var(--calcite-ui-brand)}33%{stroke:var(--calcite-ui-brand-press)}66%{stroke:var(--calcite-ui-brand-hover)}100%{stroke:var(--calcite-ui-brand)}}@-webkit-keyframes loader-clockwise{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes loader-clockwise{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}";

class Loader {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** Show the loader */
    this.active = false;
    /** Inline loaders are smaller and will appear to the left of the text */
    this.inline = false;
    /** Speficy the scale of the loader. Defaults to "m" */
    this.scale = "m";
    /** Percent complete of 100, only valid for determinate indicators */
    this.value = 0;
    /** Text which should appear under the loading indicator (optional) */
    this.text = "";
    /** Turn off spacing around the loader */
    this.noPadding = false;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    const { el, inline, label, scale, text, type, value } = this;
    const id = el.id || guid();
    const radiusRatio = 0.45;
    const size = inline ? this.getInlineSize(scale) : this.getSize(scale);
    const radius = size * radiusRatio;
    const viewbox = `0 0 ${size} ${size}`;
    const isDeterminate = type === "determinate";
    const circumference = 2 * radius * Math.PI;
    const progress = (value / 100) * circumference;
    const remaining = circumference - progress;
    const valueNow = Math.floor(value);
    const hostAttributes = {
      "aria-valuenow": valueNow,
      "aria-valuemin": 0,
      "aria-valuemax": 100,
      complete: valueNow === 100
    };
    const svgAttributes = { r: radius, cx: size / 2, cy: size / 2 };
    const determinateStyle = { "stroke-dasharray": `${progress} ${remaining}` };
    return (hAsync(Host, Object.assign({ "aria-label": label, id: id, role: "progressbar" }, (isDeterminate ? hostAttributes : {})), hAsync("div", { class: "loader__svgs" }, hAsync("svg", { class: "loader__svg loader__svg--1", viewBox: viewbox }, hAsync("circle", Object.assign({}, svgAttributes))), hAsync("svg", { class: "loader__svg loader__svg--2", viewBox: viewbox }, hAsync("circle", Object.assign({}, svgAttributes))), hAsync("svg", Object.assign({ class: "loader__svg loader__svg--3", viewBox: viewbox }, (isDeterminate ? { style: determinateStyle } : {})), hAsync("circle", Object.assign({}, svgAttributes)))), text && hAsync("div", { class: "loader__text" }, text), isDeterminate && hAsync("div", { class: "loader__percentage" }, value)));
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Return the proper sizes based on the scale property
   */
  getSize(scale) {
    return {
      s: 32,
      m: 56,
      l: 80
    }[scale];
  }
  getInlineSize(scale) {
    return {
      s: 12,
      m: 16,
      l: 20
    }[scale];
  }
  get el() { return getElement(this); }
  static get style() { return loaderCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-loader",
    "$members$": {
      "active": [516],
      "inline": [516],
      "label": [1],
      "scale": [513],
      "type": [513],
      "value": [2],
      "text": [1],
      "noPadding": [4, "no-padding"]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["active", "active"], ["inline", "inline"], ["scale", "scale"], ["type", "type"]]
  }; }
}

/**
 * Traverses the slots of the open shadowroots and returns all children matching the query.
 * @param {ShadowRoot | HTMLElement} root
 * @param skipNode
 * @param isMatch
 * @param {number} maxDepth
 * @param {number} depth
 * @returns {HTMLElement[]}
 */
function queryShadowRoot(root, skipNode, isMatch, maxDepth = 20, depth = 0) {
    let matches = [];
    // If the depth is above the max depth, abort the searching here.
    if (depth >= maxDepth) {
        return matches;
    }
    // Traverses a slot element
    const traverseSlot = ($slot) => {
        // Only check nodes that are of the type Node.ELEMENT_NODE
        // Read more here https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType
        const assignedNodes = $slot.assignedNodes().filter(node => node.nodeType === 1);
        if (assignedNodes.length > 0) {
            return queryShadowRoot(assignedNodes[0].parentElement, skipNode, isMatch, maxDepth, depth + 1);
        }
        return [];
    };
    // Go through each child and continue the traversing if necessary
    // Even though the typing says that children can't be undefined, Edge 15 sometimes gives an undefined value.
    // Therefore we fallback to an empty array if it is undefined.
    const children = Array.from(root.children || []);
    for (const $child of children) {
        // Check if the node and its descendants should be skipped
        if (skipNode($child)) {
            continue;
        }
        // If the child matches we always add it
        if (isMatch($child)) {
            matches.push($child);
        }
        if ($child.shadowRoot != null) {
            matches.push(...queryShadowRoot($child.shadowRoot, skipNode, isMatch, maxDepth, depth + 1));
        }
        else if ($child.tagName === "SLOT") {
            matches.push(...traverseSlot($child));
        }
        else {
            matches.push(...queryShadowRoot($child, skipNode, isMatch, maxDepth, depth + 1));
        }
    }
    return matches;
}

/**
 * Returns whether the element is hidden.
 * @param $elem
 */
function isHidden($elem) {
    return $elem.hasAttribute("hidden")
        || ($elem.hasAttribute("aria-hidden") && $elem.getAttribute("aria-hidden") !== "false")
        // A quick and dirty way to check whether the element is hidden.
        // For a more fine-grained check we could use "window.getComputedStyle" but we don't because of bad performance.
        // If the element has visibility set to "hidden" or "collapse", display set to "none" or opacity set to "0" through CSS
        // we won't be able to catch it here. We accept it due to the huge performance benefits.
        || $elem.style.display === `none`
        || $elem.style.opacity === `0`
        || $elem.style.visibility === `hidden`
        || $elem.style.visibility === `collapse`;
    // If offsetParent is null we can assume that the element is hidden
    // https://stackoverflow.com/questions/306305/what-would-make-offsetparent-null
    //|| $elem.offsetParent == null;
}
/**
 * Returns whether the element is disabled.
 * @param $elem
 */
function isDisabled($elem) {
    return $elem.hasAttribute("disabled")
        || ($elem.hasAttribute("aria-disabled") && $elem.getAttribute("aria-disabled") !== "false");
}
/**
 * Determines whether an element is focusable.
 * Read more here: https://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus/1600194#1600194
 * Or here: https://stackoverflow.com/questions/18261595/how-to-check-if-a-dom-element-is-focusable
 * @param $elem
 */
function isFocusable($elem) {
    // Discard elements that are removed from the tab order.
    if ($elem.getAttribute("tabindex") === "-1" || isHidden($elem) || isDisabled($elem)) {
        return false;
    }
    return (
    // At this point we know that the element can have focus (eg. won't be -1) if the tabindex attribute exists
    $elem.hasAttribute("tabindex")
        // Anchor tags or area tags with a href set
        || ($elem instanceof HTMLAnchorElement || $elem instanceof HTMLAreaElement) && $elem.hasAttribute("href")
        // Form elements which are not disabled
        || ($elem instanceof HTMLButtonElement
            || $elem instanceof HTMLInputElement
            || $elem instanceof HTMLTextAreaElement
            || $elem instanceof HTMLSelectElement)
        // IFrames
        || $elem instanceof HTMLIFrameElement);
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$n = {
  title: "title",
  header: "header",
  footer: "footer",
  scrim: "scrim",
  back: "back",
  close: "close",
  secondary: "secondary",
  primary: "primary",
  overflowHidden: "overflow-hidden"
};
const ICONS$6 = {
  close: "x"
};
const SLOTS$e = {
  content: "content",
  header: "header",
  back: "back",
  secondary: "secondary",
  primary: "primary"
};
const TEXT$b = {
  close: "Close"
};

const modalCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-modal:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-modal{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-modal{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-modal{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-modal{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-modal{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-modal:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-modal-h{display:none}/*!@:host*/.sc-calcite-modal-h{position:fixed;top:0px;right:0px;bottom:0px;left:0px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;overflow-y:hidden;color:var(--calcite-ui-text-2);opacity:0;visibility:hidden !important;-webkit-transition:visibility 0ms linear 300ms, opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);transition:visibility 0ms linear 300ms, opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);z-index:101}/*!@:host([scale=s])*/[scale=s].sc-calcite-modal-h{--calcite-modal-padding:0.75rem;--calcite-modal-padding-large:1rem;--calcite-modal-title-text:var(--calcite-font-size-1);--calcite-modal-content-text:var(--calcite-font-size--1)}/*!@:host([scale=m])*/[scale=m].sc-calcite-modal-h{--calcite-modal-padding:1rem;--calcite-modal-padding-large:1.25rem;--calcite-modal-title-text:var(--calcite-font-size-2);--calcite-modal-content-text:var(--calcite-font-size-0)}/*!@:host([scale=l])*/[scale=l].sc-calcite-modal-h{--calcite-modal-padding:1.25rem;--calcite-modal-padding-large:1.5rem;--calcite-modal-title-text:var(--calcite-font-size-3);--calcite-modal-content-text:var(--calcite-font-size-1)}/*!@.scrim*/.scrim.sc-calcite-modal{--calcite-scrim-background:rgba(0, 0, 0, 0.75);position:fixed;top:0px;right:0px;bottom:0px;left:0px;display:-ms-flexbox;display:flex;overflow-y:hidden}/*!@.modal*/.modal.sc-calcite-modal{pointer-events:none;float:none;margin:1.5rem;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;width:100%;-ms-flex-direction:column;flex-direction:column;border-radius:0.25rem;background-color:var(--calcite-ui-foreground-1);opacity:0;--tw-shadow:0 2px 12px -4px rgba(0, 0, 0, 0.2), 0 2px 4px -2px rgba(0, 0, 0, 0.16);--tw-shadow-colored:0 2px 12px -4px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);overflow:hidden;z-index:102;-webkit-overflow-scrolling:touch;visibility:hidden;-webkit-transition:visibility 0ms linear 300ms, opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), -webkit-transform var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);transition:visibility 0ms linear 300ms, opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), -webkit-transform var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);transition:transform var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), visibility 0ms linear 300ms, opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);transition:transform var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), visibility 0ms linear 300ms, opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), -webkit-transform var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);-webkit-transform:translate3d(0, 20px, 0);transform:translate3d(0, 20px, 0)}/*!@:host([active])*/[active].sc-calcite-modal-h{opacity:1;visibility:visible !important;-webkit-transition-delay:0ms;transition-delay:0ms}/*!@:host([active]) .modal*/[active].sc-calcite-modal-h .modal.sc-calcite-modal{pointer-events:auto;visibility:visible;opacity:1;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);-webkit-transition:visibility 0ms linear, opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), max-width var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), max-height var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), -webkit-transform var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);transition:visibility 0ms linear, opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), max-width var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), max-height var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), -webkit-transform var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);transition:transform var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), visibility 0ms linear, opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), max-width var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), max-height var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);transition:transform var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), visibility 0ms linear, opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), max-width var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), max-height var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), -webkit-transform var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);-webkit-transition-delay:0ms;transition-delay:0ms}/*!@.header*/.header.sc-calcite-modal{display:-ms-flexbox;display:flex;min-width:0px;max-width:100%;border-top-left-radius:0.25rem;border-top-right-radius:0.25rem;border-width:0px;border-bottom-width:1px;border-style:solid;border-color:var(--calcite-ui-border-3);background-color:var(--calcite-ui-foreground-1);-ms-flex:0 0 auto;flex:0 0 auto;z-index:2}/*!@.close*/.close.sc-calcite-modal{-ms-flex-order:2;order:2;margin:0px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;border-style:none;background-color:transparent;color:var(--calcite-ui-text-3);outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;border-start-end-radius:0.25rem;padding:var(--calcite-modal-padding);-ms-flex:0 0 auto;flex:0 0 auto}/*!@.close calcite-icon*/.close.sc-calcite-modal calcite-icon.sc-calcite-modal{pointer-events:none;vertical-align:-2px}/*!@.close:focus*/.close.sc-calcite-modal:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@.close:hover, .close:focus, .close:active*/.close.sc-calcite-modal:hover,.close.sc-calcite-modal:focus,.close.sc-calcite-modal:active{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-text-1)}/*!@.title*/.title.sc-calcite-modal{-ms-flex-order:1;order:1;display:-ms-flexbox;display:flex;min-width:0px;-ms-flex-align:center;align-items:center;-ms-flex:1 1 auto;flex:1 1 auto;padding:var(--calcite-modal-padding) var(--calcite-modal-padding-large)}/*!@slot[name=header]::slotted(*), *::slotted([slot=header])*/slot[name=header].sc-calcite-modal-s>*,*.sc-calcite-modal-s>[slot=header]{margin:0px;font-weight:var(--calcite-font-weight-normal);color:var(--calcite-ui-text-1);font-size:var(--calcite-modal-title-text)}/*!@.content*/.content.sc-calcite-modal{position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;display:block;height:100%;overflow:auto;background-color:var(--calcite-ui-foreground-1);padding:0px;max-height:calc(100vh - 12rem);z-index:1}/*!@.content--spaced*/.content--spaced.sc-calcite-modal{padding:var(--calcite-modal-padding) var(--calcite-modal-padding-large)}/*!@.content--no-footer*/.content--no-footer.sc-calcite-modal{border-bottom-right-radius:0.25rem;border-bottom-left-radius:0.25rem}/*!@slot[name=content]::slotted(*),\n*::slotted([slot=content])*/slot[name=content].sc-calcite-modal-s>*,*.sc-calcite-modal-s>[slot=content]{font-size:var(--calcite-modal-content-text)}/*!@:host([background-color=grey]) .content*/[background-color=grey].sc-calcite-modal-h .content.sc-calcite-modal{background-color:var(--calcite-ui-background)}/*!@.footer*/.footer.sc-calcite-modal{margin-top:auto;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;width:100%;-ms-flex-pack:justify;justify-content:space-between;border-bottom-right-radius:0.25rem;border-bottom-left-radius:0.25rem;border-width:0px;border-top-width:1px;border-style:solid;border-color:var(--calcite-ui-border-3);background-color:var(--calcite-ui-foreground-1);-ms-flex:0 0 auto;flex:0 0 auto;padding:var(--calcite-modal-padding) var(--calcite-modal-padding-large);z-index:2}/*!@.footer--hide-back .back, .footer--hide-secondary .secondary*/.footer--hide-back.sc-calcite-modal .back.sc-calcite-modal,.footer--hide-secondary.sc-calcite-modal .secondary.sc-calcite-modal{display:none}/*!@.back*/.back.sc-calcite-modal{display:block;-webkit-margin-end:auto;margin-inline-end:auto}/*!@.secondary*/.secondary.sc-calcite-modal{margin-left:0.25rem;margin-right:0.25rem;display:block}/*!@slot[name=primary]*/slot[name=primary].sc-calcite-modal{display:block}/*!@:host([width=small]) .modal*/[width=small].sc-calcite-modal-h .modal.sc-calcite-modal{width:auto}/*!@:host([width=s]) .modal*/[width=s].sc-calcite-modal-h .modal.sc-calcite-modal{max-width:32rem}@media screen and (max-width: 35rem){/*!@:host([width=s]) .modal*/[width=s].sc-calcite-modal-h .modal.sc-calcite-modal{margin:0px}/*!@:host([width=s]) .modal*/[width=s].sc-calcite-modal-h .modal.sc-calcite-modal{height:100%}/*!@:host([width=s]) .modal*/[width=s].sc-calcite-modal-h .modal.sc-calcite-modal{max-height:100%}/*!@:host([width=s]) .modal*/[width=s].sc-calcite-modal-h .modal.sc-calcite-modal{width:100%}/*!@:host([width=s]) .modal*/[width=s].sc-calcite-modal-h .modal.sc-calcite-modal{max-width:100%}/*!@:host([width=s]) .modal*/[width=s].sc-calcite-modal-h .modal.sc-calcite-modal{border-radius:0px}/*!@:host([width=s]) .content*/[width=s].sc-calcite-modal-h .content.sc-calcite-modal{-ms-flex:1 1 auto;flex:1 1 auto;max-height:unset}/*!@:host([width=s][docked])*/[width=s][docked].sc-calcite-modal-h{-ms-flex-align:end;align-items:flex-end}}/*!@:host([width=m]) .modal*/[width=m].sc-calcite-modal-h .modal.sc-calcite-modal{max-width:48rem}@media screen and (max-width: 51rem){/*!@:host([width=m]) .modal*/[width=m].sc-calcite-modal-h .modal.sc-calcite-modal{margin:0px}/*!@:host([width=m]) .modal*/[width=m].sc-calcite-modal-h .modal.sc-calcite-modal{height:100%}/*!@:host([width=m]) .modal*/[width=m].sc-calcite-modal-h .modal.sc-calcite-modal{max-height:100%}/*!@:host([width=m]) .modal*/[width=m].sc-calcite-modal-h .modal.sc-calcite-modal{width:100%}/*!@:host([width=m]) .modal*/[width=m].sc-calcite-modal-h .modal.sc-calcite-modal{max-width:100%}/*!@:host([width=m]) .modal*/[width=m].sc-calcite-modal-h .modal.sc-calcite-modal{border-radius:0px}/*!@:host([width=m]) .content*/[width=m].sc-calcite-modal-h .content.sc-calcite-modal{-ms-flex:1 1 auto;flex:1 1 auto;max-height:unset}/*!@:host([width=m][docked])*/[width=m][docked].sc-calcite-modal-h{-ms-flex-align:end;align-items:flex-end}}/*!@:host([width=l]) .modal*/[width=l].sc-calcite-modal-h .modal.sc-calcite-modal{max-width:94rem}@media screen and (max-width: 97rem){/*!@:host([width=l]) .modal*/[width=l].sc-calcite-modal-h .modal.sc-calcite-modal{margin:0px}/*!@:host([width=l]) .modal*/[width=l].sc-calcite-modal-h .modal.sc-calcite-modal{height:100%}/*!@:host([width=l]) .modal*/[width=l].sc-calcite-modal-h .modal.sc-calcite-modal{max-height:100%}/*!@:host([width=l]) .modal*/[width=l].sc-calcite-modal-h .modal.sc-calcite-modal{width:100%}/*!@:host([width=l]) .modal*/[width=l].sc-calcite-modal-h .modal.sc-calcite-modal{max-width:100%}/*!@:host([width=l]) .modal*/[width=l].sc-calcite-modal-h .modal.sc-calcite-modal{border-radius:0px}/*!@:host([width=l]) .content*/[width=l].sc-calcite-modal-h .content.sc-calcite-modal{-ms-flex:1 1 auto;flex:1 1 auto;max-height:unset}/*!@:host([width=l][docked])*/[width=l][docked].sc-calcite-modal-h{-ms-flex-align:end;align-items:flex-end}}/*!@:host([fullscreen])*/[fullscreen].sc-calcite-modal-h{background-color:transparent}/*!@:host([fullscreen]) .modal*/[fullscreen].sc-calcite-modal-h .modal.sc-calcite-modal{margin:0px;height:100%;max-height:100%;width:100%;max-width:100%;-webkit-transform:translate3D(0, 20px, 0) scale(0.95);transform:translate3D(0, 20px, 0) scale(0.95)}/*!@:host([fullscreen]) .content*/[fullscreen].sc-calcite-modal-h .content.sc-calcite-modal{max-height:100%;-ms-flex:1 1 auto;flex:1 1 auto}/*!@:host([active][fullscreen]) .modal*/[active][fullscreen].sc-calcite-modal-h .modal.sc-calcite-modal{-webkit-transform:translate3D(0, 0, 0) scale(1);transform:translate3D(0, 0, 0) scale(1)}/*!@:host([active][fullscreen]) .header*/[active][fullscreen].sc-calcite-modal-h .header.sc-calcite-modal{border-radius:0}/*!@:host([active][fullscreen]) .footer*/[active][fullscreen].sc-calcite-modal-h .footer.sc-calcite-modal{border-radius:0}/*!@:host([docked]) .modal*/[docked].sc-calcite-modal-h .modal.sc-calcite-modal{height:auto}/*!@:host([docked]) .content*/[docked].sc-calcite-modal-h .content.sc-calcite-modal{height:auto;-ms-flex:1 1 auto;flex:1 1 auto}@media screen and (max-width: 860px){/*!@:host([docked]) .modal*/[docked].sc-calcite-modal-h .modal.sc-calcite-modal{border-radius:var(--calcite-border-radius) var(--calcite-border-radius) 0 0}/*!@:host([docked]) .close*/[docked].sc-calcite-modal-h .close.sc-calcite-modal{border-start-end-radius:var(--calcite-border-radius)}}/*!@:host([color=red]) .modal*/[color=red].sc-calcite-modal-h .modal.sc-calcite-modal{border-color:var(--calcite-ui-danger)}/*!@:host([color=blue]) .modal*/[color=blue].sc-calcite-modal-h .modal.sc-calcite-modal{border-color:var(--calcite-ui-info)}/*!@:host([color=red]) .modal, :host([color=blue]) .modal*/[color=red].sc-calcite-modal-h .modal.sc-calcite-modal,[color=blue].sc-calcite-modal-h .modal.sc-calcite-modal{border-width:0px;border-top-width:4px;border-style:solid}/*!@:host([color=red]) .header, :host([color=blue]) .header*/[color=red].sc-calcite-modal-h .header.sc-calcite-modal,[color=blue].sc-calcite-modal-h .header.sc-calcite-modal{border-radius:0.25rem;border-bottom-right-radius:0px;border-bottom-left-radius:0px}@media screen and (max-width: 860px){/*!@slot[name=header]::slotted(*), *::slotted([slot=header])*/slot[name=header].sc-calcite-modal-s>*,*.sc-calcite-modal-s>[slot=header]{font-size:var(--calcite-font-size-1)}/*!@.footer*/.footer.sc-calcite-modal{position:-webkit-sticky;position:sticky}/*!@.footer*/.footer.sc-calcite-modal{bottom:0px}}@media screen and (max-width: 480px){/*!@.footer*/.footer.sc-calcite-modal{-ms-flex-direction:column;flex-direction:column}/*!@.back, .secondary*/.back.sc-calcite-modal,.secondary.sc-calcite-modal{margin:0px}/*!@.back, .secondary*/.back.sc-calcite-modal,.secondary.sc-calcite-modal{margin-bottom:0.25rem}}";

const isFocusableExtended = (el) => {
  return isCalciteFocusable(el) || isFocusable(el);
};
const getFocusableElements = (el) => {
  return queryShadowRoot(el, isHidden, isFocusableExtended);
};
/**
 * @slot header - a slot for adding a modal header
 * @slot content - a slot for adding modal content
 * @slot primary - a slot for adding a primary button
 * @slot secondary - a slot for adding a secondary button
 * @slot back - a slot for adding a back button
 */
class Modal {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteModalOpen = createEvent(this, "calciteModalOpen", 7);
    this.calciteModalClose = createEvent(this, "calciteModalClose", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** Add the active attribute to open the modal */
    this.active = false;
    /** Optionally pass a function to run before close */
    this.beforeClose = () => Promise.resolve();
    /** Disables the display a close button within the Modal */
    this.disableCloseButton = false;
    /** Disables the closing of the Modal when clicked outside. */
    this.disableOutsideClose = false;
    /** Aria label for the close button */
    this.intlClose = TEXT$b.close;
    /** Flag to disable the default close on escape behavior */
    this.disableEscape = false;
    /** specify the scale of modal, defaults to m */
    this.scale = "m";
    /** Set the width of the modal. Can use stock sizes or pass a number (in pixels) */
    this.width = "m";
    /** Background color of modal content */
    this.backgroundColor = "white";
    /** Turn off spacing around the content area slot */
    this.noPadding = false;
    //--------------------------------------------------------------------------
    //
    //  Variables
    //
    //--------------------------------------------------------------------------
    this.hasFooter = true;
    this.mutationObserver = createObserver();
    this.activeTransitionProp = "opacity";
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.transitionEnd = (event) => {
      if (event.propertyName === this.activeTransitionProp) {
        this.active ? this.calciteModalOpen.emit() : this.calciteModalClose.emit();
      }
    };
    this.openEnd = () => {
      this.setFocus();
      this.el.removeEventListener("calciteModalOpen", this.openEnd);
    };
    this.handleOutsideClose = () => {
      if (this.disableOutsideClose) {
        return;
      }
      this.close();
    };
    /** Close the modal, first running the `beforeClose` method */
    this.close = () => {
      return this.beforeClose(this.el).then(() => {
        this.active = false;
        focusElement(this.previousActiveElement);
        this.removeOverflowHiddenClass();
      });
    };
    this.focusFirstElement = () => {
      focusElement(this.closeButtonEl);
    };
    this.focusLastElement = () => {
      const focusableElements = getFocusableElements(this.el).filter((el) => !el.getAttribute("data-focus-fence"));
      if (focusableElements.length > 0) {
        focusElement(focusableElements[focusableElements.length - 1]);
      }
      else {
        focusElement(this.closeButtonEl);
      }
    };
    this.updateFooterVisibility = () => {
      this.hasFooter = !!getSlotted(this.el, [SLOTS$e.back, SLOTS$e.primary, SLOTS$e.secondary]);
    };
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillLoad() {
    // when modal initially renders, if active was set we need to open as watcher doesn't fire
    if (this.active) {
      this.open();
    }
  }
  connectedCallback() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el, { childList: true, subtree: true });
    this.updateFooterVisibility();
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    var _a;
    this.removeOverflowHiddenClass();
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    disconnectConditionalSlotComponent(this);
  }
  render() {
    return (hAsync(Host, { "aria-describedby": this.contentId, "aria-labelledby": this.titleId, "aria-modal": "true", role: "dialog" }, hAsync("calcite-scrim", { class: CSS$n.scrim, onClick: this.handleOutsideClose }), this.renderStyle(), hAsync("div", { class: "modal", onTransitionEnd: this.transitionEnd }, hAsync("div", { "data-focus-fence": true, onFocus: this.focusLastElement, tabindex: "0" }), hAsync("div", { class: CSS$n.header }, this.renderCloseButton(), hAsync("header", { class: CSS$n.title }, hAsync("slot", { name: CSS$n.header }))), hAsync("div", { class: {
        content: true,
        "content--spaced": !this.noPadding,
        "content--no-footer": !this.hasFooter
      }, ref: (el) => (this.modalContent = el) }, hAsync("slot", { name: SLOTS$e.content })), this.renderFooter(), hAsync("div", { "data-focus-fence": true, onFocus: this.focusFirstElement, tabindex: "0" }))));
  }
  renderFooter() {
    return this.hasFooter ? (hAsync("div", { class: CSS$n.footer, key: "footer" }, hAsync("span", { class: CSS$n.back }, hAsync("slot", { name: SLOTS$e.back })), hAsync("span", { class: CSS$n.secondary }, hAsync("slot", { name: SLOTS$e.secondary })), hAsync("span", { class: CSS$n.primary }, hAsync("slot", { name: SLOTS$e.primary })))) : null;
  }
  renderCloseButton() {
    return !this.disableCloseButton ? (hAsync("button", { "aria-label": this.intlClose, class: CSS$n.close, key: "button", onClick: this.close, ref: (el) => (this.closeButtonEl = el), title: this.intlClose }, hAsync("calcite-icon", { icon: ICONS$6.close, scale: this.scale === "s" ? "s" : this.scale === "m" ? "m" : this.scale === "l" ? "l" : null }))) : null;
  }
  renderStyle() {
    const hasCustomWidth = !isNaN(parseInt(`${this.width}`));
    return hasCustomWidth ? (hAsync("style", null, `
        .modal {
          max-width: ${this.width}px !important;
        }
        @media screen and (max-width: ${this.width}px) {
          .modal {
            height: 100% !important;
            max-height: 100% !important;
            width: 100% !important;
            max-width: 100% !important;
            margin: 0 !important;
            border-radius: 0 !important;
          }
          .content {
            flex: 1 1 auto !important;
            max-height: unset !important;
          }
        }
      `)) : null;
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  handleEscape(e) {
    if (this.active && !this.disableEscape && e.key === "Escape") {
      this.close();
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Focus first interactive element
   * @deprecated use `setFocus` instead.
   */
  async focusElement(el) {
    if (el) {
      el.focus();
    }
    return this.setFocus();
  }
  /**
   * Sets focus on the component.
   *
   * By default, will try to focus on any focusable content. If there is none, it will focus on the close button.
   * If you want to focus on the close button, you can use the `close-button` focus ID.
   */
  async setFocus(focusId) {
    const closeButton = this.closeButtonEl;
    return focusElement(focusId === "close-button" ? closeButton : getFocusableElements(this.el)[0] || closeButton);
  }
  /** Set the scroll top of the modal content */
  async scrollContent(top = 0, left = 0) {
    if (this.modalContent) {
      if (this.modalContent.scrollTo) {
        this.modalContent.scrollTo({ top, left, behavior: "smooth" });
      }
      else {
        this.modalContent.scrollTop = top;
        this.modalContent.scrollLeft = left;
      }
    }
  }
  async toggleModal(value, oldValue) {
    if (value !== oldValue) {
      if (value) {
        this.open();
      }
      else if (!value) {
        this.close();
      }
    }
  }
  /** Open the modal */
  open() {
    this.previousActiveElement = document.activeElement;
    this.el.addEventListener("calciteModalOpen", this.openEnd);
    this.active = true;
    const titleEl = getSlotted(this.el, SLOTS$e.header);
    const contentEl = getSlotted(this.el, SLOTS$e.content);
    this.titleId = ensureId(titleEl);
    this.contentId = ensureId(contentEl);
    document.documentElement.classList.add(CSS$n.overflowHidden);
  }
  removeOverflowHiddenClass() {
    document.documentElement.classList.remove(CSS$n.overflowHidden);
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "active": ["toggleModal"]
  }; }
  static get style() { return modalCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-modal",
    "$members$": {
      "active": [1540],
      "beforeClose": [16],
      "disableCloseButton": [4, "disable-close-button"],
      "disableOutsideClose": [4, "disable-outside-close"],
      "intlClose": [1, "intl-close"],
      "docked": [516],
      "firstFocus": [16],
      "disableEscape": [4, "disable-escape"],
      "scale": [513],
      "width": [520],
      "fullscreen": [516],
      "color": [513],
      "backgroundColor": [513, "background-color"],
      "noPadding": [4, "no-padding"],
      "hasFooter": [32],
      "focusElement": [64],
      "setFocus": [64],
      "scrollContent": [64]
    },
    "$listeners$": [[8, "keyup", "handleEscape"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["active", "active"], ["docked", "docked"], ["scale", "scale"], ["width", "width"], ["fullscreen", "fullscreen"], ["color", "color"], ["backgroundColor", "background-color"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const TEXT$a = {
  close: "Close"
};
const SLOTS$d = {
  title: "title",
  message: "message",
  link: "link",
  actionsEnd: "actions-end"
};
const CSS$m = {
  actionsEnd: "actions-end",
  close: "notice-close",
  container: "container",
  content: "notice-content",
  icon: "notice-icon"
};

const noticeCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-notice:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-notice{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-notice{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-notice{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-notice{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-notice{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-notice:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-notice-h{display:none}/*!@:host([scale=s])*/[scale=s].sc-calcite-notice-h{--calcite-notice-spacing-token-small:0.5rem;--calcite-notice-spacing-token-large:0.75rem}/*!@:host([scale=s]) .container slot[name=title]::slotted(*), :host([scale=s]) .container *::slotted([slot=title])*/.sc-calcite-notice-h[scale=s] .container slot[name=title].sc-calcite-notice-s>*,.sc-calcite-notice-h[scale=s] .container *.sc-calcite-notice-s>[slot=title]{margin-top:0.125rem;margin-bottom:0.125rem;font-size:var(--calcite-font-size--1);line-height:1.375}/*!@:host([scale=s]) .container slot[name=message]::slotted(*), :host([scale=s]) .container *::slotted([slot=message])*/.sc-calcite-notice-h[scale=s] .container slot[name=message].sc-calcite-notice-s>*,.sc-calcite-notice-h[scale=s] .container *.sc-calcite-notice-s>[slot=message]{margin-top:0.125rem;margin-bottom:0.125rem;font-size:var(--calcite-font-size--2);line-height:1.375}/*!@:host([scale=s]) ::slotted(calcite-link)*/.sc-calcite-notice-h[scale=s] .sc-calcite-notice-s>calcite-link{margin-top:0.125rem;margin-bottom:0.125rem;font-size:var(--calcite-font-size--2);line-height:1.375}/*!@:host([scale=s]) .notice-close*/[scale=s].sc-calcite-notice-h .notice-close.sc-calcite-notice{padding:0.5rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-notice-h{--calcite-notice-spacing-token-small:0.75rem;--calcite-notice-spacing-token-large:1rem}/*!@:host([scale=m]) .container slot[name=title]::slotted(*), :host([scale=m]) .container *::slotted([slot=title])*/.sc-calcite-notice-h[scale=m] .container slot[name=title].sc-calcite-notice-s>*,.sc-calcite-notice-h[scale=m] .container *.sc-calcite-notice-s>[slot=title]{margin-top:0.125rem;margin-bottom:0.125rem;font-size:var(--calcite-font-size-0);line-height:1.375}/*!@:host([scale=m]) .container slot[name=message]::slotted(*), :host([scale=m]) .container *::slotted([slot=message])*/.sc-calcite-notice-h[scale=m] .container slot[name=message].sc-calcite-notice-s>*,.sc-calcite-notice-h[scale=m] .container *.sc-calcite-notice-s>[slot=message]{margin-top:0.125rem;margin-bottom:0.125rem;font-size:var(--calcite-font-size--1);line-height:1.375}/*!@:host([scale=m]) ::slotted(calcite-link)*/.sc-calcite-notice-h[scale=m] .sc-calcite-notice-s>calcite-link{margin-top:0.125rem;margin-bottom:0.125rem;font-size:var(--calcite-font-size--1);line-height:1.375}/*!@:host([scale=l])*/[scale=l].sc-calcite-notice-h{--calcite-notice-spacing-token-small:1rem;--calcite-notice-spacing-token-large:1.25rem}/*!@:host([scale=l]) .container slot[name=title]::slotted(*), :host([scale=l]) .container *::slotted([slot=title])*/.sc-calcite-notice-h[scale=l] .container slot[name=title].sc-calcite-notice-s>*,.sc-calcite-notice-h[scale=l] .container *.sc-calcite-notice-s>[slot=title]{margin-top:0.125rem;margin-bottom:0.125rem;font-size:var(--calcite-font-size-1);line-height:1.375}/*!@:host([scale=l]) .container slot[name=message]::slotted(*), :host([scale=l]) .container *::slotted([slot=message])*/.sc-calcite-notice-h[scale=l] .container slot[name=message].sc-calcite-notice-s>*,.sc-calcite-notice-h[scale=l] .container *.sc-calcite-notice-s>[slot=message]{margin-top:0.125rem;margin-bottom:0.125rem;font-size:var(--calcite-font-size-0);line-height:1.375}/*!@:host([scale=l]) ::slotted(calcite-link)*/.sc-calcite-notice-h[scale=l] .sc-calcite-notice-s>calcite-link{margin-top:0.125rem;margin-bottom:0.125rem;font-size:var(--calcite-font-size-0);line-height:1.375}/*!@:host([width=auto])*/[width=auto].sc-calcite-notice-h{--calcite-notice-width:auto}/*!@:host([width=half])*/[width=half].sc-calcite-notice-h{--calcite-notice-width:50%}/*!@:host([width=full])*/[width=full].sc-calcite-notice-h{--calcite-notice-width:100%}/*!@:host*/.sc-calcite-notice-h{margin-left:auto;margin-right:auto;display:none;max-width:100%;-ms-flex-align:center;align-items:center;width:var(--calcite-notice-width)}/*!@.container*/.container.sc-calcite-notice{pointer-events:none;margin-top:0px;margin-bottom:0px;-webkit-box-sizing:border-box;box-sizing:border-box;display:none;width:100%;background-color:var(--calcite-ui-foreground-1);opacity:0;max-height:0;text-align:start;-webkit-transition:var(--calcite-animation-timing);transition:var(--calcite-animation-timing);-webkit-border-start:0px solid;border-inline-start:0px solid;-webkit-box-shadow:0 0 0 0 transparent;box-shadow:0 0 0 0 transparent}/*!@.notice-close*/.notice-close.sc-calcite-notice{outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@.notice-close:focus*/.notice-close.sc-calcite-notice:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@:host*/.sc-calcite-notice-h{display:-ms-flexbox;display:flex}/*!@:host([active]) .container*/[active].sc-calcite-notice-h .container.sc-calcite-notice{pointer-events:auto;display:-ms-flexbox;display:flex;max-height:100%;-ms-flex-align:center;align-items:center;border-width:2px;opacity:1;--tw-shadow:0 4px 8px -1px rgba(0, 0, 0, 0.08), 0 2px 4px -1px rgba(0, 0, 0, 0.04);--tw-shadow-colored:0 4px 8px -1px var(--tw-shadow-color), 0 2px 4px -1px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@.container slot[name=title]::slotted(*), .container *::slotted([slot=title])*/.container slot[name=title].sc-calcite-notice-s>*,.container *.sc-calcite-notice-s>[slot=title]{margin:0px;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1)}/*!@.container slot[name=message]::slotted(*), .container *::slotted([slot=message])*/.container slot[name=message].sc-calcite-notice-s>*,.container *.sc-calcite-notice-s>[slot=message]{margin:0px;display:inline;font-weight:var(--calcite-font-weight-normal);color:var(--calcite-ui-text-2);-webkit-margin-end:var(--calcite-notice-spacing-token-small);margin-inline-end:var(--calcite-notice-spacing-token-small)}/*!@.notice-content*/.notice-content.sc-calcite-notice{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;padding:var(--calcite-notice-spacing-token-small) var(--calcite-notice-spacing-token-large);-ms-flex:0 0 auto;flex:0 0 auto;display:-ms-flexbox;display:flex;min-width:0px;-ms-flex-direction:column;flex-direction:column;overflow-wrap:break-word;-ms-flex:1 1 0px;flex:1 1 0;padding-block:var(--calcite-notice-spacing-token-small);padding-inline:0 var(--calcite-notice-spacing-token-small)}/*!@.notice-content:first-of-type:not(:only-child)*/.notice-content.sc-calcite-notice:first-of-type:not(:only-child){-webkit-padding-start:var(--calcite-notice-spacing-token-large);padding-inline-start:var(--calcite-notice-spacing-token-large)}/*!@.notice-content:only-of-type*/.notice-content.sc-calcite-notice:only-of-type{padding:var(--calcite-notice-spacing-token-small) var(--calcite-notice-spacing-token-large)}/*!@.notice-icon*/.notice-icon.sc-calcite-notice{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;padding:var(--calcite-notice-spacing-token-small) var(--calcite-notice-spacing-token-large);-ms-flex:0 0 auto;flex:0 0 auto}/*!@.notice-close*/.notice-close.sc-calcite-notice{display:-ms-flexbox;display:flex;cursor:pointer;-ms-flex-align:center;align-items:center;-ms-flex-item-align:stretch;align-self:stretch;border-style:none;background-color:transparent;color:var(--calcite-ui-text-3);outline:2px solid transparent;outline-offset:2px;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;padding:var(--calcite-notice-spacing-token-small) var(--calcite-notice-spacing-token-large);-ms-flex:0 0 auto;flex:0 0 auto;-webkit-appearance:none}/*!@.notice-close:hover, .notice-close:focus*/.notice-close.sc-calcite-notice:hover,.notice-close.sc-calcite-notice:focus{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-text-1)}/*!@.notice-close:active*/.notice-close.sc-calcite-notice:active{background-color:var(--calcite-ui-foreground-3)}/*!@.actions-end*/.actions-end.sc-calcite-notice{display:-ms-flexbox;display:flex;-ms-flex-item-align:stretch;align-self:stretch}/*!@:host([color=blue]) .container*/[color=blue].sc-calcite-notice-h .container.sc-calcite-notice{border-color:var(--calcite-ui-brand)}/*!@:host([color=blue]) .container .notice-icon*/[color=blue].sc-calcite-notice-h .container.sc-calcite-notice .notice-icon.sc-calcite-notice{color:var(--calcite-ui-brand)}/*!@:host([color=red]) .container*/[color=red].sc-calcite-notice-h .container.sc-calcite-notice{border-color:var(--calcite-ui-danger)}/*!@:host([color=red]) .container .notice-icon*/[color=red].sc-calcite-notice-h .container.sc-calcite-notice .notice-icon.sc-calcite-notice{color:var(--calcite-ui-danger)}/*!@:host([color=yellow]) .container*/[color=yellow].sc-calcite-notice-h .container.sc-calcite-notice{border-color:var(--calcite-ui-warning)}/*!@:host([color=yellow]) .container .notice-icon*/[color=yellow].sc-calcite-notice-h .container.sc-calcite-notice .notice-icon.sc-calcite-notice{color:var(--calcite-ui-warning)}/*!@:host([color=green]) .container*/[color=green].sc-calcite-notice-h .container.sc-calcite-notice{border-color:var(--calcite-ui-success)}/*!@:host([color=green]) .container .notice-icon*/[color=green].sc-calcite-notice-h .container.sc-calcite-notice .notice-icon.sc-calcite-notice{color:var(--calcite-ui-success)}";

/** Notices are intended to be used to present users with important-but-not-crucial contextual tips or copy. Because
 * notices are displayed inline, a common use case is displaying them on page-load to present users with short hints or contextual copy.
 * They are optionally dismissible - useful for keeping track of whether or not a user has dismissed the notice. You can also choose not
 * to display a notice on page load and set the "active" attribute as needed to contextually provide inline messaging to users.
 */
/**
 * @slot title - Title of the notice (optional)
 * @slot message - Main text of the notice
 * @slot link - Optional action to take from the notice (undo, try again, link to page, etc.)
 * @slot actions-end - Allows adding a `calcite-action` at the end of the notice. It is recommended to use 2 or less actions.
 */
class Notice {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteNoticeClose = createEvent(this, "calciteNoticeClose", 7);
    this.calciteNoticeOpen = createEvent(this, "calciteNoticeOpen", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //---------------------------------------------------------------------------
    /** Is the notice currently active or not */
    this.active = false;
    /** Color for the notice (will apply to top border and icon) */
    this.color = "blue";
    /** Optionally show a button the user can click to dismiss the notice */
    this.dismissible = false;
    /** String for the close button.
     * @default "Close"
     */
    this.intlClose = TEXT$a.close;
    /** specify the scale of the notice, defaults to m */
    this.scale = "m";
    /** specify the width of the notice, defaults to auto */
    this.width = "auto";
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.close = () => {
      this.active = false;
      this.calciteNoticeClose.emit();
    };
  }
  updateRequestedIcon() {
    this.requestedIcon = setRequestedIcon(StatusIcons, this.icon, this.color);
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  componentWillLoad() {
    this.requestedIcon = setRequestedIcon(StatusIcons, this.icon, this.color);
  }
  render() {
    const { el } = this;
    const closeButton = (hAsync("button", { "aria-label": this.intlClose, class: CSS$m.close, onClick: this.close, ref: (el) => (this.closeButton = el) }, hAsync("calcite-icon", { icon: "x", scale: this.scale === "l" ? "m" : "s" })));
    const hasActionEnd = getSlotted(el, SLOTS$d.actionsEnd);
    return (hAsync("div", { class: CSS$m.container }, this.requestedIcon ? (hAsync("div", { class: CSS$m.icon }, hAsync("calcite-icon", { icon: this.requestedIcon, scale: this.scale === "l" ? "m" : "s" }))) : null, hAsync("div", { class: CSS$m.content }, hAsync("slot", { name: SLOTS$d.title }), hAsync("slot", { name: SLOTS$d.message }), hAsync("slot", { name: SLOTS$d.link })), hasActionEnd ? (hAsync("div", { class: CSS$m.actionsEnd }, hAsync("slot", { name: SLOTS$d.actionsEnd }))) : null, this.dismissible ? closeButton : null));
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    const noticeLinkEl = this.el.querySelector("calcite-link");
    if (!this.closeButton && !noticeLinkEl) {
      return;
    }
    if (noticeLinkEl) {
      noticeLinkEl.setFocus();
    }
    else if (this.closeButton) {
      this.closeButton.focus();
    }
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "icon": ["updateRequestedIcon"],
    "color": ["updateRequestedIcon"]
  }; }
  static get style() { return noticeCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-notice",
    "$members$": {
      "active": [1540],
      "color": [513],
      "dismissible": [516],
      "icon": [520],
      "intlClose": [1, "intl-close"],
      "scale": [513],
      "width": [513],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["active", "active"], ["color", "color"], ["dismissible", "dismissible"], ["icon", "icon"], ["scale", "scale"], ["width", "width"]]
  }; }
}

const optionCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-option:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-option{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-option{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-option{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-option{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-option{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-option:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-option-h{display:none}/*!@:host*/.sc-calcite-option-h{display:block}";

class Option {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteOptionChange = createEvent(this, "calciteOptionChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /**
     * When true, it prevents the option from being selected.
     */
    this.disabled = false;
    this.mutationObserver = createObserver();
  }
  handlePropChange(_newValue, _oldValue, propName) {
    if (propName === "label" || propName === "value") {
      this.ensureTextContentDependentProps();
    }
    this.calciteOptionChange.emit();
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  ensureTextContentDependentProps() {
    const { el: { textContent } } = this;
    if (!this.label || this.label === this.internallySetLabel) {
      this.label = textContent;
      this.internallySetLabel = textContent;
    }
    if (!this.value || this.value === this.internallySetValue) {
      this.value = textContent;
      this.internallySetValue = textContent;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    var _a;
    this.ensureTextContentDependentProps();
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el, {
      attributeFilter: ["label", "value"],
      characterData: true,
      childList: true,
      subtree: true
    });
  }
  disconnectedCallback() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
  }
  //--------------------------------------------------------------------------
  //
  //  Render Methods
  //
  //--------------------------------------------------------------------------
  render() {
    return hAsync("slot", null, this.label);
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "disabled": ["handlePropChange"],
    "label": ["handlePropChange"],
    "selected": ["handlePropChange"],
    "value": ["handlePropChange"]
  }; }
  static get style() { return optionCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-option",
    "$members$": {
      "disabled": [516],
      "label": [1025],
      "selected": [516],
      "value": [1032]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["selected", "selected"]]
  }; }
}

const optionGroupCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-option-group:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-option-group{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-option-group{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-option-group{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-option-group{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-option-group{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-option-group:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-option-group-h{display:none}/*!@:host*/.sc-calcite-option-group-h{display:block}";

/**
 * @slot - A slot for adding `calcite-option`s.
 */
class OptionGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteOptionGroupChange = createEvent(this, "calciteOptionGroupChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /**
     * When true, it prevents selection from any of its associated options.
     */
    this.disabled = false;
  }
  handlePropChange() {
    this.calciteOptionGroupChange.emit();
  }
  //--------------------------------------------------------------------------
  //
  //  Render Methods
  //
  //--------------------------------------------------------------------------
  render() {
    return (hAsync(Fragment, null, hAsync("div", null, this.label), hAsync("slot", null)));
  }
  static get watchers() { return {
    "disabled": ["handlePropChange"],
    "label": ["handlePropChange"]
  }; }
  static get style() { return optionGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-option-group",
    "$members$": {
      "disabled": [516],
      "label": [1]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$l = {
  page: "page",
  selected: "is-selected",
  previous: "previous",
  next: "next",
  disabled: "is-disabled",
  ellipsis: "ellipsis",
  ellipsisStart: "ellipsis--start",
  ellipsisEnd: "ellipsis--end"
};
const TEXT$9 = {
  nextLabel: "Next",
  previousLabel: "Previous"
};

const paginationCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-pagination:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-pagination{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-pagination{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-pagination{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-pagination{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-pagination{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-pagination:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-pagination-h{display:none}/*!@:host([scale=s])*/[scale=s].sc-calcite-pagination-h{--calcite-pagination-spacing:0.25rem 0.5rem}/*!@:host([scale=s]) .previous, :host([scale=s]) .next, :host([scale=s]) .page*/[scale=s].sc-calcite-pagination-h .previous.sc-calcite-pagination,[scale=s].sc-calcite-pagination-h .next.sc-calcite-pagination,[scale=s].sc-calcite-pagination-h .page.sc-calcite-pagination{height:1.5rem;font-size:var(--calcite-font-size--2);line-height:1rem}/*!@:host([scale=s]) .previous, :host([scale=s]) .next*/[scale=s].sc-calcite-pagination-h .previous.sc-calcite-pagination,[scale=s].sc-calcite-pagination-h .next.sc-calcite-pagination{padding-left:0.25rem;padding-right:0.25rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-pagination-h{--calcite-pagination-spacing:0.5rem 0.75rem}/*!@:host([scale=m]) .previous, :host([scale=m]) .next, :host([scale=m]) .page*/[scale=m].sc-calcite-pagination-h .previous.sc-calcite-pagination,[scale=m].sc-calcite-pagination-h .next.sc-calcite-pagination,[scale=m].sc-calcite-pagination-h .page.sc-calcite-pagination{height:2rem;font-size:var(--calcite-font-size--1);line-height:1rem}/*!@:host([scale=m]) .previous, :host([scale=m]) .next*/[scale=m].sc-calcite-pagination-h .previous.sc-calcite-pagination,[scale=m].sc-calcite-pagination-h .next.sc-calcite-pagination{padding-left:0.5rem;padding-right:0.5rem}/*!@:host([scale=l])*/[scale=l].sc-calcite-pagination-h{--calcite-pagination-spacing:0.75rem 1rem}/*!@:host([scale=l]) .previous, :host([scale=l]) .next, :host([scale=l]) .page*/[scale=l].sc-calcite-pagination-h .previous.sc-calcite-pagination,[scale=l].sc-calcite-pagination-h .next.sc-calcite-pagination,[scale=l].sc-calcite-pagination-h .page.sc-calcite-pagination{height:2.75rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@:host([scale=l]) .previous, :host([scale=l]) .next*/[scale=l].sc-calcite-pagination-h .previous.sc-calcite-pagination,[scale=l].sc-calcite-pagination-h .next.sc-calcite-pagination{padding-left:1rem;padding-right:1rem}/*!@:host*/.sc-calcite-pagination-h{display:-ms-flexbox;display:flex;-ms-writing-mode:lr-tb;-webkit-writing-mode:horizontal-tb;writing-mode:horizontal-tb}/*!@:host button*/.sc-calcite-pagination-h button.sc-calcite-pagination{outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@:host button:focus*/.sc-calcite-pagination-h button.sc-calcite-pagination:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@.previous, .next, .page*/.previous.sc-calcite-pagination,.next.sc-calcite-pagination,.page.sc-calcite-pagination{-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;cursor:pointer;-ms-flex-align:center;align-items:center;border-style:none;--tw-border-opacity:0;background-color:transparent;font-family:inherit;font-size:var(--calcite-font-size-0);line-height:1.25rem;color:var(--calcite-ui-text-3);border-top:2px solid transparent;border-bottom:2px solid transparent}/*!@.previous:hover, .next:hover, .page:hover*/.previous.sc-calcite-pagination:hover,.next.sc-calcite-pagination:hover,.page.sc-calcite-pagination:hover{color:var(--calcite-ui-text-1);-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s}/*!@.page:hover*/.page.sc-calcite-pagination:hover{border-bottom-color:var(--calcite-ui-border-2)}/*!@.page.is-selected*/.page.is-selected.sc-calcite-pagination{font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1);border-bottom-color:var(--calcite-ui-brand)}/*!@.previous:hover, .next:hover*/.previous.sc-calcite-pagination:hover,.next.sc-calcite-pagination:hover{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-brand)}/*!@.previous:active, .next:active*/.previous.sc-calcite-pagination:active,.next.sc-calcite-pagination:active{background-color:var(--calcite-ui-foreground-3)}/*!@.previous.is-disabled, .next.is-disabled*/.previous.is-disabled.sc-calcite-pagination,.next.is-disabled.sc-calcite-pagination{pointer-events:none;background-color:transparent}/*!@.previous.is-disabled > calcite-icon, .next.is-disabled > calcite-icon*/.previous.is-disabled.sc-calcite-pagination>calcite-icon.sc-calcite-pagination,.next.is-disabled.sc-calcite-pagination>calcite-icon.sc-calcite-pagination{opacity:var(--calcite-ui-opacity-disabled)}/*!@.next*/.next.sc-calcite-pagination{margin-right:0px}/*!@.page,\n.ellipsis*/.page.sc-calcite-pagination,.ellipsis.sc-calcite-pagination{padding:var(--calcite-pagination-spacing)}/*!@.ellipsis*/.ellipsis.sc-calcite-pagination{display:-ms-flexbox;display:flex;-ms-flex-align:end;align-items:flex-end;color:var(--calcite-ui-text-3)}";

const maxPagesDisplayed = 5;
class Pagination {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calcitePaginationUpdate = createEvent(this, "calcitePaginationUpdate", 7);
    this.calcitePaginationChange = createEvent(this, "calcitePaginationChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Public Properties
    //
    //--------------------------------------------------------------------------
    /** number of items per page */
    this.num = 20;
    /** index of item that should begin the page */
    this.start = 1;
    /** total number of items */
    this.total = 0;
    /** Used as an accessible label (aria-label) for the next button
     * @default "Next"
     */
    this.textLabelNext = TEXT$9.nextLabel;
    /** Used as an accessible label (aria-label) of the previous button
     * @default "Previous"
     */
    this.textLabelPrevious = TEXT$9.previousLabel;
    /** The scale of the pagination */
    this.scale = "m";
    this.previousClicked = () => {
      this.previousPage().then();
      this.emitUpdate();
    };
    this.nextClicked = () => {
      this.nextPage();
      this.emitUpdate();
    };
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /** Go to the next page of results */
  async nextPage() {
    this.start = Math.min(this.getLastStart(), this.start + this.num);
  }
  /** Go to the previous page of results */
  async previousPage() {
    this.start = Math.max(1, this.start - this.num);
  }
  // --------------------------------------------------------------------------
  //
  //  Private Methods
  //
  // --------------------------------------------------------------------------
  getLastStart() {
    const { total, num } = this;
    const lastStart = total % num === 0 ? total - num : Math.floor(total / num) * num;
    return lastStart + 1;
  }
  showLeftEllipsis() {
    return Math.floor(this.start / this.num) > 3;
  }
  showRightEllipsis() {
    return (this.total - this.start) / this.num > 3;
  }
  emitUpdate() {
    const changePayload = {
      start: this.start,
      total: this.total,
      num: this.num
    };
    this.calcitePaginationChange.emit(changePayload);
    this.calcitePaginationUpdate.emit(changePayload);
  }
  //--------------------------------------------------------------------------
  //
  //  Render Methods
  //
  //--------------------------------------------------------------------------
  renderPages() {
    const lastStart = this.getLastStart();
    let end;
    let nextStart;
    // if we don't need ellipses render the whole set
    if (this.total / this.num <= maxPagesDisplayed) {
      nextStart = 1 + this.num;
      end = lastStart - this.num;
    }
    else {
      // if we're within max pages of page 1
      if (this.start / this.num < maxPagesDisplayed - 1) {
        nextStart = 1 + this.num;
        end = 1 + 4 * this.num;
      }
      else {
        // if we're within max pages of last page
        if (this.start + 3 * this.num >= this.total) {
          nextStart = lastStart - 4 * this.num;
          end = lastStart - this.num;
        }
        else {
          nextStart = this.start - this.num;
          end = this.start + this.num;
        }
      }
    }
    const pages = [];
    while (nextStart <= end) {
      pages.push(nextStart);
      nextStart = nextStart + this.num;
    }
    return pages.map((page) => this.renderPage(page));
  }
  renderPage(start) {
    const page = Math.floor(start / this.num) + (this.num === 1 ? 0 : 1);
    return (hAsync("button", { class: {
        [CSS$l.page]: true,
        [CSS$l.selected]: start === this.start
      }, onClick: () => {
        this.start = start;
        this.emitUpdate();
      } }, page));
  }
  renderLeftEllipsis() {
    if (this.total / this.num > maxPagesDisplayed && this.showLeftEllipsis()) {
      return hAsync("span", { class: `${CSS$l.ellipsis} ${CSS$l.ellipsisStart}` }, "\u2026");
    }
  }
  renderRightEllipsis() {
    if (this.total / this.num > maxPagesDisplayed && this.showRightEllipsis()) {
      return hAsync("span", { class: `${CSS$l.ellipsis} ${CSS$l.ellipsisEnd}` }, "\u2026");
    }
  }
  render() {
    const { total, num, start } = this;
    const prevDisabled = num === 1 ? start <= num : start < num;
    const nextDisabled = num === 1 ? start + num > total : start + num > total;
    return (hAsync(Fragment, null, hAsync("button", { "aria-label": this.textLabelPrevious, class: {
        [CSS$l.previous]: true,
        [CSS$l.disabled]: prevDisabled
      }, disabled: prevDisabled, onClick: this.previousClicked }, hAsync("calcite-icon", { flipRtl: true, icon: "chevronLeft", scale: "s" })), total > num ? this.renderPage(1) : null, this.renderLeftEllipsis(), this.renderPages(), this.renderRightEllipsis(), this.renderPage(this.getLastStart()), hAsync("button", { "aria-label": this.textLabelNext, class: {
        [CSS$l.next]: true,
        [CSS$l.disabled]: nextDisabled
      }, disabled: nextDisabled, onClick: this.nextClicked }, hAsync("calcite-icon", { flipRtl: true, icon: "chevronRight", scale: "s" }))));
  }
  get el() { return getElement(this); }
  static get style() { return paginationCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-pagination",
    "$members$": {
      "num": [2],
      "start": [1026],
      "total": [2],
      "textLabelNext": [1, "text-label-next"],
      "textLabelPrevious": [1, "text-label-previous"],
      "scale": [513],
      "nextPage": [64],
      "previousPage": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["scale", "scale"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$k = {
  backButton: "back-button",
  container: "container",
  header: "header",
  heading: "heading",
  summary: "summary",
  headerContent: "header-content",
  headerActions: "header-actions",
  headerActionsEnd: "header-actions--end",
  headerActionsStart: "header-actions--start",
  contentWrapper: "content-wrapper",
  contentContainer: "content-container",
  contentHeight: "content-height",
  fabContainer: "fab-container",
  footer: "footer",
  menuContainer: "menu-container",
  menuButton: "menu-button",
  menu: "menu",
  menuOpen: "menu--open"
};
const ICONS$5 = {
  close: "x",
  menu: "ellipsis",
  backLeft: "chevron-left",
  backRight: "chevron-right"
};
const SLOTS$c = {
  headerActionsStart: "header-actions-start",
  headerActionsEnd: "header-actions-end",
  headerMenuActions: "header-menu-actions",
  headerContent: "header-content",
  fab: "fab",
  footer: "footer",
  footerActions: "footer-actions"
};
const TEXT$8 = {
  back: "Back",
  close: "Close",
  open: "Open",
  options: "Options"
};
const HEADING_LEVEL$4 = 3;

const panelCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-panel:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-panel{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-panel{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-panel{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-panel{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-panel{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:host*/.sc-calcite-panel-h{-webkit-box-sizing:border-box;box-sizing:border-box;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-2);font-size:var(--calcite-font-size--1)}/*!@:host **/.sc-calcite-panel-h *.sc-calcite-panel{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@:root*/.sc-calcite-panel:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-panel-h{display:none}/*!@:host*/.sc-calcite-panel-h{position:relative;display:-ms-flexbox;display:flex;width:100%;-ms-flex:1 1 auto;flex:1 1 auto;overflow:hidden;--calcite-min-header-height:calc(var(--calcite-icon-size) * 3);--calcite-panel-max-height:unset;--calcite-panel-width:100%;--calcite-panel-min-width:unset;--calcite-panel-max-width:unset}/*!@:host([disabled])*/[disabled].sc-calcite-panel-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-panel-h[disabled] .sc-calcite-panel-s>[calcite-hydrated][disabled],[disabled].sc-calcite-panel-h [calcite-hydrated][disabled].sc-calcite-panel{opacity:1}/*!@.header*/.header.sc-calcite-panel{margin:0px;display:-ms-flexbox;display:flex;-ms-flex-line-pack:justify;align-content:space-between;-ms-flex-align:center;align-items:center;fill:var(--calcite-ui-text-2);color:var(--calcite-ui-text-2)}/*!@.heading*/.heading.sc-calcite-panel{margin:0px;padding:0px;font-weight:var(--calcite-font-weight-medium)}/*!@.header .heading*/.header.sc-calcite-panel .heading.sc-calcite-panel{-ms-flex:1 1 auto;flex:1 1 auto;padding:0.5rem}/*!@h1.heading*/h1.heading.sc-calcite-panel{font-size:var(--calcite-font-size-2);line-height:1.5rem}/*!@h2.heading*/h2.heading.sc-calcite-panel{font-size:var(--calcite-font-size-1);line-height:1.5rem}/*!@h3.heading*/h3.heading.sc-calcite-panel{font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@h4.heading, h5.heading*/h4.heading.sc-calcite-panel,h5.heading.sc-calcite-panel{font-size:var(--calcite-font-size--1);line-height:1rem}/*!@.container*/.container.sc-calcite-panel{margin:0px;display:-ms-flexbox;display:flex;width:100%;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:stretch;align-items:stretch;background-color:var(--calcite-ui-background);padding:0px;max-height:var(--calcite-panel-max-height);width:var(--calcite-panel-width);max-width:var(--calcite-panel-max-width);min-width:var(--calcite-panel-min-width);-webkit-transition:max-height var(--calcite-animation-timing), width var(--calcite-animation-timing);transition:max-height var(--calcite-animation-timing), width var(--calcite-animation-timing)}/*!@:host([height-scale=s])*/[height-scale=s].sc-calcite-panel-h{--calcite-panel-max-height:40vh}/*!@:host([height-scale=m])*/[height-scale=m].sc-calcite-panel-h{--calcite-panel-max-height:60vh}/*!@:host([height-scale=l])*/[height-scale=l].sc-calcite-panel-h{--calcite-panel-max-height:80vh}/*!@:host([width-scale=s])*/[width-scale=s].sc-calcite-panel-h{--calcite-panel-width:calc(var(--calcite-panel-width-multiplier) * 12vw);--calcite-panel-max-width:calc(var(--calcite-panel-width-multiplier) * 300px);--calcite-panel-min-width:calc(var(--calcite-panel-width-multiplier) * 150px)}/*!@:host([width-scale=m])*/[width-scale=m].sc-calcite-panel-h{--calcite-panel-width:calc(var(--calcite-panel-width-multiplier) * 20vw);--calcite-panel-max-width:calc(var(--calcite-panel-width-multiplier) * 420px);--calcite-panel-min-width:calc(var(--calcite-panel-width-multiplier) * 240px)}/*!@:host([width-scale=l])*/[width-scale=l].sc-calcite-panel-h{--calcite-panel-width:calc(var(--calcite-panel-width-multiplier) * 45vw);--calcite-panel-max-width:calc(var(--calcite-panel-width-multiplier) * 680px);--calcite-panel-min-width:calc(var(--calcite-panel-width-multiplier) * 340px)}/*!@.container[hidden]*/.container[hidden].sc-calcite-panel{display:none}/*!@:host([loading]) .container, :host([disabled]) .container*/[loading].sc-calcite-panel-h .container.sc-calcite-panel,[disabled].sc-calcite-panel-h .container.sc-calcite-panel{position:relative;z-index:1}/*!@.header*/.header.sc-calcite-panel{border-bottom:1px solid;position:-webkit-sticky;position:sticky;top:0px;width:100%;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:start;justify-content:flex-start;background-color:var(--calcite-ui-foreground-1);border-bottom-color:var(--calcite-ui-border-3);-ms-flex:0 0 auto;flex:0 0 auto;z-index:2}/*!@.header-content*/.header-content.sc-calcite-panel{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0.75rem;padding-right:0.75rem;padding-top:0.875rem;padding-bottom:0.875rem;overflow:hidden;-webkit-margin-end:auto;margin-inline-end:auto}/*!@.header-content .heading, .header-content .summary*/.header-content.sc-calcite-panel .heading.sc-calcite-panel,.header-content.sc-calcite-panel .summary.sc-calcite-panel{display:block;overflow-wrap:break-word;padding:0px}/*!@.header-content .heading*/.header-content.sc-calcite-panel .heading.sc-calcite-panel{margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0.25rem;font-size:var(--calcite-font-size-0);line-height:1.25rem;font-weight:var(--calcite-font-weight-medium)}/*!@.header-content .heading:only-child*/.header-content.sc-calcite-panel .heading.sc-calcite-panel:only-child{margin-bottom:0px}/*!@.header-content .summary*/.header-content.sc-calcite-panel .summary.sc-calcite-panel{font-size:var(--calcite-font-size--1);line-height:1rem;color:var(--calcite-ui-text-2)}/*!@.back-button*/.back-button.sc-calcite-panel{border-width:0px;border-style:solid;border-color:var(--calcite-ui-border-3);border-inline-end-width:1px}/*!@.header-actions*/.header-actions.sc-calcite-panel{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-align:stretch;align-items:stretch}/*!@.header-actions--end,\n.menu-container:only-child*/.header-actions--end.sc-calcite-panel,.menu-container.sc-calcite-panel:only-child{-webkit-margin-start:auto;margin-inline-start:auto}/*!@.menu-button*/.menu-button.sc-calcite-panel{position:relative;height:100%;-ms-flex:0 1 auto;flex:0 1 auto;-ms-flex-item-align:stretch;align-self:stretch}/*!@.menu*/.menu.sc-calcite-panel{min-width:10rem;-ms-flex-flow:column nowrap;flex-flow:column nowrap}/*!@.content-wrapper*/.content-wrapper.sc-calcite-panel{overflow:auto}/*!@.content-height*/.content-height.sc-calcite-panel{height:100%}/*!@.content-container*/.content-container.sc-calcite-panel{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-align:stretch;align-items:stretch;background-color:var(--calcite-ui-background)}/*!@.footer*/.footer.sc-calcite-panel{border-top:1px solid;position:-webkit-sticky;position:sticky;bottom:0px;display:-ms-flexbox;display:flex;width:100%;-ms-flex-pack:space-evenly;justify-content:space-evenly;background-color:var(--calcite-ui-foreground-1);border-top-color:var(--calcite-ui-border-3);-ms-flex:0 0 auto;flex:0 0 auto;min-height:3rem;padding:0.5rem}/*!@.fab-container*/.fab-container.sc-calcite-panel{position:-webkit-sticky;position:sticky;bottom:0px;left:0px;right:0px;margin-top:0px;margin-bottom:0px;margin-left:auto;margin-right:auto;display:block;padding:0.5rem;width:-moz-fit-content;width:-webkit-fit-content;width:fit-content;z-index:1}";

/**
 * @slot - A slot for adding custom content.
 * @slot header-actions-start - A slot for adding actions or content to the start side of the panel header.
 * @slot header-actions-end - A slot for adding actions or content to the end side of the panel header.
 * @slot header-content - A slot for adding custom content to the header.
 * @slot header-menu-actions - A slot for adding an overflow menu with actions inside a dropdown.
 * @slot fab - A slot for adding a `calcite-fab` (floating action button) to perform an action.
 * @slot footer-actions - A slot for adding buttons to the footer.
 * @slot footer - A slot for adding custom content to the footer.
 */
class Panel {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calcitePanelDismissedChange = createEvent(this, "calcitePanelDismissedChange", 7);
    this.calcitePanelScroll = createEvent(this, "calcitePanelScroll", 7);
    this.calcitePanelBackClick = createEvent(this, "calcitePanelBackClick", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * Hides the panel.
     */
    this.dismissed = false;
    /**
     * When true, disabled prevents interaction. This state shows items with lower opacity/grayed.
     */
    this.disabled = false;
    /**
     * Displays a close button in the trailing side of the header.
     */
    this.dismissible = false;
    /**
     * Shows a back button in the header.
     */
    this.showBackButton = false;
    /**
     * When true, content is waiting to be loaded. This state shows a busy indicator.
     */
    this.loading = false;
    /**
     * Opens the action menu.
     */
    this.menuOpen = false;
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.setContainerRef = (node) => {
      this.containerEl = node;
    };
    this.setDismissRef = (node) => {
      this.dismissButtonEl = node;
    };
    this.setBackRef = (node) => {
      this.backButtonEl = node;
    };
    this.panelKeyDownHandler = (event) => {
      if (event.key === "Escape") {
        this.dismiss();
      }
    };
    this.dismiss = () => {
      this.dismissed = true;
    };
    this.panelScrollHandler = () => {
      this.calcitePanelScroll.emit();
    };
    this.backButtonClick = () => {
      this.calcitePanelBackClick.emit();
    };
  }
  dismissedHandler() {
    this.calcitePanelDismissedChange.emit();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentDidRender() {
    updateHostInteraction(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Methods
  //
  // --------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus(focusId) {
    var _a, _b, _c;
    if (focusId === "dismiss-button") {
      (_a = this.dismissButtonEl) === null || _a === void 0 ? void 0 : _a.setFocus();
      return;
    }
    if (focusId === "back-button") {
      (_b = this.backButtonEl) === null || _b === void 0 ? void 0 : _b.setFocus();
      return;
    }
    (_c = this.containerEl) === null || _c === void 0 ? void 0 : _c.focus();
  }
  /** Scrolls panel content to a particular set of coordinates.
   *
   * ```
   *   myCalcitePanel.scrollContentTo({
   *     left: 0, // Specifies the number of pixels along the X axis to scroll the window or element.
   *     top: 0, // Specifies the number of pixels along the Y axis to scroll the window or element
   *     behavior: "auto" // Specifies whether the scrolling should animate smoothly (smooth), or happen instantly in a single jump (auto, the default value).
   *   });
   * ```
   */
  async scrollContentTo(options) {
    var _a;
    (_a = this.panelScrollEl) === null || _a === void 0 ? void 0 : _a.scrollTo(options);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderBackButton() {
    const { el } = this;
    const rtl = getElementDir(el) === "rtl";
    const { showBackButton, intlBack, backButtonClick } = this;
    const label = intlBack || TEXT$8.back;
    const icon = rtl ? ICONS$5.backRight : ICONS$5.backLeft;
    return showBackButton ? (hAsync("calcite-action", { "aria-label": label, class: CSS$k.backButton, icon: icon, key: "back-button", onClick: backButtonClick, ref: this.setBackRef, scale: "s", slot: SLOTS$c.headerActionsStart, text: label })) : null;
  }
  renderHeaderContent() {
    const { heading, headingLevel, summary } = this;
    const headingNode = heading ? (hAsync(Heading, { class: CSS$k.heading, level: headingLevel || HEADING_LEVEL$4 }, heading)) : null;
    const summaryNode = summary ? hAsync("span", { class: CSS$k.summary }, summary) : null;
    return headingNode || summaryNode ? (hAsync("div", { class: CSS$k.headerContent, key: "header-content" }, headingNode, summaryNode)) : null;
  }
  /**
   * Allows user to override the entire header-content node.
   */
  renderHeaderSlottedContent() {
    return (hAsync("div", { class: CSS$k.headerContent, key: "slotted-header-content" }, hAsync("slot", { name: SLOTS$c.headerContent })));
  }
  renderHeaderStartActions() {
    const { el } = this;
    const hasStartActions = getSlotted(el, SLOTS$c.headerActionsStart);
    return hasStartActions ? (hAsync("div", { class: { [CSS$k.headerActionsStart]: true, [CSS$k.headerActions]: true }, key: "header-actions-start" }, hAsync("slot", { name: SLOTS$c.headerActionsStart }))) : null;
  }
  renderHeaderActionsEnd() {
    const { dismiss, dismissible, el, intlClose } = this;
    const text = intlClose || TEXT$8.close;
    const dismissibleNode = dismissible ? (hAsync("calcite-action", { "aria-label": text, icon: ICONS$5.close, onClick: dismiss, ref: this.setDismissRef, text: text })) : null;
    const slotNode = hAsync("slot", { name: SLOTS$c.headerActionsEnd });
    const hasEndActions = getSlotted(el, SLOTS$c.headerActionsEnd);
    return hasEndActions || dismissibleNode ? (hAsync("div", { class: { [CSS$k.headerActionsEnd]: true, [CSS$k.headerActions]: true }, key: "header-actions-end" }, slotNode, dismissibleNode)) : null;
  }
  renderMenu() {
    const { el, intlOptions, menuOpen } = this;
    const hasMenuItems = getSlotted(el, SLOTS$c.headerMenuActions);
    return hasMenuItems ? (hAsync("calcite-action-menu", { flipPlacements: ["top", "bottom"], key: "menu", label: intlOptions || TEXT$8.options, open: menuOpen, placement: "bottom-end" }, hAsync("calcite-action", { icon: ICONS$5.menu, slot: SLOTS$p.trigger, text: intlOptions || TEXT$8.options }), hAsync("slot", { name: SLOTS$c.headerMenuActions }))) : null;
  }
  renderHeaderNode() {
    const { el, showBackButton } = this;
    const backButtonNode = this.renderBackButton();
    const hasHeaderSlottedContent = getSlotted(el, SLOTS$c.headerContent);
    const headerContentNode = hasHeaderSlottedContent
      ? this.renderHeaderSlottedContent()
      : this.renderHeaderContent();
    const actionsNodeStart = this.renderHeaderStartActions();
    const actionsNodeEnd = this.renderHeaderActionsEnd();
    const headerMenuNode = this.renderMenu();
    return actionsNodeStart ||
      headerContentNode ||
      actionsNodeEnd ||
      headerMenuNode ||
      showBackButton ? (hAsync("header", { class: CSS$k.header }, backButtonNode, actionsNodeStart, headerContentNode, actionsNodeEnd, headerMenuNode)) : null;
  }
  renderFooterNode() {
    const { el } = this;
    const hasFooterSlottedContent = getSlotted(el, SLOTS$c.footer);
    const hasFooterActions = getSlotted(el, SLOTS$c.footerActions);
    return hasFooterSlottedContent || hasFooterActions ? (hAsync("footer", { class: CSS$k.footer, key: "footer" }, hasFooterSlottedContent ? hAsync("slot", { key: "footer-slot", name: SLOTS$c.footer }) : null, hasFooterActions ? hAsync("slot", { key: "footer-actions-slot", name: SLOTS$c.footerActions }) : null)) : null;
  }
  renderContent() {
    const { el } = this;
    const hasFab = getSlotted(el, SLOTS$c.fab);
    const defaultSlotNode = hAsync("slot", { key: "default-slot" });
    const contentWrapperKey = "content-wrapper";
    return hasFab ? (hAsync("div", { class: { [CSS$k.contentWrapper]: true, [CSS$k.contentHeight]: true }, key: contentWrapperKey, onScroll: this.panelScrollHandler, ref: (el) => (this.panelScrollEl = el), tabIndex: 0 }, hAsync("section", { class: CSS$k.contentContainer }, defaultSlotNode), this.renderFab())) : (hAsync("section", { class: { [CSS$k.contentWrapper]: true, [CSS$k.contentContainer]: true }, key: contentWrapperKey, onScroll: this.panelScrollHandler, ref: (el) => (this.panelScrollEl = el), tabIndex: 0 }, defaultSlotNode));
  }
  renderFab() {
    return (hAsync("div", { class: CSS$k.fabContainer }, hAsync("slot", { name: SLOTS$c.fab })));
  }
  render() {
    const { dismissed, dismissible, loading, panelKeyDownHandler } = this;
    const panelNode = (hAsync("article", { "aria-busy": loading.toString(), class: CSS$k.container, hidden: dismissible && dismissed, onKeyDown: panelKeyDownHandler, ref: this.setContainerRef, tabIndex: dismissible ? 0 : -1 }, this.renderHeaderNode(), this.renderContent(), this.renderFooterNode()));
    return (hAsync(Fragment, null, loading ? hAsync("calcite-scrim", { loading: loading }) : null, panelNode));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "dismissed": ["dismissedHandler"]
  }; }
  static get style() { return panelCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-panel",
    "$members$": {
      "dismissed": [1540],
      "beforeBack": [16],
      "disabled": [516],
      "dismissible": [516],
      "headingLevel": [2, "heading-level"],
      "showBackButton": [516, "show-back-button"],
      "intlBack": [1, "intl-back"],
      "heightScale": [513, "height-scale"],
      "widthScale": [513, "width-scale"],
      "loading": [516],
      "intlClose": [1, "intl-close"],
      "intlOptions": [1, "intl-options"],
      "heading": [1],
      "summary": [1],
      "menuOpen": [516, "menu-open"],
      "setFocus": [64],
      "scrollContentTo": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["dismissed", "dismissed"], ["disabled", "disabled"], ["dismissible", "dismissible"], ["showBackButton", "show-back-button"], ["heightScale", "height-scale"], ["widthScale", "width-scale"], ["loading", "loading"], ["menuOpen", "menu-open"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$j = {
  sticky: "sticky-pos"
};
var ICON_TYPES$1;
(function (ICON_TYPES) {
  ICON_TYPES["circle"] = "circle";
  ICON_TYPES["square"] = "square";
  ICON_TYPES["grip"] = "grip";
})(ICON_TYPES$1 || (ICON_TYPES$1 = {}));
const SLOTS$b = {
  menuActions: "menu-actions"
};

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$i = {
  heading: "heading",
  container: "container",
  indented: "container--indented"
};
const SLOTS$a = {
  parentItem: "parent-item"
};
const HEADING_LEVEL$3 = 3;

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
function mutationObserverCallback() {
  this.setUpItems();
  this.setUpFilter();
  this.deselectRemovedItems();
}
const SUPPORTED_ARROW_KEYS = ["ArrowUp", "ArrowDown"];
// --------------------------------------------------------------------------
//
//  Lifecycle
//
// --------------------------------------------------------------------------
function initialize() {
  this.setUpItems();
  this.setUpFilter();
  this.emitCalciteListChange = debounce$2(internalCalciteListChangeEvent.bind(this), 0);
}
function initializeObserver() {
  var _a;
  (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el, { childList: true, subtree: true });
}
function cleanUpObserver() {
  var _a;
  (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
}
// --------------------------------------------------------------------------
//
//  Listeners
//
// --------------------------------------------------------------------------
function calciteListItemChangeHandler(event) {
  const { selectedValues } = this;
  const { item, value, selected, shiftPressed } = event.detail;
  if (selected) {
    if (this.multiple && shiftPressed) {
      this.selectSiblings(item);
    }
    if (!this.multiple) {
      this.deselectSiblingItems(item);
    }
    selectedValues.set(value, item);
  }
  else {
    selectedValues.delete(value);
    if (this.multiple && shiftPressed) {
      this.selectSiblings(item, true);
    }
  }
  if (!this.multiple) {
    toggleSingleSelectItemTabbing(item, selected);
    if (selected) {
      focusElement(item);
    }
  }
  this.lastSelectedItem = item;
  this.emitCalciteListChange();
}
function calciteListItemValueChangeHandler(event) {
  event.stopPropagation();
  const oldValue = event.detail.oldValue;
  const selectedValues = this.selectedValues;
  if (selectedValues.has(oldValue)) {
    const item = selectedValues.get(oldValue);
    selectedValues.delete(oldValue);
    selectedValues.set(event.detail.newValue, item);
  }
}
// --------------------------------------------------------------------------
//
//  Private Methods
//
// --------------------------------------------------------------------------
function isValidNavigationKey(key) {
  return !!SUPPORTED_ARROW_KEYS.find((k) => k === key);
}
function calciteListFocusOutHandler(event) {
  const { el, items, multiple, selectedValues } = this;
  if (multiple) {
    return;
  }
  const focusedInside = el.contains(event.relatedTarget);
  if (focusedInside) {
    return;
  }
  filterOutDisabled(items).forEach((item) => {
    toggleSingleSelectItemTabbing(item, selectedValues.size === 0 ? item.contains(event.target) || event.target === item : item.selected);
  });
}
function keyDownHandler(event) {
  const { key, target } = event;
  if (!isValidNavigationKey(key)) {
    return;
  }
  const { items, multiple, selectionFollowsFocus } = this;
  const { length: totalItems } = items;
  const currentIndex = items.indexOf(target);
  if (!totalItems || currentIndex === -1) {
    return;
  }
  event.preventDefault();
  const index = moveItemIndex(this, target, key === "ArrowUp" ? "up" : "down");
  const item = items[index];
  items.forEach((i) => toggleSingleSelectItemTabbing(i, i === item));
  if (!multiple && selectionFollowsFocus) {
    item.selected = true;
  }
  focusElement(item);
}
function moveItemIndex(list, item, direction) {
  const { items } = list;
  const { length: totalItems } = items;
  const currentIndex = items.indexOf(item);
  const directionFactor = direction === "up" ? -1 : 1;
  let moveOffset = 1;
  let index = getRoundRobinIndex(currentIndex + directionFactor * moveOffset++, totalItems);
  const firstMovedIndex = index;
  while (items[index].disabled) {
    index = getRoundRobinIndex(currentIndex + directionFactor * moveOffset++, totalItems);
    if (index === firstMovedIndex) {
      break;
    }
  }
  return index;
}
function filterOutDisabled(items) {
  return items.filter((item) => !item.disabled);
}
function internalCalciteListChangeEvent() {
  this.calciteListChange.emit(this.selectedValues);
}
function removeItem(event) {
  if (event.defaultPrevented) {
    return;
  }
  const item = event.target;
  const selectedValues = this.selectedValues;
  if (item.parentElement.tagName === "CALCITE-PICK-LIST-GROUP" && item.slot === SLOTS$a.parentItem) {
    item.parentElement.remove();
    Array.from(item.parentElement.children).forEach((item) => selectedValues.delete(item.value));
  }
  else {
    item.remove();
    selectedValues.delete(item.value);
  }
  this.emitCalciteListChange();
}
function toggleSingleSelectItemTabbing(item, selectable) {
  if (item.disabled) {
    return;
  }
  // using attribute intentionally
  if (selectable) {
    item.removeAttribute("tabindex");
  }
  else {
    item.setAttribute("tabindex", "-1");
  }
}
async function setFocus(focusId) {
  var _a;
  if (this.filterEnabled && focusId === "filter") {
    await focusElement(this.filterEl);
    return;
  }
  const { items, multiple, selectionFollowsFocus } = this;
  if (items.length === 0) {
    return;
  }
  if (multiple) {
    return (_a = filterOutDisabled(items)[0]) === null || _a === void 0 ? void 0 : _a.setFocus();
  }
  const filtered = filterOutDisabled(items);
  const focusTarget = filtered.find((item) => item.selected) || filtered[0];
  if (selectionFollowsFocus && focusTarget) {
    focusTarget.selected = true;
  }
  return focusTarget.setFocus();
}
function setUpItems(tagName) {
  this.items = Array.from(this.el.querySelectorAll(tagName));
  let hasSelected = false;
  const { items } = this;
  items.forEach((item) => {
    item.icon = this.getIconType();
    if (!this.multiple) {
      item.disableDeselect = true;
      toggleSingleSelectItemTabbing(item, false);
    }
    if (item.selected) {
      hasSelected = true;
      toggleSingleSelectItemTabbing(item, true);
      this.selectedValues.set(item.value, item);
    }
  });
  const [first] = items;
  if (!hasSelected && first && !first.disabled) {
    toggleSingleSelectItemTabbing(first, true);
  }
}
function deselectRemovedItems() {
  const selectedValues = this.selectedValues;
  const itemValues = this.items.map(({ value }) => value);
  selectedValues.forEach((selectedItem) => {
    if (!itemValues.includes(selectedItem.value)) {
      this.selectedValues.delete(selectedItem.value);
    }
  });
}
function deselectSiblingItems(item) {
  this.items.forEach((currentItem) => {
    if (currentItem.value !== item.value) {
      currentItem.toggleSelected(false);
      if (this.selectedValues.has(currentItem.value)) {
        this.selectedValues.delete(currentItem.value);
      }
    }
  });
}
function selectSiblings(item, deselect = false) {
  if (!this.lastSelectedItem) {
    return;
  }
  const { items } = this;
  const start = items.findIndex((currentItem) => {
    return currentItem.value === this.lastSelectedItem.value;
  });
  const end = items.findIndex((currentItem) => {
    return currentItem.value === item.value;
  });
  items.slice(Math.min(start, end), Math.max(start, end)).forEach((currentItem) => {
    currentItem.toggleSelected(!deselect);
    if (!deselect) {
      this.selectedValues.set(currentItem.value, currentItem);
    }
    else {
      this.selectedValues.delete(currentItem.value);
    }
  });
}
let groups;
function handleFilter(event) {
  const { filteredItems } = event.currentTarget;
  const values = filteredItems.map((item) => item.value);
  let hasSelectedMatch = false;
  if (!groups) {
    groups = new Set();
  }
  const matchedItems = this.items.filter((item) => {
    const parent = item.parentElement;
    const grouped = parent.matches("calcite-pick-list-group");
    if (grouped) {
      groups.add(parent);
    }
    const matches = values.includes(item.value);
    item.hidden = !matches;
    if (!hasSelectedMatch) {
      hasSelectedMatch = matches && item.selected;
    }
    return matches;
  });
  groups.forEach((group) => {
    const hasAtLeastOneMatch = matchedItems.some((item) => group.contains(item));
    group.hidden = !hasAtLeastOneMatch;
    if (!hasAtLeastOneMatch) {
      return;
    }
    const parentItem = getSlotted(group, "parent-item");
    if (parentItem) {
      parentItem.hidden = false;
      if (matchedItems.includes(parentItem)) {
        Array.from(group.children).forEach((child) => (child.hidden = false));
      }
    }
  });
  groups.clear();
  if (matchedItems.length > 0 && !hasSelectedMatch && !this.multiple) {
    toggleSingleSelectItemTabbing(matchedItems[0], true);
  }
}
function getItemData() {
  return this.items.map((item) => ({
    label: item.label,
    description: item.description,
    metadata: item.metadata,
    value: item.value
  }));
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
var __rest = (undefined && undefined.__rest) || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
    t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
const List = (_a) => {
  var { props: { disabled, loading, filterEnabled, dataForFilter, handleFilter, filterPlaceholder, setFilterEl } } = _a, rest = __rest(_a, ["props"]);
  const defaultSlot = hAsync("slot", null);
  return (hAsync(Host, Object.assign({ "aria-busy": loading.toString(), role: "menu" }, rest),
    hAsync("section", null,
      hAsync("header", { class: { [CSS$j.sticky]: true } },
        filterEnabled ? (hAsync("calcite-filter", { "aria-label": filterPlaceholder, disabled: loading || disabled, items: dataForFilter, onCalciteFilterChange: handleFilter, placeholder: filterPlaceholder, ref: setFilterEl })) : null,
        hAsync("slot", { name: SLOTS$b.menuActions })),
      loading ? hAsync("calcite-scrim", { loading: loading }) : null,
      defaultSlot)));
};

const pickListCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-pick-list:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-pick-list{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-pick-list{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-pick-list{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-pick-list{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-pick-list{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-pick-list:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-pick-list-h{display:none}/*!@:host*/.sc-calcite-pick-list-h{position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0;-ms-flex-positive:1;flex-grow:1;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:stretch;align-items:stretch;background-color:transparent;font-size:var(--calcite-font-size--1);line-height:1rem;color:var(--calcite-ui-text-2)}/*!@:host **/.sc-calcite-pick-list-h *.sc-calcite-pick-list{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@:host([disabled])*/[disabled].sc-calcite-pick-list-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-pick-list-h[disabled] .sc-calcite-pick-list-s>[calcite-hydrated][disabled],[disabled].sc-calcite-pick-list-h [calcite-hydrated][disabled].sc-calcite-pick-list{opacity:1}/*!@:host([filter-enabled]) header*/[filter-enabled].sc-calcite-pick-list-h header.sc-calcite-pick-list{margin-bottom:0.25rem;display:-ms-flexbox;display:flex;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:end;justify-content:flex-end;background-color:var(--calcite-ui-foreground-1);--tw-shadow:0 1px 0 var(--calcite-ui-border-3);--tw-shadow-colored:0 1px 0 var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@:host([filter-enabled]) header.sticky-pos*/[filter-enabled].sc-calcite-pick-list-h header.sticky-pos.sc-calcite-pick-list{position:-webkit-sticky;position:sticky;top:0px;z-index:1}/*!@calcite-filter*/calcite-filter.sc-calcite-pick-list{margin-bottom:0px}/*!@:host([loading][disabled])*/[loading][disabled].sc-calcite-pick-list-h{min-height:2rem}";

/**
 * @slot - A slot for adding `calcite-pick-list-item` elements or `calcite-pick-list-group` elements. Items are displayed as a vertical list.
 * @slot menu-actions - A slot for adding a button + menu combo for performing actions like sorting.
 */
class PickList {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteListChange = createEvent(this, "calciteListChange", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * When true, disabled prevents interaction. This state shows items with lower opacity/grayed.
     */
    this.disabled = false;
    /**
     * When true, an input appears at the top of the list that can be used by end users to filter items in the list.
     */
    this.filterEnabled = false;
    /**
     * When true, content is waiting to be loaded. This state shows a busy indicator.
     */
    this.loading = false;
    /**
     * Multiple works similar to standard radio buttons and checkboxes.
     * When true, a user can select multiple items at a time.
     * When false, only a single item can be selected at a time
     * and selecting a new item will deselect any other selected items.
     */
    this.multiple = false;
    /**
     * When true and single-selection is enabled, the selection will change when navigating items via the keyboard.
     */
    this.selectionFollowsFocus = false;
    // --------------------------------------------------------------------------
    //
    //  Private Properties
    //
    // --------------------------------------------------------------------------
    this.selectedValues = new Map();
    this.dataForFilter = [];
    this.lastSelectedItem = null;
    this.mutationObserver = createObserver("mutation", mutationObserverCallback.bind(this));
    this.setFilterEl = (el) => {
      this.filterEl = el;
    };
    this.deselectRemovedItems = deselectRemovedItems.bind(this);
    this.deselectSiblingItems = deselectSiblingItems.bind(this);
    this.selectSiblings = selectSiblings.bind(this);
    this.handleFilter = handleFilter.bind(this);
    this.getItemData = getItemData.bind(this);
    this.keyDownHandler = keyDownHandler.bind(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    initialize.call(this);
    initializeObserver.call(this);
  }
  disconnectedCallback() {
    cleanUpObserver.call(this);
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  calciteListItemRemoveHandler(event) {
    removeItem.call(this, event);
  }
  calciteListItemChangeHandler(event) {
    calciteListItemChangeHandler.call(this, event);
  }
  calciteListItemPropsChangeHandler(event) {
    event.stopPropagation();
    this.setUpFilter();
  }
  calciteListItemValueChangeHandler(event) {
    calciteListItemValueChangeHandler.call(this, event);
  }
  calciteListFocusOutHandler(event) {
    calciteListFocusOutHandler.call(this, event);
  }
  // --------------------------------------------------------------------------
  //
  //  Private Methods
  //
  // --------------------------------------------------------------------------
  setUpItems() {
    setUpItems.call(this, "calcite-pick-list-item");
  }
  setUpFilter() {
    if (this.filterEnabled) {
      this.dataForFilter = this.getItemData();
    }
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /** Returns the currently selected items */
  async getSelectedItems() {
    return this.selectedValues;
  }
  /** Sets focus on the component. */
  async setFocus(focusId) {
    return setFocus.call(this, focusId);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  getIconType() {
    return this.multiple ? ICON_TYPES$1.square : ICON_TYPES$1.circle;
  }
  render() {
    return hAsync(List, { onKeyDown: this.keyDownHandler, props: this });
  }
  get el() { return getElement(this); }
  static get style() { return pickListCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-pick-list",
    "$members$": {
      "disabled": [516],
      "filterEnabled": [516, "filter-enabled"],
      "filterPlaceholder": [513, "filter-placeholder"],
      "headingLevel": [2, "heading-level"],
      "loading": [516],
      "multiple": [516],
      "selectionFollowsFocus": [4, "selection-follows-focus"],
      "selectedValues": [32],
      "dataForFilter": [32],
      "getSelectedItems": [64],
      "setFocus": [64]
    },
    "$listeners$": [[0, "calciteListItemRemove", "calciteListItemRemoveHandler"], [0, "calciteListItemChange", "calciteListItemChangeHandler"], [0, "calciteListItemPropsChange", "calciteListItemPropsChangeHandler"], [0, "calciteListItemValueChange", "calciteListItemValueChangeHandler"], [0, "focusout", "calciteListFocusOutHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["filterEnabled", "filter-enabled"], ["filterPlaceholder", "filter-placeholder"], ["loading", "loading"], ["multiple", "multiple"]]
  }; }
}

const pickListGroupCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-pick-list-group:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-pick-list-group{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-pick-list-group{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-pick-list-group{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-pick-list-group{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-pick-list-group{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-pick-list-group:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-pick-list-group-h{display:none}/*!@:host*/.sc-calcite-pick-list-group-h{margin-bottom:0.25rem;-webkit-box-sizing:border-box;box-sizing:border-box;display:block;background-color:transparent;font-size:var(--calcite-font-size--1);color:var(--calcite-ui-text-2)}/*!@:host **/.sc-calcite-pick-list-group-h *.sc-calcite-pick-list-group{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@:host(:last-child)*/.sc-calcite-pick-list-group-h:last-child{margin-bottom:0px}/*!@.header*/.header.sc-calcite-pick-list-group{margin:0px;display:-ms-flexbox;display:flex;-ms-flex-line-pack:justify;align-content:space-between;-ms-flex-align:center;align-items:center;fill:var(--calcite-ui-text-2);color:var(--calcite-ui-text-2)}/*!@.heading*/.heading.sc-calcite-pick-list-group{margin:0px;padding:0px;font-weight:var(--calcite-font-weight-medium)}/*!@.header .heading*/.header.sc-calcite-pick-list-group .heading.sc-calcite-pick-list-group{-ms-flex:1 1 auto;flex:1 1 auto;padding:0.5rem}/*!@h1.heading*/h1.heading.sc-calcite-pick-list-group{font-size:var(--calcite-font-size-2);line-height:1.5rem}/*!@h2.heading*/h2.heading.sc-calcite-pick-list-group{font-size:var(--calcite-font-size-1);line-height:1.5rem}/*!@h3.heading*/h3.heading.sc-calcite-pick-list-group{font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@h4.heading, h5.heading*/h4.heading.sc-calcite-pick-list-group,h5.heading.sc-calcite-pick-list-group{font-size:var(--calcite-font-size--1);line-height:1rem}/*!@h3.heading*/h3.heading.sc-calcite-pick-list-group{margin-top:0.5rem;margin-bottom:0.5rem;margin-left:1rem;margin-right:1rem;font-size:var(--calcite-font-size--1);line-height:1.375;color:var(--calcite-ui-text-3)}/*!@.container--indented*/.container--indented.sc-calcite-pick-list-group{-webkit-margin-start:1.5rem;margin-inline-start:1.5rem}";

/**
 * @slot - A slot for adding `calcite-pick-list-item` elements.
 */
class PickListGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    var _a;
    const { el, groupTitle, headingLevel } = this;
    const hasParentItem = getSlotted(el, SLOTS$a.parentItem) !== null;
    const sectionClasses = {
      [CSS$i.container]: true,
      [CSS$i.indented]: hasParentItem
    };
    const title = groupTitle;
    const parentLevel = (_a = el.closest("calcite-pick-list")) === null || _a === void 0 ? void 0 : _a.headingLevel;
    const relativeLevel = parentLevel ? constrainHeadingLevel(parentLevel + 1) : null;
    const level = headingLevel || relativeLevel || HEADING_LEVEL$3;
    return (hAsync(Fragment, null, title ? (hAsync(Heading, { class: CSS$i.heading, level: level }, title)) : null, hAsync("slot", { name: SLOTS$a.parentItem }), hAsync("section", { class: sectionClasses }, hAsync("slot", null))));
  }
  get el() { return getElement(this); }
  static get style() { return pickListGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-pick-list-group",
    "$members$": {
      "groupTitle": [513, "group-title"],
      "headingLevel": [2, "heading-level"]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["groupTitle", "group-title"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$h = {
  actions: "actions",
  actionsEnd: "actions--end",
  actionsStart: "actions--start",
  description: "description",
  handle: "handle",
  handleActivated: "handle--activated",
  highlight: "highlight",
  icon: "icon",
  iconDot: "icon-dot",
  label: "label",
  remove: "remove",
  title: "title",
  textContainer: "text-container"
};
const ICONS$4 = {
  checked: "check",
  remove: "x"
};
const SLOTS$9 = {
  actionsEnd: "actions-end",
  actionsStart: "actions-start"
};
const TEXT$7 = {
  remove: "Remove"
};

const pickListItemCss = "@charset \"UTF-8\";@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-pick-list-item:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-pick-list-item{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-pick-list-item{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-pick-list-item{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-pick-list-item{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-pick-list-item{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-pick-list-item:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-pick-list-item-h{display:none}/*!@:host*/.sc-calcite-pick-list-item-h{margin:0px;margin-bottom:1px;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;-ms-flex-align:stretch;align-items:stretch;background-color:var(--calcite-ui-foreground-1);font-size:var(--calcite-font-size--1);line-height:1rem;color:var(--calcite-ui-text-1);--tw-shadow:0 1px 0 var(--calcite-ui-border-3);--tw-shadow-colored:0 1px 0 var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);-webkit-transition:background-color var(--calcite-animation-timing);transition:background-color var(--calcite-animation-timing);-webkit-animation:calcite-fade-in var(--calcite-animation-timing);animation:calcite-fade-in var(--calcite-animation-timing)}/*!@:host **/.sc-calcite-pick-list-item-h *.sc-calcite-pick-list-item{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@.label*/.label.sc-calcite-pick-list-item{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;cursor:pointer;-ms-flex-align:center;align-items:center;background-color:transparent;outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@.label:focus*/.label.sc-calcite-pick-list-item:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@.label:hover*/.label.sc-calcite-pick-list-item:hover{background-color:var(--calcite-ui-foreground-2)}/*!@:host([non-interactive]:hover)*/[non-interactive].sc-calcite-pick-list-item-h:hover{background-color:var(--calcite-ui-foreground-1)}/*!@:host([non-interactive]) .label, :host([non-interactive]) .icon*/[non-interactive].sc-calcite-pick-list-item-h .label.sc-calcite-pick-list-item,[non-interactive].sc-calcite-pick-list-item-h .icon.sc-calcite-pick-list-item{pointer-events:none}/*!@.icon*/.icon.sc-calcite-pick-list-item{margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;cursor:pointer;-ms-flex-align:center;align-items:center;padding:0.25rem;color:var(--calcite-ui-brand);-ms-flex:0 0 auto;flex:0 0 auto;line-height:0}/*!@.icon:hover*/.icon.sc-calcite-pick-list-item:hover{background-color:var(--calcite-ui-foreground-2)}/*!@.icon-dot*/.icon-dot.sc-calcite-pick-list-item{display:-ms-flexbox;display:flex;width:1.5rem;-ms-flex-align:center;align-items:center;padding:0.5rem}/*!@.icon-dot:before*/.icon-dot.sc-calcite-pick-list-item:before{opacity:0;content:\"•\"}/*!@.icon calcite-icon*/.icon.sc-calcite-pick-list-item calcite-icon.sc-calcite-pick-list-item{opacity:0}/*!@:host([selected]) .icon-dot:before,\n:host([selected]) .icon calcite-icon*/[selected].sc-calcite-pick-list-item-h .icon-dot.sc-calcite-pick-list-item:before,[selected].sc-calcite-pick-list-item-h .icon.sc-calcite-pick-list-item calcite-icon.sc-calcite-pick-list-item{-webkit-transition:opacity var(--calcite-animation-timing);transition:opacity var(--calcite-animation-timing);opacity:1}/*!@.text-container*/.text-container.sc-calcite-pick-list-item{pointer-events:none;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap;padding-top:0.5rem;padding-bottom:0.5rem;padding-left:0.75rem;padding-right:0.75rem;font-size:var(--calcite-font-size--2);line-height:1.375;word-wrap:break-word;word-break:break-word;overflow:hidden}/*!@.title*/.title.sc-calcite-pick-list-item{font-weight:var(--calcite-font-weight-normal);color:var(--calcite-ui-text-1)}/*!@.description*/.description.sc-calcite-pick-list-item{margin-top:0.125rem;font-weight:var(--calcite-font-weight-normal);color:var(--calcite-ui-text-3)}/*!@.actions*/.actions.sc-calcite-pick-list-item{margin:0px;display:-ms-flexbox;display:flex;-ms-flex:0 1 auto;flex:0 1 auto;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:end;justify-content:flex-end}/*!@.actions--start ~ .label*/.actions--start.sc-calcite-pick-list-item~.label.sc-calcite-pick-list-item{-webkit-padding-start:0.25rem;padding-inline-start:0.25rem}/*!@:host([disabled])*/[disabled].sc-calcite-pick-list-item-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-pick-list-item-h[disabled] .sc-calcite-pick-list-item-s>[calcite-hydrated][disabled],[disabled].sc-calcite-pick-list-item-h [calcite-hydrated][disabled].sc-calcite-pick-list-item{opacity:1}";

/**
 * @slot actions-end - a slot for adding actions or content to the end side of the item.
 * @slot actions-start - a slot for adding actions or content to the start side of the item.
 */
class PickListItem {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteListItemChange = createEvent(this, "calciteListItemChange", 7);
    this.calciteListItemRemove = createEvent(this, "calciteListItemRemove", 7);
    this.calciteListItemPropsChange = createEvent(this, "calciteListItemPropsChange", 7);
    this.calciteListItemValueChange = createEvent(this, "calciteListItemValueChange", 7);
    /**
     * When true, the item cannot be clicked and is visually muted.
     */
    this.disabled = false;
    /**
     * When false, the item cannot be deselected by user interaction.
     */
    this.disableDeselect = false;
    /**
     * @internal When true, the item cannot be selected by user interaction.
     */
    this.nonInteractive = false;
    /**
     * Determines the icon SVG symbol that will be shown. Options are circle, square, grip or null.
     * @see [ICON_TYPES](https://github.com/Esri/calcite-components/blob/master/src/components/pick-list/resources.ts#L5)
     */
    this.icon = null;
    /**
     * Set this to true to display a remove action that removes the item from the list.
     */
    this.removable = false;
    /**
     * Set this to true to pre-select an item. Toggles when an item is checked/unchecked.
     */
    this.selected = false;
    /**
     * Used as an accessible label (aria-label) for the "remove item" action. Only applicable if removable is true.
     * @default "Remove"
     */
    this.intlRemove = TEXT$7.remove;
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.pickListClickHandler = (event) => {
      if (this.disabled || (this.disableDeselect && this.selected) || this.nonInteractive) {
        return;
      }
      this.shiftPressed = event.shiftKey;
      this.selected = !this.selected;
    };
    this.pickListKeyDownHandler = (event) => {
      if (event.key === " ") {
        event.preventDefault();
        if ((this.disableDeselect && this.selected) || this.nonInteractive) {
          return;
        }
        this.selected = !this.selected;
      }
    };
    this.removeClickHandler = () => {
      this.calciteListItemRemove.emit();
    };
  }
  descriptionWatchHandler() {
    this.calciteListItemPropsChange.emit();
  }
  labelWatchHandler() {
    this.calciteListItemPropsChange.emit();
  }
  metadataWatchHandler() {
    this.calciteListItemPropsChange.emit();
  }
  selectedWatchHandler() {
    this.calciteListItemChange.emit({
      item: this.el,
      value: this.value,
      selected: this.selected,
      shiftPressed: this.shiftPressed
    });
    this.shiftPressed = false;
  }
  valueWatchHandler(newValue, oldValue) {
    this.calciteListItemValueChange.emit({ oldValue, newValue });
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  componentDidRender() {
    updateHostInteraction(this, this.el.closest("calcite-pick-list") ? "managed" : false);
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /**
   * Used to toggle the selection state. By default this won't trigger an event.
   * The first argument allows the value to be coerced, rather than swapping values.
   */
  async toggleSelected(coerce) {
    this.selected = typeof coerce === "boolean" ? coerce : !this.selected;
  }
  /** Sets focus on the component. */
  async setFocus() {
    var _a;
    (_a = this.focusEl) === null || _a === void 0 ? void 0 : _a.focus();
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderIcon() {
    const { icon } = this;
    if (!icon) {
      return null;
    }
    return (hAsync("span", { class: {
        [CSS$h.icon]: true,
        [CSS$h.iconDot]: icon === ICON_TYPES$1.circle
      }, onClick: this.pickListClickHandler }, icon === ICON_TYPES$1.square ? hAsync("calcite-icon", { icon: ICONS$4.checked, scale: "s" }) : null));
  }
  renderRemoveAction() {
    return this.removable ? (hAsync("calcite-action", { class: CSS$h.remove, icon: ICONS$4.remove, onCalciteActionClick: this.removeClickHandler, slot: SLOTS$9.actionsEnd, text: this.intlRemove })) : null;
  }
  renderActionsStart() {
    const { el } = this;
    const hasActionsStart = getSlotted(el, SLOTS$9.actionsStart);
    return hasActionsStart ? (hAsync("div", { class: { [CSS$h.actions]: true, [CSS$h.actionsStart]: true } }, hAsync("slot", { name: SLOTS$9.actionsStart }))) : null;
  }
  renderActionsEnd() {
    const { el, removable } = this;
    const hasActionsEnd = getSlotted(el, SLOTS$9.actionsEnd);
    return hasActionsEnd || removable ? (hAsync("div", { class: { [CSS$h.actions]: true, [CSS$h.actionsEnd]: true } }, hAsync("slot", { name: SLOTS$9.actionsEnd }), this.renderRemoveAction())) : null;
  }
  render() {
    const { description, label } = this;
    return (hAsync(Fragment, null, this.renderIcon(), this.renderActionsStart(), hAsync("label", { "aria-label": label, class: CSS$h.label, onClick: this.pickListClickHandler, onKeyDown: this.pickListKeyDownHandler, ref: (focusEl) => (this.focusEl = focusEl), tabIndex: 0 }, hAsync("div", { "aria-checked": this.selected.toString(), class: CSS$h.textContainer, role: "menuitemcheckbox" }, hAsync("span", { class: CSS$h.title }, label), description ? hAsync("span", { class: CSS$h.description }, description) : null)), this.renderActionsEnd()));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "description": ["descriptionWatchHandler"],
    "label": ["labelWatchHandler"],
    "metadata": ["metadataWatchHandler"],
    "selected": ["selectedWatchHandler"],
    "value": ["valueWatchHandler"]
  }; }
  static get style() { return pickListItemCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-pick-list-item",
    "$members$": {
      "description": [513],
      "disabled": [516],
      "disableDeselect": [4, "disable-deselect"],
      "nonInteractive": [516, "non-interactive"],
      "icon": [513],
      "label": [513],
      "metadata": [16],
      "removable": [516],
      "selected": [1540],
      "intlRemove": [513, "intl-remove"],
      "value": [8],
      "toggleSelected": [64],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["description", "description"], ["disabled", "disabled"], ["nonInteractive", "non-interactive"], ["icon", "icon"], ["label", "label"], ["removable", "removable"], ["selected", "selected"], ["intlRemove", "intl-remove"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$g = {
  container: "container",
  arrow: "arrow",
  imageContainer: "image-container",
  closeButtonContainer: "close-button-container",
  closeButton: "close-button",
  content: "content",
  hasHeader: "has-header",
  header: "header",
  headerContent: "header-content",
  heading: "heading"
};
const TEXT$6 = {
  close: "Close"
};
const defaultPopoverPlacement = "auto";
const POPOVER_REFERENCE = "data-calcite-popover-reference";
const ARIA_CONTROLS = "aria-controls";
const ARIA_EXPANDED = "aria-expanded";
const HEADING_LEVEL$2 = 2;

const popoverCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-popover:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-popover{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-popover{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-popover{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-popover{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-popover{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-popover:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-popover-h{display:none}/*!@:host*/.sc-calcite-popover-h{display:block;position:absolute;z-index:900;-webkit-transform:scale(0);transform:scale(0)}/*!@.calcite-popper-anim*/.calcite-popper-anim.sc-calcite-popover{position:relative;z-index:1;-webkit-transition:var(--calcite-popper-transition);transition:var(--calcite-popper-transition);visibility:hidden;-webkit-transition-property:visibility, opacity, -webkit-transform;transition-property:visibility, opacity, -webkit-transform;transition-property:transform, visibility, opacity;transition-property:transform, visibility, opacity, -webkit-transform;opacity:0;-webkit-box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);border-radius:0.25rem}/*!@:host([data-popper-placement^=bottom]) .calcite-popper-anim*/[data-popper-placement^=bottom].sc-calcite-popover-h .calcite-popper-anim.sc-calcite-popover{-webkit-transform:translateY(-5px);transform:translateY(-5px)}/*!@:host([data-popper-placement^=top]) .calcite-popper-anim*/[data-popper-placement^=top].sc-calcite-popover-h .calcite-popper-anim.sc-calcite-popover{-webkit-transform:translateY(5px);transform:translateY(5px)}/*!@:host([data-popper-placement^=left]) .calcite-popper-anim*/[data-popper-placement^=left].sc-calcite-popover-h .calcite-popper-anim.sc-calcite-popover{-webkit-transform:translateX(5px);transform:translateX(5px)}/*!@:host([data-popper-placement^=right]) .calcite-popper-anim*/[data-popper-placement^=right].sc-calcite-popover-h .calcite-popper-anim.sc-calcite-popover{-webkit-transform:translateX(-5px);transform:translateX(-5px)}/*!@:host([data-popper-placement]) .calcite-popper-anim--active*/[data-popper-placement].sc-calcite-popover-h .calcite-popper-anim--active.sc-calcite-popover{opacity:1;visibility:visible;-webkit-transform:translate(0);transform:translate(0)}/*!@:host([data-popper-placement][data-popper-reference-hidden])*/[data-popper-placement][data-popper-reference-hidden].sc-calcite-popover-h{pointer-events:none;opacity:0}/*!@.arrow,\n.arrow::before*/.arrow.sc-calcite-popover,.arrow.sc-calcite-popover::before{position:absolute;width:8px;height:8px;z-index:-1}/*!@.arrow::before*/.arrow.sc-calcite-popover::before{content:\"\";--tw-shadow:0 4px 8px -1px rgba(0, 0, 0, 0.08), 0 2px 4px -1px rgba(0, 0, 0, 0.04);--tw-shadow-colored:0 4px 8px -1px var(--tw-shadow-color), 0 2px 4px -1px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);-webkit-transform:rotate(45deg);transform:rotate(45deg);background:var(--calcite-ui-foreground-1)}/*!@:host([data-popper-placement^=top]) .arrow*/[data-popper-placement^=top].sc-calcite-popover-h .arrow.sc-calcite-popover{bottom:-4px}/*!@:host([data-popper-placement^=bottom]) .arrow*/[data-popper-placement^=bottom].sc-calcite-popover-h .arrow.sc-calcite-popover{top:-4px}/*!@:host([data-popper-placement^=left]) .arrow*/[data-popper-placement^=left].sc-calcite-popover-h .arrow.sc-calcite-popover{right:-4px}/*!@:host([data-popper-placement^=right]) .arrow*/[data-popper-placement^=right].sc-calcite-popover-h .arrow.sc-calcite-popover{left:-4px}/*!@:host*/.sc-calcite-popover-h{pointer-events:none}/*!@:host([open])*/[open].sc-calcite-popover-h{pointer-events:initial}/*!@.calcite-popper-anim*/.calcite-popper-anim.sc-calcite-popover{border-radius:0.25rem;border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-3);background-color:var(--calcite-ui-foreground-1)}/*!@.arrow::before*/.arrow.sc-calcite-popover::before{outline:1px solid var(--calcite-ui-border-3)}/*!@.header*/.header.sc-calcite-popover{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:start;justify-content:flex-start;border-width:0px;border-bottom-width:1px;border-style:solid;background-color:var(--calcite-ui-foreground-1);border-bottom-color:var(--calcite-ui-border-3)}/*!@.heading*/.heading.sc-calcite-popover{margin:0px;display:block;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-item-align:center;align-self:center;white-space:normal;padding-left:1rem;padding-right:1rem;padding-top:0.75rem;padding-bottom:0.75rem;font-size:var(--calcite-font-size-0);line-height:1.375;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1);word-wrap:break-word;word-break:break-word}/*!@.container*/.container.sc-calcite-popover{position:relative;display:-ms-flexbox;display:flex;height:100%;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;border-radius:0.25rem;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-1)}/*!@.container.has-header*/.container.has-header.sc-calcite-popover{-ms-flex-direction:column;flex-direction:column}/*!@.content*/.content.sc-calcite-popover{display:-ms-flexbox;display:flex;height:100%;width:100%;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-item-align:center;align-self:center;word-wrap:break-word;word-break:break-word}/*!@.close-button-container*/.close-button-container.sc-calcite-popover{display:-ms-flexbox;display:flex;overflow:hidden;-ms-flex:0 0 auto;flex:0 0 auto;border-start-end-radius:0.25rem;border-end-end-radius:0.25rem}/*!@::slotted(calcite-panel), ::slotted(calcite-flow)*/.sc-calcite-popover-s>calcite-panel,.sc-calcite-popover-s>calcite-flow{height:100%}";

/**
 * @slot - A slot for adding custom content.
 */
class Popover {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calcitePopoverClose = createEvent(this, "calcitePopoverClose", 7);
    this.calcitePopoverOpen = createEvent(this, "calcitePopoverOpen", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * Display a close button within the Popover.
     * @deprecated use dismissible instead.
     */
    this.closeButton = false;
    /**
     * Display a close button within the Popover.
     */
    this.dismissible = false;
    /**
     * Prevents flipping the popover's placement when it starts to overlap its reference element.
     */
    this.disableFlip = false;
    /**
     * Removes the caret pointer.
     */
    this.disablePointer = false;
    /**
     * Offset the position of the popover away from the reference element.
     * @default 6
     */
    this.offsetDistance = defaultOffsetDistance;
    /**
     * Offset the position of the popover along the reference element.
     */
    this.offsetSkidding = 0;
    /**
     * Display and position the component.
     */
    this.open = false;
    /** Describes the type of positioning to use for the overlaid content. If your element is in a fixed container, use the 'fixed' value. */
    this.overlayPositioning = "absolute";
    /**
     * Determines where the component will be positioned relative to the referenceElement.
     * @see [PopperPlacement](https://github.com/Esri/calcite-components/blob/master/src/utils/popper.ts#L25)
     */
    this.placement = defaultPopoverPlacement;
    /** Text for close button.
     * @default "Close"
     */
    this.intlClose = TEXT$6.close;
    this.guid = `calcite-popover-${guid()}`;
    this.activeTransitionProp = "opacity";
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.setUpReferenceElement = () => {
      this.removeReferences();
      this.effectiveReferenceElement = this.getReferenceElement();
      const { el, referenceElement, effectiveReferenceElement } = this;
      if (referenceElement && !effectiveReferenceElement) {
        console.warn(`${el.tagName}: reference-element id "${referenceElement}" was not found.`, {
          el
        });
      }
      this.addReferences();
      this.createPopper();
    };
    this.getId = () => {
      return this.el.id || this.guid;
    };
    this.setExpandedAttr = () => {
      const { effectiveReferenceElement, open } = this;
      if (!effectiveReferenceElement) {
        return;
      }
      effectiveReferenceElement.setAttribute(ARIA_EXPANDED, open.toString());
    };
    this.addReferences = () => {
      const { effectiveReferenceElement } = this;
      if (!effectiveReferenceElement) {
        return;
      }
      const id = this.getId();
      effectiveReferenceElement.setAttribute(POPOVER_REFERENCE, id);
      effectiveReferenceElement.setAttribute(ARIA_CONTROLS, id);
      this.setExpandedAttr();
    };
    this.removeReferences = () => {
      const { effectiveReferenceElement } = this;
      if (!effectiveReferenceElement) {
        return;
      }
      effectiveReferenceElement.removeAttribute(POPOVER_REFERENCE);
      effectiveReferenceElement.removeAttribute(ARIA_CONTROLS);
      effectiveReferenceElement.removeAttribute(ARIA_EXPANDED);
    };
    this.hide = () => {
      this.open = false;
    };
    this.transitionEnd = (event) => {
      if (event.propertyName === this.activeTransitionProp) {
        this.open ? this.calcitePopoverOpen.emit() : this.calcitePopoverClose.emit();
      }
    };
  }
  offsetDistanceOffsetHandler() {
    this.reposition();
  }
  offsetSkiddingHandler() {
    this.reposition();
  }
  openHandler() {
    this.reposition();
    this.setExpandedAttr();
  }
  placementHandler() {
    this.reposition();
  }
  referenceElementHandler() {
    this.setUpReferenceElement();
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  componentWillLoad() {
    this.setUpReferenceElement();
  }
  componentDidLoad() {
    this.reposition();
  }
  disconnectedCallback() {
    this.removeReferences();
    this.destroyPopper();
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /** Updates the position of the component. */
  async reposition() {
    const { popper, el, placement } = this;
    const modifiers = this.getModifiers();
    popper
      ? await updatePopper({
        el,
        modifiers,
        placement,
        popper
      })
      : this.createPopper();
  }
  /** Sets focus on the component. */
  async setFocus(focusId) {
    var _a;
    const { closeButtonEl } = this;
    if (focusId === "close-button" && closeButtonEl) {
      forceUpdate$1(closeButtonEl);
      closeButtonEl.setFocus();
      return;
    }
    (_a = this.el) === null || _a === void 0 ? void 0 : _a.focus();
  }
  /** Toggles the popover's open property. */
  async toggle(value = !this.open) {
    this.open = value;
  }
  getReferenceElement() {
    const { referenceElement, el } = this;
    return ((typeof referenceElement === "string"
      ? queryElementRoots(el, { id: referenceElement })
      : referenceElement) || null);
  }
  getModifiers() {
    const { arrowEl, flipPlacements, disableFlip, disablePointer, offsetDistance, offsetSkidding } = this;
    const flipModifier = {
      name: "flip",
      enabled: !disableFlip
    };
    if (flipPlacements) {
      flipModifier.options = {
        fallbackPlacements: flipPlacements
      };
    }
    const arrowModifier = {
      name: "arrow",
      enabled: !disablePointer
    };
    if (arrowEl) {
      arrowModifier.options = {
        element: arrowEl
      };
    }
    const offsetModifier = {
      name: "offset",
      enabled: true,
      options: {
        offset: [offsetSkidding, offsetDistance]
      }
    };
    const eventListenerModifier = {
      name: "eventListeners",
      enabled: this.open
    };
    return [arrowModifier, flipModifier, offsetModifier, eventListenerModifier];
  }
  createPopper() {
    this.destroyPopper();
    const { el, placement, effectiveReferenceElement: referenceEl, overlayPositioning } = this;
    const modifiers = this.getModifiers();
    this.popper = createPopper({
      el,
      modifiers,
      overlayPositioning,
      placement,
      referenceEl
    });
  }
  destroyPopper() {
    const { popper } = this;
    if (popper) {
      popper.destroy();
    }
    this.popper = null;
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderCloseButton() {
    const { dismissible, closeButton, intlClose } = this;
    return dismissible || closeButton ? (hAsync("div", { class: CSS$g.closeButtonContainer }, hAsync("calcite-action", { class: CSS$g.closeButton, onClick: this.hide, ref: (closeButtonEl) => (this.closeButtonEl = closeButtonEl), text: intlClose }, hAsync("calcite-icon", { icon: "x", scale: "m" })))) : null;
  }
  renderHeader() {
    const { heading, headingLevel } = this;
    const headingNode = heading ? (hAsync(Heading, { class: CSS$g.heading, level: headingLevel || HEADING_LEVEL$2 }, heading)) : null;
    return headingNode ? (hAsync("div", { class: CSS$g.header }, headingNode, this.renderCloseButton())) : null;
  }
  render() {
    const { effectiveReferenceElement, heading, label, open, disablePointer } = this;
    const displayed = effectiveReferenceElement && open;
    const hidden = !displayed;
    const arrowNode = !disablePointer ? (hAsync("div", { class: CSS$g.arrow, ref: (arrowEl) => (this.arrowEl = arrowEl) })) : null;
    return (hAsync(Host, { "aria-hidden": hidden.toString(), "aria-label": label, "calcite-hydrated-hidden": hidden, id: this.getId(), role: "dialog" }, hAsync("div", { class: {
        [CSS$D.animation]: true,
        [CSS$D.animationActive]: displayed
      }, onTransitionEnd: this.transitionEnd }, arrowNode, hAsync("div", { class: {
        [CSS$g.hasHeader]: !!heading,
        [CSS$g.container]: true
      } }, this.renderHeader(), hAsync("div", { class: CSS$g.content }, hAsync("slot", null)), !heading ? this.renderCloseButton() : null))));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "offsetDistance": ["offsetDistanceOffsetHandler"],
    "offsetSkidding": ["offsetSkiddingHandler"],
    "open": ["openHandler"],
    "placement": ["placementHandler"],
    "referenceElement": ["referenceElementHandler"]
  }; }
  static get style() { return popoverCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-popover",
    "$members$": {
      "closeButton": [516, "close-button"],
      "dismissible": [516],
      "disableFlip": [516, "disable-flip"],
      "disablePointer": [516, "disable-pointer"],
      "flipPlacements": [16],
      "heading": [1],
      "headingLevel": [2, "heading-level"],
      "label": [1],
      "offsetDistance": [514, "offset-distance"],
      "offsetSkidding": [514, "offset-skidding"],
      "open": [1540],
      "overlayPositioning": [1, "overlay-positioning"],
      "placement": [513],
      "referenceElement": [1, "reference-element"],
      "intlClose": [1, "intl-close"],
      "effectiveReferenceElement": [32],
      "reposition": [64],
      "setFocus": [64],
      "toggle": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["closeButton", "close-button"], ["dismissible", "dismissible"], ["disableFlip", "disable-flip"], ["disablePointer", "disable-pointer"], ["offsetDistance", "offset-distance"], ["offsetSkidding", "offset-skidding"], ["open", "open"], ["placement", "placement"]]
  }; }
}

const popoverManagerCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-popover-manager:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-popover-manager{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-popover-manager{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-popover-manager{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-popover-manager{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-popover-manager{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-popover-manager:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-popover-manager-h{display:none}/*!@:host*/.sc-calcite-popover-manager-h{position:relative;display:block}";

/**
 * @slot - A slot for adding elements that reference a 'calcite-popover' by the 'selector' property.
 */
class PopoverManager {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * CSS Selector to match reference elements for popovers. Reference elements will be identified by this selector in order to open their associated popover.
     * @default `[data-calcite-popover-reference]`
     */
    this.selector = `[${POPOVER_REFERENCE}]`;
    /**
     * Automatically closes any currently open popovers when clicking outside of a popover.
     */
    this.autoClose = false;
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.queryPopover = (composedPath) => {
      const { el } = this;
      if (!composedPath.includes(el)) {
        return null;
      }
      const referenceElement = composedPath.find((pathEl) => { var _a; return (_a = pathEl === null || pathEl === void 0 ? void 0 : pathEl.hasAttribute) === null || _a === void 0 ? void 0 : _a.call(pathEl, POPOVER_REFERENCE); });
      if (!referenceElement) {
        return null;
      }
      const id = referenceElement.getAttribute(POPOVER_REFERENCE);
      return queryElementRoots(el, { id });
    };
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    return hAsync("slot", null);
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  closeOpenPopovers(event) {
    const { autoClose, el } = this;
    const popoverSelector = "calcite-popover";
    const composedPath = event.composedPath();
    const popover = this.queryPopover(composedPath);
    if (popover) {
      popover.toggle();
      return;
    }
    if (autoClose) {
      queryElementsRoots(el, popoverSelector)
        .filter((popover) => popover.open && !composedPath.includes(popover))
        .forEach((popover) => popover.toggle(false));
    }
  }
  get el() { return getElement(this); }
  static get style() { return popoverManagerCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-popover-manager",
    "$members$": {
      "selector": [1],
      "autoClose": [516, "auto-close"]
    },
    "$listeners$": [[10, "click", "closeOpenPopovers"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["autoClose", "auto-close"]]
  }; }
}

const progressCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-progress:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-progress{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-progress{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-progress{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-progress{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-progress{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-progress:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-progress-h{display:none}/*!@:host*/.sc-calcite-progress-h{position:relative;display:block;width:100%}/*!@.track, .bar*/.track.sc-calcite-progress,.bar.sc-calcite-progress{position:absolute;top:0px;height:2px}/*!@.track*/.track.sc-calcite-progress{z-index:0;width:100%;overflow:hidden;background:var(--calcite-ui-border-3)}/*!@.bar*/.bar.sc-calcite-progress{z-index:0;background-color:var(--calcite-ui-brand)}@media (forced-colors: active){/*!@.track*/.track.sc-calcite-progress{background-color:highlightText}/*!@.bar*/.bar.sc-calcite-progress{background-color:linkText}}/*!@.indeterminate*/.indeterminate.sc-calcite-progress{width:20%;-webkit-animation:looping-progress-bar-ani 2200ms linear infinite;animation:looping-progress-bar-ani 2200ms linear infinite}/*!@.reversed*/.reversed.sc-calcite-progress{animation-direction:reverse}/*!@.text*/.text.sc-calcite-progress{padding-left:0px;padding-right:0px;padding-top:1rem;padding-bottom:0px;text-align:center;font-size:var(--calcite-font-size--2);line-height:1rem;font-weight:var(--calcite-font-weight-medium)}@-webkit-keyframes looping-progress-bar-ani{0%{-webkit-transform:translate3d(-100%, 0, 0);transform:translate3d(-100%, 0, 0)}50%{width:40%}100%{-webkit-transform:translate3d(600%, 0, 0);transform:translate3d(600%, 0, 0)}}@keyframes looping-progress-bar-ani{0%{-webkit-transform:translate3d(-100%, 0, 0);transform:translate3d(-100%, 0, 0)}50%{width:40%}100%{-webkit-transform:translate3d(600%, 0, 0);transform:translate3d(600%, 0, 0)}}";

class Progress {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    /** Use indeterminate if finding actual progress value is impossible */
    this.type = "determinate";
    /** Fraction completed, in the range of 0 - 1.0 */
    this.value = 0;
    /** For indeterminate progress bars, reverse the animation direction */
    this.reversed = false;
  }
  render() {
    const isDeterminate = this.type === "determinate";
    const barStyles = isDeterminate ? { width: `${this.value * 100}%` } : {};
    return (hAsync("div", { "aria-label": this.label || this.text, "aria-valuemax": 1, "aria-valuemin": 0, "aria-valuenow": this.value, role: "progressbar" }, hAsync("div", { class: "track" }, hAsync("div", { class: {
        bar: true,
        indeterminate: this.type === "indeterminate",
        reversed: this.reversed
      }, style: barStyles })), this.text ? hAsync("div", { class: "text" }, this.text) : null));
  }
  get el() { return getElement(this); }
  static get style() { return progressCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-progress",
    "$members$": {
      "type": [1],
      "value": [2],
      "label": [1],
      "text": [1],
      "reversed": [4]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$f = {
  container: "container"
};

const radioButtonCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-radio-button:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-radio-button{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-radio-button{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-radio-button{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-radio-button{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-radio-button{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-radio-button:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-radio-button-h{display:none}/*!@:host*/.sc-calcite-radio-button-h{display:block;cursor:pointer}/*!@:host .container*/.sc-calcite-radio-button-h .container.sc-calcite-radio-button{position:relative;outline:2px solid transparent;outline-offset:2px}/*!@:host .radio*/.sc-calcite-radio-button-h .radio.sc-calcite-radio-button{cursor:pointer;border-radius:9999px;background-color:var(--calcite-ui-foreground-1);-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-border-input);box-shadow:inset 0 0 0 1px var(--calcite-ui-border-input)}/*!@:host([hovered]) .radio,\n:host(:not([checked])[focused]:not([disabled])) .radio*/[hovered].sc-calcite-radio-button-h .radio.sc-calcite-radio-button,.sc-calcite-radio-button-h:not([checked])[focused]:not([disabled]) .radio.sc-calcite-radio-button{-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-brand);box-shadow:inset 0 0 0 2px var(--calcite-ui-brand)}/*!@:host([disabled])*/[disabled].sc-calcite-radio-button-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) .radio*/[disabled].sc-calcite-radio-button-h .radio.sc-calcite-radio-button{cursor:default;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-radio-button-h[disabled] .sc-calcite-radio-button-s>[calcite-hydrated][disabled],[disabled].sc-calcite-radio-button-h [calcite-hydrated][disabled].sc-calcite-radio-button{opacity:1}/*!@:host([hovered][disabled]) .radio*/[hovered][disabled].sc-calcite-radio-button-h .radio.sc-calcite-radio-button{-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-border-input);box-shadow:inset 0 0 0 1px var(--calcite-ui-border-input)}/*!@:host([scale=s])*/[scale=s].sc-calcite-radio-button-h{--calcite-radio-size:var(--calcite-font-size--2)}/*!@:host([scale=m])*/[scale=m].sc-calcite-radio-button-h{--calcite-radio-size:var(--calcite-font-size--1)}/*!@:host([scale=l])*/[scale=l].sc-calcite-radio-button-h{--calcite-radio-size:var(--calcite-font-size-0)}/*!@.radio*/.radio.sc-calcite-radio-button{height:var(--calcite-radio-size);max-width:var(--calcite-radio-size);min-width:var(--calcite-radio-size)}/*!@:host([scale=s][checked]) .radio,\n:host([hovered][scale=s][checked][disabled]) .radio*/[scale=s][checked].sc-calcite-radio-button-h .radio.sc-calcite-radio-button,[hovered][scale=s][checked][disabled].sc-calcite-radio-button-h .radio.sc-calcite-radio-button{-webkit-box-shadow:inset 0 0 0 4px var(--calcite-ui-brand);box-shadow:inset 0 0 0 4px var(--calcite-ui-brand)}/*!@:host([scale=s][focused][checked]:not([disabled])) .radio*/[scale=s][focused][checked].sc-calcite-radio-button-h:not([disabled]) .radio.sc-calcite-radio-button{-webkit-box-shadow:inset 0 0 0 4px var(--calcite-ui-brand), 0 0 0 2px var(--calcite-ui-foreground-1), 0 0 0 4px var(--calcite-ui-brand);box-shadow:inset 0 0 0 4px var(--calcite-ui-brand), 0 0 0 2px var(--calcite-ui-foreground-1), 0 0 0 4px var(--calcite-ui-brand)}/*!@:host([scale=m][checked]) .radio,\n:host([hovered][scale=m][checked][disabled]) .radio*/[scale=m][checked].sc-calcite-radio-button-h .radio.sc-calcite-radio-button,[hovered][scale=m][checked][disabled].sc-calcite-radio-button-h .radio.sc-calcite-radio-button{-webkit-box-shadow:inset 0 0 0 5px var(--calcite-ui-brand);box-shadow:inset 0 0 0 5px var(--calcite-ui-brand)}/*!@:host([scale=m][focused][checked]:not([disabled])) .radio*/[scale=m][focused][checked].sc-calcite-radio-button-h:not([disabled]) .radio.sc-calcite-radio-button{-webkit-box-shadow:inset 0 0 0 5px var(--calcite-ui-brand), 0 0 0 2px var(--calcite-ui-foreground-1), 0 0 0 4px var(--calcite-ui-brand);box-shadow:inset 0 0 0 5px var(--calcite-ui-brand), 0 0 0 2px var(--calcite-ui-foreground-1), 0 0 0 4px var(--calcite-ui-brand)}/*!@:host([scale=l][checked]) .radio,\n:host([hovered][scale=l][checked][disabled]) .radio*/[scale=l][checked].sc-calcite-radio-button-h .radio.sc-calcite-radio-button,[hovered][scale=l][checked][disabled].sc-calcite-radio-button-h .radio.sc-calcite-radio-button{-webkit-box-shadow:inset 0 0 0 6px var(--calcite-ui-brand);box-shadow:inset 0 0 0 6px var(--calcite-ui-brand)}/*!@:host([scale=l][focused][checked]:not([disabled])) .radio*/[scale=l][focused][checked].sc-calcite-radio-button-h:not([disabled]) .radio.sc-calcite-radio-button{-webkit-box-shadow:inset 0 0 0 6px var(--calcite-ui-brand), 0 0 0 2px var(--calcite-ui-foreground-1), 0 0 0 4px var(--calcite-ui-brand);box-shadow:inset 0 0 0 6px var(--calcite-ui-brand), 0 0 0 2px var(--calcite-ui-foreground-1), 0 0 0 4px var(--calcite-ui-brand)}@media (forced-colors: active){/*!@:host([checked]) .radio::after,\n:host([checked][disabled]) .radio::after*/[checked].sc-calcite-radio-button-h .radio.sc-calcite-radio-button::after,[checked][disabled].sc-calcite-radio-button-h .radio.sc-calcite-radio-button::after{content:\"\";width:var(--calcite-radio-size);height:var(--calcite-radio-size);background-color:windowText;display:block}}/*!@::slotted(input[slot=hidden-form-input])*/.sc-calcite-radio-button-s>input[slot=hidden-form-input]{bottom:0 !important;left:0 !important;margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;right:0 !important;top:0 !important;-webkit-transform:none !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}";

class RadioButton {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteInternalRadioButtonBlur = createEvent(this, "calciteInternalRadioButtonBlur", 7);
    this.calciteRadioButtonChange = createEvent(this, "calciteRadioButtonChange", 7);
    this.calciteInternalRadioButtonCheckedChange = createEvent(this, "calciteInternalRadioButtonCheckedChange", 7);
    this.calciteInternalRadioButtonFocus = createEvent(this, "calciteInternalRadioButtonFocus", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** The checked state of the radio button. */
    this.checked = false;
    /** The disabled state of the radio button. */
    this.disabled = false;
    /**
     * The focused state of the radio button.
     * @internal
     */
    this.focused = false;
    /** The radio button's hidden status.  When a radio button is hidden it is not focusable or checkable. */
    this.hidden = false;
    /**
     * The hovered state of the radio button.
     * @internal
     */
    this.hovered = false;
    /** Requires that a value is selected for the radio button group before the parent form will submit. */
    this.required = false;
    /** The scale (size) of the radio button. `scale` is passed as a property automatically from `calcite-radio-button-group`. */
    this.scale = "m";
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.selectItem = (items, selectedIndex) => {
      items[selectedIndex].click();
    };
    this.queryButtons = () => {
      return Array.from(this.rootNode.querySelectorAll("calcite-radio-button:not([hidden])")).filter((radioButton) => radioButton.name === this.name);
    };
    this.isDefaultSelectable = () => {
      const radioButtons = this.queryButtons();
      return !radioButtons.some((radioButton) => radioButton.checked) && radioButtons[0] === this.el;
    };
    this.check = () => {
      if (this.disabled) {
        return;
      }
      this.uncheckAllRadioButtonsInGroup();
      this.checked = true;
      this.calciteRadioButtonChange.emit();
      this.setFocus();
    };
    this.clickHandler = () => {
      this.check();
    };
    this.setContainerEl = (el) => {
      this.containerEl = el;
    };
    this.handleKeyDown = (event) => {
      const keys = ["ArrowLeft", "ArrowUp", "ArrowRight", "ArrowDown", " "];
      const key = event.key;
      const { el } = this;
      if (keys.indexOf(key) === -1) {
        return;
      }
      if (key === " ") {
        this.check();
        return;
      }
      let adjustedKey = key;
      if (getElementDir(el) === "rtl") {
        if (key === "ArrowRight") {
          adjustedKey = "ArrowLeft";
        }
        if (key === "ArrowLeft") {
          adjustedKey = "ArrowRight";
        }
      }
      const radioButtons = Array.from(this.rootNode.querySelectorAll("calcite-radio-button:not([hidden]")).filter((radioButton) => radioButton.name === this.name);
      let currentIndex = 0;
      const radioButtonsLength = radioButtons.length;
      radioButtons.some((item, index) => {
        if (item.checked) {
          currentIndex = index;
          return true;
        }
      });
      switch (adjustedKey) {
        case "ArrowLeft":
        case "ArrowUp":
          event.preventDefault();
          this.selectItem(radioButtons, getRoundRobinIndex(Math.max(currentIndex - 1, -1), radioButtonsLength));
          return;
        case "ArrowRight":
        case "ArrowDown":
          event.preventDefault();
          this.selectItem(radioButtons, getRoundRobinIndex(currentIndex + 1, radioButtonsLength));
          return;
        default:
          return;
      }
    };
    this.onContainerBlur = () => {
      this.focused = false;
      this.calciteInternalRadioButtonBlur.emit();
    };
    this.onContainerFocus = () => {
      if (!this.disabled) {
        this.focused = true;
        this.calciteInternalRadioButtonFocus.emit();
      }
    };
  }
  checkedChanged(newChecked) {
    if (newChecked) {
      this.uncheckOtherRadioButtonsInGroup();
    }
    this.calciteInternalRadioButtonCheckedChange.emit(newChecked);
  }
  nameChanged() {
    this.checkLastRadioButton();
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    if (!this.disabled) {
      focusElement(this.containerEl);
    }
  }
  onLabelClick(event) {
    if (!this.disabled && !this.hidden) {
      this.uncheckOtherRadioButtonsInGroup();
      const label = event.currentTarget;
      const radioButton = label.for
        ? this.rootNode.querySelector(`calcite-radio-button[id="${label.for}"]`)
        : label.querySelector(`calcite-radio-button[name="${this.name}"]`);
      if (radioButton) {
        radioButton.checked = true;
        radioButton.focused = true;
      }
      this.calciteRadioButtonChange.emit();
      this.setFocus();
    }
  }
  checkLastRadioButton() {
    const radioButtons = this.queryButtons();
    const checkedRadioButtons = radioButtons.filter((radioButton) => radioButton.checked);
    if ((checkedRadioButtons === null || checkedRadioButtons === void 0 ? void 0 : checkedRadioButtons.length) > 1) {
      const lastCheckedRadioButton = checkedRadioButtons[checkedRadioButtons.length - 1];
      checkedRadioButtons
        .filter((checkedRadioButton) => checkedRadioButton !== lastCheckedRadioButton)
        .forEach((checkedRadioButton) => {
        checkedRadioButton.checked = false;
        checkedRadioButton.emitCheckedChange();
      });
    }
  }
  /** @internal */
  async emitCheckedChange() {
    this.calciteInternalRadioButtonCheckedChange.emit();
  }
  uncheckAllRadioButtonsInGroup() {
    const radioButtons = this.queryButtons();
    radioButtons.forEach((radioButton) => {
      if (radioButton.checked) {
        radioButton.checked = false;
        radioButton.focused = false;
      }
    });
  }
  uncheckOtherRadioButtonsInGroup() {
    const radioButtons = this.queryButtons();
    const otherRadioButtons = radioButtons.filter((radioButton) => radioButton.guid !== this.guid);
    otherRadioButtons.forEach((otherRadioButton) => {
      if (otherRadioButton.checked) {
        otherRadioButton.checked = false;
        otherRadioButton.focused = false;
      }
    });
  }
  getTabIndex() {
    if (this.disabled) {
      return undefined;
    }
    return this.checked || this.isDefaultSelectable() ? 0 : -1;
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  mouseenter() {
    this.hovered = true;
  }
  mouseleave() {
    this.hovered = false;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    this.rootNode = this.el.getRootNode();
    this.guid = this.el.id || `calcite-radio-button-${guid()}`;
    if (this.name) {
      this.checkLastRadioButton();
    }
    connectLabel(this);
    connectForm(this);
  }
  componentDidLoad() {
    if (this.focused && !this.disabled) {
      this.setFocus();
    }
  }
  disconnectedCallback() {
    disconnectLabel(this);
    disconnectForm(this);
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    const tabIndex = this.getTabIndex();
    return (hAsync(Host, { onClick: this.clickHandler, onKeyDown: this.handleKeyDown }, hAsync("div", { "aria-checked": this.checked.toString(), "aria-label": getLabelText(this), class: CSS$f.container, onBlur: this.onContainerBlur, onFocus: this.onContainerFocus, ref: this.setContainerEl, role: "radio", tabIndex: tabIndex }, hAsync("div", { class: "radio" })), hAsync(HiddenFormInputSlot, { component: this })));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "checked": ["checkedChanged"],
    "name": ["nameChanged"]
  }; }
  static get style() { return radioButtonCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-radio-button",
    "$members$": {
      "checked": [1540],
      "disabled": [516],
      "focused": [1540],
      "guid": [1537],
      "hidden": [516],
      "hovered": [1540],
      "label": [1],
      "name": [513],
      "required": [516],
      "scale": [513],
      "value": [1032],
      "setFocus": [64],
      "emitCheckedChange": [64]
    },
    "$listeners$": [[1, "mouseenter", "mouseenter"], [1, "mouseleave", "mouseleave"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["checked", "checked"], ["disabled", "disabled"], ["focused", "focused"], ["guid", "guid"], ["hidden", "hidden"], ["hovered", "hovered"], ["name", "name"], ["required", "required"], ["scale", "scale"]]
  }; }
}

const radioButtonGroupCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-radio-button-group:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-radio-button-group{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-radio-button-group{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-radio-button-group{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-radio-button-group{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-radio-button-group{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-radio-button-group:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-radio-button-group-h{display:none}/*!@:host*/.sc-calcite-radio-button-group-h{display:-ms-flexbox;display:flex;max-width:100vw}/*!@:host([layout=horizontal])*/[layout=horizontal].sc-calcite-radio-button-group-h{-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap}/*!@:host([layout=horizontal][scale=s])*/[layout=horizontal][scale=s].sc-calcite-radio-button-group-h{gap:1rem}/*!@:host([layout=horizontal][scale=m])*/[layout=horizontal][scale=m].sc-calcite-radio-button-group-h{gap:1.25rem}/*!@:host([layout=horizontal][scale=l])*/[layout=horizontal][scale=l].sc-calcite-radio-button-group-h{gap:1.5rem}/*!@:host([layout=vertical])*/[layout=vertical].sc-calcite-radio-button-group-h{-ms-flex-direction:column;flex-direction:column}";

/**
 * @slot - A slot for adding `calcite-radio-button`s.
 */
class RadioButtonGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteRadioButtonGroupChange = createEvent(this, "calciteRadioButtonGroupChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** The disabled state of the radio button group. */
    this.disabled = false;
    /** The radio button group's hidden status.  When a radio button group is hidden none of its options are focusable or checkable. */
    this.hidden = false;
    /** The layout direction of the radio buttons in a group. */
    this.layout = "horizontal";
    /** Requires that a value is selected for the radio button group before the parent form will submit. */
    this.required = false;
    /** The scale (size) of the radio button group. */
    this.scale = "m";
    // --------------------------------------------------------------------------
    //
    //  Private Properties
    //
    // --------------------------------------------------------------------------
    this.mutationObserver = createObserver();
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.passPropsToRadioButtons = () => {
      const radioButtons = this.el.querySelectorAll("calcite-radio-button");
      if (radioButtons.length > 0) {
        radioButtons.forEach((radioButton) => {
          radioButton.disabled = this.disabled || radioButton.disabled;
          radioButton.hidden = this.hidden;
          radioButton.name = this.name;
          radioButton.required = this.required;
          radioButton.scale = this.scale;
        });
      }
    };
  }
  onDisabledChange() {
    this.passPropsToRadioButtons();
  }
  onHiddenChange() {
    this.passPropsToRadioButtons();
  }
  onLayoutChange() {
    this.passPropsToRadioButtons();
  }
  onScaleChange() {
    this.passPropsToRadioButtons();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    var _a;
    this.passPropsToRadioButtons();
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el, { childList: true, subtree: true });
  }
  disconnectedCallback() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  radioButtonChangeHandler(event) {
    this.calciteRadioButtonGroupChange.emit(event.target.value);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    return (hAsync(Host, { role: "radiogroup" }, hAsync("slot", null)));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "disabled": ["onDisabledChange"],
    "hidden": ["onHiddenChange"],
    "layout": ["onLayoutChange"],
    "scale": ["onScaleChange"]
  }; }
  static get style() { return radioButtonGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-radio-button-group",
    "$members$": {
      "disabled": [516],
      "hidden": [516],
      "layout": [513],
      "name": [513],
      "required": [516],
      "scale": [513]
    },
    "$listeners$": [[0, "calciteRadioButtonChange", "radioButtonChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["hidden", "hidden"], ["layout", "layout"], ["name", "name"], ["required", "required"], ["scale", "scale"]]
  }; }
}

const radioGroupCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-radio-group:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-radio-group{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-radio-group{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-radio-group{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-radio-group{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-radio-group{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-radio-group:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-radio-group-h{display:none}/*!@:host*/.sc-calcite-radio-group-h{display:-ms-flexbox;display:flex;background-color:var(--calcite-ui-foreground-1);width:-moz-fit-content;width:-webkit-fit-content;width:fit-content;outline:1px solid var(--calcite-ui-border-input);outline-offset:-1px}/*!@:host([disabled])*/[disabled].sc-calcite-radio-group-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-radio-group-h[disabled] .sc-calcite-radio-group-s>[calcite-hydrated][disabled],[disabled].sc-calcite-radio-group-h [calcite-hydrated][disabled].sc-calcite-radio-group{opacity:1}/*!@:host([layout=vertical])*/[layout=vertical].sc-calcite-radio-group-h{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-item-align:start;align-self:flex-start}/*!@:host([width=full])*/[width=full].sc-calcite-radio-group-h{width:100%;min-width:-moz-fit-content;min-width:-webkit-fit-content;min-width:fit-content}/*!@:host([width=full]) ::slotted(calcite-radio-group-item)*/.sc-calcite-radio-group-h[width=full] .sc-calcite-radio-group-s>calcite-radio-group-item{-ms-flex:1 1 auto;flex:1 1 auto}/*!@:host([width=full][layout=vertical]) ::slotted(calcite-radio-group-item)*/.sc-calcite-radio-group-h[width=full][layout=vertical] .sc-calcite-radio-group-s>calcite-radio-group-item{-ms-flex-pack:start;justify-content:flex-start}/*!@::slotted(calcite-radio-group-item[checked]), ::slotted(calcite-radio-group-item:focus)*/.sc-calcite-radio-group-s>calcite-radio-group-item[checked],.sc-calcite-radio-group-s>calcite-radio-group-item:focus{z-index:0}/*!@::slotted(input[slot=hidden-form-input])*/.sc-calcite-radio-group-s>input[slot=hidden-form-input]{bottom:0 !important;left:0 !important;margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;right:0 !important;top:0 !important;-webkit-transform:none !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}";

/**
 * @slot - A slot for adding `calcite-radio-group-item`s.
 */
class RadioGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteRadioGroupChange = createEvent(this, "calciteRadioGroupChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** specify the appearance style of the radio group, defaults to solid. */
    this.appearance = "solid";
    /** is the radio group disabled  */
    this.disabled = false;
    /**
     * When true, makes the component required for form-submission.
     *
     * @internal
     */
    this.required = false;
    /** specify the layout of the radio group, defaults to horizontal */
    this.layout = "horizontal";
    /** The scale of the radio group */
    this.scale = "m";
    /** The value of the selectedItem */
    this.value = null;
    /** specify the width of the group, defaults to auto */
    this.width = "auto";
    //--------------------------------------------------------------------------
    //
    //  Event Listeners
    //
    //--------------------------------------------------------------------------
    this.handleClick = (event) => {
      if (event.target.localName === "calcite-radio-group-item") {
        this.selectItem(event.target, true);
      }
    };
  }
  valueHandler(value) {
    const items = this.getItems();
    items.forEach((item) => (item.checked = item.value === value));
  }
  handleSelectedItemChange(newItem, oldItem) {
    this.value = newItem === null || newItem === void 0 ? void 0 : newItem.value;
    if (newItem === oldItem) {
      return;
    }
    const items = this.getItems();
    const match = Array.from(items)
      .filter((item) => item === newItem)
      .pop();
    if (match) {
      this.selectItem(match);
    }
    else if (items[0]) {
      items[0].tabIndex = 0;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillLoad() {
    const items = this.getItems();
    const lastChecked = Array.from(items)
      .filter((item) => item.checked)
      .pop();
    if (lastChecked) {
      this.selectItem(lastChecked);
    }
    else if (items[0]) {
      items[0].tabIndex = 0;
    }
  }
  connectedCallback() {
    connectLabel(this);
    connectForm(this);
  }
  disconnectedCallback() {
    disconnectLabel(this);
    disconnectForm(this);
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  render() {
    return (hAsync(Host, { onClick: this.handleClick, role: "radiogroup" }, hAsync("slot", null), hAsync(HiddenFormInputSlot, { component: this })));
  }
  handleSelected(event) {
    event.stopPropagation();
    event.preventDefault();
    this.selectItem(event.target);
  }
  handleKeyDown(event) {
    const keys = ["ArrowLeft", "ArrowUp", "ArrowRight", "ArrowDown", " "];
    const key = event.key;
    const { el, selectedItem } = this;
    if (keys.indexOf(key) === -1) {
      return;
    }
    let adjustedKey = key;
    if (getElementDir(el) === "rtl") {
      if (key === "ArrowRight") {
        adjustedKey = "ArrowLeft";
      }
      if (key === "ArrowLeft") {
        adjustedKey = "ArrowRight";
      }
    }
    const items = this.getItems();
    let selectedIndex = -1;
    items.forEach((item, index) => {
      if (item === selectedItem) {
        selectedIndex = index;
      }
    });
    switch (adjustedKey) {
      case "ArrowLeft":
      case "ArrowUp":
        event.preventDefault();
        const previous = selectedIndex < 1 ? items.item(items.length - 1) : items.item(selectedIndex - 1);
        this.selectItem(previous, true);
        return;
      case "ArrowRight":
      case "ArrowDown":
        event.preventDefault();
        const next = selectedIndex === -1 ? items.item(1) : items.item(selectedIndex + 1) || items.item(0);
        this.selectItem(next, true);
        return;
      case " ":
        event.preventDefault();
        this.selectItem(event.target, true);
        return;
      default:
        return;
    }
  }
  // --------------------------------------------------------------------------
  //
  //  Methods
  //
  // --------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    var _a;
    (_a = (this.selectedItem || this.getItems()[0])) === null || _a === void 0 ? void 0 : _a.focus();
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  onLabelClick() {
    this.setFocus();
  }
  getItems() {
    return this.el.querySelectorAll("calcite-radio-group-item");
  }
  selectItem(selected, emit = false) {
    if (selected === this.selectedItem) {
      return;
    }
    const items = this.getItems();
    let match = null;
    items.forEach((item) => {
      const matches = item.value === selected.value;
      if ((matches && !item.checked) || (!matches && item.checked)) {
        item.checked = matches;
      }
      item.tabIndex = matches ? 0 : -1;
      if (matches) {
        match = item;
        if (emit) {
          this.calciteRadioGroupChange.emit(match.value);
        }
      }
    });
    this.selectedItem = match;
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "value": ["valueHandler"],
    "selectedItem": ["handleSelectedItemChange"]
  }; }
  static get style() { return radioGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-radio-group",
    "$members$": {
      "appearance": [513],
      "disabled": [516],
      "required": [516],
      "layout": [513],
      "name": [1],
      "scale": [513],
      "value": [1025],
      "selectedItem": [1040],
      "width": [513],
      "setFocus": [64]
    },
    "$listeners$": [[0, "calciteRadioGroupItemChange", "handleSelected"], [0, "keydown", "handleKeyDown"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["appearance", "appearance"], ["disabled", "disabled"], ["required", "required"], ["layout", "layout"], ["scale", "scale"], ["width", "width"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const SLOTS$8 = {
  input: "input"
};
const CSS$e = {
  radioGroupItemIcon: "radio-group-item-icon"
};

const radioGroupItemCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-radio-group-item:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-radio-group-item{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-radio-group-item{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-radio-group-item{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-radio-group-item{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-radio-group-item{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-radio-group-item:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-radio-group-item-h{display:none}/*!@:host*/.sc-calcite-radio-group-item-h{display:-ms-flexbox;display:flex;cursor:pointer;-ms-flex-item-align:stretch;align-self:stretch;font-weight:var(--calcite-font-weight-normal);-webkit-transition:background-color var(--calcite-internal-animation-timing-fast) ease-in-out, border-color var(--calcite-animation-timing) ease-in-out;transition:background-color var(--calcite-internal-animation-timing-fast) ease-in-out, border-color var(--calcite-animation-timing) ease-in-out}/*!@:host label*/.sc-calcite-radio-group-item-h label.sc-calcite-radio-group-item{pointer-events:none;margin:0.125rem;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;-ms-flex:1 1 0%;flex:1 1 0%;-ms-flex-align:center;align-items:center;color:var(--calcite-ui-text-3);-webkit-transition:background-color var(--calcite-internal-animation-timing-fast) ease-in-out, border-color var(--calcite-internal-animation-timing-fast) ease-in-out, color var(--calcite-internal-animation-timing-fast) ease-in-out;transition:background-color var(--calcite-internal-animation-timing-fast) ease-in-out, border-color var(--calcite-internal-animation-timing-fast) ease-in-out, color var(--calcite-internal-animation-timing-fast) ease-in-out}/*!@.label--horizontal*/.label--horizontal.sc-calcite-radio-group-item{-ms-flex-pack:center;justify-content:center}/*!@:host*/.sc-calcite-radio-group-item-h{outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@:host(:focus)*/.sc-calcite-radio-group-item-h:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-1px}/*!@.label--scale-s*/.label--scale-s.sc-calcite-radio-group-item{padding-left:0.5rem;padding-right:0.5rem;font-size:var(--calcite-font-size--2);line-height:1rem;padding-top:0.125rem;padding-bottom:0.125rem}/*!@.label--scale-m*/.label--scale-m.sc-calcite-radio-group-item{padding-left:0.75rem;padding-right:0.75rem;font-size:var(--calcite-font-size--1);line-height:1rem;padding-top:0.375rem;padding-bottom:0.375rem}/*!@.label--scale-l*/.label--scale-l.sc-calcite-radio-group-item{padding-left:1rem;padding-right:1rem;padding-top:0.625rem;padding-bottom:0.625rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@:host(:hover) label*/.sc-calcite-radio-group-item-h:hover label.sc-calcite-radio-group-item{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-text-1)}/*!@:host(:active) label*/.sc-calcite-radio-group-item-h:active label.sc-calcite-radio-group-item{background-color:var(--calcite-ui-foreground-3)}/*!@:host([checked]) label*/[checked].sc-calcite-radio-group-item-h label.sc-calcite-radio-group-item{cursor:default;border-color:var(--calcite-ui-brand);background-color:var(--calcite-ui-brand);color:var(--calcite-ui-background)}/*!@:host([checked]) .label--outline*/[checked].sc-calcite-radio-group-item-h .label--outline.sc-calcite-radio-group-item{border-color:var(--calcite-ui-brand);background-color:var(--calcite-ui-foreground-1);-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-brand);box-shadow:inset 0 0 0 1px var(--calcite-ui-brand);color:var(--calcite-ui-brand)}/*!@::slotted(input)*/.sc-calcite-radio-group-item-s>input{display:none}/*!@.radio-group-item-icon*/.radio-group-item-icon.sc-calcite-radio-group-item{position:relative;margin:0px;display:-ms-inline-flexbox;display:inline-flex;line-height:inherit}/*!@:host([icon-position=start]) .label--scale-s .radio-group-item-icon*/[icon-position=start].sc-calcite-radio-group-item-h .label--scale-s.sc-calcite-radio-group-item .radio-group-item-icon.sc-calcite-radio-group-item{-webkit-margin-end:0.5rem;margin-inline-end:0.5rem}/*!@:host([icon-position=end]) .label--scale-s .radio-group-item-icon*/[icon-position=end].sc-calcite-radio-group-item-h .label--scale-s.sc-calcite-radio-group-item .radio-group-item-icon.sc-calcite-radio-group-item{-webkit-margin-end:unset;margin-inline-end:unset;-webkit-margin-start:0.5rem;margin-inline-start:0.5rem}/*!@:host([icon-position=start]) .label--scale-m .radio-group-item-icon*/[icon-position=start].sc-calcite-radio-group-item-h .label--scale-m.sc-calcite-radio-group-item .radio-group-item-icon.sc-calcite-radio-group-item{-webkit-margin-end:0.75rem;margin-inline-end:0.75rem}/*!@:host([icon-position=end]) .label--scale-m .radio-group-item-icon*/[icon-position=end].sc-calcite-radio-group-item-h .label--scale-m.sc-calcite-radio-group-item .radio-group-item-icon.sc-calcite-radio-group-item{-webkit-margin-end:unset;margin-inline-end:unset;-webkit-margin-start:0.75rem;margin-inline-start:0.75rem}/*!@:host([icon-position=start]) .label--scale-l .radio-group-item-icon*/[icon-position=start].sc-calcite-radio-group-item-h .label--scale-l.sc-calcite-radio-group-item .radio-group-item-icon.sc-calcite-radio-group-item{-webkit-margin-end:1rem;margin-inline-end:1rem}/*!@:host([icon-position=end]) .label--scale-l .radio-group-item-icon*/[icon-position=end].sc-calcite-radio-group-item-h .label--scale-l.sc-calcite-radio-group-item .radio-group-item-icon.sc-calcite-radio-group-item{-webkit-margin-end:unset;margin-inline-end:unset;-webkit-margin-start:1rem;margin-inline-start:1rem}";

class RadioGroupItem {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteRadioGroupItemChange = createEvent(this, "calciteRadioGroupItemChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** Indicates whether the control is checked. */
    this.checked = false;
    /** flip the icon in rtl */
    this.iconFlipRtl = false;
    /** optionally used with icon, select where to position the icon */
    this.iconPosition = "start";
  }
  handleCheckedChange() {
    this.calciteRadioGroupItemChange.emit();
  }
  render() {
    const { checked, value } = this;
    const scale = getElementProp(this.el, "scale", "m");
    const appearance = getElementProp(this.el, "appearance", "solid");
    const layout = getElementProp(this.el, "layout", "horizontal");
    const iconEl = (hAsync("calcite-icon", { class: CSS$e.radioGroupItemIcon, flipRtl: this.iconFlipRtl, icon: this.icon, scale: "s" }));
    return (hAsync(Host, { "aria-checked": checked.toString(), role: "radio" }, hAsync("label", { class: {
        "label--scale-s": scale === "s",
        "label--scale-m": scale === "m",
        "label--scale-l": scale === "l",
        "label--horizontal": layout === "horizontal",
        "label--outline": appearance === "outline"
      } }, this.icon && this.iconPosition === "start" ? iconEl : null, hAsync("slot", null, value), hAsync("slot", { name: SLOTS$8.input }), this.icon && this.iconPosition === "end" ? iconEl : null)));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "checked": ["handleCheckedChange"]
  }; }
  static get style() { return radioGroupItemCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-radio-group-item",
    "$members$": {
      "checked": [1540],
      "icon": [513],
      "iconFlipRtl": [516, "icon-flip-rtl"],
      "iconPosition": [513, "icon-position"],
      "value": [1032]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["checked", "checked"], ["icon", "icon"], ["iconFlipRtl", "icon-flip-rtl"], ["iconPosition", "icon-position"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const TEXT$5 = {
  rating: "Rating",
  stars: "Stars: ${num}"
};

const ratingCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-rating:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-rating{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-rating{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-rating{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-rating{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-rating{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-rating:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-rating-h{display:none}/*!@:host*/.sc-calcite-rating-h{position:relative;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:-moz-fit-content;width:-webkit-fit-content;width:fit-content}/*!@:host([disabled])*/[disabled].sc-calcite-rating-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-rating-h[disabled] .sc-calcite-rating-s>[calcite-hydrated][disabled],[disabled].sc-calcite-rating-h [calcite-hydrated][disabled].sc-calcite-rating{opacity:1}/*!@:host([scale=s])*/[scale=s].sc-calcite-rating-h{height:1.5rem;--calcite-rating-spacing-unit:0.25rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-rating-h{height:2rem;--calcite-rating-spacing-unit:0.5rem}/*!@:host([scale=l])*/[scale=l].sc-calcite-rating-h{height:2.75rem;--calcite-rating-spacing-unit:0.75rem}/*!@:host([read-only])*/[read-only].sc-calcite-rating-h{pointer-events:none}/*!@.fieldset*/.fieldset.sc-calcite-rating{margin:0px;display:-ms-flexbox;display:flex;border-width:0px;padding:0px}/*!@.wrapper*/.wrapper.sc-calcite-rating{display:inline-block;-webkit-margin-end:var(--calcite-rating-spacing-unit);margin-inline-end:var(--calcite-rating-spacing-unit)}/*!@.star*/.star.sc-calcite-rating{position:relative;display:-ms-flexbox;display:flex;cursor:pointer;outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;color:var(--calcite-ui-border-input);-webkit-transition:var(--calcite-animation-timing);transition:var(--calcite-animation-timing);-webkit-transform:scale(1);transform:scale(1)}/*!@.star:active*/.star.sc-calcite-rating:active{-webkit-transform:scale(1.1);transform:scale(1.1)}/*!@.focused*/.focused.sc-calcite-rating{outline:2px solid var(--calcite-ui-brand);outline-offset:2px}/*!@.average,\n.fraction*/.average.sc-calcite-rating,.fraction.sc-calcite-rating{color:var(--calcite-ui-warning)}/*!@.hovered,\n.selected,\n:host([read-only]) .average,\n:host([read-only]) .fraction*/.hovered.sc-calcite-rating,.selected.sc-calcite-rating,[read-only].sc-calcite-rating-h .average.sc-calcite-rating,[read-only].sc-calcite-rating-h .fraction.sc-calcite-rating{color:var(--calcite-ui-brand)}/*!@.hovered:not(.selected)*/.hovered.sc-calcite-rating:not(.selected){-webkit-transform:scale(0.9);transform:scale(0.9)}/*!@:host .fraction*/.sc-calcite-rating-h .fraction.sc-calcite-rating{pointer-events:none;position:absolute;top:0px;overflow:hidden;-webkit-transition:var(--calcite-animation-timing);transition:var(--calcite-animation-timing);inset-inline-start:0}/*!@calcite-chip*/calcite-chip.sc-calcite-rating{pointer-events:none;cursor:default}/*!@.number--average*/.number--average.sc-calcite-rating{font-weight:var(--calcite-font-weight-bold)}/*!@.number--count*/.number--count.sc-calcite-rating{color:var(--calcite-ui-text-2);font-style:italic}/*!@.number--count:not(:first-child)*/.number--count.sc-calcite-rating:not(:first-child){-webkit-margin-start:var(--calcite-rating-spacing-unit);margin-inline-start:var(--calcite-rating-spacing-unit)}/*!@.visually-hidden*/.visually-hidden.sc-calcite-rating{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}/*!@::slotted(input[slot=hidden-form-input])*/.sc-calcite-rating-s>input[slot=hidden-form-input]{bottom:0 !important;left:0 !important;margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;right:0 !important;top:0 !important;-webkit-transform:none !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}";

class Rating {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteRatingChange = createEvent(this, "calciteRatingChange", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /** specify the scale of the component, defaults to m */
    this.scale = "m";
    /** the value of the rating component */
    this.value = 0;
    /** is the rating component in a selectable mode */
    this.readOnly = false;
    /** is the rating component in a selectable mode */
    this.disabled = false;
    /** Show average and count data summary chip (if available) */
    this.showChip = false;
    /** Localized string for "Rating" (used for aria label)
     * @default "Rating"
     */
    this.intlRating = TEXT$5.rating;
    /** Localized string for labelling each star, `${num}` in the string will be replaced by the number
     * @default "Stars: ${num}"
     */
    this.intlStars = TEXT$5.stars;
    /**
     * When true, makes the component required for form-submission.
     *
     * @internal
     */
    this.required = false;
    this.guid = `calcite-ratings-${guid()}`;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    connectLabel(this);
    connectForm(this);
  }
  disconnectedCallback() {
    disconnectLabel(this);
    disconnectForm(this);
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  blurHandler() {
    this.hasFocus = false;
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderStars() {
    return [1, 2, 3, 4, 5].map((i) => {
      const selected = this.value >= i;
      const average = this.average && !this.value && i <= this.average;
      const hovered = i <= this.hoverValue;
      const fraction = this.average && this.average + 1 - i;
      const partial = !this.value && !hovered && fraction > 0 && fraction < 1;
      const focused = this.hasFocus && this.focusValue === i;
      return (hAsync("span", { class: { wrapper: true } }, hAsync("label", { class: { star: true, focused, selected, average, hovered, partial }, htmlFor: `${this.guid}-${i}`, onMouseOver: () => {
          this.hoverValue = i;
        } }, hAsync("calcite-icon", { "aria-hidden": "true", class: "icon", icon: selected || average || this.readOnly ? "star-f" : "star", scale: this.scale }), partial && (hAsync("div", { class: "fraction", style: { width: `${fraction * 100}%` } }, hAsync("calcite-icon", { icon: "star-f", scale: this.scale }))), hAsync("span", { class: "visually-hidden" }, this.intlStars.replace("${num}", `${i}`))), hAsync("input", { checked: i === this.value, class: "visually-hidden", disabled: this.disabled || this.readOnly, id: `${this.guid}-${i}`, name: this.guid, onChange: () => this.updateValue(i), onClick: (event) => 
        // click is fired from the the component's label, so we treat this as an internal event
        event.stopPropagation(), onFocus: () => {
          this.hasFocus = true;
          this.focusValue = i;
        }, ref: (el) => (i === 1 || i === this.value) && (this.inputFocusRef = el), type: "radio", value: i })));
    });
  }
  render() {
    const { disabled, intlRating, showChip, scale, count, average } = this;
    return (hAsync(Fragment, null, hAsync("fieldset", { class: "fieldset", disabled: disabled, onBlur: () => (this.hoverValue = null), onMouseLeave: () => (this.hoverValue = null), onTouchEnd: () => (this.hoverValue = null) }, hAsync("legend", { class: "visually-hidden" }, intlRating), this.renderStars()), (count || average) && showChip ? (hAsync("calcite-chip", { scale: scale, value: count === null || count === void 0 ? void 0 : count.toString() }, !!average && hAsync("span", { class: "number--average" }, average.toString()), !!count && hAsync("span", { class: "number--count" }, "(", count === null || count === void 0 ? void 0 :
      count.toString(), ")"))) : null, hAsync(HiddenFormInputSlot, { component: this })));
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  onLabelClick() {
    this.setFocus();
  }
  updateValue(value) {
    this.value = value;
    this.calciteRatingChange.emit({ value });
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    this.inputFocusRef.focus();
  }
  get el() { return getElement(this); }
  static get style() { return ratingCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-rating",
    "$members$": {
      "scale": [513],
      "value": [1538],
      "readOnly": [516, "read-only"],
      "disabled": [516],
      "showChip": [516, "show-chip"],
      "count": [514],
      "average": [514],
      "name": [513],
      "intlRating": [1, "intl-rating"],
      "intlStars": [1, "intl-stars"],
      "required": [516],
      "hoverValue": [32],
      "focusValue": [32],
      "hasFocus": [32],
      "setFocus": [64]
    },
    "$listeners$": [[0, "blur", "blurHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["scale", "scale"], ["value", "value"], ["readOnly", "read-only"], ["disabled", "disabled"], ["showChip", "show-chip"], ["count", "count"], ["average", "average"], ["name", "name"], ["required", "required"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$d = {
  scrim: "scrim",
  content: "content"
};
const TEXT$4 = {
  loading: "Loading"
};

const scrimCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-scrim:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-scrim{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-scrim{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-scrim{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-scrim{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-scrim{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-scrim:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-scrim-h{display:none}/*!@:host*/.sc-calcite-scrim-h{position:absolute;top:0px;right:0px;bottom:0px;left:0px;z-index:50;display:-ms-flexbox;display:flex;height:100%;width:100%;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:stretch;align-items:stretch}@-webkit-keyframes calcite-scrim-fade-in{0%{--tw-bg-opacity:0}100%{--tw-text-opacity:1}}@keyframes calcite-scrim-fade-in{0%{--tw-bg-opacity:0}100%{--tw-text-opacity:1}}/*!@.scrim*/.scrim.sc-calcite-scrim{position:absolute;top:0px;right:0px;bottom:0px;left:0px;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-line-pack:center;align-content:center;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;overflow:hidden;-webkit-animation:calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;animation:calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;background-color:var(--calcite-scrim-background)}/*!@.content*/.content.sc-calcite-scrim{padding:1rem}";

/**
 * @slot - A slot for adding custom content, primarily loading information.
 */
class Scrim {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /** string to override English loading text
     * @default "Loading"
     */
    this.intlLoading = TEXT$4.loading;
    /**
     * Determines if the component will have the loader overlay.
     * Otherwise, will render opaque disabled state.
     */
    this.loading = false;
  }
  // --------------------------------------------------------------------------
  //
  //  Render Method
  //
  // --------------------------------------------------------------------------
  render() {
    const { el, loading, intlLoading } = this;
    const hasContent = el.innerHTML.trim().length > 0;
    const loaderNode = loading ? hAsync("calcite-loader", { active: true, label: intlLoading }) : null;
    const contentNode = hasContent ? (hAsync("div", { class: CSS$d.content }, hAsync("slot", null))) : null;
    return (hAsync("div", { class: CSS$d.scrim }, loaderNode, contentNode));
  }
  get el() { return getElement(this); }
  static get style() { return scrimCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-scrim",
    "$members$": {
      "intlLoading": [1, "intl-loading"],
      "loading": [516]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["loading", "loading"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$c = {
  icon: "icon",
  iconContainer: "icon-container",
  select: "select"
};

const selectCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-select:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-select{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-select{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-select{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-select{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-select{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:host*/.sc-calcite-select-h{--calcite-icon-size:1rem;--calcite-spacing-eighth:0.125rem;--calcite-spacing-quarter:0.25rem;--calcite-spacing-half:0.5rem;--calcite-spacing-three-quarters:0.75rem;--calcite-spacing:1rem;--calcite-spacing-plus-quarter:1.25rem;--calcite-spacing-plus-half:1.5rem;--calcite-spacing-double:2rem;--calcite-menu-min-width:10rem;--calcite-header-min-height:3rem;--calcite-footer-min-height:3rem}/*!@:root*/.sc-calcite-select:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-select-h{display:none}/*!@:host*/.sc-calcite-select-h{position:relative;display:-ms-flexbox;display:flex;-ms-flex-align:stretch;align-items:stretch;width:var(--select-width)}/*!@:host([disabled])*/[disabled].sc-calcite-select-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-select-h[disabled] .sc-calcite-select-s>[calcite-hydrated][disabled],[disabled].sc-calcite-select-h [calcite-hydrated][disabled].sc-calcite-select{opacity:1}/*!@:host([scale=s])*/[scale=s].sc-calcite-select-h{height:1.5rem;--calcite-select-font-size:var(--calcite-font-size--2);--calcite-select-spacing-inline:0.5rem 2rem}/*!@:host([scale=s]) .icon-container*/[scale=s].sc-calcite-select-h .icon-container.sc-calcite-select{padding-left:0.5rem;padding-right:0.5rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-select-h{height:2rem;--calcite-select-font-size:var(--calcite-font-size--1);--calcite-select-spacing-inline:0.75rem 2.5rem}/*!@:host([scale=m]) .icon-container*/[scale=m].sc-calcite-select-h .icon-container.sc-calcite-select{padding-left:0.75rem;padding-right:0.75rem}/*!@:host([scale=l])*/[scale=l].sc-calcite-select-h{height:44px;--calcite-select-font-size:var(--calcite-font-size-0);--calcite-select-spacing-inline:1rem 3rem}/*!@:host([scale=l]) .icon-container*/[scale=l].sc-calcite-select-h .icon-container.sc-calcite-select{padding-left:1rem;padding-right:1rem}/*!@:host([width=auto])*/[width=auto].sc-calcite-select-h{width:auto}/*!@:host([width=half])*/[width=half].sc-calcite-select-h{width:50%}/*!@:host([width=full])*/[width=full].sc-calcite-select-h{width:100%}/*!@.select*/.select.sc-calcite-select{margin:0px;-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;border-radius:0px;border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-input);background-color:var(--calcite-ui-foreground-1);font-family:inherit;color:var(--calcite-ui-text-2);outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;font-size:var(--calcite-select-font-size);padding-inline:var(--calcite-select-spacing-inline);border-inline-end-width:0px}/*!@.select:focus*/.select.sc-calcite-select:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@.select:hover*/.select.sc-calcite-select:hover{background-color:var(--calcite-ui-foreground-2)}/*!@select:disabled*/select.sc-calcite-select:disabled{border-color:var(--calcite-ui-border-input);--tw-bg-opacity:1}/*!@.icon-container*/.icon-container.sc-calcite-select{pointer-events:none;position:absolute;top:0px;bottom:0px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;border-width:0px;border-style:solid;border-color:var(--calcite-ui-border-input);background-color:transparent;color:var(--calcite-ui-text-2);inset-inline-end:0px;border-inline-width:0px 1px}/*!@.select:focus ~ .icon-container*/.select.sc-calcite-select:focus~.icon-container.sc-calcite-select{border-color:transparent}/*!@::slotted(input[slot=hidden-form-input])*/.sc-calcite-select-s>input[slot=hidden-form-input]{bottom:0 !important;left:0 !important;margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;right:0 !important;top:0 !important;-webkit-transform:none !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}";

function isOption(optionOrGroup) {
  return optionOrGroup.tagName === "CALCITE-OPTION";
}
function isOptionGroup(optionOrGroup) {
  return optionOrGroup.tagName === "CALCITE-OPTION-GROUP";
}
/**
 * @slot - A slot for adding `calcite-option`s.
 */
class Select {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteSelectChange = createEvent(this, "calciteSelectChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /**
     * When true, it prevents the option from being selected.
     */
    this.disabled = false;
    /**
     * When true, makes the component required for form-submission.
     *
     * @internal
     */
    this.required = false;
    /**
     * The component scale.
     */
    this.scale = "m";
    /** The value of the selectedOption */
    this.value = null;
    /**
     * The component width.
     */
    this.width = "auto";
    this.componentToNativeEl = new Map();
    this.mutationObserver = createObserver();
    this.handleInternalSelectChange = () => {
      const selected = this.selectEl.selectedOptions[0];
      this.selectFromNativeOption(selected);
      requestAnimationFrame(() => this.emitChangeEvent());
    };
    this.populateInternalSelect = () => {
      const optionsAndGroups = Array.from(this.el.children).filter((child) => child.tagName === "CALCITE-OPTION" || child.tagName === "CALCITE-OPTION-GROUP");
      this.clearInternalSelect();
      optionsAndGroups.forEach((optionOrGroup) => { var _a; return (_a = this.selectEl) === null || _a === void 0 ? void 0 : _a.append(this.toNativeElement(optionOrGroup)); });
    };
    this.storeSelectRef = (node) => {
      this.selectEl = node;
      this.populateInternalSelect();
      const selected = this.selectEl.selectedOptions[0];
      this.selectFromNativeOption(selected);
    };
    this.emitChangeEvent = () => {
      this.calciteSelectChange.emit();
    };
  }
  valueHandler(value) {
    const items = this.el.querySelectorAll("calcite-option");
    items.forEach((item) => (item.selected = item.value === value));
  }
  selectedOptionHandler(selectedOption) {
    this.value = selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.value;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    var _a;
    const { el } = this;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(el, {
      subtree: true,
      childList: true
    });
    connectLabel(this);
    connectForm(this);
  }
  disconnectedCallback() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    disconnectLabel(this);
    disconnectForm(this);
  }
  componentDidLoad() {
    var _a, _b;
    afterConnectDefaultValueSet(this, (_b = (_a = this.selectedOption) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : "");
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    focusElement(this.selectEl);
  }
  handleOptionOrGroupChange(event) {
    event.stopPropagation();
    const optionOrGroup = event.target;
    const nativeEl = this.componentToNativeEl.get(optionOrGroup);
    if (!nativeEl) {
      return;
    }
    this.updateNativeElement(optionOrGroup, nativeEl);
    if (isOption(optionOrGroup) && optionOrGroup.selected) {
      this.deselectAllExcept(optionOrGroup);
      this.selectedOption = optionOrGroup;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  onLabelClick() {
    this.setFocus();
  }
  updateNativeElement(optionOrGroup, nativeOptionOrGroup) {
    nativeOptionOrGroup.disabled = optionOrGroup.disabled;
    nativeOptionOrGroup.label = optionOrGroup.label;
    if (isOption(optionOrGroup)) {
      const option = nativeOptionOrGroup;
      option.selected = optionOrGroup.selected;
      option.value = optionOrGroup.value;
      // need to set innerText for mobile
      // see https://stackoverflow.com/questions/35021620/ios-safari-not-showing-all-options-for-select-menu/41749701
      option.innerText = optionOrGroup.label;
    }
  }
  clearInternalSelect() {
    this.componentToNativeEl.forEach((value) => value.remove());
    this.componentToNativeEl.clear();
  }
  selectFromNativeOption(nativeOption) {
    if (!nativeOption) {
      return;
    }
    let futureSelected;
    this.componentToNativeEl.forEach((nativeOptionOrGroup, optionOrGroup) => {
      if (isOption(optionOrGroup) && nativeOptionOrGroup === nativeOption) {
        optionOrGroup.selected = true;
        futureSelected = optionOrGroup;
        this.deselectAllExcept(optionOrGroup);
      }
    });
    if (futureSelected) {
      this.selectedOption = futureSelected;
    }
  }
  toNativeElement(optionOrGroup) {
    if (isOption(optionOrGroup)) {
      const option = document.createElement("option");
      this.updateNativeElement(optionOrGroup, option);
      this.componentToNativeEl.set(optionOrGroup, option);
      return option;
    }
    if (isOptionGroup(optionOrGroup)) {
      const group = document.createElement("optgroup");
      this.updateNativeElement(optionOrGroup, group);
      Array.from(optionOrGroup.children).forEach((option) => {
        const nativeOption = this.toNativeElement(option);
        group.append(nativeOption);
        this.componentToNativeEl.set(optionOrGroup, nativeOption);
      });
      this.componentToNativeEl.set(optionOrGroup, group);
      return group;
    }
    throw new Error("unsupported element child provided");
  }
  deselectAllExcept(except) {
    this.el.querySelectorAll("calcite-option").forEach((option) => {
      if (option === except) {
        return;
      }
      option.selected = false;
    });
  }
  //--------------------------------------------------------------------------
  //
  //  Render Methods
  //
  //--------------------------------------------------------------------------
  renderChevron() {
    return (hAsync("div", { class: CSS$c.iconContainer }, hAsync("calcite-icon", { class: CSS$c.icon, icon: "chevron-down", scale: "s" })));
  }
  render() {
    return (hAsync(Fragment, null, hAsync("select", { "aria-label": this.label, class: CSS$c.select, disabled: this.disabled, onChange: this.handleInternalSelectChange, ref: this.storeSelectRef }, hAsync("slot", null)), this.renderChevron(), hAsync(HiddenFormInputSlot, { component: this })));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "value": ["valueHandler"],
    "selectedOption": ["selectedOptionHandler"]
  }; }
  static get style() { return selectCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-select",
    "$members$": {
      "disabled": [516],
      "label": [1],
      "name": [1],
      "required": [516],
      "scale": [513],
      "value": [1025],
      "selectedOption": [1040],
      "width": [513],
      "setFocus": [64]
    },
    "$listeners$": [[0, "calciteOptionChange", "handleOptionOrGroupChange"], [0, "calciteOptionGroupChange", "handleOptionOrGroupChange"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["required", "required"], ["scale", "scale"], ["width", "width"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$b = {
  main: "main",
  mainReversed: "main--reversed",
  content: "content",
  contentBehind: "content--behind",
  footer: "footer"
};
const SLOTS$7 = {
  centerRow: "center-row",
  primaryPanel: "primary-panel",
  contextualPanel: "contextual-panel",
  header: "header",
  footer: "footer"
};

const shellCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-shell:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-shell{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-shell{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-shell{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-shell{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-shell{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:host*/.sc-calcite-shell-h{-webkit-box-sizing:border-box;box-sizing:border-box;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-2);font-size:var(--calcite-font-size--1)}/*!@:host **/.sc-calcite-shell-h *.sc-calcite-shell{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@:root*/.sc-calcite-shell:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-shell-h{display:none}/*!@:host*/.sc-calcite-shell-h{position:absolute;top:0px;right:0px;bottom:0px;left:0px;display:-ms-flexbox;display:flex;height:100%;width:100%;-ms-flex-direction:column;flex-direction:column;overflow:hidden;--calcite-shell-tip-spacing:26vw}/*!@.main*/.main.sc-calcite-shell{position:relative;display:-ms-flexbox;display:flex;height:100%;width:100%;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;overflow:hidden}/*!@.main--reversed*/.main--reversed.sc-calcite-shell{-ms-flex-direction:row-reverse;flex-direction:row-reverse}/*!@.content*/.content.sc-calcite-shell{display:-ms-flexbox;display:flex;height:100%;width:100%;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap;overflow:auto}/*!@.content ::slotted(calcite-shell-center-row), .content ::slotted(calcite-panel), .content ::slotted(calcite-flow)*/.content .sc-calcite-shell-s>calcite-shell-center-row,.content.sc-calcite-shell-s>calcite-panel,.content .sc-calcite-shell-s>calcite-panel,.content.sc-calcite-shell-s>calcite-flow,.content .sc-calcite-shell-s>calcite-flow{-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-item-align:stretch;align-self:stretch;max-height:unset}/*!@.content--behind*/.content--behind.sc-calcite-shell{position:absolute;top:0px;right:0px;bottom:0px;left:0px;z-index:0;border-width:0px;display:initial}/*!@::slotted(calcite-shell-center-row)*/.sc-calcite-shell-s>calcite-shell-center-row{width:unset}/*!@::slotted(.header .heading)*/.sc-calcite-shell-s>.header .heading{font-size:var(--calcite-font-size--2);line-height:1.375;font-weight:var(--calcite-font-weight-normal)}/*!@::slotted(calcite-shell-panel), ::slotted(calcite-shell-center-row)*/.sc-calcite-shell-s>calcite-shell-panel,.sc-calcite-shell-s>calcite-shell-center-row{position:relative;z-index:1}/*!@::slotted(calcite-panel), ::slotted(calcite-flow)*/.sc-calcite-shell-s>calcite-panel,.sc-calcite-shell-s>calcite-flow{border-width:1px;border-left-width:0px;border-right-width:0px;border-style:solid;border-color:var(--calcite-ui-border-3)}/*!@slot[name=center-row]::slotted(calcite-shell-center-row:not([detached]))*/slot[name=center-row].sc-calcite-shell-s>calcite-shell-center-row:not([detached]){border-left-width:1px;border-right-width:1px;border-color:var(--calcite-ui-border-3)}/*!@::slotted(calcite-tip-manager)*/.sc-calcite-shell-s>calcite-tip-manager{position:absolute;-webkit-box-sizing:border-box;box-sizing:border-box}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}/*!@::slotted(calcite-tip-manager)*/.sc-calcite-shell-s>calcite-tip-manager{-webkit-animation:in-up var(--calcite-internal-animation-timing-slow) ease-in-out;animation:in-up var(--calcite-internal-animation-timing-slow) ease-in-out;border-radius:0.25rem;--tw-shadow:0 6px 20px -4px rgba(0, 0, 0, 0.1), 0 4px 12px -2px rgba(0, 0, 0, 0.08);--tw-shadow-colored:0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);bottom:0.5rem;left:var(--calcite-shell-tip-spacing);right:var(--calcite-shell-tip-spacing);z-index:2}";

/**
 * @slot - A slot for adding content to the shell. This content will appear between any leading and trailing panels added to the shell. (eg. a map)
 * @slot header - A slot for adding header content. This content will be positioned at the top of the shell.
 * @slot footer - A slot for adding footer content. This content will be positioned at the bottom of the shell.
 * @slot primary-panel - A slot for adding the leading `calcite-shell-panel`.
 * @slot contextual-panel - A slot for adding the trailing `calcite-shell-panel`.
 * @slot center-row - A slot for adding custom content in the center row.
 */
class Shell {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * Positions the center content behind any calcite-shell-panels.
     */
    this.contentBehind = false;
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderHeader() {
    const hasHeader = !!getSlotted(this.el, SLOTS$7.header);
    return hasHeader ? hAsync("slot", { key: "header", name: SLOTS$7.header }) : null;
  }
  renderContent() {
    const defaultSlotNode = hAsync("slot", { key: "default-slot" });
    const centerRowSlotNode = hAsync("slot", { key: "center-row-slot", name: SLOTS$7.centerRow });
    const contentContainerKey = "content-container";
    const content = !!this.contentBehind
      ? [
        hAsync("div", { class: {
            [CSS$b.content]: true,
            [CSS$b.contentBehind]: true
          }, key: contentContainerKey }, defaultSlotNode),
        centerRowSlotNode
      ]
      : [
        hAsync("div", { class: CSS$b.content, key: contentContainerKey }, defaultSlotNode, centerRowSlotNode)
      ];
    return content;
  }
  renderFooter() {
    const hasFooter = !!getSlotted(this.el, SLOTS$7.footer);
    return hasFooter ? (hAsync("div", { class: CSS$b.footer, key: "footer" }, hAsync("slot", { name: SLOTS$7.footer }))) : null;
  }
  renderMain() {
    const primaryPanel = getSlotted(this.el, SLOTS$7.primaryPanel);
    const mainClasses = {
      [CSS$b.main]: true,
      [CSS$b.mainReversed]: (primaryPanel === null || primaryPanel === void 0 ? void 0 : primaryPanel.position) === "end"
    };
    return (hAsync("div", { class: mainClasses }, hAsync("slot", { name: SLOTS$7.primaryPanel }), this.renderContent(), hAsync("slot", { name: SLOTS$7.contextualPanel })));
  }
  render() {
    return (hAsync(Fragment, null, this.renderHeader(), this.renderMain(), this.renderFooter()));
  }
  get el() { return getElement(this); }
  static get style() { return shellCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-shell",
    "$members$": {
      "contentBehind": [516, "content-behind"]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["contentBehind", "content-behind"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$a = {
  actionBarContainer: "action-bar-container",
  content: "content"
};
const SLOTS$6 = {
  actionBar: "action-bar"
};

const shellCenterRowCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-shell-center-row:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-shell-center-row{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-shell-center-row{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-shell-center-row{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-shell-center-row{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-shell-center-row{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:host*/.sc-calcite-shell-center-row-h{-webkit-box-sizing:border-box;box-sizing:border-box;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-2);font-size:var(--calcite-font-size--1)}/*!@:host **/.sc-calcite-shell-center-row-h *.sc-calcite-shell-center-row{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@:root*/.sc-calcite-shell-center-row:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-shell-center-row-h{display:none}/*!@:host*/.sc-calcite-shell-center-row-h{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;background-color:transparent;overflow:hidden}/*!@.content*/.content.sc-calcite-shell-center-row{margin:0px;display:-ms-flexbox;display:flex;height:100%;width:100%;overflow:hidden;-ms-flex:1 0 0px;flex:1 0 0}/*!@.action-bar-container*/.action-bar-container.sc-calcite-shell-center-row{display:-ms-flexbox;display:flex}/*!@:host([detached])*/[detached].sc-calcite-shell-center-row-h{margin-left:0.5rem;margin-right:0.5rem;margin-top:0.5rem;margin-bottom:1.5rem}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}/*!@:host([detached])*/[detached].sc-calcite-shell-center-row-h{-webkit-animation:in-up var(--calcite-internal-animation-timing-slow) ease-in-out;animation:in-up var(--calcite-internal-animation-timing-slow) ease-in-out;border-radius:0.25rem;border-width:0px;--tw-shadow:0 4px 8px -1px rgba(0, 0, 0, 0.08), 0 2px 4px -1px rgba(0, 0, 0, 0.04);--tw-shadow-colored:0 4px 8px -1px var(--tw-shadow-color), 0 2px 4px -1px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@:host([position=end])*/[position=end].sc-calcite-shell-center-row-h{-ms-flex-item-align:end;align-self:flex-end}/*!@:host([position=start])*/[position=start].sc-calcite-shell-center-row-h{-ms-flex-item-align:start;align-self:flex-start}/*!@:host([height-scale=s])*/[height-scale=s].sc-calcite-shell-center-row-h{height:33.333333%}/*!@:host([height-scale=m])*/[height-scale=m].sc-calcite-shell-center-row-h{height:70%}/*!@:host([height-scale=l])*/[height-scale=l].sc-calcite-shell-center-row-h{height:100%}/*!@:host([height-scale=l][detached])*/[height-scale=l][detached].sc-calcite-shell-center-row-h{height:calc(100% - 2rem)}/*!@::slotted(calcite-panel)*/.sc-calcite-shell-center-row-s>calcite-panel{height:100%;width:100%}/*!@::slotted(calcite-action-bar),\n::slotted(calcite-action-bar[position=end])*/.sc-calcite-shell-center-row-s>calcite-action-bar,.sc-calcite-shell-center-row-s>calcite-action-bar[position=end]{-webkit-border-end:1px solid;border-inline-end:1px solid;border-color:var(--calcite-ui-border-3)}";

/**
 * @slot - A slot for adding content to the shell panel.
 * @slot action-bar - A slot for adding a `calcite-action-bar` to the panel.
 */
class ShellCenterRow {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * This property makes the content area appear like a "floating" panel.
     */
    this.detached = false;
    /**
     * Specifies the maximum height of the row.
     */
    this.heightScale = "s";
    /**
     * Arranges the component depending on the elements 'dir' property.
     */
    this.position = "end";
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    const { el } = this;
    const contentNode = (hAsync("div", { class: CSS$a.content }, hAsync("slot", null)));
    const actionBar = getSlotted(el, SLOTS$6.actionBar);
    const actionBarNode = actionBar ? (hAsync("div", { class: CSS$a.actionBarContainer, key: "action-bar" }, hAsync("slot", { name: SLOTS$6.actionBar }))) : null;
    const children = [actionBarNode, contentNode];
    if ((actionBar === null || actionBar === void 0 ? void 0 : actionBar.position) === "end") {
      children.reverse();
    }
    return hAsync(Fragment, null, children);
  }
  get el() { return getElement(this); }
  static get style() { return shellCenterRowCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-shell-center-row",
    "$members$": {
      "detached": [516],
      "heightScale": [513, "height-scale"],
      "position": [513]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["detached", "detached"], ["heightScale", "height-scale"], ["position", "position"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$9 = {
  container: "container",
  content: "content",
  contentHeader: "content__header",
  contentBody: "content__body",
  contentDetached: "content--detached",
  separator: "separator"
};
const SLOTS$5 = {
  actionBar: "action-bar",
  header: "header"
};
const TEXT$3 = {
  resize: "Resize"
};

const shellPanelCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-shell-panel:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-shell-panel{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-shell-panel{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-shell-panel{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-shell-panel{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-shell-panel{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-shell-panel:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-shell-panel-h{display:none}/*!@:host*/.sc-calcite-shell-panel-h{pointer-events:none;display:-ms-flexbox;display:flex;-ms-flex:0 1 auto;flex:0 1 auto;-ms-flex-align:stretch;align-items:stretch;--calcite-shell-panel-detached-max-height:unset}/*!@.container*/.container.sc-calcite-shell-panel{pointer-events:none;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-align:stretch;align-items:stretch;background-color:transparent;font-size:var(--calcite-font-size--1);color:var(--calcite-ui-text-2)}/*!@.container **/.container.sc-calcite-shell-panel *.sc-calcite-shell-panel{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@:host(:hover) .separator:not(:hover):not(:focus), :host(:focus-within) .separator:not(:hover):not(:focus)*/.sc-calcite-shell-panel-h:hover .separator.sc-calcite-shell-panel:not(:hover):not(:focus),.sc-calcite-shell-panel-h:focus-within .separator.sc-calcite-shell-panel:not(:hover):not(:focus){opacity:1;background-color:var(--calcite-ui-border-3)}/*!@.separator*/.separator.sc-calcite-shell-panel{pointer-events:auto;position:absolute;bottom:0px;top:0px;z-index:10;display:-ms-flexbox;display:flex;height:100%;width:0.125rem;background-color:transparent;opacity:0;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;cursor:col-resize;outline:none}/*!@.separator:hover*/.separator.sc-calcite-shell-panel:hover{opacity:1;background-color:var(--calcite-ui-border-2)}/*!@.separator:focus*/.separator.sc-calcite-shell-panel:focus{background-color:var(--calcite-ui-brand);opacity:1}/*!@:host([position=start]) .separator*/[position=start].sc-calcite-shell-panel-h .separator.sc-calcite-shell-panel{inset-inline-end:-2px}/*!@:host([position=end]) .separator*/[position=end].sc-calcite-shell-panel-h .separator.sc-calcite-shell-panel{inset-inline-start:-2px}/*!@::slotted(calcite-panel), ::slotted(calcite-flow)*/.sc-calcite-shell-panel-s>calcite-panel,.sc-calcite-shell-panel-s>calcite-flow{height:100%;width:100%;-ms-flex:1 1 auto;flex:1 1 auto;max-height:unset;max-width:unset}/*!@::slotted(.calcite-match-height)*/.sc-calcite-shell-panel-s>.calcite-match-height{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;overflow:hidden}/*!@.content*/.content.sc-calcite-shell-panel{pointer-events:auto;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-align:stretch;align-items:stretch;-ms-flex-item-align:stretch;align-self:stretch;background-color:var(--calcite-ui-background);padding:0px;width:var(--calcite-shell-panel-width);max-width:var(--calcite-shell-panel-max-width);min-width:var(--calcite-shell-panel-min-width);-webkit-transition:max-height var(--calcite-animation-timing), max-width var(--calcite-animation-timing);transition:max-height var(--calcite-animation-timing), max-width var(--calcite-animation-timing)}/*!@.content__header*/.content__header.sc-calcite-shell-panel{display:-ms-flexbox;display:flex;-ms-flex:0 1 auto;flex:0 1 auto;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-align:stretch;align-items:stretch}/*!@.content__body*/.content__body.sc-calcite-shell-panel{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;overflow:hidden}/*!@:host([width-scale=s]) .content*/[width-scale=s].sc-calcite-shell-panel-h .content.sc-calcite-shell-panel{--calcite-shell-panel-width:calc(var(--calcite-panel-width-multiplier) * 12vw);--calcite-shell-panel-max-width:calc(var(--calcite-panel-width-multiplier) * 300px);--calcite-shell-panel-min-width:calc(var(--calcite-panel-width-multiplier) * 150px)}/*!@:host([width-scale=m]) .content*/[width-scale=m].sc-calcite-shell-panel-h .content.sc-calcite-shell-panel{--calcite-shell-panel-width:calc(var(--calcite-panel-width-multiplier) * 20vw);--calcite-shell-panel-max-width:calc(var(--calcite-panel-width-multiplier) * 420px);--calcite-shell-panel-min-width:calc(var(--calcite-panel-width-multiplier) * 240px)}/*!@:host([width-scale=l]) .content*/[width-scale=l].sc-calcite-shell-panel-h .content.sc-calcite-shell-panel{--calcite-shell-panel-width:calc(var(--calcite-panel-width-multiplier) * 45vw);--calcite-shell-panel-max-width:calc(var(--calcite-panel-width-multiplier) * 680px);--calcite-shell-panel-min-width:calc(var(--calcite-panel-width-multiplier) * 340px)}/*!@:host([detached-height-scale=s]) .content--detached*/[detached-height-scale=s].sc-calcite-shell-panel-h .content--detached.sc-calcite-shell-panel{--calcite-shell-panel-detached-max-height:40vh}/*!@:host([detached-height-scale=m]) .content--detached*/[detached-height-scale=m].sc-calcite-shell-panel-h .content--detached.sc-calcite-shell-panel{--calcite-shell-panel-detached-max-height:60vh}/*!@:host([detached-height-scale=l]) .content--detached*/[detached-height-scale=l].sc-calcite-shell-panel-h .content--detached.sc-calcite-shell-panel{--calcite-shell-panel-detached-max-height:80vh}/*!@.content--detached*/.content--detached.sc-calcite-shell-panel{margin-left:0.5rem;margin-right:0.5rem;margin-top:0.5rem;margin-bottom:auto;height:auto;border-radius:0.25rem;--tw-shadow:0 4px 8px -1px rgba(0, 0, 0, 0.08), 0 2px 4px -1px rgba(0, 0, 0, 0.04);--tw-shadow-colored:0 4px 8px -1px var(--tw-shadow-color), 0 2px 4px -1px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);overflow:hidden;max-height:var(--calcite-shell-panel-detached-max-height)}/*!@.content--detached ::slotted(calcite-panel),\n.content--detached ::slotted(calcite-flow)*/.content--detached .sc-calcite-shell-panel-s>calcite-panel,.content--detached .sc-calcite-shell-panel-s>calcite-flow{max-height:unset}/*!@:host([position=start]) .content--detached ::slotted(calcite-panel), :host([position=start]) .content--detached ::slotted(calcite-flow), :host([position=end]) .content--detached ::slotted(calcite-panel), :host([position=end]) .content--detached ::slotted(calcite-flow)*/.sc-calcite-shell-panel-h[position=start] .content--detached .sc-calcite-shell-panel-s>calcite-panel,.sc-calcite-shell-panel-h[position=start] .content--detached .sc-calcite-shell-panel-s>calcite-flow,.sc-calcite-shell-panel-h[position=end] .content--detached .sc-calcite-shell-panel-s>calcite-panel,.sc-calcite-shell-panel-h[position=end] .content--detached .sc-calcite-shell-panel-s>calcite-flow{border-style:none}/*!@.content[hidden]*/.content[hidden].sc-calcite-shell-panel{display:none}/*!@slot[name=action-bar]::slotted(calcite-action-bar), .content ::slotted(calcite-flow), .content ::slotted(calcite-panel)*/slot[name=action-bar].sc-calcite-shell-panel-s>calcite-action-bar,.content.sc-calcite-shell-panel-s>calcite-flow,.content .sc-calcite-shell-panel-s>calcite-flow,.content.sc-calcite-shell-panel-s>calcite-panel,.content .sc-calcite-shell-panel-s>calcite-panel{border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-3)}/*!@:host([position=start]) slot[name=action-bar]::slotted(calcite-action-bar),\n:host([position=start]) .content ::slotted(calcite-flow),\n:host([position=start]) .content ::slotted(calcite-panel)*/.sc-calcite-shell-panel-h[position=start] slot[name=action-bar].sc-calcite-shell-panel-s>calcite-action-bar,.sc-calcite-shell-panel-h[position=start] .content .sc-calcite-shell-panel-s>calcite-flow,.sc-calcite-shell-panel-h[position=start] .content .sc-calcite-shell-panel-s>calcite-panel{-webkit-border-start:none;border-inline-start:none}/*!@:host([position=end]) slot[name=action-bar]::slotted(calcite-action-bar),\n:host([position=end]) .content ::slotted(calcite-flow),\n:host([position=end]) .content ::slotted(calcite-panel)*/.sc-calcite-shell-panel-h[position=end] slot[name=action-bar].sc-calcite-shell-panel-s>calcite-action-bar,.sc-calcite-shell-panel-h[position=end] .content .sc-calcite-shell-panel-s>calcite-flow,.sc-calcite-shell-panel-h[position=end] .content .sc-calcite-shell-panel-s>calcite-panel{-webkit-border-end:none;border-inline-end:none}";

/**
 * @slot - A slot for adding content to the shell panel.
 * @slot action-bar - A slot for adding a `calcite-action-bar` to the panel.
 */
class ShellPanel {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteShellPanelToggle = createEvent(this, "calciteShellPanelToggle", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * Hide the content panel.
     */
    this.collapsed = false;
    /**
     * This property makes the content area appear like a "floating" panel.
     */
    this.detached = false;
    /**
     * Specifies the maximum height of the contents when detached.
     */
    this.detachedHeightScale = "l";
    /**
     * This sets width of the content area.
     */
    this.widthScale = "m";
    /**
     * Accessible label for resize separator.
     * @default "Resize"
     */
    this.intlResize = TEXT$3.resize;
    /**
     * This property makes the content area resizable if the calcite-shell-panel is not 'detached'.
     */
    this.resizable = false;
    this.contentWidth = null;
    this.initialContentWidth = null;
    this.initialClientX = null;
    this.contentWidthMax = null;
    this.contentWidthMin = null;
    this.step = 1;
    this.stepMultiplier = 10;
    this.storeContentEl = (contentEl) => {
      this.contentEl = contentEl;
    };
    this.getKeyAdjustedWidth = (event) => {
      const { key } = event;
      const { el, step, stepMultiplier, contentWidthMin, contentWidthMax, initialContentWidth, position } = this;
      const multipliedStep = step * stepMultiplier;
      const MOVEMENT_KEYS = [
        "ArrowUp",
        "ArrowDown",
        "ArrowLeft",
        "ArrowRight",
        "Home",
        "End",
        "PageUp",
        "PageDown"
      ];
      if (MOVEMENT_KEYS.indexOf(key) > -1) {
        event.preventDefault();
      }
      const dir = getElementDir(el);
      const directionKeys = ["ArrowLeft", "ArrowRight"];
      const directionFactor = dir === "rtl" && directionKeys.includes(key) ? -1 : 1;
      const increaseKeys = key === "ArrowUp" ||
        (position === "end" ? key === directionKeys[0] : key === directionKeys[1]);
      if (increaseKeys) {
        const stepValue = event.shiftKey ? multipliedStep : step;
        return initialContentWidth + directionFactor * stepValue;
      }
      const decreaseKeys = key === "ArrowDown" ||
        (position === "end" ? key === directionKeys[1] : key === directionKeys[0]);
      if (decreaseKeys) {
        const stepValue = event.shiftKey ? multipliedStep : step;
        return initialContentWidth - directionFactor * stepValue;
      }
      if (typeof contentWidthMin === "number" && key === "Home") {
        return contentWidthMin;
      }
      if (typeof contentWidthMax === "number" && key === "End") {
        return contentWidthMax;
      }
      if (key === "PageDown") {
        return initialContentWidth - multipliedStep;
      }
      if (key === "PageUp") {
        return initialContentWidth + multipliedStep;
      }
      return null;
    };
    this.separatorKeyDown = (event) => {
      this.setInitialContentWidth();
      const width = this.getKeyAdjustedWidth(event);
      if (typeof width === "number") {
        this.setContentWidth(width);
      }
    };
    this.separatorPointerMove = (event) => {
      event.preventDefault();
      const { el, initialContentWidth, position, initialClientX } = this;
      const offset = event.clientX - initialClientX;
      const dir = getElementDir(el);
      const adjustmentDirection = dir === "rtl" ? -1 : 1;
      const adjustedOffset = position === "end" ? -adjustmentDirection * offset : adjustmentDirection * offset;
      const width = initialContentWidth + adjustedOffset;
      this.setContentWidth(width);
    };
    this.separatorPointerUp = (event) => {
      event.preventDefault();
      document.removeEventListener("pointerup", this.separatorPointerUp);
      document.removeEventListener("pointermove", this.separatorPointerMove);
    };
    this.setInitialContentWidth = () => {
      var _a;
      this.initialContentWidth = (_a = this.contentEl) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect().width;
    };
    this.separatorPointerDown = (event) => {
      event.preventDefault();
      const { separatorEl } = this;
      separatorEl && document.activeElement !== separatorEl && separatorEl.focus();
      this.setInitialContentWidth();
      this.initialClientX = event.clientX;
      document.addEventListener("pointerup", this.separatorPointerUp);
      document.addEventListener("pointermove", this.separatorPointerMove);
    };
    this.connectSeparator = (separatorEl) => {
      this.disconnectSeparator();
      this.separatorEl = separatorEl;
      separatorEl.addEventListener("pointerdown", this.separatorPointerDown);
    };
    this.disconnectSeparator = () => {
      var _a;
      (_a = this.separatorEl) === null || _a === void 0 ? void 0 : _a.removeEventListener("pointerdown", this.separatorPointerDown);
    };
  }
  watchHandler() {
    this.calciteShellPanelToggle.emit();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
    this.disconnectSeparator();
  }
  componentDidLoad() {
    this.updateAriaValues();
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderHeader() {
    const { el } = this;
    const hasHeader = getSlotted(el, SLOTS$5.header);
    return hasHeader ? (hAsync("div", { class: CSS$9.contentHeader, key: "header" }, hAsync("slot", { name: SLOTS$5.header }))) : null;
  }
  render() {
    const { collapsed, detached, position, initialContentWidth, contentWidth, contentWidthMax, contentWidthMin, intlResize, resizable } = this;
    const allowResizing = !detached && resizable;
    const contentNode = (hAsync("div", { class: { [CSS$9.content]: true, [CSS$9.contentDetached]: detached }, hidden: collapsed, key: "content", ref: this.storeContentEl, style: allowResizing && contentWidth ? { width: `${contentWidth}px` } : null }, this.renderHeader(), hAsync("div", { class: CSS$9.contentBody }, hAsync("slot", null))));
    const separatorNode = allowResizing ? (hAsync("div", { "aria-label": intlResize, "aria-orientation": "horizontal", "aria-valuemax": contentWidthMax, "aria-valuemin": contentWidthMin, "aria-valuenow": contentWidth !== null && contentWidth !== void 0 ? contentWidth : initialContentWidth, class: CSS$9.separator, key: "separator", onKeyDown: this.separatorKeyDown, ref: this.connectSeparator, role: "separator", tabIndex: 0, "touch-action": "none" })) : null;
    const actionBarNode = hAsync("slot", { key: "action-bar", name: SLOTS$5.actionBar });
    const mainNodes = [actionBarNode, contentNode, separatorNode];
    if (position === "end") {
      mainNodes.reverse();
    }
    return hAsync("div", { class: { [CSS$9.container]: true } }, mainNodes);
  }
  // --------------------------------------------------------------------------
  //
  //  private Methods
  //
  // --------------------------------------------------------------------------
  setContentWidth(width) {
    const { contentWidthMax, contentWidthMin } = this;
    const roundedWidth = Math.round(width);
    this.contentWidth =
      typeof contentWidthMax === "number" && typeof contentWidthMin === "number"
        ? clamp(roundedWidth, contentWidthMin, contentWidthMax)
        : roundedWidth;
  }
  updateAriaValues() {
    const { contentEl } = this;
    const computedStyle = contentEl && getComputedStyle(contentEl);
    if (!computedStyle) {
      return;
    }
    const max = parseInt(computedStyle.getPropertyValue("max-width"), 10);
    const min = parseInt(computedStyle.getPropertyValue("min-width"), 10);
    const valueNow = parseInt(computedStyle.getPropertyValue("width"), 10);
    if (typeof valueNow === "number" && !isNaN(valueNow)) {
      this.initialContentWidth = valueNow;
    }
    if (typeof max === "number" && !isNaN(max)) {
      this.contentWidthMax = max;
    }
    if (typeof min === "number" && !isNaN(min)) {
      this.contentWidthMin = min;
    }
    forceUpdate$1(this);
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "collapsed": ["watchHandler"]
  }; }
  static get style() { return shellPanelCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-shell-panel",
    "$members$": {
      "collapsed": [516],
      "detached": [516],
      "detachedHeightScale": [513, "detached-height-scale"],
      "widthScale": [513, "width-scale"],
      "position": [513],
      "intlResize": [1, "intl-resize"],
      "resizable": [516],
      "contentWidth": [32]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["collapsed", "collapsed"], ["detached", "detached"], ["detachedHeightScale", "detached-height-scale"], ["widthScale", "width-scale"], ["position", "position"], ["resizable", "resizable"]]
  }; }
}

const sliderCss = "@charset \"UTF-8\";@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-slider:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-slider{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-slider{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-slider{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-slider{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-slider{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-slider:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-slider-h{display:none}/*!@.scale--s*/.scale--s.sc-calcite-slider{--calcite-slider-handle-size:10px;--calcite-slider-handle-extension-height:6.5px;--calcite-slider-container-font-size:var(--calcite-font-size--3)}/*!@.scale--s .handle__label, .scale--s .tick__label*/.scale--s.sc-calcite-slider .handle__label.sc-calcite-slider,.scale--s.sc-calcite-slider .tick__label.sc-calcite-slider{line-height:.75rem}/*!@.scale--m*/.scale--m.sc-calcite-slider{--calcite-slider-handle-size:14px;--calcite-slider-handle-extension-height:8px;--calcite-slider-container-font-size:var(--calcite-font-size--2)}/*!@.scale--m .handle__label, .scale--m .tick__label*/.scale--m.sc-calcite-slider .handle__label.sc-calcite-slider,.scale--m.sc-calcite-slider .tick__label.sc-calcite-slider{line-height:1rem}/*!@.scale--l*/.scale--l.sc-calcite-slider{--calcite-slider-handle-size:16px;--calcite-slider-handle-extension-height:10.5px;--calcite-slider-container-font-size:var(--calcite-font-size--1)}/*!@.scale--l .handle__label, .scale--l .tick__label*/.scale--l.sc-calcite-slider .handle__label.sc-calcite-slider,.scale--l.sc-calcite-slider .tick__label.sc-calcite-slider{line-height:1rem}/*!@.handle__label, .tick__label*/.handle__label.sc-calcite-slider,.tick__label.sc-calcite-slider{font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-2);font-size:var(--calcite-slider-container-font-size)}/*!@:host*/.sc-calcite-slider-h{display:block}/*!@.container*/.container.sc-calcite-slider{position:relative;display:block;padding:calc(var(--calcite-slider-handle-size) * 0.5);margin:calc(var(--calcite-slider-handle-size) * 0.5) 0;--calcite-slider-full-handle-height:calc(\n    var(--calcite-slider-handle-size) + var(--calcite-slider-handle-extension-height)\n  )}/*!@:host([disabled])*/[disabled].sc-calcite-slider-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) .track__range,\n:host([disabled]) .tick--active*/[disabled].sc-calcite-slider-h .track__range.sc-calcite-slider,[disabled].sc-calcite-slider-h .tick--active.sc-calcite-slider{background-color:var(--calcite-ui-text-3)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-slider-h[disabled] .sc-calcite-slider-s>[calcite-hydrated][disabled],[disabled].sc-calcite-slider-h [calcite-hydrated][disabled].sc-calcite-slider{opacity:1}/*!@.scale--s .thumb:not(.thumb--precise)*/.scale--s.sc-calcite-slider .thumb.sc-calcite-slider:not(.thumb--precise){--calcite-slider-thumb-y-offset:-6px}/*!@.scale--m .thumb:not(.thumb--precise)*/.scale--m.sc-calcite-slider .thumb.sc-calcite-slider:not(.thumb--precise){--calcite-slider-thumb-y-offset:-8px}/*!@.scale--l .thumb:not(.thumb--precise)*/.scale--l.sc-calcite-slider .thumb.sc-calcite-slider:not(.thumb--precise){--calcite-slider-thumb-y-offset:-9px}/*!@:host([precise]:not([has-histogram])) .container .thumb--value*/[precise].sc-calcite-slider-h:not([has-histogram]) .container.sc-calcite-slider .thumb--value.sc-calcite-slider{--calcite-slider-thumb-y-offset:calc(var(--calcite-slider-full-handle-height) * -1)}/*!@.thumb-container*/.thumb-container.sc-calcite-slider{position:relative;max-width:100%}/*!@.thumb*/.thumb.sc-calcite-slider{--calcite-slider-thumb-x-offset:calc(var(--calcite-slider-handle-size) * 0.5);position:absolute;margin:0px;display:-ms-flexbox;display:flex;cursor:pointer;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;border-style:none;background-color:transparent;padding:0px;font-family:inherit;outline:2px solid transparent;outline-offset:2px;-webkit-transform:translate(var(--calcite-slider-thumb-x-offset), var(--calcite-slider-thumb-y-offset));transform:translate(var(--calcite-slider-thumb-x-offset), var(--calcite-slider-thumb-y-offset))}/*!@.thumb .handle__label.static, .thumb .handle__label.transformed*/.thumb.sc-calcite-slider .handle__label.static.sc-calcite-slider,.thumb.sc-calcite-slider .handle__label.transformed.sc-calcite-slider{position:absolute;top:0px;bottom:0px;opacity:0}/*!@.thumb .handle__label.hyphen::after*/.thumb.sc-calcite-slider .handle__label.hyphen.sc-calcite-slider::after{content:\"—\";display:inline-block;width:1em}/*!@.thumb .handle__label.hyphen--wrap*/.thumb.sc-calcite-slider .handle__label.hyphen--wrap.sc-calcite-slider{display:-ms-flexbox;display:flex}/*!@.thumb .handle*/.thumb.sc-calcite-slider .handle.sc-calcite-slider{-webkit-box-sizing:border-box;box-sizing:border-box;border-radius:9999px;background-color:var(--calcite-ui-foreground-1);outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;height:var(--calcite-slider-handle-size);width:var(--calcite-slider-handle-size);-webkit-box-shadow:0 0 0 2px var(--calcite-ui-text-3) inset;box-shadow:0 0 0 2px var(--calcite-ui-text-3) inset;-webkit-transition:border var(--calcite-internal-animation-timing-medium) ease, background-color var(--calcite-internal-animation-timing-medium) ease, -webkit-box-shadow var(--calcite-animation-timing) ease;transition:border var(--calcite-internal-animation-timing-medium) ease, background-color var(--calcite-internal-animation-timing-medium) ease, -webkit-box-shadow var(--calcite-animation-timing) ease;transition:border var(--calcite-internal-animation-timing-medium) ease, background-color var(--calcite-internal-animation-timing-medium) ease, box-shadow var(--calcite-animation-timing) ease;transition:border var(--calcite-internal-animation-timing-medium) ease, background-color var(--calcite-internal-animation-timing-medium) ease, box-shadow var(--calcite-animation-timing) ease, -webkit-box-shadow var(--calcite-animation-timing) ease}/*!@.thumb .handle-extension*/.thumb.sc-calcite-slider .handle-extension.sc-calcite-slider{width:0.125rem;height:var(--calcite-slider-handle-extension-height);background-color:var(--calcite-ui-text-3)}/*!@.thumb:hover .handle*/.thumb.sc-calcite-slider:hover .handle.sc-calcite-slider{-webkit-box-shadow:0 0 0 3px var(--calcite-ui-brand) inset;box-shadow:0 0 0 3px var(--calcite-ui-brand) inset}/*!@.thumb:hover .handle-extension*/.thumb.sc-calcite-slider:hover .handle-extension.sc-calcite-slider{background-color:var(--calcite-ui-brand)}/*!@.thumb:focus .handle*/.thumb.sc-calcite-slider:focus .handle.sc-calcite-slider{outline:2px solid var(--calcite-ui-brand);outline-offset:2px}/*!@.thumb:focus .handle-extension*/.thumb.sc-calcite-slider:focus .handle-extension.sc-calcite-slider{background-color:var(--calcite-ui-brand)}/*!@.thumb.thumb--minValue*/.thumb.thumb--minValue.sc-calcite-slider{-webkit-transform:translate(calc(var(--calcite-slider-thumb-x-offset) * -1), var(--calcite-slider-thumb-y-offset));transform:translate(calc(var(--calcite-slider-thumb-x-offset) * -1), var(--calcite-slider-thumb-y-offset))}/*!@.thumb.thumb--precise*/.thumb.thumb--precise.sc-calcite-slider{--calcite-slider-thumb-y-offset:-2px}/*!@:host([label-handles]) .thumb*/[label-handles].sc-calcite-slider-h .thumb.sc-calcite-slider{--calcite-slider-thumb-x-offset:50%}/*!@:host([label-handles]):host(:not([has-histogram])) .scale--s .thumb:not(.thumb--precise)*/[label-handles].sc-calcite-slider-h(.sc-calcite-slider-h:not([has-histogram])) .scale--s.sc-calcite-slider .thumb.sc-calcite-slider:not(.thumb--precise){--calcite-slider-thumb-y-offset:-23px}/*!@:host([label-handles]):host(:not([has-histogram])) .scale--m .thumb:not(.thumb--precise)*/[label-handles].sc-calcite-slider-h(.sc-calcite-slider-h:not([has-histogram])) .scale--m.sc-calcite-slider .thumb.sc-calcite-slider:not(.thumb--precise){--calcite-slider-thumb-y-offset:-30px}/*!@:host([label-handles]):host(:not([has-histogram])) .scale--l .thumb:not(.thumb--precise)*/[label-handles].sc-calcite-slider-h(.sc-calcite-slider-h:not([has-histogram])) .scale--l.sc-calcite-slider .thumb.sc-calcite-slider:not(.thumb--precise){--calcite-slider-thumb-y-offset:-32px}/*!@:host([has-histogram][label-handles]) .handle__label,\n:host([label-handles]:not([has-histogram])) .thumb--minValue.thumb--precise .handle__label*/[has-histogram][label-handles].sc-calcite-slider-h .handle__label.sc-calcite-slider,[label-handles].sc-calcite-slider-h:not([has-histogram]) .thumb--minValue.thumb--precise.sc-calcite-slider .handle__label.sc-calcite-slider{margin-top:0.5em}/*!@:host(:not([has-histogram]):not([precise])) .handle__label,\n:host([label-handles]:not([has-histogram])) .thumb--value .handle__label*/.sc-calcite-slider-h:not([has-histogram]):not([precise]) .handle__label.sc-calcite-slider,[label-handles].sc-calcite-slider-h:not([has-histogram]) .thumb--value.sc-calcite-slider .handle__label.sc-calcite-slider{margin-bottom:0.5em}/*!@:host([label-handles][precise]):host(:not([has-histogram])) .scale--s .thumb--value*/[label-handles][precise].sc-calcite-slider-h(.sc-calcite-slider-h:not([has-histogram])) .scale--s.sc-calcite-slider .thumb--value.sc-calcite-slider{--calcite-slider-thumb-y-offset:-33px}/*!@:host([label-handles][precise]):host(:not([has-histogram])) .scale--m .thumb--value*/[label-handles][precise].sc-calcite-slider-h(.sc-calcite-slider-h:not([has-histogram])) .scale--m.sc-calcite-slider .thumb--value.sc-calcite-slider{--calcite-slider-thumb-y-offset:-44px}/*!@:host([label-handles][precise]):host(:not([has-histogram])) .scale--l .thumb--value*/[label-handles][precise].sc-calcite-slider-h(.sc-calcite-slider-h:not([has-histogram])) .scale--l.sc-calcite-slider .thumb--value.sc-calcite-slider{--calcite-slider-thumb-y-offset:-49px}/*!@.thumb:focus .handle, .thumb--active .handle*/.thumb.sc-calcite-slider:focus .handle.sc-calcite-slider,.thumb--active.sc-calcite-slider .handle.sc-calcite-slider{background-color:var(--calcite-ui-brand);-webkit-box-shadow:0 0 8px 0 rgba(0, 0, 0, 0.16);box-shadow:0 0 8px 0 rgba(0, 0, 0, 0.16)}/*!@.thumb:hover.thumb--precise:after, .thumb:focus.thumb--precise:after, .thumb--active.thumb--precise:after*/.thumb.sc-calcite-slider:hover.thumb--precise:after,.thumb.sc-calcite-slider:focus.thumb--precise:after,.thumb--active.thumb--precise.sc-calcite-slider:after{background-color:var(--calcite-ui-brand)}/*!@.track*/.track.sc-calcite-slider{position:relative;height:0.125rem;border-radius:0px;background-color:var(--calcite-ui-border-2);-webkit-transition:all var(--calcite-internal-animation-timing-medium) ease-in;transition:all var(--calcite-internal-animation-timing-medium) ease-in}/*!@.track__range*/.track__range.sc-calcite-slider{position:absolute;top:0px;height:0.125rem;background-color:var(--calcite-ui-brand)}/*!@.container--range .track__range:hover*/.container--range.sc-calcite-slider .track__range.sc-calcite-slider:hover{cursor:ew-resize}/*!@.container--range .track__range:after*/.container--range.sc-calcite-slider .track__range.sc-calcite-slider:after{position:absolute;width:100%;content:\"\";top:calc(var(--calcite-slider-full-handle-height) * 0.5 * -1);height:calc(var(--calcite-slider-handle-size) + var(--calcite-slider-handle-extension-height))}/*!@.tick*/.tick.sc-calcite-slider{position:absolute;height:0.25rem;width:0.125rem;border-width:1px;border-style:solid;background-color:var(--calcite-ui-border-input);border-color:var(--calcite-ui-foreground-1);top:-2px;pointer-events:none;-webkit-margin-start:calc(-1 * 0.125rem);margin-inline-start:calc(-1 * 0.125rem)}/*!@.tick--active*/.tick--active.sc-calcite-slider{background-color:var(--calcite-ui-brand)}/*!@.tick__label*/.tick__label.sc-calcite-slider{pointer-events:none;margin-top:0.875rem;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}/*!@.tick__label--min*/.tick__label--min.sc-calcite-slider{-webkit-transition:opacity var(--calcite-animation-timing);transition:opacity var(--calcite-animation-timing)}/*!@.tick__label--max*/.tick__label--max.sc-calcite-slider{-webkit-transition:opacity var(--calcite-internal-animation-timing-fast);transition:opacity var(--calcite-internal-animation-timing-fast)}/*!@:host([has-histogram][label-handles]) .tick__label--min, :host([has-histogram][label-handles]) .tick__label--max, :host([has-histogram][precise]) .tick__label--min, :host([has-histogram][precise]) .tick__label--max*/[has-histogram][label-handles].sc-calcite-slider-h .tick__label--min.sc-calcite-slider,[has-histogram][label-handles].sc-calcite-slider-h .tick__label--max.sc-calcite-slider,[has-histogram][precise].sc-calcite-slider-h .tick__label--min.sc-calcite-slider,[has-histogram][precise].sc-calcite-slider-h .tick__label--max.sc-calcite-slider{font-weight:var(--calcite-font-weight-normal);color:var(--calcite-ui-text-3)}/*!@.graph*/.graph.sc-calcite-slider{color:var(--calcite-ui-foreground-3);height:48px}/*!@:host([label-ticks][ticks]) .container*/[label-ticks][ticks].sc-calcite-slider-h .container.sc-calcite-slider{padding-bottom:calc(0.875rem + var(--calcite-slider-container-font-size))}/*!@:host([has-histogram]):host([precise][label-handles]) .container*/[has-histogram].sc-calcite-slider-h([precise][label-handles]).sc-calcite-slider-h .container.sc-calcite-slider{padding-bottom:calc(var(--calcite-slider-full-handle-height) + 1em)}/*!@:host([has-histogram]):host([label-handles]:not([precise])) .container*/[has-histogram].sc-calcite-slider-h([label-handles].sc-calcite-slider-h:not([precise])) .container.sc-calcite-slider{padding-bottom:calc(var(--calcite-slider-handle-size) * 0.5 + 1em)}/*!@:host([has-histogram]):host([precise]:not([label-handles])) .container*/[has-histogram].sc-calcite-slider-h([precise].sc-calcite-slider-h:not([label-handles])) .container.sc-calcite-slider{padding-bottom:var(--calcite-slider-full-handle-height)}/*!@:host(:not([has-histogram])):host([precise]:not([label-handles])) .container*/.sc-calcite-slider-h:not([has-histogram]).sc-calcite-slider-h([precise]:not([label-handles])) .container.sc-calcite-slider{padding-top:var(--calcite-slider-full-handle-height)}/*!@:host(:not([has-histogram])):host([precise]:not([label-handles])) .container--range*/.sc-calcite-slider-h:not([has-histogram]).sc-calcite-slider-h([precise]:not([label-handles])) .container--range.sc-calcite-slider{padding-bottom:var(--calcite-slider-full-handle-height)}/*!@:host(:not([has-histogram])):host([label-handles]:not([precise])) .container*/.sc-calcite-slider-h:not([has-histogram]).sc-calcite-slider-h([label-handles]:not([precise])) .container.sc-calcite-slider{padding-top:calc(var(--calcite-slider-full-handle-height) + 4px)}/*!@:host(:not([has-histogram])):host([label-handles][precise]) .container*/.sc-calcite-slider-h:not([has-histogram]).sc-calcite-slider-h([label-handles][precise]) .container.sc-calcite-slider{padding-top:calc(var(--calcite-slider-full-handle-height) + var(--calcite-slider-container-font-size) + 4px)}/*!@:host(:not([has-histogram])):host([label-handles][precise]) .container--range*/.sc-calcite-slider-h:not([has-histogram]).sc-calcite-slider-h([label-handles][precise]) .container--range.sc-calcite-slider{padding-bottom:calc(var(--calcite-slider-full-handle-height) + var(--calcite-slider-container-font-size) + 4px)}/*!@::slotted(input[slot=hidden-form-input])*/.sc-calcite-slider-s>input[slot=hidden-form-input]{bottom:0 !important;left:0 !important;margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;right:0 !important;top:0 !important;-webkit-transform:none !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}";

class Slider {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteSliderInput = createEvent(this, "calciteSliderInput", 7);
    this.calciteSliderChange = createEvent(this, "calciteSliderChange", 7);
    this.calciteSliderUpdate = createEvent(this, "calciteSliderUpdate", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** Disable and gray out the slider */
    this.disabled = false;
    /** Indicates if a histogram is present */
    this.hasHistogram = false;
    /** Label handles with their numeric value */
    this.labelHandles = false;
    /** Label tick marks with their numeric value. */
    this.labelTicks = false;
    /** Maximum selectable value */
    this.max = 100;
    /** Minimum selectable value */
    this.min = 0;
    /**
     * When true, the slider will display values from high to low.
     *
     * Note that this value will be ignored if the slider has an associated histogram.
     */
    this.mirrored = false;
    /** Use finer point for handles */
    this.precise = false;
    /**
     * When true, makes the component required for form-submission.
     */
    this.required = false;
    /** When true, enables snap selection along the step interval */
    this.snap = false;
    /** Interval to move on up/down keys */
    this.step = 1;
    /** Currently selected number (if single select) */
    this.value = null;
    /**
     * Specify the scale of the slider, defaults to m
     */
    this.scale = "m";
    this.guid = `calcite-slider-${guid()}`;
    this.isRange = false;
    this.activeProp = "value";
    this.minMaxValueRange = null;
    this.minValueDragRange = null;
    this.maxValueDragRange = null;
    this.tickValues = [];
    this.dragUpdate = (event) => {
      event.preventDefault();
      if (this.dragProp) {
        const value = this.translate(event.clientX || event.pageX);
        if (this.isRange && this.dragProp === "minMaxValue") {
          if (this.minValueDragRange && this.maxValueDragRange && this.minMaxValueRange) {
            const newMinValue = value - this.minValueDragRange;
            const newMaxValue = value + this.maxValueDragRange;
            if (newMaxValue <= this.max &&
              newMinValue >= this.min &&
              newMaxValue - newMinValue === this.minMaxValueRange) {
              this.minValue = this.clamp(newMinValue, "minValue");
              this.maxValue = this.clamp(newMaxValue, "maxValue");
            }
          }
          else {
            this.minValueDragRange = value - this.minValue;
            this.maxValueDragRange = this.maxValue - value;
            this.minMaxValueRange = this.maxValue - this.minValue;
          }
        }
        else {
          this.setValue(this.dragProp, this.clamp(value, this.dragProp));
        }
      }
    };
    this.dragEnd = (event) => {
      this.removeDragListeners();
      this.focusActiveHandle(event.clientX);
      if (this.lastDragPropValue != this[this.dragProp]) {
        this.emitChange();
      }
      this.dragProp = null;
      this.lastDragPropValue = null;
      this.minValueDragRange = null;
      this.maxValueDragRange = null;
      this.minMaxValueRange = null;
    };
    /**
     * Set the reference of the track Element
     * @internal
     * @param node
     */
    this.storeTrackRef = (node) => {
      this.trackEl = node;
    };
  }
  histogramWatcher(newHistogram) {
    this.hasHistogram = !!newHistogram;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    connectLabel(this);
    connectForm(this);
  }
  disconnectedCallback() {
    disconnectLabel(this);
    disconnectForm(this);
    this.removeDragListeners();
  }
  componentWillLoad() {
    this.isRange = !!(this.maxValue || this.maxValue === 0);
    this.tickValues = this.generateTickValues();
    this.value = this.clamp(this.value);
    afterConnectDefaultValueSet(this, this.value);
    if (this.snap) {
      this.value = this.getClosestStep(this.value);
    }
    if (this.histogram) {
      this.hasHistogram = true;
    }
  }
  componentDidRender() {
    if (this.labelHandles) {
      this.adjustHostObscuredHandleLabel("value");
      if (this.isRange) {
        this.adjustHostObscuredHandleLabel("minValue");
        if (!(this.precise && this.isRange && !this.hasHistogram)) {
          this.hyphenateCollidingRangeHandleLabels();
        }
      }
    }
    this.hideObscuredBoundingTickLabels();
    updateHostInteraction(this);
  }
  render() {
    const id = this.el.id || this.guid;
    const min = this.minValue || this.min;
    const max = this.maxValue || this.value;
    const maxProp = this.isRange ? "maxValue" : "value";
    const value = this[maxProp];
    const useMinValue = this.shouldUseMinValue();
    const minInterval = this.getUnitInterval(useMinValue ? this.minValue : min) * 100;
    const maxInterval = this.getUnitInterval(max) * 100;
    const mirror = this.shouldMirror();
    const leftThumbOffset = `${mirror ? 100 - minInterval : minInterval}%`;
    const rightThumbOffset = `${mirror ? maxInterval : 100 - maxInterval}%`;
    const handle = (hAsync("div", { "aria-disabled": this.disabled, "aria-label": this.isRange ? this.maxLabel : this.minLabel, "aria-orientation": "horizontal", "aria-valuemax": this.max, "aria-valuemin": this.min, "aria-valuenow": value, class: {
        thumb: true,
        "thumb--value": true,
        "thumb--active": this.lastDragProp !== "minMaxValue" && this.dragProp === maxProp
      }, onBlur: () => (this.activeProp = null), onFocus: () => (this.activeProp = maxProp), onPointerDown: () => this.dragStart(maxProp), ref: (el) => (this.maxHandle = el), role: "slider", style: { right: rightThumbOffset }, tabIndex: 0 }, hAsync("div", { class: "handle" })));
    const labeledHandle = (hAsync("div", { "aria-disabled": this.disabled, "aria-label": this.isRange ? this.maxLabel : this.minLabel, "aria-orientation": "horizontal", "aria-valuemax": this.max, "aria-valuemin": this.min, "aria-valuenow": value, class: {
        thumb: true,
        "thumb--value": true,
        "thumb--active": this.lastDragProp !== "minMaxValue" && this.dragProp === maxProp
      }, onBlur: () => (this.activeProp = null), onFocus: () => (this.activeProp = maxProp), onPointerDown: () => this.dragStart(maxProp), ref: (el) => (this.maxHandle = el), role: "slider", style: { right: rightThumbOffset }, tabIndex: 0 }, hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--value" }, value ? value.toLocaleString() : value), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--value static" }, value ? value.toLocaleString() : value), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--value transformed" }, value ? value.toLocaleString() : value), hAsync("div", { class: "handle" })));
    const histogramLabeledHandle = (hAsync("div", { "aria-disabled": this.disabled, "aria-label": this.isRange ? this.maxLabel : this.minLabel, "aria-orientation": "horizontal", "aria-valuemax": this.max, "aria-valuemin": this.min, "aria-valuenow": value, class: {
        thumb: true,
        "thumb--value": true,
        "thumb--active": this.lastDragProp !== "minMaxValue" && this.dragProp === maxProp
      }, onBlur: () => (this.activeProp = null), onFocus: () => (this.activeProp = maxProp), onPointerDown: () => this.dragStart(maxProp), ref: (el) => (this.maxHandle = el), role: "slider", style: { right: rightThumbOffset }, tabIndex: 0 }, hAsync("div", { class: "handle" }), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--value" }, value ? value.toLocaleString() : value), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--value static" }, value ? value.toLocaleString() : value), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--value transformed" }, value ? value.toLocaleString() : value)));
    const preciseHandle = (hAsync("div", { "aria-disabled": this.disabled, "aria-label": this.isRange ? this.maxLabel : this.minLabel, "aria-orientation": "horizontal", "aria-valuemax": this.max, "aria-valuemin": this.min, "aria-valuenow": value, class: {
        thumb: true,
        "thumb--value": true,
        "thumb--active": this.lastDragProp !== "minMaxValue" && this.dragProp === maxProp,
        "thumb--precise": true
      }, onBlur: () => (this.activeProp = null), onFocus: () => (this.activeProp = maxProp), onPointerDown: () => this.dragStart(maxProp), ref: (el) => (this.maxHandle = el), role: "slider", style: { right: rightThumbOffset }, tabIndex: 0 }, hAsync("div", { class: "handle" }), hAsync("div", { class: "handle-extension" })));
    const histogramPreciseHandle = (hAsync("div", { "aria-disabled": this.disabled, "aria-label": this.isRange ? this.maxLabel : this.minLabel, "aria-orientation": "horizontal", "aria-valuemax": this.max, "aria-valuemin": this.min, "aria-valuenow": value, class: {
        thumb: true,
        "thumb--value": true,
        "thumb--active": this.lastDragProp !== "minMaxValue" && this.dragProp === maxProp,
        "thumb--precise": true
      }, onBlur: () => (this.activeProp = null), onFocus: () => (this.activeProp = maxProp), onPointerDown: () => this.dragStart(maxProp), ref: (el) => (this.maxHandle = el), role: "slider", style: { right: rightThumbOffset }, tabIndex: 0 }, hAsync("div", { class: "handle-extension" }), hAsync("div", { class: "handle" })));
    const labeledPreciseHandle = (hAsync("div", { "aria-disabled": this.disabled, "aria-label": this.isRange ? this.maxLabel : this.minLabel, "aria-orientation": "horizontal", "aria-valuemax": this.max, "aria-valuemin": this.min, "aria-valuenow": value, class: {
        thumb: true,
        "thumb--value": true,
        "thumb--active": this.lastDragProp !== "minMaxValue" && this.dragProp === maxProp,
        "thumb--precise": true
      }, onBlur: () => (this.activeProp = null), onFocus: () => (this.activeProp = maxProp), onPointerDown: () => this.dragStart(maxProp), ref: (el) => (this.maxHandle = el), role: "slider", style: { right: rightThumbOffset }, tabIndex: 0 }, hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--value" }, value ? value.toLocaleString() : value), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--value static" }, value ? value.toLocaleString() : value), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--value transformed" }, value ? value.toLocaleString() : value), hAsync("div", { class: "handle" }), hAsync("div", { class: "handle-extension" })));
    const histogramLabeledPreciseHandle = (hAsync("div", { "aria-disabled": this.disabled, "aria-label": this.isRange ? this.maxLabel : this.minLabel, "aria-orientation": "horizontal", "aria-valuemax": this.max, "aria-valuemin": this.min, "aria-valuenow": value, class: {
        thumb: true,
        "thumb--value": true,
        "thumb--active": this.lastDragProp !== "minMaxValue" && this.dragProp === maxProp,
        "thumb--precise": true
      }, onBlur: () => (this.activeProp = null), onFocus: () => (this.activeProp = maxProp), onPointerDown: () => this.dragStart(maxProp), ref: (el) => (this.maxHandle = el), role: "slider", style: { right: rightThumbOffset }, tabIndex: 0 }, hAsync("div", { class: "handle-extension" }), hAsync("div", { class: "handle" }), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--value" }, value ? value.toLocaleString() : value), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--value static" }, value ? value.toLocaleString() : value), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--value transformed" }, value ? value.toLocaleString() : value)));
    const minHandle = (hAsync("div", { "aria-disabled": this.disabled, "aria-label": this.minLabel, "aria-orientation": "horizontal", "aria-valuemax": this.max, "aria-valuemin": this.min, "aria-valuenow": this.minValue, class: {
        thumb: true,
        "thumb--minValue": true,
        "thumb--active": this.dragProp === "minValue"
      }, onBlur: () => (this.activeProp = null), onFocus: () => (this.activeProp = "minValue"), onPointerDown: () => this.dragStart("minValue"), ref: (el) => (this.minHandle = el), role: "slider", style: { left: leftThumbOffset }, tabIndex: 0 }, hAsync("div", { class: "handle" })));
    const minLabeledHandle = (hAsync("div", { "aria-disabled": this.disabled, "aria-label": this.minLabel, "aria-orientation": "horizontal", "aria-valuemax": this.max, "aria-valuemin": this.min, "aria-valuenow": this.minValue, class: {
        thumb: true,
        "thumb--minValue": true,
        "thumb--active": this.dragProp === "minValue"
      }, onBlur: () => (this.activeProp = null), onFocus: () => (this.activeProp = "minValue"), onPointerDown: () => this.dragStart("minValue"), ref: (el) => (this.minHandle = el), role: "slider", style: { left: leftThumbOffset }, tabIndex: 0 }, hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--minValue" }, this.minValue && this.minValue.toLocaleString()), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--minValue static" }, this.minValue && this.minValue.toLocaleString()), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--minValue transformed" }, this.minValue && this.minValue.toLocaleString()), hAsync("div", { class: "handle" })));
    const minHistogramLabeledHandle = (hAsync("div", { "aria-disabled": this.disabled, "aria-label": this.minLabel, "aria-orientation": "horizontal", "aria-valuemax": this.max, "aria-valuemin": this.min, "aria-valuenow": this.minValue, class: {
        thumb: true,
        "thumb--minValue": true,
        "thumb--active": this.dragProp === "minValue"
      }, onBlur: () => (this.activeProp = null), onFocus: () => (this.activeProp = "minValue"), onPointerDown: () => this.dragStart("minValue"), ref: (el) => (this.minHandle = el), role: "slider", style: { left: leftThumbOffset }, tabIndex: 0 }, hAsync("div", { class: "handle" }), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--minValue" }, this.minValue && this.minValue.toLocaleString()), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--minValue static" }, this.minValue && this.minValue.toLocaleString()), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--minValue transformed" }, this.minValue && this.minValue.toLocaleString())));
    const minPreciseHandle = (hAsync("div", { "aria-disabled": this.disabled, "aria-label": this.minLabel, "aria-orientation": "horizontal", "aria-valuemax": this.max, "aria-valuemin": this.min, "aria-valuenow": this.minValue, class: {
        thumb: true,
        "thumb--minValue": true,
        "thumb--active": this.dragProp === "minValue",
        "thumb--precise": true
      }, onBlur: () => (this.activeProp = null), onFocus: () => (this.activeProp = "minValue"), onPointerDown: () => this.dragStart("minValue"), ref: (el) => (this.minHandle = el), role: "slider", style: { left: leftThumbOffset }, tabIndex: 0 }, hAsync("div", { class: "handle-extension" }), hAsync("div", { class: "handle" })));
    const minLabeledPreciseHandle = (hAsync("div", { "aria-disabled": this.disabled, "aria-label": this.minLabel, "aria-orientation": "horizontal", "aria-valuemax": this.max, "aria-valuemin": this.min, "aria-valuenow": this.minValue, class: {
        thumb: true,
        "thumb--minValue": true,
        "thumb--active": this.dragProp === "minValue",
        "thumb--precise": true
      }, onBlur: () => (this.activeProp = null), onFocus: () => (this.activeProp = "minValue"), onPointerDown: () => this.dragStart("minValue"), ref: (el) => (this.minHandle = el), role: "slider", style: { left: leftThumbOffset }, tabIndex: 0 }, hAsync("div", { class: "handle-extension" }), hAsync("div", { class: "handle" }), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--minValue" }, this.minValue && this.minValue.toLocaleString()), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--minValue static" }, this.minValue && this.minValue.toLocaleString()), hAsync("span", { "aria-hidden": "true", class: "handle__label handle__label--minValue transformed" }, this.minValue && this.minValue.toLocaleString())));
    return (hAsync(Host, { id: id, onTouchStart: this.handleTouchStart }, hAsync("div", { class: {
        ["container"]: true,
        ["container--range"]: this.isRange,
        [`scale--${this.scale}`]: true
      } }, this.renderGraph(), hAsync("div", { class: "track", ref: this.storeTrackRef }, hAsync("div", { class: "track__range", onPointerDown: () => this.dragStart("minMaxValue"), style: {
        left: `${mirror ? 100 - maxInterval : minInterval}%`,
        right: `${mirror ? minInterval : 100 - maxInterval}%`
      } }), hAsync("div", { class: "ticks" }, this.tickValues.map((tick) => {
      const tickOffset = `${this.getUnitInterval(tick) * 100}%`;
      let activeTicks = tick >= min && tick <= max;
      if (useMinValue) {
        activeTicks = tick >= this.minValue && tick <= this.maxValue;
      }
      return (hAsync("span", { class: {
          tick: true,
          "tick--active": activeTicks
        }, style: {
          left: mirror ? "" : tickOffset,
          right: mirror ? tickOffset : ""
        } }, this.renderTickLabel(tick)));
    }))), hAsync("div", { class: "thumb-container" }, !this.precise && !this.labelHandles && this.isRange && minHandle, !this.hasHistogram &&
      !this.precise &&
      this.labelHandles &&
      this.isRange &&
      minLabeledHandle, this.precise && !this.labelHandles && this.isRange && minPreciseHandle, this.precise && this.labelHandles && this.isRange && minLabeledPreciseHandle, this.hasHistogram &&
      !this.precise &&
      this.labelHandles &&
      this.isRange &&
      minHistogramLabeledHandle, !this.precise && !this.labelHandles && handle, !this.hasHistogram && !this.precise && this.labelHandles && labeledHandle, !this.hasHistogram && this.precise && !this.labelHandles && preciseHandle, this.hasHistogram && this.precise && !this.labelHandles && histogramPreciseHandle, !this.hasHistogram && this.precise && this.labelHandles && labeledPreciseHandle, this.hasHistogram && !this.precise && this.labelHandles && histogramLabeledHandle, this.hasHistogram &&
      this.precise &&
      this.labelHandles &&
      histogramLabeledPreciseHandle, hAsync(HiddenFormInputSlot, { component: this })))));
  }
  renderGraph() {
    return this.histogram ? (hAsync("calcite-graph", { class: "graph", colorStops: this.histogramStops, data: this.histogram, highlightMax: this.isRange ? this.maxValue : this.value, highlightMin: this.isRange ? this.minValue : this.min, max: this.max, min: this.min })) : null;
  }
  renderTickLabel(tick) {
    const isMinTickLabel = tick === this.min;
    const isMaxTickLabel = tick === this.max;
    const tickLabel = (hAsync("span", { class: {
        tick__label: true,
        "tick__label--min": isMinTickLabel,
        "tick__label--max": isMaxTickLabel
      } }, tick.toLocaleString()));
    if (this.labelTicks && !this.hasHistogram && !this.isRange) {
      return tickLabel;
    }
    if (this.labelTicks &&
      !this.hasHistogram &&
      this.isRange &&
      !this.precise &&
      !this.labelHandles) {
      return tickLabel;
    }
    if (this.labelTicks &&
      !this.hasHistogram &&
      this.isRange &&
      !this.precise &&
      this.labelHandles) {
      return tickLabel;
    }
    if (this.labelTicks &&
      !this.hasHistogram &&
      this.isRange &&
      this.precise &&
      (isMinTickLabel || isMaxTickLabel)) {
      return tickLabel;
    }
    if (this.labelTicks && this.hasHistogram && !this.precise && !this.labelHandles) {
      return tickLabel;
    }
    if (this.labelTicks &&
      this.hasHistogram &&
      this.precise &&
      !this.labelHandles &&
      (isMinTickLabel || isMaxTickLabel)) {
      return tickLabel;
    }
    if (this.labelTicks &&
      this.hasHistogram &&
      !this.precise &&
      this.labelHandles &&
      (isMinTickLabel || isMaxTickLabel)) {
      return tickLabel;
    }
    if (this.labelTicks &&
      this.hasHistogram &&
      this.precise &&
      this.labelHandles &&
      (isMinTickLabel || isMaxTickLabel)) {
      return tickLabel;
    }
    return null;
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  keyDownHandler(event) {
    const mirror = this.shouldMirror();
    const { activeProp, max, min, pageStep, step } = this;
    const value = this[activeProp];
    const key = event.key;
    if (key === "Enter" || key === " ") {
      event.preventDefault();
      return;
    }
    let adjustment;
    if (key === "ArrowUp" || key === "ArrowRight") {
      const directionFactor = mirror && key === "ArrowRight" ? -1 : 1;
      adjustment = value + step * directionFactor;
    }
    else if (key === "ArrowDown" || key === "ArrowLeft") {
      const directionFactor = mirror && key === "ArrowLeft" ? -1 : 1;
      adjustment = value - step * directionFactor;
    }
    else if (key === "PageUp") {
      if (pageStep) {
        adjustment = value + pageStep;
      }
    }
    else if (key === "PageDown") {
      if (pageStep) {
        adjustment = value - pageStep;
      }
    }
    else if (key === "Home") {
      adjustment = min;
    }
    else if (key === "End") {
      adjustment = max;
    }
    if (isNaN(adjustment)) {
      return;
    }
    event.preventDefault();
    const fixedDecimalAdjustment = Number(adjustment.toFixed(decimalPlaces(step)));
    this.setValue(activeProp, this.clamp(fixedDecimalAdjustment, activeProp));
  }
  clickHandler(event) {
    this.focusActiveHandle(event.clientX);
  }
  pointerDownHandler(event) {
    const x = event.clientX || event.pageX;
    const position = this.translate(x);
    let prop = "value";
    if (this.isRange) {
      const inRange = position >= this.minValue && position <= this.maxValue;
      if (inRange && this.lastDragProp === "minMaxValue") {
        prop = "minMaxValue";
      }
      else {
        const closerToMax = Math.abs(this.maxValue - position) < Math.abs(this.minValue - position);
        prop = closerToMax || position > this.maxValue ? "maxValue" : "minValue";
      }
    }
    this.lastDragPropValue = this[prop];
    this.dragStart(prop);
    const isThumbActive = this.el.shadowRoot.querySelector(".thumb:active");
    if (!isThumbActive) {
      this.setValue(prop, this.clamp(position, prop));
    }
  }
  handleTouchStart(event) {
    // needed to prevent extra click at the end of a handle drag
    event.preventDefault();
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    const handle = this.minHandle ? this.minHandle : this.maxHandle;
    handle.focus();
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  onLabelClick() {
    this.setFocus();
  }
  shouldMirror() {
    return this.mirrored && !this.hasHistogram;
  }
  shouldUseMinValue() {
    if (!this.isRange) {
      return false;
    }
    return ((this.hasHistogram && this.maxValue === 0) || (!this.hasHistogram && this.minValue === 0));
  }
  generateTickValues() {
    const ticks = [];
    let current = this.min;
    while (this.ticks && current < this.max + this.ticks) {
      ticks.push(Math.min(current, this.max));
      current = current + this.ticks;
    }
    return ticks;
  }
  dragStart(prop) {
    this.dragProp = prop;
    this.lastDragProp = this.dragProp;
    this.activeProp = prop;
    document.addEventListener("pointermove", this.dragUpdate);
    document.addEventListener("pointerup", this.dragEnd);
    document.addEventListener("pointercancel", this.dragEnd);
  }
  focusActiveHandle(valueX) {
    switch (this.dragProp) {
      case "minValue":
        this.minHandle.focus();
        break;
      case "maxValue":
        this.maxHandle.focus();
        break;
      case "minMaxValue":
        this.getClosestHandle(valueX).focus();
        break;
    }
  }
  emitInput() {
    this.calciteSliderInput.emit();
    this.calciteSliderUpdate.emit();
  }
  emitChange() {
    this.calciteSliderChange.emit();
  }
  removeDragListeners() {
    document.removeEventListener("pointermove", this.dragUpdate);
    document.removeEventListener("pointerup", this.dragEnd);
    document.removeEventListener("pointercancel", this.dragEnd);
  }
  /**
   * Set the prop value if changed at the component level
   * @param valueProp
   * @param value
   */
  setValue(valueProp, value) {
    const oldValue = this[valueProp];
    const valueChanged = oldValue !== value;
    if (!valueChanged) {
      return;
    }
    this[valueProp] = value;
    const dragging = this.dragProp;
    if (!dragging) {
      this.emitChange();
    }
    this.emitInput();
  }
  /**
   * If number is outside range, constrain to min or max
   * @internal
   */
  clamp(value, prop) {
    value = clamp(value, this.min, this.max);
    // ensure that maxValue and minValue don't swap positions
    if (prop === "maxValue") {
      value = Math.max(value, this.minValue);
    }
    if (prop === "minValue") {
      value = Math.min(value, this.maxValue);
    }
    return value;
  }
  /**
   * Translate a pixel position to value along the range
   * @internal
   */
  translate(x) {
    const range = this.max - this.min;
    const { left, width } = this.trackEl.getBoundingClientRect();
    const percent = (x - left) / width;
    const mirror = this.shouldMirror();
    const clampedValue = this.clamp(this.min + range * (mirror ? 1 - percent : percent));
    let value = Number(clampedValue.toFixed(decimalPlaces(this.step)));
    if (this.snap && this.step) {
      value = this.getClosestStep(value);
    }
    return value;
  }
  /**
   * Get closest allowed value along stepped values
   * @internal
   */
  getClosestStep(num) {
    num = Number(this.clamp(num).toFixed(decimalPlaces(this.step)));
    if (this.step) {
      const step = Math.round(num / this.step) * this.step;
      num = Number(this.clamp(step).toFixed(decimalPlaces(this.step)));
    }
    return num;
  }
  getClosestHandle(valueX) {
    return this.getDistanceX(this.maxHandle, valueX) > this.getDistanceX(this.minHandle, valueX)
      ? this.minHandle
      : this.maxHandle;
  }
  getDistanceX(el, valueX) {
    return Math.abs(el.getBoundingClientRect().left - valueX);
  }
  getFontSizeForElement(element) {
    return Number(window.getComputedStyle(element).getPropertyValue("font-size").match(/\d+/)[0]);
  }
  /**
   * Get position of value along range as fractional value
   * @return {number} number in the unit interval [0,1]
   * @internal
   */
  getUnitInterval(num) {
    num = this.clamp(num);
    const range = this.max - this.min;
    return (num - this.min) / range;
  }
  adjustHostObscuredHandleLabel(name) {
    const label = this.el.shadowRoot.querySelector(`.handle__label--${name}`);
    const labelStatic = this.el.shadowRoot.querySelector(`.handle__label--${name}.static`);
    const labelTransformed = this.el.shadowRoot.querySelector(`.handle__label--${name}.transformed`);
    const labelStaticBounds = labelStatic.getBoundingClientRect();
    const labelStaticOffset = this.getHostOffset(labelStaticBounds.left, labelStaticBounds.right);
    label.style.transform = `translateX(${labelStaticOffset}px)`;
    labelTransformed.style.transform = `translateX(${labelStaticOffset}px)`;
  }
  hyphenateCollidingRangeHandleLabels() {
    const { shadowRoot } = this.el;
    const mirror = this.shouldMirror();
    const leftModifier = mirror ? "value" : "minValue";
    const rightModifier = mirror ? "minValue" : "value";
    const leftValueLabel = shadowRoot.querySelector(`.handle__label--${leftModifier}`);
    const leftValueLabelStatic = shadowRoot.querySelector(`.handle__label--${leftModifier}.static`);
    const leftValueLabelTransformed = shadowRoot.querySelector(`.handle__label--${leftModifier}.transformed`);
    const leftValueLabelStaticHostOffset = this.getHostOffset(leftValueLabelStatic.getBoundingClientRect().left, leftValueLabelStatic.getBoundingClientRect().right);
    const rightValueLabel = shadowRoot.querySelector(`.handle__label--${rightModifier}`);
    const rightValueLabelStatic = shadowRoot.querySelector(`.handle__label--${rightModifier}.static`);
    const rightValueLabelTransformed = shadowRoot.querySelector(`.handle__label--${rightModifier}.transformed`);
    const rightValueLabelStaticHostOffset = this.getHostOffset(rightValueLabelStatic.getBoundingClientRect().left, rightValueLabelStatic.getBoundingClientRect().right);
    const labelFontSize = this.getFontSizeForElement(leftValueLabel);
    const labelTransformedOverlap = this.getRangeLabelOverlap(leftValueLabelTransformed, rightValueLabelTransformed);
    const hyphenLabel = leftValueLabel;
    const labelOffset = labelFontSize / 2;
    if (labelTransformedOverlap > 0) {
      hyphenLabel.classList.add("hyphen", "hyphen--wrap");
      if (rightValueLabelStaticHostOffset === 0 && leftValueLabelStaticHostOffset === 0) {
        // Neither handle overlaps the host boundary
        let leftValueLabelTranslate = labelTransformedOverlap / 2 - labelOffset;
        leftValueLabelTranslate =
          Math.sign(leftValueLabelTranslate) === -1
            ? Math.abs(leftValueLabelTranslate)
            : -leftValueLabelTranslate;
        const leftValueLabelTransformedHostOffset = this.getHostOffset(leftValueLabelTransformed.getBoundingClientRect().left +
          leftValueLabelTranslate -
          labelOffset, leftValueLabelTransformed.getBoundingClientRect().right +
          leftValueLabelTranslate -
          labelOffset);
        let rightValueLabelTranslate = labelTransformedOverlap / 2;
        const rightValueLabelTransformedHostOffset = this.getHostOffset(rightValueLabelTransformed.getBoundingClientRect().left + rightValueLabelTranslate, rightValueLabelTransformed.getBoundingClientRect().right + rightValueLabelTranslate);
        if (leftValueLabelTransformedHostOffset !== 0) {
          leftValueLabelTranslate += leftValueLabelTransformedHostOffset;
          rightValueLabelTranslate += leftValueLabelTransformedHostOffset;
        }
        if (rightValueLabelTransformedHostOffset !== 0) {
          leftValueLabelTranslate += rightValueLabelTransformedHostOffset;
          rightValueLabelTranslate += rightValueLabelTransformedHostOffset;
        }
        leftValueLabel.style.transform = `translateX(${leftValueLabelTranslate}px)`;
        leftValueLabelTransformed.style.transform = `translateX(${leftValueLabelTranslate - labelOffset}px)`;
        rightValueLabel.style.transform = `translateX(${rightValueLabelTranslate}px)`;
        rightValueLabelTransformed.style.transform = `translateX(${rightValueLabelTranslate}px)`;
      }
      else if (leftValueLabelStaticHostOffset > 0 || rightValueLabelStaticHostOffset > 0) {
        // labels overlap host boundary on the left side
        leftValueLabel.style.transform = `translateX(${leftValueLabelStaticHostOffset + labelOffset}px)`;
        rightValueLabel.style.transform = `translateX(${labelTransformedOverlap + rightValueLabelStaticHostOffset}px)`;
        rightValueLabelTransformed.style.transform = `translateX(${labelTransformedOverlap + rightValueLabelStaticHostOffset}px)`;
      }
      else if (leftValueLabelStaticHostOffset < 0 || rightValueLabelStaticHostOffset < 0) {
        // labels overlap host boundary on the right side
        let leftValueLabelTranslate = Math.abs(leftValueLabelStaticHostOffset) + labelTransformedOverlap - labelOffset;
        leftValueLabelTranslate =
          Math.sign(leftValueLabelTranslate) === -1
            ? Math.abs(leftValueLabelTranslate)
            : -leftValueLabelTranslate;
        leftValueLabel.style.transform = `translateX(${leftValueLabelTranslate}px)`;
        leftValueLabelTransformed.style.transform = `translateX(${leftValueLabelTranslate - labelOffset}px)`;
      }
    }
    else {
      hyphenLabel.classList.remove("hyphen", "hyphen--wrap");
      leftValueLabel.style.transform = `translateX(${leftValueLabelStaticHostOffset}px)`;
      leftValueLabelTransformed.style.transform = `translateX(${leftValueLabelStaticHostOffset}px)`;
      rightValueLabel.style.transform = `translateX(${rightValueLabelStaticHostOffset}px)`;
      rightValueLabelTransformed.style.transform = `translateX(${rightValueLabelStaticHostOffset}px)`;
    }
  }
  /**
   * Hides bounding tick labels that are obscured by either handle.
   */
  hideObscuredBoundingTickLabels() {
    if (!this.hasHistogram && !this.isRange && !this.labelHandles && !this.precise) {
      return;
    }
    if (!this.hasHistogram && !this.isRange && this.labelHandles && !this.precise) {
      return;
    }
    if (!this.hasHistogram && !this.isRange && !this.labelHandles && this.precise) {
      return;
    }
    if (!this.hasHistogram && !this.isRange && this.labelHandles && this.precise) {
      return;
    }
    if (!this.hasHistogram && this.isRange && !this.precise) {
      return;
    }
    if (this.hasHistogram && !this.precise && !this.labelHandles) {
      return;
    }
    const minHandle = this.el.shadowRoot.querySelector(".thumb--minValue");
    const maxHandle = this.el.shadowRoot.querySelector(".thumb--value");
    const minTickLabel = this.el.shadowRoot.querySelector(".tick__label--min");
    const maxTickLabel = this.el.shadowRoot.querySelector(".tick__label--max");
    if (!minHandle && maxHandle && minTickLabel && maxTickLabel) {
      minTickLabel.style.opacity = this.isMinTickLabelObscured(minTickLabel, maxHandle) ? "0" : "1";
      maxTickLabel.style.opacity = this.isMaxTickLabelObscured(maxTickLabel, maxHandle) ? "0" : "1";
    }
    if (minHandle && maxHandle && minTickLabel && maxTickLabel) {
      minTickLabel.style.opacity =
        this.isMinTickLabelObscured(minTickLabel, minHandle) ||
          this.isMinTickLabelObscured(minTickLabel, maxHandle)
          ? "0"
          : "1";
      maxTickLabel.style.opacity =
        this.isMaxTickLabelObscured(maxTickLabel, minHandle) ||
          (this.isMaxTickLabelObscured(maxTickLabel, maxHandle) && this.hasHistogram)
          ? "0"
          : "1";
    }
  }
  /**
   * Returns an integer representing the number of pixels to offset on the left or right side based on desired position behavior.
   * @internal
   */
  getHostOffset(leftBounds, rightBounds) {
    const hostBounds = this.el.getBoundingClientRect();
    const buffer = 7;
    if (leftBounds + buffer < hostBounds.left) {
      return hostBounds.left - leftBounds - buffer;
    }
    if (rightBounds - buffer > hostBounds.right) {
      return -(rightBounds - hostBounds.right) + buffer;
    }
    return 0;
  }
  /**
   * Returns an integer representing the number of pixels that the two given span elements are overlapping, taking into account
   * a space in between the two spans equal to the font-size set on them to account for the space needed to render a hyphen.
   * @param leftLabel
   * @param rightLabel
   */
  getRangeLabelOverlap(leftLabel, rightLabel) {
    const leftLabelBounds = leftLabel.getBoundingClientRect();
    const rightLabelBounds = rightLabel.getBoundingClientRect();
    const leftLabelFontSize = this.getFontSizeForElement(leftLabel);
    const rangeLabelOverlap = leftLabelBounds.right + leftLabelFontSize - rightLabelBounds.left;
    return Math.max(rangeLabelOverlap, 0);
  }
  /**
   * Returns a boolean value representing if the minLabel span element is obscured (being overlapped) by the given handle div element.
   * @param minLabel
   * @param handle
   */
  isMinTickLabelObscured(minLabel, handle) {
    const minLabelBounds = minLabel.getBoundingClientRect();
    const handleBounds = handle.getBoundingClientRect();
    return intersects(minLabelBounds, handleBounds);
  }
  /**
   * Returns a boolean value representing if the maxLabel span element is obscured (being overlapped) by the given handle div element.
   * @param maxLabel
   * @param handle
   */
  isMaxTickLabelObscured(maxLabel, handle) {
    const maxLabelBounds = maxLabel.getBoundingClientRect();
    const handleBounds = handle.getBoundingClientRect();
    return intersects(maxLabelBounds, handleBounds);
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "histogram": ["histogramWatcher"]
  }; }
  static get style() { return sliderCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-slider",
    "$members$": {
      "disabled": [516],
      "hasHistogram": [1540, "has-histogram"],
      "histogram": [16],
      "histogramStops": [16],
      "labelHandles": [516, "label-handles"],
      "labelTicks": [516, "label-ticks"],
      "max": [514],
      "maxLabel": [1, "max-label"],
      "maxValue": [1026, "max-value"],
      "min": [514],
      "minLabel": [1, "min-label"],
      "minValue": [1026, "min-value"],
      "mirrored": [516],
      "name": [513],
      "pageStep": [2, "page-step"],
      "precise": [4],
      "required": [516],
      "snap": [4],
      "step": [2],
      "ticks": [2],
      "value": [1538],
      "scale": [1],
      "activeProp": [32],
      "minMaxValueRange": [32],
      "minValueDragRange": [32],
      "maxValueDragRange": [32],
      "tickValues": [32],
      "setFocus": [64]
    },
    "$listeners$": [[0, "keydown", "keyDownHandler"], [0, "click", "clickHandler"], [1, "pointerdown", "pointerDownHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["hasHistogram", "has-histogram"], ["labelHandles", "label-handles"], ["labelTicks", "label-ticks"], ["max", "max"], ["min", "min"], ["mirrored", "mirrored"], ["name", "name"], ["required", "required"], ["value", "value"]]
  }; }
}

/** @license
 * Copyright 2021 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Resource update types
 */
/* eslint-disable no-unused-vars */
var EUpdateType;
(function (EUpdateType) {
  EUpdateType[EUpdateType["Add"] = 0] = "Add";
  EUpdateType[EUpdateType["Update"] = 1] = "Update";
  EUpdateType[EUpdateType["Remove"] = 2] = "Remove";
  EUpdateType[EUpdateType["None"] = 3] = "None";
})(EUpdateType || (EUpdateType = {}));

/** @license
 * Copyright 2021 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//--------------------------------------------------------------------------
//
//  Public Functions
//
//--------------------------------------------------------------------------
/**
 * Sort the solution items
 *
 * @param templates a list of item templates from the solution
 *
 * @returns a sorted list of solution items
 */
function getInventoryItems(templates) {
  const hierarchy = getItemHierarchy(templates);
  const ids = hierarchy.reduce((prev, cur) => {
    prev.push(cur.id);
    return prev;
  }, []);
  return templates.reduce((prev, cur) => {
    if (ids.indexOf(cur.itemId) > -1) {
      const hierarchyItems = hierarchy.filter(hi => hi.id === cur.itemId);
      prev.push(_getItemFromTemplate(cur, templates, hierarchyItems[0].dependencies));
    }
    return prev;
  }, []);
}
/**
 * Create item hierarchy that will avoid issues from cylical dependencies
 *
 * @param templates a list of item templates from the solution
 *
 * @returns a hierarchy for item and item dependency display
 */
function getItemHierarchy(templates) {
  const hierarchy = [];
  // Get the template specified by id out of a list of templates
  function getTemplateInSolution(templates, id) {
    const iTemplate = templates.findIndex((template) => id === template.itemId);
    return iTemplate >= 0 ? templates[iTemplate] : null;
  }
  // Hierarchically list the dependencies of specified node
  function traceItemId(id, accumulatedHierarchy, alreadyVisitedIds = []) {
    // Get the dependencies of the node
    const template = getTemplateInSolution(templates, id);
    /* istanbul ignore else */
    if (template) {
      const templateEntry = {
        id,
        dependencies: []
      };
      // Visit each dependency, but only if this template is not in the alreadyVisitedIds list to avoid infinite loops
      /* istanbul ignore else */
      if (alreadyVisitedIds.indexOf(id) < 0) {
        // Add dependency to alreadyVisitedIds list
        alreadyVisitedIds.push(id);
        template.dependencies.forEach((dependencyId) => {
          // Remove dependency from list of templates to visit in the top-level loop
          const iDependencyTemplate = templateItemIds.indexOf(dependencyId);
          /* istanbul ignore else */
          if (iDependencyTemplate >= 0) {
            templateItemIds.splice(iDependencyTemplate, 1);
          }
          traceItemId(dependencyId, templateEntry.dependencies, alreadyVisitedIds);
        });
      }
      accumulatedHierarchy.push(templateEntry);
    }
  }
  // Start with top-level nodes and add in the rest of the nodes to catch cycles without top-level nodes
  let templateItemIds = _getTopLevelItemIds(templates);
  const otherItems = templates
    .filter((template) => templateItemIds.indexOf(template.itemId) < 0) // only keep non-top-level nodes
    .sort((a, b) => b.dependencies.length - a.dependencies.length); // sort so that nodes with more dependencies come first--reduces stubs
  templateItemIds = templateItemIds.concat(otherItems.map((template) => template.itemId));
  // Step through the list of nodes; we'll also remove nodes as we visit them
  let itemId = templateItemIds.shift();
  while (typeof itemId !== "undefined") {
    traceItemId(itemId, hierarchy);
    itemId = templateItemIds.shift();
  }
  return hierarchy;
}
/**
 * Explore the solution item templates for variables we will allow users to insert at runtime
 *
 * @param templates a list of item templates from the solution
 * @param translations nls translation object
 *
 * @returns a list of variables from the solution item templates
 */
function getSolutionVariables(templates, translations) {
  const vars = [];
  templates.forEach(t => {
    const item = {
      id: t.itemId,
      title: t.item.title || t.item.name,
      type: t.type,
      value: undefined,
      dependencies: [{
          id: t.itemId,
          title: translations.itemId,
          value: `{{${t.itemId}.itemId}}`,
        }]
    };
    if (t.item.url) {
      item.dependencies.push({
        id: t.itemId,
        title: translations.url,
        value: `{{${t.itemId}.url}}`,
      });
    }
    if (t.type === "Feature Service") {
      // TODO need to set source service name var...
      // TODO need to set soure service shape field name "{{d05b3cf1ffcb4a4fa677627dfb18609e.name}}.Shape"
      item.dependencies.push({
        id: t.itemId,
        title: translations.solutionExtent,
        value: `{{${t.itemId}.solutionExtent}}`,
      });
      _addLayersOrTables(t.properties.layers || [], item, t, translations);
      _addLayersOrTables(t.properties.tables || [], item, t, translations);
    }
    vars.push(item);
  });
  return vars;
}
/**
 * Set key organization variables we will allow users to insert at runtime
 *
 * @param translations nls translation object
 *
 * @returns a list of variables for the organization
 */
function getOrganizationVariables(translations) {
  const orgVars = [{
      id: "",
      title: translations.geocodeUrl,
      value: "{{organization.helperServices.geocode:getDefaultLocatorURL}}"
    }, {
      id: "",
      title: translations.geometryUrl,
      value: "{{organization.helperServices.geometry.url}}"
    }, {
      id: "",
      title: translations.portalBaseUrl,
      value: "{{portalBaseUrl}}"
    }, {
      id: "",
      title: translations.routeUrl,
      value: "{{organization.helperServices.route.url}}"
    }, {
      id: "",
      title: translations.solutionItemExtent,
      value: "{{solutionItemExtent}}"
    }];
  return orgVars;
}
/**
 * Create and store text models for the editor as well as other key values such as the original values
 * that can be used to clear any temp edits.
 *
 * @param templates a list of item templates from the solution
 *
 * @returns a promise that resolves a list of models and key values
 */
function getModels(templates, authentication, solutionId) {
  const ids = [];
  const models = {};
  const monacoDefined = typeof (monaco) !== "undefined";
  templates.forEach(t => {
    var _a, _b, _c, _d;
    if (ids.indexOf(t.itemId) < 0) {
      ids.push(t.itemId);
      const resourceFilePaths = _getResourceFilePaths(solutionId, t, authentication);
      models[t.itemId] = {
        dataModel: monacoDefined ? monaco.editor.createModel(JSON.stringify(t.data, null, '\t'), "json") : undefined,
        dataOriginValue: JSON.stringify(t.data),
        propsModel: monacoDefined ? monaco.editor.createModel(JSON.stringify(t.properties, null, '\t'), "json") : undefined,
        propsOriginValue: JSON.stringify(t.properties),
        propsDiffOriginValue: JSON.stringify(t.properties),
        state: undefined,
        shareInfo: undefined,
        isEditing: false,
        itemId: t.itemId,
        updateItemValues: {},
        originalItemValues: {},
        name: (_a = t.item) === null || _a === void 0 ? void 0 : _a.name,
        title: (_b = t.item) === null || _b === void 0 ? void 0 : _b.title,
        type: t.type,
        itemOriginValue: JSON.stringify(t.item),
        spatialReference: (_d = (_c = t.properties) === null || _c === void 0 ? void 0 : _c.service) === null || _d === void 0 ? void 0 : _d.spatialReference,
        resources: t.resources,
        // will contain updates
        resourceFilePaths: resourceFilePaths,
        // could be used to compare
        sourceResourceFilePaths: cloneObject(resourceFilePaths),
        thumbnailNew: undefined,
        thumbnailOrigin: undefined
      };
    }
  });
  return _getThumbnails(models, authentication);
}
/**
 * Gets a list of Feature Services that are not views along with an enabled property that indicates
 * if the service currently uses a spatial reference variable.
 *
 * @param templates a list of item templates from the solution
 *
 * @returns a list of feature service names and an enabled property to indicate
 * if they currently use a spatial reference variable.
 */
function getFeatureServices(templates) {
  return templates.reduce((prev, cur) => {
    const name = cur.item.title || cur.item.name;
    if (cur.type === "Feature Service" &&
      cur.item.typeKeywords.indexOf("View Service") < 0 &&
      prev.indexOf(name) < 0) {
      const wkid = getProp(cur, "properties.service.spatialReference.wkid");
      prev.push({ name, enabled: wkid.toString().startsWith("{{params.wkid||") });
    }
    return prev;
  }, []);
}
/**
 * Stores basic spatial reference information that is used to determine if a custom spatial reference parameter will
 * be exposed while deploying this solution and if so what feature services will support it and what will the default wkid be
 *
 * @param services a list of objects with service name and enabled property (indicates if they currently use a spatial reference var)
 * @param data the data object of a solution item
 *
 * @returns an object that stores if a custom spatial reference parameter is enabled/disabled,
 * a list of services and if they are enabled/disabled, and the default wkid
 */
function getSpatialReferenceInfo(services, data) {
  const defaultServices = {};
  services.forEach(service => {
    defaultServices[service.name] = service.enabled;
  });
  const wkid = getProp(data, "params.wkid.default");
  return {
    enabled: wkid !== undefined && wkid !== "",
    services: defaultServices,
    spatialReference: wkid ? { wkid } : undefined
  };
}
//--------------------------------------------------------------------------
//
//  Private Functions
//
//--------------------------------------------------------------------------
/**
 * Generate storage file paths from the solution template
 *
 * @param solutionId the id of the current solution
 * @param template the current template from the solution
 * @param authentication credentials for any requests
 *
 * @returns a list of resource file infos
 */
function _getResourceFilePaths(solutionId, template, authentication) {
  const resourceFilePaths = generateStorageFilePaths(authentication.portal, solutionId, template.resources, 1);
  return resourceFilePaths.map((fp) => {
    fp.updateType = EUpdateType.None;
    return fp;
  });
}
/**
 * Fetch thumbnails from the item resources
 *
 * @param models the list of models for the current solution item
 * @param authentication credentials for any requests
 *
 * @return A promise which resolves to ISolutionModels with hydrated thumbnails
 */
function _getThumbnails(models, authentication) {
  return new Promise((resolve, reject) => {
    const thumbnailPromoses = [];
    const _ids = [];
    Object.keys(models).forEach(k => {
      thumbnailPromoses.push(models[k].resourceFilePaths.length > 0 ?
        getThumbnailFromStorageItem(authentication, models[k].resourceFilePaths) :
        Promise.resolve());
      _ids.push(k);
    });
    thumbnailPromoses.push(Promise.resolve());
    Promise.all(thumbnailPromoses).then(r => {
      r.forEach((thumbnail, i) => {
        if (thumbnail) {
          models[_ids[i]].thumbnailOrigin = thumbnail;
        }
      });
      resolve(models);
    }, reject);
  });
}
/**
 * Explore a solution item template for variables we will allow users to insert at runtime.
 * This function will update the item argument that is passed in with the var details.
 *
 * @param children a list of layers or tables from a template
 * @param item an object that store key details for a given variable
 * @param template one of the templates from the current solution
 * @param translations nls translations object
 *
 */
function _addLayersOrTables(children, item, template, translations) {
  children.forEach(l => {
    const name = l.name && l.name.indexOf("||") > -1 ? l.name.split("||")[1].replace("}}", "").trim() : l.name;
    item.dependencies.push({
      id: template.itemId,
      title: `${name} (${translations.id})`,
      value: `{{${template.itemId}.layer${l.id}.id}}`,
    });
    item.dependencies.push({
      id: template.itemId,
      title: `${name} (${translations.name})`,
      value: `{{${template.itemId}.layer${l.id}.name||${name}}}`,
    });
  });
}
/**
 * Capture key details from the solution item template
 *
 * @param template one of the templates from the current solution
 * @param templates full list of templates
 * @param dependencies list of hierarchical dependencies
 *
 * @returns an IInventoryItem that is used by other components to work with this template
 */
function _getItemFromTemplate(template, templates, dependencies) {
  return {
    id: template.itemId || "",
    title: template.item.title || "",
    dependencies: _getDependencies(dependencies, templates),
    type: template.item.type || "",
    typeKeywords: template.item.typeKeywords || [],
    solutionItem: {
      itemId: template.itemId,
      itemDetails: _getItemDetails(template.item, template.type === "Group", template.itemId),
      isResource: _getIsResource(template),
      data: template.data,
      properties: template.properties,
      type: template.type,
      groupDetails: _getGroupDetails(template, templates)
    }
  };
}
/**
 * Capture key details from the solution item template
 *
 * @param dependencies list of dependencies from a template
 * @param templates full list of templates
 *
 * @returns a list of IInventoryItem that are used by other components to work with the templates
 */
function _getDependencies(dependencies, templates) {
  const dependencyItems = [];
  const depIds = dependencies.reduce((prev, cur) => {
    prev.push(cur.id);
    dependencyItems.push(cur);
    return prev;
  }, []);
  return templates.reduce((prev, curr) => {
    const i = depIds.indexOf(curr.itemId);
    if (i > -1) {
      prev.push(_getItemFromTemplate(curr, templates, dependencyItems[i].dependencies));
    }
    return prev;
  }, []);
}
/**
 * Capture the key item details for a given template
 *
 * @param item the templates item
 * @param isGroup boolean to indicate if the item is a group
 * @param itemId the item id of the template
 *
 * @returns a IItemDetails object for the current item
 */
function _getItemDetails(item, isGroup, itemId) {
  return {
    itemId,
    title: item.title || "",
    snippet: item.snippet || "",
    description: item.description || "",
    tags: item.tags || [],
    accessInformation: !isGroup ? item.accessInformation || "" : "",
    licenseInfo: !isGroup ? item.licenseInfo || "" : ""
  };
}
/**
 * Capture the key item details for a given group template
 *
 * @param template one of the templates from the current solution
 * @param templates full list of templates
 *
 * @returns a list of IItemShare objects
 */
function _getGroupDetails(template, templates) {
  return template.type === "Group" ? templates.reduce((prev, cur) => {
    if (cur.itemId !== template.itemId && cur.type !== "Group") {
      prev.push({
        id: cur.itemId,
        title: cur.item.name || cur.item.title,
        isShared: (cur.groups || []).indexOf(template.itemId) > -1,
        shareItem: (cur.groups || []).indexOf(template.itemId) > -1,
        type: cur.type,
        typeKeywords: cur.item.typeKeywords
      });
    }
    return prev;
  }, []) : [];
}
/**
 * Used to understand if we are dealing with a binary object that will support upload/download
 *
 * @param template one of the templates from the current solution
 *
 * @returns true if this item supports upload/download
 */
function _getIsResource(template) {
  return template.type !== "Group" && template.resources.some(r => r.indexOf("_info_thumbnail") < 0) &&
    (template.data === null || JSON.stringify(template.data) === "{}");
}
/**
 * Sort the template ids based on their dependencies
 *
 * @param templates full list of templates
 *
 * @returns a list of Itop level item ids
 */
function _getTopLevelItemIds(templates) {
  // Find the top-level nodes. Start with all nodes, then remove those that other nodes depend on
  const topLevelItemCandidateIds = templates.map((template) => template.itemId);
  templates.forEach((template) => {
    (template.dependencies || []).forEach((dependencyId) => {
      const iNode = topLevelItemCandidateIds.indexOf(dependencyId);
      if (iNode >= 0) {
        // Node is somebody's dependency, so remove the node from the list of top-level nodes
        // If iNode == -1, then it's a shared dependency and it has already been removed
        topLevelItemCandidateIds.splice(iNode, 1);
      }
    });
  });
  return topLevelItemCandidateIds;
}

/** @license
 * Copyright 2021 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Get an array from a list of nodes
 *
 * @param nodeList list of nodes
 *
 * @returns array of nodes
 */
function nodeListToArray(nodeList) {
  return Array.isArray(nodeList) ? nodeList : Array.from(nodeList);
}
/**
 * Saves any updated templates to the current solution item
 *
 * @param templates the updated templates array
 * @param thumbnailurl url for the items thumbnail
 * @param id for the solution item
 * @param data the current solution items data
 * @param authentication credentials for the request
 * @param translations translated strings for messages
 *
 * @returns a promise that will resolve with a success true/false response
 */
async function save(id, data, models, authentication, translations) {
  const itemInfo = { id };
  const params = {
    text: data
  };
  await _updateResources(id, models, data, authentication);
  // TODO compare data with the source data in the model...should be able to
  // understand if it has changes
  // TODO...only update if has changes
  const updateResults = await updateItem(itemInfo, authentication, undefined, params);
  return Promise.resolve({
    success: updateResults.success,
    message: updateResults.success ? translations.editsSaved : translations.saveFailed
  });
}
/**
 * Updates the solutions thumbnail and data resources
 *
 * @param solutionId id for the solution
 * @param models the models for the solutions templates
 * @param data the current data object for the solution
 * @param authentication credentials for the request
 *
 * @returns a promise that will resolve with response results
 */
async function _updateResources(solutionId, models, data, authentication) {
  return new Promise((resolve, reject) => {
    const promises = [];
    Object.keys(models).forEach(itemId => {
      const model = models[itemId];
      promises.push(_updateThumbnailResource(solutionId, model, data, authentication));
      _updateFileResources(solutionId, model, data, promises, authentication);
    });
    if (promises.length > 0) {
      Promise.all(promises).then(resolve, reject);
    }
    else {
      resolve({ success: true });
    }
  });
}
/**
 * Updates the solutions thumbnail and data resources
 *
 * @param solutionId id for the solution
 * @param model the model for the current solution template
 * @param authentication credentials for the request
 *
 * @returns a promise that will resolve with response results
 */
function _updateThumbnailResource(solutionId, model, data, authentication) {
  return new Promise((resolve, reject) => {
    if (model.thumbnailNew) {
      if (model.thumbnailOrigin) {
        const name = model.thumbnailOrigin.name;
        const opts = {
          id: solutionId,
          authentication,
          resource: model.thumbnailNew,
          name
        };
        const resources = model.resources.filter(r => r.endsWith(name));
        if (resources.length === 1) {
          const nameParts = resources[0].split("/");
          if (nameParts.length === 2) {
            opts.prefix = nameParts[0];
          }
        }
        updateItemResource(opts).then(resolve, reject);
      }
      else {
        // if the item does not have an origin thumb we need to add rather than update
        const resourceFilePath = {
          url: "",
          blob: model.thumbnailNew,
          type: EFileType.Thumbnail,
          filename: model.thumbnailNew.name,
          updateType: EUpdateType.Add
        };
        _add(solutionId, model, data, resourceFilePath, authentication, true).then(resolve, reject);
      }
    }
    else {
      resolve({ success: true });
    }
  });
}
/**
 * Updates the solutions data resources
 *
 * This function will update the provided promises argument by adding add/remove/update promises
 *
 * @param solutionId id for the solution
 * @param model the model for the current solution template
 * @param data the current data object for the solution
 * @param promises list of add/remove/update promises
 * @param authentication credentials for the request
 */
function _updateFileResources(solutionId, model, data, promises, authentication) {
  // add/remove/update resources
  model.resourceFilePaths.forEach(resourceFilePath => {
    switch (resourceFilePath.updateType) {
      case EUpdateType.Add:
        promises.push(_add(solutionId, model, data, resourceFilePath, authentication));
        break;
      case EUpdateType.Remove:
        promises.push(_remove(solutionId, model, data, resourceFilePath, authentication));
        break;
      case EUpdateType.Update:
        promises.push(_update(solutionId, model, resourceFilePath, authentication));
        break;
    }
  });
}
/**
 * Generates add resource request
 *
 * @param solutionId id for the solution
 * @param model the model for the current solution template
 * @param data the current data object for the solution
 * @param resourceFilePath resource file info
 * @param authentication credentials for the request
 *
 * @returns a promise that will resolve to a response with success true/false
 */
function _add(solutionId, model, data, resourceFilePath, authentication, isThumbnail = false) {
  return new Promise((resolve, reject) => {
    const storageName = convertItemResourceToStorageResource(model.itemId + isThumbnail.toString() ? "_info_thumbnail" :
      (resourceFilePath.blob.name === resourceFilePath.filename
        ? "_info_data"
        : "_info_dataz"), resourceFilePath.blob.name, SolutionTemplateFormatVersion);
    const opts = {
      id: solutionId,
      authentication,
      resource: resourceFilePath.blob,
      name: storageName.filename,
      params: {}
    };
    if (storageName.folder) {
      opts.params = {
        resourcesPrefix: storageName.folder
      };
    }
    addItemResource(opts).then(results => {
      var _a;
      if (results.success) {
        _updateTemplateResourcePaths(data, model.itemId, EUpdateType.Add, ((_a = opts.params) === null || _a === void 0 ? void 0 : _a.resourcesPrefix) ? `${opts.params.resourcesPrefix}/${opts.name}` : opts.name, "");
      }
      resolve(results);
    }, reject);
  });
}
/**
 * Generates add resource request
 *
 * @param solutionId id for the solution
 * @param model the model for the current solution template
 * @param data the current data object for the solution
 * @param resourceFilePath resource file info
 * @param authentication credentials for the request
 *
 * @returns a promise that will resolve to a response with success true/false
 */
function _remove(solutionId, model, data, resourceFilePath, authentication) {
  return new Promise((resolve, reject) => {
    const name = resourceFilePath.filename;
    const resources = model.resources.filter(r => r.endsWith(name));
    if (resources.length > 0) {
      const opts = {
        id: solutionId,
        authentication,
        resource: resources[0]
      };
      removeItemResource(opts).then(results => {
        if (results.success) {
          _updateTemplateResourcePaths(data, model.itemId, EUpdateType.Remove, resources[0], "");
        }
        resolve(results);
      }, reject);
    }
    else {
      resolve({ success: false });
    }
  });
}
/**
 * Generates update resource request
 *
 * @param solutionId id for the solution
 * @param model the model for the current solution template
 * @param resourceFilePath resource file info
 * @param authentication credentials for the request
 *
 * @returns a promise that will resolve to a response with success true/false
 */
function _update(solutionId, model, resourceFilePath, authentication) {
  const sourceFileName = resourceFilePath.sourceFileName;
  const opts = {
    id: solutionId,
    authentication,
    resource: resourceFilePath.blob,
    name: sourceFileName
  };
  const resources = model.resources.filter(r => r.endsWith(sourceFileName));
  if (resources.length === 1) {
    const nameParts = resources[0].split("/");
    if (nameParts.length === 2) {
      opts.prefix = nameParts[0];
    }
  }
  return updateItemResource(opts);
}
/**
 * Update the resources paths for a given template
 *
 * This function will update the provided data argument with any new or removed resource paths
 *
 * @param data the current data object for the solution
 * @param id the id of the current template
 * @param updateType add/update/remove
 * @param path the resource prefix/name
 * @param sourceFileName from the current resourceFilePath
 *
 */
function _updateTemplateResourcePaths(data, id, updateType, path, sourceFileName) {
  data.templates = data.templates.map(t => {
    if (t.itemId === id) {
      switch (updateType) {
        case EUpdateType.Add:
          t.resources.push(path);
          break;
        case EUpdateType.Update:
          t.resources = t.resources.filter(r => r.indexOf(sourceFileName) < 0);
          t.resources.push(path);
          break;
        case EUpdateType.Remove:
          t.resources = t.resources.filter(r => r.indexOf(path) < 0);
          break;
      }
    }
    return t;
  });
}

const solutionConfigurationCss = ".configuration-container{position:relative;height:100%;width:100%}.configuration{position:absolute;top:0px;right:0px;bottom:0px;left:0px;display:-ms-flexbox;display:flex;padding:0.5rem;border:1px #808080 solid}.config-tabs{width:100%}.config-tab{width:100%}.config-solution{position:absolute;top:3.5rem;right:-1px;bottom:-1px;left:-1px;display:-ms-flexbox;display:flex;padding:0.5rem}.config-inventory{display:inline;max-width:-webkit-min-content;max-width:-moz-min-content;max-width:min-content;-ms-flex-positive:0;flex-grow:0;overflow-y:auto}.config-inventory-hide{display:none;max-width:-webkit-min-content;max-width:-moz-min-content;max-width:min-content;-ms-flex-positive:0;flex-grow:0;overflow-y:auto}.config-item{position:relative;display:inline;-ms-flex-positive:1;flex-grow:1;overflow-y:auto;-webkit-margin-start:0.5rem;margin-inline-start:0.5rem}solution-contents{position:relative;height:100%}solution-item{position:relative;height:100%}solution-spatial-ref{position:relative;height:100%;width:100%;overflow-y:auto}";

class SolutionConfiguration {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.solutionLoaded = createEvent(this, "solutionLoaded", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties (public)
    //
    //--------------------------------------------------------------------------
    this.modelsSet = false;
    /**
     * Contains the translations for this component.
     */
    this.translations = {};
    /**
     * Contains the public value for this component.
     */
    this.value = {
      contents: []
    };
    /**
     * Contains the current solution item we are working with
     */
    this.item = {
      itemId: "",
      itemDetails: {},
      isResource: false,
      data: {},
      properties: {},
      type: "",
      groupDetails: undefined
    };
    /**
     * Contains the current solution item id
     */
    this.itemid = "";
    /**
     * Used to show/hide the content tree
     */
    this.treeOpen = true;
    /**
    * Contains the current solution item data
    */
    this.sourceItemData = {};
    this._fetchData = false;
    this._isLoading = false;
  }
  componentWillRender() {
    return new Promise((resolve) => {
      if (this._fetchData) {
        this._fetchData = false;
        this._isLoading = true;
        this._getItemData(this.itemid).then(() => {
          resolve(undefined);
        }, () => resolve(undefined));
      }
      else {
        resolve(undefined);
      }
    });
  }
  componentDidRender() {
    if (this._isLoading) {
      this._isLoading = false;
      this.solutionLoaded.emit();
    }
  }
  render() {
    const wkid = getProp(state.spatialReferenceInfo, "spatialReference.wkid");
    const hasServices = state.featureServices.length > 0;
    return (hAsync(Host, null, hAsync("div", { class: "configuration-container" }, hAsync("div", { class: "configuration" }, hAsync("calcite-tabs", { class: "config-tabs" }, hAsync("calcite-tab-nav", { slot: "tab-nav" }, hAsync("calcite-tab-title", null, this.translations.definitionTab), hasServices ?
      hAsync("calcite-tab-title", null, this.translations.spatialReferenceTab) :
      null), hAsync("calcite-tab", { active: true, class: "config-tab" }, hAsync("div", { class: "config-solution" }, hAsync("div", { class: this.treeOpen ? "config-inventory" : "config-inventory-hide" }, hAsync("solution-contents", { id: "configInventory", key: `${this.itemid}-contents`, translations: this.translations, value: this.value.contents })), hAsync("calcite-button", { appearance: "transparent", class: "collapse-btn", "icon-start": this.treeOpen ? "chevrons-left" : "chevrons-right", id: "collapse-vars", onClick: () => this._toggleTree(), scale: "s", title: this.translations.cancelEdits }), hAsync("div", { class: "config-item" }, hAsync("solution-item", { authentication: this.authentication, key: `${this.itemid}-item`, organizationVariables: this._organizationVariables, solutionVariables: this._solutionVariables, translations: this.translations, value: this.item })))), hasServices ?
      hAsync("calcite-tab", { class: "config-tab" }, hAsync("div", { class: "config-solution" }, hAsync("solution-spatial-ref", { defaultWkid: wkid, id: "configure-solution-spatial-ref", key: `${this.itemid}-spatial-ref`, locked: !wkid, services: state.featureServices.map(fs => fs.name), translations: this.translations })))
      : null)))));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  _solutionItemSelected(event) {
    this.item = event.detail;
  }
  //--------------------------------------------------------------------------
  //
  //  Events
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Public Methods (async)
  //
  //--------------------------------------------------------------------------
  async getEditModels() {
    return Promise.resolve(state.models);
  }
  async getSpatialReferenceInfo() {
    return Promise.resolve(state.spatialReferenceInfo);
  }
  async getSourceTemplates() {
    return Promise.resolve(this.templates);
  }
  async save() {
    return Promise.resolve(this._save());
  }
  valueWatchHandler(v, oldV) {
    if (v && v !== oldV) {
      this._fetchData = true;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Get the solution items data
   *
   * @param id the solution items id
   * @param isReset (defaults to false) indicates if we are resetting the controls after save
   */
  _getItemData(id, isReset = false) {
    return getItemDataAsJson(id, this.authentication).then(data => {
      this.sourceItemData = data;
      this.templates = data.templates;
      this._initProps(this.templates);
      return this._initState(this.templates, isReset);
    });
  }
  /**
   * Update the store with the initial values
   *
   * @param templates the solution items templates
   * @param isReset (defaults to false) indicates if we are resetting the controls after save
   */
  _initState(templates, isReset = false) {
    return new Promise((resolve, reject) => {
      if (isReset) {
        // clear models and state so we can refresh after save
        this.modelsSet = false;
        state.reset();
      }
      getModels(templates, this.authentication, this.itemid).then(models => {
        state.models = models;
        state.featureServices = getFeatureServices(templates);
        state.spatialReferenceInfo = getSpatialReferenceInfo(state.featureServices, this.sourceItemData);
        if (isReset) {
          // reset for undo/redo stack and diff editor tracking
          const jsonEditors = Array.from(this.el.getElementsByTagName("json-editor"));
          // eslint-disable-next-line @typescript-eslint/no-floating-promises
          jsonEditors.forEach(e => void e.reset());
        }
        this.modelsSet = true;
        resolve(true);
      }, () => reject);
    });
  }
  /**
   * Set Props with the initial values
   *
   * @param templates the solution items templates
   */
  _initProps(templates) {
    this.value.contents = [...getInventoryItems(templates)];
    this._solutionVariables = getSolutionVariables(templates, this.translations);
    this._organizationVariables = getOrganizationVariables(this.translations);
    this.item = {
      itemId: "",
      itemDetails: {},
      isResource: false,
      data: {},
      properties: {},
      type: ""
    };
  }
  /**
   * Toggle treeOpen prop to show/hide content tree
   */
  _toggleTree() {
    this.treeOpen = !this.treeOpen;
  }
  /**
   * Save all edits from the current configuration
   *
   * @returns a response that will indicate success or failure and any associated messages
   */
  async _save() {
    const templateUpdates = await this._updateTemplates();
    const data = this._setSrInfo(templateUpdates.templates);
    return templateUpdates.errors.length === 0 ? save(this.itemid, data, state.models, this.authentication, this.translations).then(saveResult => {
      // need to trigger re-render...and re-fetch
      this._fetchData = true;
      this.modelsSet = false;
      return Promise.resolve(saveResult);
    }).catch(e => Promise.reject(e)) : Promise.reject({
      success: false,
      message: `The following templates have errors: ${templateUpdates.errors.join(", ")}`
    });
  }
  /**
   * Update the solutions templates based on the stored changes
   *
   * @returns an object that contains the updated templates as well as any errors that were found
   */
  async _updateTemplates() {
    const errors = [];
    const models = await this.getEditModels();
    let templates = this._updateGroupDependencies(models, this.templates);
    Object.keys(models).forEach(k => {
      const m = models[k];
      templates = templates.map(t => {
        if (t.itemId === m.itemId) {
          this._setItem(t, m);
          const hasDataError = this._setData(t, m);
          const hasPropError = this._setProps(t, m);
          if (hasDataError || hasPropError) {
            errors.push(m.itemId);
          }
        }
        return t;
      });
    });
    errors.concat(window.monaco.editor.getModelMarkers({}));
    return Promise.resolve({
      templates,
      errors
    });
  }
  /**
   * Review all models and store itemIds that should be added or removed from group dependencies
   *
   * @param models the corresponding models for the current templates
   *
   * @returns group info (an object with keys of groupIds and
   * arrays of itemIds that should be added or removed from group dependencies)
   */
  _getGroupInfo(models) {
    const groupInfo = {};
    Object.keys(models).forEach(k => {
      const m = models[k];
      if (m.shareInfo) {
        const groupId = m.shareInfo.groupId;
        const type = m.shareInfo.shared ? "share" : "unshare";
        if (groupInfo[groupId]) {
          groupInfo[groupId][type].push(m.itemId);
        }
        else {
          groupInfo[groupId] = {};
          groupInfo[groupId][type] = [m.itemId];
          if (m.shareInfo.shared) {
            groupInfo[groupId]["unshare"] = [];
          }
          else {
            groupInfo[groupId]["share"] = [];
          }
        }
      }
    });
    return groupInfo;
  }
  /**
   * Updates group dependency arrays by adding or removing itemIds
   *
   * @param templates the current templates to update
   * @param models the corresponding models for the current templates
   *
   * @returns updated templates array
   */
  _updateGroupDependencies(models, templates) {
    const groupInfo = this._getGroupInfo(models);
    Object.keys(groupInfo).forEach(k => {
      templates.some(t => {
        if (t.itemId === k) {
          // add share items as deps
          groupInfo[k].share.forEach(s => {
            if (t.dependencies.indexOf(s) < 0) {
              t.dependencies.push(s);
            }
          });
          // remove unshare items from deps
          groupInfo[k].unshare.forEach(s => {
            const index = t.dependencies.indexOf(s);
            if (index > -1) {
              t.dependencies.splice(index, 1);
            }
          });
          return true;
        }
        else {
          return false;
        }
      });
    });
    return templates;
  }
  /**
   * Add group IDs to items that should be shared
   * This function will update the provided template when shareInfo is available
   *
   * @param template the current template to update
   * @param shareInfo the corresponding shareInfo from the model for the current template
   *
   */
  _updateItemGroups(template, shareInfo) {
    if (shareInfo) {
      const groupIndex = template.groups.indexOf(shareInfo.groupId);
      if (groupIndex < 0 && shareInfo.shared) {
        template.groups.push(shareInfo.groupId);
      }
      if (groupIndex > -1 && !shareInfo.shared) {
        template.groups.splice(groupIndex, 1);
      }
    }
  }
  /**
   * Set a templates data property with changes from the models
   *
   * @param template the current template to update
   * @param model the corresponding model for the current template (stores any user changes)
   *
   * @returns a boolean that indicates if any errors were detected
   */
  _setData(template, model) {
    return this._setTemplateProp(template, model.dataOriginValue, model.dataModel.getValue(), "data");
  }
  /**
   * Set a templates properties property with changes from the models
   *
   * @param template the current template to update
   * @param model the corresponding model for the current template (stores any user changes)
   *
   * @returns a boolean that indicates if any errors were detected
   */
  _setProps(template, model) {
    return this._setTemplateProp(template, model.propsOriginValue, model.propsModel.getValue(), "properties");
  }
  /**
   * Generic function used to set properties or data property on a given template
   *
   * @param template the current template to update
   * @param originValue the original value from the solution template
   * @param modelValue the current value from the model (will contain any edits that have been made)
   * @param path the path to the property we should update if any changes are found
   *
   * @returns a boolean that indicates if any errors were detected
   */
  _setTemplateProp(template, originValue, modelValue, path) {
    let hasError = false;
    try {
      const _originValue = JSON.parse(originValue);
      const _modelValue = JSON.parse(modelValue);
      if (_originValue && _modelValue && (JSON.stringify(_originValue) !== JSON.stringify(_modelValue))) {
        setProp(template, path, _modelValue);
      }
    }
    catch (e) {
      console.error(e);
      hasError = true;
    }
    return hasError;
  }
  /**
   * Set a templates item property with changes from the models
   *
   * @param template the current template to update
   * @param model the corresponding model for the current template (stores any user changes)
   *
   * This function will update the template argument when edits are found
   */
  _setItem(template, model) {
    this._updateItemGroups(template, model.shareInfo);
    if (model.updateItemValues && Object.keys(model.updateItemValues).length > 0) {
      Object.keys(model.updateItemValues).forEach(k => {
        template.item[k] = model.updateItemValues[k];
      });
    }
  }
  /**
   * Set spatial reference info in the solutions data
   *
   * @param templates a list of item templates from the solution
   *
   * @returns a cloned copy of the solutions data that has been updated with spatial reference info
   *
   */
  _setSrInfo(templates) {
    const srInfo = state.spatialReferenceInfo;
    const serviceEnabled = typeof (srInfo === null || srInfo === void 0 ? void 0 : srInfo.services) === 'undefined' ?
      false : Object.keys(srInfo.services).some(k => srInfo.services[k]);
    const data = cloneObject(this.sourceItemData);
    data.templates = templates;
    if (srInfo && srInfo.enabled && serviceEnabled) {
      const wkid = srInfo.spatialReference.wkid.toString();
      const wkidParam = {
        "label": "Spatial Reference",
        "default": wkid,
        "valueType": "spatialReference",
        "attributes": {
          "required": "true"
        }
      };
      const params = getProp(data, "params");
      const hasWkid = params && params.wkid;
      setCreateProp(data, hasWkid ? "params.wkid.default" : "params.wkid", hasWkid ? wkid : params ? wkidParam : wkid);
    }
    else if (!srInfo.enabled) {
      if (getProp(data, "params.wkid")) {
        delete (data.params.wkid);
      }
    }
    return data;
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "itemid": ["valueWatchHandler"]
  }; }
  static get style() { return solutionConfigurationCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "solution-configuration",
    "$members$": {
      "authentication": [1040],
      "translations": [1032],
      "value": [1040],
      "templates": [1040],
      "item": [1040],
      "itemid": [1537],
      "treeOpen": [1028, "tree-open"],
      "sourceItemData": [1032, "source-item-data"],
      "modelsSet": [32],
      "getEditModels": [64],
      "getSpatialReferenceInfo": [64],
      "getSourceTemplates": [64],
      "save": [64]
    },
    "$listeners$": [[8, "solutionItemSelected", "_solutionItemSelected"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["itemid", "itemid"]]
  }; }
}

const solutionContentsCss = ".icon-text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}";

class SolutionContents {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.solutionItemSelected = createEvent(this, "solutionItemSelected", 7);
    /**
     * Contains the translations for this component.
     */
    this.translations = {};
    /**
     * Contains the public value for this component.
     */
    this.value = [];
  }
  valueWatchHandler(v, oldV) {
    if (v && v !== oldV && Array.isArray(v) && v.length > 0) {
      this._treeItemSelected(v[0].solutionItem);
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    return (hAsync(Host, null, hAsync("calcite-tree", null, this.renderHierarchy(this.value))));
  }
  renderHierarchy(objs) {
    return objs.map((obj) => {
      var _a, _b;
      const selected = ((_a = this.selectedItem) === null || _a === void 0 ? void 0 : _a.itemId) && ((_b = this.selectedItem) === null || _b === void 0 ? void 0 : _b.itemId) === obj.solutionItem.itemId;
      return (obj.dependencies && obj.dependencies.length > 0) ?
        (hAsync("calcite-tree-item", { onClick: () => this._treeItemSelected(obj.solutionItem), selected: selected }, hAsync("solution-item-icon", { type: obj.type, typeKeywords: obj.typeKeywords }), hAsync("span", { class: "icon-text", title: obj.title }, obj.title), hAsync("calcite-tree", { slot: "children" }, this.renderHierarchy(obj.dependencies))))
        :
          (hAsync("calcite-tree-item", { onClick: () => this._treeItemSelected(obj.solutionItem), selected: selected }, hAsync("solution-item-icon", { type: obj.type, typeKeywords: obj.typeKeywords }), hAsync("span", { class: "icon-text", title: obj.title }, obj.title)));
    });
  }
  //--------------------------------------------------------------------------
  //
  //  Variables (private)
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  _solutionLoaded() {
    this._treeItemSelected(this.value[0].solutionItem);
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods (async)
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Publishes the `solutionItemSelected` event containing `itemId`, the id of the selected item.
   *
   * @param solutionItem the
   * @param type Item type to understand if it's an item or group
   */
  _treeItemSelected(solutionItem) {
    this.selectedItem = solutionItem;
    this.solutionItemSelected.emit(solutionItem);
  }
  static get assetsDirs() { return ["item-type-icons"]; }
  get el() { return getElement(this); }
  static get watchers() { return {
    "value": ["valueWatchHandler"]
  }; }
  static get style() { return solutionContentsCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "solution-contents",
    "$members$": {
      "selectedItem": [1040],
      "translations": [1032],
      "value": [16]
    },
    "$listeners$": [[8, "solutionLoaded", "_solutionLoaded"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const solutionItemCss = ".configuration-container{position:relative;height:100%;width:100%}.configuration{position:absolute;top:0px;right:0px;bottom:0px;left:0px;display:-ms-flexbox;display:flex;padding:0.5rem;border:1px #808080 solid}.config-tabs{width:100%}.config-tab{width:100%;overflow-y:auto;height:inherit}";

class SolutionItem {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    /**
     * Contains the translations for this component.
     */
    this.translations = {};
    /**
     * Contains the public value for this component.
     */
    this.value = {
      itemId: "",
      itemDetails: {},
      isResource: false,
      data: {},
      properties: {},
      type: "",
      groupDetails: undefined
    };
    /**
   * Contains the solution based variables
   */
    this.solutionVariables = [];
    /**
     * Contains the organization based variables
     */
    this.organizationVariables = [];
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    return (hAsync(Host, null, hAsync("div", { class: "configuration-container" }, hAsync("div", { class: "configuration" }, this._showGroupTabs(this.value.type === "Group"), this._showItemTabs(this.value.type !== "Group")))));
  }
  //--------------------------------------------------------------------------
  //
  //  Variables (private)
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Events
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Public Methods (async)
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Render tabs based on group item types
   *
   * @param visible Should the current tab be visible
   */
  _showGroupTabs(visible) {
    return hAsync("calcite-tabs", { class: "config-tabs", style: { display: visible ? "inherit" : "none" } }, hAsync("calcite-tab-nav", { slot: "tab-nav" }, hAsync("calcite-tab-title", null, this.translations.groupDetailsTab), hAsync("calcite-tab-title", null, this.translations.sharingTab)), hAsync("calcite-tab", { active: true, class: "config-tab", id: "group-tab" }, hAsync("solution-item-details", { translations: this.translations, type: this.value.type, value: this.value.itemDetails })), hAsync("calcite-tab", { class: "config-tab", id: "share-tab" }, hAsync("solution-item-sharing", { groupId: this.value.itemId, translations: this.translations, value: this.value.groupDetails })));
  }
  /**
   * Render tabs based for an items details, data, and props section from a template
   *
   * @param visible Should the current tab be visible
   */
  _showItemTabs(visible) {
    return hAsync("calcite-tabs", { class: "config-tabs", style: { display: visible ? "inherit" : "none" } }, hAsync("calcite-tab-nav", { slot: "tab-nav" }, hAsync("calcite-tab-title", null, this.translations.itemDetailsTab), hAsync("calcite-tab-title", null, this.translations.dataTab), hAsync("calcite-tab-title", null, this.translations.propertiesTab), hAsync("calcite-tab-title", null, this.translations.resourcesTab)), hAsync("calcite-tab", { active: true, class: "config-tab" }, hAsync("solution-item-details", { translations: this.translations, type: this.value.type, value: this.value.itemDetails })), hAsync("calcite-tab", { class: "config-tab", id: "data-tab" }, hAsync("solution-template-data", { authentication: this.authentication, instanceid: "data", itemid: this.value.itemId, organizationVariables: this.organizationVariables, solutionVariables: this.solutionVariables, translations: this.translations, value: { value: this.value.data } })), hAsync("calcite-tab", { class: "config-tab", id: "props-tab" }, hAsync("solution-template-data", { authentication: this.authentication, instanceid: "props", itemid: this.value.itemId, organizationVariables: this.organizationVariables, solutionVariables: this.solutionVariables, translations: this.translations, value: { value: this.value.properties } })), hAsync("calcite-tab", { class: "config-tab", id: "resources-tab" }, hAsync("solution-resource-item", { authentication: this.authentication, class: "solutions-resource-container", itemid: this.value.itemId, resourceFilePaths: Object.keys(state.models).indexOf(this.value.itemId) > -1 ?
        state.models[this.value.itemId].resourceFilePaths : [], translations: this.translations })));
  }
  get el() { return getElement(this); }
  static get style() { return solutionItemCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "solution-item",
    "$members$": {
      "authentication": [1040],
      "translations": [1032],
      "value": [1040],
      "solutionVariables": [1040],
      "organizationVariables": [1040]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const solutionItemDetailsCss = ".inputBottomSeparation{margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:1.5rem}.icon-inline--on-left,.icon-inline--on-right{display:inline;vertical-align:middle;-webkit-margin-end:0.375rem;margin-inline-end:0.375rem;fill:#0079c1}.scale-down{-o-object-fit:scale-down;object-fit:scale-down}.img-container{display:inline;-webkit-margin-end:1rem;margin-inline-end:1rem;max-width:400px}.summary-count-container{display:inline;-ms-flex-positive:1;flex-grow:1;-webkit-margin-start:0.75rem;margin-inline-start:0.75rem}.snippet-count-container{width:calc(100vw - 400px)}.parent-container{max-width:100%;padding:1rem}label{position:relative;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:1.5rem;display:block;min-width:-webkit-min-content;min-width:-moz-min-content;min-width:min-content;-webkit-box-sizing:border-box;box-sizing:border-box;margin-left:0.75rem;margin-right:0.75rem;min-width:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:1;flex-shrink:1}label-group-1-up>.block{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}label-group-2-up>.block{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}label-group-3-up>.block{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}label-group-4-up>.block{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}label-group-5-up>.block{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}label-group-6-up>.block{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}label-group-7-up>.block{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}label-group-8-up>.block{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}.tablet-block-group-1-up>label{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}.tablet-block-group-2-up>label{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}.tablet-block-group-3-up>label{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}.tablet-block-group-4-up>label{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}.tablet-block-group-5-up>label{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}.tablet-block-group-6-up>label{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}.tablet-block-group-7-up>label{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}.tablet-block-group-8-up>label{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}.phone-block-group-1-up>label{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}.phone-block-group-2-up>label{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}.phone-block-group-3-up>label{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}.phone-block-group-4-up>label{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}.phone-block-group-5-up>label{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}.phone-block-group-6-up>label{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}.phone-block-group-7-up>label{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}.phone-block-group-8-up>label{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}.code-face label{letter-spacing:0em;font-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;font-weight:400;font-style:normal}.code-face label b,.code-face label strong{font-weight:400}.code-italic label{letter-spacing:0em;font-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;font-weight:400;font-style:italic}.code-italic label b,.code-italic label strong{font-weight:400}";

class SolutionItemDetails {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    //--------------------------------------------------------------------------
    //
    //  Properties (public)
    //
    //--------------------------------------------------------------------------
    /**
     * Contains the translations for this component.
     */
    this.translations = {};
    /**
     * Contains the public value for this component.
     */
    this.value = {
      title: "",
      snippet: "",
      description: "",
      tags: [],
      accessInformation: "",
      licenseInfo: "",
      itemId: ""
    };
    /**
     * Contains the public type for this component.
     */
    this.type = "";
    this.loadThumb = false;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentDidRender() {
    if (this.loadThumb) {
      this.loadThumb = false;
      this._loadThumb(this.value.itemId);
    }
  }
  render() {
    this._validateValue();
    return (hAsync(Host, null, hAsync("div", { class: "parent-container" }, hAsync("div", { class: "inputBottomSeparation" }, hAsync("calcite-input", { id: "item-title", value: this.value.title })), hAsync("div", { class: "inputBottomSeparation" }, hAsync("input", { accept: ".jpg,.gif,.png,image/jpg,image/gif,image/png", class: "display-none", onChange: (event) => (this._updateThumbnail(event, true)), ref: (el) => (this.browseForThumbnail = el), type: "file" }), hAsync("button", { class: "font-size--3 btn-link inline-block trailer-quarter", onClick: () => this._getThumbnail() }, hAsync("svg", { class: "icon-inline icon-inline--on-left", height: "16", viewBox: "0 0 16 16", width: "16" }, hAsync("path", { d: "M14.792 2.666l-1.414-1.413a.965.965 0 0 0-1.385-.03l-1.444 1.444-8.763 8.72L.03 15.481a.371.371 0 0 0 .488.488l4.096-1.756 8.763-8.72-.001-.001.002.002 1.443-1.444a.965.965 0 0 0-.03-1.385zM1.569 14.431l.554-1.293.74.739zm2.338-.924l-1.414-1.414 7.963-7.92 1.414 1.415zm8.67-8.626l-1.413-1.414 1.29-1.29a.306.306 0 0 1 .433 0l.981.98a.306.306 0 0 1 0 .433z" })), this.translations.editThumbnail), hAsync("div", { class: "flex" }, hAsync("div", { class: "img-container" }, hAsync("img", { class: "scale-down", height: "133", ref: (el) => (this.thumbnail = el), width: "200" })), hAsync("div", { class: "snippet-count-container" }, hAsync("calcite-input", { id: "item-snippet", maxlength: 250, type: "textarea", value: this.value.snippet }), hAsync("label", { class: "font-size--3", id: "item-snippet-count", ref: (el) => (this.itemSnippetCount = el) })))), hAsync("calcite-label", null, this.translations.description, hAsync("label", { id: "item-description-label" }, hAsync("calcite-input", { id: "item-description", type: "textarea", value: this.value.description }))), hAsync("calcite-label", null, this.translations.tags, hAsync("label", { id: "item-tags-label" }, hAsync("calcite-input", { id: "item-tags", value: (this.value.tags && Array.isArray(this.value.tags) ? this.value.tags : [this.value.tags]).join(",") }))), this.type !== "Group" ? hAsync("calcite-label", null, this.translations.credits, hAsync("label", { id: "item-credits-label" }, hAsync("calcite-input", { id: "item-credits", value: this.value.accessInformation }))) : null, this.type !== "Group" ? hAsync("calcite-label", null, hAsync("label", { id: "item-terms-label" }, this.translations.termsOfUse, hAsync("calcite-input", { id: "item-terms", type: "textarea", value: this.value.licenseInfo }))) : null)));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  _solutionItemSelected(event) {
    var _a;
    this.value = event.detail.itemDetails;
    this._loadThumb((_a = event === null || event === void 0 ? void 0 : event.detail) === null || _a === void 0 ? void 0 : _a.itemId);
  }
  /**
   * Updates the component's value with changes to the input fields.
   */
  inputReceivedHandler(event) {
    switch (event.target.id) {
      case "item-title":
        this.value.title = event.target.value;
        this._updateStore("title", event.target.value);
        break;
      case "item-snippet":
        this.value.snippet = event.target.value;
        this._updateLengthLabel(this.value.snippet);
        this._updateStore("snippet", event.target.value);
        break;
      case "item-description":
        this.value.description = event.target.value;
        this._updateStore("description", event.target.value);
        break;
      case "item-tags":
        this.value.tags = event.target.value;
        this._updateStore("tags", event.target.value);
        break;
      case "item-credits":
        this.value.accessInformation = event.target.value;
        this._updateStore("accessInformation", event.target.value);
        break;
      case "item-terms":
        this.value.licenseInfo = event.target.value;
        this._updateStore("licenseInfo", event.target.value);
        break;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Events
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Public Methods (async)
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Load the templates thumbnail
   *
   * @param id the current template is
   *
   */
  _loadThumb(id) {
    if (id) {
      const thumbnailNew = getProp(state, `models.${id}.thumbnailNew`);
      const thumbnailOrigin = getProp(state, `models.${id}.thumbnailOrigin`);
      if (this.thumbnail) {
        this.thumbnail.src = (thumbnailNew || thumbnailOrigin) ?
          URL.createObjectURL(thumbnailNew || thumbnailOrigin) : "";
      }
      else {
        this.loadThumb = true;
      }
    }
  }
  /**
   * Opens image file browse dialog.
   *
   */
  _getThumbnail() {
    this.browseForThumbnail.click();
  }
  /**
   * Updates the length label to reflect the current number of characters
   * relative to the max number of characters supported.
   *
   * @param phrase the current phrase from the control
   */
  _updateLengthLabel(phrase) {
    this.itemSnippetCount.innerText =
      this.translations.snippetCountPattern.replace("{{n}}", phrase.length.toString());
  }
  /**
   * Gets and displays image result from browse.
   *
   * @param event The input controls event that contains the new file
   * @param updateStore boolean that controls if the new value is written to the store
   *  should be false on the initial load but true the rest of the time
   */
  _updateThumbnail(event, updateStore) {
    const files = event.target.files;
    if (files && files[0]) {
      if (this.thumbnail) {
        this.thumbnail.src = URL.createObjectURL(files[0]);
      }
      if (updateStore) {
        this._updateStore("thumbnailNew", files[0]);
      }
    }
  }
  /**
   * Use the value from the store if it exists
   *
   */
  _validateValue() {
    const m = getProp(state, `models.${this.value.itemId}`);
    if (m) {
      Object.keys(this.value).forEach(k => {
        if (m.updateItemValues.hasOwnProperty(k)) {
          this.value[k] = m.updateItemValues[k];
        }
        else if (m.originalItemValues.hasOwnProperty(k)) {
          this.value[k] = m.originalItemValues[k];
        }
      });
    }
  }
  /**
   * Add or remove the value from the store
   *
   * @param prop The model prop to update with new values
   * @param v The new value to store
   */
  _updateStore(prop, v) {
    const model = getProp(state, `models.${this.value.itemId}`);
    if (prop === "thumbnailNew") {
      model[prop] = v;
    }
    else if (model.itemOriginValue) {
      const item = JSON.parse(model.itemOriginValue);
      if (item.hasOwnProperty(prop)) {
        // store when it matches
        if (item[prop] !== v) {
          if (!model.originalItemValues.hasOwnProperty(prop)) {
            model.originalItemValues[prop] = item[prop];
          }
          model.updateItemValues[prop] = v;
        }
        else {
          // remove when it doesn't
          delete (model.updateItemValues[prop]);
        }
      }
    }
  }
  get el() { return getElement(this); }
  static get style() { return solutionItemDetailsCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "solution-item-details",
    "$members$": {
      "translations": [1032],
      "value": [1040],
      "type": [1537]
    },
    "$listeners$": [[8, "solutionItemSelected", "_solutionItemSelected"], [0, "calciteInputInput", "inputReceivedHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["type", "type"]]
  }; }
}

const solutionItemIconCss = ".item-type-icon{pointer-events:none;display:block;height:1rem;-webkit-box-sizing:border-box;box-sizing:border-box;margin-left:0.75rem;margin-right:0.75rem;min-width:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:1;flex-shrink:1}.item-type-icon-group-1-up>.block{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}.item-type-icon-group-2-up>.block{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}.item-type-icon-group-3-up>.block{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}.item-type-icon-group-4-up>.block{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}.item-type-icon-group-5-up>.block{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}.item-type-icon-group-6-up>.block{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}.item-type-icon-group-7-up>.block{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}.item-type-icon-group-8-up>.block{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}.tablet-block-group-1-up>.item-type-icon{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}.tablet-block-group-2-up>.item-type-icon{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}.tablet-block-group-3-up>.item-type-icon{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}.tablet-block-group-4-up>.item-type-icon{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}.tablet-block-group-5-up>.item-type-icon{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}.tablet-block-group-6-up>.item-type-icon{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}.tablet-block-group-7-up>.item-type-icon{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}.tablet-block-group-8-up>.item-type-icon{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}.phone-block-group-1-up>.item-type-icon{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}.phone-block-group-2-up>.item-type-icon{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}.phone-block-group-3-up>.item-type-icon{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}.phone-block-group-4-up>.item-type-icon{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}.phone-block-group-5-up>.item-type-icon{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}.phone-block-group-6-up>.item-type-icon{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}.phone-block-group-7-up>.item-type-icon{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}.phone-block-group-8-up>.item-type-icon{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}.code-face .item-type-icon{letter-spacing:0em;font-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;font-weight:400;font-style:normal}.code-face .item-type-icon b,.code-face .item-type-icon strong{font-weight:400}.code-italic .item-type-icon{letter-spacing:0em;font-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;font-weight:400;font-style:italic}.code-italic .item-type-icon b,.code-italic .item-type-icon strong{font-weight:400}.item-type-icon{margin-top:0.15em !important;min-width:16px;fill:currentColor;-webkit-transform:rotate(360deg);transform:rotate(360deg)}.item-type-icon-margin{-webkit-margin-end:0.375rem;margin-inline-end:0.375rem}";

class SolutionItemIcon {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    //--------------------------------------------------------------------------
    //
    //  Properties (public)
    //
    //--------------------------------------------------------------------------
    /**
     * Contains the translations for this component.
     */
    this.translations = {};
    /**
     * Indicate if this is portal
     */
    this.isPortal = false;
    /**
     * The type for the item
     */
    this.type = "";
    /**
     * The typeKeywords for the item
     */
    this.typeKeywords = [];
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    return hAsync("div", { title: this.type }, hAsync("img", { class: "item-type-icon item-type-icon-margin", height: "16", src: this._getIconUrl(this.type, this.typeKeywords), width: "16" }));
  }
  //--------------------------------------------------------------------------
  //
  //  Variables (private)
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Events
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Public Methods (async)
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * This function was copied and slightly modified from the arcgis-portal-app.
   *
   * This will construct the path to the icon based on type and typeKeyword info.
   *
   * @param type The item type
   * @param typeKeywords The item typeKeywords
   */
  _getIconUrl(type, typeKeywords) {
    const itemType = (type && type.toLowerCase()) || "", imgDir = "./item-icons/", size = "16"; //for now we only support 16x16 pixel images
    let isHosted = false, isRouteLayer = false, isMarkupLayer = false, isTable = false, isSpatiotemporal = false, isRelational = false, imgName = "";
    typeKeywords = typeKeywords || [];
    if (itemType.indexOf("service") > 0 || itemType === "feature collection" || itemType === "kml" || itemType === "wms" || itemType === "wmts" || itemType === "wfs") {
      isHosted = typeKeywords.indexOf("Hosted Service") > -1;
      if (itemType === "feature service" || itemType === "feature collection" || itemType === "kml" || itemType === "wfs") {
        isTable = typeKeywords.indexOf("Table") > -1;
        isRouteLayer = typeKeywords.indexOf("Route Layer") > -1;
        isMarkupLayer = typeKeywords.indexOf("Markup") > -1;
        isSpatiotemporal = typeKeywords.indexOf("Spatiotemporal") !== -1;
        imgName = isSpatiotemporal && isTable ? "spatiotemporaltable" : (isTable ? "table" : (isRouteLayer ? "routelayer" : (isMarkupLayer ? "markup" : (isSpatiotemporal ? "spatiotemporal" : (isHosted ? "featureshosted" : "features")))));
      }
      else if (itemType === "map service" || itemType === "wms" || itemType === "wmts") {
        isSpatiotemporal = typeKeywords.indexOf("Spatiotemporal") !== -1;
        isRelational = typeKeywords.indexOf("Relational") !== -1;
        if (isSpatiotemporal || isRelational) {
          imgName = "mapimages";
        }
        else {
          imgName = (isHosted || typeKeywords.indexOf("Tiled") > -1 || itemType === "wmts") ? "maptiles" : "mapimages";
        }
      }
      else if (itemType === "scene service") {
        if (typeKeywords.indexOf("Line") > -1) {
          imgName = "sceneweblayerline";
        }
        else if (typeKeywords.indexOf("3DObject") > -1) {
          imgName = "sceneweblayermultipatch";
        }
        else if (typeKeywords.indexOf("Point") > -1) {
          imgName = "sceneweblayerpoint";
        }
        else if (typeKeywords.indexOf("IntegratedMesh") > -1) {
          imgName = "sceneweblayermesh";
        }
        else if (typeKeywords.indexOf("PointCloud") > -1) {
          imgName = "sceneweblayerpointcloud";
        }
        else if (typeKeywords.indexOf("Polygon") > -1) {
          imgName = "sceneweblayerpolygon";
        }
        else if (typeKeywords.indexOf("Building") > -1) {
          imgName = "sceneweblayerbuilding";
        }
        else {
          imgName = "sceneweblayer";
        }
      }
      else if (itemType === "image service") {
        imgName = typeKeywords.indexOf("Elevation 3D Layer") > -1 ? "elevationlayer" : (typeKeywords.indexOf("Tiled Imagery") > -1 ? "tiledimagerylayer" : "imagery");
      }
      else if (itemType === "stream service") {
        imgName = "streamlayer";
      }
      else if (itemType === "vector tile service") {
        imgName = "vectortile";
      }
      else if (itemType === "datastore catalog service") {
        imgName = "datastorecollection";
      }
      else if (itemType === "geocoding service") {
        imgName = "geocodeservice";
      }
      else if (itemType === "geoprocessing service") {
        imgName = (typeKeywords.indexOf("Web Tool") > -1 && (this.isPortal)) ? "tool" : "layers";
      }
      else {
        imgName = "layers";
      }
    }
    else if (itemType === "web map" || itemType === "cityengine web scene") {
      imgName = "maps";
    }
    else if (itemType === "web scene") {
      imgName = typeKeywords.indexOf("ViewingMode-Local") > -1 ? "webscenelocal" : "websceneglobal";
    }
    else if (itemType === "web mapping application" || itemType === "mobile application" || itemType === "application" ||
      itemType === "operation view" || itemType === "desktop application") {
      imgName = "apps";
    }
    else if (itemType === "map document" || itemType === "map package" || itemType === "published map" || itemType === "scene document" ||
      itemType === "globe document" || itemType === "basemap package" || itemType === "mobile basemap package" || itemType === "mobile map package" ||
      itemType === "project package" || itemType === "project template" || itemType === "pro map" || itemType === "layout" ||
      (itemType === "layer" && typeKeywords.indexOf("ArcGIS Pro") > -1) || (itemType === "explorer map" && typeKeywords.indexOf("Explorer Document"))) {
      imgName = "mapsgray";
    }
    else if (itemType === "service definition" || itemType === "csv" || itemType === "shapefile" || itemType === "cad drawing" || itemType === "geojson" || itemType === "360 vr experience" || itemType === "netcdf" || itemType === "administrative report") {
      imgName = "datafiles";
    }
    else if (itemType === "explorer add in" || itemType === "desktop add in" || itemType === "windows viewer add in" || itemType === "windows viewer configuration") {
      imgName = "appsgray";
    }
    else if (itemType === "arcgis pro add in" || itemType === "arcgis pro configuration") {
      imgName = "addindesktop";
    }
    else if (itemType === "rule package" || itemType === "file geodatabase" || itemType === "sqlite geodatabase" || itemType === "csv collection" || itemType === "kml collection" ||
      itemType === "windows mobile package" || itemType === "map template" || itemType === "desktop application template" || itemType === "gml" ||
      itemType === "arcpad package" || itemType === "code sample" || itemType === "form" || itemType === "document link" ||
      itemType === "operations dashboard add in" || itemType === "rules package" || itemType === "image" || itemType === "workflow manager package" ||
      (itemType === "explorer map" && typeKeywords.indexOf("Explorer Mapping Application") > -1 || typeKeywords.indexOf("Document") > -1)) {
      imgName = "datafilesgray";
    }
    else if (itemType === "network analysis service" || itemType === "geoprocessing service" ||
      itemType === "geodata service" || itemType === "geometry service" || itemType === "geoprocessing package" ||
      itemType === "locator package" || itemType === "geoprocessing sample" || itemType === "workflow manager service") {
      imgName = "toolsgray";
    }
    else if (itemType === "layer" || itemType === "layer package" || itemType === "explorer layer") {
      imgName = "layersgray";
    }
    else if (itemType === "scene package") {
      imgName = "scenepackage";
    }
    else if (itemType === "mobile scene package") {
      imgName = "mobilescenepackage";
    }
    else if (itemType === "tile package" || itemType === "compact tile package") {
      imgName = "tilepackage";
    }
    else if (itemType === "task file") {
      imgName = "taskfile";
    }
    else if (itemType === "report template") {
      imgName = "report-template";
    }
    else if (itemType === "statistical data collection") {
      imgName = "statisticaldatacollection";
    }
    else if (itemType === "insights workbook") {
      imgName = "workbook";
    }
    else if (itemType === "insights model") {
      imgName = "insightsmodel";
    }
    else if (itemType === "insights page") {
      imgName = "insightspage";
    }
    else if (itemType === "insights theme") {
      imgName = "insightstheme";
    }
    else if (itemType === "hub initiative") {
      imgName = "hubinitiative";
    }
    else if (itemType === "hub page") {
      imgName = "hubpage";
    }
    else if (itemType === "hub site application") {
      imgName = "hubsite";
    }
    else if (itemType === "hub event") {
      imgName = "hubevent";
    }
    else if (itemType === "relational database connection") {
      imgName = "relationaldatabaseconnection";
    }
    else if (itemType === "big data file share") {
      imgName = "datastorecollection";
    }
    else if (itemType === "image collection") {
      imgName = "imagecollection";
    }
    else if (itemType === "desktop style") {
      imgName = "desktopstyle";
    }
    else if (itemType === "style") {
      imgName = "style";
    }
    else if (itemType === "dashboard") {
      imgName = "dashboard";
    }
    else if (itemType === "raster function template") {
      imgName = "rasterprocessingtemplate";
    }
    else if (itemType === "vector tile package") {
      imgName = "vectortilepackage";
    }
    else if (itemType === "ortho mapping project") {
      imgName = "orthomappingproject";
    }
    else if (itemType === "ortho mapping template") {
      imgName = "orthomappingtemplate";
    }
    else if (itemType === "solution") {
      imgName = "solutions";
    }
    else if (itemType === "geopackage") {
      imgName = "geopackage";
    }
    else if (itemType === "deep learning package") {
      imgName = "deeplearningpackage";
    }
    else if (itemType === "real time analytic") {
      imgName = "realtimeanalytics";
    }
    else if (itemType === "big data analytic") {
      imgName = "bigdataanalytics";
    }
    else if (itemType === "feed") {
      imgName = "feed";
    }
    else if (itemType === "excalibur imagery project") {
      imgName = "excaliburimageryproject";
    }
    else if (itemType === "notebook") {
      imgName = "notebook";
    }
    else if (itemType === "storymap") {
      imgName = "storymap";
    }
    else if (itemType === "survey123 add in") {
      imgName = "survey123addin";
    }
    else if (itemType === "mission") {
      imgName = "mission";
    }
    else if (itemType === "mission report") {
      imgName = "missionreport";
    }
    else if (itemType === "quickcapture project") {
      imgName = "quickcaptureproject";
    }
    else if (itemType === "pro report") {
      imgName = "proreport";
    }
    else if (itemType === "urban model") {
      imgName = "urbanmodel";
    }
    else if (itemType === "web experience") {
      imgName = "experiencebuilder";
    }
    else if (itemType === "web experience template") {
      imgName = "webexperiencetemplate";
    }
    else if (itemType === "workflow") {
      imgName = "workflow";
    }
    else if (itemType === "kernel gateway connection") {
      imgName = "kernelgatewayconnection";
    }
    else if (itemType === "insights script") {
      imgName = "insightsscript";
    }
    else if (itemType === "hub initiative template") {
      imgName = "hubinitiativetemplate";
    }
    else if (itemType === "storymap theme") {
      imgName = "storymaptheme";
    }
    else if (itemType === "group") {
      imgName = "group";
    }
    else {
      imgName = "maps";
    }
    return imgName ? getAssetPath(imgDir + imgName + size + ".png") : null;
  }
  static get assetsDirs() { return ["item-icons"]; }
  get el() { return getElement(this); }
  static get style() { return solutionItemIconCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "solution-item-icon",
    "$members$": {
      "translations": [1032],
      "isPortal": [4, "is-portal"],
      "type": [1],
      "typeKeywords": [16]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const solutionItemSharingCss = "/*!@:host*/.sc-solution-item-sharing-h{display:block;-webkit-box-sizing:border-box;box-sizing:border-box;margin-left:0.75rem;margin-right:0.75rem;min-width:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:1;flex-shrink:1}/*!@:host-group-1-up > .block*/-group-1-up.sc-solution-item-sharing-h>.block.sc-solution-item-sharing{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}/*!@:host-group-2-up > .block*/-group-2-up.sc-solution-item-sharing-h>.block.sc-solution-item-sharing{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}/*!@:host-group-3-up > .block*/-group-3-up.sc-solution-item-sharing-h>.block.sc-solution-item-sharing{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}/*!@:host-group-4-up > .block*/-group-4-up.sc-solution-item-sharing-h>.block.sc-solution-item-sharing{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}/*!@:host-group-5-up > .block*/-group-5-up.sc-solution-item-sharing-h>.block.sc-solution-item-sharing{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}/*!@:host-group-6-up > .block*/-group-6-up.sc-solution-item-sharing-h>.block.sc-solution-item-sharing{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}/*!@:host-group-7-up > .block*/-group-7-up.sc-solution-item-sharing-h>.block.sc-solution-item-sharing{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}/*!@:host-group-8-up > .block*/-group-8-up.sc-solution-item-sharing-h>.block.sc-solution-item-sharing{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}/*!@.tablet-block-group-1-up > :host*/.tablet-block-group-1-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}/*!@.tablet-block-group-2-up > :host*/.tablet-block-group-2-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}/*!@.tablet-block-group-3-up > :host*/.tablet-block-group-3-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}/*!@.tablet-block-group-4-up > :host*/.tablet-block-group-4-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}/*!@.tablet-block-group-5-up > :host*/.tablet-block-group-5-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}/*!@.tablet-block-group-6-up > :host*/.tablet-block-group-6-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}/*!@.tablet-block-group-7-up > :host*/.tablet-block-group-7-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}/*!@.tablet-block-group-8-up > :host*/.tablet-block-group-8-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}/*!@.phone-block-group-1-up > :host*/.phone-block-group-1-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}/*!@.phone-block-group-2-up > :host*/.phone-block-group-2-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}/*!@.phone-block-group-3-up > :host*/.phone-block-group-3-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}/*!@.phone-block-group-4-up > :host*/.phone-block-group-4-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}/*!@.phone-block-group-5-up > :host*/.phone-block-group-5-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}/*!@.phone-block-group-6-up > :host*/.phone-block-group-6-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}/*!@.phone-block-group-7-up > :host*/.phone-block-group-7-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}/*!@.phone-block-group-8-up > :host*/.phone-block-group-8-up>.sc-solution-item-sharing-h{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}/*!@.code-face :host*/.code-face .sc-solution-item-sharing-h{letter-spacing:0em;font-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;font-weight:400;font-style:normal}/*!@.code-face :host b, .code-face :host strong*/.code-face .sc-solution-item-sharing-h b.sc-solution-item-sharing,.code-face .sc-solution-item-sharing-h strong.sc-solution-item-sharing{font-weight:400}/*!@.code-italic :host*/.code-italic .sc-solution-item-sharing-h{letter-spacing:0em;font-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;font-weight:400;font-style:italic}/*!@.code-italic :host b, .code-italic :host strong*/.code-italic .sc-solution-item-sharing-h b.sc-solution-item-sharing,.code-italic .sc-solution-item-sharing-h strong.sc-solution-item-sharing{font-weight:400}/*!@.container-border*/.container-border.sc-solution-item-sharing{padding:1rem}/*!@.icon-text*/.icon-text.sc-solution-item-sharing{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}";

class SolutionItemSharing {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    //--------------------------------------------------------------------------
    //
    //  Properties (public)
    //
    //--------------------------------------------------------------------------
    /**
     * Contains the translations for this component.
     */
    this.translations = {};
    /**
     * Contains the public value for this component.
     */
    this.value = [];
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    return (hAsync(Host, null, hAsync("div", { class: "container-border" }, this._renderItems(this.value))));
  }
  //--------------------------------------------------------------------------
  //
  //  Variables (private)
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Events
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Public Methods (async)
  //
  //--------------------------------------------------------------------------
  async getShareInfo() {
    return Promise.resolve(this.value);
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Render share options based on the list of share details
   *
   * @param objs list of IItemShare objects that are used to expose and store share info for the solutions items
   */
  _renderItems(objs) {
    return objs && objs.length > 0 ? objs.map(item => {
      return (hAsync("calcite-label", { layout: "inline" }, hAsync("calcite-switch", { id: item.id, name: "setting", onCalciteSwitchChange: (event) => this._updateItem(event), scale: "m", switched: item.shareItem, value: "enabled" }), hAsync("solution-item-icon", { type: item.type, typeKeywords: item.typeKeywords }), hAsync("span", { class: "icon-text", title: item.title }, item.title)));
    }) : null;
  }
  /**
   * Update the items share prop based on the switch state
   *
   * @param event onCalciteSwitchChange event
   */
  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
  _updateItem(event) {
    const id = event.target.id;
    this.value = this.value.map(item => {
      if (item.id === id) {
        // update the item
        item.shareItem = event.detail.switched;
        // update the store
        if (state === null || state === void 0 ? void 0 : state.models[id]) {
          state.models[id].shareInfo =
            (item.isShared && !item.shareItem) ? { groupId: this.groupId, shared: false } :
              (!item.isShared && item.shareItem) ? { groupId: this.groupId, shared: true } : undefined;
        }
      }
      return item;
    });
  }
  get el() { return getElement(this); }
  static get style() { return solutionItemSharingCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "solution-item-sharing",
    "$members$": {
      "translations": [1032],
      "value": [1040],
      "groupId": [1537, "group-id"],
      "getShareInfo": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["groupId", "group-id"]]
  }; }
}

const solutionOrganizationVariablesCss = "/*!@:host*/.sc-solution-organization-variables-h{display:block;-webkit-box-sizing:border-box;box-sizing:border-box;margin-left:0.75rem;margin-right:0.75rem;min-width:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:1;flex-shrink:1}/*!@:host-group-1-up > .block*/-group-1-up.sc-solution-organization-variables-h>.block.sc-solution-organization-variables{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}/*!@:host-group-2-up > .block*/-group-2-up.sc-solution-organization-variables-h>.block.sc-solution-organization-variables{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}/*!@:host-group-3-up > .block*/-group-3-up.sc-solution-organization-variables-h>.block.sc-solution-organization-variables{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}/*!@:host-group-4-up > .block*/-group-4-up.sc-solution-organization-variables-h>.block.sc-solution-organization-variables{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}/*!@:host-group-5-up > .block*/-group-5-up.sc-solution-organization-variables-h>.block.sc-solution-organization-variables{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}/*!@:host-group-6-up > .block*/-group-6-up.sc-solution-organization-variables-h>.block.sc-solution-organization-variables{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}/*!@:host-group-7-up > .block*/-group-7-up.sc-solution-organization-variables-h>.block.sc-solution-organization-variables{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}/*!@:host-group-8-up > .block*/-group-8-up.sc-solution-organization-variables-h>.block.sc-solution-organization-variables{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}/*!@.tablet-block-group-1-up > :host*/.tablet-block-group-1-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}/*!@.tablet-block-group-2-up > :host*/.tablet-block-group-2-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}/*!@.tablet-block-group-3-up > :host*/.tablet-block-group-3-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}/*!@.tablet-block-group-4-up > :host*/.tablet-block-group-4-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}/*!@.tablet-block-group-5-up > :host*/.tablet-block-group-5-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}/*!@.tablet-block-group-6-up > :host*/.tablet-block-group-6-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}/*!@.tablet-block-group-7-up > :host*/.tablet-block-group-7-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}/*!@.tablet-block-group-8-up > :host*/.tablet-block-group-8-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}/*!@.phone-block-group-1-up > :host*/.phone-block-group-1-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}/*!@.phone-block-group-2-up > :host*/.phone-block-group-2-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}/*!@.phone-block-group-3-up > :host*/.phone-block-group-3-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}/*!@.phone-block-group-4-up > :host*/.phone-block-group-4-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}/*!@.phone-block-group-5-up > :host*/.phone-block-group-5-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}/*!@.phone-block-group-6-up > :host*/.phone-block-group-6-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}/*!@.phone-block-group-7-up > :host*/.phone-block-group-7-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}/*!@.phone-block-group-8-up > :host*/.phone-block-group-8-up>.sc-solution-organization-variables-h{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}/*!@.code-face :host*/.code-face .sc-solution-organization-variables-h{letter-spacing:0em;font-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;font-weight:400;font-style:normal}/*!@.code-face :host b, .code-face :host strong*/.code-face .sc-solution-organization-variables-h b.sc-solution-organization-variables,.code-face .sc-solution-organization-variables-h strong.sc-solution-organization-variables{font-weight:400}/*!@.code-italic :host*/.code-italic .sc-solution-organization-variables-h{letter-spacing:0em;font-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;font-weight:400;font-style:italic}/*!@.code-italic :host b, .code-italic :host strong*/.code-italic .sc-solution-organization-variables-h b.sc-solution-organization-variables,.code-italic .sc-solution-organization-variables-h strong.sc-solution-organization-variables{font-weight:400}/*!@.container-border*/.container-border.sc-solution-organization-variables{overflow-y:auto}/*!@.org-var-header*/.org-var-header.sc-solution-organization-variables{margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:1rem}";

class SolutionOrganizationVariables {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.organizationVariableSelected = createEvent(this, "organizationVariableSelected", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties (public)
    //
    //--------------------------------------------------------------------------
    /**
     * Contains the translations for this component.
     */
    this.translations = {};
    /**
     * Contains the public value for this component.
     */
    this.value = [];
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    return (hAsync(Host, null, hAsync("div", null, hAsync("h4", { class: "org-var-header" }, this.translations.orgVariables)), hAsync("div", { class: "container-border" }, hAsync("calcite-label", { id: "variable-label" }, this._renderHierarchy(this.value)))));
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods (async)
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Renders the organization based variable items the user can insert at runtime
   *
   * @param objs a list of organization variables to render
   */
  _renderHierarchy(objs) {
    const hierarchy = objs.map(obj => {
      return (hAsync("calcite-tree-item", { onClick: () => this._treeItemSelected(obj.id, obj.value) }, obj.title));
    });
    return hierarchy;
  }
  /**
   * Publishes the `organizationVariableSelected` event containing `itemId`, the id of the selected variable and the value of the variable.
   *
   * @param itemId Item id as reported by click event
   * @param value Variable id as reported by click event
   */
  _treeItemSelected(itemId, value) {
    this.organizationVariableSelected.emit({
      itemId,
      value
    });
  }
  get el() { return getElement(this); }
  static get style() { return solutionOrganizationVariablesCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "solution-organization-variables",
    "$members$": {
      "translations": [1032],
      "value": [1040]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const solutionResourceItemCss = "/*!@:host*/.sc-solution-resource-item-h{display:block;-webkit-box-sizing:border-box;box-sizing:border-box;margin-left:0.75rem;margin-right:0.75rem;min-width:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:1;flex-shrink:1}/*!@:host-group-1-up > .block*/-group-1-up.sc-solution-resource-item-h>.block.sc-solution-resource-item{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}/*!@:host-group-2-up > .block*/-group-2-up.sc-solution-resource-item-h>.block.sc-solution-resource-item{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}/*!@:host-group-3-up > .block*/-group-3-up.sc-solution-resource-item-h>.block.sc-solution-resource-item{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}/*!@:host-group-4-up > .block*/-group-4-up.sc-solution-resource-item-h>.block.sc-solution-resource-item{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}/*!@:host-group-5-up > .block*/-group-5-up.sc-solution-resource-item-h>.block.sc-solution-resource-item{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}/*!@:host-group-6-up > .block*/-group-6-up.sc-solution-resource-item-h>.block.sc-solution-resource-item{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}/*!@:host-group-7-up > .block*/-group-7-up.sc-solution-resource-item-h>.block.sc-solution-resource-item{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}/*!@:host-group-8-up > .block*/-group-8-up.sc-solution-resource-item-h>.block.sc-solution-resource-item{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}/*!@.tablet-block-group-1-up > :host*/.tablet-block-group-1-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}/*!@.tablet-block-group-2-up > :host*/.tablet-block-group-2-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}/*!@.tablet-block-group-3-up > :host*/.tablet-block-group-3-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}/*!@.tablet-block-group-4-up > :host*/.tablet-block-group-4-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}/*!@.tablet-block-group-5-up > :host*/.tablet-block-group-5-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}/*!@.tablet-block-group-6-up > :host*/.tablet-block-group-6-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}/*!@.tablet-block-group-7-up > :host*/.tablet-block-group-7-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}/*!@.tablet-block-group-8-up > :host*/.tablet-block-group-8-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}/*!@.phone-block-group-1-up > :host*/.phone-block-group-1-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}/*!@.phone-block-group-2-up > :host*/.phone-block-group-2-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}/*!@.phone-block-group-3-up > :host*/.phone-block-group-3-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}/*!@.phone-block-group-4-up > :host*/.phone-block-group-4-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}/*!@.phone-block-group-5-up > :host*/.phone-block-group-5-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}/*!@.phone-block-group-6-up > :host*/.phone-block-group-6-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}/*!@.phone-block-group-7-up > :host*/.phone-block-group-7-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}/*!@.phone-block-group-8-up > :host*/.phone-block-group-8-up>.sc-solution-resource-item-h{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}/*!@.code-face :host*/.code-face .sc-solution-resource-item-h{letter-spacing:0em;font-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;font-weight:400;font-style:normal}/*!@.code-face :host b, .code-face :host strong*/.code-face .sc-solution-resource-item-h b.sc-solution-resource-item,.code-face .sc-solution-resource-item-h strong.sc-solution-resource-item{font-weight:400}/*!@.code-italic :host*/.code-italic .sc-solution-resource-item-h{letter-spacing:0em;font-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;font-weight:400;font-style:italic}/*!@.code-italic :host b, .code-italic :host strong*/.code-italic .sc-solution-resource-item-h b.sc-solution-resource-item,.code-italic .sc-solution-resource-item-h strong.sc-solution-resource-item{font-weight:400}/*!@.resource-item*/.resource-item.sc-solution-resource-item{padding:1rem}/*!@.resource-button*/.resource-button.sc-solution-resource-item{-webkit-margin-end:1rem;margin-inline-end:1rem}/*!@.resource-progress*/.resource-progress.sc-solution-resource-item{padding-top:1rem}/*!@.resources-container*/.resources-container.sc-solution-resource-item{border:1px #808080 solid}/*!@.margin-bottom-1*/.margin-bottom-1.sc-solution-resource-item{margin-bottom:1rem}";

class SolutionResourceItem {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    /**
     * The templates itemId.
     * This is used to get the correct model from a store in the json-editor
     */
    this.itemid = "";
    /**
     * The templates resources.
     */
    this.resources = {};
    /**
     * The templates resourceFilePaths.
     */
    this.resourceFilePaths = [];
    /**
     * Contains the translations for this component.
     */
    this.translations = {};
    //--------------------------------------------------------------------------
    //
    //  Variables (private)
    //
    //--------------------------------------------------------------------------\
    this._removedResources = {};
  }
  resourceFilePathsWatchHandler(v, oldV) {
    if (v && v !== oldV && Object.keys(state.models).indexOf(this.itemid) > -1) {
      const m = state.models[this.itemid];
      m.resourceFilePaths = this.resourceFilePaths;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    const hasValidResources = this._hasValidResources();
    return (hAsync(Host, null, hAsync("div", { class: "resource-item" }, hAsync("div", { class: "margin-bottom-1" }, hAsync("calcite-button", { appearance: "solid", class: "resource-button", color: "blue", onClick: () => this._addNewResource() }, this.translations.addResource), hAsync("calcite-button", { appearance: "solid", color: "blue", disabled: !hasValidResources, onClick: () => this._downloadAll() }, this.translations.downloadAll)), hAsync("div", { class: "resources-container", style: { display: hasValidResources ? "inherit" : "none" } }, this._renderResourceList()))));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Events
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Public Methods (async)
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Render resources while avoiding thumbnail resoures that are managed by solution-item
   *
   */
  _renderResourceList() {
    return (hAsync("calcite-value-list", { multiple: true }, this.resourceFilePaths.reduce((prev, cur) => {
      if (Object.keys(this.resources).indexOf(cur.url) < 0) {
        this.resources[cur.url] = cur;
      }
      if (cur.url.indexOf("_info_thumbnail") < 0) {
        prev.push(this._renderResource(cur));
      }
      return prev;
    }, [])));
  }
  /**
   * Render the resource and supporting actions for download/update/delete/(reset..if deleted)
   *
   * @param resource the filename and url used to interact with the resource
   */
  _renderResource(resource) {
    const disabled = resource.updateType === EUpdateType.Remove;
    return (hAsync("calcite-value-list-item", { class: disabled ? "disabled" : "", label: resource.filename, nonInteractive: true, value: resource.url }, hAsync("calcite-action-group", { "expand-disabled": "true", layout: "horizontal", slot: "actions-end" }, hAsync("calcite-action", { disabled: disabled, icon: "download", label: this.translations.download, onClick: () => this._download(resource.url, resource.filename), scale: "m", text: this.translations.download }), hAsync("calcite-action", { disabled: disabled, icon: "upload-to", label: this.translations.update, onClick: () => this._upload(resource.url), scale: "m", text: this.translations.update }), hAsync("calcite-action", { disabled: disabled, icon: "trash", label: this.translations.delete, onClick: () => this._delete(resource.filename), scale: "m", text: this.translations.delete }), disabled ? hAsync("calcite-action", { icon: "reset", label: this.translations.reset, onClick: () => this._reset(resource.filename), scale: "m", text: this.translations.reset }) : hAsync("div", { class: "display-none" }))));
  }
  /**
   * Adds the name to the deleted array so it will be skipped while rendering
   *  but still exist if the user chooses to reset
   *
   * @param name the name to be added to the deleted array
   */
  _delete(name) {
    this.resourceFilePaths = this.resourceFilePaths.map(p => {
      if (p.filename === name) {
        p.updateType = EUpdateType.Remove;
      }
      return p;
    });
  }
  /**
   * Remove the name from the deleted array so it will again be rendered
   *
   * @param name the name to be added to the deleted array
   */
  _reset(name) {
    // need to make sure I know if this reset is from the source or a new one
    const m = state.models[this.itemid];
    this.resourceFilePaths = m.sourceResourceFilePaths.some(fp => fp.filename === name) ?
      this.resourceFilePaths = this.resourceFilePaths.map(p => {
        if (p.filename === name) {
          p.updateType = EUpdateType.None;
        }
        return p;
      }) :
      this.resourceFilePaths = this.resourceFilePaths.map(p => {
        if (p.filename === name) {
          p.updateType = EUpdateType.Add;
        }
        return p;
      });
  }
  /**
   * Download all of the templates resources
   *
   */
  _downloadAll() {
    this.resourceFilePaths.forEach((resource) => {
      this._download(resource.url, resource.filename);
    });
  }
  /**
   * Download the current resource
   *
   * @param url the resource url
   * @param name the resource name
   */
  _download(url, name) {
    // files that have been added manually do not need to be requested from the item
    if (url.startsWith("blob")) {
      this.downloadFile(url, name);
    }
    else {
      const fileExtensions = ['jpg', 'jpeg', 'gif', 'png', 'json'];
      const _url = `${url}?token=${this.authentication.token}`;
      if (fileExtensions.some(ext => url.endsWith(ext))) {
        void this.fetchAndDownload(_url, name);
      }
      else {
        this.downloadFile(_url, name);
      }
    }
  }
  /**
   * Dynamically creates an anchor and downloads the file
   *
   * @param url the url of the resource
   * @param name the name of the resource
   */
  downloadFile(url, name) {
    const link = document.createElement("a");
    link.href = url;
    link.download = name;
    link.click();
  }
  /**
   * Check if the template resources have any non-thumbnail resources
   *
   * @returns true if we have data resources and false if only thumbnail
   */
  _hasValidResources() {
    return this.resourceFilePaths.some(r => r.url.indexOf("_info_thumbnail") < 0);
  }
  /**
   * Fetches and downloads the resource from the solution
   *
   * @param url the url of the resource
   * @param name the name of the resource
   */
  async fetchAndDownload(url, name) {
    const image = await fetch(url);
    const b = await image.blob();
    const bURL = URL.createObjectURL(b);
    this.downloadFile(bURL, name);
  }
  /**
   * Create an input element to support the uploading of the resource and upload the resource
   *
   * @param url the url of the resource
   */
  _upload(url) {
    const _input = document.createElement("input");
    _input.classList.add("display-none");
    _input.onchange = this._updateResource.bind(this, url);
    _input.type = "file";
    _input.click();
  }
  /**
   * Create an input element to support the uploading of a resource and add the new resource
   *
   */
  _addNewResource() {
    const _input = document.createElement("input");
    _input.classList.add("display-none");
    _input.onchange = this._add.bind(this);
    _input.type = "file";
    _input.click();
  }
  /**
   * Replace the resource file path when update action is used
   *
   * @param currentUrl the url for the item to replace
   * @param event the input event that contains the file
   */
  _updateResource(currentUrl, event) {
    const files = event.target.files;
    if (files && files[0]) {
      const url = URL.createObjectURL(files[0]);
      const filename = files[0].name;
      let currentIndex = -1;
      let sourceFileName;
      this.resourceFilePaths.some((r, i) => {
        if (r.url === currentUrl) {
          currentIndex = i;
          sourceFileName = r.sourceFileName || r.filename;
          return true;
        }
        else {
          return false;
        }
      });
      if (currentIndex > -1) {
        this._removedResources[filename] = this.resourceFilePaths[currentIndex];
        this.resourceFilePaths[currentIndex] = {
          url,
          type: EFileType.Data,
          filename,
          blob: files[0],
          sourceFileName,
          updateType: EUpdateType.Update
        };
        this.resourceFilePaths = [
          ...this.resourceFilePaths
        ];
      }
    }
  }
  /**
   * Add the new resource to the resource file paths
   *
   * @param event the inputs event that contains the new file
   */
  _add(event) {
    const files = event.target.files;
    if (files && files[0]) {
      const url = URL.createObjectURL(files[0]);
      const filename = files[0].name;
      if (!this.resourceFilePaths.some(r => r.filename === filename && r.url === url)) {
        this.resourceFilePaths = [
          ...this.resourceFilePaths,
          {
            url,
            type: EFileType.Data,
            filename,
            blob: files[0],
            updateType: EUpdateType.Add
          }
        ];
      }
    }
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "resourceFilePaths": ["resourceFilePathsWatchHandler"]
  }; }
  static get style() { return solutionResourceItemCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "solution-resource-item",
    "$members$": {
      "authentication": [1040],
      "itemid": [1537],
      "resources": [1040],
      "resourceFilePaths": [1040],
      "translations": [1032]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["itemid", "itemid"]]
  }; }
}

/** @license
 * Copyright 2021 Esri
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const wkids = {
  2000: {
    "label": "Anguilla 1957 British West Indies Grid",
    "defaultExtent": "{\"xmin\": -5220382.125577026, \"ymin\": -9605698.138723183, \"xmax\": 6020382.125577026, \"ymax\": 9605698.13872318}"
  },
  2001: {
    "label": "Antigua 1943 British West Indies Grid",
    "defaultExtent": "{\"xmin\": -5220382.125577026, \"ymin\": -9605698.138723183, \"xmax\": 6020382.125577026, \"ymax\": 9605698.13872318}"
  },
  2002: {
    "label": "Dominica 1945 British West Indies Grid",
    "defaultExtent": "{\"xmin\": -5220382.125577026, \"ymin\": -9605698.138723183, \"xmax\": 6020382.125577026, \"ymax\": 9605698.13872318}"
  },
  2003: {
    "label": "Grenada 1953 British West Indies Grid",
    "defaultExtent": "{\"xmin\": -5220382.125577026, \"ymin\": -9605698.138723183, \"xmax\": 6020382.125577026, \"ymax\": 9605698.13872318}"
  },
  2004: {
    "label": "Montserrat 1958 British West Indies Grid",
    "defaultExtent": "{\"xmin\": -5220382.125577026, \"ymin\": -9605698.138723183, \"xmax\": 6020382.125577026, \"ymax\": 9605698.13872318}"
  },
  2005: {
    "label": "St Kitts 1955 British West Indies Grid",
    "defaultExtent": "{\"xmin\": -5220382.125577026, \"ymin\": -9605698.138723183, \"xmax\": 6020382.125577026, \"ymax\": 9605698.13872318}"
  },
  2006: {
    "label": "St Lucia 1955 British West Indies Grid",
    "defaultExtent": "{\"xmin\": -5220382.125577026, \"ymin\": -9605698.138723183, \"xmax\": 6020382.125577026, \"ymax\": 9605698.13872318}"
  },
  2007: {
    "label": "St Vincent 1945 British West Indies Grid",
    "defaultExtent": "{\"xmin\": -5220382.125577026, \"ymin\": -9605698.138723183, \"xmax\": 6020382.125577026, \"ymax\": 9605698.13872318}"
  },
  2008: {
    "label": "NAD 1927 CGQ77 MTM 2 SCoPQ",
    "defaultExtent": "{\"xmin\": -5317767.571686545, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2009: {
    "label": "NAD 1927 CGQ77 MTM 3 SCoPQ",
    "defaultExtent": "{\"xmin\": -5317767.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2010: {
    "label": "NAD 1927 CGQ77 MTM 4 SCoPQ",
    "defaultExtent": "{\"xmin\": -5317767.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2011: {
    "label": "NAD 1927 CGQ77 MTM 5 SCoPQ",
    "defaultExtent": "{\"xmin\": -5317767.571686546, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2012: {
    "label": "NAD 1927 CGQ77 MTM 6 SCoPQ",
    "defaultExtent": "{\"xmin\": -5317767.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2013: {
    "label": "NAD 1927 CGQ77 MTM 7 SCoPQ",
    "defaultExtent": "{\"xmin\": -5317767.571686542, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2014: {
    "label": "NAD 1927 CGQ77 MTM 8 SCoPQ",
    "defaultExtent": "{\"xmin\": -5317767.571686546, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2015: {
    "label": "NAD 1927 CGQ77 MTM 9 SCoPQ",
    "defaultExtent": "{\"xmin\": -5317767.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2016: {
    "label": "NAD 1927 CGQ77 MTM 10 SCoPQ",
    "defaultExtent": "{\"xmin\": -5317767.571686542, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686545, \"ymax\": 9609572.266315753}"
  },
  2017: {
    "label": "NAD 1927 DEF 1976 MTM 8",
    "defaultExtent": "{\"xmin\": -5317767.571686546, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2018: {
    "label": "NAD 1927 DEF 1976 MTM 9",
    "defaultExtent": "{\"xmin\": -5317767.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2019: {
    "label": "NAD 1927 DEF 1976 MTM 10",
    "defaultExtent": "{\"xmin\": -5317767.571686542, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686545, \"ymax\": 9609572.266315753}"
  },
  2020: {
    "label": "NAD 1927 DEF 1976 MTM 11",
    "defaultExtent": "{\"xmin\": -5317767.571686546, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2021: {
    "label": "NAD 1927 DEF 1976 MTM 12",
    "defaultExtent": "{\"xmin\": -5317767.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2022: {
    "label": "NAD 1927 DEF 1976 MTM 13",
    "defaultExtent": "{\"xmin\": -5317767.571686542, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686545, \"ymax\": 9609572.266315753}"
  },
  2023: {
    "label": "NAD 1927 DEF 1976 MTM 14",
    "defaultExtent": "{\"xmin\": -5317767.571686542, \"ymin\": -9609572.26631576, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2024: {
    "label": "NAD 1927 DEF 1976 MTM 15",
    "defaultExtent": "{\"xmin\": -5317767.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2025: {
    "label": "NAD 1927 DEF 1976 MTM 16",
    "defaultExtent": "{\"xmin\": -5317767.571686542, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2026: {
    "label": "NAD 1927 DEF 1976 MTM 17",
    "defaultExtent": "{\"xmin\": -5317767.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  2027: {
    "label": "NAD 1927 DEF 1976 UTM Zone 15N",
    "defaultExtent": "{\"xmin\": -5120880.63272114, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  2028: {
    "label": "NAD 1927 DEF 1976 UTM Zone 16N",
    "defaultExtent": "{\"xmin\": -5120880.63272114, \"ymin\": -9606689.106319865, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  2029: {
    "label": "NAD 1927 DEF 1976 UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  2030: {
    "label": "NAD 1927 DEF 1976 UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120880.632721144, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  2031: {
    "label": "NAD 1927 CGQ77 UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  2032: {
    "label": "NAD 1927 CGQ77 UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120880.632721144, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  2033: {
    "label": "NAD 1927 CGQ77 UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120880.632721144, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  2034: {
    "label": "NAD 1927 CGQ77 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  2035: {
    "label": "NAD 1927 CGQ77 UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  2039: {
    "label": "Israel TM Grid",
    "defaultExtent": "{\"xmin\": -5403521.063100083, \"ymin\": -12496211.12664412, \"xmax\": 5842580.231100084, \"ymax\": 6725177.229542296}"
  },
  2040: {
    "label": "Locodjo 1965 UTM Zone 30N",
    "defaultExtent": "{\"xmin\": -5120944.444949271, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  2041: {
    "label": "Abidjan 1987 UTM Zone 30N",
    "defaultExtent": "{\"xmin\": -5120944.444949271, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  2042: {
    "label": "Locodjo 1965 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  2043: {
    "label": "Abidjan 1987 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  2044: {
    "label": "Hanoi 1972 GK Zone 18",
    "defaultExtent": "{\"xmin\": 12876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 24123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2045: {
    "label": "Hanoi 1972 GK Zone 19",
    "defaultExtent": "{\"xmin\": 13876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 25123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2056: {
    "label": "CH1903+ LV95",
    "defaultExtent": "{\"xmin\": -27386227.448577397, \"ymin\": -32067738.605040614, \"xmax\": 12489449.048149817, \"ymax\": 31815241.658078846}"
  },
  2057: {
    "label": "Rassadiran Nakhl e Taqi",
    "defaultExtent": "{\"xmin\": -29926354.55882242, \"ymin\": -19918901.197766192, \"xmax\": 35077639.814961664, \"ymax\": 19885128.006973}"
  },
  2058: {
    "label": "ED 1950 ED77 UTM Zone 38N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2059: {
    "label": "ED 1950 ED77 UTM Zone 39N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542034, \"ymax\": 9607087.052499557}"
  },
  2060: {
    "label": "ED 1950 ED77 UTM Zone 40N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2061: {
    "label": "ED 1950 ED77 UTM Zone 41N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2062: {
    "label": "Madrid 1870 Madrid Spain",
    "defaultExtent": "{\"xmin\": -36349677.85483202, \"ymin\": -28746726.944227017, \"xmax\": 37549677.85368081, \"ymax\": 24227538.492870588}"
  },
  2065: {
    "label": "S-JTSK Ferro Krovak",
    "defaultExtent": "{\"xmin\": -33632762.769879624, \"ymin\": -33699687.51498498, \"xmax\": 33699674.50237148, \"ymax\": 33699687.5149513}"
  },
  2066: {
    "label": "Mount Dillon Tobago Grid",
    "defaultExtent": "{\"xmin\": -24714795.887599796, \"ymin\": -53779334.73830363, \"xmax\": 25089795.887599796, \"ymax\": 41768668.489557534}"
  },
  2067: {
    "label": "Naparima 1955 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2068: {
    "label": "ELD 1979 Libya 5",
    "defaultExtent": "{\"xmin\": -5422693.155186254, \"ymin\": -9609970.331927082, \"xmax\": 5822693.155186254, \"ymax\": 9609970.331927076}"
  },
  2069: {
    "label": "ELD 1979 Libya 6",
    "defaultExtent": "{\"xmin\": -5422693.155186251, \"ymin\": -9609970.331927082, \"xmax\": 5822693.155186254, \"ymax\": 9609970.331927076}"
  },
  2070: {
    "label": "ELD 1979 Libya 7",
    "defaultExtent": "{\"xmin\": -5422693.155186254, \"ymin\": -9609970.331927082, \"xmax\": 5822693.1551862545, \"ymax\": 9609970.331927076}"
  },
  2071: {
    "label": "ELD 1979 Libya 8",
    "defaultExtent": "{\"xmin\": -5422693.155186254, \"ymin\": -9609970.331927082, \"xmax\": 5822693.155186254, \"ymax\": 9609970.331927076}"
  },
  2072: {
    "label": "ELD 1979 Libya 9",
    "defaultExtent": "{\"xmin\": -5422693.155186254, \"ymin\": -9609970.331927082, \"xmax\": 5822693.155186254, \"ymax\": 9609970.331927076}"
  },
  2073: {
    "label": "ELD 1979 Libya 10",
    "defaultExtent": "{\"xmin\": -5422693.155186254, \"ymin\": -9609970.331927082, \"xmax\": 5822693.155186254, \"ymax\": 9609970.331927076}"
  },
  2074: {
    "label": "ELD 1979 Libya 11",
    "defaultExtent": "{\"xmin\": -5422693.155186254, \"ymin\": -9609970.331927082, \"xmax\": 5822693.155186254, \"ymax\": 9609970.331927076}"
  },
  2075: {
    "label": "ELD 1979 Libya 12",
    "defaultExtent": "{\"xmin\": -5422693.155186254, \"ymin\": -9609970.331927082, \"xmax\": 5822693.15518625, \"ymax\": 9609970.331927076}"
  },
  2076: {
    "label": "ELD 1979 Libya 13",
    "defaultExtent": "{\"xmin\": -5422693.155186254, \"ymin\": -9609970.331927082, \"xmax\": 5822693.155186254, \"ymax\": 9609970.331927076}"
  },
  2077: {
    "label": "ELD 1979 UTM Zone 32N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2078: {
    "label": "ELD 1979 UTM Zone 33N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2079: {
    "label": "ELD 1979 UTM Zone 34N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2080: {
    "label": "ELD 1979 UTM Zone 35N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2081: {
    "label": "Chos Malal 1914 Argentina 2",
    "defaultExtent": "{\"xmin\": -3123255.4807343287, \"ymin\": 391356.8739198543, \"xmax\": 8123255.480734327, \"ymax\": 19613219.724059027}"
  },
  2082: {
    "label": "Pampa del Castillo Argentina 2",
    "defaultExtent": "{\"xmin\": -3123255.4807343287, \"ymin\": 391356.8739198543, \"xmax\": 8123255.480734327, \"ymax\": 19613219.724059027}"
  },
  2083: {
    "label": "Hito XVIII 1963 Argentina 2",
    "defaultExtent": "{\"xmin\": -3123255.4807343287, \"ymin\": 391356.8739198543, \"xmax\": 8123255.480734327, \"ymax\": 19613219.724059027}"
  },
  2084: {
    "label": "Hito XVIII 1963 UTM 19S",
    "defaultExtent": "{\"xmin\": -5121006.178542035, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  2085: {
    "label": "NAD 1927 Cuba Norte",
    "defaultExtent": "{\"xmin\": -39042471.53403076, \"ymin\": -26715093.921938278, \"xmax\": 40042471.534030765, \"ymax\": 13786473.853020452}"
  },
  2086: {
    "label": "NAD 1927 Cuba Sur",
    "defaultExtent": "{\"xmin\": -38652658.93796885, \"ymin\": -26583087.797057137, \"xmax\": 39652658.93804861, \"ymax\": 14289203.12179948}"
  },
  2087: {
    "label": "ELD 1979 TM 12 NE",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2088: {
    "label": "Carthage TM 11 NE",
    "defaultExtent": "{\"xmin\": -5120944.475688977, \"ymin\": -9606659.335852288, \"xmax\": 6120944.475688979, \"ymax\": 9606659.335852282}"
  },
  2089: {
    "label": "Yemen NGN 1996 UTM Zone 38N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  2090: {
    "label": "Yemen NGN 1996 UTM Zone 39N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699435, \"ymax\": 9606785.535047516}"
  },
  2093: {
    "label": "Hanoi 1972 GK 106 NE",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2094: {
    "label": "WGS 1972 BE TM 106 NE",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  2095: {
    "label": "Bissau UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2096: {
    "label": "Korean 1985 Korea East Belt",
    "defaultExtent": "{\"xmin\": -5422345.712638919, \"ymin\": -13316646.83479561, \"xmax\": 5822345.712638919, \"ymax\": 5902491.419305773}"
  },
  2097: {
    "label": "Korean 1985 Korea Central Belt",
    "defaultExtent": "{\"xmin\": -5422345.712638919, \"ymin\": -13316646.83479561, \"xmax\": 5822345.712638919, \"ymax\": 5902491.419305773}"
  },
  2098: {
    "label": "Korean 1985 Korea West Belt",
    "defaultExtent": "{\"xmin\": -5422345.712638919, \"ymin\": -13316646.83479561, \"xmax\": 5822345.712638919, \"ymax\": 5902491.419305773}"
  },
  2099: {
    "label": "Qatar 1948 Qatar Grid",
    "defaultExtent": "{\"xmin\": -4909426.5657816045, \"ymin\": -12319061.998402502, \"xmax\": 5109426.565781605, \"ymax\": 6902180.596532611}"
  },
  2100: {
    "label": "Greek Grid",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767723999, \"ymax\": 9606785.534958888}"
  },
  2101: {
    "label": "Lake Maracaibo Grid M1",
    "defaultExtent": "{\"xmin\": -32511321.141440753, \"ymin\": -26225497.79277541, \"xmax\": 32511321.141368896, \"ymax\": 17577282.923904065}"
  },
  2102: {
    "label": "Lake Maracaibo Grid",
    "defaultExtent": "{\"xmin\": -32311321.141440753, \"ymin\": -26025497.79277541, \"xmax\": 32711321.141368896, \"ymax\": 17777282.923904065}"
  },
  2103: {
    "label": "Lake Maracaibo Grid M3",
    "defaultExtent": "{\"xmin\": -32011321.141440753, \"ymin\": -25725497.79277541, \"xmax\": 33011321.141368896, \"ymax\": 18077282.923904065}"
  },
  2104: {
    "label": "Lake Maracaibo La Rosa Grid",
    "defaultExtent": "{\"xmin\": -32528365.141440753, \"ymin\": -26195952.79077541, \"xmax\": 32494277.141368896, \"ymax\": 17606827.925904065}"
  },
  2105: {
    "label": "NZGD 2000 Mount Eden Circuit",
    "defaultExtent": "{\"xmin\": -5222450.671563505, \"ymin\": -4726914.074119132, \"xmax\": 6022450.671668238, \"ymax\": 14492423.373633703}"
  },
  2106: {
    "label": "NZGD 2000 Bay of Plenty Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972930613, \"ymin\": -4629647.053218633, \"xmax\": 6023012.9728957135, \"ymax\": 14591612.520488545}"
  },
  2107: {
    "label": "NZGD 2000 Poverty Bay Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972843332, \"ymin\": -4533816.938488752, \"xmax\": 6023012.972982994, \"ymax\": 14687442.63522297}"
  },
  2108: {
    "label": "NZGD 2000 Hawkes Bay Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972930617, \"ymin\": -4419869.178591101, \"xmax\": 6023012.9728957135, \"ymax\": 14801390.395116076}"
  },
  2109: {
    "label": "NZGD 2000 Taranaki Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972878254, \"ymin\": -4477076.861570403, \"xmax\": 6023012.972948075, \"ymax\": 14744182.71213829}"
  },
  2110: {
    "label": "NZGD 2000 Tuhirangi Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972913149, \"ymin\": -4435258.699244389, \"xmax\": 6023012.972913173, \"ymax\": 14786000.874461276}"
  },
  2111: {
    "label": "NZGD 2000 Wanganui Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972843336, \"ymin\": -4354235.981375858, \"xmax\": 6023012.972982986, \"ymax\": 14867023.592335863}"
  },
  2112: {
    "label": "NZGD 2000 Wairarapa Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972948059, \"ymin\": -4278354.636567472, \"xmax\": 6023012.972878262, \"ymax\": 14942904.937141221}"
  },
  2113: {
    "label": "NZGD 2000 Wellington Circuit",
    "defaultExtent": "{\"xmin\": -5223012.97289571, \"ymin\": -4236616.053418994, \"xmax\": 6023012.972930617, \"ymax\": 14984643.520288184}"
  },
  2114: {
    "label": "NZGD 2000 Collingwood Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972982981, \"ymin\": -4301736.921640576, \"xmax\": 6023012.972843352, \"ymax\": 14919522.652071146}"
  },
  2115: {
    "label": "NZGD 2000 Nelson Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972860799, \"ymin\": -4239577.6394076105, \"xmax\": 6023012.972965526, \"ymax\": 14981681.934302598}"
  },
  2116: {
    "label": "NZGD 2000 Karamea Circuit",
    "defaultExtent": "{\"xmin\": -5223012.97289571, \"ymin\": -4237880.899118383, \"xmax\": 6023012.972930617, \"ymax\": 14983378.674588792}"
  },
  2117: {
    "label": "NZGD 2000 Buller Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972930613, \"ymin\": -4180034.7755396916, \"xmax\": 6023012.9728957135, \"ymax\": 15041224.798167488}"
  },
  2118: {
    "label": "NZGD 2000 Grey Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972948072, \"ymin\": -4121936.5448016105, \"xmax\": 6023012.972878254, \"ymax\": 15099323.028907083}"
  },
  2119: {
    "label": "NZGD 2000 Amuri Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972913149, \"ymin\": -4082471.144910902, \"xmax\": 6023012.972913173, \"ymax\": 15138788.428794764}"
  },
  2120: {
    "label": "NZGD 2000 Marlborough Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972982981, \"ymin\": -4209590.945141053, \"xmax\": 6023012.972843352, \"ymax\": 15011668.628570668}"
  },
  2121: {
    "label": "NZGD 2000 Hokitika Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972948059, \"ymin\": -4060562.004878413, \"xmax\": 6023012.972878254, \"ymax\": 15160697.56883028}"
  },
  2122: {
    "label": "NZGD 2000 Okarito Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972965518, \"ymin\": -4035689.584065403, \"xmax\": 6023012.972860804, \"ymax\": 15185569.989644803}"
  },
  2123: {
    "label": "NZGD 2000 Jacksons Bay Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972930617, \"ymin\": -3939276.5733710034, \"xmax\": 6023012.9728957135, \"ymax\": 15281983.000336176}"
  },
  2124: {
    "label": "NZGD 2000 Mount Pleasant Circuit",
    "defaultExtent": "{\"xmin\": -5223012.97298297, \"ymin\": -3982300.071245821, \"xmax\": 6023012.972843352, \"ymax\": 15238959.5024659}"
  },
  2125: {
    "label": "NZGD 2000 Gawler Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972843348, \"ymin\": -3964739.1834712774, \"xmax\": 6023012.9729829775, \"ymax\": 15256520.390240442}"
  },
  2126: {
    "label": "NZGD 2000 Timaru Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972948063, \"ymin\": -3892144.8913752744, \"xmax\": 6023012.972878254, \"ymax\": 15329114.68233342}"
  },
  2127: {
    "label": "NZGD 2000 Lindis Peak Circuit",
    "defaultExtent": "{\"xmin\": -5223012.9729131535, \"ymin\": -3855134.6438566605, \"xmax\": 6023012.972913173, \"ymax\": 15366124.929849006}"
  },
  2128: {
    "label": "NZGD 2000 Mount Nicholas Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972930613, \"ymin\": -3810929.406284387, \"xmax\": 6023012.9728957135, \"ymax\": 15410330.16742279}"
  },
  2129: {
    "label": "NZGD 2000 Mount York Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972930608, \"ymin\": -3763047.2005148353, \"xmax\": 6023012.9728957135, \"ymax\": 15458212.373192342}"
  },
  2130: {
    "label": "NZGD 2000 Observation Point Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972965507, \"ymin\": -3734983.0226578964, \"xmax\": 6023012.972860811, \"ymax\": 15486276.551052311}"
  },
  2131: {
    "label": "NZGD 2000 North Taieri Circuit",
    "defaultExtent": "{\"xmin\": -5222788.052394249, \"ymin\": -3729769.282580708, \"xmax\": 6022788.052394249, \"ymax\": 15490721.440742007}"
  },
  2132: {
    "label": "NZGD 2000 Bluff Circuit",
    "defaultExtent": "{\"xmin\": -5223012.972878254, \"ymin\": -3647849.553718252, \"xmax\": 6023012.972948075, \"ymax\": 15573410.01999044}"
  },
  2133: {
    "label": "NZGD 2000 UTM Zone 58S",
    "defaultExtent": "{\"xmin\": -5120763.76772398, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  2134: {
    "label": "NZGD 2000 UTM Zone 59S",
    "defaultExtent": "{\"xmin\": -5120763.76772398, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  2135: {
    "label": "NZGD 2000 UTM Zone 60S",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  2136: {
    "label": "Accra Ghana Grid",
    "defaultExtent": "{\"xmin\": -17544207.536361087, \"ymin\": -33215967.608121596, \"xmax\": 19344207.536361087, \"ymax\": 29830908.4451378}"
  },
  2137: {
    "label": "Accra TM 1 NW",
    "defaultExtent": "{\"xmin\": -5120945.63237391, \"ymin\": -9606893.16382267, \"xmax\": 6120945.63237391, \"ymax\": 9606893.163822664}"
  },
  2138: {
    "label": "NAD 1927 CGQ77 Quebec Lambert",
    "defaultExtent": "{\"xmin\": -35680010.172839805, \"ymin\": -29914856.728651848, \"xmax\": 35681054.02616269, \"ymax\": 34676682.98203933}"
  },
  2154: {
    "label": "RGF 1993 Lambert 93",
    "defaultExtent": "{\"xmin\": -35597354.96561363, \"ymin\": -23641742.915780753, \"xmax\": 36997354.96567414, \"ymax\": 36281510.84249297}"
  },
  2157: {
    "label": "IRENET95 Irish Transverse Mercator",
    "defaultExtent": "{\"xmin\": -5022000.830578041, \"ymin\": -14788098.285919925, \"xmax\": 6222000.830578041, \"ymax\": 4429701.461104079}"
  },
  2158: {
    "label": "IRENET95 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  2159: {
    "label": "Sierra Leone 1924 New Colony Grid",
    "defaultExtent": "{\"xmin\": -17948819.741296414, \"ymin\": -33949880.98263223, \"xmax\": 18948819.74129641, \"ymax\": 29112760.7310556}"
  },
  2160: {
    "label": "Sierra Leone 1924 New War Office Grid",
    "defaultExtent": "{\"xmin\": -17648819.74129641, \"ymin\": -33349880.98263223, \"xmax\": 19248819.741296414, \"ymax\": 29712760.731055595}"
  },
  2161: {
    "label": "Sierra Leone 1968 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  2162: {
    "label": "Sierra Leone 1968 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  2163: {
    "label": "US National Atlas Equal Area",
    "defaultExtent": "{\"xmin\": -12741963.67642718, \"ymin\": -12741963.676353633, \"xmax\": 12741963.676424429, \"ymax\": 12741963.67623926}"
  },
  2164: {
    "label": "Locodjo 1965 TM 5 NW",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  2165: {
    "label": "Abidjan 1987 TM 5 NW",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  2169: {
    "label": "Luxembourg 1930 Gauss",
    "defaultExtent": "{\"xmin\": -5543255.480734328, \"ymin\": -15033351.564889232, \"xmax\": 5703255.480734327, \"ymax\": 4188511.285249942}"
  },
  2170: {
    "label": "MGI Slovenia Grid",
    "defaultExtent": "{\"xmin\": -5121783.478067655, \"ymin\": -9608608.17013799, \"xmax\": 6121783.478067655, \"ymax\": 9608608.170137983}"
  },
  2172: {
    "label": "Pulkovo 1942 Adj 1958 Poland Zone II",
    "defaultExtent": "{\"xmin\": -26065569.363572035, \"ymin\": -24937516.03734677, \"xmax\": 35271569.36357747, \"ymax\": 36452418.27478253}"
  },
  2173: {
    "label": "Pulkovo 1942 Adj 1958 Poland Zone III",
    "defaultExtent": "{\"xmin\": -27163598.314889286, \"ymin\": -24742211.285152666, \"xmax\": 34165598.31472582, \"ymax\": 36640728.145694464}"
  },
  2174: {
    "label": "Pulkovo 1942 Adj 1958 Poland Zone IV",
    "defaultExtent": "{\"xmin\": -26974921.312138308, \"ymin\": -25121418.529166248, \"xmax\": 34380921.31167108, \"ymax\": 36284270.467157505}"
  },
  2175: {
    "label": "Pulkovo 1942 Adj 1958 Poland Zone V",
    "defaultExtent": "{\"xmin\": -5386011.874699769, \"ymin\": -14310631.732616123, \"xmax\": 5860011.874699769, \"ymax\": 4910631.732616119}"
  },
  2176: {
    "label": "ETRS 1989 Poland CS2000 Zone 5",
    "defaultExtent": "{\"xmin\": -122580.0009142505, \"ymin\": -9609889.768380051, \"xmax\": 11122580.00091425, \"ymax\": 9609889.768380046}"
  },
  2177: {
    "label": "ETRS 1989 Poland CS2000 Zone 6",
    "defaultExtent": "{\"xmin\": 877419.9990857495, \"ymin\": -9609889.768380051, \"xmax\": 12122580.00091425, \"ymax\": 9609889.768380046}"
  },
  2178: {
    "label": "ETRS 1989 Poland CS2000 Zone 7",
    "defaultExtent": "{\"xmin\": 1877419.9990857495, \"ymin\": -9609889.768380051, \"xmax\": 13122580.00091425, \"ymax\": 9609889.768380046}"
  },
  2179: {
    "label": "ETRS 1989 Poland CS2000 Zone 8",
    "defaultExtent": "{\"xmin\": 2877419.9990857495, \"ymin\": -9609889.768380051, \"xmax\": 14122580.00091425, \"ymax\": 9609889.768380046}"
  },
  2180: {
    "label": "ETRS 1989 Poland CS92",
    "defaultExtent": "{\"xmin\": -5119076.863832125, \"ymin\": -14903902.34602283, \"xmax\": 6119076.863832125, \"ymax\": 4303902.346022826}"
  },
  2181: {
    "label": "ED 1950 Turkey 9",
    "defaultExtent": "{\"xmin\": 3878993.821457967, \"ymin\": -9607087.05249956, \"xmax\": 15121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2182: {
    "label": "ED 1950 Turkey 10",
    "defaultExtent": "{\"xmin\": 4878993.821457967, \"ymin\": -9607087.05249956, \"xmax\": 16121006.178542031, \"ymax\": 9607087.052499557}"
  },
  2183: {
    "label": "ED 1950 Turkey 11",
    "defaultExtent": "{\"xmin\": 5878993.821457967, \"ymin\": -9607087.05249956, \"xmax\": 17121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2184: {
    "label": "ED 1950 Turkey 12",
    "defaultExtent": "{\"xmin\": 6878993.821457967, \"ymin\": -9607087.05249956, \"xmax\": 18121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2185: {
    "label": "ED 1950 Turkey 13",
    "defaultExtent": "{\"xmin\": 7878993.821457967, \"ymin\": -9607087.05249956, \"xmax\": 19121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2186: {
    "label": "ED 1950 Turkey 14",
    "defaultExtent": "{\"xmin\": 8878993.821457967, \"ymin\": -9607087.05249956, \"xmax\": 20121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2187: {
    "label": "ED 1950 Turkey 15",
    "defaultExtent": "{\"xmin\": 9878993.821457967, \"ymin\": -9607087.05249956, \"xmax\": 21121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2188: {
    "label": "Azores Occidental 1939 UTM Zone 25N",
    "defaultExtent": "{\"xmin\": -5121006.178542031, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2189: {
    "label": "Azores Central 1948 UTM Zone 26N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2190: {
    "label": "Azores Oriental 1940 UTM Zone 26N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2191: {
    "label": "Madeira 1936 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2192: {
    "label": "ED 1950 France EuroLambert",
    "defaultExtent": "{\"xmin\": -35694046.103438176, \"ymin\": -28094349.070989404, \"xmax\": 36894046.103399254, \"ymax\": 32113038.798133034}"
  },
  2193: {
    "label": "NZGD 2000 New Zealand Transverse Mercator",
    "defaultExtent": "{\"xmin\": -4020763.767723984, \"ymin\": 393214.4650619123, \"xmax\": 7220763.767724008, \"ymax\": 19606785.534938097}"
  },
  2195: {
    "label": "NAD 1983 HARN UTM Zone 2S",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  2196: {
    "label": "ETRS 1989 Kp2000 Jutland",
    "defaultExtent": "{\"xmin\": -5422731.8222645195, \"ymin\": -9610149.255384298, \"xmax\": 5822731.8222645195, \"ymax\": 9610149.255384292}"
  },
  2197: {
    "label": "ETRS 1989 Kp2000 Zealand",
    "defaultExtent": "{\"xmin\": -5122731.8222645195, \"ymin\": -9610149.255384298, \"xmax\": 6122731.8222645195, \"ymax\": 9610149.255384292}"
  },
  2198: {
    "label": "ETRS 1989 Kp2000 Bornholm",
    "defaultExtent": "{\"xmin\": -4723012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6523012.972913165, \"ymax\": 9610629.786873637}"
  },
  2200: {
    "label": "ATS 1977 New Brunswick Stereographic",
    "defaultExtent": "{\"xmin\": -30416599.611189995, \"ymin\": -29744560.485488568, \"xmax\": 31016599.61129628, \"ymax\": 31499030.265266657}"
  },
  2201: {
    "label": "REGVEN UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  2202: {
    "label": "REGVEN UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  2203: {
    "label": "REGVEN UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  2204: {
    "label": "NAD 1927 StatePlane Tennessee FIPS 4100",
    "defaultExtent": "{\"xmin\": -121484079.03694716, \"ymin\": -93948929.07689278, \"xmax\": 125484079.03734456, \"ymax\": 62283766.187677965}"
  },
  2205: {
    "label": "NAD 1983 StatePlane Kentucky North FIPS 1601",
    "defaultExtent": "{\"xmin\": -36706540.6144563, \"ymin\": -29061234.143652882, \"xmax\": 37706540.61484275, \"ymax\": 22066321.05409854}"
  },
  2206: {
    "label": "ED 1950 3 Degree GK Zone 9",
    "defaultExtent": "{\"xmin\": 3876744.519265673, \"ymin\": -9610931.42506959, \"xmax\": 15123255.480734326, \"ymax\": 9610931.425069584}"
  },
  2207: {
    "label": "ED 1950 3 Degree GK Zone 10",
    "defaultExtent": "{\"xmin\": 4876744.519265673, \"ymin\": -9610931.42506959, \"xmax\": 16123255.480734326, \"ymax\": 9610931.425069584}"
  },
  2208: {
    "label": "ED 1950 3 Degree GK Zone 11",
    "defaultExtent": "{\"xmin\": 5876744.519265673, \"ymin\": -9610931.42506959, \"xmax\": 17123255.480734326, \"ymax\": 9610931.425069584}"
  },
  2209: {
    "label": "ED 1950 3 Degree GK Zone 12",
    "defaultExtent": "{\"xmin\": 6876744.519265673, \"ymin\": -9610931.42506959, \"xmax\": 18123255.480734326, \"ymax\": 9610931.425069584}"
  },
  2210: {
    "label": "ED 1950 3 Degree GK Zone 13",
    "defaultExtent": "{\"xmin\": 7876744.519265673, \"ymin\": -9610931.42506959, \"xmax\": 19123255.480734326, \"ymax\": 9610931.425069584}"
  },
  2211: {
    "label": "ED 1950 3 Degree GK Zone 14",
    "defaultExtent": "{\"xmin\": 8876744.519265674, \"ymin\": -9610931.42506959, \"xmax\": 20123255.480734326, \"ymax\": 9610931.425069584}"
  },
  2212: {
    "label": "ED 1950 3 Degree GK Zone 15",
    "defaultExtent": "{\"xmin\": 9876744.519265674, \"ymin\": -9610931.42506959, \"xmax\": 21123255.480734326, \"ymax\": 9610931.425069584}"
  },
  2213: {
    "label": "ETRS 1989 TM 30 NE",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767723999, \"ymax\": 9606785.534958888}"
  },
  2215: {
    "label": "Manoca 1962 UTM Zone 32N",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": -9606659.335852288, \"xmax\": 6120944.475688979, \"ymax\": 9606659.335852282}"
  },
  2216: {
    "label": "Qornoq 1927 UTM Zone 22N",
    "defaultExtent": "{\"xmin\": -5121006.178542034, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2217: {
    "label": "Qornoq 1927 UTM Zone 23N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2219: {
    "label": "ATS 1977 UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120762.00894637, \"ymin\": -9606782.509083675, \"xmax\": 6120762.0089463685, \"ymax\": 9606782.50908367}"
  },
  2220: {
    "label": "ATS 1977 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120762.0089463685, \"ymin\": -9606782.509083675, \"xmax\": 6120762.0089463685, \"ymax\": 9606782.50908367}"
  },
  2222: {
    "label": "NAD 1983 StatePlane Arizona East FIPS 0201 Feet Intl",
    "defaultExtent": "{\"xmin\": -17746360.47118069, \"ymin\": -42783136.31847593, \"xmax\": 19146360.47118069, \"ymax\": 20272432.735952888}"
  },
  2223: {
    "label": "NAD 1983 StatePlane Arizona Central FIPS 0202 Feet Intl",
    "defaultExtent": "{\"xmin\": -17746360.47118068, \"ymin\": -42783136.31847593, \"xmax\": 19146360.47118069, \"ymax\": 20272432.735952888}"
  },
  2224: {
    "label": "NAD 1983 StatePlane Arizona West FIPS 0203 Feet Intl",
    "defaultExtent": "{\"xmin\": -17746975.41135708, \"ymin\": -42784562.5656446, \"xmax\": 19146975.41135708, \"ymax\": 20273108.55129229}"
  },
  2225: {
    "label": "NAD 1983 StatePlane California I FIPS 0401 Feet",
    "defaultExtent": "{\"xmin\": -114458610.55480444, \"ymin\": -94588064.20459928, \"xmax\": 127581943.88890164, \"ymax\": 82685969.32718042}"
  },
  2226: {
    "label": "NAD 1983 StatePlane California II FIPS 0402 Feet",
    "defaultExtent": "{\"xmin\": -115211412.98768437, \"ymin\": -93821072.13784765, \"xmax\": 128334746.32134637, \"ymax\": 76478294.09990206}"
  },
  2227: {
    "label": "NAD 1983 StatePlane California III FIPS 0403 Feet",
    "defaultExtent": "{\"xmin\": -115860210.37094994, \"ymin\": -93269129.6599007, \"xmax\": 128983543.70415375, \"ymax\": 71428330.00270241}"
  },
  2228: {
    "label": "NAD 1983 StatePlane California IV FIPS 0404 Feet",
    "defaultExtent": "{\"xmin\": -116465913.66438816, \"ymin\": -92734900.17158945, \"xmax\": 129589246.99847071, \"ymax\": 67053603.00798039}"
  },
  2229: {
    "label": "NAD 1983 StatePlane California V FIPS 0405 Feet",
    "defaultExtent": "{\"xmin\": -117608557.49121174, \"ymin\": -91881062.55921307, \"xmax\": 130731890.82417348, \"ymax\": 59380571.79304032}"
  },
  2230: {
    "label": "NAD 1983 StatePlane California VI FIPS 0406 Feet",
    "defaultExtent": "{\"xmin\": -118608490.04197799, \"ymin\": -91259162.22866274, \"xmax\": 131731823.37510438, \"ymax\": 53304515.12412693}"
  },
  2231: {
    "label": "NAD 1983 StatePlane Colorado North FIPS 0501 Feet",
    "defaultExtent": "{\"xmin\": -118265167.59051295, \"ymin\": -95179746.55749778, \"xmax\": 124265167.5923714, \"ymax\": 79822140.81045881}"
  },
  2232: {
    "label": "NAD 1983 StatePlane Colorado Central FIPS 0502 Feet",
    "defaultExtent": "{\"xmin\": -118767524.2862273, \"ymin\": -94525123.55933148, \"xmax\": 124767524.28523397, \"ymax\": 75844078.47557206}"
  },
  2233: {
    "label": "NAD 1983 StatePlane Colorado South FIPS 0503 Feet",
    "defaultExtent": "{\"xmin\": -119380948.96589889, \"ymin\": -93979378.42345235, \"xmax\": 125380948.96797225, \"ymax\": 71076245.23941058}"
  },
  2234: {
    "label": "NAD 1983 StatePlane Connecticut FIPS 0600 Feet",
    "defaultExtent": "{\"xmin\": -119755880.50351368, \"ymin\": -96342133.97695734, \"xmax\": 121755880.50251827, \"ymax\": 83602707.3085715}"
  },
  2235: {
    "label": "NAD 1983 StatePlane Delaware FIPS 0700 Feet",
    "defaultExtent": "{\"xmin\": -17791909.487790633, \"ymin\": -45334747.63504151, \"xmax\": 19104242.821123965, \"ymax\": 17726686.174415406}"
  },
  2236: {
    "label": "NAD 1983 StatePlane Florida East FIPS 0901 Feet",
    "defaultExtent": "{\"xmin\": -17790916.542256415, \"ymin\": -40361188.817423075, \"xmax\": 19103249.875589747, \"ymax\": 22696850.786125436}"
  },
  2237: {
    "label": "NAD 1983 StatePlane Florida West FIPS 0902 Feet",
    "defaultExtent": "{\"xmin\": -17790916.542256407, \"ymin\": -40361188.817423075, \"xmax\": 19103249.875589747, \"ymax\": 22696850.786125436}"
  },
  2238: {
    "label": "NAD 1983 StatePlane Florida North FIPS 0903 Feet",
    "defaultExtent": "{\"xmin\": -125938673.75279626, \"ymin\": -91452964.48785444, \"xmax\": 129875673.75419696, \"ymax\": 37469174.881458886}"
  },
  2239: {
    "label": "NAD 1983 StatePlane Georgia East FIPS 1001 Feet",
    "defaultExtent": "{\"xmin\": -17790156.91179308, \"ymin\": -42419370.90387128, \"xmax\": 19102490.24512641, \"ymax\": 20636072.039419413}"
  },
  2240: {
    "label": "NAD 1983 StatePlane Georgia West FIPS 1002 Feet",
    "defaultExtent": "{\"xmin\": -16149740.245126404, \"ymin\": -42419370.90387128, \"xmax\": 20742906.91179307, \"ymax\": 20636072.039419413}"
  },
  2241: {
    "label": "NAD 1983 StatePlane Idaho East FIPS 1101 Feet",
    "defaultExtent": "{\"xmin\": -17791030.77240127, \"ymin\": -46668196.09827923, \"xmax\": 19103364.105734605, \"ymax\": 16390233.980496006}"
  },
  2242: {
    "label": "NAD 1983 StatePlane Idaho Central FIPS 1102 Feet",
    "defaultExtent": "{\"xmin\": -16806780.77240127, \"ymin\": -46668196.09827923, \"xmax\": 20087614.105734613, \"ymax\": 16390233.980496006}"
  },
  2243: {
    "label": "NAD 1983 StatePlane Idaho West FIPS 1103 Feet",
    "defaultExtent": "{\"xmin\": -15822271.850739589, \"ymin\": -46667541.07157821, \"xmax\": 21071605.18407292, \"ymax\": 16390003.930016432}"
  },
  2246: {
    "label": "NAD 1983 StatePlane Kentucky North FIPS 1601 Feet",
    "defaultExtent": "{\"xmin\": -120428041.99926203, \"ymin\": -95345065.68630116, \"xmax\": 123708875.33386324, \"ymax\": 72395921.65832162}"
  },
  2247: {
    "label": "NAD 1983 StatePlane Kentucky South FIPS 1602 Feet",
    "defaultExtent": "{\"xmin\": -121000416.20168285, \"ymin\": -93168846.35527569, \"xmax\": 124281249.53427276, \"ymax\": 69730104.69593088}"
  },
  2248: {
    "label": "NAD 1983 StatePlane Maryland FIPS 1900 Feet",
    "defaultExtent": "{\"xmin\": -120560806.33287005, \"ymin\": -95443984.07002771, \"xmax\": 123185473.00068705, \"ymax\": 73998139.81175338}"
  },
  2249: {
    "label": "NAD 1983 StatePlane Massachusetts Mainland FIPS 2001 Feet",
    "defaultExtent": "{\"xmin\": -119851157.08837874, \"ymin\": -94497855.62743106, \"xmax\": 121163490.421691, \"ymax\": 87915078.06965832}"
  },
  2250: {
    "label": "NAD 1983 StatePlane Massachusetts Island FIPS 2002 Feet",
    "defaultExtent": "{\"xmin\": -119174181.5124591, \"ymin\": -96890792.84508213, \"xmax\": 122455014.84498255, \"ymax\": 82490183.72572033}"
  },
  2251: {
    "label": "NAD 1983 StatePlane Michigan North FIPS 2111 Feet Intl",
    "defaultExtent": "{\"xmin\": -92972467.72510123, \"ymin\": -98631116.53314169, \"xmax\": 145465906.0456582, \"ymax\": 97383435.38129252}"
  },
  2252: {
    "label": "NAD 1983 StatePlane Michigan Central FIPS 2112 Feet Intl",
    "defaultExtent": "{\"xmin\": -99918604.4313006, \"ymin\": -98010270.3373822, \"xmax\": 139288683.17293534, \"ymax\": 93827998.58621791}"
  },
  2253: {
    "label": "NAD 1983 StatePlane Michigan South FIPS 2113 Feet Intl",
    "defaultExtent": "{\"xmin\": -107138194.28103462, \"ymin\": -97193419.70523094, \"xmax\": 133384913.43970798, \"ymax\": 87676226.96755593}"
  },
  2254: {
    "label": "NAD 1983 StatePlane Mississippi East FIPS 2301 Feet",
    "defaultExtent": "{\"xmin\": -17462995.9868795, \"ymin\": -42239663.87008002, \"xmax\": 19431495.98687951, \"ymax\": 20818932.160666604}"
  },
  2255: {
    "label": "NAD 1983 StatePlane Mississippi West FIPS 2302 Feet",
    "defaultExtent": "{\"xmin\": -16150662.653546175, \"ymin\": -42239663.87008, \"xmax\": 20743829.32021284, \"ymax\": 20818932.160666604}"
  },
  2256: {
    "label": "NAD 1983 StatePlane Montana FIPS 2500 Feet Intl",
    "defaultExtent": "{\"xmin\": -117013995.52207346, \"ymin\": -98447330.28043139, \"xmax\": 120951003.39639506, \"ymax\": 99640574.5270326}"
  },
  2257: {
    "label": "NAD 1983 StatePlane New Mexico East FIPS 3001 Feet",
    "defaultExtent": "{\"xmin\": -17905153.78908151, \"ymin\": -42783439.727925874, \"xmax\": 18987828.789081518, \"ymax\": 20272576.503993165}"
  },
  2258: {
    "label": "NAD 1983 StatePlane New Mexico Central FIPS 3002 Feet",
    "defaultExtent": "{\"xmin\": -16805906.91179308, \"ymin\": -42783050.752203286, \"xmax\": 20086740.24512641, \"ymax\": 20272392.191087414}"
  },
  2259: {
    "label": "NAD 1983 StatePlane New Mexico West FIPS 3003 Feet",
    "defaultExtent": "{\"xmin\": -15723539.381266333, \"ymin\": -42783763.87436138, \"xmax\": 21169722.714599665, \"ymax\": 20272730.0980813}"
  },
  2260: {
    "label": "NAD 1983 StatePlane New York East FIPS 3101 Feet",
    "defaultExtent": "{\"xmin\": -17954198.578459747, \"ymin\": -45633899.523189425, \"xmax\": 18938448.578459747, \"ymax\": 17421543.42010127}"
  },
  2261: {
    "label": "NAD 1983 StatePlane New York Central FIPS 3102 Feet",
    "defaultExtent": "{\"xmin\": -17626807.051441226, \"ymin\": -46060542.08865336, \"xmax\": 19267223.7181079, \"ymax\": 16997265.67022927}"
  },
  2262: {
    "label": "NAD 1983 StatePlane New York West FIPS 3103 Feet",
    "defaultExtent": "{\"xmin\": -17298723.718107905, \"ymin\": -46060542.08865336, \"xmax\": 19595307.051441234, \"ymax\": 16997265.67022927}"
  },
  2263: {
    "label": "NAD 1983 StatePlane New York Long Island FIPS 3104 Feet",
    "defaultExtent": "{\"xmin\": -120038987.02345988, \"ymin\": -96539899.17850932, \"xmax\": 122007487.02620924, \"ymax\": 80805040.5747754}"
  },
  2264: {
    "label": "NAD 1983 StatePlane North Carolina FIPS 3200 Feet",
    "defaultExtent": "{\"xmin\": -121841586.87741105, \"ymin\": -93658623.64436917, \"xmax\": 125841586.88327493, \"ymax\": 59913544.75136323}"
  },
  2265: {
    "label": "NAD 1983 StatePlane North Dakota North FIPS 3301 Feet Intl",
    "defaultExtent": "{\"xmin\": -116783950.51168965, \"ymin\": -99537492.31395046, \"xmax\": 120720958.38720465, \"ymax\": 101623824.1606784}"
  },
  2266: {
    "label": "NAD 1983 StatePlane North Dakota South FIPS 3302 Feet Intl",
    "defaultExtent": "{\"xmin\": -117105075.65506853, \"ymin\": -98987163.59963356, \"xmax\": 121042083.53063746, \"ymax\": 98657782.40360132}"
  },
  2267: {
    "label": "NAD 1983 StatePlane Oklahoma North FIPS 3501 Feet",
    "defaultExtent": "{\"xmin\": -121322703.18440174, \"ymin\": -94209043.74450657, \"xmax\": 125259703.18427433, \"ymax\": 63533994.71936889}"
  },
  2268: {
    "label": "NAD 1983 StatePlane Oklahoma South FIPS 3502 Feet",
    "defaultExtent": "{\"xmin\": -122314145.16124853, \"ymin\": -93445293.73183505, \"xmax\": 126251145.15971924, \"ymax\": 57039858.7775079}"
  },
  2269: {
    "label": "NAD 1983 StatePlane Oregon North FIPS 3601 Feet Intl",
    "defaultExtent": "{\"xmin\": -111333319.15464048, \"ymin\": -98152135.76997603, \"xmax\": 127737518.6308039, \"ymax\": 94405600.09722382}"
  },
  2270: {
    "label": "NAD 1983 StatePlane Oregon South FIPS 3602 Feet Intl",
    "defaultExtent": "{\"xmin\": -115242838.16340137, \"ymin\": -97276009.95433559, \"xmax\": 125085357.8485172, \"ymax\": 88591642.56355196}"
  },
  2271: {
    "label": "NAD 1983 StatePlane Pennsylvania North FIPS 3701 Feet",
    "defaultExtent": "{\"xmin\": -118829356.74151887, \"ymin\": -96587444.64488281, \"xmax\": 122766356.74360676, \"ymax\": 82916574.83834386}"
  },
  2272: {
    "label": "NAD 1983 StatePlane Pennsylvania South FIPS 3702 Feet",
    "defaultExtent": "{\"xmin\": -119213784.2218722, \"ymin\": -96198102.70097685, \"xmax\": 123150784.2210237, \"ymax\": 79590002.60442021}"
  },
  2273: {
    "label": "NAD 1983 StatePlane South Carolina FIPS 3900 Feet Intl",
    "defaultExtent": "{\"xmin\": -122907247.20356415, \"ymin\": -92800295.78573051, \"xmax\": 126907247.20854722, \"ymax\": 53349900.40648384}"
  },
  2274: {
    "label": "NAD 1983 StatePlane Tennessee FIPS 4100 Feet",
    "defaultExtent": "{\"xmin\": -121520920.4350513, \"ymin\": -93933602.54162051, \"xmax\": 125457920.43544713, \"ymax\": 62305849.94527583}"
  },
  2275: {
    "label": "NAD 1983 StatePlane Texas North FIPS 4201 Feet",
    "defaultExtent": "{\"xmin\": -123084727.03576224, \"ymin\": -90487774.87579198, \"xmax\": 124397060.36918813, \"ymax\": 63851419.2061681}"
  },
  2276: {
    "label": "NAD 1983 StatePlane Texas North Central FIPS 4202 Feet",
    "defaultExtent": "{\"xmin\": -123407288.90697485, \"ymin\": -86123158.24650788, \"xmax\": 127344288.90679376, \"ymax\": 57072008.04375381}"
  },
  2277: {
    "label": "NAD 1983 StatePlane Texas Central FIPS 4203 Feet",
    "defaultExtent": "{\"xmin\": -124805075.29653856, \"ymin\": -81922742.74194843, \"xmax\": 129398241.96319537, \"ymax\": 51189696.39569576}"
  },
  2278: {
    "label": "NAD 1983 StatePlane Texas South Central FIPS 4204 Feet",
    "defaultExtent": "{\"xmin\": -126725298.51400925, \"ymin\": -77828390.98283607, \"xmax\": 130662298.51400925, \"ymax\": 50600114.754025035}"
  },
  2279: {
    "label": "NAD 1983 StatePlane Texas South FIPS 4205 Feet",
    "defaultExtent": "{\"xmin\": -129208724.97637452, \"ymin\": -73583789.01494722, \"xmax\": 131177224.97637452, \"ymax\": 56202225.512442015}"
  },
  2280: {
    "label": "NAD 1983 StatePlane Utah North FIPS 4301 Feet Intl",
    "defaultExtent": "{\"xmin\": -119221897.73343366, \"ymin\": -93352960.55201896, \"xmax\": 122502737.93217586, \"ymax\": 85520637.00545405}"
  },
  2281: {
    "label": "NAD 1983 StatePlane Utah Central FIPS 4302 Feet Intl",
    "defaultExtent": "{\"xmin\": -119796785.37297969, \"ymin\": -89212006.47602427, \"xmax\": 123077625.27009863, \"ymax\": 84130276.14041065}"
  },
  2282: {
    "label": "NAD 1983 StatePlane Utah South FIPS 4303 Feet Intl",
    "defaultExtent": "{\"xmin\": -120766876.88852009, \"ymin\": -85132571.66656305, \"xmax\": 124047716.78259352, \"ymax\": 79709545.58655652}"
  },
  2283: {
    "label": "NAD 1983 StatePlane Virginia North FIPS 4501 Feet",
    "defaultExtent": "{\"xmin\": -110512122.6100782, \"ymin\": -88857586.91005945, \"xmax\": 133477955.94636394, \"ymax\": 79510388.9753926}"
  },
  2284: {
    "label": "NAD 1983 StatePlane Virginia South FIPS 4502 Feet",
    "defaultExtent": "{\"xmin\": -111140252.78501177, \"ymin\": -91531690.27508196, \"xmax\": 134106086.11804111, \"ymax\": 71512049.29681908}"
  },
  2285: {
    "label": "NAD 1983 StatePlane Washington North FIPS 4601 Feet",
    "defaultExtent": "{\"xmin\": -117104065.01403554, \"ymin\": -99539209.71191388, \"xmax\": 120384898.34799246, \"ymax\": 101712467.82241428}"
  },
  2286: {
    "label": "NAD 1983 StatePlane Washington South FIPS 4602 Feet",
    "defaultExtent": "{\"xmin\": -117497986.15361571, \"ymin\": -98849886.06598788, \"xmax\": 120778819.48946907, \"ymax\": 98059213.04053889}"
  },
  2287: {
    "label": "NAD 1983 StatePlane Wisconsin North FIPS 4801 Feet",
    "defaultExtent": "{\"xmin\": -117286293.49705541, \"ymin\": -98766220.59380393, \"xmax\": 121223293.49621527, \"ymax\": 96899429.19742505}"
  },
  2288: {
    "label": "NAD 1983 StatePlane Wisconsin Central FIPS 4802 Feet",
    "defaultExtent": "{\"xmin\": -117657339.14061904, \"ymin\": -98195540.81718999, \"xmax\": 121594339.12275791, \"ymax\": 93429232.43439895}"
  },
  2289: {
    "label": "NAD 1983 StatePlane Wisconsin South FIPS 4803 Feet",
    "defaultExtent": "{\"xmin\": -118120973.36007847, \"ymin\": -97417963.07799816, \"xmax\": 122057973.36029819, \"ymax\": 89265120.26596287}"
  },
  2290: {
    "label": "Prince Edward Island Stereographic",
    "defaultExtent": "{\"xmin\": -30010549.426865466, \"ymin\": -30167203.47139143, \"xmax\": 31410549.42693893, \"ymax\": 31092903.208509132}"
  },
  2294: {
    "label": "ATS 1977 MTM 4 Nova Scotia",
    "defaultExtent": "{\"xmin\": -1122448.9123103973, \"ymin\": -9609665.69711161, \"xmax\": 10122448.912310397, \"ymax\": 9609665.697111605}"
  },
  2295: {
    "label": "ATS 1977 MTM 5 Nova Scotia",
    "defaultExtent": "{\"xmin\": -122448.91231040005, \"ymin\": -9609665.69711161, \"xmax\": 11122448.912310397, \"ymax\": 9609665.697111605}"
  },
  2308: {
    "label": "Batavia TM 109 SE",
    "defaultExtent": "{\"xmin\": -5120096.774353864, \"ymin\": 394274.70060012117, \"xmax\": 6120096.774353857, \"ymax\": 19605725.299399868}"
  },
  2309: {
    "label": "WGS 1984 TM 116 SE",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  2310: {
    "label": "WGS 1984 TM 132 SE",
    "defaultExtent": "{\"xmin\": -5120763.767699436, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  2311: {
    "label": "WGS 1984 TM 6 NE",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  2312: {
    "label": "Garoua UTM Zone 33N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  2313: {
    "label": "Kousseri UTM Zone 33N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  2314: {
    "label": "Trinidad 1903 Trinidad Grid Feet Clarke",
    "defaultExtent": "{\"xmin\": -16151715.285815865, \"ymin\": -35104537.2023878, \"xmax\": 16719315.285815863, \"ymax\": 27957144.92800056}"
  },
  2315: {
    "label": "Campo Inchauspe UTM 19S",
    "defaultExtent": "{\"xmin\": -5121006.178542035, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  2316: {
    "label": "Campo Inchauspe UTM 20S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  2317: {
    "label": "PSAD 1956 ICN Regional",
    "defaultExtent": "{\"xmin\": -26426440.02614715, \"ymin\": -23423189.391888738, \"xmax\": 28426440.02614717, \"ymax\": 19814342.582411215}"
  },
  2318: {
    "label": "Ain el Abd Aramco Lambert",
    "defaultExtent": "{\"xmin\": -39472439.502809376, \"ymin\": -27124715.530694135, \"xmax\": 39472439.502809376, \"ymax\": 12477105.744220322}"
  },
  2319: {
    "label": "ED 1950 TM27",
    "defaultExtent": "{\"xmin\": -5123255.480734327, \"ymin\": -9610931.42506959, \"xmax\": 6123255.480734327, \"ymax\": 9610931.425069584}"
  },
  2320: {
    "label": "ED 1950 TM30",
    "defaultExtent": "{\"xmin\": -5123255.480734327, \"ymin\": -9610931.42506959, \"xmax\": 6123255.480734325, \"ymax\": 9610931.425069584}"
  },
  2321: {
    "label": "ED 1950 TM33",
    "defaultExtent": "{\"xmin\": -5123255.480734327, \"ymin\": -9610931.42506959, \"xmax\": 6123255.480734325, \"ymax\": 9610931.425069584}"
  },
  2322: {
    "label": "ED 1950 TM36",
    "defaultExtent": "{\"xmin\": -5123255.480734327, \"ymin\": -9610931.42506959, \"xmax\": 6123255.480734327, \"ymax\": 9610931.425069584}"
  },
  2323: {
    "label": "ED 1950 TM39",
    "defaultExtent": "{\"xmin\": -5123255.480734327, \"ymin\": -9610931.42506959, \"xmax\": 6123255.480734325, \"ymax\": 9610931.425069584}"
  },
  2324: {
    "label": "ED 1950 TM42",
    "defaultExtent": "{\"xmin\": -5123255.480734327, \"ymin\": -9610931.42506959, \"xmax\": 6123255.480734325, \"ymax\": 9610931.425069584}"
  },
  2325: {
    "label": "ED 1950 TM45",
    "defaultExtent": "{\"xmin\": -5123255.480734327, \"ymin\": -9610931.42506959, \"xmax\": 6123255.480734327, \"ymax\": 9610931.425069584}"
  },
  2326: {
    "label": "Hong Kong 1980 Grid",
    "defaultExtent": "{\"xmin\": -4786561.430734327, \"ymin\": -11260257.347926376, \"xmax\": 6459949.530734327, \"ymax\": 7961605.5022127945}"
  },
  2327: {
    "label": "Xian 1980 GK Zone 13",
    "defaultExtent": "{\"xmin\": 7876984.378531103, \"ymin\": -9610634.29382909, \"xmax\": 19123015.621468898, \"ymax\": 9610634.293829085}"
  },
  2328: {
    "label": "Xian 1980 GK Zone 14",
    "defaultExtent": "{\"xmin\": 8876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 20123015.621468898, \"ymax\": 9610634.293829085}"
  },
  2329: {
    "label": "Xian 1980 GK Zone 15",
    "defaultExtent": "{\"xmin\": 9876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 21123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2330: {
    "label": "Xian 1980 GK Zone 16",
    "defaultExtent": "{\"xmin\": 10876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 22123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2331: {
    "label": "Xian 1980 GK Zone 17",
    "defaultExtent": "{\"xmin\": 11876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 23123015.621468898, \"ymax\": 9610634.293829085}"
  },
  2332: {
    "label": "Xian 1980 GK Zone 18",
    "defaultExtent": "{\"xmin\": 12876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 24123015.621468898, \"ymax\": 9610634.293829085}"
  },
  2333: {
    "label": "Xian 1980 GK Zone 19",
    "defaultExtent": "{\"xmin\": 13876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 25123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2334: {
    "label": "Xian 1980 GK Zone 20",
    "defaultExtent": "{\"xmin\": 14876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 26123015.621468898, \"ymax\": 9610634.293829085}"
  },
  2335: {
    "label": "Xian 1980 GK Zone 21",
    "defaultExtent": "{\"xmin\": 15876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 27123015.621468898, \"ymax\": 9610634.293829085}"
  },
  2336: {
    "label": "Xian 1980 GK Zone 22",
    "defaultExtent": "{\"xmin\": 16876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 28123015.621468898, \"ymax\": 9610634.293829085}"
  },
  2337: {
    "label": "Xian 1980 GK Zone 23",
    "defaultExtent": "{\"xmin\": 17876984.378531102, \"ymin\": -9610634.293829087, \"xmax\": 29123013.821345787, \"ymax\": 9610634.293829085}"
  },
  2338: {
    "label": "Xian 1980 GK CM 75E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468899, \"ymax\": 9610634.293829085}"
  },
  2339: {
    "label": "Xian 1980 GK CM 81E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2340: {
    "label": "Xian 1980 GK CM 87E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468895, \"ymax\": 9610634.293829085}"
  },
  2341: {
    "label": "Xian 1980 GK CM 93E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468895, \"ymax\": 9610634.293829085}"
  },
  2342: {
    "label": "Xian 1980 GK CM 99E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2343: {
    "label": "Xian 1980 GK CM 105E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2344: {
    "label": "Xian 1980 GK CM 111E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468895, \"ymax\": 9610634.293829085}"
  },
  2345: {
    "label": "Xian 1980 GK CM 117E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2346: {
    "label": "Xian 1980 GK CM 123E",
    "defaultExtent": "{\"xmin\": -5123015.621468899, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2347: {
    "label": "Xian 1980 GK CM 129E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2348: {
    "label": "Xian 1980 GK CM 135E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.293829087, \"xmax\": 6123013.821345787, \"ymax\": 9610634.293829085}"
  },
  2349: {
    "label": "Xian 1980 3 Degree GK Zone 25",
    "defaultExtent": "{\"xmin\": 19876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 31123015.621468898, \"ymax\": 9610634.293829085}"
  },
  2350: {
    "label": "Xian 1980 3 Degree GK Zone 26",
    "defaultExtent": "{\"xmin\": 20876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 32123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2351: {
    "label": "Xian 1980 3 Degree GK Zone 27",
    "defaultExtent": "{\"xmin\": 21876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 33123015.621468898, \"ymax\": 9610634.293829085}"
  },
  2352: {
    "label": "Xian 1980 3 Degree GK Zone 28",
    "defaultExtent": "{\"xmin\": 22876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 34123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2353: {
    "label": "Xian 1980 3 Degree GK Zone 29",
    "defaultExtent": "{\"xmin\": 23876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 35123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2354: {
    "label": "Xian 1980 3 Degree GK Zone 30",
    "defaultExtent": "{\"xmin\": 24876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 36123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2355: {
    "label": "Xian 1980 3 Degree GK Zone 31",
    "defaultExtent": "{\"xmin\": 25876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 37123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2356: {
    "label": "Xian 1980 3 Degree GK Zone 32",
    "defaultExtent": "{\"xmin\": 26876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 38123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2357: {
    "label": "Xian 1980 3 Degree GK Zone 33",
    "defaultExtent": "{\"xmin\": 27876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 39123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2358: {
    "label": "Xian 1980 3 Degree GK Zone 34",
    "defaultExtent": "{\"xmin\": 28876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 40123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2359: {
    "label": "Xian 1980 3 Degree GK Zone 35",
    "defaultExtent": "{\"xmin\": 29876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 41123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2360: {
    "label": "Xian 1980 3 Degree GK Zone 36",
    "defaultExtent": "{\"xmin\": 30876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 42123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2361: {
    "label": "Xian 1980 3 Degree GK Zone 37",
    "defaultExtent": "{\"xmin\": 31876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 43123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2362: {
    "label": "Xian 1980 3 Degree GK Zone 38",
    "defaultExtent": "{\"xmin\": 32876984.378531102, \"ymin\": -9610634.29382909, \"xmax\": 44123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2363: {
    "label": "Xian 1980 3 Degree GK Zone 39",
    "defaultExtent": "{\"xmin\": 33876984.378531106, \"ymin\": -9610634.29382909, \"xmax\": 45123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2364: {
    "label": "Xian 1980 3 Degree GK Zone 40",
    "defaultExtent": "{\"xmin\": 34876984.378531106, \"ymin\": -9610634.29382909, \"xmax\": 46123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2365: {
    "label": "Xian 1980 3 Degree GK Zone 41",
    "defaultExtent": "{\"xmin\": 35876984.3785311, \"ymin\": -9610634.29382909, \"xmax\": 47123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2366: {
    "label": "Xian 1980 3 Degree GK Zone 42",
    "defaultExtent": "{\"xmin\": 36876984.378531106, \"ymin\": -9610634.29382909, \"xmax\": 48123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2367: {
    "label": "Xian 1980 3 Degree GK Zone 43",
    "defaultExtent": "{\"xmin\": 37876984.378531106, \"ymin\": -9610634.29382909, \"xmax\": 49123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2368: {
    "label": "Xian 1980 3 Degree GK Zone 44",
    "defaultExtent": "{\"xmin\": 38876984.3785311, \"ymin\": -9610634.29382909, \"xmax\": 50123015.621468894, \"ymax\": 9610634.293829085}"
  },
  2369: {
    "label": "Xian 1980 3 Degree GK Zone 45",
    "defaultExtent": "{\"xmin\": 39876984.378531106, \"ymin\": -9610634.293829087, \"xmax\": 51123013.821345784, \"ymax\": 9610634.293829085}"
  },
  2370: {
    "label": "Xian 1980 3 Degree GK CM 75E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468899, \"ymax\": 9610634.293829085}"
  },
  2371: {
    "label": "Xian 1980 3 Degree GK CM 78E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468895, \"ymax\": 9610634.293829085}"
  },
  2372: {
    "label": "Xian 1980 3 Degree GK CM 81E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2373: {
    "label": "Xian 1980 3 Degree GK CM 84E",
    "defaultExtent": "{\"xmin\": -5123015.621468898, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468895, \"ymax\": 9610634.293829085}"
  },
  2374: {
    "label": "Xian 1980 3 Degree GK CM 87E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468895, \"ymax\": 9610634.293829085}"
  },
  2375: {
    "label": "Xian 1980 3 Degree GK CM 90E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2376: {
    "label": "Xian 1980 3 Degree GK CM 93E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468895, \"ymax\": 9610634.293829085}"
  },
  2377: {
    "label": "Xian 1980 3 Degree GK CM 96E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2378: {
    "label": "Xian 1980 3 Degree GK CM 99E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2379: {
    "label": "Xian 1980 3 Degree GK CM 102E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468895, \"ymax\": 9610634.293829085}"
  },
  2380: {
    "label": "Xian 1980 3 Degree GK CM 105E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2381: {
    "label": "Xian 1980 3 Degree GK CM 108E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2382: {
    "label": "Xian 1980 3 Degree GK CM 111E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468895, \"ymax\": 9610634.293829085}"
  },
  2383: {
    "label": "Xian 1980 3 Degree GK CM 114E",
    "defaultExtent": "{\"xmin\": -5123015.621468899, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2384: {
    "label": "Xian 1980 3 Degree GK CM 117E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2385: {
    "label": "Xian 1980 3 Degree GK CM 120E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2386: {
    "label": "Xian 1980 3 Degree GK CM 123E",
    "defaultExtent": "{\"xmin\": -5123015.621468899, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2387: {
    "label": "Xian 1980 3 Degree GK CM 126E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2388: {
    "label": "Xian 1980 3 Degree GK CM 129E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2389: {
    "label": "Xian 1980 3 Degree GK CM 132E",
    "defaultExtent": "{\"xmin\": -5123015.621468899, \"ymin\": -9610634.29382909, \"xmax\": 6123015.621468897, \"ymax\": 9610634.293829085}"
  },
  2390: {
    "label": "Xian 1980 3 Degree GK CM 135E",
    "defaultExtent": "{\"xmin\": -5123015.621468897, \"ymin\": -9610634.293829087, \"xmax\": 6123013.821345787, \"ymax\": 9610634.293829085}"
  },
  2391: {
    "label": "Finland Zone 1",
    "defaultExtent": "{\"xmin\": -4123255.480734327, \"ymin\": -9610931.42506959, \"xmax\": 7123255.480734327, \"ymax\": 9610931.425069584}"
  },
  2392: {
    "label": "Finland Zone 2",
    "defaultExtent": "{\"xmin\": -3123255.480734327, \"ymin\": -9610931.42506959, \"xmax\": 8123255.480734325, \"ymax\": 9610931.425069584}"
  },
  2393: {
    "label": "Finland Zone 3",
    "defaultExtent": "{\"xmin\": -2123255.480734327, \"ymin\": -9610931.42506959, \"xmax\": 9123255.480734326, \"ymax\": 9610931.425069584}"
  },
  2394: {
    "label": "Finland Zone 4",
    "defaultExtent": "{\"xmin\": -1123255.4807343269, \"ymin\": -9610931.42506959, \"xmax\": 10123255.480734326, \"ymax\": 9610931.425069584}"
  },
  2395: {
    "label": "South Yemen GK Zone 8",
    "defaultExtent": "{\"xmin\": 2876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 14123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2396: {
    "label": "South Yemen GK Zone 9",
    "defaultExtent": "{\"xmin\": 3876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 15123107.467526719, \"ymax\": 9610795.116133094}"
  },
  2397: {
    "label": "Pulkovo 1942 Adj 1983 3 Degree GK Zone 3",
    "defaultExtent": "{\"xmin\": -2123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 9123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2398: {
    "label": "Pulkovo 1942 Adj 1983 3 Degree GK Zone 4",
    "defaultExtent": "{\"xmin\": -1123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 10123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2399: {
    "label": "Pulkovo 1942 Adj 1983 3 Degree GK Zone 5",
    "defaultExtent": "{\"xmin\": -123107.46752671711, \"ymin\": -9610795.116133098, \"xmax\": 11123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2400: {
    "label": "RT90 25 gon W",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.712638919, \"ymax\": 9609569.127050688}"
  },
  2401: {
    "label": "Beijing 1954 3 Degree GK Zone 25",
    "defaultExtent": "{\"xmin\": 19876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 31123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2402: {
    "label": "Beijing 1954 3 Degree GK Zone 26",
    "defaultExtent": "{\"xmin\": 20876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 32123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2403: {
    "label": "Beijing 1954 3 Degree GK Zone 27",
    "defaultExtent": "{\"xmin\": 21876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 33123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2404: {
    "label": "Beijing 1954 3 Degree GK Zone 28",
    "defaultExtent": "{\"xmin\": 22876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 34123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2405: {
    "label": "Beijing 1954 3 Degree GK Zone 29",
    "defaultExtent": "{\"xmin\": 23876892.53247328, \"ymin\": -9610795.116133101, \"xmax\": 35123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2406: {
    "label": "Beijing 1954 3 Degree GK Zone 30",
    "defaultExtent": "{\"xmin\": 24876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 36123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2407: {
    "label": "Beijing 1954 3 Degree GK Zone 31",
    "defaultExtent": "{\"xmin\": 25876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 37123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2408: {
    "label": "Beijing 1954 3 Degree GK Zone 32",
    "defaultExtent": "{\"xmin\": 26876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 38123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2409: {
    "label": "Beijing 1954 3 Degree GK Zone 33",
    "defaultExtent": "{\"xmin\": 27876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 39123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2410: {
    "label": "Beijing 1954 3 Degree GK Zone 34",
    "defaultExtent": "{\"xmin\": 28876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 40123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2411: {
    "label": "Beijing 1954 3 Degree GK Zone 35",
    "defaultExtent": "{\"xmin\": 29876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 41123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2412: {
    "label": "Beijing 1954 3 Degree GK Zone 36",
    "defaultExtent": "{\"xmin\": 30876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 42123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2413: {
    "label": "Beijing 1954 3 Degree GK Zone 37",
    "defaultExtent": "{\"xmin\": 31876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 43123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2414: {
    "label": "Beijing 1954 3 Degree GK Zone 38",
    "defaultExtent": "{\"xmin\": 32876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 44123107.46752672, \"ymax\": 9610795.116133096}"
  },
  2415: {
    "label": "Beijing 1954 3 Degree GK Zone 39",
    "defaultExtent": "{\"xmin\": 33876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 45123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2416: {
    "label": "Beijing 1954 3 Degree GK Zone 40",
    "defaultExtent": "{\"xmin\": 34876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 46123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2417: {
    "label": "Beijing 1954 3 Degree GK Zone 41",
    "defaultExtent": "{\"xmin\": 35876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 47123107.46752672, \"ymax\": 9610795.116133096}"
  },
  2418: {
    "label": "Beijing 1954 3 Degree GK Zone 42",
    "defaultExtent": "{\"xmin\": 36876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 48123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2419: {
    "label": "Beijing 1954 3 Degree GK Zone 43",
    "defaultExtent": "{\"xmin\": 37876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 49123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2420: {
    "label": "Beijing 1954 3 Degree GK Zone 44",
    "defaultExtent": "{\"xmin\": 38876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 50123107.46752672, \"ymax\": 9610795.116133096}"
  },
  2421: {
    "label": "Beijing 1954 3 Degree GK Zone 45",
    "defaultExtent": "{\"xmin\": 39876892.53247328, \"ymin\": -9610795.116133096, \"xmax\": 51123105.66737464, \"ymax\": 9610795.116133094}"
  },
  2422: {
    "label": "Beijing 1954 3 Degree GK CM 75E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2423: {
    "label": "Beijing 1954 3 Degree GK CM 78E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2424: {
    "label": "Beijing 1954 3 Degree GK CM 81E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2425: {
    "label": "Beijing 1954 3 Degree GK CM 84E",
    "defaultExtent": "{\"xmin\": -5123107.467526718, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2426: {
    "label": "Beijing 1954 3 Degree GK CM 87E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133101, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2427: {
    "label": "Beijing 1954 3 Degree GK CM 90E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2428: {
    "label": "Beijing 1954 3 Degree GK CM 93E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2429: {
    "label": "Beijing 1954 3 Degree GK CM 96E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2430: {
    "label": "Beijing 1954 3 Degree GK CM 99E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2431: {
    "label": "Beijing 1954 3 Degree GK CM 102E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2432: {
    "label": "Beijing 1954 3 Degree GK CM 105E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2433: {
    "label": "Beijing 1954 3 Degree GK CM 108E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2434: {
    "label": "Beijing 1954 3 Degree GK CM 111E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2435: {
    "label": "Beijing 1954 3 Degree GK CM 114E",
    "defaultExtent": "{\"xmin\": -5123107.46752672, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133096}"
  },
  2436: {
    "label": "Beijing 1954 3 Degree GK CM 117E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2437: {
    "label": "Beijing 1954 3 Degree GK CM 120E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2438: {
    "label": "Beijing 1954 3 Degree GK CM 123E",
    "defaultExtent": "{\"xmin\": -5123107.46752672, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133096}"
  },
  2439: {
    "label": "Beijing 1954 3 Degree GK CM 126E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2440: {
    "label": "Beijing 1954 3 Degree GK CM 129E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2441: {
    "label": "Beijing 1954 3 Degree GK CM 132E",
    "defaultExtent": "{\"xmin\": -5123107.46752672, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133096}"
  },
  2442: {
    "label": "Beijing 1954 3 Degree GK CM 135E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133096, \"xmax\": 6123105.667374637, \"ymax\": 9610795.116133094}"
  },
  2443: {
    "label": "JGD 2000 Japan Zone 1",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -13262051.49216574, \"xmax\": 5622450.671615874, \"ymax\": 5957285.955624162}"
  },
  2444: {
    "label": "JGD 2000 Japan Zone 2",
    "defaultExtent": "{\"xmin\": -5622450.671615875, \"ymin\": -13262051.49216574, \"xmax\": 5622450.671615874, \"ymax\": 5957285.955624163}"
  },
  2445: {
    "label": "JGD 2000 Japan Zone 3",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -13594812.839924177, \"xmax\": 5622450.671615878, \"ymax\": 5624524.607865727}"
  },
  2446: {
    "label": "JGD 2000 Japan Zone 4",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -13262051.49216574, \"xmax\": 5622450.671615874, \"ymax\": 5957285.955624162}"
  },
  2447: {
    "label": "JGD 2000 Japan Zone 5",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -13594812.839924177, \"xmax\": 5622450.671615874, \"ymax\": 5624524.607865727}"
  },
  2448: {
    "label": "JGD 2000 Japan Zone 6",
    "defaultExtent": "{\"xmin\": -5622450.671615865, \"ymin\": -13594812.839903364, \"xmax\": 5622450.671615874, \"ymax\": 5624524.60784493}"
  },
  2449: {
    "label": "JGD 2000 Japan Zone 7",
    "defaultExtent": "{\"xmin\": -5622450.671563503, \"ymin\": -13594812.839905635, \"xmax\": 5622450.671668238, \"ymax\": 5624524.607847202}"
  },
  2450: {
    "label": "JGD 2000 Japan Zone 8",
    "defaultExtent": "{\"xmin\": -5622450.671615865, \"ymin\": -13594812.839903364, \"xmax\": 5622450.671615882, \"ymax\": 5624524.607844931}"
  },
  2451: {
    "label": "JGD 2000 Japan Zone 9",
    "defaultExtent": "{\"xmin\": -5622450.671668228, \"ymin\": -13594812.839905635, \"xmax\": 5622450.67156351, \"ymax\": 5624524.607847202}"
  },
  2452: {
    "label": "JGD 2000 Japan Zone 10",
    "defaultExtent": "{\"xmin\": -5622450.671668227, \"ymin\": -14038754.801209979, \"xmax\": 5622450.671563517, \"ymax\": 5180582.6465428565}"
  },
  2453: {
    "label": "JGD 2000 Japan Zone 11",
    "defaultExtent": "{\"xmin\": -5622450.671615865, \"ymin\": -14483003.711233342, \"xmax\": 5622450.671615882, \"ymax\": 4736333.736514953}"
  },
  2454: {
    "label": "JGD 2000 Japan Zone 12",
    "defaultExtent": "{\"xmin\": -5622450.671615865, \"ymin\": -14483003.711233342, \"xmax\": 5622450.671615882, \"ymax\": 4736333.736514953}"
  },
  2455: {
    "label": "JGD 2000 Japan Zone 13",
    "defaultExtent": "{\"xmin\": -5622450.671615865, \"ymin\": -14483003.711233342, \"xmax\": 5622450.671615882, \"ymax\": 4736333.736514953}"
  },
  2456: {
    "label": "JGD 2000 Japan Zone 14",
    "defaultExtent": "{\"xmin\": -5622450.671615864, \"ymin\": -12486215.612935264, \"xmax\": 5622450.671615882, \"ymax\": 6733121.834813031}"
  },
  2457: {
    "label": "JGD 2000 Japan Zone 15",
    "defaultExtent": "{\"xmin\": -5622450.671615875, \"ymin\": -12486215.612956075, \"xmax\": 5622450.671615874, \"ymax\": 6733121.834833829}"
  },
  2458: {
    "label": "JGD 2000 Japan Zone 16",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -12486215.612956075, \"xmax\": 5622450.671615874, \"ymax\": 6733121.834833828}"
  },
  2459: {
    "label": "JGD 2000 Japan Zone 17",
    "defaultExtent": "{\"xmin\": -5622450.671615875, \"ymin\": -12486215.612956075, \"xmax\": 5622450.671615874, \"ymax\": 6733121.834833829}"
  },
  2460: {
    "label": "JGD 2000 Japan Zone 18",
    "defaultExtent": "{\"xmin\": -5622450.671615865, \"ymin\": -11821813.741351712, \"xmax\": 5622450.671615874, \"ymax\": 7397523.70639658}"
  },
  2461: {
    "label": "JGD 2000 Japan Zone 19",
    "defaultExtent": "{\"xmin\": -5622450.671615865, \"ymin\": -12486215.612935264, \"xmax\": 5622450.671615874, \"ymax\": 6733121.83481303}"
  },
  2462: {
    "label": "Albanian 1987 GK Zone 4",
    "defaultExtent": "{\"xmin\": -1123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 10123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2523: {
    "label": "Pulkovo 1942 3 Degree GK Zone 7",
    "defaultExtent": "{\"xmin\": 1876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 13123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2524: {
    "label": "Pulkovo 1942 3 Degree GK Zone 8",
    "defaultExtent": "{\"xmin\": 2876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 14123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2525: {
    "label": "Pulkovo 1942 3 Degree GK Zone 9",
    "defaultExtent": "{\"xmin\": 3876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 15123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2526: {
    "label": "Pulkovo 1942 3 Degree GK Zone 10",
    "defaultExtent": "{\"xmin\": 4876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 16123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2527: {
    "label": "Pulkovo 1942 3 Degree GK Zone 11",
    "defaultExtent": "{\"xmin\": 5876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 17123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2528: {
    "label": "Pulkovo 1942 3 Degree GK Zone 12",
    "defaultExtent": "{\"xmin\": 6876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 18123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2529: {
    "label": "Pulkovo 1942 3 Degree GK Zone 13",
    "defaultExtent": "{\"xmin\": 7876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 19123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2530: {
    "label": "Pulkovo 1942 3 Degree GK Zone 14",
    "defaultExtent": "{\"xmin\": 8876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 20123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2531: {
    "label": "Pulkovo 1942 3 Degree GK Zone 15",
    "defaultExtent": "{\"xmin\": 9876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 21123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2532: {
    "label": "Pulkovo 1942 3 Degree GK Zone 16",
    "defaultExtent": "{\"xmin\": 10876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 22123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2533: {
    "label": "Pulkovo 1942 3 Degree GK Zone 17",
    "defaultExtent": "{\"xmin\": 11876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 23123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2534: {
    "label": "Pulkovo 1942 3 Degree GK Zone 18",
    "defaultExtent": "{\"xmin\": 12876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 24123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2535: {
    "label": "Pulkovo 1942 3 Degree GK Zone 19",
    "defaultExtent": "{\"xmin\": 13876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 25123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2536: {
    "label": "Pulkovo 1942 3 Degree GK Zone 20",
    "defaultExtent": "{\"xmin\": 14876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 26123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2537: {
    "label": "Pulkovo 1942 3 Degree GK Zone 21",
    "defaultExtent": "{\"xmin\": 15876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 27123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2538: {
    "label": "Pulkovo 1942 3 Degree GK Zone 22",
    "defaultExtent": "{\"xmin\": 16876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 28123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2539: {
    "label": "Pulkovo 1942 3 Degree GK Zone 23",
    "defaultExtent": "{\"xmin\": 17876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 29123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2540: {
    "label": "Pulkovo 1942 3 Degree GK Zone 24",
    "defaultExtent": "{\"xmin\": 18876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 30123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2541: {
    "label": "Pulkovo 1942 3 Degree GK Zone 25",
    "defaultExtent": "{\"xmin\": 19876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 31123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2542: {
    "label": "Pulkovo 1942 3 Degree GK Zone 26",
    "defaultExtent": "{\"xmin\": 20876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 32123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2543: {
    "label": "Pulkovo 1942 3 Degree GK Zone 27",
    "defaultExtent": "{\"xmin\": 21876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 33123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2544: {
    "label": "Pulkovo 1942 3 Degree GK Zone 28",
    "defaultExtent": "{\"xmin\": 22876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 34123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2545: {
    "label": "Pulkovo 1942 3 Degree GK Zone 29",
    "defaultExtent": "{\"xmin\": 23876892.53247328, \"ymin\": -9610795.116133101, \"xmax\": 35123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2546: {
    "label": "Pulkovo 1942 3 Degree GK Zone 30",
    "defaultExtent": "{\"xmin\": 24876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 36123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2547: {
    "label": "Pulkovo 1942 3 Degree GK Zone 31",
    "defaultExtent": "{\"xmin\": 25876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 37123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2548: {
    "label": "Pulkovo 1942 3 Degree GK Zone 32",
    "defaultExtent": "{\"xmin\": 26876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 38123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2549: {
    "label": "Pulkovo 1942 3 Degree GK Zone 33",
    "defaultExtent": "{\"xmin\": 27876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 39123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2550: {
    "label": "Samboja UTM Zone 50S",
    "defaultExtent": "{\"xmin\": -5120096.774353864, \"ymin\": 394274.7006001249, \"xmax\": 6120096.774353864, \"ymax\": 19605725.299399868}"
  },
  2551: {
    "label": "Pulkovo 1942 3 Degree GK Zone 34",
    "defaultExtent": "{\"xmin\": 28876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 40123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2552: {
    "label": "Pulkovo 1942 3 Degree GK Zone 35",
    "defaultExtent": "{\"xmin\": 29876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 41123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2553: {
    "label": "Pulkovo 1942 3 Degree GK Zone 36",
    "defaultExtent": "{\"xmin\": 30876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 42123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2554: {
    "label": "Pulkovo 1942 3 Degree GK Zone 37",
    "defaultExtent": "{\"xmin\": 31876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 43123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2555: {
    "label": "Pulkovo 1942 3 Degree GK Zone 38",
    "defaultExtent": "{\"xmin\": 32876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 44123107.46752672, \"ymax\": 9610795.116133096}"
  },
  2556: {
    "label": "Pulkovo 1942 3 Degree GK Zone 39",
    "defaultExtent": "{\"xmin\": 33876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 45123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2557: {
    "label": "Pulkovo 1942 3 Degree GK Zone 40",
    "defaultExtent": "{\"xmin\": 34876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 46123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2558: {
    "label": "Pulkovo 1942 3 Degree GK Zone 41",
    "defaultExtent": "{\"xmin\": 35876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 47123107.46752672, \"ymax\": 9610795.116133096}"
  },
  2559: {
    "label": "Pulkovo 1942 3 Degree GK Zone 42",
    "defaultExtent": "{\"xmin\": 36876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 48123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2560: {
    "label": "Pulkovo 1942 3 Degree GK Zone 43",
    "defaultExtent": "{\"xmin\": 37876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 49123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2561: {
    "label": "Pulkovo 1942 3 Degree GK Zone 44",
    "defaultExtent": "{\"xmin\": 38876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 50123107.46752672, \"ymax\": 9610795.116133096}"
  },
  2562: {
    "label": "Pulkovo 1942 3 Degree GK Zone 45",
    "defaultExtent": "{\"xmin\": 39876892.53247328, \"ymin\": -9610795.116133096, \"xmax\": 51123105.66737464, \"ymax\": 9610795.116133094}"
  },
  2563: {
    "label": "Pulkovo 1942 3 Degree GK Zone 46",
    "defaultExtent": "{\"xmin\": 40876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 52123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2564: {
    "label": "Pulkovo 1942 3 Degree GK Zone 47",
    "defaultExtent": "{\"xmin\": 41876892.53247329, \"ymin\": -9610795.116112284, \"xmax\": 53123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2565: {
    "label": "Pulkovo 1942 3 Degree GK Zone 48",
    "defaultExtent": "{\"xmin\": 42876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 54123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2566: {
    "label": "Pulkovo 1942 3 Degree GK Zone 49",
    "defaultExtent": "{\"xmin\": 43876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 55123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2567: {
    "label": "Pulkovo 1942 3 Degree GK Zone 50",
    "defaultExtent": "{\"xmin\": 44876892.53247329, \"ymin\": -9610795.116112284, \"xmax\": 56123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2568: {
    "label": "Pulkovo 1942 3 Degree GK Zone 51",
    "defaultExtent": "{\"xmin\": 45876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 57123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2569: {
    "label": "Pulkovo 1942 3 Degree GK Zone 52",
    "defaultExtent": "{\"xmin\": 46876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 58123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2570: {
    "label": "Pulkovo 1942 3 Degree GK Zone 53",
    "defaultExtent": "{\"xmin\": 47876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 59123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2571: {
    "label": "Pulkovo 1942 3 Degree GK Zone 54",
    "defaultExtent": "{\"xmin\": 48876892.5324733, \"ymin\": -9610795.116112284, \"xmax\": 60123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2572: {
    "label": "Pulkovo 1942 3 Degree GK Zone 55",
    "defaultExtent": "{\"xmin\": 49876892.5324733, \"ymin\": -9610795.116112284, \"xmax\": 61123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2573: {
    "label": "Pulkovo 1942 3 Degree GK Zone 56",
    "defaultExtent": "{\"xmin\": 50876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 62123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2574: {
    "label": "Pulkovo 1942 3 Degree GK Zone 57",
    "defaultExtent": "{\"xmin\": 51876892.5324733, \"ymin\": -9610795.116112284, \"xmax\": 63123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2575: {
    "label": "Pulkovo 1942 3 Degree GK Zone 58",
    "defaultExtent": "{\"xmin\": 52876892.5324733, \"ymin\": -9610795.116112284, \"xmax\": 64123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2576: {
    "label": "Pulkovo 1942 3 Degree GK Zone 59",
    "defaultExtent": "{\"xmin\": 53876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 65123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2578: {
    "label": "Pulkovo 1942 3 Degree GK Zone 61",
    "defaultExtent": "{\"xmin\": 55876892.53247331, \"ymin\": -9610795.116112284, \"xmax\": 67123107.46752672, \"ymax\": 9610795.116112294}"
  },
  2579: {
    "label": "Pulkovo 1942 3 Degree GK Zone 62",
    "defaultExtent": "{\"xmin\": 56876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 68123107.46752672, \"ymax\": 9610795.116112294}"
  },
  2580: {
    "label": "Pulkovo 1942 3 Degree GK Zone 63",
    "defaultExtent": "{\"xmin\": 57876892.53247331, \"ymin\": -9610795.116112284, \"xmax\": 69123107.46752672, \"ymax\": 9610795.116112294}"
  },
  2581: {
    "label": "Pulkovo 1942 3 Degree GK Zone 64",
    "defaultExtent": "{\"xmin\": 58876892.53247331, \"ymin\": -9610795.116112284, \"xmax\": 70123107.46752672, \"ymax\": 9610795.116112294}"
  },
  2582: {
    "label": "Pulkovo 1942 3 Degree GK CM 21E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2583: {
    "label": "Pulkovo 1942 3 Degree GK CM 24E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  2584: {
    "label": "Pulkovo 1942 3 Degree GK CM 27E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2585: {
    "label": "Pulkovo 1942 3 Degree GK CM 30E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  2586: {
    "label": "Pulkovo 1942 3 Degree GK CM 33E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  2587: {
    "label": "Pulkovo 1942 3 Degree GK CM 36E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2588: {
    "label": "Pulkovo 1942 3 Degree GK CM 39E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  2589: {
    "label": "Pulkovo 1942 3 Degree GK CM 42E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  2590: {
    "label": "Pulkovo 1942 3 Degree GK CM 45E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2591: {
    "label": "Pulkovo 1942 3 Degree GK CM 48E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2592: {
    "label": "Pulkovo 1942 3 Degree GK CM 51E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526718, \"ymax\": 9610795.116133094}"
  },
  2593: {
    "label": "Pulkovo 1942 3 Degree GK CM 54E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2594: {
    "label": "Pulkovo 1942 3 Degree GK CM 57E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2595: {
    "label": "Pulkovo 1942 3 Degree GK CM 60E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2596: {
    "label": "Pulkovo 1942 3 Degree GK CM 63E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2597: {
    "label": "Pulkovo 1942 3 Degree GK CM 66E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2598: {
    "label": "Pulkovo 1942 3 Degree GK CM 69E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2599: {
    "label": "Pulkovo 1942 3 Degree GK CM 72E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2601: {
    "label": "Pulkovo 1942 3 Degree GK CM 75E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2602: {
    "label": "Pulkovo 1942 3 Degree GK CM 78E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2603: {
    "label": "Pulkovo 1942 3 Degree GK CM 81E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2604: {
    "label": "Pulkovo 1942 3 Degree GK CM 84E",
    "defaultExtent": "{\"xmin\": -5123107.467526718, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2605: {
    "label": "Pulkovo 1942 3 Degree GK CM 87E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133101, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2606: {
    "label": "Pulkovo 1942 3 Degree GK CM 90E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2607: {
    "label": "Pulkovo 1942 3 Degree GK CM 93E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2608: {
    "label": "Pulkovo 1942 3 Degree GK CM 96E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2609: {
    "label": "Pulkovo 1942 3 Degree GK CM 99E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2610: {
    "label": "Pulkovo 1942 3 Degree GK CM 102E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2611: {
    "label": "Pulkovo 1942 3 Degree GK CM 105E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2612: {
    "label": "Pulkovo 1942 3 Degree GK CM 108E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2613: {
    "label": "Pulkovo 1942 3 Degree GK CM 111E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2614: {
    "label": "Pulkovo 1942 3 Degree GK CM 114E",
    "defaultExtent": "{\"xmin\": -5123107.46752672, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133096}"
  },
  2615: {
    "label": "Pulkovo 1942 3 Degree GK CM 117E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2616: {
    "label": "Pulkovo 1942 3 Degree GK CM 120E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2617: {
    "label": "Pulkovo 1942 3 Degree GK CM 123E",
    "defaultExtent": "{\"xmin\": -5123107.46752672, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133096}"
  },
  2618: {
    "label": "Pulkovo 1942 3 Degree GK CM 126E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2619: {
    "label": "Pulkovo 1942 3 Degree GK CM 129E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2620: {
    "label": "Pulkovo 1942 3 Degree GK CM 132E",
    "defaultExtent": "{\"xmin\": -5123107.46752672, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133096}"
  },
  2621: {
    "label": "Pulkovo 1942 3 Degree GK CM 135E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133096, \"xmax\": 6123105.667374637, \"ymax\": 9610795.116133094}"
  },
  2622: {
    "label": "Pulkovo 1942 3 Degree GK CM 138E",
    "defaultExtent": "{\"xmin\": -5123107.467526707, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2623: {
    "label": "Pulkovo 1942 3 Degree GK CM 141E",
    "defaultExtent": "{\"xmin\": -5123107.46752671, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2624: {
    "label": "Pulkovo 1942 3 Degree GK CM 144E",
    "defaultExtent": "{\"xmin\": -5123107.467526707, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2625: {
    "label": "Pulkovo 1942 3 Degree GK CM 147E",
    "defaultExtent": "{\"xmin\": -5123107.467526707, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2626: {
    "label": "Pulkovo 1942 3 Degree GK CM 150E",
    "defaultExtent": "{\"xmin\": -5123107.46752671, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2627: {
    "label": "Pulkovo 1942 3 Degree GK CM 153E",
    "defaultExtent": "{\"xmin\": -5123107.467526707, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2628: {
    "label": "Pulkovo 1942 3 Degree GK CM 156E",
    "defaultExtent": "{\"xmin\": -5123107.467526707, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2629: {
    "label": "Pulkovo 1942 3 Degree GK CM 159E",
    "defaultExtent": "{\"xmin\": -5123107.467526701, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2630: {
    "label": "Pulkovo 1942 3 Degree GK CM 162E",
    "defaultExtent": "{\"xmin\": -5123107.467526697, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2631: {
    "label": "Pulkovo 1942 3 Degree GK CM 165E",
    "defaultExtent": "{\"xmin\": -5123107.467526697, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2632: {
    "label": "Pulkovo 1942 3 Degree GK CM 168E",
    "defaultExtent": "{\"xmin\": -5123107.467526701, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2633: {
    "label": "Pulkovo 1942 3 Degree GK CM 171E",
    "defaultExtent": "{\"xmin\": -5123107.467526697, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2634: {
    "label": "Pulkovo 1942 3 Degree GK CM 174E",
    "defaultExtent": "{\"xmin\": -5123107.467526697, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2635: {
    "label": "Pulkovo 1942 3 Degree GK CM 177E",
    "defaultExtent": "{\"xmin\": -5123107.467526701, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2636: {
    "label": "Pulkovo 1942 3 Degree GK CM 180E",
    "defaultExtent": "{\"xmin\": -5123107.467526697, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2637: {
    "label": "Pulkovo 1942 3 Degree GK CM 177W",
    "defaultExtent": "{\"xmin\": -5123107.467526693, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2638: {
    "label": "Pulkovo 1942 3 Degree GK CM 174W",
    "defaultExtent": "{\"xmin\": -5123107.467526701, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2639: {
    "label": "Pulkovo 1942 3 Degree GK CM 171W",
    "defaultExtent": "{\"xmin\": -5123107.467526693, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2640: {
    "label": "Pulkovo 1942 3 Degree GK CM 168W",
    "defaultExtent": "{\"xmin\": -5123107.467526693, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2641: {
    "label": "Pulkovo 1995 3 Degree GK Zone 7",
    "defaultExtent": "{\"xmin\": 1876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 13123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2642: {
    "label": "Pulkovo 1995 3 Degree GK Zone 8",
    "defaultExtent": "{\"xmin\": 2876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 14123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2643: {
    "label": "Pulkovo 1995 3 Degree GK Zone 9",
    "defaultExtent": "{\"xmin\": 3876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 15123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2644: {
    "label": "Pulkovo 1995 3 Degree GK Zone 10",
    "defaultExtent": "{\"xmin\": 4876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 16123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2645: {
    "label": "Pulkovo 1995 3 Degree GK Zone 11",
    "defaultExtent": "{\"xmin\": 5876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 17123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2646: {
    "label": "Pulkovo 1995 3 Degree GK Zone 12",
    "defaultExtent": "{\"xmin\": 6876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 18123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2647: {
    "label": "Pulkovo 1995 3 Degree GK Zone 13",
    "defaultExtent": "{\"xmin\": 7876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 19123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2648: {
    "label": "Pulkovo 1995 3 Degree GK Zone 14",
    "defaultExtent": "{\"xmin\": 8876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 20123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2649: {
    "label": "Pulkovo 1995 3 Degree GK Zone 15",
    "defaultExtent": "{\"xmin\": 9876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 21123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2650: {
    "label": "Pulkovo 1995 3 Degree GK Zone 16",
    "defaultExtent": "{\"xmin\": 10876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 22123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2651: {
    "label": "Pulkovo 1995 3 Degree GK Zone 17",
    "defaultExtent": "{\"xmin\": 11876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 23123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2652: {
    "label": "Pulkovo 1995 3 Degree GK Zone 18",
    "defaultExtent": "{\"xmin\": 12876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 24123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2653: {
    "label": "Pulkovo 1995 3 Degree GK Zone 19",
    "defaultExtent": "{\"xmin\": 13876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 25123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2654: {
    "label": "Pulkovo 1995 3 Degree GK Zone 20",
    "defaultExtent": "{\"xmin\": 14876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 26123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2655: {
    "label": "Pulkovo 1995 3 Degree GK Zone 21",
    "defaultExtent": "{\"xmin\": 15876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 27123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2656: {
    "label": "Pulkovo 1995 3 Degree GK Zone 22",
    "defaultExtent": "{\"xmin\": 16876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 28123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2657: {
    "label": "Pulkovo 1995 3 Degree GK Zone 23",
    "defaultExtent": "{\"xmin\": 17876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 29123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2658: {
    "label": "Pulkovo 1995 3 Degree GK Zone 24",
    "defaultExtent": "{\"xmin\": 18876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 30123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2659: {
    "label": "Pulkovo 1995 3 Degree GK Zone 25",
    "defaultExtent": "{\"xmin\": 19876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 31123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2660: {
    "label": "Pulkovo 1995 3 Degree GK Zone 26",
    "defaultExtent": "{\"xmin\": 20876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 32123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2661: {
    "label": "Pulkovo 1995 3 Degree GK Zone 27",
    "defaultExtent": "{\"xmin\": 21876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 33123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2662: {
    "label": "Pulkovo 1995 3 Degree GK Zone 28",
    "defaultExtent": "{\"xmin\": 22876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 34123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2663: {
    "label": "Pulkovo 1995 3 Degree GK Zone 29",
    "defaultExtent": "{\"xmin\": 23876892.53247328, \"ymin\": -9610795.116133101, \"xmax\": 35123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2664: {
    "label": "Pulkovo 1995 3 Degree GK Zone 30",
    "defaultExtent": "{\"xmin\": 24876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 36123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2665: {
    "label": "Pulkovo 1995 3 Degree GK Zone 31",
    "defaultExtent": "{\"xmin\": 25876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 37123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2666: {
    "label": "Pulkovo 1995 3 Degree GK Zone 32",
    "defaultExtent": "{\"xmin\": 26876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 38123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2667: {
    "label": "Pulkovo 1995 3 Degree GK Zone 33",
    "defaultExtent": "{\"xmin\": 27876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 39123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2668: {
    "label": "Pulkovo 1995 3 Degree GK Zone 34",
    "defaultExtent": "{\"xmin\": 28876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 40123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2669: {
    "label": "Pulkovo 1995 3 Degree GK Zone 35",
    "defaultExtent": "{\"xmin\": 29876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 41123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2670: {
    "label": "Pulkovo 1995 3 Degree GK Zone 36",
    "defaultExtent": "{\"xmin\": 30876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 42123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2671: {
    "label": "Pulkovo 1995 3 Degree GK Zone 37",
    "defaultExtent": "{\"xmin\": 31876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 43123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2672: {
    "label": "Pulkovo 1995 3 Degree GK Zone 38",
    "defaultExtent": "{\"xmin\": 32876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 44123107.46752672, \"ymax\": 9610795.116133096}"
  },
  2673: {
    "label": "Pulkovo 1995 3 Degree GK Zone 39",
    "defaultExtent": "{\"xmin\": 33876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 45123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2674: {
    "label": "Pulkovo 1995 3 Degree GK Zone 40",
    "defaultExtent": "{\"xmin\": 34876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 46123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2675: {
    "label": "Pulkovo 1995 3 Degree GK Zone 41",
    "defaultExtent": "{\"xmin\": 35876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 47123107.46752672, \"ymax\": 9610795.116133096}"
  },
  2676: {
    "label": "Pulkovo 1995 3 Degree GK Zone 42",
    "defaultExtent": "{\"xmin\": 36876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 48123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2677: {
    "label": "Pulkovo 1995 3 Degree GK Zone 43",
    "defaultExtent": "{\"xmin\": 37876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 49123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2678: {
    "label": "Pulkovo 1995 3 Degree GK Zone 44",
    "defaultExtent": "{\"xmin\": 38876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 50123107.46752672, \"ymax\": 9610795.116133096}"
  },
  2679: {
    "label": "Pulkovo 1995 3 Degree GK Zone 45",
    "defaultExtent": "{\"xmin\": 39876892.53247328, \"ymin\": -9610795.116133096, \"xmax\": 51123105.66737464, \"ymax\": 9610795.116133094}"
  },
  2680: {
    "label": "Pulkovo 1995 3 Degree GK Zone 46",
    "defaultExtent": "{\"xmin\": 40876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 52123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2681: {
    "label": "Pulkovo 1995 3 Degree GK Zone 47",
    "defaultExtent": "{\"xmin\": 41876892.53247329, \"ymin\": -9610795.116112284, \"xmax\": 53123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2682: {
    "label": "Pulkovo 1995 3 Degree GK Zone 48",
    "defaultExtent": "{\"xmin\": 42876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 54123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2683: {
    "label": "Pulkovo 1995 3 Degree GK Zone 49",
    "defaultExtent": "{\"xmin\": 43876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 55123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2684: {
    "label": "Pulkovo 1995 3 Degree GK Zone 50",
    "defaultExtent": "{\"xmin\": 44876892.53247329, \"ymin\": -9610795.116112284, \"xmax\": 56123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2685: {
    "label": "Pulkovo 1995 3 Degree GK Zone 51",
    "defaultExtent": "{\"xmin\": 45876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 57123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2686: {
    "label": "Pulkovo 1995 3 Degree GK Zone 52",
    "defaultExtent": "{\"xmin\": 46876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 58123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2687: {
    "label": "Pulkovo 1995 3 Degree GK Zone 53",
    "defaultExtent": "{\"xmin\": 47876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 59123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2688: {
    "label": "Pulkovo 1995 3 Degree GK Zone 54",
    "defaultExtent": "{\"xmin\": 48876892.5324733, \"ymin\": -9610795.116112284, \"xmax\": 60123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2689: {
    "label": "Pulkovo 1995 3 Degree GK Zone 55",
    "defaultExtent": "{\"xmin\": 49876892.5324733, \"ymin\": -9610795.116112284, \"xmax\": 61123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2690: {
    "label": "Pulkovo 1995 3 Degree GK Zone 56",
    "defaultExtent": "{\"xmin\": 50876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 62123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2691: {
    "label": "Pulkovo 1995 3 Degree GK Zone 57",
    "defaultExtent": "{\"xmin\": 51876892.5324733, \"ymin\": -9610795.116112284, \"xmax\": 63123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2692: {
    "label": "Pulkovo 1995 3 Degree GK Zone 58",
    "defaultExtent": "{\"xmin\": 52876892.5324733, \"ymin\": -9610795.116112284, \"xmax\": 64123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2693: {
    "label": "Pulkovo 1995 3 Degree GK Zone 59",
    "defaultExtent": "{\"xmin\": 53876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 65123107.46752673, \"ymax\": 9610795.116112294}"
  },
  2695: {
    "label": "Pulkovo 1995 3 Degree GK Zone 61",
    "defaultExtent": "{\"xmin\": 55876892.53247331, \"ymin\": -9610795.116112284, \"xmax\": 67123107.46752672, \"ymax\": 9610795.116112294}"
  },
  2696: {
    "label": "Pulkovo 1995 3 Degree GK Zone 62",
    "defaultExtent": "{\"xmin\": 56876892.532473296, \"ymin\": -9610795.116112284, \"xmax\": 68123107.46752672, \"ymax\": 9610795.116112294}"
  },
  2697: {
    "label": "Pulkovo 1995 3 Degree GK Zone 63",
    "defaultExtent": "{\"xmin\": 57876892.53247331, \"ymin\": -9610795.116112284, \"xmax\": 69123107.46752672, \"ymax\": 9610795.116112294}"
  },
  2698: {
    "label": "Pulkovo 1995 3 Degree GK Zone 64",
    "defaultExtent": "{\"xmin\": 58876892.53247331, \"ymin\": -9610795.116112284, \"xmax\": 70123107.46752672, \"ymax\": 9610795.116112294}"
  },
  2699: {
    "label": "Pulkovo 1995 3 Degree GK CM 21E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2700: {
    "label": "Pulkovo 1995 3 Degree GK CM 24E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  2701: {
    "label": "Pulkovo 1995 3 Degree GK CM 27E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2702: {
    "label": "Pulkovo 1995 3 Degree GK CM 30E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  2703: {
    "label": "Pulkovo 1995 3 Degree GK CM 33E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  2704: {
    "label": "Pulkovo 1995 3 Degree GK CM 36E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2705: {
    "label": "Pulkovo 1995 3 Degree GK CM 39E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  2706: {
    "label": "Pulkovo 1995 3 Degree GK CM 42E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  2707: {
    "label": "Pulkovo 1995 3 Degree GK CM 45E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2708: {
    "label": "Pulkovo 1995 3 Degree GK CM 48E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2709: {
    "label": "Pulkovo 1995 3 Degree GK CM 51E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526718, \"ymax\": 9610795.116133094}"
  },
  2710: {
    "label": "Pulkovo 1995 3 Degree GK CM 54E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2711: {
    "label": "Pulkovo 1995 3 Degree GK CM 57E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2712: {
    "label": "Pulkovo 1995 3 Degree GK CM 60E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2713: {
    "label": "Pulkovo 1995 3 Degree GK CM 63E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2714: {
    "label": "Pulkovo 1995 3 Degree GK CM 66E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2715: {
    "label": "Pulkovo 1995 3 Degree GK CM 69E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2716: {
    "label": "Pulkovo 1995 3 Degree GK CM 72E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2717: {
    "label": "Pulkovo 1995 3 Degree GK CM 75E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.46752672, \"ymax\": 9610795.116133094}"
  },
  2718: {
    "label": "Pulkovo 1995 3 Degree GK CM 78E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2719: {
    "label": "Pulkovo 1995 3 Degree GK CM 81E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2720: {
    "label": "Pulkovo 1995 3 Degree GK CM 84E",
    "defaultExtent": "{\"xmin\": -5123107.467526718, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2721: {
    "label": "Pulkovo 1995 3 Degree GK CM 87E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133101, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2722: {
    "label": "Pulkovo 1995 3 Degree GK CM 90E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2723: {
    "label": "Pulkovo 1995 3 Degree GK CM 93E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2724: {
    "label": "Pulkovo 1995 3 Degree GK CM 96E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2725: {
    "label": "Pulkovo 1995 3 Degree GK CM 99E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2726: {
    "label": "Pulkovo 1995 3 Degree GK CM 102E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2727: {
    "label": "Pulkovo 1995 3 Degree GK CM 105E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2728: {
    "label": "Pulkovo 1995 3 Degree GK CM 108E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2729: {
    "label": "Pulkovo 1995 3 Degree GK CM 111E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  2730: {
    "label": "Pulkovo 1995 3 Degree GK CM 114E",
    "defaultExtent": "{\"xmin\": -5123107.46752672, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133096}"
  },
  2731: {
    "label": "Pulkovo 1995 3 Degree GK CM 117E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2732: {
    "label": "Pulkovo 1995 3 Degree GK CM 120E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2733: {
    "label": "Pulkovo 1995 3 Degree GK CM 123E",
    "defaultExtent": "{\"xmin\": -5123107.46752672, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133096}"
  },
  2734: {
    "label": "Pulkovo 1995 3 Degree GK CM 126E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2735: {
    "label": "Pulkovo 1995 3 Degree GK CM 129E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  2736: {
    "label": "Tete UTM Zone 36S",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": 393310.89368013665, \"xmax\": 6120880.632721141, \"ymax\": 19606689.10631986}"
  },
  2737: {
    "label": "Tete UTM Zone 37S",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": 393310.89368013665, \"xmax\": 6120880.632721141, \"ymax\": 19606689.10631986}"
  },
  2738: {
    "label": "Pulkovo 1995 3 Degree GK CM 132E",
    "defaultExtent": "{\"xmin\": -5123107.46752672, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133096}"
  },
  2739: {
    "label": "Pulkovo 1995 3 Degree GK CM 135E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133096, \"xmax\": 6123105.667374637, \"ymax\": 9610795.116133094}"
  },
  2740: {
    "label": "Pulkovo 1995 3 Degree GK CM 138E",
    "defaultExtent": "{\"xmin\": -5123107.467526707, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2741: {
    "label": "Pulkovo 1995 3 Degree GK CM 141E",
    "defaultExtent": "{\"xmin\": -5123107.46752671, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2742: {
    "label": "Pulkovo 1995 3 Degree GK CM 144E",
    "defaultExtent": "{\"xmin\": -5123107.467526707, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2743: {
    "label": "Pulkovo 1995 3 Degree GK CM 147E",
    "defaultExtent": "{\"xmin\": -5123107.467526707, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2744: {
    "label": "Pulkovo 1995 3 Degree GK CM 150E",
    "defaultExtent": "{\"xmin\": -5123107.46752671, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2745: {
    "label": "Pulkovo 1995 3 Degree GK CM 153E",
    "defaultExtent": "{\"xmin\": -5123107.467526707, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2746: {
    "label": "Pulkovo 1995 3 Degree GK CM 156E",
    "defaultExtent": "{\"xmin\": -5123107.467526707, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2747: {
    "label": "Pulkovo 1995 3 Degree GK CM 159E",
    "defaultExtent": "{\"xmin\": -5123107.467526701, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2748: {
    "label": "Pulkovo 1995 3 Degree GK CM 162E",
    "defaultExtent": "{\"xmin\": -5123107.467526697, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2749: {
    "label": "Pulkovo 1995 3 Degree GK CM 165E",
    "defaultExtent": "{\"xmin\": -5123107.467526697, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2750: {
    "label": "Pulkovo 1995 3 Degree GK CM 168E",
    "defaultExtent": "{\"xmin\": -5123107.467526701, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2751: {
    "label": "Pulkovo 1995 3 Degree GK CM 171E",
    "defaultExtent": "{\"xmin\": -5123107.467526697, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2752: {
    "label": "Pulkovo 1995 3 Degree GK CM 174E",
    "defaultExtent": "{\"xmin\": -5123107.467526697, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2753: {
    "label": "Pulkovo 1995 3 Degree GK CM 177E",
    "defaultExtent": "{\"xmin\": -5123107.467526701, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2754: {
    "label": "Pulkovo 1995 3 Degree GK CM 180E",
    "defaultExtent": "{\"xmin\": -5123107.467526697, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2755: {
    "label": "Pulkovo 1995 3 Degree GK CM 177W",
    "defaultExtent": "{\"xmin\": -5123107.467526693, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2756: {
    "label": "Pulkovo 1995 3 Degree GK CM 174W",
    "defaultExtent": "{\"xmin\": -5123107.467526701, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2757: {
    "label": "Pulkovo 1995 3 Degree GK CM 171W",
    "defaultExtent": "{\"xmin\": -5123107.467526693, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2758: {
    "label": "Pulkovo 1995 3 Degree GK CM 168W",
    "defaultExtent": "{\"xmin\": -5123107.467526693, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  2759: {
    "label": "NAD 1983 HARN StatePlane Alabama East FIPS 0101",
    "defaultExtent": "{\"xmin\": -5422788.052394249, \"ymin\": -12985652.072866369, \"xmax\": 5822788.052394249, \"ymax\": 6234838.650497956}"
  },
  2760: {
    "label": "NAD 1983 HARN StatePlane Alabama West FIPS 0102",
    "defaultExtent": "{\"xmin\": -5022638.105381638, \"ymin\": -12929881.135173015, \"xmax\": 6222638.105381638, \"ymax\": 6290097.0212693475}"
  },
  2761: {
    "label": "NAD 1983 HARN StatePlane Arizona East FIPS 0201",
    "defaultExtent": "{\"xmin\": -5409090.671615874, \"ymin\": -13040299.949871464, \"xmax\": 5835810.671615874, \"ymax\": 6179037.49791844}"
  },
  2762: {
    "label": "NAD 1983 HARN StatePlane Arizona Central FIPS 0202",
    "defaultExtent": "{\"xmin\": -5409090.671615872, \"ymin\": -13040299.949871464, \"xmax\": 5835810.671615874, \"ymax\": 6179037.49791844}"
  },
  2763: {
    "label": "NAD 1983 HARN StatePlane Arizona West FIPS 0203",
    "defaultExtent": "{\"xmin\": -5409278.105381638, \"ymin\": -13040734.670008475, \"xmax\": 5835998.105381638, \"ymax\": 6179243.48643389}"
  },
  2764: {
    "label": "NAD 1983 HARN StatePlane Arkansas North FIPS 0301",
    "defaultExtent": "{\"xmin\": -37285630.80991245, \"ymin\": -28623235.611847952, \"xmax\": 38085630.80986683, \"ymax\": 18652037.545588575}"
  },
  2765: {
    "label": "NAD 1983 HARN StatePlane Arkansas South FIPS 0302",
    "defaultExtent": "{\"xmin\": -37595985.155181974, \"ymin\": -27991400.9264211, \"xmax\": 38395985.15505119, \"ymax\": 17088046.267518982}"
  },
  2766: {
    "label": "NAD 1983 HARN StatePlane California I FIPS 0401",
    "defaultExtent": "{\"xmin\": -34887054.27121294, \"ymin\": -28830499.630561125, \"xmax\": 38887054.271445766, \"ymax\": 25202733.856392305}"
  },
  2767: {
    "label": "NAD 1983 HARN StatePlane California II FIPS 0402",
    "defaultExtent": "{\"xmin\": -35116508.911664024, \"ymin\": -28596719.981055927, \"xmax\": 39116508.911764205, \"ymax\": 23310630.66291148}"
  },
  2768: {
    "label": "NAD 1983 HARN StatePlane California III FIPS 0403",
    "defaultExtent": "{\"xmin\": -35314262.749591045, \"ymin\": -28428487.57731289, \"xmax\": 39314262.749551564, \"ymax\": 21771398.527620755}"
  },
  2769: {
    "label": "NAD 1983 HARN StatePlane California IV FIPS 0404",
    "defaultExtent": "{\"xmin\": -35498881.48266848, \"ymin\": -28265654.103608675, \"xmax\": 39498881.48289684, \"ymax\": 20437979.07279057}"
  },
  2770: {
    "label": "NAD 1983 HARN StatePlane California V FIPS 0405",
    "defaultExtent": "{\"xmin\": -35847160.01764138, \"ymin\": -28005403.878855906, \"xmax\": 39847160.01752812, \"ymax\": 18099234.480987653}"
  },
  2771: {
    "label": "NAD 1983 HARN StatePlane California VI FIPS 0406",
    "defaultExtent": "{\"xmin\": -36151940.068675034, \"ymin\": -27815848.278992966, \"xmax\": 40151940.06861196, \"ymax\": 16247248.704331301}"
  },
  2772: {
    "label": "NAD 1983 HARN StatePlane Colorado North FIPS 0501",
    "defaultExtent": "{\"xmin\": -36047295.1761787, \"ymin\": -29010844.772414874, \"xmax\": 37876098.83435248, \"ymax\": 24329837.178702205}"
  },
  2773: {
    "label": "NAD 1983 HARN StatePlane Colorado Central FIPS 0502",
    "defaultExtent": "{\"xmin\": -36200413.80326969, \"ymin\": -28811315.283514805, \"xmax\": 38029217.46057424, \"ymax\": 23117321.353997074}"
  },
  2774: {
    "label": "NAD 1983 HARN StatePlane Colorado South FIPS 0503",
    "defaultExtent": "{\"xmin\": -36387386.019578025, \"ymin\": -28644971.833411947, \"xmax\": 38216189.6778173, \"ymax\": 21664082.8771381}"
  },
  2775: {
    "label": "NAD 1983 HARN StatePlane Connecticut FIPS 0600",
    "defaultExtent": "{\"xmin\": -36501665.38080174, \"ymin\": -29365141.16645893, \"xmax\": 37111266.59970077, \"ymax\": 25482156.151964903}"
  },
  2776: {
    "label": "NAD 1983 HARN StatePlane Delaware FIPS 0700",
    "defaultExtent": "{\"xmin\": -5422984.8578483015, \"ymin\": -13818058.715278085, \"xmax\": 5822984.857848301, \"ymax\": 5403104.752171321}"
  },
  2777: {
    "label": "NAD 1983 HARN StatePlane Florida East FIPS 0901",
    "defaultExtent": "{\"xmin\": -5422682.2074441705, \"ymin\": -12302114.955780467, \"xmax\": 5822682.2074441705, \"ymax\": 6918013.955638945}"
  },
  2778: {
    "label": "NAD 1983 HARN StatePlane Florida West FIPS 0902",
    "defaultExtent": "{\"xmin\": -5422682.207444169, \"ymin\": -12302114.955780467, \"xmax\": 5822682.2074441705, \"ymax\": 6918013.955638945}"
  },
  2779: {
    "label": "NAD 1983 HARN StatePlane Florida North FIPS 0903",
    "defaultExtent": "{\"xmin\": -38386184.53222137, \"ymin\": -27874919.325736687, \"xmax\": 39586184.5326483, \"ymax\": 11420627.34512336}"
  },
  2780: {
    "label": "NAD 1983 HARN StatePlane Georgia East FIPS 1001",
    "defaultExtent": "{\"xmin\": -5422450.671615874, \"ymin\": -12929450.11040019, \"xmax\": 5822450.671615874, \"ymax\": 6289887.337389712}"
  },
  2781: {
    "label": "NAD 1983 HARN StatePlane Georgia West FIPS 1002",
    "defaultExtent": "{\"xmin\": -4922450.671615872, \"ymin\": -12929450.11040019, \"xmax\": 6322450.6716158725, \"ymax\": 6289887.337389712}"
  },
  2782: {
    "label": "NAD 1983 HARN StatePlane Hawaii 1 FIPS 5101",
    "defaultExtent": "{\"xmin\": -5122825.539147385, \"ymin\": -11693459.598062156, \"xmax\": 6122825.539147409, \"ymax\": 7527159.266991055}"
  },
  2783: {
    "label": "NAD 1983 HARN StatePlane Hawaii 2 FIPS 5102",
    "defaultExtent": "{\"xmin\": -5122825.539199754, \"ymin\": -11859502.83699039, \"xmax\": 6122825.539095043, \"ymax\": 7361116.028067361}"
  },
  2784: {
    "label": "NAD 1983 HARN StatePlane Hawaii 3 FIPS 5103",
    "defaultExtent": "{\"xmin\": -5122956.74278342, \"ymin\": -11952040.153067613, \"xmax\": 6122956.742783444, \"ymax\": 7269027.208042317}"
  },
  2785: {
    "label": "NAD 1983 HARN StatePlane Hawaii 4 FIPS 5104",
    "defaultExtent": "{\"xmin\": -5122956.742783412, \"ymin\": -12025855.146337828, \"xmax\": 6122956.742783444, \"ymax\": 7195212.2147721015}"
  },
  2786: {
    "label": "NAD 1983 HARN StatePlane Hawaii 5 FIPS 5105",
    "defaultExtent": "{\"xmin\": -5123012.972965518, \"ymin\": -12007520.920163663, \"xmax\": 6123012.972860808, \"ymax\": 7213738.653546542}"
  },
  2787: {
    "label": "NAD 1983 HARN StatePlane Idaho East FIPS 1101",
    "defaultExtent": "{\"xmin\": -5422717.024861958, \"ymin\": -14224494.619744752, \"xmax\": 5822717.024861958, \"ymax\": 4995753.308761801}"
  },
  2788: {
    "label": "NAD 1983 HARN StatePlane Idaho Central FIPS 1102",
    "defaultExtent": "{\"xmin\": -5122717.024861958, \"ymin\": -14224494.619744752, \"xmax\": 6122717.024861961, \"ymax\": 4995753.308761801}"
  },
  2789: {
    "label": "NAD 1983 HARN StatePlane Idaho West FIPS 1103",
    "defaultExtent": "{\"xmin\": -4822638.105381638, \"ymin\": -14224294.967206975, \"xmax\": 6422638.105381638, \"ymax\": 4995683.189235387}"
  },
  2790: {
    "label": "NAD 1983 HARN StatePlane Illinois East FIPS 1201",
    "defaultExtent": "{\"xmin\": -5322872.397588842, \"ymin\": -13669807.500473078, \"xmax\": 5922872.397588842, \"ymax\": 5550971.541784854}"
  },
  2791: {
    "label": "NAD 1983 HARN StatePlane Illinois West FIPS 1202",
    "defaultExtent": "{\"xmin\": -4922682.207444172, \"ymin\": -13669345.127777718, \"xmax\": 6322682.2074441705, \"ymax\": 5550783.783641693}"
  },
  2792: {
    "label": "NAD 1983 HARN StatePlane Indiana East FIPS 1301",
    "defaultExtent": "{\"xmin\": -5522825.539147399, \"ymin\": -13512173.175005069, \"xmax\": 5722825.539147401, \"ymax\": 5708445.690089753}"
  },
  2793: {
    "label": "NAD 1983 HARN StatePlane Indiana West FIPS 1302",
    "defaultExtent": "{\"xmin\": -4722825.539147401, \"ymin\": -13512173.175005067, \"xmax\": 6522825.539147401, \"ymax\": 5708445.690089753}"
  },
  2794: {
    "label": "NAD 1983 HARN StatePlane Iowa North FIPS 1401",
    "defaultExtent": "{\"xmin\": -35179672.413309455, \"ymin\": -28619932.387049854, \"xmax\": 38179672.41221074, \"ymax\": 27493755.251850624}"
  },
  2795: {
    "label": "NAD 1983 HARN StatePlane Iowa South FIPS 1402",
    "defaultExtent": "{\"xmin\": -36344508.92670218, \"ymin\": -29415464.41348134, \"xmax\": 37344508.92730374, \"ymax\": 25047110.383624904}"
  },
  2796: {
    "label": "NAD 1983 HARN StatePlane Kansas North FIPS 1501",
    "defaultExtent": "{\"xmin\": -36694583.27893349, \"ymin\": -29176343.808520153, \"xmax\": 37494583.27889171, \"ymax\": 22940063.423304893}"
  },
  2797: {
    "label": "NAD 1983 HARN StatePlane Kansas South FIPS 1502",
    "defaultExtent": "{\"xmin\": -36888610.08409184, \"ymin\": -28552051.03735451, \"xmax\": 37688610.084001794, \"ymax\": 21865414.924582668}"
  },
  2798: {
    "label": "NAD 1983 HARN StatePlane Kentucky North FIPS 1601",
    "defaultExtent": "{\"xmin\": -36706540.6144563, \"ymin\": -29061234.143652882, \"xmax\": 37706540.61484275, \"ymax\": 22066321.05409854}"
  },
  2799: {
    "label": "NAD 1983 HARN StatePlane Kentucky South FIPS 1602",
    "defaultExtent": "{\"xmin\": -36881000.62027418, \"ymin\": -28397921.164930366, \"xmax\": 37881000.620047584, \"ymax\": 21253778.418876573}"
  },
  2800: {
    "label": "NAD 1983 HARN StatePlane Louisiana North FIPS 1701",
    "defaultExtent": "{\"xmin\": -37494730.88922037, \"ymin\": -28088971.837408308, \"xmax\": 39494730.88715185, \"ymax\": 13871961.36705782}"
  },
  2801: {
    "label": "NAD 1983 HARN StatePlane Louisiana South FIPS 1702",
    "defaultExtent": "{\"xmin\": -38036283.63849772, \"ymin\": -27814605.530320723, \"xmax\": 40036283.638507746, \"ymax\": 11223230.411243448}"
  },
  2802: {
    "label": "NAD 1983 HARN StatePlane Maine East FIPS 1801",
    "defaultExtent": "{\"xmin\": -5322450.671615874, \"ymin\": -14445971.085374892, \"xmax\": 5922450.671615874, \"ymax\": 4773366.36241501}"
  },
  2803: {
    "label": "NAD 1983 HARN StatePlane Maine West FIPS 1802",
    "defaultExtent": "{\"xmin\": -4722825.539147399, \"ymin\": -14354355.990839133, \"xmax\": 6522825.539147401, \"ymax\": 4866262.874255687}"
  },
  2804: {
    "label": "NAD 1983 HARN StatePlane Maryland FIPS 1900",
    "defaultExtent": "{\"xmin\": -36747007.26427332, \"ymin\": -29091384.527313504, \"xmax\": 37547007.26462395, \"ymax\": 22554678.123978678}"
  },
  2805: {
    "label": "NAD 1983 HARN StatePlane Massachusetts Mainland FIPS 2001",
    "defaultExtent": "{\"xmin\": -36530705.74194933, \"ymin\": -28803004.001248993, \"xmax\": 36930705.741942905, \"ymax\": 26796569.38877064}"
  },
  2806: {
    "label": "NAD 1983 HARN StatePlane Massachusetts Island FIPS 2002",
    "defaultExtent": "{\"xmin\": -36324363.173723884, \"ymin\": -29532372.723926485, \"xmax\": 37324363.17347703, \"ymax\": 25143058.28571613}"
  },
  2807: {
    "label": "NAD 1983 HARN StatePlane Michigan North FIPS 2111",
    "defaultExtent": "{\"xmin\": -28338008.16261086, \"ymin\": -30062764.319301587, \"xmax\": 44338008.16271662, \"ymax\": 29682471.10421796}"
  },
  2808: {
    "label": "NAD 1983 HARN StatePlane Michigan Central FIPS 2112",
    "defaultExtent": "{\"xmin\": -30455190.630660422, \"ymin\": -29873530.398834094, \"xmax\": 42455190.63111069, \"ymax\": 28598773.969079223}"
  },
  2809: {
    "label": "NAD 1983 HARN StatePlane Michigan South FIPS 2113",
    "defaultExtent": "{\"xmin\": -32655721.616859354, \"ymin\": -29624554.326154392, \"xmax\": 40655721.616422996, \"ymax\": 26723713.97971105}"
  },
  2810: {
    "label": "NAD 1983 HARN StatePlane Minnesota North FIPS 2201",
    "defaultExtent": "{\"xmin\": -35413952.21883893, \"ymin\": -30179238.744515866, \"xmax\": 37013952.21884459, \"ymax\": 30925833.663218413}"
  },
  2811: {
    "label": "NAD 1983 HARN StatePlane Minnesota Central FIPS 2202",
    "defaultExtent": "{\"xmin\": -35534345.78057431, \"ymin\": -29988111.83685971, \"xmax\": 37134345.780168205, \"ymax\": 29803284.527532667}"
  },
  2812: {
    "label": "NAD 1983 HARN StatePlane Minnesota South FIPS 2203",
    "defaultExtent": "{\"xmin\": -35696176.20197969, \"ymin\": -29729049.350341942, \"xmax\": 37296176.20161064, \"ymax\": 28305006.49768952}"
  },
  2813: {
    "label": "NAD 1983 HARN StatePlane Mississippi East FIPS 2301",
    "defaultExtent": "{\"xmin\": -5322731.822264518, \"ymin\": -12874675.296950985, \"xmax\": 5922731.8222645195, \"ymax\": 6345623.2138176095}"
  },
  2814: {
    "label": "NAD 1983 HARN StatePlane Mississippi West FIPS 2302",
    "defaultExtent": "{\"xmin\": -4922731.8222645195, \"ymin\": -12874675.296950981, \"xmax\": 6322731.8222645195, \"ymax\": 6345623.2138176095}"
  },
  2815: {
    "label": "NAD 1983 HARN StatePlane Missouri East FIPS 2401",
    "defaultExtent": "{\"xmin\": -5372638.10538164, \"ymin\": -13576774.369054265, \"xmax\": 5872638.105381638, \"ymax\": 5643203.787388095}"
  },
  2816: {
    "label": "NAD 1983 HARN StatePlane Missouri Central FIPS 2402",
    "defaultExtent": "{\"xmin\": -5122638.105381638, \"ymin\": -13576774.369054267, \"xmax\": 6122638.105381639, \"ymax\": 5643203.787388095}"
  },
  2817: {
    "label": "NAD 1983 HARN StatePlane Missouri West FIPS 2403",
    "defaultExtent": "{\"xmin\": -4772682.2074441705, \"ymin\": -13613865.018881941, \"xmax\": 6472682.2074441705, \"ymax\": 5606263.89253747}"
  },
  2818: {
    "label": "NAD 1983 HARN StatePlane Montana FIPS 2500",
    "defaultExtent": "{\"xmin\": -35665865.835127994, \"ymin\": -30006746.26947549, \"xmax\": 36865865.835221216, \"ymax\": 30370447.115839537}"
  },
  2819: {
    "label": "NAD 1983 HARN StatePlane Nebraska FIPS 2600",
    "defaultExtent": "{\"xmin\": -36300933.080799475, \"ymin\": -29399402.24687034, \"xmax\": 37300933.080734946, \"ymax\": 25403103.617317706}"
  },
  2820: {
    "label": "NAD 1983 HARN StatePlane Nevada East FIPS 2701",
    "defaultExtent": "{\"xmin\": -5422450.671615874, \"ymin\": -5456142.367622394, \"xmax\": 5822450.671615875, \"ymax\": 13763195.080167508}"
  },
  2821: {
    "label": "NAD 1983 HARN StatePlane Nevada Central FIPS 2702",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": -7456142.367622394, \"xmax\": 6122450.671615874, \"ymax\": 11763195.080167508}"
  },
  2822: {
    "label": "NAD 1983 HARN StatePlane Nevada West FIPS 2703",
    "defaultExtent": "{\"xmin\": -4822450.671615874, \"ymin\": -9456142.367622394, \"xmax\": 6422450.671615874, \"ymax\": 9763195.080167508}"
  },
  2823: {
    "label": "NAD 1983 HARN StatePlane New Hampshire FIPS 2800",
    "defaultExtent": "{\"xmin\": -5322825.539147401, \"ymin\": -14317328.47673371, \"xmax\": 5922825.539147401, \"ymax\": 4903290.3883611085}"
  },
  2824: {
    "label": "NAD 1983 HARN StatePlane New Jersey FIPS 2900",
    "defaultExtent": "{\"xmin\": -5472450.671615874, \"ymin\": -13909240.393148925, \"xmax\": 5772450.671615874, \"ymax\": 5310097.054640977}"
  },
  2825: {
    "label": "NAD 1983 HARN StatePlane New Mexico East FIPS 3001",
    "defaultExtent": "{\"xmin\": -5457501.789915625, \"ymin\": -13040418.509908829, \"xmax\": 5787501.789915627, \"ymax\": 6179093.676604471}"
  },
  2826: {
    "label": "NAD 1983 HARN StatePlane New Mexico Central FIPS 3002",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": -13040299.949871464, \"xmax\": 6122450.671615874, \"ymax\": 6179037.49791844}"
  },
  2827: {
    "label": "NAD 1983 HARN StatePlane New Mexico West FIPS 3003",
    "defaultExtent": "{\"xmin\": -4792544.388498756, \"ymin\": -13040517.30993997, \"xmax\": 6452544.388498756, \"ymax\": 6179140.492176165}"
  },
  2828: {
    "label": "NAD 1983 HARN StatePlane New York East FIPS 3101",
    "defaultExtent": "{\"xmin\": -5472450.671615874, \"ymin\": -13909240.393148925, \"xmax\": 5772450.671615874, \"ymax\": 5310097.054640977}"
  },
  2829: {
    "label": "NAD 1983 HARN StatePlane New York Central FIPS 3102",
    "defaultExtent": "{\"xmin\": -5372661.534602356, \"ymin\": -14039281.307184162, \"xmax\": 5872661.534602358, \"ymax\": 5180776.937839759}"
  },
  2830: {
    "label": "NAD 1983 HARN StatePlane New York West FIPS 3103",
    "defaultExtent": "{\"xmin\": -5272661.53460236, \"ymin\": -14039281.307184162, \"xmax\": 5972661.534602358, \"ymax\": 5180776.937839759}"
  },
  2831: {
    "label": "NAD 1983 HARN StatePlane New York Long Island FIPS 3104",
    "defaultExtent": "{\"xmin\": -36587956.42066342, \"ymin\": -29425420.120449886, \"xmax\": 37187956.42150142, \"ymax\": 24629425.6260428}"
  },
  2832: {
    "label": "NAD 1983 HARN StatePlane North Dakota North FIPS 3301",
    "defaultExtent": "{\"xmin\": -35595748.115963005, \"ymin\": -30339027.657292105, \"xmax\": 36795748.11641998, \"ymax\": 30974941.604174778}"
  },
  2833: {
    "label": "NAD 1983 HARN StatePlane North Dakota South FIPS 3302",
    "defaultExtent": "{\"xmin\": -35693627.05966489, \"ymin\": -30171287.465168312, \"xmax\": 36893627.0601383, \"ymax\": 30070892.076617684}"
  },
  2834: {
    "label": "NAD 1983 HARN StatePlane Ohio North FIPS 3401",
    "defaultExtent": "{\"xmin\": -36260139.32294244, \"ymin\": -29374687.724612944, \"xmax\": 37460139.32264283, \"ymax\": 24932674.77100941}"
  },
  2835: {
    "label": "NAD 1983 HARN StatePlane Ohio South FIPS 3402",
    "defaultExtent": "{\"xmin\": -36475619.49728193, \"ymin\": -29142750.459979072, \"xmax\": 37675619.497339524, \"ymax\": 23138992.601405952}"
  },
  2836: {
    "label": "NAD 1983 HARN StatePlane Oklahoma North FIPS 3501",
    "defaultExtent": "{\"xmin\": -36979233.88907343, \"ymin\": -28714973.963273533, \"xmax\": 38179233.8890346, \"ymax\": 19365200.320864283}"
  },
  2837: {
    "label": "NAD 1983 HARN StatePlane Oklahoma South FIPS 3502",
    "defaultExtent": "{\"xmin\": -37281426.008000575, \"ymin\": -28482182.493828315, \"xmax\": 38481426.007534444, \"ymax\": 17385783.726951864}"
  },
  2838: {
    "label": "NAD 1983 HARN StatePlane Oregon North FIPS 3601",
    "defaultExtent": "{\"xmin\": -33934395.67833442, \"ymin\": -29916770.9826887, \"xmax\": 38934395.67866903, \"ymax\": 28774826.90963382}"
  },
  2839: {
    "label": "NAD 1983 HARN StatePlane Oregon South FIPS 3602",
    "defaultExtent": "{\"xmin\": -35126017.07220474, \"ymin\": -29649727.834081486, \"xmax\": 38126017.072228044, \"ymax\": 27002732.65337064}"
  },
  2840: {
    "label": "NAD 1983 HARN StatePlane Rhode Island FIPS 3800",
    "defaultExtent": "{\"xmin\": -5522977.829082084, \"ymin\": -14160369.134576127, \"xmax\": 5722977.829082084, \"ymax\": 5060770.306298815}"
  },
  2841: {
    "label": "NAD 1983 HARN StatePlane South Dakota North FIPS 4001",
    "defaultExtent": "{\"xmin\": -35846098.92496543, \"ymin\": -29933703.866771042, \"xmax\": 37046098.92490602, \"ymax\": 28645269.44168758}"
  },
  2842: {
    "label": "NAD 1983 HARN StatePlane South Dakota South FIPS 4002",
    "defaultExtent": "{\"xmin\": -35980929.411304265, \"ymin\": -29734707.47249241, \"xmax\": 37180929.41117397, \"ymax\": 27393676.96179096}"
  },
  2843: {
    "label": "NAD 1983 HARN StatePlane Tennessee FIPS 4100",
    "defaultExtent": "{\"xmin\": -37039650.6279049, \"ymin\": -28631019.31672457, \"xmax\": 38239650.62802555, \"ymax\": 18990861.045042165}"
  },
  2844: {
    "label": "NAD 1983 HARN StatePlane Texas North FIPS 4201",
    "defaultExtent": "{\"xmin\": -37516299.8331, \"ymin\": -27580728.943599287, \"xmax\": 37916299.833128214, \"ymax\": 19461951.497943036}"
  },
  2845: {
    "label": "NAD 1983 HARN StatePlane Texas North Central FIPS 4202",
    "defaultExtent": "{\"xmin\": -37614616.88807972, \"ymin\": -26250391.134317875, \"xmax\": 38814616.88802452, \"ymax\": 17395582.84290185}"
  },
  2846: {
    "label": "NAD 1983 HARN StatePlane Texas Central FIPS 4203",
    "defaultExtent": "{\"xmin\": -38040663.03171102, \"ymin\": -24970101.92794974, \"xmax\": 39440663.03170802, \"ymax\": 15602650.666709403}"
  },
  2847: {
    "label": "NAD 1983 HARN StatePlane Texas South Central FIPS 4204",
    "defaultExtent": "{\"xmin\": -38625948.2389665, \"ymin\": -23722141.01585047, \"xmax\": 39825948.2389665, \"ymax\": 15422945.822918478}"
  },
  2848: {
    "label": "NAD 1983 HARN StatePlane Texas South FIPS 4205",
    "defaultExtent": "{\"xmin\": -39382898.13859524, \"ymin\": -22428383.748523414, \"xmax\": 39982898.13859524, \"ymax\": 17130472.597137526}"
  },
  2849: {
    "label": "NAD 1983 HARN StatePlane Utah North FIPS 4301",
    "defaultExtent": "{\"xmin\": -36338834.42915058, \"ymin\": -28453982.376255378, \"xmax\": 37338834.521727204, \"ymax\": 26066690.159262396}"
  },
  2850: {
    "label": "NAD 1983 HARN StatePlane Utah Central FIPS 4302",
    "defaultExtent": "{\"xmin\": -36514060.18168421, \"ymin\": -27191819.5738922, \"xmax\": 37514060.18232606, \"ymax\": 25642908.167597167}"
  },
  2851: {
    "label": "NAD 1983 HARN StatePlane Utah South FIPS 4303",
    "defaultExtent": "{\"xmin\": -36809744.07562093, \"ymin\": -25948407.843968417, \"xmax\": 37809744.075334504, \"ymax\": 24295469.49478243}"
  },
  2852: {
    "label": "NAD 1983 HARN StatePlane Vermont FIPS 4400",
    "defaultExtent": "{\"xmin\": -5122812.1510212775, \"ymin\": -14317294.386720052, \"xmax\": 6122812.151021276, \"ymax\": 4903278.713471021}"
  },
  2853: {
    "label": "NAD 1983 HARN StatePlane Virginia North FIPS 4501",
    "defaultExtent": "{\"xmin\": -33684162.33987652, \"ymin\": -27083846.657879442, \"xmax\": 40684162.34077641, \"ymax\": 24234815.029329725}"
  },
  2854: {
    "label": "NAD 1983 HARN StatePlane Virginia South FIPS 4502",
    "defaultExtent": "{\"xmin\": -33875616.80010519, \"ymin\": -27898914.99367497, \"xmax\": 40875616.80001254, \"ymax\": 21796916.219502896}"
  },
  2855: {
    "label": "NAD 1983 HARN StatePlane Washington North FIPS 4601",
    "defaultExtent": "{\"xmin\": -35693390.40305884, \"ymin\": -30339611.799414955, \"xmax\": 36693390.40324891, \"ymax\": 31002022.19631627}"
  },
  2856: {
    "label": "NAD 1983 HARN StatePlane Washington South FIPS 4602",
    "defaultExtent": "{\"xmin\": -35813457.80653769, \"ymin\": -30129505.531924177, \"xmax\": 36813457.80730579, \"ymax\": 29888507.91177208}"
  },
  2857: {
    "label": "NAD 1983 HARN StatePlane West Virginia North FIPS 4701",
    "defaultExtent": "{\"xmin\": -36443027.89488857, \"ymin\": -29205240.099509504, \"xmax\": 37643027.8949125, \"ymax\": 23375051.76188209}"
  },
  2858: {
    "label": "NAD 1983 HARN StatePlane West Virginia South FIPS 4702",
    "defaultExtent": "{\"xmin\": -36647651.619762786, \"ymin\": -28996711.06985563, \"xmax\": 37847651.61951533, \"ymax\": 21766153.09529358}"
  },
  2859: {
    "label": "NAD 1983 HARN StatePlane Wisconsin North FIPS 4801",
    "defaultExtent": "{\"xmin\": -35748933.75577011, \"ymin\": -30104004.245000057, \"xmax\": 36948933.75551403, \"ymax\": 29535005.089385632}"
  },
  2860: {
    "label": "NAD 1983 HARN StatePlane Wisconsin Central FIPS 4802",
    "defaultExtent": "{\"xmin\": -35862028.694118075, \"ymin\": -29930060.701200917, \"xmax\": 37062028.688673995, \"ymax\": 28477287.000578806}"
  },
  2861: {
    "label": "NAD 1983 HARN StatePlane Wisconsin South FIPS 4803",
    "defaultExtent": "{\"xmin\": -36003344.686841294, \"ymin\": -29693054.532282908, \"xmax\": 37203344.68690827, \"ymax\": 27208063.07319163}"
  },
  2862: {
    "label": "NAD 1983 HARN StatePlane Wyoming East FIPS 4901",
    "defaultExtent": "{\"xmin\": -5422661.534602354, \"ymin\": -14094797.558167633, \"xmax\": 5822661.534602358, \"ymax\": 5125260.686856288}"
  },
  2863: {
    "label": "NAD 1983 HARN StatePlane Wyoming East Central FIPS 4902",
    "defaultExtent": "{\"xmin\": -5222661.53460236, \"ymin\": -13994797.558167633, \"xmax\": 6022661.534602358, \"ymax\": 5225260.686856289}"
  },
  2864: {
    "label": "NAD 1983 HARN StatePlane Wyoming West Central FIPS 4903",
    "defaultExtent": "{\"xmin\": -5022661.534602358, \"ymin\": -14094797.558167633, \"xmax\": 6222661.534602358, \"ymax\": 5125260.686856289}"
  },
  2865: {
    "label": "NAD 1983 HARN StatePlane Wyoming West FIPS 4904",
    "defaultExtent": "{\"xmin\": -4822661.534602356, \"ymin\": -13994797.558167633, \"xmax\": 6422661.534602358, \"ymax\": 5225260.686856289}"
  },
  2866: {
    "label": "NAD 1983 HARN StatePlane Puerto Rico Virgin Islands FIPS 5200",
    "defaultExtent": "{\"xmin\": -38021748.15784241, \"ymin\": -26319807.671320274, \"xmax\": 38421748.157935165, \"ymax\": 15157853.89958689}"
  },
  2867: {
    "label": "NAD 1983 HARN StatePlane Arizona East FIPS 0201 Feet Intl",
    "defaultExtent": "{\"xmin\": -17746360.47118069, \"ymin\": -42783136.31847593, \"xmax\": 19146360.47118069, \"ymax\": 20272432.735952888}"
  },
  2868: {
    "label": "NAD 1983 HARN StatePlane Arizona Central FIPS 0202 Feet Intl",
    "defaultExtent": "{\"xmin\": -17746360.47118068, \"ymin\": -42783136.31847593, \"xmax\": 19146360.47118069, \"ymax\": 20272432.735952888}"
  },
  2869: {
    "label": "NAD 1983 HARN StatePlane Arizona West FIPS 0203 Feet Intl",
    "defaultExtent": "{\"xmin\": -17746975.41135708, \"ymin\": -42784562.5656446, \"xmax\": 19146975.41135708, \"ymax\": 20273108.55129229}"
  },
  2870: {
    "label": "NAD 1983 HARN StatePlane California I FIPS 0401 Feet",
    "defaultExtent": "{\"xmin\": -114458610.55480444, \"ymin\": -94588064.20459928, \"xmax\": 127581943.88890164, \"ymax\": 82685969.32718042}"
  },
  2871: {
    "label": "NAD 1983 HARN StatePlane California II FIPS 0402 Feet",
    "defaultExtent": "{\"xmin\": -115211412.98768437, \"ymin\": -93821072.13784765, \"xmax\": 128334746.32134637, \"ymax\": 76478294.09990206}"
  },
  2872: {
    "label": "NAD 1983 HARN StatePlane California III FIPS 0403 Feet",
    "defaultExtent": "{\"xmin\": -115860210.37094994, \"ymin\": -93269129.6599007, \"xmax\": 128983543.70415375, \"ymax\": 71428330.00270241}"
  },
  2873: {
    "label": "NAD 1983 HARN StatePlane California IV FIPS 0404 Feet",
    "defaultExtent": "{\"xmin\": -116465913.66438816, \"ymin\": -92734900.17158945, \"xmax\": 129589246.99847071, \"ymax\": 67053603.00798039}"
  },
  2874: {
    "label": "NAD 1983 HARN StatePlane California V FIPS 0405 Feet",
    "defaultExtent": "{\"xmin\": -117608557.49121174, \"ymin\": -91881062.55921307, \"xmax\": 130731890.82417348, \"ymax\": 59380571.79304032}"
  },
  2875: {
    "label": "NAD 1983 HARN StatePlane California VI FIPS 0406 Feet",
    "defaultExtent": "{\"xmin\": -118608490.04197799, \"ymin\": -91259162.22866274, \"xmax\": 131731823.37510438, \"ymax\": 53304515.12412693}"
  },
  2876: {
    "label": "NAD 1983 HARN StatePlane Colorado North FIPS 0501 Feet",
    "defaultExtent": "{\"xmin\": -118265167.59051295, \"ymin\": -95179746.55749778, \"xmax\": 124265167.5923714, \"ymax\": 79822140.81045881}"
  },
  2877: {
    "label": "NAD 1983 HARN StatePlane Colorado Central FIPS 0502 Feet",
    "defaultExtent": "{\"xmin\": -118767524.2862273, \"ymin\": -94525123.55933148, \"xmax\": 124767524.28523397, \"ymax\": 75844078.47557206}"
  },
  2878: {
    "label": "NAD 1983 HARN StatePlane Colorado South FIPS 0503 Feet",
    "defaultExtent": "{\"xmin\": -119380948.96589889, \"ymin\": -93979378.42345235, \"xmax\": 125380948.96797225, \"ymax\": 71076245.23941058}"
  },
  2879: {
    "label": "NAD 1983 HARN StatePlane Connecticut FIPS 0600 Feet",
    "defaultExtent": "{\"xmin\": -119755880.50351368, \"ymin\": -96342133.97695734, \"xmax\": 121755880.50251827, \"ymax\": 83602707.3085715}"
  },
  2880: {
    "label": "NAD 1983 HARN StatePlane Delaware FIPS 0700 Feet",
    "defaultExtent": "{\"xmin\": -17791909.487790633, \"ymin\": -45334747.63504151, \"xmax\": 19104242.821123965, \"ymax\": 17726686.174415406}"
  },
  2881: {
    "label": "NAD 1983 HARN StatePlane Florida East FIPS 0901 Feet",
    "defaultExtent": "{\"xmin\": -17790916.542256415, \"ymin\": -40361188.817423075, \"xmax\": 19103249.875589747, \"ymax\": 22696850.786125436}"
  },
  2882: {
    "label": "NAD 1983 HARN StatePlane Florida West FIPS 0902 Feet",
    "defaultExtent": "{\"xmin\": -17790916.542256407, \"ymin\": -40361188.817423075, \"xmax\": 19103249.875589747, \"ymax\": 22696850.786125436}"
  },
  2883: {
    "label": "NAD 1983 HARN StatePlane Florida North FIPS 0903 Feet",
    "defaultExtent": "{\"xmin\": -125938673.75279626, \"ymin\": -91452964.48785444, \"xmax\": 129875673.75419696, \"ymax\": 37469174.881458886}"
  },
  2884: {
    "label": "NAD 1983 HARN StatePlane Georgia East FIPS 1001 Feet",
    "defaultExtent": "{\"xmin\": -17790156.91179308, \"ymin\": -42419370.90387128, \"xmax\": 19102490.24512641, \"ymax\": 20636072.039419413}"
  },
  2885: {
    "label": "NAD 1983 HARN StatePlane Georgia West FIPS 1002 Feet",
    "defaultExtent": "{\"xmin\": -16149740.245126404, \"ymin\": -42419370.90387128, \"xmax\": 20742906.91179307, \"ymax\": 20636072.039419413}"
  },
  2886: {
    "label": "NAD 1983 HARN StatePlane Idaho East FIPS 1101 Feet",
    "defaultExtent": "{\"xmin\": -17791030.77240127, \"ymin\": -46668196.09827923, \"xmax\": 19103364.105734605, \"ymax\": 16390233.980496006}"
  },
  2887: {
    "label": "NAD 1983 HARN StatePlane Idaho Central FIPS 1102 Feet",
    "defaultExtent": "{\"xmin\": -16806780.77240127, \"ymin\": -46668196.09827923, \"xmax\": 20087614.105734613, \"ymax\": 16390233.980496006}"
  },
  2888: {
    "label": "NAD 1983 HARN StatePlane Idaho West FIPS 1103 Feet",
    "defaultExtent": "{\"xmin\": -15822271.850739589, \"ymin\": -46667541.07157821, \"xmax\": 21071605.18407292, \"ymax\": 16390003.930016432}"
  },
  2891: {
    "label": "NAD 1983 HARN StatePlane Kentucky North FIPS 1601 Feet",
    "defaultExtent": "{\"xmin\": -120428041.99926203, \"ymin\": -95345065.68630116, \"xmax\": 123708875.33386324, \"ymax\": 72395921.65832162}"
  },
  2892: {
    "label": "NAD 1983 HARN StatePlane Kentucky South FIPS 1602 Feet",
    "defaultExtent": "{\"xmin\": -121000416.20168285, \"ymin\": -93168846.35527569, \"xmax\": 124281249.53427276, \"ymax\": 69730104.69593088}"
  },
  2893: {
    "label": "NAD 1983 HARN StatePlane Maryland FIPS 1900 Feet",
    "defaultExtent": "{\"xmin\": -120560806.33287005, \"ymin\": -95443984.07002771, \"xmax\": 123185473.00068705, \"ymax\": 73998139.81175338}"
  },
  2894: {
    "label": "NAD 1983 HARN StatePlane Massachusetts Mainland FIPS 2001 Feet",
    "defaultExtent": "{\"xmin\": -119851157.08837874, \"ymin\": -94497855.62743106, \"xmax\": 121163490.421691, \"ymax\": 87915078.06965832}"
  },
  2895: {
    "label": "NAD 1983 HARN StatePlane Massachusetts Island FIPS 2002 Feet",
    "defaultExtent": "{\"xmin\": -119174181.5124591, \"ymin\": -96890792.84508213, \"xmax\": 122455014.84498255, \"ymax\": 82490183.72572033}"
  },
  2896: {
    "label": "NAD 1983 HARN StatePlane Michigan North FIPS 2111 Feet Intl",
    "defaultExtent": "{\"xmin\": -92972467.72510123, \"ymin\": -98631116.53314169, \"xmax\": 145465906.0456582, \"ymax\": 97383435.38129252}"
  },
  2897: {
    "label": "NAD 1983 HARN StatePlane Michigan Central FIPS 2112 Feet Intl",
    "defaultExtent": "{\"xmin\": -99918604.4313006, \"ymin\": -98010270.3373822, \"xmax\": 139288683.17293534, \"ymax\": 93827998.58621791}"
  },
  2898: {
    "label": "NAD 1983 HARN StatePlane Michigan South FIPS 2113 Feet Intl",
    "defaultExtent": "{\"xmin\": -107138194.28103462, \"ymin\": -97193419.70523094, \"xmax\": 133384913.43970798, \"ymax\": 87676226.96755593}"
  },
  2899: {
    "label": "NAD 1983 HARN StatePlane Mississippi East FIPS 2301 Feet",
    "defaultExtent": "{\"xmin\": -17462995.9868795, \"ymin\": -42239663.87008002, \"xmax\": 19431495.98687951, \"ymax\": 20818932.160666604}"
  },
  2900: {
    "label": "NAD 1983 HARN StatePlane Mississippi West FIPS 2302 Feet",
    "defaultExtent": "{\"xmin\": -16150662.653546175, \"ymin\": -42239663.87008, \"xmax\": 20743829.32021284, \"ymax\": 20818932.160666604}"
  },
  2901: {
    "label": "NAD 1983 HARN StatePlane Montana FIPS 2500 Feet Intl",
    "defaultExtent": "{\"xmin\": -117013995.52207346, \"ymin\": -98447330.28043139, \"xmax\": 120951003.39639506, \"ymax\": 99640574.5270326}"
  },
  2902: {
    "label": "NAD 1983 HARN StatePlane New Mexico East FIPS 3001 Feet",
    "defaultExtent": "{\"xmin\": -17905153.78908151, \"ymin\": -42783439.727925874, \"xmax\": 18987828.789081518, \"ymax\": 20272576.503993165}"
  },
  2903: {
    "label": "NAD 1983 HARN StatePlane New Mexico Central FIPS 3002 Feet",
    "defaultExtent": "{\"xmin\": -16805906.91179308, \"ymin\": -42783050.752203286, \"xmax\": 20086740.24512641, \"ymax\": 20272392.191087414}"
  },
  2904: {
    "label": "NAD 1983 HARN StatePlane New Mexico West FIPS 3003 Feet",
    "defaultExtent": "{\"xmin\": -15723539.381266333, \"ymin\": -42783763.87436138, \"xmax\": 21169722.714599665, \"ymax\": 20272730.0980813}"
  },
  2905: {
    "label": "NAD 1983 HARN StatePlane New York East FIPS 3101 Feet",
    "defaultExtent": "{\"xmin\": -17954198.578459747, \"ymin\": -45633899.523189425, \"xmax\": 18938448.578459747, \"ymax\": 17421543.42010127}"
  },
  2906: {
    "label": "NAD 1983 HARN StatePlane New York Central FIPS 3102 Feet",
    "defaultExtent": "{\"xmin\": -17626807.051441226, \"ymin\": -46060542.08865336, \"xmax\": 19267223.7181079, \"ymax\": 16997265.67022927}"
  },
  2907: {
    "label": "NAD 1983 HARN StatePlane New York West FIPS 3103 Feet",
    "defaultExtent": "{\"xmin\": -17298723.718107905, \"ymin\": -46060542.08865336, \"xmax\": 19595307.051441234, \"ymax\": 16997265.67022927}"
  },
  2908: {
    "label": "NAD 1983 HARN StatePlane New York Long Island FIPS 3104 Feet",
    "defaultExtent": "{\"xmin\": -120038987.02345988, \"ymin\": -96539899.17850932, \"xmax\": 122007487.02620924, \"ymax\": 80805040.5747754}"
  },
  2909: {
    "label": "NAD 1983 HARN StatePlane North Dakota North FIPS 3301 Feet Intl",
    "defaultExtent": "{\"xmin\": -116783950.51168965, \"ymin\": -99537492.31395046, \"xmax\": 120720958.38720465, \"ymax\": 101623824.1606784}"
  },
  2910: {
    "label": "NAD 1983 HARN StatePlane North Dakota South FIPS 3302 Feet Intl",
    "defaultExtent": "{\"xmin\": -117105075.65506853, \"ymin\": -98987163.59963356, \"xmax\": 121042083.53063746, \"ymax\": 98657782.40360132}"
  },
  2911: {
    "label": "NAD 1983 HARN StatePlane Oklahoma North FIPS 3501 Feet",
    "defaultExtent": "{\"xmin\": -121322703.18440174, \"ymin\": -94209043.74450657, \"xmax\": 125259703.18427433, \"ymax\": 63533994.71936889}"
  },
  2912: {
    "label": "NAD 1983 HARN StatePlane Oklahoma South FIPS 3502 Feet",
    "defaultExtent": "{\"xmin\": -122314145.16124853, \"ymin\": -93445293.73183505, \"xmax\": 126251145.15971924, \"ymax\": 57039858.7775079}"
  },
  2913: {
    "label": "NAD 1983 HARN StatePlane Oregon North FIPS 3601 Feet Intl",
    "defaultExtent": "{\"xmin\": -111333319.15464048, \"ymin\": -98152135.76997603, \"xmax\": 127737518.6308039, \"ymax\": 94405600.09722382}"
  },
  2914: {
    "label": "NAD 1983 HARN StatePlane Oregon South FIPS 3602 Feet Intl",
    "defaultExtent": "{\"xmin\": -115242838.16340137, \"ymin\": -97276009.95433559, \"xmax\": 125085357.8485172, \"ymax\": 88591642.56355196}"
  },
  2915: {
    "label": "NAD 1983 HARN StatePlane Tennessee FIPS 4100 Feet",
    "defaultExtent": "{\"xmin\": -121520920.4350513, \"ymin\": -93933602.54162051, \"xmax\": 125457920.43544713, \"ymax\": 62305849.94527583}"
  },
  2916: {
    "label": "NAD 1983 HARN StatePlane Texas North FIPS 4201 Feet",
    "defaultExtent": "{\"xmin\": -123084727.03576224, \"ymin\": -90487774.87579198, \"xmax\": 124397060.36918813, \"ymax\": 63851419.2061681}"
  },
  2917: {
    "label": "NAD 1983 HARN StatePlane Texas North Central FIPS 4202 Feet",
    "defaultExtent": "{\"xmin\": -123407288.90697485, \"ymin\": -86123158.24650788, \"xmax\": 127344288.90679376, \"ymax\": 57072008.04375381}"
  },
  2918: {
    "label": "NAD 1983 HARN StatePlane Texas Central FIPS 4203 Feet",
    "defaultExtent": "{\"xmin\": -124805075.29653856, \"ymin\": -81922742.74194843, \"xmax\": 129398241.96319537, \"ymax\": 51189696.39569576}"
  },
  2919: {
    "label": "NAD 1983 HARN StatePlane Texas South Central FIPS 4204 Feet",
    "defaultExtent": "{\"xmin\": -126725298.51400925, \"ymin\": -77828390.98283607, \"xmax\": 130662298.51400925, \"ymax\": 50600114.754025035}"
  },
  2920: {
    "label": "NAD 1983 HARN StatePlane Texas South FIPS 4205 Feet",
    "defaultExtent": "{\"xmin\": -129208724.97637452, \"ymin\": -73583789.01494722, \"xmax\": 131177224.97637452, \"ymax\": 56202225.512442015}"
  },
  2921: {
    "label": "NAD 1983 HARN StatePlane Utah North FIPS 4301 Feet Intl",
    "defaultExtent": "{\"xmin\": -119221897.73343366, \"ymin\": -93352960.55201896, \"xmax\": 122502737.93217586, \"ymax\": 85520637.00545405}"
  },
  2922: {
    "label": "NAD 1983 HARN StatePlane Utah Central FIPS 4302 Feet Intl",
    "defaultExtent": "{\"xmin\": -119796785.37297969, \"ymin\": -89212006.47602427, \"xmax\": 123077625.27009863, \"ymax\": 84130276.14041065}"
  },
  2923: {
    "label": "NAD 1983 HARN StatePlane Utah South FIPS 4303 Feet Intl",
    "defaultExtent": "{\"xmin\": -120766876.88852009, \"ymin\": -85132571.66656305, \"xmax\": 124047716.78259352, \"ymax\": 79709545.58655652}"
  },
  2924: {
    "label": "NAD 1983 HARN StatePlane Virginia North FIPS 4501 Feet",
    "defaultExtent": "{\"xmin\": -110512122.6100782, \"ymin\": -88857586.91005945, \"xmax\": 133477955.94636394, \"ymax\": 79510388.9753926}"
  },
  2925: {
    "label": "NAD 1983 HARN StatePlane Virginia South FIPS 4502 Feet",
    "defaultExtent": "{\"xmin\": -111140252.78501177, \"ymin\": -91531690.27508196, \"xmax\": 134106086.11804111, \"ymax\": 71512049.29681908}"
  },
  2926: {
    "label": "NAD 1983 HARN StatePlane Washington North FIPS 4601 Feet",
    "defaultExtent": "{\"xmin\": -117104065.01403554, \"ymin\": -99539209.71191388, \"xmax\": 120384898.34799246, \"ymax\": 101712467.82241428}"
  },
  2927: {
    "label": "NAD 1983 HARN StatePlane Washington South FIPS 4602 Feet",
    "defaultExtent": "{\"xmin\": -117497986.15361571, \"ymin\": -98849886.06598788, \"xmax\": 120778819.48946907, \"ymax\": 98059213.04053889}"
  },
  2928: {
    "label": "NAD 1983 HARN StatePlane Wisconsin North FIPS 4801 Feet",
    "defaultExtent": "{\"xmin\": -117286293.49705575, \"ymin\": -98766220.59380434, \"xmax\": 121223293.49621561, \"ymax\": 96899429.19742602}"
  },
  2929: {
    "label": "NAD 1983 HARN StatePlane Wisconsin Central FIPS 4802 Feet",
    "defaultExtent": "{\"xmin\": -117657339.14061904, \"ymin\": -98195540.81718999, \"xmax\": 121594339.12275791, \"ymax\": 93429232.43439895}"
  },
  2930: {
    "label": "NAD 1983 HARN StatePlane Wisconsin South FIPS 4803 Feet",
    "defaultExtent": "{\"xmin\": -118120973.36007847, \"ymin\": -97417963.07799816, \"xmax\": 122057973.36029819, \"ymax\": 89265120.26596287}"
  },
  2931: {
    "label": "Beduaram TM 13 NE",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": -9606659.335852288, \"xmax\": 6120944.47568898, \"ymax\": 9606659.335852282}"
  },
  2932: {
    "label": "QND 1995 Qatar National Grid",
    "defaultExtent": "{\"xmin\": -5423199.248179519, \"ymin\": -12015975.72052533, \"xmax\": 5823199.248179519, \"ymax\": 7205694.91098534}"
  },
  2933: {
    "label": "Gunung Segara UTM Zone 50S",
    "defaultExtent": "{\"xmin\": -5120096.774353864, \"ymin\": 394274.7006001249, \"xmax\": 6120096.774353864, \"ymax\": 19605725.299399868}"
  },
  2935: {
    "label": "Pulkovo 1942 CS63 Zone A1",
    "defaultExtent": "{\"xmin\": -4323107.467526717, \"ymin\": -9623695.679377396, \"xmax\": 6923107.467526718, \"ymax\": 9597894.552888796}"
  },
  2936: {
    "label": "Pulkovo 1942 CS63 Zone A2",
    "defaultExtent": "{\"xmin\": -3323107.467526717, \"ymin\": -9623695.679377396, \"xmax\": 7923107.467526716, \"ymax\": 9597894.552888796}"
  },
  2937: {
    "label": "Pulkovo 1942 CS63 Zone A3",
    "defaultExtent": "{\"xmin\": -2323107.467526717, \"ymin\": -9623695.679377396, \"xmax\": 8923107.467526717, \"ymax\": 9597894.552888796}"
  },
  2938: {
    "label": "Pulkovo 1942 CS63 Zone A4",
    "defaultExtent": "{\"xmin\": -1323107.467526717, \"ymin\": -9623695.679377396, \"xmax\": 9923107.467526719, \"ymax\": 9597894.552888796}"
  },
  2939: {
    "label": "Pulkovo 1942 CS63 Zone K2",
    "defaultExtent": "{\"xmin\": -3323107.467526717, \"ymin\": -9625538.61704635, \"xmax\": 7923107.467526717, \"ymax\": 9596051.615219839}"
  },
  2940: {
    "label": "Pulkovo 1942 CS63 Zone K3",
    "defaultExtent": "{\"xmin\": -2323107.467526717, \"ymin\": -9625538.61704635, \"xmax\": 8923107.467526717, \"ymax\": 9596051.615219839}"
  },
  2941: {
    "label": "Pulkovo 1942 CS63 Zone K4",
    "defaultExtent": "{\"xmin\": -1323107.467526717, \"ymin\": -9625538.61704635, \"xmax\": 9923107.467526719, \"ymax\": 9596051.615219839}"
  },
  2942: {
    "label": "Porto Santo 1936 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2943: {
    "label": "Selvagem Grande 1938 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2944: {
    "label": "NAD 1983 CSRS MTM 2 SCoPQ",
    "defaultExtent": "{\"xmin\": -5317650.671615875, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  2945: {
    "label": "NAD 1983 CSRS MTM 3",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  2946: {
    "label": "NAD 1983 CSRS MTM 4",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  2947: {
    "label": "NAD 1983 CSRS MTM 5",
    "defaultExtent": "{\"xmin\": -5317650.671615875, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  2948: {
    "label": "NAD 1983 CSRS MTM 6",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  2949: {
    "label": "NAD 1983 CSRS MTM 7",
    "defaultExtent": "{\"xmin\": -5317650.671615872, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  2950: {
    "label": "NAD 1983 CSRS MTM 8",
    "defaultExtent": "{\"xmin\": -5317650.671615875, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  2951: {
    "label": "NAD 1983 CSRS MTM 9",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  2952: {
    "label": "NAD 1983 CSRS MTM 10",
    "defaultExtent": "{\"xmin\": -5317650.671615872, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615875, \"ymax\": 9609668.72389495}"
  },
  2953: {
    "label": "NAD 1983 CSRS New Brunswick Stereographic",
    "defaultExtent": "{\"xmin\": -28216609.30251005, \"ymin\": -23044570.09165448, \"xmax\": 33216609.302617967, \"ymax\": 38199039.96517336}"
  },
  2954: {
    "label": "NAD 1983 CSRS Prince Edward Island",
    "defaultExtent": "{\"xmin\": -30310559.120786555, \"ymin\": -29767213.08570662, \"xmax\": 31110559.12086179, \"ymax\": 31492912.90882549}"
  },
  2955: {
    "label": "NAD 1983 CSRS UTM Zone 11N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  2956: {
    "label": "NAD 1983 CSRS UTM Zone 12N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  2957: {
    "label": "NAD 1983 CSRS UTM Zone 13N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  2958: {
    "label": "NAD 1983 CSRS UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  2959: {
    "label": "NAD 1983 CSRS UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  2960: {
    "label": "NAD 1983 CSRS UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  2961: {
    "label": "NAD 1983 CSRS UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  2962: {
    "label": "NAD 1983 CSRS UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  2964: {
    "label": "NAD 1927 Alaska Albers Feet",
    "defaultExtent": "{\"xmin\": -45076020.76447885, \"ymin\": -29314284.464857526, \"xmax\": 45076020.76615498, \"ymax\": 56711713.488581255}"
  },
  2965: {
    "label": "NAD 1983 StatePlane Indiana East FIPS 1301 Feet",
    "defaultExtent": "{\"xmin\": -18119470.123019423, \"ymin\": -44331188.15832912, \"xmax\": 18775636.789686095, \"ymax\": 18728458.901569463}"
  },
  2966: {
    "label": "NAD 1983 StatePlane Indiana West FIPS 1302 Feet",
    "defaultExtent": "{\"xmin\": -15494803.456352763, \"ymin\": -44331188.15832912, \"xmax\": 21400303.456352763, \"ymax\": 18728458.901569463}"
  },
  2967: {
    "label": "NAD 1983 HARN StatePlane Indiana East FIPS 1301 Feet",
    "defaultExtent": "{\"xmin\": -18119470.123019423, \"ymin\": -44331188.15832912, \"xmax\": 18775636.789686095, \"ymax\": 18728458.901569463}"
  },
  2968: {
    "label": "NAD 1983 HARN StatePlane Indiana West FIPS 1302 Feet",
    "defaultExtent": "{\"xmin\": -15494803.456352763, \"ymin\": -44331188.15832912, \"xmax\": 21400303.456352763, \"ymax\": 18728458.901569463}"
  },
  2969: {
    "label": "Fort Marigot UTM 20N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2970: {
    "label": "Sainte Anne UTM 20N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2971: {
    "label": "CSG 1967 UTM 22N",
    "defaultExtent": "{\"xmin\": -5121006.178542034, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2972: {
    "label": "RGFG 1995 UTM 22N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  2973: {
    "label": "Fort Desaix UTM 20N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  2975: {
    "label": "RGR 1992 UTM 40S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  2976: {
    "label": "Tahiti 1952 UTM 6S",
    "defaultExtent": "{\"xmin\": -5121006.178542016, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  2977: {
    "label": "Tahaa 1954 UTM 5S",
    "defaultExtent": "{\"xmin\": -5121006.178542009, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  2978: {
    "label": "IGN72 Nuku Hiva UTM 7S",
    "defaultExtent": "{\"xmin\": -5121006.178542009, \"ymin\": 392912.9475212451, \"xmax\": 6121006.178542043, \"ymax\": 19607087.052478764}"
  },
  2980: {
    "label": "Combani 1950 UTM 38S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  2981: {
    "label": "IGN56 Lifou UTM 58S",
    "defaultExtent": "{\"xmin\": -5121006.178542012, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  2984: {
    "label": "RGNC 1991 Lambert New Caledonia",
    "defaultExtent": "{\"xmin\": -38962573.945438884, \"ymin\": -13493017.242646003, \"xmax\": 39762573.9454389, \"ymax\": 27199374.15407492}"
  },
  2985: {
    "label": "Petrels 1972 Terre Adelie Polar Stereographic",
    "defaultExtent": "{\"xmin\": -30375492.264700357, \"ymin\": -32974855.75252387, \"xmax\": 30975492.26470009, \"ymax\": 28376128.77687653}"
  },
  2986: {
    "label": "Perroud 1950 Terre Adelie Polar Stereographic",
    "defaultExtent": "{\"xmin\": -30375492.264700357, \"ymin\": -32974855.75252387, \"xmax\": 30975492.26470009, \"ymax\": 28376128.77687653}"
  },
  2987: {
    "label": "Saint Pierre et Miquelon 1950 UTM 21N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  2988: {
    "label": "MOP78 UTM 1S",
    "defaultExtent": "{\"xmin\": -5121006.178542009, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  2991: {
    "label": "NAD 1983 Oregon Statewide Lambert",
    "defaultExtent": "{\"xmin\": -36115366.195192955, \"ymin\": -29681657.82664154, \"xmax\": 36915366.19580745, \"ymax\": 28096555.99768769}"
  },
  2992: {
    "label": "NAD 1983 Oregon Statewide Lambert Feet Intl",
    "defaultExtent": "{\"xmin\": -118488734.23619735, \"ymin\": -97380767.14777409, \"xmax\": 121113406.1542239, \"ymax\": 92180301.82968402}"
  },
  2993: {
    "label": "NAD 1983 HARN Oregon Statewide Lambert",
    "defaultExtent": "{\"xmin\": -36115366.195192955, \"ymin\": -29681657.82664154, \"xmax\": 36915366.19580745, \"ymax\": 28096555.99768769}"
  },
  2994: {
    "label": "NAD 1983 HARN Oregon Statewide Lambert Feet Intl",
    "defaultExtent": "{\"xmin\": -118488734.23619735, \"ymin\": -97380767.14777409, \"xmax\": 121113406.1542239, \"ymax\": 92180301.82968402}"
  },
  2995: {
    "label": "IGN53 Mare UTM 58S",
    "defaultExtent": "{\"xmin\": -5121006.178542012, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  2996: {
    "label": "ST84 Ile des Pins UTM 58S",
    "defaultExtent": "{\"xmin\": -5121006.178542012, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  2997: {
    "label": "ST71 Belep UTM 58S",
    "defaultExtent": "{\"xmin\": -5121006.178542012, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  2998: {
    "label": "NEA74 Noumea UTM 58S",
    "defaultExtent": "{\"xmin\": -5121006.178542012, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  2999: {
    "label": "Grand Comoros UTM 38S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  3000: {
    "label": "Gunung Segara NEIEZ",
    "defaultExtent": "{\"xmin\": -16075077.227383234, \"ymin\": -19032704.26818891, \"xmax\": 23875077.227383245, \"ymax\": 20832704.268526573}"
  },
  3001: {
    "label": "Batavia NEIEZ",
    "defaultExtent": "{\"xmin\": -16075077.227383234, \"ymin\": -19032704.26818891, \"xmax\": 23875077.227383245, \"ymax\": 20832704.268526573}"
  },
  3002: {
    "label": "Makassar NEIEZ",
    "defaultExtent": "{\"xmin\": -16075077.227383234, \"ymin\": -19032704.26818891, \"xmax\": 23875077.227383245, \"ymax\": 20832704.268526573}"
  },
  3003: {
    "label": "Monte Mario Italy 1",
    "defaultExtent": "{\"xmin\": -4121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 7121006.178542033, \"ymax\": 9607087.052499557}"
  },
  3004: {
    "label": "Monte Mario Italy 2",
    "defaultExtent": "{\"xmin\": -3101006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 8141006.178542033, \"ymax\": 9607087.052499557}"
  },
  3005: {
    "label": "NAD 1983 BC Environment Albers",
    "defaultExtent": "{\"xmin\": -13225939.200903945, \"ymin\": -8596682.162582252, \"xmax\": 15225939.201000066, \"ymax\": 17379049.55586912}"
  },
  3006: {
    "label": "SWEREF99 TM",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3007: {
    "label": "SWEREF99 12 00",
    "defaultExtent": "{\"xmin\": -5473012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 5773012.972913165, \"ymax\": 9610629.786873637}"
  },
  3008: {
    "label": "SWEREF99 13 30",
    "defaultExtent": "{\"xmin\": -5473012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 5773012.972913165, \"ymax\": 9610629.786873637}"
  },
  3009: {
    "label": "SWEREF99 15 00",
    "defaultExtent": "{\"xmin\": -5473012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 5773012.972913165, \"ymax\": 9610629.786873637}"
  },
  3010: {
    "label": "SWEREF99 16 30",
    "defaultExtent": "{\"xmin\": -5473012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 5773012.972913165, \"ymax\": 9610629.786873637}"
  },
  3011: {
    "label": "SWEREF99 18 00",
    "defaultExtent": "{\"xmin\": -5473012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 5773012.972913165, \"ymax\": 9610629.786873637}"
  },
  3012: {
    "label": "SWEREF99 14 15",
    "defaultExtent": "{\"xmin\": -5473012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 5773012.972913165, \"ymax\": 9610629.786873637}"
  },
  3013: {
    "label": "SWEREF99 15 45",
    "defaultExtent": "{\"xmin\": -5473012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 5773012.972913165, \"ymax\": 9610629.786873637}"
  },
  3014: {
    "label": "SWEREF99 17 15",
    "defaultExtent": "{\"xmin\": -5473012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 5773012.972913165, \"ymax\": 9610629.786873637}"
  },
  3015: {
    "label": "SWEREF99 18 45",
    "defaultExtent": "{\"xmin\": -5473012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 5773012.972913165, \"ymax\": 9610629.786873637}"
  },
  3016: {
    "label": "SWEREF99 20 15",
    "defaultExtent": "{\"xmin\": -5473012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 5773012.972913165, \"ymax\": 9610629.786873637}"
  },
  3017: {
    "label": "SWEREF99 21 45",
    "defaultExtent": "{\"xmin\": -5473012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 5773012.972913165, \"ymax\": 9610629.786873637}"
  },
  3018: {
    "label": "SWEREF99 23 15",
    "defaultExtent": "{\"xmin\": -5473012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 5773012.972913165, \"ymax\": 9610629.786873637}"
  },
  3019: {
    "label": "RT90 75 gon V",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.712638919, \"ymax\": 9609569.127050688}"
  },
  3020: {
    "label": "RT90 5 gon V",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.712638919, \"ymax\": 9609569.127050688}"
  },
  3021: {
    "label": "RT90 25 gon V",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.712638919, \"ymax\": 9609569.127050688}"
  },
  3022: {
    "label": "RT90 0 gon",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.712638919, \"ymax\": 9609569.127050688}"
  },
  3023: {
    "label": "RT90 25 gon O",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.712638919, \"ymax\": 9609569.127050688}"
  },
  3024: {
    "label": "RT90 5 gon O",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.712638919, \"ymax\": 9609569.127050688}"
  },
  3025: {
    "label": "RT38 75 gon V",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.712638919, \"ymax\": 9609569.127050688}"
  },
  3026: {
    "label": "RT38 5 gon V",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.712638919, \"ymax\": 9609569.127050688}"
  },
  3027: {
    "label": "RT38 25 gon V",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.712638919, \"ymax\": 9609569.127050688}"
  },
  3028: {
    "label": "RT38 0 gon",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.712638919, \"ymax\": 9609569.127050688}"
  },
  3029: {
    "label": "RT38 25 gon O",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.712638919, \"ymax\": 9609569.127050688}"
  },
  3030: {
    "label": "RT38 5 gon O",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.712638919, \"ymax\": 9609569.127050688}"
  },
  3031: {
    "label": "WGS 1984 Antarctic Polar Stereographic",
    "defaultExtent": "{\"xmin\": -30635955.947272837, \"ymin\": -30635955.947272375, \"xmax\": 30635955.947272837, \"ymax\": 30635955.947272986}"
  },
  3032: {
    "label": "WGS 1984 Australian Antarctic Polar Stereographic",
    "defaultExtent": "{\"xmin\": -24635955.94727298, \"ymin\": -24635955.947272763, \"xmax\": 36635955.9472725, \"ymax\": 36635955.9472729}"
  },
  3033: {
    "label": "WGS 1984 Australian Antarctic Lambert",
    "defaultExtent": "{\"xmin\": -28389217.168339014, \"ymin\": -32521610.612492993, \"xmax\": 40389217.167549334, \"ymax\": 35812245.20207211}"
  },
  3034: {
    "label": "ETRS 1989 LCC",
    "defaultExtent": "{\"xmin\": -31211653.14061199, \"ymin\": -27510234.270025503, \"xmax\": 39211653.14061456, \"ymax\": 34503962.231349826}"
  },
  3035: {
    "label": "ETRS 1989 LAEA",
    "defaultExtent": "{\"xmin\": -8426404.408394862, \"ymin\": -9526565.972599337, \"xmax\": 17068404.40839246, \"ymax\": 15946565.972567223}"
  },
  3036: {
    "label": "Moznet UTM Zone 36S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.7676994335, \"ymax\": 19606785.535047516}"
  },
  3037: {
    "label": "Moznet UTM Zone 37S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.7676994335, \"ymax\": 19606785.535047516}"
  },
  3038: {
    "label": "ETRS 1989 ETRS-TM26",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3039: {
    "label": "ETRS 1989 ETRS-TM27",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3040: {
    "label": "ETRS 1989 ETRS-TM28",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3041: {
    "label": "ETRS 1989 ETRS-TM29",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3042: {
    "label": "ETRS 1989 ETRS-TM30",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3043: {
    "label": "ETRS 1989 ETRS-TM31",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724002, \"ymax\": 9606785.534958888}"
  },
  3044: {
    "label": "ETRS 1989 ETRS-TM32",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3045: {
    "label": "ETRS 1989 ETRS-TM33",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3046: {
    "label": "ETRS 1989 ETRS-TM34",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3047: {
    "label": "ETRS 1989 ETRS-TM35",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3048: {
    "label": "ETRS 1989 ETRS-TM36",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767723999, \"ymax\": 9606785.534958888}"
  },
  3049: {
    "label": "ETRS 1989 ETRS-TM37",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767723999, \"ymax\": 9606785.534958888}"
  },
  3050: {
    "label": "ETRS 1989 ETRS-TM38",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3051: {
    "label": "ETRS 1989 ETRS-TM39",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724002, \"ymax\": 9606785.534958888}"
  },
  3054: {
    "label": "Hjorsey 1955 UTM Zone 26N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  3055: {
    "label": "Hjorsey 1955 UTM Zone 27N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  3056: {
    "label": "Hjorsey 1955 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  3057: {
    "label": "ISN 1993 Lambert 1993",
    "defaultExtent": "{\"xmin\": -34541329.99311783, \"ymin\": -31559285.719874755, \"xmax\": 35541329.993086554, \"ymax\": 37017181.310167946}"
  },
  3058: {
    "label": "Helle 1954 Jan Mayen Grid",
    "defaultExtent": "{\"xmin\": -5573255.480734327, \"ymin\": -17410931.42506959, \"xmax\": 5673255.480734327, \"ymax\": 1810931.4250695836}"
  },
  3059: {
    "label": "LKS 1992 Latvia TM",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -15606785.534958892, \"xmax\": 6120763.767723999, \"ymax\": 3606785.534958888}"
  },
  3060: {
    "label": "IGN72 Grande Terre UTM 58S",
    "defaultExtent": "{\"xmin\": -5121006.178542012, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  3061: {
    "label": "Porto Santo 1995 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  3062: {
    "label": "Azores Oriental 1995 UTM Zone 26N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  3063: {
    "label": "Azores Central 1995 UTM Zone 26N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  3064: {
    "label": "IGM 1995 UTM Zone 32N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  3065: {
    "label": "IGM 1995 UTM Zone 33N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  3066: {
    "label": "ED 1950 Jordan TM",
    "defaultExtent": "{\"xmin\": -5122130.829638179, \"ymin\": -12609009.238784574, \"xmax\": 6122130.829638179, \"ymax\": 6609009.23878457}"
  },
  3067: {
    "label": "EUREF FIN TM35FIN",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3068: {
    "label": "DHDN Soldner Berlin",
    "defaultExtent": "{\"xmin\": -4968796.012793112, \"ymin\": -15408792.009781843, \"xmax\": 5048796.012793112, \"ymax\": 3810134.2484092056}"
  },
  3069: {
    "label": "NAD 1927 Wisconsin TM",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -14106689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 5106689.106319858}"
  },
  3070: {
    "label": "NAD 1983 Wisconsin TM",
    "defaultExtent": "{\"xmin\": -5100763.767724001, \"ymin\": -14086785.534958892, \"xmax\": 6140763.767724001, \"ymax\": 5126785.534958888}"
  },
  3071: {
    "label": "NAD 1983 HARN Wisconsin TM",
    "defaultExtent": "{\"xmin\": -5100763.767724001, \"ymin\": -14086785.534958892, \"xmax\": 6140763.767724001, \"ymax\": 5126785.534958888}"
  },
  3072: {
    "label": "NAD 1983 Maine 2000 East Zone",
    "defaultExtent": "{\"xmin\": -4922900.5126537075, \"ymin\": -14465644.401938386, \"xmax\": 6322900.5126537075, \"ymax\": 4755230.746617419}"
  },
  3074: {
    "label": "NAD 1983 Maine 2000 West Zone",
    "defaultExtent": "{\"xmin\": -5322900.5126537075, \"ymin\": -14354547.38863227, \"xmax\": 5922900.5126537075, \"ymax\": 4866327.759923532}"
  },
  3075: {
    "label": "NAD 1983 HARN Maine 2000 East Zone",
    "defaultExtent": "{\"xmin\": -4922900.5126537075, \"ymin\": -14465644.401938386, \"xmax\": 6322900.5126537075, \"ymax\": 4755230.746617419}"
  },
  3077: {
    "label": "NAD 1983 HARN Maine 2000 West Zone",
    "defaultExtent": "{\"xmin\": -5322900.5126537075, \"ymin\": -14354547.38863227, \"xmax\": 5922900.5126537075, \"ymax\": 4866327.759923532}"
  },
  3078: {
    "label": "NAD 1983 Michigan GeoRef Meters",
    "defaultExtent": "{\"xmin\": -28809902.8075835, \"ymin\": -30359666.086749792, \"xmax\": 35544410.36686367, \"ymax\": 20812653.70437237}"
  },
  3079: {
    "label": "NAD 1983 HARN Michigan GeoRef Meters",
    "defaultExtent": "{\"xmin\": -28809902.8075835, \"ymin\": -30359666.086749792, \"xmax\": 35544410.36686367, \"ymax\": 20812653.70437237}"
  },
  3080: {
    "label": "NAD 1927 Texas Statewide Mapping System",
    "defaultExtent": "{\"xmin\": -123715561.00212912, \"ymin\": -89185001.24060892, \"xmax\": 129715561.00364459, \"ymax\": 44655308.503838845}"
  },
  3081: {
    "label": "NAD 1983 Texas Statewide Mapping System",
    "defaultExtent": "{\"xmin\": -37624293.88882151, \"ymin\": -27099598.267774396, \"xmax\": 39624293.88901578, \"ymax\": 13696387.486229919}"
  },
  3082: {
    "label": "NAD 1983 Texas Centric Mapping System Lambert",
    "defaultExtent": "{\"xmin\": -37101439.53622417, \"ymin\": -21633811.39510804, \"xmax\": 40101439.53614661, \"ymax\": 19288743.702293932}"
  },
  3083: {
    "label": "NAD 1983 Texas Centric Mapping System Albers",
    "defaultExtent": "{\"xmin\": -17154324.437499855, \"ymin\": -675329.8507281002, \"xmax\": 20154324.43750238, \"ymax\": 19014408.076648667}"
  },
  3084: {
    "label": "NAD 1983 HARN Texas Centric Mapping System Lambert",
    "defaultExtent": "{\"xmin\": -37101439.53622417, \"ymin\": -21633811.39510804, \"xmax\": 40101439.53614661, \"ymax\": 19288743.702293932}"
  },
  3085: {
    "label": "NAD 1983 HARN Texas Centric Mapping System Albers",
    "defaultExtent": "{\"xmin\": -17154324.437499855, \"ymin\": -675329.8507281002, \"xmax\": 20154324.43750238, \"ymax\": 19014408.076648667}"
  },
  3086: {
    "label": "NAD 1983 Florida GDL Albers",
    "defaultExtent": "{\"xmin\": -19533690.484215964, \"ymin\": -7509915.322719345, \"xmax\": 20333690.484215967, \"ymax\": 11731295.795514686}"
  },
  3087: {
    "label": "NAD 1983 HARN Florida GDL Albers",
    "defaultExtent": "{\"xmin\": -19533690.484215964, \"ymin\": -7509915.322719345, \"xmax\": 20333690.484215967, \"ymax\": 11731295.795514686}"
  },
  3088: {
    "label": "NAD 1983 StatePlane Kentucky FIPS 1600",
    "defaultExtent": "{\"xmin\": -35794088.47457762, \"ymin\": -27913214.15795621, \"xmax\": 38794088.4749888, \"ymax\": 22449415.817500036}"
  },
  3089: {
    "label": "NAD 1983 StatePlane Kentucky FIPS 1600 Feet",
    "defaultExtent": "{\"xmin\": -117434438.60367672, \"ymin\": -91578603.44989465, \"xmax\": 127276938.60502575, \"ymax\": 73652791.72791469}"
  },
  3090: {
    "label": "NAD 1983 HARN StatePlane Kentucky FIPS 1600",
    "defaultExtent": "{\"xmin\": -35794088.47457762, \"ymin\": -27913214.15795621, \"xmax\": 38794088.4749888, \"ymax\": 22449415.817500036}"
  },
  3091: {
    "label": "NAD 1983 HARN StatePlane Kentucky FIPS 1600 Feet",
    "defaultExtent": "{\"xmin\": -117434438.60367672, \"ymin\": -91578603.44989465, \"xmax\": 127276938.60502575, \"ymax\": 73652791.72791469}"
  },
  3092: {
    "label": "Tokyo UTM Zone 51N",
    "defaultExtent": "{\"xmin\": -5120096.7743538655, \"ymin\": -9605725.299399875, \"xmax\": 6120096.774353864, \"ymax\": 9605725.29939987}"
  },
  3093: {
    "label": "Tokyo UTM Zone 52N",
    "defaultExtent": "{\"xmin\": -5120096.774353864, \"ymin\": -9605725.299399875, \"xmax\": 6120096.774353864, \"ymax\": 9605725.29939987}"
  },
  3094: {
    "label": "Tokyo UTM Zone 53N",
    "defaultExtent": "{\"xmin\": -5120096.774353864, \"ymin\": -9605725.299399871, \"xmax\": 6120094.975174162, \"ymax\": 9605725.29939987}"
  },
  3095: {
    "label": "Tokyo UTM Zone 54N",
    "defaultExtent": "{\"xmin\": -5120096.774353855, \"ymin\": -9605725.299379075, \"xmax\": 6120096.774353871, \"ymax\": 9605725.299379082}"
  },
  3096: {
    "label": "Tokyo UTM Zone 55N",
    "defaultExtent": "{\"xmin\": -5120096.774353853, \"ymin\": -9605725.299379075, \"xmax\": 6120096.774353871, \"ymax\": 9605725.299379082}"
  },
  3097: {
    "label": "JGD 2000 UTM Zone 51N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3098: {
    "label": "JGD 2000 UTM Zone 52N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3099: {
    "label": "JGD 2000 UTM Zone 53N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958888, \"xmax\": 6120761.968321789, \"ymax\": 9606785.534958888}"
  },
  3100: {
    "label": "JGD 2000 UTM Zone 54N",
    "defaultExtent": "{\"xmin\": -5120763.767723992, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  3101: {
    "label": "JGD 2000 UTM Zone 55N",
    "defaultExtent": "{\"xmin\": -5120763.767723991, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  3102: {
    "label": "Samoa 1962 Samoa Lambert",
    "defaultExtent": "{\"xmin\": -117293513.11027402, \"ymin\": -53093029.58928256, \"xmax\": 118293513.11027405, \"ymax\": 86482568.80391248}"
  },
  3106: {
    "label": "Gulshan 303 Bangladesh TM",
    "defaultExtent": "{\"xmin\": -5119962.926635592, \"ymin\": -9605642.135990625, \"xmax\": 6119962.926635592, \"ymax\": 9605642.135990622}"
  },
  3107: {
    "label": "GDA 1994 South Australia Lambert",
    "defaultExtent": "{\"xmin\": -37393288.79638155, \"ymin\": -11839772.68280195, \"xmax\": 39393288.796386346, \"ymax\": 30209751.11382752}"
  },
  3108: {
    "label": "ETRS 1989 Guernsey Grid",
    "defaultExtent": "{\"xmin\": -5575996.103874247, \"ymin\": -15045819.420314582, \"xmax\": 5669996.103874247, \"ymax\": 4175382.4896539757}"
  },
  3109: {
    "label": "ETRS 1989 Jersey Transverse Mercator",
    "defaultExtent": "{\"xmin\": -5583012.410611869, \"ymin\": -14995278.593773324, \"xmax\": 5663012.410611867, \"ymax\": 4225979.057847996}"
  },
  3110: {
    "label": "AGD 1966 VICGRID",
    "defaultExtent": "{\"xmin\": -34932768.34612599, \"ymin\": -15746296.521979012, \"xmax\": 39932768.346816, \"ymax\": 33460107.02656929}"
  },
  3111: {
    "label": "GDA 1994 VICGRID94",
    "defaultExtent": "{\"xmin\": -34932637.91770011, \"ymin\": -17746224.69548947, \"xmax\": 39932637.91839013, \"ymax\": 31460007.399891436}"
  },
  3112: {
    "label": "GDA 1994 Geoscience Australia Lambert",
    "defaultExtent": "{\"xmin\": -39261695.7845905, \"ymin\": -14872903.343173979, \"xmax\": 39261695.7845905, \"ymax\": 24259813.648860574}"
  },
  3113: {
    "label": "GDA 1994 BCSG02",
    "defaultExtent": "{\"xmin\": -5572956.742783425, \"ymin\": -6412122.9176758295, \"xmax\": 5672956.742783444, \"ymax\": 12808944.4434341}"
  },
  3114: {
    "label": "MAGNA Colombia Oeste Oeste",
    "defaultExtent": "{\"xmin\": -4623012.972913165, \"ymin\": -9118862.252505483, \"xmax\": 6623012.972913165, \"ymax\": 10102397.321241796}"
  },
  3115: {
    "label": "MAGNA Colombia Oeste",
    "defaultExtent": "{\"xmin\": -4623012.972913167, \"ymin\": -9118862.252505483, \"xmax\": 6623012.972913165, \"ymax\": 10102397.321241796}"
  },
  3116: {
    "label": "MAGNA Colombia Bogota",
    "defaultExtent": "{\"xmin\": -4623012.972913165, \"ymin\": -9118862.252505483, \"xmax\": 6623012.972913165, \"ymax\": 10102397.321241796}"
  },
  3117: {
    "label": "MAGNA Colombia Este",
    "defaultExtent": "{\"xmin\": -4623012.972913165, \"ymin\": -9118862.252505483, \"xmax\": 6623012.972913165, \"ymax\": 10102397.321241796}"
  },
  3118: {
    "label": "MAGNA Colombia Este Este",
    "defaultExtent": "{\"xmin\": -4623012.972913165, \"ymin\": -9118862.252505483, \"xmax\": 6623012.972913165, \"ymax\": 10102397.321241796}"
  },
  3119: {
    "label": "Douala 1948 AEF West",
    "defaultExtent": "{\"xmin\": -4617632.225253592, \"ymin\": -8601320.493644519, \"xmax\": 6617632.225253592, \"ymax\": 10601320.493644513}"
  },
  3120: {
    "label": "Pulkovo 1942 Adj 1958 Poland Zone I",
    "defaultExtent": "{\"xmin\": -26048518.80677092, \"ymin\": -25284866.2431974, \"xmax\": 35322518.80674909, \"ymax\": 36132899.17367828}"
  },
  3121: {
    "label": "PRS 1992 Philippines Zone I",
    "defaultExtent": "{\"xmin\": -5122848.728180778, \"ymin\": -9610052.79298174, \"xmax\": 6122848.728180778, \"ymax\": 9610052.792981734}"
  },
  3122: {
    "label": "PRS 1992 Philippines Zone II",
    "defaultExtent": "{\"xmin\": -5122848.728180778, \"ymin\": -9610052.79298174, \"xmax\": 6122848.728180778, \"ymax\": 9610052.792981734}"
  },
  3123: {
    "label": "PRS 1992 Philippines Zone III",
    "defaultExtent": "{\"xmin\": -5122848.728180778, \"ymin\": -9610052.79298174, \"xmax\": 6122848.728180778, \"ymax\": 9610052.792981734}"
  },
  3124: {
    "label": "PRS 1992 Philippines Zone IV",
    "defaultExtent": "{\"xmin\": -5122848.728180779, \"ymin\": -9610052.79298174, \"xmax\": 6122848.728180778, \"ymax\": 9610052.792981734}"
  },
  3125: {
    "label": "PRS 1992 Philippines Zone V",
    "defaultExtent": "{\"xmin\": -5122848.728180778, \"ymin\": -9610052.79298174, \"xmax\": 6122848.728180778, \"ymax\": 9610052.792981734}"
  },
  3126: {
    "label": "ETRS 1989 ETRS-GK19FIN",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  3127: {
    "label": "ETRS 1989 ETRS-GK20FIN",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  3128: {
    "label": "ETRS 1989 ETRS-GK21FIN",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  3129: {
    "label": "ETRS 1989 ETRS-GK22FIN",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.9729131665, \"ymax\": 9610629.786873637}"
  },
  3130: {
    "label": "ETRS 1989 ETRS-GK23FIN",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913162, \"ymax\": 9610629.786873637}"
  },
  3131: {
    "label": "ETRS 1989 ETRS-GK24FIN",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913164, \"ymax\": 9610629.786873637}"
  },
  3132: {
    "label": "ETRS 1989 ETRS-GK25FIN",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  3133: {
    "label": "ETRS 1989 ETRS-GK26FIN",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  3134: {
    "label": "ETRS 1989 ETRS-GK27FIN",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  3135: {
    "label": "ETRS 1989 ETRS-GK28FIN",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  3136: {
    "label": "ETRS 1989 ETRS-GK29FIN",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  3137: {
    "label": "ETRS 1989 ETRS-GK30FIN",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913164, \"ymax\": 9610629.786873637}"
  },
  3138: {
    "label": "ETRS 1989 ETRS-GK31FIN",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.9729131665, \"ymax\": 9610629.786873637}"
  },
  3141: {
    "label": "Fiji 1956 UTM Zone 60S",
    "defaultExtent": "{\"xmin\": -5121006.178542016, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  3142: {
    "label": "Fiji 1956 UTM Zone 1S",
    "defaultExtent": "{\"xmin\": -5121006.178542009, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  3146: {
    "label": "Pulkovo 1942 3 Degree GK Zone 6",
    "defaultExtent": "{\"xmin\": 876892.5324732829, \"ymin\": -9610795.116133098, \"xmax\": 12123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3147: {
    "label": "Pulkovo 1942 3 Degree GK CM 18E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3148: {
    "label": "Indian 1960 UTM Zone 48N",
    "defaultExtent": "{\"xmin\": -5119962.926635592, \"ymin\": -9605642.135990625, \"xmax\": 6119962.926635592, \"ymax\": 9605642.135990622}"
  },
  3149: {
    "label": "Indian 1960 UTM Zone 49N",
    "defaultExtent": "{\"xmin\": -5119962.926635592, \"ymin\": -9605642.135990623, \"xmax\": 6119962.926635591, \"ymax\": 9605642.135990622}"
  },
  3150: {
    "label": "Pulkovo 1995 3 Degree GK Zone 6",
    "defaultExtent": "{\"xmin\": 876892.5324732829, \"ymin\": -9610795.116133098, \"xmax\": 12123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3151: {
    "label": "Pulkovo 1995 3 Degree GK CM 18E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3153: {
    "label": "NAD 1983 CSRS BC Environment Albers",
    "defaultExtent": "{\"xmin\": -13225939.200903945, \"ymin\": -8596682.162582252, \"xmax\": 15225939.201000066, \"ymax\": 17379049.55586912}"
  },
  3154: {
    "label": "NAD 1983 CSRS UTM Zone 7N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724011, \"ymax\": 9606785.534938097}"
  },
  3155: {
    "label": "NAD 1983 CSRS UTM Zone 8N",
    "defaultExtent": "{\"xmin\": -5120761.968321789, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3156: {
    "label": "NAD 1983 CSRS UTM Zone 9N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3157: {
    "label": "NAD 1983 CSRS UTM Zone 10N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724002, \"ymax\": 9606785.534958888}"
  },
  3158: {
    "label": "NAD 1983 CSRS UTM Zone 14N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3159: {
    "label": "NAD 1983 CSRS UTM Zone 15N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3160: {
    "label": "NAD 1983 CSRS UTM Zone 16N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958893, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3161: {
    "label": "NAD 1983 Ontario MNR Lambert",
    "defaultExtent": "{\"xmin\": -35121174.026474886, \"ymin\": -18032568.97884448, \"xmax\": 36981174.026392445, \"ymax\": 43947114.69870345}"
  },
  3162: {
    "label": "NAD 1983 CSRS Ontario MNR Lambert",
    "defaultExtent": "{\"xmin\": -35121174.026474886, \"ymin\": -18032568.97884448, \"xmax\": 36981174.026392445, \"ymax\": 43947114.69870345}"
  },
  3163: {
    "label": "RGNC 1991 93 Lambert New Caledonia",
    "defaultExtent": "{\"xmin\": -38961501.25217785, \"ymin\": -13492464.023404727, \"xmax\": 39761501.252177864, \"ymax\": 27198867.957699224}"
  },
  3164: {
    "label": "ST87 Ouvea UTM 58S",
    "defaultExtent": "{\"xmin\": -5120763.767699414, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699442, \"ymax\": 19606785.53502673}"
  },
  3165: {
    "label": "NEA74 Noumea Lambert",
    "defaultExtent": "{\"xmin\": -39531907.62538149, \"ymin\": -13534444.148914037, \"xmax\": 39531908.945381485, \"ymax\": 26989487.76028048}"
  },
  3166: {
    "label": "NEA74 Noumea Lambert 2",
    "defaultExtent": "{\"xmin\": -39531905.75677799, \"ymin\": -13534437.257669017, \"xmax\": 39531922.382778, \"ymax\": 26989487.918472856}"
  },
  3167: {
    "label": "Kertau RSO RSO Malaya ChSears1922trunc",
    "defaultExtent": "{\"xmin\": -1524042.2214750561, \"ymin\": -1428379.9426094699, \"xmax\": 1604361.2673167882, \"ymax\": 1428146.9164298812}"
  },
  3168: {
    "label": "Kertau RSO RSO Malaya",
    "defaultExtent": "{\"xmin\": -30658785.503110956, \"ymin\": -28734370.780768998, \"xmax\": 32274544.150461994, \"ymax\": 28729683.049973108}"
  },
  3169: {
    "label": "RGNC 1991-93 UTM Zone 57S",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  3170: {
    "label": "RGNC 1991-93 UTM Zone 58S",
    "defaultExtent": "{\"xmin\": -5120763.76772398, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  3171: {
    "label": "RGNC 1991-93 UTM Zone 59S",
    "defaultExtent": "{\"xmin\": -5120763.76772398, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  3172: {
    "label": "IGN53 Mare UTM Zone 59S",
    "defaultExtent": "{\"xmin\": -5121006.178542012, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  3174: {
    "label": "NAD 1983 Great Lakes Basin Albers",
    "defaultExtent": "{\"xmin\": -14291621.530452624, \"ymin\": -8028271.097067971, \"xmax\": 16291621.530397214, \"ymax\": 16742130.630291097}"
  },
  3175: {
    "label": "NAD 1983 Great Lakes and St Lawrence Albers",
    "defaultExtent": "{\"xmin\": -14291621.530410435, \"ymin\": -8028271.0958755985, \"xmax\": 16291621.530399034, \"ymax\": 16742130.630291097}"
  },
  3176: {
    "label": "Indian 1960 TM 106NE",
    "defaultExtent": "{\"xmin\": -5119962.926635592, \"ymin\": -9605642.135990625, \"xmax\": 6119962.926635592, \"ymax\": 9605642.135990622}"
  },
  3177: {
    "label": "LGD2006 Libya TM",
    "defaultExtent": "{\"xmin\": -4603574.086551757, \"ymin\": -9577293.165081846, \"xmax\": 6603574.086551757, \"ymax\": 9577293.165081842}"
  },
  3178: {
    "label": "Greenland 1996 UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3179: {
    "label": "Greenland 1996 UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3180: {
    "label": "Greenland 1996 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3181: {
    "label": "Greenland 1996 UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3182: {
    "label": "Greenland 1996 UTM Zone 22N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3183: {
    "label": "Greenland 1996 UTM Zone 23N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3184: {
    "label": "Greenland 1996 UTM Zone 24N",
    "defaultExtent": "{\"xmin\": -5120763.767723999, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3185: {
    "label": "Greenland 1996 UTM Zone 25N",
    "defaultExtent": "{\"xmin\": -5120763.767723999, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3186: {
    "label": "Greenland 1996 UTM Zone 26N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3187: {
    "label": "Greenland 1996 UTM Zone 27N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3188: {
    "label": "Greenland 1996 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3189: {
    "label": "Greenland 1996 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3190: {
    "label": "LGD2006 Libya TM Zone 5",
    "defaultExtent": "{\"xmin\": -5422974.317960289, \"ymin\": -9610450.878498334, \"xmax\": 5822974.317960289, \"ymax\": 9610450.878498329}"
  },
  3191: {
    "label": "LGD2006 Libya TM Zone 6",
    "defaultExtent": "{\"xmin\": -5422974.317960288, \"ymin\": -9610450.878498334, \"xmax\": 5822974.317960289, \"ymax\": 9610450.878498329}"
  },
  3192: {
    "label": "LGD2006 Libya TM Zone 7",
    "defaultExtent": "{\"xmin\": -5422974.317960289, \"ymin\": -9610450.878498334, \"xmax\": 5822974.31796029, \"ymax\": 9610450.878498329}"
  },
  3193: {
    "label": "LGD2006 Libya TM Zone 8",
    "defaultExtent": "{\"xmin\": -5422974.317960289, \"ymin\": -9610450.878498334, \"xmax\": 5822974.317960289, \"ymax\": 9610450.878498329}"
  },
  3194: {
    "label": "LGD2006 Libya TM Zone 9",
    "defaultExtent": "{\"xmin\": -5422974.317960289, \"ymin\": -9610450.878498334, \"xmax\": 5822974.317960289, \"ymax\": 9610450.878498329}"
  },
  3195: {
    "label": "LGD2006 Libya TM Zone 10",
    "defaultExtent": "{\"xmin\": -5422974.317960289, \"ymin\": -9610450.878498334, \"xmax\": 5822974.317960289, \"ymax\": 9610450.878498329}"
  },
  3196: {
    "label": "LGD2006 Libya TM Zone 11",
    "defaultExtent": "{\"xmin\": -5422974.317960289, \"ymin\": -9610450.878498334, \"xmax\": 5822974.317960289, \"ymax\": 9610450.878498329}"
  },
  3197: {
    "label": "LGD2006 Libya TM Zone 12",
    "defaultExtent": "{\"xmin\": -5422974.317960289, \"ymin\": -9610450.878498334, \"xmax\": 5822974.3179602865, \"ymax\": 9610450.878498329}"
  },
  3198: {
    "label": "LGD2006 Libya TM Zone 13",
    "defaultExtent": "{\"xmin\": -5422974.317960289, \"ymin\": -9610450.878498334, \"xmax\": 5822974.317960289, \"ymax\": 9610450.878498329}"
  },
  3199: {
    "label": "LGD2006 UTM Zone 32N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  3200: {
    "label": "FD 1958 Iraq",
    "defaultExtent": "{\"xmin\": -36802027.2143887, \"ymin\": -27126297.07362132, \"xmax\": 39802027.21438334, \"ymax\": 15653699.898002904}"
  },
  3201: {
    "label": "LGD2006 UTM Zone 33N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  3202: {
    "label": "LGD2006 UTM Zone 34N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  3203: {
    "label": "LGD2006 UTM Zone 35N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  3294: {
    "label": "WGS 1984 USGS Transantarctic Mountains",
    "defaultExtent": "{\"xmin\": -33493972.021237314, \"ymin\": -34775298.52348779, \"xmax\": 33493972.021028128, \"ymax\": 32134386.293330166}"
  },
  3295: {
    "label": "Guam 1963 Yap Islands",
    "defaultExtent": "{\"xmin\": -19901970.79825199, \"ymin\": -19849570.380519096, \"xmax\": 19981970.798326857, \"ymax\": 19969575.03205823}"
  },
  3296: {
    "label": "RGPF UTM Zone 5S",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  3297: {
    "label": "RGPF UTM Zone 6S",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  3298: {
    "label": "RGPF UTM Zone 7S",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724011, \"ymax\": 19606785.534938097}"
  },
  3299: {
    "label": "RGPF UTM Zone 8S",
    "defaultExtent": "{\"xmin\": -5120761.968321789, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  3300: {
    "label": "Estonian Coordinate System of 1992",
    "defaultExtent": "{\"xmin\": -34998942.280954696, \"ymin\": -25103736.80244174, \"xmax\": 35998942.28107235, \"ymax\": 42233689.83946544}"
  },
  3301: {
    "label": "Estonia 1997 Estonia National Grid",
    "defaultExtent": "{\"xmin\": -34998942.280954525, \"ymin\": -25103736.802441552, \"xmax\": 35998942.28107218, \"ymax\": 42233689.839465134}"
  },
  3302: {
    "label": "IGN63 Hiva Oa UTM Zone 7S",
    "defaultExtent": "{\"xmin\": -5121006.178542009, \"ymin\": 392912.9475212451, \"xmax\": 6121006.178542043, \"ymax\": 19607087.052478764}"
  },
  3303: {
    "label": "Fatu Iva 1972 UTM Zone 7S",
    "defaultExtent": "{\"xmin\": -5121006.178542009, \"ymin\": 392912.9475212451, \"xmax\": 6121006.178542043, \"ymax\": 19607087.052478764}"
  },
  3304: {
    "label": "Tahiti 1979 UTM Zone 6S",
    "defaultExtent": "{\"xmin\": -5121006.178542016, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  3305: {
    "label": "Moorea 1987 UTM Zone 6S",
    "defaultExtent": "{\"xmin\": -5121006.178542016, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  3306: {
    "label": "Maupiti 1983 UTM Zone 5S",
    "defaultExtent": "{\"xmin\": -5121006.178542009, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  3307: {
    "label": "Nakhl-e Ghanem UTM Zone 39N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699435, \"ymax\": 9606785.535047516}"
  },
  3308: {
    "label": "GDA 1994 NSW Lambert",
    "defaultExtent": "{\"xmin\": -28840896.09231879, \"ymin\": -11011188.261534095, \"xmax\": 47440896.092392296, \"ymax\": 32915189.085661195}"
  },
  3309: {
    "label": "NAD 1927 California Teale Albers",
    "defaultExtent": "{\"xmin\": -16894578.192938533, \"ymin\": -8581855.074074313, \"xmax\": 16894578.19288322, \"ymax\": 13751594.5734712}"
  },
  3310: {
    "label": "NAD 1983 California Teale Albers",
    "defaultExtent": "{\"xmin\": -16894575.05116589, \"ymin\": -8581876.335913707, \"xmax\": 16894575.05107798, \"ymax\": 13751563.003248025}"
  },
  3311: {
    "label": "NAD 1983 HARN California Teale Albers",
    "defaultExtent": "{\"xmin\": -16894575.05116589, \"ymin\": -8581876.335913707, \"xmax\": 16894575.05107798, \"ymax\": 13751563.003248025}"
  },
  3312: {
    "label": "CSG 1967 UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  3313: {
    "label": "RGFG 1995 UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3315: {
    "label": "Katanga 1955 Katanga TM",
    "defaultExtent": "{\"xmin\": -5622005.258698076, \"ymin\": -8613622.66048565, \"xmax\": 5622005.258698076, \"ymax\": 10603599.76548193}"
  },
  3316: {
    "label": "Kasai 1953 Congo TM Zone 22",
    "defaultExtent": "{\"xmin\": -5122631.403066001, \"ymin\": 390457.65992064774, \"xmax\": 6122631.403066002, \"ymax\": 19609542.340079345}"
  },
  3317: {
    "label": "Kasai 1953 Congo TM Zone 24",
    "defaultExtent": "{\"xmin\": -5122631.403066001, \"ymin\": 390457.65992064774, \"xmax\": 6122631.403066, \"ymax\": 19609542.340079345}"
  },
  3318: {
    "label": "IGC 1962 Congo TM Zone 12",
    "defaultExtent": "{\"xmin\": -5122631.403066001, \"ymin\": 390457.65992064774, \"xmax\": 6122631.403066001, \"ymax\": 19609542.340079345}"
  },
  3319: {
    "label": "IGC 1962 Congo TM Zone 14",
    "defaultExtent": "{\"xmin\": -5122631.403066001, \"ymin\": 390457.65992064774, \"xmax\": 6122631.403066, \"ymax\": 19609542.340079345}"
  },
  3320: {
    "label": "IGC 1962 Congo TM Zone 16",
    "defaultExtent": "{\"xmin\": -5122631.403066001, \"ymin\": 390457.65992064774, \"xmax\": 6122631.403066001, \"ymax\": 19609542.340079345}"
  },
  3321: {
    "label": "IGC 1962 Congo TM Zone 18",
    "defaultExtent": "{\"xmin\": -5122631.403066001, \"ymin\": 390457.65992064774, \"xmax\": 6122631.403066001, \"ymax\": 19609542.340079345}"
  },
  3322: {
    "label": "IGC 1962 Congo TM Zone 20",
    "defaultExtent": "{\"xmin\": -5122631.403066001, \"ymin\": 390457.65992064774, \"xmax\": 6122631.403066001, \"ymax\": 19609542.340079345}"
  },
  3323: {
    "label": "IGC 1962 Congo TM Zone 22",
    "defaultExtent": "{\"xmin\": -5122631.403066001, \"ymin\": 390457.65992064774, \"xmax\": 6122631.403066002, \"ymax\": 19609542.340079345}"
  },
  3324: {
    "label": "IGC 1962 Congo TM Zone 24",
    "defaultExtent": "{\"xmin\": -5122631.403066001, \"ymin\": 390457.65992064774, \"xmax\": 6122631.403066, \"ymax\": 19609542.340079345}"
  },
  3325: {
    "label": "IGC 1962 Congo TM Zone 26",
    "defaultExtent": "{\"xmin\": -5122631.403066001, \"ymin\": 390457.65992064774, \"xmax\": 6122631.403066001, \"ymax\": 19609542.340079345}"
  },
  3326: {
    "label": "IGC 1962 Congo TM Zone 28",
    "defaultExtent": "{\"xmin\": -5122631.403066001, \"ymin\": 390457.65992064774, \"xmax\": 6122631.403066001, \"ymax\": 19609542.340079345}"
  },
  3327: {
    "label": "IGC 1962 Congo TM Zone 30",
    "defaultExtent": "{\"xmin\": -5122631.403066001, \"ymin\": 390457.65992064774, \"xmax\": 6122631.403066, \"ymax\": 19609542.340079345}"
  },
  3328: {
    "label": "Pulkovo 1942 Adj 1958 GUGiK-80",
    "defaultExtent": "{\"xmin\": -30174683.930515345, \"ymin\": -30246970.36392684, \"xmax\": 31174683.92934916, \"ymax\": 31153475.575240657}"
  },
  3329: {
    "label": "Pulkovo 1942 Adj 1958 3 Degree GK Zone 5",
    "defaultExtent": "{\"xmin\": -123107.46752671711, \"ymin\": -9610795.116133098, \"xmax\": 11123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3330: {
    "label": "Pulkovo 1942 Adj 1958 3 Degree GK Zone 6",
    "defaultExtent": "{\"xmin\": 876892.5324732829, \"ymin\": -9610795.116133098, \"xmax\": 12123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3331: {
    "label": "Pulkovo 1942 Adj 1958 3 Degree GK Zone 7",
    "defaultExtent": "{\"xmin\": 1876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 13123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3332: {
    "label": "Pulkovo 1942 Adj 1958 3 Degree GK Zone 8",
    "defaultExtent": "{\"xmin\": 2876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 14123107.467526715, \"ymax\": 9610795.116133094}"
  },
  3333: {
    "label": "Pulkovo 1942 Adj 1958 GK Zone 3",
    "defaultExtent": "{\"xmin\": -2123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 9123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3334: {
    "label": "Pulkovo 1942 Adj 1958 GK Zone 4",
    "defaultExtent": "{\"xmin\": -1123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 10123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3335: {
    "label": "Pulkovo 1942 Adj 1958 GK Zone 5",
    "defaultExtent": "{\"xmin\": -123107.46752671711, \"ymin\": -9610795.116133098, \"xmax\": 11123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3336: {
    "label": "Kerguelen Island 1949 UTM 42S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542035, \"ymax\": 19607087.052499555}"
  },
  3337: {
    "label": "Le Pouce 1934 Mauritius Grid",
    "defaultExtent": "{\"xmin\": -37992237.679318376, \"ymin\": -13239194.600293517, \"xmax\": 39992237.679373585, \"ymax\": 27757411.5403885}"
  },
  3338: {
    "label": "NAD 1983 Alaska Albers",
    "defaultExtent": "{\"xmin\": -13739219.699563079, \"ymin\": -8935188.356798925, \"xmax\": 13739219.70003071, \"ymax\": 17285625.557825744}"
  },
  3339: {
    "label": "IGCB 1955 Congo TM Zone 12",
    "defaultExtent": "{\"xmin\": -5122631.403066001, \"ymin\": 390457.65992064774, \"xmax\": 6122631.403066001, \"ymax\": 19609542.340079345}"
  },
  3340: {
    "label": "IGCB 1955 Congo TM Zone 14",
    "defaultExtent": "{\"xmin\": -5122631.403066001, \"ymin\": 390457.65992064774, \"xmax\": 6122631.403066, \"ymax\": 19609542.340079345}"
  },
  3341: {
    "label": "IGCB 1955 Congo TM Zone 16",
    "defaultExtent": "{\"xmin\": -5122631.403066001, \"ymin\": 390457.65992064774, \"xmax\": 6122631.403066001, \"ymax\": 19609542.340079345}"
  },
  3342: {
    "label": "IGCB 1955 UTM Zone 33S",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": 393340.8109377753, \"xmax\": 6120944.444949269, \"ymax\": 19606659.189062223}"
  },
  3343: {
    "label": "Mauritania 1999 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3344: {
    "label": "Mauritania 1999 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3345: {
    "label": "Mauritania 1999 UTM Zone 30N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3346: {
    "label": "LKS 1994 Lithuania TM",
    "defaultExtent": "{\"xmin\": -5121888.370318582, \"ymin\": -9608707.660916269, \"xmax\": 6121888.370318582, \"ymax\": 9608707.660916263}"
  },
  3347: {
    "label": "NAD 1983 Statistics Canada Lambert",
    "defaultExtent": "{\"xmin\": -28455646.926296383, \"ymin\": -28572483.636137813, \"xmax\": 40855646.92757759, \"ymax\": 39069120.23910857}"
  },
  3348: {
    "label": "NAD 1983 CSRS Statistics Canada Lambert",
    "defaultExtent": "{\"xmin\": -28455646.926296383, \"ymin\": -28572483.636137813, \"xmax\": 40855646.92757759, \"ymax\": 39069120.23910857}"
  },
  3350: {
    "label": "Pulkovo 1942 CS63 Zone C0",
    "defaultExtent": "{\"xmin\": -5373107.467526717, \"ymin\": -9621852.74173036, \"xmax\": 5873107.467526717, \"ymax\": 9599737.490535831}"
  },
  3351: {
    "label": "Pulkovo 1942 CS63 Zone C1",
    "defaultExtent": "{\"xmin\": -4373107.467526717, \"ymin\": -9621852.74173036, \"xmax\": 6873107.467526717, \"ymax\": 9599737.490535831}"
  },
  3352: {
    "label": "Pulkovo 1942 CS63 Zone C2",
    "defaultExtent": "{\"xmin\": -3373107.467526717, \"ymin\": -9621852.74173036, \"xmax\": 7873107.467526717, \"ymax\": 9599737.490535831}"
  },
  3353: {
    "label": "Mhast Onshore UTM Zone 32S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  3354: {
    "label": "Mhast Offshore UTM Zone 32S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  3355: {
    "label": "Egypt Gulf of Suez S-650 TL Red Belt",
    "defaultExtent": "{\"xmin\": -5008067.795197411, \"ymin\": -12120876.291873828, \"xmax\": 6238067.795197411, \"ymax\": 7100578.327608526}"
  },
  3356: {
    "label": "Grand Cayman 1959 UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  3357: {
    "label": "Little Cayman 1961 UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  3358: {
    "label": "NAD 1983 HARN StatePlane North Carolina FIPS 3200",
    "defaultExtent": "{\"xmin\": -37137389.955812365, \"ymin\": -28547205.58121489, \"xmax\": 38356592.39440943, \"ymax\": 18261684.963585444}"
  },
  3360: {
    "label": "NAD 1983 HARN StatePlane South Carolina FIPS 3900",
    "defaultExtent": "{\"xmin\": -37462128.94764636, \"ymin\": -28285530.15549066, \"xmax\": 38681328.949165195, \"ymax\": 16261049.643896274}"
  },
  3361: {
    "label": "NAD 1983 HARN StatePlane South Carolina FIPS 3900 Feet Intl",
    "defaultExtent": "{\"xmin\": -122907247.20356415, \"ymin\": -92800295.78573051, \"xmax\": 126907247.20854722, \"ymax\": 53349900.40648384}"
  },
  3362: {
    "label": "NAD 1983 HARN StatePlane Pennsylvania North FIPS 3701",
    "defaultExtent": "{\"xmin\": -36219260.373335704, \"ymin\": -29439912.0075843, \"xmax\": 37419260.373972096, \"ymax\": 25273022.556772325}"
  },
  3363: {
    "label": "NAD 1983 HARN StatePlane Pennsylvania North FIPS 3701 Feet",
    "defaultExtent": "{\"xmin\": -118829356.74151887, \"ymin\": -96587444.64488281, \"xmax\": 122766356.74360676, \"ymax\": 82916574.83834386}"
  },
  3364: {
    "label": "NAD 1983 HARN StatePlane Pennsylvania South FIPS 3702",
    "defaultExtent": "{\"xmin\": -36336434.103694856, \"ymin\": -29321240.345738437, \"xmax\": 37536434.10343623, \"ymax\": 24259081.311989907}"
  },
  3365: {
    "label": "NAD 1983 HARN StatePlane Pennsylvania South FIPS 3702 Feet",
    "defaultExtent": "{\"xmin\": -119213784.2218722, \"ymin\": -96198102.70097685, \"xmax\": 123150784.2210237, \"ymax\": 79590002.60442021}"
  },
  3367: {
    "label": "IGN Astro 1960 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  3368: {
    "label": "IGN Astro 1960 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  3369: {
    "label": "IGN Astro 1960 UTM Zone 30N",
    "defaultExtent": "{\"xmin\": -5120944.444949271, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  3370: {
    "label": "NAD 1927 UTM Zone 59N",
    "defaultExtent": "{\"xmin\": -5120880.632721122, \"ymin\": -9606689.106299058, \"xmax\": 6120880.632721149, \"ymax\": 9606689.106299067}"
  },
  3371: {
    "label": "NAD 1927 UTM Zone 60N",
    "defaultExtent": "{\"xmin\": -5120880.632721126, \"ymin\": -9606689.106299058, \"xmax\": 6120880.632721149, \"ymax\": 9606689.106299067}"
  },
  3372: {
    "label": "NAD 1983 UTM Zone 59N",
    "defaultExtent": "{\"xmin\": -5120763.76772398, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  3373: {
    "label": "NAD 1983 UTM Zone 60N",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  3374: {
    "label": "FD 1954 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  3375: {
    "label": "GDM 2000 MRSO Peninsular Malaysia",
    "defaultExtent": "{\"xmin\": -30662431.34520472, \"ymin\": -28736564.771662325, \"xmax\": 32278271.87926401, \"ymax\": 28731797.405474924}"
  },
  3376: {
    "label": "GDM 2000 BRSO East Malaysia",
    "defaultExtent": "{\"xmin\": -28973723.118105106, \"ymin\": -31202236.19634591, \"xmax\": 28970903.097957358, \"ymax\": 31198902.354118135}"
  },
  3377: {
    "label": "GDM 2000 State Cassini Johor",
    "defaultExtent": "{\"xmin\": -5024187.647697311, \"ymin\": -9836369.733354071, \"xmax\": 4994566.523697309, \"ymax\": 9384677.817842167}"
  },
  3378: {
    "label": "GDM 2000 State Cassini Negeri Sembilan and Melaka",
    "defaultExtent": "{\"xmin\": -5005703.300697311, \"ymin\": -9911365.170900682, \"xmax\": 5013050.870697312, \"ymax\": 9309682.380295552}"
  },
  3379: {
    "label": "GDM 2000 State Cassini Pahang",
    "defaultExtent": "{\"xmin\": -5016745.313697311, \"ymin\": -10020841.30883058, \"xmax\": 5002008.857697312, \"ymax\": 9200206.242365655}"
  },
  3380: {
    "label": "GDM 2000 State Cassini Selangor",
    "defaultExtent": "{\"xmin\": -5044213.246697311, \"ymin\": -9961492.762379225, \"xmax\": 4974540.924697309, \"ymax\": 9259554.788817009}"
  },
  3381: {
    "label": "GDM 2000 State Cassini Terengganu",
    "defaultExtent": "{\"xmin\": -4989782.840697311, \"ymin\": -10157414.885717198, \"xmax\": 5028971.330697312, \"ymax\": 9063632.665479036}"
  },
  3382: {
    "label": "GDM 2000 State Cassini Pulau Pinang and Seberang Perai",
    "defaultExtent": "{\"xmin\": -5009400.499697311, \"ymin\": -10209959.803278921, \"xmax\": 5009353.671697311, \"ymax\": 9011087.747917313}"
  },
  3383: {
    "label": "GDM 2000 State Cassini Perlis",
    "defaultExtent": "{\"xmin\": -5009377.085697311, \"ymin\": -10270087.015760256, \"xmax\": 5009377.085697309, \"ymax\": 8950960.535435982}"
  },
  3384: {
    "label": "GDM 2000 State Cassini Perak",
    "defaultExtent": "{\"xmin\": -5009378.854697311, \"ymin\": -10014369.287722353, \"xmax\": 5009375.316697309, \"ymax\": 9206678.263473885}"
  },
  3385: {
    "label": "GDM 2000 State Cassini Kelantan",
    "defaultExtent": "{\"xmin\": -4996149.234697311, \"ymin\": -10262217.540246436, \"xmax\": 5022604.936697312, \"ymax\": 8958830.010949796}"
  },
  3386: {
    "label": "KKJ Finland Zone 0",
    "defaultExtent": "{\"xmin\": -5123255.480734327, \"ymin\": -9610931.42506959, \"xmax\": 6123255.480734327, \"ymax\": 9610931.425069584}"
  },
  3387: {
    "label": "KKJ Finland Zone 5",
    "defaultExtent": "{\"xmin\": -123255.48073432688, \"ymin\": -9610931.42506959, \"xmax\": 11123255.480734326, \"ymax\": 9610931.425069584}"
  },
  3388: {
    "label": "Pulkovo 1942 Caspian Sea Mercator",
    "defaultExtent": "{\"xmin\": -14913385.448542837, \"ymin\": -14881659.319812339, \"xmax\": 14913385.448542839, \"ymax\": 14881659.32006445}"
  },
  3389: {
    "label": "Pulkovo 1942 3 Degree GK Zone 60",
    "defaultExtent": "{\"xmin\": 54876892.5324733, \"ymin\": -9610795.116112284, \"xmax\": 66123107.46752673, \"ymax\": 9610795.116112294}"
  },
  3390: {
    "label": "Pulkovo 1995 3 Degree GK Zone 60",
    "defaultExtent": "{\"xmin\": 54876892.5324733, \"ymin\": -9610795.116112284, \"xmax\": 66123107.46752673, \"ymax\": 9610795.116112294}"
  },
  3391: {
    "label": "Karbala 1979 Polservice UTM Zone 37N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  3392: {
    "label": "Karbala 1979 Polservice UTM Zone 38N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  3393: {
    "label": "Karbala 1979 Polservice UTM Zone 39N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949271, \"ymax\": 9606659.189062221}"
  },
  3394: {
    "label": "Nahrwan 1934 Iraq Zone",
    "defaultExtent": "{\"xmin\": -36802027.21553916, \"ymin\": -27126297.074471127, \"xmax\": 39802027.2155338, \"ymax\": 15653699.898438057}"
  },
  3395: {
    "label": "WGS 1984 World Mercator",
    "defaultExtent": "{\"xmin\": -20037507.0671618, \"ymin\": -19994873.9742325, \"xmax\": 20037507.0671618, \"ymax\": 19994873.97423248}"
  },
  3396: {
    "label": "PD/83 GK Zone 3",
    "defaultExtent": "{\"xmin\": -2122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 9122345.712638918, \"ymax\": 9609569.127050688}"
  },
  3397: {
    "label": "PD/83 GK Zone 4",
    "defaultExtent": "{\"xmin\": -1122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 10122345.712638918, \"ymax\": 9609569.127050688}"
  },
  3398: {
    "label": "RD/83 GK Zone 4",
    "defaultExtent": "{\"xmin\": -1122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 10122345.712638918, \"ymax\": 9609569.127050688}"
  },
  3399: {
    "label": "RD/83 GK Zone 5",
    "defaultExtent": "{\"xmin\": -122345.71263891924, \"ymin\": -9609569.127050694, \"xmax\": 11122345.712638918, \"ymax\": 9609569.127050688}"
  },
  3400: {
    "label": "NAD 1983 10TM AEP Forest",
    "defaultExtent": "{\"xmin\": -5118514.562534834, \"ymin\": -9602941.283044143, \"xmax\": 6118514.562534834, \"ymax\": 9602941.283044137}"
  },
  3401: {
    "label": "NAD 1983 10TM AEP Resource",
    "defaultExtent": "{\"xmin\": -5618514.562534834, \"ymin\": -9602941.283044143, \"xmax\": 5618514.562534834, \"ymax\": 9602941.283044137}"
  },
  3402: {
    "label": "NAD 1983 CSRS 10TM AEP Forest",
    "defaultExtent": "{\"xmin\": -5118514.562534834, \"ymin\": -9602941.283044143, \"xmax\": 6118514.562534834, \"ymax\": 9602941.283044137}"
  },
  3403: {
    "label": "NAD 1983 CSRS 10TM AEP Resource",
    "defaultExtent": "{\"xmin\": -5618514.562534834, \"ymin\": -9602941.283044143, \"xmax\": 5618514.562534834, \"ymax\": 9602941.283044137}"
  },
  3404: {
    "label": "NAD 1983 HARN StatePlane North Carolina FIPS 3200 Feet",
    "defaultExtent": "{\"xmin\": -121841586.88002771, \"ymin\": -93658623.64436917, \"xmax\": 125841586.88065827, \"ymax\": 59913544.75136323}"
  },
  3405: {
    "label": "VN 2000 UTM Zone 48N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  3406: {
    "label": "VN 2000 UTM Zone 49N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699433, \"ymax\": 9606785.535047516}"
  },
  3407: {
    "label": "Hong Kong 1963 Grid System",
    "defaultExtent": "{\"xmin\": -16303481.365815863, \"ymin\": -39566167.00032639, \"xmax\": 16567549.205815865, \"ymax\": 23495515.13006197}"
  },
  3408: {
    "label": "NSIDC EASE Grid North",
    "defaultExtent": "{\"xmin\": -12730574.729933135, \"ymin\": -12730574.729933197, \"xmax\": 12730574.729933135, \"ymax\": 12730574.729932941}"
  },
  3409: {
    "label": "NSIDC EASE Grid South",
    "defaultExtent": "{\"xmin\": -12730574.729933135, \"ymin\": -12730574.729932941, \"xmax\": 12730574.729933135, \"ymax\": 12730574.729933197}"
  },
  3410: {
    "label": "NSIDC EASE Grid Global",
    "defaultExtent": "{\"xmin\": -17334192.840157773, \"ymin\": -7329434.575954823, \"xmax\": 17334192.840157773, \"ymax\": 7329434.575954823}"
  },
  3411: {
    "label": "NSIDC Sea Ice Polar Stereographic North",
    "defaultExtent": "{\"xmin\": -30645853.441110253, \"ymin\": -30645853.44096722, \"xmax\": 30645853.4411116, \"ymax\": 30645853.44098543}"
  },
  3412: {
    "label": "NSIDC Sea Ice Polar Stereographic South",
    "defaultExtent": "{\"xmin\": -30645853.441111576, \"ymin\": -30645853.441111114, \"xmax\": 30645853.441111576, \"ymax\": 30645853.441111725}"
  },
  3413: {
    "label": "WGS 1984 NSIDC Sea Ice Polar Stereographic North",
    "defaultExtent": "{\"xmin\": -30645181.3109844, \"ymin\": -30645181.310841367, \"xmax\": 30645181.310985744, \"ymax\": 30645181.310859576}"
  },
  3414: {
    "label": "SVY21 Singapore TM",
    "defaultExtent": "{\"xmin\": -5595011.330888589, \"ymin\": -9723003.679677427, \"xmax\": 5651014.614888589, \"ymax\": 9498255.894247178}"
  },
  3415: {
    "label": "WGS 1972 BE South China Sea Lambert",
    "defaultExtent": "{\"xmin\": -38691613.83071663, \"ymin\": -26316013.446239777, \"xmax\": 39691613.83071664, \"ymax\": 14442648.761399018}"
  },
  3416: {
    "label": "ETRS 1989 Austria Lambert",
    "defaultExtent": "{\"xmin\": -35833358.007659346, \"ymin\": -29980886.783406164, \"xmax\": 36633358.0077081, \"ymax\": 30836212.940290082}"
  },
  3417: {
    "label": "NAD 1983 StatePlane Iowa North FIPS 1401 Feet",
    "defaultExtent": "{\"xmin\": -115418641.90933275, \"ymin\": -93897228.17317939, \"xmax\": 125261141.90572806, \"ymax\": 90202428.6887799}"
  },
  3418: {
    "label": "NAD 1983 StatePlane Iowa South FIPS 1402 Feet",
    "defaultExtent": "{\"xmin\": -119240276.37035538, \"ymin\": -96507236.16323002, \"xmax\": 122521109.70566234, \"ymax\": 82175394.65027604}"
  },
  3419: {
    "label": "NAD 1983 StatePlane Kansas North FIPS 1501 Feet",
    "defaultExtent": "{\"xmin\": -120388811.97430094, \"ymin\": -95722721.31178652, \"xmax\": 123013478.64083055, \"ymax\": 75262524.74795946}"
  },
  3420: {
    "label": "NAD 1983 StatePlane Kansas South FIPS 1502 Feet",
    "defaultExtent": "{\"xmin\": -121025381.58422464, \"ymin\": -93674520.77838725, \"xmax\": 123650048.25059587, \"ymax\": 71736782.13173495}"
  },
  3421: {
    "label": "NAD 1983 StatePlane Nevada East FIPS 2701 Feet",
    "defaultExtent": "{\"xmin\": -17790156.91179308, \"ymin\": -17900693.751107804, \"xmax\": 19102490.245126415, \"ymax\": 45154749.19218288}"
  },
  3422: {
    "label": "NAD 1983 StatePlane Nevada Central FIPS 2702 Feet",
    "defaultExtent": "{\"xmin\": -16805906.91179308, \"ymin\": -24462360.417774465, \"xmax\": 20086740.24512641, \"ymax\": 38593082.525516234}"
  },
  3423: {
    "label": "NAD 1983 StatePlane Nevada West FIPS 2703 Feet",
    "defaultExtent": "{\"xmin\": -15821656.91179308, \"ymin\": -31024027.084441133, \"xmax\": 21070990.24512641, \"ymax\": 32031415.858849563}"
  },
  3424: {
    "label": "NAD 1983 StatePlane New Jersey FIPS 2900 Feet",
    "defaultExtent": "{\"xmin\": -17954198.578459747, \"ymin\": -45633899.523189425, \"xmax\": 18938448.578459747, \"ymax\": 17421543.42010127}"
  },
  3425: {
    "label": "NAD 1983 HARN StatePlane Iowa North FIPS 1401 Feet",
    "defaultExtent": "{\"xmin\": -115418641.90933275, \"ymin\": -93897228.17317939, \"xmax\": 125261141.90572806, \"ymax\": 90202428.6887799}"
  },
  3426: {
    "label": "NAD 1983 HARN StatePlane Iowa South FIPS 1402 Feet",
    "defaultExtent": "{\"xmin\": -119240276.37035538, \"ymin\": -96507236.16323002, \"xmax\": 122521109.70566234, \"ymax\": 82175394.65027604}"
  },
  3427: {
    "label": "NAD 1983 HARN StatePlane Kansas North FIPS 1501 Feet",
    "defaultExtent": "{\"xmin\": -120388811.97430094, \"ymin\": -95722721.31178652, \"xmax\": 123013478.64083055, \"ymax\": 75262524.74795946}"
  },
  3428: {
    "label": "NAD 1983 HARN StatePlane Kansas South FIPS 1502 Feet",
    "defaultExtent": "{\"xmin\": -121025381.58422464, \"ymin\": -93674520.77838725, \"xmax\": 123650048.25059587, \"ymax\": 71736782.13173495}"
  },
  3429: {
    "label": "NAD 1983 HARN StatePlane Nevada East FIPS 2701 Feet",
    "defaultExtent": "{\"xmin\": -17790156.91179308, \"ymin\": -17900693.751107804, \"xmax\": 19102490.245126415, \"ymax\": 45154749.19218288}"
  },
  3430: {
    "label": "NAD 1983 HARN StatePlane Nevada Central FIPS 2702 Feet",
    "defaultExtent": "{\"xmin\": -16805906.91179308, \"ymin\": -24462360.417774465, \"xmax\": 20086740.24512641, \"ymax\": 38593082.525516234}"
  },
  3431: {
    "label": "NAD 1983 HARN StatePlane Nevada West FIPS 2703 Feet",
    "defaultExtent": "{\"xmin\": -15821656.91179308, \"ymin\": -31024027.084441133, \"xmax\": 21070990.24512641, \"ymax\": 32031415.858849563}"
  },
  3432: {
    "label": "NAD 1983 HARN StatePlane New Jersey FIPS 2900 Feet",
    "defaultExtent": "{\"xmin\": -17954198.578459747, \"ymin\": -45633899.523189425, \"xmax\": 18938448.578459747, \"ymax\": 17421543.42010127}"
  },
  3433: {
    "label": "NAD 1983 StatePlane Arkansas North FIPS 0301 Feet",
    "defaultExtent": "{\"xmin\": -122327940.41552109, \"ymin\": -93908065.50320448, \"xmax\": 124952607.08203807, \"ymax\": 61194226.51415184}"
  },
  3434: {
    "label": "NAD 1983 StatePlane Arkansas South FIPS 0302 Feet",
    "defaultExtent": "{\"xmin\": -123346161.29662618, \"ymin\": -91835121.20609988, \"xmax\": 125970827.96286376, \"ymax\": 56063031.79601851}"
  },
  3435: {
    "label": "NAD 1983 StatePlane Illinois East FIPS 1201 Feet",
    "defaultExtent": "{\"xmin\": -17463457.191089388, \"ymin\": -44848360.107802086, \"xmax\": 19431957.191089388, \"ymax\": 18211812.466672473}"
  },
  3436: {
    "label": "NAD 1983 StatePlane Illinois West FIPS 1202 Feet",
    "defaultExtent": "{\"xmin\": -16150499.875589753, \"ymin\": -44846843.140050724, \"xmax\": 20743666.542256415, \"ymax\": 18211196.463497788}"
  },
  3437: {
    "label": "NAD 1983 StatePlane New Hampshire FIPS 2800 Feet",
    "defaultExtent": "{\"xmin\": -17463303.456352763, \"ymin\": -46972768.51075051, \"xmax\": 19431803.456352763, \"ymax\": 16086878.549148068}"
  },
  3438: {
    "label": "NAD 1983 StatePlane Rhode Island FIPS 3800 Feet",
    "defaultExtent": "{\"xmin\": -18119969.76091347, \"ymin\": -46457811.069021836, \"xmax\": 18776136.427580133, \"ymax\": 16603543.913248692}"
  },
  3439: {
    "label": "PDO 1993 UTM Zone 39N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949271, \"ymax\": 9606659.189062221}"
  },
  3440: {
    "label": "PDO 1993 UTM Zone 40N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  3441: {
    "label": "NAD 1983 HARN StatePlane Arkansas North FIPS 0301 Feet",
    "defaultExtent": "{\"xmin\": -122327940.41552109, \"ymin\": -93908065.50320448, \"xmax\": 124952607.08203807, \"ymax\": 61194226.51415184}"
  },
  3442: {
    "label": "NAD 1983 HARN StatePlane Arkansas South FIPS 0302 Feet",
    "defaultExtent": "{\"xmin\": -123346161.29662618, \"ymin\": -91835121.20609988, \"xmax\": 125970827.96286376, \"ymax\": 56063031.79601851}"
  },
  3443: {
    "label": "NAD 1983 HARN StatePlane Illinois East FIPS 1201 Feet",
    "defaultExtent": "{\"xmin\": -17463457.191089388, \"ymin\": -44848360.107802086, \"xmax\": 19431957.191089388, \"ymax\": 18211812.466672473}"
  },
  3444: {
    "label": "NAD 1983 HARN StatePlane Illinois West FIPS 1202 Feet",
    "defaultExtent": "{\"xmin\": -16150499.875589753, \"ymin\": -44846843.140050724, \"xmax\": 20743666.542256415, \"ymax\": 18211196.463497788}"
  },
  3445: {
    "label": "NAD 1983 HARN StatePlane New Hampshire FIPS 2800 Feet",
    "defaultExtent": "{\"xmin\": -17463303.456352763, \"ymin\": -46972768.51075051, \"xmax\": 19431803.456352763, \"ymax\": 16086878.549148068}"
  },
  3446: {
    "label": "NAD 1983 HARN StatePlane Rhode Island FIPS 3800 Feet",
    "defaultExtent": "{\"xmin\": -18119969.76091347, \"ymin\": -46457811.069021836, \"xmax\": 18776136.427580133, \"ymax\": 16603543.913248692}"
  },
  3447: {
    "label": "Belge Lambert 2005",
    "defaultExtent": "{\"xmin\": -35871906.01739936, \"ymin\": -30621335.020402987, \"xmax\": 36172562.00247804, \"ymax\": 32544110.907976475}"
  },
  3448: {
    "label": "JAD 2001 Jamaica Grid",
    "defaultExtent": "{\"xmin\": -37363378.80231665, \"ymin\": -25892795.936673872, \"xmax\": 38863378.80231667, \"ymax\": 15644208.473575054}"
  },
  3449: {
    "label": "JAD 2001 UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  3450: {
    "label": "JAD 2001 UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120763.767699436, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  3451: {
    "label": "NAD 1983 StatePlane Louisiana North FIPS 1701 Feet",
    "defaultExtent": "{\"xmin\": -123013962.92571716, \"ymin\": -92155235.10323042, \"xmax\": 129575629.58559735, \"ymax\": 45511593.25175553}"
  },
  3452: {
    "label": "NAD 1983 StatePlane Louisiana South FIPS 1702 Feet",
    "defaultExtent": "{\"xmin\": -124790707.23730458, \"ymin\": -91255084.9773939, \"xmax\": 131352373.90400414, \"ymax\": 36821548.440887876}"
  },
  3453: {
    "label": "NAD 1983 StatePlane Louisiana Offshore FIPS 1703 Feet",
    "defaultExtent": "{\"xmin\": -126912141.64299116, \"ymin\": -89927367.64357348, \"xmax\": 133473808.30975792, \"ymax\": 39858646.88325691}"
  },
  3455: {
    "label": "NAD 1983 StatePlane South Dakota South FIPS 4002 Feet",
    "defaultExtent": "{\"xmin\": -118047432.57692073, \"ymin\": -97554619.43266883, \"xmax\": 121984432.57649325, \"ymax\": 89874088.49880916}"
  },
  3456: {
    "label": "NAD 1983 HARN StatePlane Louisiana North FIPS 1701 Feet",
    "defaultExtent": "{\"xmin\": -123013962.92571716, \"ymin\": -92155235.10323042, \"xmax\": 129575629.58559735, \"ymax\": 45511593.25175553}"
  },
  3457: {
    "label": "NAD 1983 HARN StatePlane Louisiana South FIPS 1702 Feet",
    "defaultExtent": "{\"xmin\": -124790707.23730458, \"ymin\": -91255084.9773939, \"xmax\": 131352373.90400414, \"ymax\": 36821548.440887876}"
  },
  3458: {
    "label": "NAD 1983 HARN StatePlane South Dakota North FIPS 4001 Feet",
    "defaultExtent": "{\"xmin\": -117605076.22299072, \"ymin\": -98207493.43623132, \"xmax\": 121542076.22279583, \"ymax\": 93980354.82660332}"
  },
  3459: {
    "label": "NAD 1983 HARN StatePlane South Dakota South FIPS 4002 Feet",
    "defaultExtent": "{\"xmin\": -118047432.57692073, \"ymin\": -97554619.43266883, \"xmax\": 121984432.57649325, \"ymax\": 89874088.49880916}"
  },
  3460: {
    "label": "Fiji 1986 Fiji Map Grid",
    "defaultExtent": "{\"xmin\": -3622167.7113288334, \"ymin\": -3729160.7120363945, \"xmax\": 7622167.711328861, \"ymax\": 15489209.983284945}"
  },
  3461: {
    "label": "Dabola 1981 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": -9606659.335852288, \"xmax\": 6120944.475688979, \"ymax\": 9606659.335852282}"
  },
  3462: {
    "label": "Dabola 1981 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": -9606659.335852288, \"xmax\": 6120944.475688979, \"ymax\": 9606659.335852282}"
  },
  3463: {
    "label": "NAD 1983 Maine 2000 Central Zone",
    "defaultExtent": "{\"xmin\": -5122900.5126537075, \"ymin\": -14428609.897370517, \"xmax\": 6122900.5126537075, \"ymax\": 4792265.251185287}"
  },
  3464: {
    "label": "NAD 1983 HARN Maine 2000 Central Zone",
    "defaultExtent": "{\"xmin\": -5122900.5126537075, \"ymin\": -14428609.897370517, \"xmax\": 6122900.5126537075, \"ymax\": 4792265.251185287}"
  },
  3465: {
    "label": "NAD 1983 NSRS2007 StatePlane Alabama East FIPS 0101",
    "defaultExtent": "{\"xmin\": -5422788.052394249, \"ymin\": -12985652.072866369, \"xmax\": 5822788.052394249, \"ymax\": 6234838.650497956}"
  },
  3466: {
    "label": "NAD 1983 NSRS2007 StatePlane Alabama West FIPS 0102",
    "defaultExtent": "{\"xmin\": -5022638.105381638, \"ymin\": -12929881.135173015, \"xmax\": 6222638.105381638, \"ymax\": 6290097.0212693475}"
  },
  3467: {
    "label": "NAD 1983 NSRS2007 Alaska Albers",
    "defaultExtent": "{\"xmin\": -13739219.699563079, \"ymin\": -8935188.356798925, \"xmax\": 13739219.70003071, \"ymax\": 17285625.557825744}"
  },
  3468: {
    "label": "NAD 1983 NSRS2007 StatePlane Alaska 1 FIPS 5001",
    "defaultExtent": "{\"xmin\": -25224974.639177933, \"ymin\": -35282627.68932256, \"xmax\": 37636719.54767623, \"ymax\": 23274307.150670152}"
  },
  3469: {
    "label": "NAD 1983 NSRS2007 StatePlane Alaska 2 FIPS 5002",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  3470: {
    "label": "NAD 1983 NSRS2007 StatePlane Alaska 3 FIPS 5003",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615885, \"ymax\": 3624351.287199251}"
  },
  3471: {
    "label": "NAD 1983 NSRS2007 StatePlane Alaska 4 FIPS 5004",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615885, \"ymax\": 3624351.287199251}"
  },
  3472: {
    "label": "NAD 1983 NSRS2007 StatePlane Alaska 5 FIPS 5005",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615885, \"ymax\": 3624351.287199251}"
  },
  3473: {
    "label": "NAD 1983 NSRS2007 StatePlane Alaska 6 FIPS 5006",
    "defaultExtent": "{\"xmin\": -5122450.671615858, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  3474: {
    "label": "NAD 1983 NSRS2007 StatePlane Alaska 7 FIPS 5007",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  3475: {
    "label": "NAD 1983 NSRS2007 StatePlane Alaska 8 FIPS 5008",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  3476: {
    "label": "NAD 1983 NSRS2007 StatePlane Alaska 9 FIPS 5009",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615886, \"ymax\": 3624351.287199251}"
  },
  3477: {
    "label": "NAD 1983 NSRS2007 StatePlane Alaska 10 FIPS 5010",
    "defaultExtent": "{\"xmin\": -34866236.36030873, \"ymin\": -30817495.97745897, \"xmax\": 36866236.36020292, \"ymax\": 33859948.69122673}"
  },
  3478: {
    "label": "NAD 1983 NSRS2007 StatePlane Arizona Central FIPS 0202",
    "defaultExtent": "{\"xmin\": -5409090.671615872, \"ymin\": -13040299.949871464, \"xmax\": 5835810.671615874, \"ymax\": 6179037.49791844}"
  },
  3479: {
    "label": "NAD 1983 NSRS2007 StatePlane Arizona Central FIPS 0202 Ft Intl",
    "defaultExtent": "{\"xmin\": -17746360.47118068, \"ymin\": -42783136.31847593, \"xmax\": 19146360.47118069, \"ymax\": 20272432.735952888}"
  },
  3480: {
    "label": "NAD 1983 NSRS2007 StatePlane Arizona East FIPS 0201",
    "defaultExtent": "{\"xmin\": -5409090.671615874, \"ymin\": -13040299.949871464, \"xmax\": 5835810.671615874, \"ymax\": 6179037.49791844}"
  },
  3481: {
    "label": "NAD 1983 NSRS2007 StatePlane Arizona East FIPS 0201 Ft Intl",
    "defaultExtent": "{\"xmin\": -17746360.47118069, \"ymin\": -42783136.31847593, \"xmax\": 19146360.47118069, \"ymax\": 20272432.735952888}"
  },
  3482: {
    "label": "NAD 1983 NSRS2007 StatePlane Arizona West FIPS 0203",
    "defaultExtent": "{\"xmin\": -5409278.105381638, \"ymin\": -13040734.670008475, \"xmax\": 5835998.105381638, \"ymax\": 6179243.48643389}"
  },
  3483: {
    "label": "NAD 1983 NSRS2007 StatePlane Arizona West FIPS 0203 Ft Intl",
    "defaultExtent": "{\"xmin\": -17746975.41135708, \"ymin\": -42784562.5656446, \"xmax\": 19146975.41135708, \"ymax\": 20273108.55129229}"
  },
  3484: {
    "label": "NAD 1983 NSRS2007 StatePlane Arkansas North FIPS 0301",
    "defaultExtent": "{\"xmin\": -37285630.80991245, \"ymin\": -28623235.611847952, \"xmax\": 38085630.80986683, \"ymax\": 18652037.545588575}"
  },
  3485: {
    "label": "NAD 1983 NSRS2007 StatePlane Arkansas North FIPS 0301 Ft US",
    "defaultExtent": "{\"xmin\": -122327940.41552109, \"ymin\": -93908065.50320448, \"xmax\": 124952607.08203807, \"ymax\": 61194226.51415184}"
  },
  3486: {
    "label": "NAD 1983 NSRS2007 StatePlane Arkansas South FIPS 0302",
    "defaultExtent": "{\"xmin\": -37595985.155181974, \"ymin\": -27991400.9264211, \"xmax\": 38395985.15505119, \"ymax\": 17088046.267518982}"
  },
  3487: {
    "label": "NAD 1983 NSRS2007 StatePlane Arkansas South FIPS 0302 Ft US",
    "defaultExtent": "{\"xmin\": -123346161.29662618, \"ymin\": -91835121.20609988, \"xmax\": 125970827.96286376, \"ymax\": 56063031.79601851}"
  },
  3488: {
    "label": "NAD 1983 NSRS2007 California Teale Albers",
    "defaultExtent": "{\"xmin\": -16894575.05116589, \"ymin\": -8581876.335913707, \"xmax\": 16894575.05107798, \"ymax\": 13751563.003248025}"
  },
  3489: {
    "label": "NAD 1983 NSRS2007 StatePlane California I FIPS 0401",
    "defaultExtent": "{\"xmin\": -34887054.27121294, \"ymin\": -28830499.630561125, \"xmax\": 38887054.271445766, \"ymax\": 25202733.856392305}"
  },
  3490: {
    "label": "NAD 1983 NSRS2007 StatePlane California I FIPS 0401 Ft US",
    "defaultExtent": "{\"xmin\": -114458610.55480444, \"ymin\": -94588064.20459928, \"xmax\": 127581943.88890164, \"ymax\": 82685969.32718042}"
  },
  3491: {
    "label": "NAD 1983 NSRS2007 StatePlane California II FIPS 0402",
    "defaultExtent": "{\"xmin\": -35116508.911664024, \"ymin\": -28596719.981055927, \"xmax\": 39116508.911764205, \"ymax\": 23310630.66291148}"
  },
  3492: {
    "label": "NAD 1983 NSRS2007 StatePlane California II FIPS 0402 Ft US",
    "defaultExtent": "{\"xmin\": -115211412.98768437, \"ymin\": -93821072.13784765, \"xmax\": 128334746.32134637, \"ymax\": 76478294.09990206}"
  },
  3493: {
    "label": "NAD 1983 NSRS2007 StatePlane California III FIPS 0403",
    "defaultExtent": "{\"xmin\": -35314262.749591045, \"ymin\": -28428487.57731289, \"xmax\": 39314262.749551564, \"ymax\": 21771398.527620755}"
  },
  3494: {
    "label": "NAD 1983 NSRS2007 StatePlane California III FIPS 0403 Ft US",
    "defaultExtent": "{\"xmin\": -115860210.37094994, \"ymin\": -93269129.6599007, \"xmax\": 128983543.70415375, \"ymax\": 71428330.00270241}"
  },
  3495: {
    "label": "NAD 1983 NSRS2007 StatePlane California IV FIPS 0404",
    "defaultExtent": "{\"xmin\": -35498881.48266848, \"ymin\": -28265654.103608675, \"xmax\": 39498881.48289684, \"ymax\": 20437979.07279057}"
  },
  3496: {
    "label": "NAD 1983 NSRS2007 StatePlane California IV FIPS 0404 Ft US",
    "defaultExtent": "{\"xmin\": -116465913.66438816, \"ymin\": -92734900.17158945, \"xmax\": 129589246.99847071, \"ymax\": 67053603.00798039}"
  },
  3497: {
    "label": "NAD 1983 NSRS2007 StatePlane California V FIPS 0405",
    "defaultExtent": "{\"xmin\": -35847160.01764138, \"ymin\": -28005403.878855906, \"xmax\": 39847160.01752812, \"ymax\": 18099234.480987653}"
  },
  3498: {
    "label": "NAD 1983 NSRS2007 StatePlane California V FIPS 0405 Ft US",
    "defaultExtent": "{\"xmin\": -117608557.49121174, \"ymin\": -91881062.55921307, \"xmax\": 130731890.82417348, \"ymax\": 59380571.79304032}"
  },
  3499: {
    "label": "NAD 1983 NSRS2007 StatePlane California VI FIPS 0406",
    "defaultExtent": "{\"xmin\": -36151940.068675034, \"ymin\": -27815848.278992966, \"xmax\": 40151940.06861196, \"ymax\": 16247248.704331301}"
  },
  3500: {
    "label": "NAD 1983 NSRS2007 StatePlane California VI FIPS 0406 Ft US",
    "defaultExtent": "{\"xmin\": -118608490.04197799, \"ymin\": -91259162.22866274, \"xmax\": 131731823.37510438, \"ymax\": 53304515.12412693}"
  },
  3501: {
    "label": "NAD 1983 NSRS2007 StatePlane Colorado Central FIPS 0502",
    "defaultExtent": "{\"xmin\": -36200413.80326969, \"ymin\": -28811315.283514805, \"xmax\": 38029217.46057424, \"ymax\": 23117321.353997074}"
  },
  3502: {
    "label": "NAD 1983 NSRS2007 StatePlane Colorado Central FIPS 0502 Ft US",
    "defaultExtent": "{\"xmin\": -118767524.2862273, \"ymin\": -94525123.55933148, \"xmax\": 124767524.28523397, \"ymax\": 75844078.47557206}"
  },
  3503: {
    "label": "NAD 1983 NSRS2007 StatePlane Colorado North FIPS 0501",
    "defaultExtent": "{\"xmin\": -36047295.1761787, \"ymin\": -29010844.772414874, \"xmax\": 37876098.83435248, \"ymax\": 24329837.178702205}"
  },
  3504: {
    "label": "NAD 1983 NSRS2007 StatePlane Colorado North FIPS 0501 Ft US",
    "defaultExtent": "{\"xmin\": -118265167.59051295, \"ymin\": -95179746.55749778, \"xmax\": 124265167.5923714, \"ymax\": 79822140.81045881}"
  },
  3505: {
    "label": "NAD 1983 NSRS2007 StatePlane Colorado South FIPS 0503",
    "defaultExtent": "{\"xmin\": -36387386.019578025, \"ymin\": -28644971.833411947, \"xmax\": 38216189.6778173, \"ymax\": 21664082.8771381}"
  },
  3506: {
    "label": "NAD 1983 NSRS2007 StatePlane Colorado South FIPS 0503 Ft US",
    "defaultExtent": "{\"xmin\": -119380948.96589889, \"ymin\": -93979378.42345235, \"xmax\": 125380948.96797225, \"ymax\": 71076245.23941058}"
  },
  3507: {
    "label": "NAD 1983 NSRS2007 StatePlane Connecticut FIPS 0600",
    "defaultExtent": "{\"xmin\": -36501665.38080174, \"ymin\": -29365141.16645893, \"xmax\": 37111266.59970077, \"ymax\": 25482156.151964903}"
  },
  3508: {
    "label": "NAD 1983 NSRS2007 StatePlane Connecticut FIPS 0600 Ft US",
    "defaultExtent": "{\"xmin\": -119755880.50351368, \"ymin\": -96342133.97695734, \"xmax\": 121755880.50251827, \"ymax\": 83602707.3085715}"
  },
  3509: {
    "label": "NAD 1983 NSRS2007 StatePlane Delaware FIPS 0700",
    "defaultExtent": "{\"xmin\": -5422984.8578483015, \"ymin\": -13818058.715278085, \"xmax\": 5822984.857848301, \"ymax\": 5403104.752171321}"
  },
  3510: {
    "label": "NAD 1983 NSRS2007 StatePlane Delaware FIPS 0700 Ft US",
    "defaultExtent": "{\"xmin\": -17791909.487790633, \"ymin\": -45334747.63504151, \"xmax\": 19104242.821123965, \"ymax\": 17726686.174415406}"
  },
  3511: {
    "label": "NAD 1983 NSRS2007 StatePlane Florida East FIPS 0901",
    "defaultExtent": "{\"xmin\": -5422682.2074441705, \"ymin\": -12302114.955780467, \"xmax\": 5822682.2074441705, \"ymax\": 6918013.955638945}"
  },
  3512: {
    "label": "NAD 1983 NSRS2007 StatePlane Florida East FIPS 0901 Ft US",
    "defaultExtent": "{\"xmin\": -17790916.542256415, \"ymin\": -40361188.817423075, \"xmax\": 19103249.875589747, \"ymax\": 22696850.786125436}"
  },
  3513: {
    "label": "NAD 1983 NSRS2007 Florida GDL Albers",
    "defaultExtent": "{\"xmin\": -19533690.484215964, \"ymin\": -7509915.322719345, \"xmax\": 20333690.484215967, \"ymax\": 11731295.795514686}"
  },
  3514: {
    "label": "NAD 1983 NSRS2007 StatePlane Florida North FIPS 0903",
    "defaultExtent": "{\"xmin\": -38386184.53222137, \"ymin\": -27874919.325736687, \"xmax\": 39586184.5326483, \"ymax\": 11420627.34512336}"
  },
  3515: {
    "label": "NAD 1983 NSRS2007 StatePlane Florida North FIPS 0903 Ft US",
    "defaultExtent": "{\"xmin\": -125938673.75279626, \"ymin\": -91452964.48785444, \"xmax\": 129875673.75419696, \"ymax\": 37469174.881458886}"
  },
  3516: {
    "label": "NAD 1983 NSRS2007 StatePlane Florida West FIPS 0902",
    "defaultExtent": "{\"xmin\": -5422682.207444169, \"ymin\": -12302114.955780467, \"xmax\": 5822682.2074441705, \"ymax\": 6918013.955638945}"
  },
  3517: {
    "label": "NAD 1983 NSRS2007 StatePlane Florida West FIPS 0902 Ft US",
    "defaultExtent": "{\"xmin\": -17790916.542256407, \"ymin\": -40361188.817423075, \"xmax\": 19103249.875589747, \"ymax\": 22696850.786125436}"
  },
  3518: {
    "label": "NAD 1983 NSRS2007 StatePlane Georgia East FIPS 1001",
    "defaultExtent": "{\"xmin\": -5422450.671615874, \"ymin\": -12929450.11040019, \"xmax\": 5822450.671615874, \"ymax\": 6289887.337389712}"
  },
  3519: {
    "label": "NAD 1983 NSRS2007 StatePlane Georgia East FIPS 1001 Ft US",
    "defaultExtent": "{\"xmin\": -17790156.91179308, \"ymin\": -42419370.90387128, \"xmax\": 19102490.24512641, \"ymax\": 20636072.039419413}"
  },
  3520: {
    "label": "NAD 1983 NSRS2007 StatePlane Georgia West FIPS 1002",
    "defaultExtent": "{\"xmin\": -4922450.671615872, \"ymin\": -12929450.11040019, \"xmax\": 6322450.6716158725, \"ymax\": 6289887.337389712}"
  },
  3521: {
    "label": "NAD 1983 NSRS2007 StatePlane Georgia West FIPS 1002 Ft US",
    "defaultExtent": "{\"xmin\": -16149740.245126404, \"ymin\": -42419370.90387128, \"xmax\": 20742906.91179307, \"ymax\": 20636072.039419413}"
  },
  3522: {
    "label": "NAD 1983 NSRS2007 StatePlane Idaho Central FIPS 1102",
    "defaultExtent": "{\"xmin\": -5122717.024861958, \"ymin\": -14224494.619744752, \"xmax\": 6122717.024861961, \"ymax\": 4995753.308761801}"
  },
  3523: {
    "label": "NAD 1983 NSRS2007 StatePlane Idaho Central FIPS 1102 Ft US",
    "defaultExtent": "{\"xmin\": -16806780.77240127, \"ymin\": -46668196.09827923, \"xmax\": 20087614.105734613, \"ymax\": 16390233.980496006}"
  },
  3524: {
    "label": "NAD 1983 NSRS2007 StatePlane Idaho East FIPS 1101",
    "defaultExtent": "{\"xmin\": -5422717.024861958, \"ymin\": -14224494.619744752, \"xmax\": 5822717.024861958, \"ymax\": 4995753.308761801}"
  },
  3525: {
    "label": "NAD 1983 NSRS2007 StatePlane Idaho East FIPS 1101 Ft US",
    "defaultExtent": "{\"xmin\": -17791030.77240127, \"ymin\": -46668196.09827923, \"xmax\": 19103364.105734605, \"ymax\": 16390233.980496006}"
  },
  3526: {
    "label": "NAD 1983 NSRS2007 StatePlane Idaho West FIPS 1103",
    "defaultExtent": "{\"xmin\": -4822638.105381638, \"ymin\": -14224294.967206975, \"xmax\": 6422638.105381638, \"ymax\": 4995683.189235387}"
  },
  3527: {
    "label": "NAD 1983 NSRS2007 StatePlane Idaho West FIPS 1103 Ft US",
    "defaultExtent": "{\"xmin\": -15822271.850739589, \"ymin\": -46667541.07157821, \"xmax\": 21071605.18407292, \"ymax\": 16390003.930016432}"
  },
  3528: {
    "label": "NAD 1983 NSRS2007 StatePlane Illinois East FIPS 1201",
    "defaultExtent": "{\"xmin\": -5322872.397588842, \"ymin\": -13669807.500473078, \"xmax\": 5922872.397588842, \"ymax\": 5550971.541784854}"
  },
  3529: {
    "label": "NAD 1983 NSRS2007 StatePlane Illinois East FIPS 1201 Ft US",
    "defaultExtent": "{\"xmin\": -17463457.191089388, \"ymin\": -44848360.107802086, \"xmax\": 19431957.191089388, \"ymax\": 18211812.466672473}"
  },
  3530: {
    "label": "NAD 1983 NSRS2007 StatePlane Illinois West FIPS 1202",
    "defaultExtent": "{\"xmin\": -4922682.207444172, \"ymin\": -13669345.127777718, \"xmax\": 6322682.2074441705, \"ymax\": 5550783.783641693}"
  },
  3531: {
    "label": "NAD 1983 NSRS2007 StatePlane Illinois West FIPS 1202 Ft US",
    "defaultExtent": "{\"xmin\": -16150499.875589753, \"ymin\": -44846843.140050724, \"xmax\": 20743666.542256415, \"ymax\": 18211196.463497788}"
  },
  3532: {
    "label": "NAD 1983 NSRS2007 StatePlane Indiana East FIPS 1301",
    "defaultExtent": "{\"xmin\": -5522825.539147399, \"ymin\": -13512173.175005069, \"xmax\": 5722825.539147401, \"ymax\": 5708445.690089753}"
  },
  3533: {
    "label": "NAD 1983 NSRS2007 StatePlane Indiana East FIPS 1301 Ft US",
    "defaultExtent": "{\"xmin\": -18119470.123019423, \"ymin\": -44331188.15832912, \"xmax\": 18775636.789686095, \"ymax\": 18728458.901569463}"
  },
  3534: {
    "label": "NAD 1983 NSRS2007 StatePlane Indiana West FIPS 1302",
    "defaultExtent": "{\"xmin\": -4722825.539147401, \"ymin\": -13512173.175005067, \"xmax\": 6522825.539147401, \"ymax\": 5708445.690089753}"
  },
  3535: {
    "label": "NAD 1983 NSRS2007 StatePlane Indiana West FIPS 1302 Ft US",
    "defaultExtent": "{\"xmin\": -15494803.456352763, \"ymin\": -44331188.15832912, \"xmax\": 21400303.456352763, \"ymax\": 18728458.901569463}"
  },
  3536: {
    "label": "NAD 1983 NSRS2007 StatePlane Iowa North FIPS 1401",
    "defaultExtent": "{\"xmin\": -35179672.413309455, \"ymin\": -28619932.387049854, \"xmax\": 38179672.41221074, \"ymax\": 27493755.251850624}"
  },
  3537: {
    "label": "NAD 1983 NSRS2007 StatePlane Iowa North FIPS 1401 Ft US",
    "defaultExtent": "{\"xmin\": -115418641.90933275, \"ymin\": -93897228.17317939, \"xmax\": 125261141.90572806, \"ymax\": 90202428.6887799}"
  },
  3538: {
    "label": "NAD 1983 NSRS2007 StatePlane Iowa South FIPS 1402",
    "defaultExtent": "{\"xmin\": -36344508.92670218, \"ymin\": -29415464.41348134, \"xmax\": 37344508.92730374, \"ymax\": 25047110.383624904}"
  },
  3539: {
    "label": "NAD 1983 NSRS2007 StatePlane Iowa South FIPS 1402 Ft US",
    "defaultExtent": "{\"xmin\": -119240276.37035538, \"ymin\": -96507236.16323002, \"xmax\": 122521109.70566234, \"ymax\": 82175394.65027604}"
  },
  3540: {
    "label": "NAD 1983 NSRS2007 StatePlane Kansas North FIPS 1501",
    "defaultExtent": "{\"xmin\": -36694583.27893349, \"ymin\": -29176343.808520153, \"xmax\": 37494583.27889171, \"ymax\": 22940063.423304893}"
  },
  3541: {
    "label": "NAD 1983 NSRS2007 StatePlane Kansas North FIPS 1501 Ft US",
    "defaultExtent": "{\"xmin\": -120388811.97430094, \"ymin\": -95722721.31178652, \"xmax\": 123013478.64083055, \"ymax\": 75262524.74795946}"
  },
  3542: {
    "label": "NAD 1983 NSRS2007 StatePlane Kansas South FIPS 1502",
    "defaultExtent": "{\"xmin\": -36888610.08409184, \"ymin\": -28552051.03735451, \"xmax\": 37688610.084001794, \"ymax\": 21865414.924582668}"
  },
  3543: {
    "label": "NAD 1983 NSRS2007 StatePlane Kansas South FIPS 1502 Ft US",
    "defaultExtent": "{\"xmin\": -121025381.58422464, \"ymin\": -93674520.77838725, \"xmax\": 123650048.25059587, \"ymax\": 71736782.13173495}"
  },
  3544: {
    "label": "NAD 1983 NSRS2007 StatePlane Kentucky North FIPS 1601",
    "defaultExtent": "{\"xmin\": -36706540.6144563, \"ymin\": -29061234.143652882, \"xmax\": 37706540.61484275, \"ymax\": 22066321.05409854}"
  },
  3545: {
    "label": "NAD 1983 NSRS2007 StatePlane Kentucky North FIPS 1601 Ft US",
    "defaultExtent": "{\"xmin\": -120428041.99926203, \"ymin\": -95345065.68630116, \"xmax\": 123708875.33386324, \"ymax\": 72395921.65832162}"
  },
  3546: {
    "label": "NAD 1983 NSRS2007 StatePlane Kentucky FIPS 1600",
    "defaultExtent": "{\"xmin\": -35794088.47457762, \"ymin\": -27913214.15795621, \"xmax\": 38794088.4749888, \"ymax\": 22449415.817500036}"
  },
  3547: {
    "label": "NAD 1983 NSRS2007 StatePlane Kentucky FIPS 1600 Ft US",
    "defaultExtent": "{\"xmin\": -117434438.60367672, \"ymin\": -91578603.44989465, \"xmax\": 127276938.60502575, \"ymax\": 73652791.72791469}"
  },
  3548: {
    "label": "NAD 1983 NSRS2007 StatePlane Kentucky South FIPS 1602",
    "defaultExtent": "{\"xmin\": -36881000.62027418, \"ymin\": -28397921.164930366, \"xmax\": 37881000.620047584, \"ymax\": 21253778.418876573}"
  },
  3549: {
    "label": "NAD 1983 NSRS2007 StatePlane Kentucky South FIPS 1602 Ft US",
    "defaultExtent": "{\"xmin\": -121000416.20168228, \"ymin\": -93168846.35527492, \"xmax\": 124281249.53427221, \"ymax\": 69730104.69592905}"
  },
  3550: {
    "label": "NAD 1983 NSRS2007 StatePlane Louisiana North FIPS 1701",
    "defaultExtent": "{\"xmin\": -37494730.88922037, \"ymin\": -28088971.837408308, \"xmax\": 39494730.88715185, \"ymax\": 13871961.36705782}"
  },
  3551: {
    "label": "NAD 1983 NSRS2007 StatePlane Louisiana North FIPS 1701 Ft US",
    "defaultExtent": "{\"xmin\": -123013962.92571716, \"ymin\": -92155235.10323042, \"xmax\": 129575629.58559735, \"ymax\": 45511593.25175553}"
  },
  3552: {
    "label": "NAD 1983 NSRS2007 StatePlane Louisiana South FIPS 1702",
    "defaultExtent": "{\"xmin\": -38036283.63849772, \"ymin\": -27814605.530320723, \"xmax\": 40036283.638507746, \"ymax\": 11223230.411243448}"
  },
  3553: {
    "label": "NAD 1983 NSRS2007 StatePlane Louisiana South FIPS 1702 Ft US",
    "defaultExtent": "{\"xmin\": -124790707.23730458, \"ymin\": -91255084.9773939, \"xmax\": 131352373.90400414, \"ymax\": 36821548.440887876}"
  },
  3554: {
    "label": "NAD 1983 NSRS2007 Maine 2000 Central Zone",
    "defaultExtent": "{\"xmin\": -5122900.5126537075, \"ymin\": -14428609.897370517, \"xmax\": 6122900.5126537075, \"ymax\": 4792265.251185287}"
  },
  3555: {
    "label": "NAD 1983 NSRS2007 Maine 2000 East Zone",
    "defaultExtent": "{\"xmin\": -4922900.5126537075, \"ymin\": -14465644.401938386, \"xmax\": 6322900.5126537075, \"ymax\": 4755230.746617417}"
  },
  3556: {
    "label": "NAD 1983 NSRS2007 Maine 2000 West Zone",
    "defaultExtent": "{\"xmin\": -5322900.5126537075, \"ymin\": -14354547.388632273, \"xmax\": 5922900.5126537075, \"ymax\": 4866327.759923531}"
  },
  3557: {
    "label": "NAD 1983 NSRS2007 StatePlane Maine East FIPS 1801",
    "defaultExtent": "{\"xmin\": -5322450.671615874, \"ymin\": -14445971.085374892, \"xmax\": 5922450.671615874, \"ymax\": 4773366.36241501}"
  },
  3558: {
    "label": "NAD 1983 NSRS2007 StatePlane Maine West FIPS 1802",
    "defaultExtent": "{\"xmin\": -4722825.539147399, \"ymin\": -14354355.990839133, \"xmax\": 6522825.539147401, \"ymax\": 4866262.874255687}"
  },
  3559: {
    "label": "NAD 1983 NSRS2007 StatePlane Maryland FIPS 1900",
    "defaultExtent": "{\"xmin\": -36747007.26427332, \"ymin\": -29091384.527313504, \"xmax\": 37547007.26462395, \"ymax\": 22554678.123978678}"
  },
  3560: {
    "label": "NAD 1983 StatePlane Utah North FIPS 4301 Feet",
    "defaultExtent": "{\"xmin\": -119221659.28963818, \"ymin\": -93352773.84609784, \"xmax\": 122502492.92669998, \"ymax\": 85520465.96418004}"
  },
  3561: {
    "label": "Old Hawaiian StatePlane Hawaii 1 FIPS 5101",
    "defaultExtent": "{\"xmin\": -17947937.011572435, \"ymin\": -38363565.692405395, \"xmax\": 18947937.011572514, \"ymax\": 24695448.40267545}"
  },
  3562: {
    "label": "Old Hawaiian StatePlane Hawaii 2 FIPS 5102",
    "defaultExtent": "{\"xmin\": -17947937.011744253, \"ymin\": -38908297.90237463, \"xmax\": 18947937.011400703, \"ymax\": 24150716.19272111}"
  },
  3563: {
    "label": "Old Hawaiian StatePlane Hawaii 3 FIPS 5103",
    "defaultExtent": "{\"xmin\": -17948367.47778491, \"ymin\": -39211882.29142871, \"xmax\": 18948367.47778499, \"ymax\": 23848603.229695223}"
  },
  3564: {
    "label": "Old Hawaiian StatePlane Hawaii 4 FIPS 5104",
    "defaultExtent": "{\"xmin\": -17948367.477784883, \"ymin\": -39454045.134916164, \"xmax\": 18948367.47778499, \"ymax\": 23606440.386207767}"
  },
  3565: {
    "label": "Old Hawaiian StatePlane Hawaii 5 FIPS 5105",
    "defaultExtent": "{\"xmin\": -17948551.963476367, \"ymin\": -39393896.52843084, \"xmax\": 18948551.963132814, \"ymax\": 23667219.603869304}"
  },
  3566: {
    "label": "NAD 1983 StatePlane Utah Central FIPS 4302 Feet",
    "defaultExtent": "{\"xmin\": -119796545.77940893, \"ymin\": -89211828.05201131, \"xmax\": 123077379.11484808, \"ymax\": 84130107.87985836}"
  },
  3567: {
    "label": "NAD 1983 StatePlane Utah South FIPS 4303 Feet",
    "defaultExtent": "{\"xmin\": -120766635.35476631, \"ymin\": -85132401.4014197, \"xmax\": 124047468.68715994, \"ymax\": 79709386.16746534}"
  },
  3568: {
    "label": "NAD 1983 HARN StatePlane Utah North FIPS 4301 Feet",
    "defaultExtent": "{\"xmin\": -119221659.28963818, \"ymin\": -93352773.84609784, \"xmax\": 122502492.92669998, \"ymax\": 85520465.96418004}"
  },
  3569: {
    "label": "NAD 1983 HARN StatePlane Utah Central FIPS 4302 Feet",
    "defaultExtent": "{\"xmin\": -119796545.77940893, \"ymin\": -89211828.05201131, \"xmax\": 123077379.11484808, \"ymax\": 84130107.87985836}"
  },
  3570: {
    "label": "NAD 1983 HARN StatePlane Utah South FIPS 4303 Feet",
    "defaultExtent": "{\"xmin\": -120766635.35476631, \"ymin\": -85132401.4014197, \"xmax\": 124047468.68715994, \"ymax\": 79709386.16746534}"
  },
  3571: {
    "label": "WGS 1984 North Pole LAEA Bering Sea",
    "defaultExtent": "{\"xmin\": -12730027.198090494, \"ymin\": -12730027.1980903, \"xmax\": 12730027.198090494, \"ymax\": 12730027.198090555}"
  },
  3572: {
    "label": "WGS 1984 North Pole LAEA Alaska",
    "defaultExtent": "{\"xmin\": -12730027.19787046, \"ymin\": -12730027.198074762, \"xmax\": 12730027.197997602, \"ymax\": 12730027.198064448}"
  },
  3573: {
    "label": "WGS 1984 North Pole LAEA Canada",
    "defaultExtent": "{\"xmin\": -12730027.197103972, \"ymin\": -12730027.19794325, \"xmax\": 12730027.197072018, \"ymax\": 12730027.197979283}"
  },
  3574: {
    "label": "WGS 1984 North Pole LAEA Atlantic",
    "defaultExtent": "{\"xmin\": -12730027.198085813, \"ymin\": -12730027.198087694, \"xmax\": 12730027.198083362, \"ymax\": 12730027.197360521}"
  },
  3575: {
    "label": "WGS 1984 North Pole LAEA Europe",
    "defaultExtent": "{\"xmin\": -12730027.197953643, \"ymin\": -12730027.198081324, \"xmax\": 12730027.197965195, \"ymax\": 12730027.198086863}"
  },
  3576: {
    "label": "WGS 1984 North Pole LAEA Russia",
    "defaultExtent": "{\"xmin\": -12730027.198090555, \"ymin\": -12730027.198090494, \"xmax\": 12730027.1980903, \"ymax\": 12730027.198090494}"
  },
  3577: {
    "label": "GDA 1994 Australia Albers",
    "defaultExtent": "{\"xmin\": -20204331.447122287, \"ymin\": -14220219.798081264, \"xmax\": 20204331.44712229, \"ymax\": 5019748.834878035}"
  },
  3578: {
    "label": "NAD 1983 Yukon Albers",
    "defaultExtent": "{\"xmin\": -12907460.665778939, \"ymin\": -9252393.584543366, \"xmax\": 13907460.665092671, \"ymax\": 16953579.60047859}"
  },
  3579: {
    "label": "NAD 1983 CSRS Yukon Albers",
    "defaultExtent": "{\"xmin\": -12907460.665778939, \"ymin\": -9252393.584543366, \"xmax\": 13907460.665092671, \"ymax\": 16953579.60047859}"
  },
  3580: {
    "label": "NAD 1983 Northwest Territories Lambert",
    "defaultExtent": "{\"xmin\": -34916800.79924788, \"ymin\": -23288094.65465815, \"xmax\": 34916800.80346145, \"ymax\": 45287537.77704118}"
  },
  3581: {
    "label": "NAD 1983 CSRS Northwest Territories Lambert",
    "defaultExtent": "{\"xmin\": -34916800.79924788, \"ymin\": -23288094.65465815, \"xmax\": 34916800.80346145, \"ymax\": 45287537.77704118}"
  },
  3582: {
    "label": "NAD 1983 NSRS2007 StatePlane Maryland FIPS 1900 Ft US",
    "defaultExtent": "{\"xmin\": -120560806.33287005, \"ymin\": -95443984.07002771, \"xmax\": 123185473.00068705, \"ymax\": 73998139.81175338}"
  },
  3583: {
    "label": "NAD 1983 NSRS2007 StatePlane Massachusetts Island FIPS 2002",
    "defaultExtent": "{\"xmin\": -36324363.173723884, \"ymin\": -29532372.723926485, \"xmax\": 37324363.17347703, \"ymax\": 25143058.28571613}"
  },
  3584: {
    "label": "NAD 1983 NSRS2007 StatePlane Massachusetts Isl FIPS 2002 FtUS",
    "defaultExtent": "{\"xmin\": -119174181.5124591, \"ymin\": -96890792.84508213, \"xmax\": 122455014.84498255, \"ymax\": 82490183.72572033}"
  },
  3585: {
    "label": "NAD 1983 NSRS2007 StatePlane Massachusetts Mainland FIPS 2001",
    "defaultExtent": "{\"xmin\": -36530705.74194933, \"ymin\": -28803004.001248993, \"xmax\": 36930705.741942905, \"ymax\": 26796569.38877064}"
  },
  3586: {
    "label": "NAD 1983 NSRS2007 StatePlane Massachusetts Mnld FIPS 2001 FtUS",
    "defaultExtent": "{\"xmin\": -119851157.08837874, \"ymin\": -94497855.62743106, \"xmax\": 121163490.421691, \"ymax\": 87915078.06965832}"
  },
  3587: {
    "label": "NAD 1983 NSRS2007 StatePlane Michigan Central FIPS 2112",
    "defaultExtent": "{\"xmin\": -30455190.630660422, \"ymin\": -29873530.398834094, \"xmax\": 42455190.63111069, \"ymax\": 28598773.969079223}"
  },
  3588: {
    "label": "NAD 1983 NSRS2007 StatePlane Michigan Central FIPS 2112 Ft Intl",
    "defaultExtent": "{\"xmin\": -99918604.4313006, \"ymin\": -98010270.3373822, \"xmax\": 139288683.17293534, \"ymax\": 93827998.58621791}"
  },
  3589: {
    "label": "NAD 1983 NSRS2007 StatePlane Michigan North FIPS 2111",
    "defaultExtent": "{\"xmin\": -28338008.16261086, \"ymin\": -30062764.319301587, \"xmax\": 44338008.16271662, \"ymax\": 29682471.10421796}"
  },
  3590: {
    "label": "NAD 1983 NSRS2007 StatePlane Michigan North FIPS 2111 Ft Intl",
    "defaultExtent": "{\"xmin\": -92972467.72510123, \"ymin\": -98631116.53314169, \"xmax\": 145465906.0456582, \"ymax\": 97383435.38129252}"
  },
  3591: {
    "label": "NAD 1983 NSRS2007 Michigan GeoRef Meters",
    "defaultExtent": "{\"xmin\": -28809902.8075835, \"ymin\": -30359666.086749792, \"xmax\": 35544410.36686367, \"ymax\": 20812653.70437237}"
  },
  3592: {
    "label": "NAD 1983 NSRS2007 StatePlane Michigan South FIPS 2113",
    "defaultExtent": "{\"xmin\": -32655721.616859354, \"ymin\": -29624554.326154392, \"xmax\": 40655721.616422996, \"ymax\": 26723713.97971105}"
  },
  3593: {
    "label": "NAD 1983 NSRS2007 StatePlane Michigan South FIPS 2113 Ft Intl",
    "defaultExtent": "{\"xmin\": -107138194.28103462, \"ymin\": -97193419.70523094, \"xmax\": 133384913.43970798, \"ymax\": 87676226.96755593}"
  },
  3594: {
    "label": "NAD 1983 NSRS2007 StatePlane Minnesota Central FIPS 2202",
    "defaultExtent": "{\"xmin\": -35534345.78057431, \"ymin\": -29988111.83685971, \"xmax\": 37134345.780168205, \"ymax\": 29803284.527532667}"
  },
  3595: {
    "label": "NAD 1983 NSRS2007 StatePlane Minnesota North FIPS 2201",
    "defaultExtent": "{\"xmin\": -35413952.21883893, \"ymin\": -30179238.744515866, \"xmax\": 37013952.21884459, \"ymax\": 30925833.663218413}"
  },
  3596: {
    "label": "NAD 1983 NSRS2007 StatePlane Minnesota South FIPS 2203",
    "defaultExtent": "{\"xmin\": -35696176.20197969, \"ymin\": -29729049.350341942, \"xmax\": 37296176.20161064, \"ymax\": 28305006.49768952}"
  },
  3597: {
    "label": "NAD 1983 NSRS2007 StatePlane Mississippi East FIPS 2301",
    "defaultExtent": "{\"xmin\": -5322731.822264518, \"ymin\": -12874675.296950985, \"xmax\": 5922731.8222645195, \"ymax\": 6345623.2138176095}"
  },
  3598: {
    "label": "NAD 1983 NSRS2007 StatePlane Mississippi East FIPS 2301 Ft US",
    "defaultExtent": "{\"xmin\": -17462995.9868795, \"ymin\": -42239663.87008002, \"xmax\": 19431495.98687951, \"ymax\": 20818932.160666604}"
  },
  3599: {
    "label": "NAD 1983 NSRS2007 StatePlane Mississippi West FIPS 2302",
    "defaultExtent": "{\"xmin\": -4922731.8222645195, \"ymin\": -12874675.296950981, \"xmax\": 6322731.8222645195, \"ymax\": 6345623.2138176095}"
  },
  3600: {
    "label": "NAD 1983 NSRS2007 StatePlane Mississippi West FIPS 2302 Ft US",
    "defaultExtent": "{\"xmin\": -16150662.653546175, \"ymin\": -42239663.87008, \"xmax\": 20743829.32021284, \"ymax\": 20818932.160666604}"
  },
  3601: {
    "label": "NAD 1983 NSRS2007 StatePlane Missouri Central FIPS 2402",
    "defaultExtent": "{\"xmin\": -5122638.105381638, \"ymin\": -13576774.369054267, \"xmax\": 6122638.105381639, \"ymax\": 5643203.787388095}"
  },
  3602: {
    "label": "NAD 1983 NSRS2007 StatePlane Missouri East FIPS 2401",
    "defaultExtent": "{\"xmin\": -5372638.10538164, \"ymin\": -13576774.369054265, \"xmax\": 5872638.105381638, \"ymax\": 5643203.787388095}"
  },
  3603: {
    "label": "NAD 1983 NSRS2007 StatePlane Missouri West FIPS 2403",
    "defaultExtent": "{\"xmin\": -4772682.2074441705, \"ymin\": -13613865.018881941, \"xmax\": 6472682.2074441705, \"ymax\": 5606263.89253747}"
  },
  3604: {
    "label": "NAD 1983 NSRS2007 StatePlane Montana FIPS 2500",
    "defaultExtent": "{\"xmin\": -35665865.835127994, \"ymin\": -30006746.26947549, \"xmax\": 36865865.835221216, \"ymax\": 30370447.115839537}"
  },
  3605: {
    "label": "NAD 1983 NSRS2007 StatePlane Montana FIPS 2500 Ft Intl",
    "defaultExtent": "{\"xmin\": -117013995.52207346, \"ymin\": -98447330.28043139, \"xmax\": 120951003.39639506, \"ymax\": 99640574.5270326}"
  },
  3606: {
    "label": "NAD 1983 NSRS2007 StatePlane Nebraska FIPS 2600",
    "defaultExtent": "{\"xmin\": -36300933.080799475, \"ymin\": -29399402.24687034, \"xmax\": 37300933.080734946, \"ymax\": 25403103.617317706}"
  },
  3607: {
    "label": "NAD 1983 NSRS2007 StatePlane Nevada Central FIPS 2702",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": -7456142.367622394, \"xmax\": 6122450.671615874, \"ymax\": 11763195.080167508}"
  },
  3608: {
    "label": "NAD 1983 NSRS2007 StatePlane Nevada Central FIPS 2702 Ft US",
    "defaultExtent": "{\"xmin\": -16805906.91179308, \"ymin\": -24462360.417774465, \"xmax\": 20086740.24512641, \"ymax\": 38593082.525516234}"
  },
  3609: {
    "label": "NAD 1983 NSRS2007 StatePlane Nevada East FIPS 2701",
    "defaultExtent": "{\"xmin\": -5422450.671615874, \"ymin\": -5456142.367622394, \"xmax\": 5822450.671615875, \"ymax\": 13763195.080167508}"
  },
  3610: {
    "label": "NAD 1983 NSRS2007 StatePlane Nevada East FIPS 2701 Ft US",
    "defaultExtent": "{\"xmin\": -17790156.91179308, \"ymin\": -17900693.751107804, \"xmax\": 19102490.245126415, \"ymax\": 45154749.19218288}"
  },
  3611: {
    "label": "NAD 1983 NSRS2007 StatePlane Nevada West FIPS 2703",
    "defaultExtent": "{\"xmin\": -4822450.671615874, \"ymin\": -9456142.367622394, \"xmax\": 6422450.671615874, \"ymax\": 9763195.080167508}"
  },
  3612: {
    "label": "NAD 1983 NSRS2007 StatePlane Nevada West FIPS 2703 Ft US",
    "defaultExtent": "{\"xmin\": -15821656.91179308, \"ymin\": -31024027.084441133, \"xmax\": 21070990.24512641, \"ymax\": 32031415.858849563}"
  },
  3613: {
    "label": "NAD 1983 NSRS2007 StatePlane New Hampshire FIPS 2800",
    "defaultExtent": "{\"xmin\": -5322825.539147401, \"ymin\": -14317328.47673371, \"xmax\": 5922825.539147401, \"ymax\": 4903290.3883611085}"
  },
  3614: {
    "label": "NAD 1983 NSRS2007 StatePlane New Hampshire FIPS 2800 Ft US",
    "defaultExtent": "{\"xmin\": -17463303.456352763, \"ymin\": -46972768.51075051, \"xmax\": 19431803.456352763, \"ymax\": 16086878.549148068}"
  },
  3615: {
    "label": "NAD 1983 NSRS2007 StatePlane New Jersey FIPS 2900",
    "defaultExtent": "{\"xmin\": -5472450.671615874, \"ymin\": -13909240.393148925, \"xmax\": 5772450.671615874, \"ymax\": 5310097.054640977}"
  },
  3616: {
    "label": "NAD 1983 NSRS2007 StatePlane New Jersey FIPS 2900 Ft US",
    "defaultExtent": "{\"xmin\": -17954198.578459747, \"ymin\": -45633899.523189425, \"xmax\": 18938448.578459747, \"ymax\": 17421543.42010127}"
  },
  3617: {
    "label": "NAD 1983 NSRS2007 StatePlane New Mexico Central FIPS 3002",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": -13040299.949871464, \"xmax\": 6122450.671615874, \"ymax\": 6179037.49791844}"
  },
  3618: {
    "label": "NAD 1983 NSRS2007 StatePlane New Mexico Central FIPS 3002 Ft US",
    "defaultExtent": "{\"xmin\": -16805906.91179308, \"ymin\": -42783050.752203286, \"xmax\": 20086740.24512641, \"ymax\": 20272392.191087414}"
  },
  3619: {
    "label": "NAD 1983 NSRS2007 StatePlane New Mexico East FIPS 3001",
    "defaultExtent": "{\"xmin\": -5457501.789915625, \"ymin\": -13040418.509908829, \"xmax\": 5787501.789915627, \"ymax\": 6179093.676604471}"
  },
  3620: {
    "label": "NAD 1983 NSRS2007 StatePlane New Mexico East FIPS 3001 Ft US",
    "defaultExtent": "{\"xmin\": -17905153.78908151, \"ymin\": -42783439.727925874, \"xmax\": 18987828.789081518, \"ymax\": 20272576.503993165}"
  },
  3621: {
    "label": "NAD 1983 NSRS2007 StatePlane New Mexico West FIPS 3003",
    "defaultExtent": "{\"xmin\": -4792544.388498756, \"ymin\": -13040517.30993997, \"xmax\": 6452544.388498756, \"ymax\": 6179140.492176165}"
  },
  3622: {
    "label": "NAD 1983 NSRS2007 StatePlane New Mexico West FIPS 3003 Ft US",
    "defaultExtent": "{\"xmin\": -15723539.381266333, \"ymin\": -42783763.87436138, \"xmax\": 21169722.714599665, \"ymax\": 20272730.0980813}"
  },
  3623: {
    "label": "NAD 1983 NSRS2007 StatePlane New York Central FIPS 3102",
    "defaultExtent": "{\"xmin\": -5372661.534602356, \"ymin\": -14039281.307184162, \"xmax\": 5872661.534602358, \"ymax\": 5180776.937839759}"
  },
  3624: {
    "label": "NAD 1983 NSRS2007 StatePlane New York Central FIPS 3102 Ft US",
    "defaultExtent": "{\"xmin\": -17626807.051441226, \"ymin\": -46060542.08865336, \"xmax\": 19267223.7181079, \"ymax\": 16997265.67022927}"
  },
  3625: {
    "label": "NAD 1983 NSRS2007 StatePlane New York East FIPS 3101",
    "defaultExtent": "{\"xmin\": -5472450.671615874, \"ymin\": -13909240.393148925, \"xmax\": 5772450.671615874, \"ymax\": 5310097.054640977}"
  },
  3626: {
    "label": "NAD 1983 NSRS2007 StatePlane New York East FIPS 3101 Ft US",
    "defaultExtent": "{\"xmin\": -17954198.578459747, \"ymin\": -45633899.523189425, \"xmax\": 18938448.578459747, \"ymax\": 17421543.42010127}"
  },
  3627: {
    "label": "NAD 1983 NSRS2007 StatePlane New York Long Island FIPS 3104",
    "defaultExtent": "{\"xmin\": -36587956.42066342, \"ymin\": -29425420.120449886, \"xmax\": 37187956.42150142, \"ymax\": 24629425.6260428}"
  },
  3628: {
    "label": "NAD 1983 NSRS2007 StatePlane New York Long Isl FIPS 3104 Ft US",
    "defaultExtent": "{\"xmin\": -120038987.02345988, \"ymin\": -96539899.17850932, \"xmax\": 122007487.02620924, \"ymax\": 80805040.5747754}"
  },
  3629: {
    "label": "NAD 1983 NSRS2007 StatePlane New York West FIPS 3103",
    "defaultExtent": "{\"xmin\": -5272661.53460236, \"ymin\": -14039281.307184162, \"xmax\": 5972661.534602358, \"ymax\": 5180776.937839759}"
  },
  3630: {
    "label": "NAD 1983 NSRS2007 StatePlane New York West FIPS 3103 Ft US",
    "defaultExtent": "{\"xmin\": -17298723.718107905, \"ymin\": -46060542.08865336, \"xmax\": 19595307.051441234, \"ymax\": 16997265.67022927}"
  },
  3631: {
    "label": "NAD 1983 NSRS2007 StatePlane North Carolina FIPS 3200",
    "defaultExtent": "{\"xmin\": -37137389.955812365, \"ymin\": -28547205.58121489, \"xmax\": 38356592.39440943, \"ymax\": 18261684.963585444}"
  },
  3632: {
    "label": "NAD 1983 NSRS2007 StatePlane North Carolina FIPS 3200 Ft US",
    "defaultExtent": "{\"xmin\": -121841586.88002771, \"ymin\": -93658623.64436917, \"xmax\": 125841586.88065827, \"ymax\": 59913544.75136323}"
  },
  3633: {
    "label": "NAD 1983 NSRS2007 StatePlane North Dakota North FIPS 3301",
    "defaultExtent": "{\"xmin\": -35595748.115963005, \"ymin\": -30339027.657292105, \"xmax\": 36795748.11641998, \"ymax\": 30974941.604174778}"
  },
  3634: {
    "label": "NAD 1983 NSRS2007 StatePlane North Dakota North FIPS 3301 FtI",
    "defaultExtent": "{\"xmin\": -116783950.51168965, \"ymin\": -99537492.31395046, \"xmax\": 120720958.38720465, \"ymax\": 101623824.1606784}"
  },
  3635: {
    "label": "NAD 1983 NSRS2007 StatePlane North Dakota South FIPS 3302",
    "defaultExtent": "{\"xmin\": -35693627.05966489, \"ymin\": -30171287.465168312, \"xmax\": 36893627.0601383, \"ymax\": 30070892.076617684}"
  },
  3636: {
    "label": "NAD 1983 NSRS2007 StatePlane North Dakota South FIPS 3302 FtI",
    "defaultExtent": "{\"xmin\": -117105075.65506853, \"ymin\": -98987163.59963356, \"xmax\": 121042083.53063746, \"ymax\": 98657782.40360132}"
  },
  3637: {
    "label": "NAD 1983 NSRS2007 StatePlane Ohio North FIPS 3401",
    "defaultExtent": "{\"xmin\": -36260139.32294244, \"ymin\": -29374687.724612944, \"xmax\": 37460139.32264283, \"ymax\": 24932674.77100941}"
  },
  3638: {
    "label": "NAD 1983 NSRS2007 StatePlane Ohio South FIPS 3402",
    "defaultExtent": "{\"xmin\": -36475619.49728193, \"ymin\": -29142750.459979072, \"xmax\": 37675619.497339524, \"ymax\": 23138992.601405952}"
  },
  3639: {
    "label": "NAD 1983 NSRS2007 StatePlane Oklahoma North FIPS 3501",
    "defaultExtent": "{\"xmin\": -36979233.88907343, \"ymin\": -28714973.963273533, \"xmax\": 38179233.8890346, \"ymax\": 19365200.320864283}"
  },
  3640: {
    "label": "NAD 1983 NSRS2007 StatePlane Oklahoma North FIPS 3501 Ft US",
    "defaultExtent": "{\"xmin\": -121322703.18440174, \"ymin\": -94209043.74450657, \"xmax\": 125259703.18427433, \"ymax\": 63533994.71936889}"
  },
  3641: {
    "label": "NAD 1983 NSRS2007 StatePlane Oklahoma South FIPS 3502",
    "defaultExtent": "{\"xmin\": -37281426.008000575, \"ymin\": -28482182.493828315, \"xmax\": 38481426.007534444, \"ymax\": 17385783.726951864}"
  },
  3642: {
    "label": "NAD 1983 NSRS2007 StatePlane Oklahoma South FIPS 3502 Ft US",
    "defaultExtent": "{\"xmin\": -122314145.16124853, \"ymin\": -93445293.73183505, \"xmax\": 126251145.15971924, \"ymax\": 57039858.7775079}"
  },
  3643: {
    "label": "NAD 1983 NSRS2007 Oregon Statewide Lambert",
    "defaultExtent": "{\"xmin\": -36115366.195192955, \"ymin\": -29681657.82664154, \"xmax\": 36915366.19580745, \"ymax\": 28096555.99768769}"
  },
  3644: {
    "label": "NAD 1983 NSRS2007 Oregon Statewide Lambert Ft Intl",
    "defaultExtent": "{\"xmin\": -118488734.23619735, \"ymin\": -97380767.14777409, \"xmax\": 121113406.1542239, \"ymax\": 92180301.82968402}"
  },
  3645: {
    "label": "NAD 1983 NSRS2007 StatePlane Oregon North FIPS 3601",
    "defaultExtent": "{\"xmin\": -33934395.67833442, \"ymin\": -29916770.9826887, \"xmax\": 38934395.67866903, \"ymax\": 28774826.90963382}"
  },
  3646: {
    "label": "NAD 1983 NSRS2007 StatePlane Oregon North FIPS 3601 Ft Intl",
    "defaultExtent": "{\"xmin\": -111333319.15464048, \"ymin\": -98152135.76997603, \"xmax\": 127737518.6308039, \"ymax\": 94405600.09722382}"
  },
  3647: {
    "label": "NAD 1983 NSRS2007 StatePlane Oregon South FIPS 3602",
    "defaultExtent": "{\"xmin\": -35126017.07220474, \"ymin\": -29649727.834081486, \"xmax\": 38126017.072228044, \"ymax\": 27002732.65337064}"
  },
  3648: {
    "label": "NAD 1983 NSRS2007 StatePlane Oregon South FIPS 3602 Ft Intl",
    "defaultExtent": "{\"xmin\": -115242838.16340137, \"ymin\": -97276009.95433559, \"xmax\": 125085357.8485172, \"ymax\": 88591642.56355196}"
  },
  3649: {
    "label": "NAD 1983 NSRS2007 StatePlane Pennsylvania North FIPS 3701",
    "defaultExtent": "{\"xmin\": -36219260.373335704, \"ymin\": -29439912.0075843, \"xmax\": 37419260.373972096, \"ymax\": 25273022.556772325}"
  },
  3650: {
    "label": "NAD 1983 NSRS2007 StatePlane Pennsylvania North FIPS 3701 Ft US",
    "defaultExtent": "{\"xmin\": -118829356.74151887, \"ymin\": -96587444.64488281, \"xmax\": 122766356.74360676, \"ymax\": 82916574.83834386}"
  },
  3651: {
    "label": "NAD 1983 NSRS2007 StatePlane Pennsylvania South FIPS 3702",
    "defaultExtent": "{\"xmin\": -36336434.103694856, \"ymin\": -29321240.345738437, \"xmax\": 37536434.10343623, \"ymax\": 24259081.311989907}"
  },
  3652: {
    "label": "NAD 1983 NSRS2007 StatePlane Pennsylvania South FIPS 3702 Ft US",
    "defaultExtent": "{\"xmin\": -119213784.2218722, \"ymin\": -96198102.70097685, \"xmax\": 123150784.2210237, \"ymax\": 79590002.60442021}"
  },
  3653: {
    "label": "NAD 1983 NSRS2007 StatePlane Rhode Island FIPS 3800",
    "defaultExtent": "{\"xmin\": -5522977.829082084, \"ymin\": -14160369.134576127, \"xmax\": 5722977.829082084, \"ymax\": 5060770.306298815}"
  },
  3654: {
    "label": "NAD 1983 NSRS2007 StatePlane Rhode Island FIPS 3800 Ft US",
    "defaultExtent": "{\"xmin\": -18119969.76091347, \"ymin\": -46457811.069021836, \"xmax\": 18776136.427580133, \"ymax\": 16603543.913248692}"
  },
  3655: {
    "label": "NAD 1983 NSRS2007 StatePlane South Carolina FIPS 3900",
    "defaultExtent": "{\"xmin\": -37462128.94764636, \"ymin\": -28285530.15549066, \"xmax\": 38681328.949165195, \"ymax\": 16261049.643896274}"
  },
  3656: {
    "label": "NAD 1983 NSRS2007 StatePlane South Carolina FIPS 3900 Ft Intl",
    "defaultExtent": "{\"xmin\": -122907247.20356415, \"ymin\": -92800295.78573051, \"xmax\": 126907247.20854722, \"ymax\": 53349900.40648384}"
  },
  3657: {
    "label": "NAD 1983 NSRS2007 StatePlane South Dakota North FIPS 4001",
    "defaultExtent": "{\"xmin\": -35846098.92496543, \"ymin\": -29933703.866771042, \"xmax\": 37046098.92490602, \"ymax\": 28645269.44168758}"
  },
  3658: {
    "label": "NAD 1983 NSRS2007 StatePlane South Dakota North FIPS 4001 Ft US",
    "defaultExtent": "{\"xmin\": -117605076.22299072, \"ymin\": -98207493.43623132, \"xmax\": 121542076.22279583, \"ymax\": 93980354.82660332}"
  },
  3659: {
    "label": "NAD 1983 NSRS2007 StatePlane South Dakota South FIPS 4002",
    "defaultExtent": "{\"xmin\": -35980929.411304265, \"ymin\": -29734707.47249241, \"xmax\": 37180929.41117397, \"ymax\": 27393676.96179096}"
  },
  3660: {
    "label": "NAD 1983 NSRS2007 StatePlane South Dakota South FIPS 4002 Ft US",
    "defaultExtent": "{\"xmin\": -118047432.57692073, \"ymin\": -97554619.43266883, \"xmax\": 121984432.57649325, \"ymax\": 89874088.49880916}"
  },
  3661: {
    "label": "NAD 1983 NSRS2007 StatePlane Tennessee FIPS 4100",
    "defaultExtent": "{\"xmin\": -37039650.6279049, \"ymin\": -28631019.31672457, \"xmax\": 38239650.62802555, \"ymax\": 18990861.045042165}"
  },
  3662: {
    "label": "NAD 1983 NSRS2007 StatePlane Tennessee FIPS 4100 Ft US",
    "defaultExtent": "{\"xmin\": -121520920.4350513, \"ymin\": -93933602.54162051, \"xmax\": 125457920.43544713, \"ymax\": 62305849.94527583}"
  },
  3663: {
    "label": "NAD 1983 NSRS2007 StatePlane Texas Central FIPS 4203",
    "defaultExtent": "{\"xmin\": -38040663.03171102, \"ymin\": -24970101.92794974, \"xmax\": 39440663.03170802, \"ymax\": 15602650.666709403}"
  },
  3664: {
    "label": "NAD 1983 NSRS2007 StatePlane Texas Central FIPS 4203 Ft US",
    "defaultExtent": "{\"xmin\": -124805075.29653856, \"ymin\": -81922742.74194843, \"xmax\": 129398241.96319537, \"ymax\": 51189696.39569576}"
  },
  3665: {
    "label": "NAD 1983 NSRS2007 Texas Centric Mapping System Albers",
    "defaultExtent": "{\"xmin\": -17154324.437499855, \"ymin\": -675329.8507281002, \"xmax\": 20154324.43750238, \"ymax\": 19014408.076648667}"
  },
  3666: {
    "label": "NAD 1983 NSRS2007 Texas Centric Mapping System Lambert",
    "defaultExtent": "{\"xmin\": -37101439.53622417, \"ymin\": -21633811.39510804, \"xmax\": 40101439.53614661, \"ymax\": 19288743.702293932}"
  },
  3667: {
    "label": "NAD 1983 NSRS2007 StatePlane Texas North FIPS 4201",
    "defaultExtent": "{\"xmin\": -37516299.8331, \"ymin\": -27580728.943599287, \"xmax\": 37916299.833128214, \"ymax\": 19461951.497943036}"
  },
  3668: {
    "label": "NAD 1983 NSRS2007 StatePlane Texas North FIPS 4201 Ft US",
    "defaultExtent": "{\"xmin\": -123084727.03576224, \"ymin\": -90487774.87579198, \"xmax\": 124397060.36918813, \"ymax\": 63851419.2061681}"
  },
  3669: {
    "label": "NAD 1983 NSRS2007 StatePlane Texas North Central FIPS 4202",
    "defaultExtent": "{\"xmin\": -37614616.88807972, \"ymin\": -26250391.134317875, \"xmax\": 38814616.88802452, \"ymax\": 17395582.84290185}"
  },
  3670: {
    "label": "NAD 1983 NSRS2007 StatePlane Texas North Central FIPS 4202 FtUS",
    "defaultExtent": "{\"xmin\": -123407288.90697485, \"ymin\": -86123158.24650788, \"xmax\": 127344288.90679376, \"ymax\": 57072008.04375381}"
  },
  3671: {
    "label": "NAD 1983 NSRS2007 StatePlane Texas South FIPS 4205",
    "defaultExtent": "{\"xmin\": -39382898.13859524, \"ymin\": -22428383.748523414, \"xmax\": 39982898.13859524, \"ymax\": 17130472.597137526}"
  },
  3672: {
    "label": "NAD 1983 NSRS2007 StatePlane Texas South FIPS 4205 Ft US",
    "defaultExtent": "{\"xmin\": -129208724.97637452, \"ymin\": -73583789.01494722, \"xmax\": 131177224.97637452, \"ymax\": 56202225.512442015}"
  },
  3673: {
    "label": "NAD 1983 NSRS2007 StatePlane Texas South Central FIPS 4204",
    "defaultExtent": "{\"xmin\": -38625948.2389665, \"ymin\": -23722141.01585047, \"xmax\": 39825948.2389665, \"ymax\": 15422945.822918478}"
  },
  3674: {
    "label": "NAD 1983 NSRS2007 StatePlane Texas South Central FIPS 4204 FtUS",
    "defaultExtent": "{\"xmin\": -126725298.51400925, \"ymin\": -77828390.98283607, \"xmax\": 130662298.51400925, \"ymax\": 50600114.754025035}"
  },
  3675: {
    "label": "NAD 1983 NSRS2007 StatePlane Utah Central FIPS 4302",
    "defaultExtent": "{\"xmin\": -36514060.18168421, \"ymin\": -27191819.5738922, \"xmax\": 37514060.18232606, \"ymax\": 25642908.167597167}"
  },
  3676: {
    "label": "NAD 1983 NSRS2007 StatePlane Utah Central FIPS 4302 Ft Intl",
    "defaultExtent": "{\"xmin\": -119796785.37297969, \"ymin\": -89212006.47602427, \"xmax\": 123077625.27009863, \"ymax\": 84130276.14041065}"
  },
  3677: {
    "label": "NAD 1983 NSRS2007 StatePlane Utah Central FIPS 4302 Ft US",
    "defaultExtent": "{\"xmin\": -119796545.77940908, \"ymin\": -89211828.0520115, \"xmax\": 123077379.11484823, \"ymax\": 84130107.87985882}"
  },
  3678: {
    "label": "NAD 1983 NSRS2007 StatePlane Utah North FIPS 4301",
    "defaultExtent": "{\"xmin\": -36338834.42915058, \"ymin\": -28453982.376255378, \"xmax\": 37338834.521727204, \"ymax\": 26066690.159262396}"
  },
  3679: {
    "label": "NAD 1983 NSRS2007 StatePlane Utah North FIPS 4301 Ft Intl",
    "defaultExtent": "{\"xmin\": -119221897.73343366, \"ymin\": -93352960.55201896, \"xmax\": 122502737.93217586, \"ymax\": 85520637.00545405}"
  },
  3680: {
    "label": "NAD 1983 NSRS2007 StatePlane Utah North FIPS 4301 Ft US",
    "defaultExtent": "{\"xmin\": -119221659.28963818, \"ymin\": -93352773.84609784, \"xmax\": 122502492.92669998, \"ymax\": 85520465.96418004}"
  },
  3681: {
    "label": "NAD 1983 NSRS2007 StatePlane Utah South FIPS 4303",
    "defaultExtent": "{\"xmin\": -36809744.07562093, \"ymin\": -25948407.843968417, \"xmax\": 37809744.075334504, \"ymax\": 24295469.49478243}"
  },
  3682: {
    "label": "NAD 1983 NSRS2007 StatePlane Utah South FIPS 4303 Ft Intl",
    "defaultExtent": "{\"xmin\": -120766876.88852009, \"ymin\": -85132571.66656305, \"xmax\": 124047716.78259352, \"ymax\": 79709545.58655652}"
  },
  3683: {
    "label": "NAD 1983 NSRS2007 StatePlane Utah South FIPS 4303 Ft US",
    "defaultExtent": "{\"xmin\": -120766635.35476631, \"ymin\": -85132401.4014197, \"xmax\": 124047468.68715994, \"ymax\": 79709386.16746534}"
  },
  3684: {
    "label": "NAD 1983 NSRS2007 StatePlane Vermont FIPS 4400",
    "defaultExtent": "{\"xmin\": -5122812.1510212775, \"ymin\": -14317294.386720052, \"xmax\": 6122812.151021276, \"ymax\": 4903278.713471021}"
  },
  3685: {
    "label": "NAD 1983 NSRS2007 StatePlane Virginia North FIPS 4501",
    "defaultExtent": "{\"xmin\": -33684162.33987652, \"ymin\": -27083846.657879442, \"xmax\": 40684162.34077641, \"ymax\": 24234815.029329725}"
  },
  3686: {
    "label": "NAD 1983 NSRS2007 StatePlane Virginia North FIPS 4501 Ft US",
    "defaultExtent": "{\"xmin\": -110512122.6100782, \"ymin\": -88857586.91005945, \"xmax\": 133477955.94636394, \"ymax\": 79510388.9753926}"
  },
  3687: {
    "label": "NAD 1983 NSRS2007 StatePlane Virginia South FIPS 4502",
    "defaultExtent": "{\"xmin\": -33875616.80010519, \"ymin\": -27898914.99367497, \"xmax\": 40875616.80001254, \"ymax\": 21796916.219502896}"
  },
  3688: {
    "label": "NAD 1983 NSRS2007 StatePlane Virginia South FIPS 4502 Ft US",
    "defaultExtent": "{\"xmin\": -111140252.78501177, \"ymin\": -91531690.27508196, \"xmax\": 134106086.11804111, \"ymax\": 71512049.29681908}"
  },
  3689: {
    "label": "NAD 1983 NSRS2007 StatePlane Washington North FIPS 4601",
    "defaultExtent": "{\"xmin\": -35693390.40305884, \"ymin\": -30339611.799414955, \"xmax\": 36693390.40324891, \"ymax\": 31002022.19631627}"
  },
  3690: {
    "label": "NAD 1983 NSRS2007 StatePlane Washington North FIPS 4601 Ft US",
    "defaultExtent": "{\"xmin\": -117104065.01403554, \"ymin\": -99539209.71191388, \"xmax\": 120384898.34799246, \"ymax\": 101712467.82241428}"
  },
  3691: {
    "label": "NAD 1983 NSRS2007 StatePlane Washington South FIPS 4602",
    "defaultExtent": "{\"xmin\": -35813457.80653769, \"ymin\": -30129505.531924177, \"xmax\": 36813457.80730579, \"ymax\": 29888507.91177208}"
  },
  3692: {
    "label": "NAD 1983 NSRS2007 StatePlane Washington South FIPS 4602 Ft US",
    "defaultExtent": "{\"xmin\": -117497986.15361571, \"ymin\": -98849886.06598788, \"xmax\": 120778819.48946907, \"ymax\": 98059213.04053889}"
  },
  3693: {
    "label": "NAD 1983 NSRS2007 StatePlane West Virginia North FIPS 4701",
    "defaultExtent": "{\"xmin\": -36443027.89488857, \"ymin\": -29205240.099509504, \"xmax\": 37643027.8949125, \"ymax\": 23375051.76188209}"
  },
  3694: {
    "label": "NAD 1983 NSRS2007 StatePlane West Virginia South FIPS 4702",
    "defaultExtent": "{\"xmin\": -36647651.619762786, \"ymin\": -28996711.06985563, \"xmax\": 37847651.61951533, \"ymax\": 21766153.09529358}"
  },
  3695: {
    "label": "NAD 1983 NSRS2007 StatePlane Wisconsin Central FIPS 4802",
    "defaultExtent": "{\"xmin\": -35862028.694118075, \"ymin\": -29930060.701200917, \"xmax\": 37062028.688673995, \"ymax\": 28477287.000578806}"
  },
  3696: {
    "label": "NAD 1983 NSRS2007 StatePlane Wisconsin Central FIPS 4802 Ft US",
    "defaultExtent": "{\"xmin\": -117657339.14061904, \"ymin\": -98195540.81718999, \"xmax\": 121594339.12275791, \"ymax\": 93429232.43439895}"
  },
  3697: {
    "label": "NAD 1983 NSRS2007 StatePlane Wisconsin North FIPS 4801",
    "defaultExtent": "{\"xmin\": -35748933.755770005, \"ymin\": -30104004.24499993, \"xmax\": 36948933.75551393, \"ymax\": 29535005.089385338}"
  },
  3698: {
    "label": "NAD 1983 NSRS2007 StatePlane Wisconsin North FIPS 4801 Ft US",
    "defaultExtent": "{\"xmin\": -117286293.49705541, \"ymin\": -98766220.59380393, \"xmax\": 121223293.49621527, \"ymax\": 96899429.19742505}"
  },
  3699: {
    "label": "NAD 1983 NSRS2007 StatePlane Wisconsin South FIPS 4803",
    "defaultExtent": "{\"xmin\": -36003344.686841294, \"ymin\": -29693054.532282908, \"xmax\": 37203344.68690827, \"ymax\": 27208063.07319163}"
  },
  3700: {
    "label": "NAD 1983 NSRS2007 StatePlane Wisconsin South FIPS 4803 Ft US",
    "defaultExtent": "{\"xmin\": -118120973.36007847, \"ymin\": -97417963.07799816, \"xmax\": 122057973.36029819, \"ymax\": 89265120.26596287}"
  },
  3701: {
    "label": "NAD 1983 NSRS2007 Wisconsin TM",
    "defaultExtent": "{\"xmin\": -5100763.767724001, \"ymin\": -14086785.534958892, \"xmax\": 6140763.767724001, \"ymax\": 5126785.534958888}"
  },
  3702: {
    "label": "NAD 1983 NSRS2007 StatePlane Wyoming East FIPS 4901",
    "defaultExtent": "{\"xmin\": -5422661.534602354, \"ymin\": -14094797.558167633, \"xmax\": 5822661.534602358, \"ymax\": 5125260.686856288}"
  },
  3703: {
    "label": "NAD 1983 NSRS2007 StatePlane Wyoming East Central FIPS 4902",
    "defaultExtent": "{\"xmin\": -5222661.53460236, \"ymin\": -13994797.558167633, \"xmax\": 6022661.534602358, \"ymax\": 5225260.686856289}"
  },
  3704: {
    "label": "NAD 1983 NSRS2007 StatePlane Wyoming West Central FIPS 4903",
    "defaultExtent": "{\"xmin\": -5022661.534602358, \"ymin\": -14094797.558167633, \"xmax\": 6222661.534602358, \"ymax\": 5125260.686856289}"
  },
  3705: {
    "label": "NAD 1983 NSRS2007 StatePlane Wyoming West FIPS 4904",
    "defaultExtent": "{\"xmin\": -4822661.534602356, \"ymin\": -13994797.558167633, \"xmax\": 6422661.534602358, \"ymax\": 5225260.686856289}"
  },
  3706: {
    "label": "NAD 1983 NSRS2007 UTM Zone 59N",
    "defaultExtent": "{\"xmin\": -5120763.76772398, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  3707: {
    "label": "NAD 1983 NSRS2007 UTM Zone 60N",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  3708: {
    "label": "NAD 1983 NSRS2007 UTM Zone 1N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  3709: {
    "label": "NAD 1983 NSRS2007 UTM Zone 2N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  3710: {
    "label": "NAD 1983 NSRS2007 UTM Zone 3N",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  3711: {
    "label": "NAD 1983 NSRS2007 UTM Zone 4N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724011, \"ymax\": 9606785.534938097}"
  },
  3712: {
    "label": "NAD 1983 NSRS2007 UTM Zone 5N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  3713: {
    "label": "NAD 1983 NSRS2007 UTM Zone 6N",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  3714: {
    "label": "NAD 1983 NSRS2007 UTM Zone 7N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724011, \"ymax\": 9606785.534938097}"
  },
  3715: {
    "label": "NAD 1983 NSRS2007 UTM Zone 8N",
    "defaultExtent": "{\"xmin\": -5120761.968321789, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3716: {
    "label": "NAD 1983 NSRS2007 UTM Zone 9N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3717: {
    "label": "NAD 1983 NSRS2007 UTM Zone 10N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724002, \"ymax\": 9606785.534958888}"
  },
  3718: {
    "label": "NAD 1983 NSRS2007 UTM Zone 11N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3719: {
    "label": "NAD 1983 NSRS2007 UTM Zone 12N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3720: {
    "label": "NAD 1983 NSRS2007 UTM Zone 13N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3721: {
    "label": "NAD 1983 NSRS2007 UTM Zone 14N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3722: {
    "label": "NAD 1983 NSRS2007 UTM Zone 15N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3723: {
    "label": "NAD 1983 NSRS2007 UTM Zone 16N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958893, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3724: {
    "label": "NAD 1983 NSRS2007 UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3725: {
    "label": "NAD 1983 NSRS2007 UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3726: {
    "label": "NAD 1983 NSRS2007 UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3727: {
    "label": "Reunion 1947 TM Reunion",
    "defaultExtent": "{\"xmin\": -5463255.480734327, \"ymin\": -7224907.713616237, \"xmax\": 5783255.480734327, \"ymax\": 11996955.136522936}"
  },
  3728: {
    "label": "NAD 1983 NSRS2007 StatePlane Ohio North FIPS 3401 Ft US",
    "defaultExtent": "{\"xmin\": -118963473.76202032, \"ymin\": -96373454.64316761, \"xmax\": 122900473.76103735, \"ymax\": 81799950.4778867}"
  },
  3729: {
    "label": "NAD 1983 NSRS2007 StatePlane Ohio South FIPS 3402 Ft US",
    "defaultExtent": "{\"xmin\": -119670428.30066578, \"ymin\": -95612507.13411467, \"xmax\": 123607428.30085474, \"ymax\": 75915178.22644602}"
  },
  3730: {
    "label": "NAD 1983 NSRS2007 StatePlane Wyoming East FIPS 4901 Ft US",
    "defaultExtent": "{\"xmin\": -17790848.718107887, \"ymin\": -46242681.65542164, \"xmax\": 19103182.051441234, \"ymax\": 16815126.103461005}"
  },
  3731: {
    "label": "NAD 1983 NSRS2007 StatePlane Wyoming E Central FIPS 4902 Ft US",
    "defaultExtent": "{\"xmin\": -17134682.05144124, \"ymin\": -45914598.3220883, \"xmax\": 19759348.7181079, \"ymax\": 17143209.43679434}"
  },
  3732: {
    "label": "NAD 1983 NSRS2007 StatePlane Wyoming W Central FIPS 4903 Ft US",
    "defaultExtent": "{\"xmin\": -16478515.384774568, \"ymin\": -46242681.65542164, \"xmax\": 20415515.384774566, \"ymax\": 16815126.10346101}"
  },
  3733: {
    "label": "NAD 1983 NSRS2007 StatePlane Wyoming West FIPS 4904 Ft US",
    "defaultExtent": "{\"xmin\": -15822348.718107894, \"ymin\": -45914598.3220883, \"xmax\": 21071682.051441234, \"ymax\": 17143209.43679434}"
  },
  3734: {
    "label": "NAD 1983 StatePlane Ohio North FIPS 3401 Feet",
    "defaultExtent": "{\"xmin\": -118963473.76202032, \"ymin\": -96373454.64316761, \"xmax\": 122900473.76103735, \"ymax\": 81799950.4778867}"
  },
  3735: {
    "label": "NAD 1983 StatePlane Ohio South FIPS 3402 Feet",
    "defaultExtent": "{\"xmin\": -119670428.30066578, \"ymin\": -95612507.13411467, \"xmax\": 123607428.30085474, \"ymax\": 75915178.22644602}"
  },
  3736: {
    "label": "NAD 1983 StatePlane Wyoming East FIPS 4901 Feet",
    "defaultExtent": "{\"xmin\": -17790848.718107887, \"ymin\": -46242681.65542164, \"xmax\": 19103182.051441234, \"ymax\": 16815126.103461005}"
  },
  3737: {
    "label": "NAD 1983 StatePlane Wyoming East Central FIPS 4902 Feet",
    "defaultExtent": "{\"xmin\": -17134682.05144124, \"ymin\": -45914598.3220883, \"xmax\": 19759348.7181079, \"ymax\": 17143209.43679434}"
  },
  3738: {
    "label": "NAD 1983 StatePlane Wyoming West Central FIPS 4903 Feet",
    "defaultExtent": "{\"xmin\": -16478515.384774568, \"ymin\": -46242681.65542164, \"xmax\": 20415515.384774566, \"ymax\": 16815126.10346101}"
  },
  3739: {
    "label": "NAD 1983 StatePlane Wyoming West FIPS 4904 Feet",
    "defaultExtent": "{\"xmin\": -15822348.718107894, \"ymin\": -45914598.3220883, \"xmax\": 21071682.051441234, \"ymax\": 17143209.43679434}"
  },
  3740: {
    "label": "NAD 1983 HARN UTM Zone 10N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724002, \"ymax\": 9606785.534958888}"
  },
  3741: {
    "label": "NAD 1983 HARN UTM Zone 11N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3742: {
    "label": "NAD 1983 HARN UTM Zone 12N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3743: {
    "label": "NAD 1983 HARN UTM Zone 13N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3744: {
    "label": "NAD 1983 HARN UTM Zone 14N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3745: {
    "label": "NAD 1983 HARN UTM Zone 15N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3746: {
    "label": "NAD 1983 HARN UTM Zone 16N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958893, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3747: {
    "label": "NAD 1983 HARN UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3748: {
    "label": "NAD 1983 HARN UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3749: {
    "label": "NAD 1983 HARN UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3750: {
    "label": "NAD 1983 HARN UTM Zone 4N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724011, \"ymax\": 9606785.534938097}"
  },
  3751: {
    "label": "NAD 1983 HARN UTM Zone 5N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  3753: {
    "label": "NAD 1983 HARN StatePlane Ohio North FIPS 3401 Feet",
    "defaultExtent": "{\"xmin\": -118963473.76202032, \"ymin\": -96373454.64316761, \"xmax\": 122900473.76103735, \"ymax\": 81799950.4778867}"
  },
  3754: {
    "label": "NAD 1983 HARN StatePlane Ohio South FIPS 3402 Feet",
    "defaultExtent": "{\"xmin\": -119670428.30066578, \"ymin\": -95612507.13411467, \"xmax\": 123607428.30085474, \"ymax\": 75915178.22644602}"
  },
  3755: {
    "label": "NAD 1983 HARN StatePlane Wyoming East FIPS 4901 Feet",
    "defaultExtent": "{\"xmin\": -17790848.718107887, \"ymin\": -46242681.65542164, \"xmax\": 19103182.051441234, \"ymax\": 16815126.103461005}"
  },
  3756: {
    "label": "NAD 1983 HARN StatePlane Wyoming East Central FIPS 4902 Feet",
    "defaultExtent": "{\"xmin\": -17134682.05144124, \"ymin\": -45914598.3220883, \"xmax\": 19759348.7181079, \"ymax\": 17143209.43679434}"
  },
  3757: {
    "label": "NAD 1983 HARN StatePlane Wyoming West Central FIPS 4903 Feet",
    "defaultExtent": "{\"xmin\": -16478515.384774568, \"ymin\": -46242681.65542164, \"xmax\": 20415515.384774566, \"ymax\": 16815126.10346101}"
  },
  3758: {
    "label": "NAD 1983 HARN StatePlane Wyoming West FIPS 4904 Feet",
    "defaultExtent": "{\"xmin\": -15822348.718107894, \"ymin\": -45914598.3220883, \"xmax\": 21071682.051441234, \"ymax\": 17143209.43679434}"
  },
  3759: {
    "label": "NAD 1983 StatePlane Hawaii 3 FIPS 5103 Feet",
    "defaultExtent": "{\"xmin\": -16807567.2469486, \"ymin\": -39212651.73552266, \"xmax\": 20088400.580282014, \"ymax\": 23848466.765052166}"
  },
  3760: {
    "label": "NAD 1983 HARN StatePlane Hawaii 3 FIPS 5103 Feet",
    "defaultExtent": "{\"xmin\": -16807567.2469486, \"ymin\": -39212651.73552266, \"xmax\": 20088400.580282014, \"ymax\": 23848466.765052166}"
  },
  3761: {
    "label": "NAD 1983 CSRS UTM Zone 22N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3762: {
    "label": "WGS 1984 South Georgia Lambert",
    "defaultExtent": "{\"xmin\": -35771540.893250376, \"ymin\": -34275884.13005282, \"xmax\": 35771540.89683657, \"ymax\": 31260595.35478853}"
  },
  3763: {
    "label": "ETRS 1989 Portugal TM06",
    "defaultExtent": "{\"xmin\": -5623012.972913165, \"ymin\": -14003325.059731668, \"xmax\": 5623012.9729131665, \"ymax\": 5217934.514015612}"
  },
  3764: {
    "label": "NZGD 2000 Chatham Island Circuit",
    "defaultExtent": "{\"xmin\": -5223012.97291314, \"ymin\": -3936807.417256669, \"xmax\": 6023012.972913178, \"ymax\": 15284452.156448998}"
  },
  3765: {
    "label": "HTRS96 Croatia TM",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": -9609668.723894954, \"xmax\": 6122450.671615874, \"ymax\": 9609668.72389495}"
  },
  3766: {
    "label": "HTRS96 Croatia LCC",
    "defaultExtent": "{\"xmin\": -36489938.021725655, \"ymin\": -24578612.035197884, \"xmax\": 36489938.02156101, \"ymax\": 33450511.434904896}"
  },
  3767: {
    "label": "HTRS96 UTM Zone 33N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3768: {
    "label": "HTRS96 UTM Zone 34N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3769: {
    "label": "Bermuda 1957 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  3770: {
    "label": "Bermuda 2000 National Grid",
    "defaultExtent": "{\"xmin\": -5073012.972888589, \"ymin\": -13052482.2212188, \"xmax\": 6173012.972888589, \"ymax\": 6168777.3527058065}"
  },
  3771: {
    "label": "NAD 1927 3TM 111",
    "defaultExtent": "{\"xmin\": -5622567.571686542, \"ymin\": -9609572.266315758, \"xmax\": 5622567.571686544, \"ymax\": 9609572.266315753}"
  },
  3772: {
    "label": "NAD 1927 3TM 114",
    "defaultExtent": "{\"xmin\": -5622567.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5622567.571686546, \"ymax\": 9609572.266315753}"
  },
  3773: {
    "label": "NAD 1927 3TM 117",
    "defaultExtent": "{\"xmin\": -5622567.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5622567.571686544, \"ymax\": 9609572.266315753}"
  },
  3775: {
    "label": "NAD 1983 3TM 111",
    "defaultExtent": "{\"xmin\": -5622450.671615872, \"ymin\": -9609668.723894954, \"xmax\": 5622450.671615874, \"ymax\": 9609668.72389495}"
  },
  3776: {
    "label": "NAD 1983 3TM 114",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5622450.671615875, \"ymax\": 9609668.72389495}"
  },
  3777: {
    "label": "NAD 1983 3TM 117",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5622450.671615874, \"ymax\": 9609668.72389495}"
  },
  3779: {
    "label": "NAD 1983 CSRS 3TM 111",
    "defaultExtent": "{\"xmin\": -5622450.671615872, \"ymin\": -9609668.723894954, \"xmax\": 5622450.671615874, \"ymax\": 9609668.72389495}"
  },
  3780: {
    "label": "NAD 1983 CSRS 3TM 114",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5622450.671615875, \"ymax\": 9609668.72389495}"
  },
  3781: {
    "label": "NAD 1983 CSRS 3TM 117",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5622450.671615874, \"ymax\": 9609668.72389495}"
  },
  3783: {
    "label": "Pitcairn 2006 Pitcairn TM 2006",
    "defaultExtent": "{\"xmin\": -5608812.972888589, \"ymin\": -6821481.812222607, \"xmax\": 5637212.972888589, \"ymax\": 12399777.761702001}"
  },
  3784: {
    "label": "Pitcairn 1967 UTM Zone 9S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  3788: {
    "label": "NZGD 2000 Auckland Islands TM 2000",
    "defaultExtent": "{\"xmin\": -2123012.972913149, \"ymin\": 389370.2131471727, \"xmax\": 9123012.972913172, \"ymax\": 19610629.786852837}"
  },
  3789: {
    "label": "NZGD 2000 Campbell Island TM 2000",
    "defaultExtent": "{\"xmin\": -2123012.972913145, \"ymin\": 389370.2131471727, \"xmax\": 9123012.972913172, \"ymax\": 19610629.786852837}"
  },
  3790: {
    "label": "NZGD 2000 Antipodes Islands TM 2000",
    "defaultExtent": "{\"xmin\": -2123012.972913149, \"ymin\": 389370.2131471727, \"xmax\": 9123012.972913172, \"ymax\": 19610629.786852837}"
  },
  3791: {
    "label": "NZGD 2000 Raoul Island TM 2000",
    "defaultExtent": "{\"xmin\": -2123012.972913149, \"ymin\": 389370.2131471727, \"xmax\": 9123012.972913172, \"ymax\": 19610629.786852837}"
  },
  3793: {
    "label": "NZGD 2000 Chatham Islands TM 2000",
    "defaultExtent": "{\"xmin\": -2123012.9729131404, \"ymin\": 389370.2131471727, \"xmax\": 9123012.972913178, \"ymax\": 19610629.786852837}"
  },
  3794: {
    "label": "Slovenia 1996 Slovene National Grid",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": -14609668.723894954, \"xmax\": 6122450.671615874, \"ymax\": 4609668.72389495}"
  },
  3797: {
    "label": "NAD 1927 MTQ Lambert",
    "defaultExtent": "{\"xmin\": -35385822.53427844, \"ymin\": -29992083.781057406, \"xmax\": 36985822.53421808, \"ymax\": 31236581.701621097}"
  },
  3798: {
    "label": "NAD 1983 MTQ Lambert",
    "defaultExtent": "{\"xmin\": -35387995.95542935, \"ymin\": -29994435.378044788, \"xmax\": 36987995.9553804, \"ymax\": 31237906.01002912}"
  },
  3799: {
    "label": "NAD 1983 CSRS MTQ Lambert",
    "defaultExtent": "{\"xmin\": -35387995.95542935, \"ymin\": -29994435.378044788, \"xmax\": 36987995.9553804, \"ymax\": 31237906.01002912}"
  },
  3800: {
    "label": "NAD 1927 3TM 120",
    "defaultExtent": "{\"xmin\": -5622567.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5622567.571686544, \"ymax\": 9609572.266315753}"
  },
  3801: {
    "label": "NAD 1983 3TM 120",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5622450.671615874, \"ymax\": 9609668.72389495}"
  },
  3802: {
    "label": "NAD 1983 CSRS 3TM 120",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5622450.671615874, \"ymax\": 9609668.72389495}"
  },
  3812: {
    "label": "Belge Lambert 2008",
    "defaultExtent": "{\"xmin\": -35372906.01739936, \"ymin\": -30122335.020402987, \"xmax\": 36671562.00247804, \"ymax\": 33043110.907976475}"
  },
  3814: {
    "label": "NAD 1983 Mississippi TM",
    "defaultExtent": "{\"xmin\": -5122076.741253177, \"ymin\": -11905728.699493717, \"xmax\": 6122076.741253175, \"ymax\": 7312330.534534532}"
  },
  3815: {
    "label": "NAD 1983 HARN Mississippi TM",
    "defaultExtent": "{\"xmin\": -5122076.741253177, \"ymin\": -11905728.699493717, \"xmax\": 6122076.741253175, \"ymax\": 7312330.534534532}"
  },
  3816: {
    "label": "NAD 1983 NSRS2007 Mississippi TM",
    "defaultExtent": "{\"xmin\": -5122076.741253177, \"ymin\": -11905728.699493717, \"xmax\": 6122076.741253175, \"ymax\": 7312330.534534532}"
  },
  3819: {
    "label": "GCS HD1909",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  3821: {
    "label": "GCS TWD 1967",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  3824: {
    "label": "GCS TWD 1997",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  3825: {
    "label": "TWD 1997 TM Penghu",
    "defaultExtent": "{\"xmin\": -5372450.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5872450.671615874, \"ymax\": 9609668.72389495}"
  },
  3826: {
    "label": "TWD 1997 TM Taiwan",
    "defaultExtent": "{\"xmin\": -5372450.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5872450.671615874, \"ymax\": 9609668.72389495}"
  },
  3827: {
    "label": "TWD 1967 TM Penghu",
    "defaultExtent": "{\"xmin\": -5372471.067951179, \"ymin\": -9609702.939063312, \"xmax\": 5872471.067951179, \"ymax\": 9609702.939063307}"
  },
  3828: {
    "label": "TWD 1967 TM Taiwan",
    "defaultExtent": "{\"xmin\": -5372471.067951179, \"ymin\": -9609702.939063312, \"xmax\": 5872471.067951179, \"ymax\": 9609702.939063307}"
  },
  3829: {
    "label": "Hu Tzu Shan UTM Zone 51N",
    "defaultExtent": "{\"xmin\": -5121006.178542035, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  3832: {
    "label": "WGS 1984 PDC Mercator",
    "defaultExtent": "{\"xmin\": -20037507.06717919, \"ymin\": -19994873.97389375, \"xmax\": 20037507.067179203, \"ymax\": 19994873.97423248}"
  },
  3833: {
    "label": "Pulkovo 1942 Adj 1958 GK Zone 2",
    "defaultExtent": "{\"xmin\": -3123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 8123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3834: {
    "label": "Pulkovo 1942 Adj 1983 GK Zone 2",
    "defaultExtent": "{\"xmin\": -3123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 8123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3835: {
    "label": "Pulkovo 1942 Adj 1983 GK Zone 3",
    "defaultExtent": "{\"xmin\": -2123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 9123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3836: {
    "label": "Pulkovo 1942 Adj 1983 GK Zone 4",
    "defaultExtent": "{\"xmin\": -1123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 10123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3837: {
    "label": "Pulkovo 1942 Adj 1958 3 Degree GK Zone 3",
    "defaultExtent": "{\"xmin\": -2123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 9123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3838: {
    "label": "Pulkovo 1942 Adj 1958 3 Degree GK Zone 4",
    "defaultExtent": "{\"xmin\": -1123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 10123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3839: {
    "label": "Pulkovo 1942 Adj 1958 3 Degree GK Zone 9",
    "defaultExtent": "{\"xmin\": 3876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 15123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3840: {
    "label": "Pulkovo 1942 Adj 1958 3 Degree GK Zone 10",
    "defaultExtent": "{\"xmin\": 4876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 16123107.467526715, \"ymax\": 9610795.116133094}"
  },
  3841: {
    "label": "Pulkovo 1942 Adj 1983 3 Degree GK Zone 6",
    "defaultExtent": "{\"xmin\": 876892.5324732829, \"ymin\": -9610795.116133098, \"xmax\": 12123107.467526717, \"ymax\": 9610795.116133094}"
  },
  3844: {
    "label": "Pulkovo 1942 Adj 58 Stereo 70",
    "defaultExtent": "{\"xmin\": -30221780.112340685, \"ymin\": -30036352.66697563, \"xmax\": 31221780.10821221, \"ymax\": 31204134.735311333}"
  },
  3845: {
    "label": "SWEREF99 RT90 7.5 gon V emulation",
    "defaultExtent": "{\"xmin\": -4123021.569991002, \"ymin\": -9611354.732652362, \"xmax\": 7123071.8519910015, \"ymax\": 9610020.168652358}"
  },
  3846: {
    "label": "SWEREF99 RT90 5 gon V emulation",
    "defaultExtent": "{\"xmin\": -4123000.891388408, \"ymin\": -9611352.658526406, \"xmax\": 7123090.2813884085, \"ymax\": 9610018.398526398}"
  },
  3847: {
    "label": "SWEREF99 RT90 2.5 gon V emulation",
    "defaultExtent": "{\"xmin\": -4122980.245365465, \"ymin\": -9611351.415813295, \"xmax\": 7123108.7933654655, \"ymax\": 9610015.993813291}"
  },
  3848: {
    "label": "SWEREF99 RT90 0 gon emulation",
    "defaultExtent": "{\"xmin\": -4122959.8161832187, \"ymin\": -9611350.52827449, \"xmax\": 7123126.858183218, \"ymax\": 9610012.840274487}"
  },
  3849: {
    "label": "SWEREF99 RT90 2.5 gon O emulation",
    "defaultExtent": "{\"xmin\": -4122939.4475806244, \"ymin\": -9611350.468148533, \"xmax\": 7123144.977580625, \"ymax\": 9610009.056148529}"
  },
  3850: {
    "label": "SWEREF99 RT90 5 gon O emulation",
    "defaultExtent": "{\"xmin\": -4122918.679676733, \"ymin\": -9611349.435959598, \"xmax\": 7123162.371676733, \"ymax\": 9610004.321959592}"
  },
  3851: {
    "label": "NZGD 2000 NZ Continental Shelf 2000",
    "defaultExtent": "{\"xmin\": -33815688.62250177, \"ymin\": -17707159.95540201, \"xmax\": 39815688.62250275, \"ymax\": 36486181.81613456}"
  },
  3852: {
    "label": "RSRGD2000 DGLC2000",
    "defaultExtent": "{\"xmin\": -32993972.019919436, \"ymin\": -33415712.795667734, \"xmax\": 33993972.01989764, \"ymax\": 33493972.016104672}"
  },
  3854: {
    "label": "SWEREF99 County ST74",
    "defaultExtent": "{\"xmin\": -5522802.4546290785, \"ymin\": -16111202.431062495, \"xmax\": 5723167.935829078, \"ymax\": 3109962.18966249}"
  },
  3857: {
    "label": "WGS 1984 Web Mercator Auxiliary Sphere",
    "defaultExtent": "{\"xmin\": -20037507.0671618, \"ymin\": -20037507.0671618, \"xmax\": 20037507.0671618, \"ymax\": 20037507.0671618}"
  },
  3873: {
    "label": "ETRS 1989 GK19FIN",
    "defaultExtent": "{\"xmin\": 13876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 25123012.972913165, \"ymax\": 9610629.786873637}"
  },
  3874: {
    "label": "ETRS 1989 GK20FIN",
    "defaultExtent": "{\"xmin\": 14876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 26123012.972913165, \"ymax\": 9610629.786873637}"
  },
  3875: {
    "label": "ETRS 1989 GK21FIN",
    "defaultExtent": "{\"xmin\": 15876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 27123012.972913165, \"ymax\": 9610629.786873637}"
  },
  3876: {
    "label": "ETRS 1989 GK22FIN",
    "defaultExtent": "{\"xmin\": 16876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 28123012.97291317, \"ymax\": 9610629.786873637}"
  },
  3877: {
    "label": "ETRS 1989 GK23FIN",
    "defaultExtent": "{\"xmin\": 17876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 29123012.97291316, \"ymax\": 9610629.786873637}"
  },
  3878: {
    "label": "ETRS 1989 GK24FIN",
    "defaultExtent": "{\"xmin\": 18876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 30123012.972913165, \"ymax\": 9610629.786873637}"
  },
  3879: {
    "label": "ETRS 1989 GK25FIN",
    "defaultExtent": "{\"xmin\": 19876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 31123012.972913165, \"ymax\": 9610629.786873637}"
  },
  3880: {
    "label": "ETRS 1989 GK26FIN",
    "defaultExtent": "{\"xmin\": 20876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 32123012.972913165, \"ymax\": 9610629.786873637}"
  },
  3881: {
    "label": "ETRS 1989 GK27FIN",
    "defaultExtent": "{\"xmin\": 21876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 33123012.972913165, \"ymax\": 9610629.786873637}"
  },
  3882: {
    "label": "ETRS 1989 GK28FIN",
    "defaultExtent": "{\"xmin\": 22876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 34123012.97291316, \"ymax\": 9610629.786873637}"
  },
  3883: {
    "label": "ETRS 1989 GK29FIN",
    "defaultExtent": "{\"xmin\": 23876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 35123012.97291316, \"ymax\": 9610629.786873637}"
  },
  3884: {
    "label": "ETRS 1989 GK30FIN",
    "defaultExtent": "{\"xmin\": 24876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 36123012.97291316, \"ymax\": 9610629.786873637}"
  },
  3885: {
    "label": "ETRS 1989 GK31FIN",
    "defaultExtent": "{\"xmin\": 25876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 37123012.97291317, \"ymax\": 9610629.786873637}"
  },
  3889: {
    "label": "GCS IGRS",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  3890: {
    "label": "IGRS UTM Zone 37N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767723999, \"ymax\": 9606785.534958888}"
  },
  3891: {
    "label": "IGRS UTM Zone 38N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  3892: {
    "label": "IGRS UTM Zone 39N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724002, \"ymax\": 9606785.534958888}"
  },
  3893: {
    "label": "ED 1950 Iraq National Grid",
    "defaultExtent": "{\"xmin\": -4819881.527445886, \"ymin\": -12815464.346068703, \"xmax\": 6419881.527445884, \"ymax\": 6394865.386360388}"
  },
  3906: {
    "label": "GCS MGI 1901",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  3907: {
    "label": "MGI 1901 Balkans 5",
    "defaultExtent": "{\"xmin\": -121783.47806765512, \"ymin\": -9608608.17013799, \"xmax\": 11121783.478067655, \"ymax\": 9608608.170137983}"
  },
  3908: {
    "label": "MGI 1901 Balkans 6",
    "defaultExtent": "{\"xmin\": 878216.5219323449, \"ymin\": -9608608.17013799, \"xmax\": 12121783.478067655, \"ymax\": 9608608.170137983}"
  },
  3909: {
    "label": "MGI 1901 Balkans 7",
    "defaultExtent": "{\"xmin\": 1878216.521932345, \"ymin\": -9608608.17013799, \"xmax\": 13121783.478067655, \"ymax\": 9608608.170137983}"
  },
  3910: {
    "label": "MGI 1901 Balkans 8",
    "defaultExtent": "{\"xmin\": 2878216.521932345, \"ymin\": -9608608.17013799, \"xmax\": 14121783.478067655, \"ymax\": 9608608.170137983}"
  },
  3911: {
    "label": "MGI 1901 Slovenia Grid",
    "defaultExtent": "{\"xmin\": -5121783.478067655, \"ymin\": -9608608.17013799, \"xmax\": 6121783.478067655, \"ymax\": 9608608.170137983}"
  },
  3912: {
    "label": "MGI 1901 Slovene National Grid",
    "defaultExtent": "{\"xmin\": -5121783.478067655, \"ymin\": -14608608.17013799, \"xmax\": 6121783.478067655, \"ymax\": 4608608.170137983}"
  },
  3920: {
    "label": "Puerto Rico UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  3942: {
    "label": "RGF 1993 CC42",
    "defaultExtent": "{\"xmin\": -35051448.18907783, \"ymin\": -28457980.686106548, \"xmax\": 38451448.18895528, \"ymax\": 26916933.26982878}"
  },
  3943: {
    "label": "RGF 1993 CC43",
    "defaultExtent": "{\"xmin\": -34943779.29521661, \"ymin\": -27594174.63047944, \"xmax\": 38343779.29558745, \"ymax\": 28880082.19110097}"
  },
  3944: {
    "label": "RGF 1993 CC44",
    "defaultExtent": "{\"xmin\": -34843552.01319313, \"ymin\": -26728860.3200193, \"xmax\": 38243552.013392776, \"ymax\": 30797212.13740722}"
  },
  3945: {
    "label": "RGF 1993 CC45",
    "defaultExtent": "{\"xmin\": -34749950.904950865, \"ymin\": -25861843.033431847, \"xmax\": 38149950.905173525, \"ymax\": 32667699.001975343}"
  },
  3946: {
    "label": "RGF 1993 CC46",
    "defaultExtent": "{\"xmin\": -34662214.54416548, \"ymin\": -24992928.906756792, \"xmax\": 38062214.544329, \"ymax\": 34491103.94133879}"
  },
  3947: {
    "label": "RGF 1993 CC47",
    "defaultExtent": "{\"xmin\": -34579629.40122977, \"ymin\": -24121924.49784196, \"xmax\": 37979629.40116371, \"ymax\": 36267168.403163895}"
  },
  3948: {
    "label": "RGF 1993 CC48",
    "defaultExtent": "{\"xmin\": -34501524.472083144, \"ymin\": -23248636.385692276, \"xmax\": 37901524.471872576, \"ymax\": 37995808.18064996}"
  },
  3949: {
    "label": "RGF 1993 CC49",
    "defaultExtent": "{\"xmin\": -34427266.54431524, \"ymin\": -22372870.79910636, \"xmax\": 37827266.54419748, \"ymax\": 39677106.57761696}"
  },
  3950: {
    "label": "RGF 1993 CC50",
    "defaultExtent": "{\"xmin\": -34356256.0096544, \"ymin\": -21494433.27071369, \"xmax\": 37756256.00955687, \"ymax\": 41311306.77140893}"
  },
  3968: {
    "label": "NAD 1983 Virginia Lambert",
    "defaultExtent": "{\"xmin\": -37232654.40323075, \"ymin\": -28884490.203028552, \"xmax\": 37232654.40269785, \"ymax\": 21961257.357331395}"
  },
  3969: {
    "label": "NAD 1983 HARN Virginia Lambert",
    "defaultExtent": "{\"xmin\": -37232654.40323075, \"ymin\": -28884490.203028552, \"xmax\": 37232654.40269785, \"ymax\": 21961257.357331395}"
  },
  3970: {
    "label": "NAD 1983 NSRS2007 Virginia Lambert",
    "defaultExtent": "{\"xmin\": -37232654.40323075, \"ymin\": -28884490.203028552, \"xmax\": 37232654.40269785, \"ymax\": 21961257.357331395}"
  },
  3973: {
    "label": "WGS 1984 EASE Grid North",
    "defaultExtent": "{\"xmin\": -12730027.198090494, \"ymin\": -12730027.198090555, \"xmax\": 12730027.198090494, \"ymax\": 12730027.1980903}"
  },
  3974: {
    "label": "WGS 1984 EASE Grid South",
    "defaultExtent": "{\"xmin\": -12730027.198090494, \"ymin\": -12730027.1980903, \"xmax\": 12730027.198090494, \"ymax\": 12730027.198090555}"
  },
  3975: {
    "label": "WGS 1984 EASE Grid Global",
    "defaultExtent": "{\"xmin\": -17367529.33951001, \"ymin\": -7314614.058496474, \"xmax\": 17367529.33951001, \"ymax\": 7314614.058496474}"
  },
  3976: {
    "label": "WGS 1984 NSIDC Sea Ice Polar Stereographic South",
    "defaultExtent": "{\"xmin\": -30645181.31098572, \"ymin\": -30645181.31098526, \"xmax\": 30645181.31098572, \"ymax\": 30645181.31098587}"
  },
  3978: {
    "label": "NAD 1983 Canada Atlas Lambert",
    "defaultExtent": "{\"xmin\": -34655646.927964896, \"ymin\": -30001471.663722225, \"xmax\": 34655646.92812155, \"ymax\": 37640132.21150307}"
  },
  3979: {
    "label": "NAD 1983 CSRS Canada Atlas Lambert",
    "defaultExtent": "{\"xmin\": -34655646.927964896, \"ymin\": -30001471.663722225, \"xmax\": 34655646.92812155, \"ymax\": 37640132.21150307}"
  },
  3986: {
    "label": "Katanga 1955 Katanga Gauss Zone A",
    "defaultExtent": "{\"xmin\": -5423129.884675011, \"ymin\": -8115345.729631577, \"xmax\": 5823129.88467501, \"ymax\": 11105720.909663863}"
  },
  3987: {
    "label": "Katanga 1955 Katanga Gauss Zone B",
    "defaultExtent": "{\"xmin\": -5423129.884675011, \"ymin\": -8115345.729631577, \"xmax\": 5823129.884675011, \"ymax\": 11105720.909663863}"
  },
  3988: {
    "label": "Katanga 1955 Katanga Gauss Zone C",
    "defaultExtent": "{\"xmin\": -5423129.884675011, \"ymin\": -8115345.729631577, \"xmax\": 5823129.884675011, \"ymax\": 11105720.909663863}"
  },
  3989: {
    "label": "Katanga 1955 Katanga Gauss Zone D",
    "defaultExtent": "{\"xmin\": -5423129.884675011, \"ymin\": -8115345.729631577, \"xmax\": 5823129.88467501, \"ymax\": 11105720.909663863}"
  },
  3991: {
    "label": "Puerto Rico StatePlane Puerto Rico FIPS 5201",
    "defaultExtent": "{\"xmin\": -124897210.51208878, \"ymin\": -87003780.852594, \"xmax\": 125897210.51239304, \"ymax\": 49074694.809181586}"
  },
  3992: {
    "label": "Puerto Rico StatePlane Virgin Islands St Croix FIPS 5202",
    "defaultExtent": "{\"xmin\": -124897210.51208878, \"ymin\": -86903780.852594, \"xmax\": 125897210.51239304, \"ymax\": 49174694.809181586}"
  },
  3994: {
    "label": "WGS 1984 Mercator 41",
    "defaultExtent": "{\"xmin\": -15144332.356427835, \"ymin\": -15112110.29746947, \"xmax\": 15144332.356427845, \"ymax\": 15112110.297725484}"
  },
  3995: {
    "label": "WGS 1984 Arctic Polar Stereographic",
    "defaultExtent": "{\"xmin\": -30635955.947272837, \"ymin\": -30635955.947272986, \"xmax\": 30635955.947272837, \"ymax\": 30635955.947272375}"
  },
  3996: {
    "label": "WGS 1984 IBCAO Polar Stereographic",
    "defaultExtent": "{\"xmin\": -30603405.547592234, \"ymin\": -30603405.547592383, \"xmax\": 30603405.547592234, \"ymax\": 30603405.547591772}"
  },
  3997: {
    "label": "WGS 1984 Dubai Local TM",
    "defaultExtent": "{\"xmin\": -5123012.972888589, \"ymin\": -9610629.786962306, \"xmax\": 6123012.97288859, \"ymax\": 9610629.7869623}"
  },
  4001: {
    "label": "GCS Airy 1830",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4002: {
    "label": "GCS Airy Modified",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4003: {
    "label": "GCS Australian",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4004: {
    "label": "GCS Bessel 1841",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4005: {
    "label": "GCS Bessel Modified",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4006: {
    "label": "GCS Bessel Namibia",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4007: {
    "label": "GCS Clarke 1858",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4008: {
    "label": "GCS Clarke 1866",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4009: {
    "label": "GCS Clarke 1866 Michigan",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4010: {
    "label": "GCS Clarke 1880 Benoit",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4011: {
    "label": "GCS Clarke 1880 IGN",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4012: {
    "label": "GCS Clarke 1880 RGS",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4013: {
    "label": "GCS Clarke 1880 Arc",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4014: {
    "label": "GCS Clarke 1880 SGA",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4015: {
    "label": "GCS Everest Adj 1937",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4016: {
    "label": "GCS Everest def 1967",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4018: {
    "label": "GCS Everest Modified",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4019: {
    "label": "GCS GRS 1980",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4020: {
    "label": "GCS Helmert 1906",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4021: {
    "label": "GCS Indonesian",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4022: {
    "label": "GCS International 1924",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4023: {
    "label": "GCS MOLDREF99",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4024: {
    "label": "GCS Krasovsky 1940",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4025: {
    "label": "GCS NWL 9D",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4026: {
    "label": "MOLDREF99 Moldova TM",
    "defaultExtent": "{\"xmin\": -5422675.5921347905, \"ymin\": -14610053.14908643, \"xmax\": 5822675.5921347905, \"ymax\": 4610053.149086425}"
  },
  4027: {
    "label": "GCS Plessis 1817",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4028: {
    "label": "GCS Struve 1860",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4029: {
    "label": "GCS War Office",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4031: {
    "label": "GCS GEM 10C",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4032: {
    "label": "GCS OSU 86F",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4033: {
    "label": "GCS OSU 91A",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4034: {
    "label": "GCS Clarke 1880",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4035: {
    "label": "GCS Sphere",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4036: {
    "label": "GCS GRS 1967",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4037: {
    "label": "WGS 1984 TMzn35N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  4038: {
    "label": "WGS 1984 TMzn36N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.7676994335, \"ymax\": 9606785.535047516}"
  },
  4042: {
    "label": "GCS Everest 1830",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4044: {
    "label": "GCS Everest def 1962",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4045: {
    "label": "GCS Everest def 1975",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4046: {
    "label": "GCS RGRDC 2005",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4047: {
    "label": "GCS Sphere GRS 1980 Authalic",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4048: {
    "label": "RGRDC 2005 Congo TM Zone 12",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": 390331.2761050463, \"xmax\": 6122450.671615874, \"ymax\": 19609668.72389495}"
  },
  4049: {
    "label": "RGRDC 2005 Congo TM Zone 14",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": 390331.2761050463, \"xmax\": 6122450.6716158725, \"ymax\": 19609668.72389495}"
  },
  4050: {
    "label": "RGRDC 2005 Congo TM Zone 16",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": 390331.2761050463, \"xmax\": 6122450.671615874, \"ymax\": 19609668.72389495}"
  },
  4051: {
    "label": "RGRDC 2005 Congo TM Zone 18",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": 390331.2761050463, \"xmax\": 6122450.671615874, \"ymax\": 19609668.72389495}"
  },
  4052: {
    "label": "GCS Sphere Clarke 1866 Authalic",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4053: {
    "label": "GCS Sphere International 1924 Authalic",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4054: {
    "label": "GCS Hughes 1980",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4056: {
    "label": "RGRDC 2005 Congo TM Zone 20",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": 390331.2761050463, \"xmax\": 6122450.671615874, \"ymax\": 19609668.72389495}"
  },
  4057: {
    "label": "RGRDC 2005 Congo TM Zone 22",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": 390331.2761050463, \"xmax\": 6122450.671615875, \"ymax\": 19609668.72389495}"
  },
  4058: {
    "label": "RGRDC 2005 Congo TM Zone 24",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": 390331.2761050463, \"xmax\": 6122450.6716158725, \"ymax\": 19609668.72389495}"
  },
  4059: {
    "label": "RGRDC 2005 Congo TM Zone 26",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": 390331.2761050463, \"xmax\": 6122450.671615874, \"ymax\": 19609668.72389495}"
  },
  4060: {
    "label": "RGRDC 2005 Congo TM Zone 28",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": 390331.2761050463, \"xmax\": 6122450.671615874, \"ymax\": 19609668.72389495}"
  },
  4061: {
    "label": "RGRDC 2005 UTM Zone 33S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  4062: {
    "label": "RGRDC 2005 UTM Zone 34S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  4063: {
    "label": "RGRDC 2005 UTM Zone 35S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  4071: {
    "label": "Chua UTM Zone 23S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  4075: {
    "label": "GCS SREF98",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4081: {
    "label": "GCS REGCAN95",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4082: {
    "label": "REGCAN95 UTM Zone 27N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  4083: {
    "label": "REGCAN95 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  4093: {
    "label": "ETRS 1989 DKTM1",
    "defaultExtent": "{\"xmin\": -5422900.5126537075, \"ymin\": -14610437.574277904, \"xmax\": 5822900.5126537075, \"ymax\": 4610437.574277898}"
  },
  4094: {
    "label": "ETRS 1989 DKTM2",
    "defaultExtent": "{\"xmin\": -5222900.5126537075, \"ymin\": -14610437.574277904, \"xmax\": 6022900.5126537075, \"ymax\": 4610437.574277898}"
  },
  4095: {
    "label": "ETRS 1989 DKTM3",
    "defaultExtent": "{\"xmin\": -5022900.5126537075, \"ymin\": -14610437.574277904, \"xmax\": 6222900.5126537075, \"ymax\": 4610437.574277898}"
  },
  4096: {
    "label": "ETRS 1989 DKTM4",
    "defaultExtent": "{\"xmin\": -4823012.972913165, \"ymin\": -14610629.786873642, \"xmax\": 6423012.972913165, \"ymax\": 4610629.786873637}"
  },
  4120: {
    "label": "GCS Greek",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4121: {
    "label": "GCS GGRS 1987",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4122: {
    "label": "GCS ATS 1977",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4123: {
    "label": "GCS KKJ",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4124: {
    "label": "GCS RT 1990",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4125: {
    "label": "GCS Samboja",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4127: {
    "label": "GCS Tete",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4128: {
    "label": "GCS Madzansua",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4129: {
    "label": "GCS Observatario",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4130: {
    "label": "GCS Moznet",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4131: {
    "label": "GCS Indian 1960",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4132: {
    "label": "GCS FD 1958",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4133: {
    "label": "GCS Estonia 1992",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4134: {
    "label": "GCS PDO 1993",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4135: {
    "label": "GCS Old Hawaiian",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4136: {
    "label": "GCS St Lawrence Island",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4137: {
    "label": "GCS St Paul Island",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4138: {
    "label": "GCS St George Island",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4139: {
    "label": "GCS Puerto Rico",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4141: {
    "label": "GCS Israel",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4142: {
    "label": "GCS Locodjo 1965",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4143: {
    "label": "GCS Abidjan 1987",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4144: {
    "label": "GCS Kalianpur 1937",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4145: {
    "label": "GCS Kalianpur 1962",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4146: {
    "label": "GCS Kalianpur 1975",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4147: {
    "label": "GCS Hanoi 1972",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4148: {
    "label": "GCS Hartebeesthoek 1994",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4149: {
    "label": "GCS CH1903",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4150: {
    "label": "GCS CH1903+",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4151: {
    "label": "GCS Swiss TRF 1995",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4152: {
    "label": "GCS North American 1983 HARN",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4153: {
    "label": "GCS Rassadiran",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4154: {
    "label": "GCS European 1950 ED77",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4155: {
    "label": "GCS Dabola 1981",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4156: {
    "label": "GCS S JTSK",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4157: {
    "label": "GCS Mount Dillon",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4158: {
    "label": "GCS Naparima 1955",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4159: {
    "label": "GCS European Libyan Datum 1979",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4160: {
    "label": "GCS Chos Malal 1914",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4161: {
    "label": "GCS Pampa del Castillo",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4162: {
    "label": "GCS Korean Datum 1985",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4163: {
    "label": "GCS Yemen NGN 1996",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4164: {
    "label": "GCS South Yemen",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4165: {
    "label": "GCS Bissau",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4166: {
    "label": "GCS Korean Datum 1995",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4167: {
    "label": "GCS NZGD 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4168: {
    "label": "GCS Accra",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4169: {
    "label": "GCS American Samoa 1962",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4170: {
    "label": "GCS SIRGAS",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4171: {
    "label": "GCS RGF 1993",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4172: {
    "label": "GCS POSGAR",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4173: {
    "label": "GCS IRENET95",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4174: {
    "label": "GCS Sierra Leone 1924",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4175: {
    "label": "GCS Sierra Leone 1968",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4176: {
    "label": "GCS Australian Antarctic 1998",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4178: {
    "label": "GCS Pulkovo 1942 Adj 1983",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4179: {
    "label": "GCS Pulkovo 1942 Adj 1958",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4180: {
    "label": "GCS Estonia 1997",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4181: {
    "label": "GCS Luxembourg 1930",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4182: {
    "label": "GCS Azores Occidental 1939",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4183: {
    "label": "GCS Azores Central 1948",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4184: {
    "label": "GCS Azores Oriental 1940",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4185: {
    "label": "GCS Madeira 1936",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4188: {
    "label": "GCS OSNI 1952",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4189: {
    "label": "GCS REGVEN",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4190: {
    "label": "GCS POSGAR 1998",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4191: {
    "label": "GCS Albanian 1987",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4192: {
    "label": "GCS Douala 1948",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4193: {
    "label": "GCS Manoca 1962",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4194: {
    "label": "GCS Qornoq 1927",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4195: {
    "label": "GCS Scoresbysund 1952",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4196: {
    "label": "GCS Ammassalik 1958",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4197: {
    "label": "GCS Garoua",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4198: {
    "label": "GCS Kousseri",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4199: {
    "label": "GCS Egypt 1930",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4200: {
    "label": "GCS Pulkovo 1995",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4201: {
    "label": "GCS Adindan",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4202: {
    "label": "GCS Australian 1966",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4203: {
    "label": "GCS Australian 1984",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4204: {
    "label": "GCS Ain el Abd 1970",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4205: {
    "label": "GCS Afgooye",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4206: {
    "label": "GCS Agadez",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4207: {
    "label": "GCS Lisbon",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4208: {
    "label": "GCS Aratu",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4209: {
    "label": "GCS Arc 1950",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4210: {
    "label": "GCS Arc 1960",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4211: {
    "label": "GCS Batavia",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4212: {
    "label": "GCS Barbados 1938",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4213: {
    "label": "GCS Beduaram",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4214: {
    "label": "GCS Beijing 1954",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4215: {
    "label": "GCS Belge 1950",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4216: {
    "label": "GCS Bermuda 1957",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4217: {
    "label": "NAD 1983 BLM Zone 59N",
    "defaultExtent": "{\"xmin\": -16800372.461274423, \"ymin\": -31518262.20920937, \"xmax\": 20081205.794607848, \"ymax\": 31518262.2092094}"
  },
  4218: {
    "label": "GCS Bogota",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4219: {
    "label": "GCS Bukit Rimpah",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4220: {
    "label": "GCS Camacupa",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4221: {
    "label": "GCS Campo Inchauspe",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4222: {
    "label": "GCS Cape",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4223: {
    "label": "GCS Carthage",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4224: {
    "label": "GCS Chua",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4225: {
    "label": "GCS Corrego Alegre",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4226: {
    "label": "GCS Cote d Ivoire",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4227: {
    "label": "GCS Deir ez Zor",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4228: {
    "label": "GCS Douala",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4229: {
    "label": "GCS Egypt 1907",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4230: {
    "label": "GCS European 1950",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4231: {
    "label": "GCS European 1987",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4232: {
    "label": "GCS Fahud",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4235: {
    "label": "GCS Guyane Francaise",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4236: {
    "label": "GCS Hu Tzu Shan",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4237: {
    "label": "GCS Hungarian 1972",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4238: {
    "label": "GCS Indonesian 1974",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4239: {
    "label": "GCS Indian 1954",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4240: {
    "label": "GCS Indian 1975",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4241: {
    "label": "GCS Jamaica 1875",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4242: {
    "label": "GCS Jamaica 1969",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4243: {
    "label": "GCS Kalianpur 1880",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4244: {
    "label": "GCS Kandawala",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4245: {
    "label": "GCS Kertau",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4246: {
    "label": "GCS Kuwait Oil Company",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4247: {
    "label": "GCS La Canoa",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4248: {
    "label": "GCS Provisional S American 1956",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4249: {
    "label": "GCS Lake",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4250: {
    "label": "GCS Leigon",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4251: {
    "label": "GCS Liberia 1964",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4252: {
    "label": "GCS Lome",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4253: {
    "label": "GCS Luzon 1911",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4254: {
    "label": "GCS Hito XVIII 1963",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4255: {
    "label": "GCS Herat North",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4256: {
    "label": "GCS Mahe 1971",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4257: {
    "label": "GCS Makassar",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4258: {
    "label": "GCS ETRS 1989",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4259: {
    "label": "GCS Malongo 1987",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4260: {
    "label": "GCS Manoca",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4261: {
    "label": "GCS Merchich",
    "defaultExtent": "{\"xmin\": -199.99998726760407, \"ymin\": -94.50125310140274, \"xmax\": 199.99998726760407, \"ymax\": 94.50125310140272}"
  },
  4262: {
    "label": "GCS Massawa",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4263: {
    "label": "GCS Minna",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4265: {
    "label": "GCS Monte Mario",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4266: {
    "label": "GCS Mporaloko",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4267: {
    "label": "GCS North American 1927",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4269: {
    "label": "GCS North American 1983",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4270: {
    "label": "GCS Nahrwan 1967",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4271: {
    "label": "GCS Naparima 1972",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4272: {
    "label": "GCS New Zealand 1949",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4273: {
    "label": "GCS NGO 1948",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4274: {
    "label": "GCS Datum 73",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4275: {
    "label": "GCS NTF",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4276: {
    "label": "GCS NSWC 9Z 2",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4277: {
    "label": "GCS OSGB 1936",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4278: {
    "label": "GCS OSGB 1970 SN",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4279: {
    "label": "GCS OS SN 1980",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4280: {
    "label": "GCS Padang 1884",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4281: {
    "label": "GCS Palestine 1923",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4282: {
    "label": "GCS Pointe Noire",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4283: {
    "label": "GCS GDA 1994",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4284: {
    "label": "GCS Pulkovo 1942",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4285: {
    "label": "GCS Qatar 1974",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4286: {
    "label": "GCS Qatar 1948",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4288: {
    "label": "GCS Loma Quintana",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4289: {
    "label": "GCS Amersfoort",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4292: {
    "label": "GCS Sapper Hill 1943",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4293: {
    "label": "GCS Schwarzeck",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4294: {
    "label": "GCS Segora",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4295: {
    "label": "GCS Serindung",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4296: {
    "label": "GCS Sudan",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4297: {
    "label": "GCS Tananarive 1925",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4298: {
    "label": "GCS Timbalai 1948",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4299: {
    "label": "GCS TM65",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4300: {
    "label": "GCS TM75",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4301: {
    "label": "GCS Tokyo",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4302: {
    "label": "GCS Trinidad 1903",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4303: {
    "label": "GCS Trucial Coast 1948",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4304: {
    "label": "GCS Voirol 1875",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4305: {
    "label": "GCS Voirol Unifie 1960",
    "defaultExtent": "{\"xmin\": -199.99998726760407, \"ymin\": -94.50125310140274, \"xmax\": 199.99998726760407, \"ymax\": 94.50125310140272}"
  },
  4306: {
    "label": "GCS Bern 1938",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4307: {
    "label": "GCS Nord Sahara 1959",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4308: {
    "label": "GCS RT38",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4309: {
    "label": "GCS Yacare",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4310: {
    "label": "GCS Yoff",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4311: {
    "label": "GCS Zanderij",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4312: {
    "label": "GCS MGI",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4313: {
    "label": "GCS Belge 1972",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4314: {
    "label": "GCS Deutsches Hauptdreiecksnetz",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4315: {
    "label": "GCS Conakry 1905",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4316: {
    "label": "GCS Dealul Piscului 1933",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4317: {
    "label": "GCS Dealul Piscului 1970",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4318: {
    "label": "GCS NGN",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4319: {
    "label": "GCS KUDAMS",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4322: {
    "label": "GCS WGS 1972",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4324: {
    "label": "GCS WGS 1972 BE",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4326: {
    "label": "GCS WGS 1984",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4399: {
    "label": "NAD 1927 BLM Zone 59N",
    "defaultExtent": "{\"xmin\": -16800755.875852548, \"ymin\": -31517945.842916153, \"xmax\": 20081589.20918597, \"ymax\": 31517945.842916183}"
  },
  4400: {
    "label": "NAD 1927 BLM Zone 60N",
    "defaultExtent": "{\"xmin\": -16800755.87585256, \"ymin\": -31517945.842916153, \"xmax\": 20081589.20918597, \"ymax\": 31517945.842916183}"
  },
  4401: {
    "label": "NAD 1927 BLM Zone 1N",
    "defaultExtent": "{\"xmin\": -16800755.875852533, \"ymin\": -31517945.842916153, \"xmax\": 20081589.20918597, \"ymax\": 31517945.842916183}"
  },
  4402: {
    "label": "NAD 1927 BLM Zone 2N",
    "defaultExtent": "{\"xmin\": -16800755.875852533, \"ymin\": -31517945.842916153, \"xmax\": 20081589.20918597, \"ymax\": 31517945.842916183}"
  },
  4403: {
    "label": "NAD 1927 BLM Zone 3N",
    "defaultExtent": "{\"xmin\": -16800755.87585256, \"ymin\": -31517945.842916153, \"xmax\": 20081589.20918597, \"ymax\": 31517945.842916183}"
  },
  4404: {
    "label": "NAD 1927 BLM Zone 4N",
    "defaultExtent": "{\"xmin\": -16800755.875852533, \"ymin\": -31517945.842916153, \"xmax\": 20081589.209185977, \"ymax\": 31517945.84291619}"
  },
  4405: {
    "label": "NAD 1927 BLM Zone 5N",
    "defaultExtent": "{\"xmin\": -16800755.875852533, \"ymin\": -31517945.842916153, \"xmax\": 20081589.20918597, \"ymax\": 31517945.842916183}"
  },
  4406: {
    "label": "NAD 1927 BLM Zone 6N",
    "defaultExtent": "{\"xmin\": -16800755.87585256, \"ymin\": -31517945.842916153, \"xmax\": 20081589.20918597, \"ymax\": 31517945.842916183}"
  },
  4407: {
    "label": "NAD 1927 BLM Zone 7N",
    "defaultExtent": "{\"xmin\": -16800755.875852533, \"ymin\": -31517945.842916153, \"xmax\": 20081589.209185977, \"ymax\": 31517945.84291619}"
  },
  4408: {
    "label": "NAD 1927 BLM Zone 8N",
    "defaultExtent": "{\"xmin\": -16800749.972081684, \"ymin\": -31517945.842984416, \"xmax\": 20081589.209185943, \"ymax\": 31517945.842984397}"
  },
  4409: {
    "label": "NAD 1927 BLM Zone 9N",
    "defaultExtent": "{\"xmin\": -16800755.87585261, \"ymin\": -31517945.842984416, \"xmax\": 20081589.209185943, \"ymax\": 31517945.842984397}"
  },
  4410: {
    "label": "NAD 1927 BLM Zone 10N",
    "defaultExtent": "{\"xmin\": -16800755.87585261, \"ymin\": -31517945.842984416, \"xmax\": 20081589.20918595, \"ymax\": 31517945.842984397}"
  },
  4411: {
    "label": "NAD 1927 BLM Zone 11N",
    "defaultExtent": "{\"xmin\": -16800755.87585261, \"ymin\": -31517945.842984416, \"xmax\": 20081589.209185943, \"ymax\": 31517945.842984397}"
  },
  4412: {
    "label": "NAD 1927 BLM Zone 12N",
    "defaultExtent": "{\"xmin\": -16800755.875852603, \"ymin\": -31517945.842984416, \"xmax\": 20081589.209185943, \"ymax\": 31517945.842984397}"
  },
  4413: {
    "label": "NAD 1927 BLM Zone 13N",
    "defaultExtent": "{\"xmin\": -16800755.87585261, \"ymin\": -31517945.842984416, \"xmax\": 20081589.209185943, \"ymax\": 31517945.842984397}"
  },
  4414: {
    "label": "NAD 1983 HARN Guam Map Grid",
    "defaultExtent": "{\"xmin\": -5523012.972913157, \"ymin\": -10903656.911824899, \"xmax\": 5723012.972913173, \"ymax\": 8317602.661880766}"
  },
  4415: {
    "label": "Katanga 1955 Katanga Lambert",
    "defaultExtent": "{\"xmin\": -30848249.553901322, \"ymin\": -17472589.687912326, \"xmax\": 31848249.55390133, \"ymax\": 26686341.409581177}"
  },
  4417: {
    "label": "Pulkovo 1942 Adj 1983 3 Degree GK Zone 7",
    "defaultExtent": "{\"xmin\": 1876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 13123107.467526717, \"ymax\": 9610795.116133094}"
  },
  4418: {
    "label": "NAD 1927 BLM Zone 18N",
    "defaultExtent": "{\"xmin\": -16800755.87585262, \"ymin\": -31517945.842984416, \"xmax\": 20081589.209185943, \"ymax\": 31517945.842984397}"
  },
  4419: {
    "label": "NAD 1927 BLM Zone 19N",
    "defaultExtent": "{\"xmin\": -16800755.87585262, \"ymin\": -31517945.842984416, \"xmax\": 20081589.209185943, \"ymax\": 31517945.842984397}"
  },
  4420: {
    "label": "NAD 1983 BLM Zone 60N",
    "defaultExtent": "{\"xmin\": -16800372.461274434, \"ymin\": -31518262.20920937, \"xmax\": 20081205.794607848, \"ymax\": 31518262.2092094}"
  },
  4421: {
    "label": "NAD 1983 BLM Zone 1N",
    "defaultExtent": "{\"xmin\": -16800372.46127441, \"ymin\": -31518262.20920937, \"xmax\": 20081205.794607848, \"ymax\": 31518262.2092094}"
  },
  4422: {
    "label": "NAD 1983 BLM Zone 2N",
    "defaultExtent": "{\"xmin\": -16800372.46127441, \"ymin\": -31518262.20920937, \"xmax\": 20081205.794607848, \"ymax\": 31518262.2092094}"
  },
  4423: {
    "label": "NAD 1983 BLM Zone 3N",
    "defaultExtent": "{\"xmin\": -16800372.461274434, \"ymin\": -31518262.20920937, \"xmax\": 20081205.794607848, \"ymax\": 31518262.2092094}"
  },
  4424: {
    "label": "NAD 1983 BLM Zone 4N",
    "defaultExtent": "{\"xmin\": -16800372.46127441, \"ymin\": -31518262.20920937, \"xmax\": 20081205.794607855, \"ymax\": 31518262.2092094}"
  },
  4425: {
    "label": "NAD 1983 BLM Zone 5N",
    "defaultExtent": "{\"xmin\": -16800372.46127441, \"ymin\": -31518262.20920937, \"xmax\": 20081205.794607848, \"ymax\": 31518262.2092094}"
  },
  4426: {
    "label": "NAD 1983 BLM Zone 6N",
    "defaultExtent": "{\"xmin\": -16800372.461274434, \"ymin\": -31518262.20920937, \"xmax\": 20081205.794607848, \"ymax\": 31518262.2092094}"
  },
  4427: {
    "label": "NAD 1983 BLM Zone 7N",
    "defaultExtent": "{\"xmin\": -16800372.46127441, \"ymin\": -31518262.20920937, \"xmax\": 20081205.794607855, \"ymax\": 31518262.2092094}"
  },
  4428: {
    "label": "NAD 1983 BLM Zone 8N",
    "defaultExtent": "{\"xmin\": -16800366.557735734, \"ymin\": -31518262.209277626, \"xmax\": 20081205.79460782, \"ymax\": 31518262.209277615}"
  },
  4429: {
    "label": "NAD 1983 BLM Zone 9N",
    "defaultExtent": "{\"xmin\": -16800372.46127449, \"ymin\": -31518262.209277626, \"xmax\": 20081205.79460782, \"ymax\": 31518262.209277615}"
  },
  4430: {
    "label": "NAD 1983 BLM Zone 10N",
    "defaultExtent": "{\"xmin\": -16800372.46127449, \"ymin\": -31518262.209277626, \"xmax\": 20081205.794607826, \"ymax\": 31518262.209277615}"
  },
  4431: {
    "label": "NAD 1983 BLM Zone 11N",
    "defaultExtent": "{\"xmin\": -16800372.46127449, \"ymin\": -31518262.209277626, \"xmax\": 20081205.79460782, \"ymax\": 31518262.209277615}"
  },
  4432: {
    "label": "NAD 1983 BLM Zone 12N",
    "defaultExtent": "{\"xmin\": -16800372.461274482, \"ymin\": -31518262.209277626, \"xmax\": 20081205.79460782, \"ymax\": 31518262.209277615}"
  },
  4433: {
    "label": "NAD 1983 BLM Zone 13N",
    "defaultExtent": "{\"xmin\": -16800372.46127449, \"ymin\": -31518262.209277626, \"xmax\": 20081205.79460782, \"ymax\": 31518262.209277615}"
  },
  4434: {
    "label": "Pulkovo 1942 Adj 1983 3 Degree GK Zone 8",
    "defaultExtent": "{\"xmin\": 2876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 14123107.467526715, \"ymax\": 9610795.116133094}"
  },
  4437: {
    "label": "NAD 1983 NSRS2007 StatePlane Puerto Rico Virgin Isls FIPS 5200",
    "defaultExtent": "{\"xmin\": -38021748.15784241, \"ymin\": -26319807.671320274, \"xmax\": 38421748.157935165, \"ymax\": 15157853.89958689}"
  },
  4438: {
    "label": "NAD 1983 BLM Zone 18N",
    "defaultExtent": "{\"xmin\": -16800372.461274493, \"ymin\": -31518262.209277626, \"xmax\": 20081205.79460782, \"ymax\": 31518262.209277615}"
  },
  4439: {
    "label": "NAD 1983 BLM Zone 19N",
    "defaultExtent": "{\"xmin\": -16800372.461274493, \"ymin\": -31518262.209277626, \"xmax\": 20081205.79460782, \"ymax\": 31518262.209277615}"
  },
  4455: {
    "label": "NAD 1927 StatePlane Pennsylvania South FIPS 3702",
    "defaultExtent": "{\"xmin\": -119176225.37941834, \"ymin\": -96191398.44151953, \"xmax\": 123176225.37856601, \"ymax\": 79587918.36984852}"
  },
  4456: {
    "label": "NAD 1927 StatePlane New York Long Island FIPS 3104",
    "defaultExtent": "{\"xmin\": -119017117.37849772, \"ymin\": -96554571.94067073, \"xmax\": 123017117.38124721, \"ymax\": 80781400.2761189}"
  },
  4457: {
    "label": "NAD 1983 StatePlane South Dakota North FIPS 4001 Feet",
    "defaultExtent": "{\"xmin\": -117605076.22299072, \"ymin\": -98207493.43623132, \"xmax\": 121542076.22279583, \"ymax\": 93980354.82660332}"
  },
  4462: {
    "label": "WGS 1984 Australian Centre for Remote Sensing Lambert",
    "defaultExtent": "{\"xmin\": -39261695.78527637, \"ymin\": -11812132.301104598, \"xmax\": 39261695.78527637, \"ymax\": 27320584.691629503}"
  },
  4463: {
    "label": "GCS RGSPM 2006",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4467: {
    "label": "RGSPM 2006 UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  4470: {
    "label": "GCS RGM 2004",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4471: {
    "label": "RGM 2004 UTM Zone 38S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  4475: {
    "label": "GCS Cadastre 1997",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4483: {
    "label": "GCS Mexican Datum of 1993",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4484: {
    "label": "Mexican Datum 1993 UTM Zone 11N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  4485: {
    "label": "Mexican Datum 1993 UTM Zone 12N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  4486: {
    "label": "Mexican Datum 1993 UTM Zone 13N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  4487: {
    "label": "Mexican Datum 1993 UTM Zone 14N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  4488: {
    "label": "Mexican Datum 1993 UTM Zone 15N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  4489: {
    "label": "Mexican Datum 1993 UTM Zone 16N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958893, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  4490: {
    "label": "GCS China Geodetic Coordinate System 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4491: {
    "label": "CGCS2000 GK Zone 13",
    "defaultExtent": "{\"xmin\": 7876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 19123012.97291317, \"ymax\": 9610629.786873637}"
  },
  4492: {
    "label": "CGCS2000 GK Zone 14",
    "defaultExtent": "{\"xmin\": 8876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 20123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4493: {
    "label": "CGCS2000 GK Zone 15",
    "defaultExtent": "{\"xmin\": 9876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 21123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4494: {
    "label": "CGCS2000 GK Zone 16",
    "defaultExtent": "{\"xmin\": 10876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 22123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4495: {
    "label": "CGCS2000 GK Zone 17",
    "defaultExtent": "{\"xmin\": 11876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 23123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4496: {
    "label": "CGCS2000 GK Zone 18",
    "defaultExtent": "{\"xmin\": 12876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 24123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4497: {
    "label": "CGCS2000 GK Zone 19",
    "defaultExtent": "{\"xmin\": 13876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 25123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4498: {
    "label": "CGCS2000 GK Zone 20",
    "defaultExtent": "{\"xmin\": 14876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 26123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4499: {
    "label": "CGCS2000 GK Zone 21",
    "defaultExtent": "{\"xmin\": 15876987.027086832, \"ymin\": -9610629.786873642, \"xmax\": 27123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4500: {
    "label": "CGCS2000 GK Zone 22",
    "defaultExtent": "{\"xmin\": 16876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 28123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4501: {
    "label": "CGCS2000 GK Zone 23",
    "defaultExtent": "{\"xmin\": 17876987.027086835, \"ymin\": -9610629.786873639, \"xmax\": 29123011.172790904, \"ymax\": 9610629.786873637}"
  },
  4502: {
    "label": "CGCS2000 GK CM 75E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913167, \"ymax\": 9610629.786873637}"
  },
  4503: {
    "label": "CGCS2000 GK CM 81E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4504: {
    "label": "CGCS2000 GK CM 87E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913163, \"ymax\": 9610629.786873637}"
  },
  4505: {
    "label": "CGCS2000 GK CM 93E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913163, \"ymax\": 9610629.786873637}"
  },
  4506: {
    "label": "CGCS2000 GK CM 99E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4507: {
    "label": "CGCS2000 GK CM 105E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4508: {
    "label": "CGCS2000 GK CM 111E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913163, \"ymax\": 9610629.786873637}"
  },
  4509: {
    "label": "CGCS2000 GK CM 117E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4510: {
    "label": "CGCS2000 GK CM 123E",
    "defaultExtent": "{\"xmin\": -5123012.972913167, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4511: {
    "label": "CGCS2000 GK CM 129E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4512: {
    "label": "CGCS2000 GK CM 135E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873639, \"xmax\": 6123011.1727909045, \"ymax\": 9610629.786873637}"
  },
  4513: {
    "label": "CGCS2000 3 Degree GK Zone 25",
    "defaultExtent": "{\"xmin\": 19876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 31123012.97291317, \"ymax\": 9610629.786873637}"
  },
  4514: {
    "label": "CGCS2000 3 Degree GK Zone 26",
    "defaultExtent": "{\"xmin\": 20876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 32123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4515: {
    "label": "CGCS2000 3 Degree GK Zone 27",
    "defaultExtent": "{\"xmin\": 21876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 33123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4516: {
    "label": "CGCS2000 3 Degree GK Zone 28",
    "defaultExtent": "{\"xmin\": 22876987.02708683, \"ymin\": -9610629.786873642, \"xmax\": 34123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4517: {
    "label": "CGCS2000 3 Degree GK Zone 29",
    "defaultExtent": "{\"xmin\": 23876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 35123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4518: {
    "label": "CGCS2000 3 Degree GK Zone 30",
    "defaultExtent": "{\"xmin\": 24876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 36123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4519: {
    "label": "CGCS2000 3 Degree GK Zone 31",
    "defaultExtent": "{\"xmin\": 25876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 37123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4520: {
    "label": "CGCS2000 3 Degree GK Zone 32",
    "defaultExtent": "{\"xmin\": 26876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 38123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4521: {
    "label": "CGCS2000 3 Degree GK Zone 33",
    "defaultExtent": "{\"xmin\": 27876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 39123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4522: {
    "label": "CGCS2000 3 Degree GK Zone 34",
    "defaultExtent": "{\"xmin\": 28876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 40123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4523: {
    "label": "CGCS2000 3 Degree GK Zone 35",
    "defaultExtent": "{\"xmin\": 29876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 41123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4524: {
    "label": "CGCS2000 3 Degree GK Zone 36",
    "defaultExtent": "{\"xmin\": 30876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 42123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4525: {
    "label": "CGCS2000 3 Degree GK Zone 37",
    "defaultExtent": "{\"xmin\": 31876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 43123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4526: {
    "label": "CGCS2000 3 Degree GK Zone 38",
    "defaultExtent": "{\"xmin\": 32876987.02708683, \"ymin\": -9610629.786873642, \"xmax\": 44123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4527: {
    "label": "CGCS2000 3 Degree GK Zone 39",
    "defaultExtent": "{\"xmin\": 33876987.02708684, \"ymin\": -9610629.786873642, \"xmax\": 45123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4528: {
    "label": "CGCS2000 3 Degree GK Zone 40",
    "defaultExtent": "{\"xmin\": 34876987.02708684, \"ymin\": -9610629.786873642, \"xmax\": 46123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4529: {
    "label": "CGCS2000 3 Degree GK Zone 41",
    "defaultExtent": "{\"xmin\": 35876987.02708683, \"ymin\": -9610629.786873642, \"xmax\": 47123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4530: {
    "label": "CGCS2000 3 Degree GK Zone 42",
    "defaultExtent": "{\"xmin\": 36876987.02708684, \"ymin\": -9610629.786873642, \"xmax\": 48123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4531: {
    "label": "CGCS2000 3 Degree GK Zone 43",
    "defaultExtent": "{\"xmin\": 37876987.02708684, \"ymin\": -9610629.786873642, \"xmax\": 49123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4532: {
    "label": "CGCS2000 3 Degree GK Zone 44",
    "defaultExtent": "{\"xmin\": 38876987.02708683, \"ymin\": -9610629.786873642, \"xmax\": 50123012.97291316, \"ymax\": 9610629.786873637}"
  },
  4533: {
    "label": "CGCS2000 3 Degree GK Zone 45",
    "defaultExtent": "{\"xmin\": 39876987.02708684, \"ymin\": -9610629.786873639, \"xmax\": 51123011.17279091, \"ymax\": 9610629.786873637}"
  },
  4534: {
    "label": "CGCS2000 3 Degree GK CM 75E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913167, \"ymax\": 9610629.786873637}"
  },
  4535: {
    "label": "CGCS2000 3 Degree GK CM 78E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913163, \"ymax\": 9610629.786873637}"
  },
  4536: {
    "label": "CGCS2000 3 Degree GK CM 81E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4537: {
    "label": "CGCS2000 3 Degree GK CM 84E",
    "defaultExtent": "{\"xmin\": -5123012.9729131665, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913163, \"ymax\": 9610629.786873637}"
  },
  4538: {
    "label": "CGCS2000 3 Degree GK CM 87E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913163, \"ymax\": 9610629.786873637}"
  },
  4539: {
    "label": "CGCS2000 3 Degree GK CM 90E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4540: {
    "label": "CGCS2000 3 Degree GK CM 93E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913163, \"ymax\": 9610629.786873637}"
  },
  4541: {
    "label": "CGCS2000 3 Degree GK CM 96E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4542: {
    "label": "CGCS2000 3 Degree GK CM 99E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4543: {
    "label": "CGCS2000 3 Degree GK CM 102E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913163, \"ymax\": 9610629.786873637}"
  },
  4544: {
    "label": "CGCS2000 3 Degree GK CM 105E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4545: {
    "label": "CGCS2000 3 Degree GK CM 108E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4546: {
    "label": "CGCS2000 3 Degree GK CM 111E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913163, \"ymax\": 9610629.786873637}"
  },
  4547: {
    "label": "CGCS2000 3 Degree GK CM 114E",
    "defaultExtent": "{\"xmin\": -5123012.972913167, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4548: {
    "label": "CGCS2000 3 Degree GK CM 117E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4549: {
    "label": "CGCS2000 3 Degree GK CM 120E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4550: {
    "label": "CGCS2000 3 Degree GK CM 123E",
    "defaultExtent": "{\"xmin\": -5123012.972913167, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4551: {
    "label": "CGCS2000 3 Degree GK CM 126E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4552: {
    "label": "CGCS2000 3 Degree GK CM 129E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4553: {
    "label": "CGCS2000 3 Degree GK CM 132E",
    "defaultExtent": "{\"xmin\": -5123012.972913167, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  4554: {
    "label": "CGCS2000 3 Degree GK CM 135E",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873639, \"xmax\": 6123011.1727909045, \"ymax\": 9610629.786873637}"
  },
  4555: {
    "label": "GCS New Beijing",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4558: {
    "label": "GCS RRAF 1991",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4559: {
    "label": "RRAF 1991 UTM 20N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  4600: {
    "label": "GCS Anguilla 1957",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4601: {
    "label": "GCS Antigua 1943",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4602: {
    "label": "GCS Dominica 1945",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4603: {
    "label": "GCS Grenada 1953",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4604: {
    "label": "GCS Montserrat 1958",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4605: {
    "label": "GCS St Kitts 1955",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4606: {
    "label": "GCS St Lucia 1955",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4607: {
    "label": "GCS St Vincent 1945",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4608: {
    "label": "GCS NAD 1927 Definition 1976",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4609: {
    "label": "GCS NAD 1927 CGQ77",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4610: {
    "label": "GCS Xian 1980",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4611: {
    "label": "GCS Hong Kong 1980",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4612: {
    "label": "GCS JGD 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4613: {
    "label": "GCS Gunung Segara",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4614: {
    "label": "GCS QND 1995",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4615: {
    "label": "GCS Porto Santo 1936",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4616: {
    "label": "GCS Selvagem Grande 1938",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4617: {
    "label": "GCS North American 1983 CSRS",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4618: {
    "label": "GCS South American 1969",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4619: {
    "label": "GCS SWEREF99",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4620: {
    "label": "GCS Point 58",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4621: {
    "label": "GCS Fort Marigot",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4622: {
    "label": "GCS Sainte Anne",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4623: {
    "label": "GCS CSG 1967",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4624: {
    "label": "GCS RGFG 1995",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4625: {
    "label": "GCS Fort Desaix",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4626: {
    "label": "GCS Reunion 1947",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4627: {
    "label": "GCS RGR 1992",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4628: {
    "label": "GCS Tahiti 1952",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4629: {
    "label": "GCS Tahaa 1954",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4630: {
    "label": "GCS IGN72 Nuku Hiva",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4632: {
    "label": "GCS Combani 1950",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4633: {
    "label": "GCS IGN56 Lifou",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4636: {
    "label": "GCS Petrels 1972",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4637: {
    "label": "GCS Pointe Geologie Perroud 1950",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4638: {
    "label": "GCS Saint Pierre et Miquelon 1950",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4639: {
    "label": "GCS MOP78",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4641: {
    "label": "GCS IGN53 Mare",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4642: {
    "label": "GCS ST84 Ile des Pins",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4643: {
    "label": "GCS ST71 Belep",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4644: {
    "label": "GCS NEA74 Noumea",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4645: {
    "label": "GCS RGNC 1991",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4646: {
    "label": "GCS Grand Comoros",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4647: {
    "label": "ETRS 1989 UTM Zone N32",
    "defaultExtent": "{\"xmin\": 26879236.232276, \"ymin\": -9606785.534958892, \"xmax\": 38120763.767724, \"ymax\": 9606785.534958888}"
  },
  4657: {
    "label": "GCS Reykjavik 1900",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4658: {
    "label": "GCS Hjorsey 1955",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4659: {
    "label": "GCS ISN 1993",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4660: {
    "label": "GCS Helle 1954",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4661: {
    "label": "GCS LKS 1992",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4662: {
    "label": "GCS IGN72 Grande Terre",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4663: {
    "label": "GCS Porto Santo 1995",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4664: {
    "label": "GCS Azores Oriental 1995",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4665: {
    "label": "GCS Azores Central 1995",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4666: {
    "label": "GCS Lisbon 1890",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4667: {
    "label": "GCS IKBD 1992",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4668: {
    "label": "GCS European 1979",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4669: {
    "label": "GCS LKS 1994",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4670: {
    "label": "GCS IGM 1995",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4671: {
    "label": "GCS Voirol 1879",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4672: {
    "label": "GCS Chatham Island 1971",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4673: {
    "label": "GCS Chatham Islands 1979",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4674: {
    "label": "GCS SIRGAS 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4675: {
    "label": "GCS Guam 1963",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4676: {
    "label": "GCS Vientiane 1982",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4677: {
    "label": "GCS Lao 1993",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4678: {
    "label": "GCS Lao 1997",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4679: {
    "label": "GCS Jouik 1961",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4680: {
    "label": "GCS Nouakchott 1965",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4682: {
    "label": "GCS Gulshan 303",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4683: {
    "label": "GCS PRS 1992",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4684: {
    "label": "GCS Gan 1970",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4686: {
    "label": "GCS MAGNA",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4687: {
    "label": "GCS RGPF",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4688: {
    "label": "GCS Fatu Iva 1972",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4689: {
    "label": "GCS IGN63 Hiva Oa",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4690: {
    "label": "GCS Tahiti 1979",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4691: {
    "label": "GCS Moorea 1987",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4692: {
    "label": "GCS Maupiti 1983",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4693: {
    "label": "GCS Nakhl-e Ghanem",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4694: {
    "label": "GCS POSGAR 1994",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4695: {
    "label": "GCS Katanga 1955",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4696: {
    "label": "GCS Kasai 1953",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4697: {
    "label": "GCS IGC 1962 6th Parallel South",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4698: {
    "label": "GCS Kerguelen Island 1949",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4699: {
    "label": "GCS Le Pouce 1934",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4700: {
    "label": "GCS IGN Astro 1960",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4701: {
    "label": "GCS IGCB 1955",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4702: {
    "label": "GCS Mauritania 1999",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4703: {
    "label": "GCS Mhast 1951",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4704: {
    "label": "GCS Mhast Onshore",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4705: {
    "label": "GCS Mhast Offshore",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4706: {
    "label": "GCS Egypt Gulf of Suez S-650 TL",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4707: {
    "label": "GCS Tern Island 1961",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4708: {
    "label": "GCS Anna 1 1965",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4709: {
    "label": "GCS Beacon E 1945",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4710: {
    "label": "GCS DOS 71 4",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4711: {
    "label": "GCS Astro 1952",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4712: {
    "label": "GCS Ascension Island 1958",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4713: {
    "label": "GCS Ayabelle",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4714: {
    "label": "GCS Bellevue IGN",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4715: {
    "label": "GCS Camp Area",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4716: {
    "label": "GCS Canton 1966",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4717: {
    "label": "GCS Cape Canaveral",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4718: {
    "label": "GCS Solomon 1968",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4719: {
    "label": "GCS Easter Island 1967",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4720: {
    "label": "GCS Fiji 1986",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4721: {
    "label": "GCS Fiji 1956",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4722: {
    "label": "GCS ISTS 061 1968",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4723: {
    "label": "GCS Grand Cayman 1959",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4724: {
    "label": "GCS ISTS 073 1969",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4725: {
    "label": "GCS Johnston Island 1961",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4726: {
    "label": "GCS Little Cayman 1961",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4727: {
    "label": "GCS Midway 1961",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4728: {
    "label": "GCS Pico de Las Nieves",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4729: {
    "label": "GCS Pitcairn 1967",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4730: {
    "label": "GCS Santo DOS 1965",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4731: {
    "label": "GCS Viti Levu 1916",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4732: {
    "label": "GCS Wake Eniwetok 1960",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4733: {
    "label": "GCS Wake Island 1952",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4734: {
    "label": "GCS Tristan 1968",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4735: {
    "label": "GCS Kusaie 1951",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4736: {
    "label": "GCS Deception Island",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4737: {
    "label": "GCS Korea 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4738: {
    "label": "GCS Hong Kong 1963",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4739: {
    "label": "GCS Hong Kong 1963 67",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4740: {
    "label": "GCS PZ 1990",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4741: {
    "label": "GCS FD 1954",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4742: {
    "label": "GCS GDM 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4743: {
    "label": "GCS Karbala 1979 Polservice",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4744: {
    "label": "GCS Nahrwan 1934",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4745: {
    "label": "GCS RD/83",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4746: {
    "label": "GCS PD/83",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4747: {
    "label": "GCS Greenland 1996",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4748: {
    "label": "GCS Vanua Levu 1915",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4749: {
    "label": "GCS RGNC 1991-93",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4750: {
    "label": "GCS ST87 Ouvea",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4751: {
    "label": "GCS Kertau RSO",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4752: {
    "label": "GCS Viti Levu 1912",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4753: {
    "label": "GCS fk89",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4754: {
    "label": "GCS LGD2006",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4755: {
    "label": "GCS DGN 1995",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4756: {
    "label": "GCS VN 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4757: {
    "label": "GCS SVY21",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4758: {
    "label": "GCS JAD 2001",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4759: {
    "label": "GCS NAD 1983 NSRS2007",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4760: {
    "label": "GCS WGS 1966",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4761: {
    "label": "GCS HTRS96",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4762: {
    "label": "GCS Bermuda 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4763: {
    "label": "GCS Pitcairn 2006",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4764: {
    "label": "GCS RSRGD2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4765: {
    "label": "GCS Slovenia 1996",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4801: {
    "label": "GCS Bern 1898 Bern",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  4802: {
    "label": "GCS Bogota Bogota",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  4803: {
    "label": "GCS Lisbon Lisbon",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  4804: {
    "label": "GCS Makassar Jakarta",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  4805: {
    "label": "GCS MGI Ferro",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  4806: {
    "label": "GCS Monte Mario Rome",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  4807: {
    "label": "GCS NTF Paris",
    "defaultExtent": "{\"xmin\": -199.99999999999997, \"ymin\": -94.50125310140274, \"xmax\": 199.99999999999997, \"ymax\": 94.50125310140272}"
  },
  4808: {
    "label": "GCS Padang 1884 Jakarta",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  4809: {
    "label": "GCS Belge 1950 Brussels",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  4810: {
    "label": "GCS Tananarive 1925 Paris",
    "defaultExtent": "{\"xmin\": -199.99999999999997, \"ymin\": -94.50125310140274, \"xmax\": 199.99999999999997, \"ymax\": 94.50125310140272}"
  },
  4811: {
    "label": "GCS Voirol 1875 Paris",
    "defaultExtent": "{\"xmin\": -199.99999999999997, \"ymin\": -94.50125310140274, \"xmax\": 199.99999999999997, \"ymax\": 94.50125310140272}"
  },
  4812: {
    "label": "GCS Voirol Unifie 1960 Paris",
    "defaultExtent": "{\"xmin\": -199.99999999999997, \"ymin\": -94.50125310140274, \"xmax\": 199.99999999999997, \"ymax\": 94.50125310140272}"
  },
  4813: {
    "label": "GCS Batavia Jakarta",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  4814: {
    "label": "GCS RT38 Stockholm",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  4815: {
    "label": "GCS Greek Athens",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  4816: {
    "label": "GCS Carthage Paris",
    "defaultExtent": "{\"xmin\": -199.99999999999997, \"ymin\": -94.50125310140274, \"xmax\": 199.99999999999997, \"ymax\": 94.50125310140272}"
  },
  4817: {
    "label": "GCS NGO 1948 Oslo",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  4818: {
    "label": "GCS S JTSK Ferro",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  4819: {
    "label": "GCS Nord Sahara 1959 Paris",
    "defaultExtent": "{\"xmin\": -199.99999999999997, \"ymin\": -94.50125310140274, \"xmax\": 199.99999999999997, \"ymax\": 94.50125310140272}"
  },
  4820: {
    "label": "GCS Gunung Segara Jakarta",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  4821: {
    "label": "GCS Voirol 1879 Paris",
    "defaultExtent": "{\"xmin\": -199.99999999999997, \"ymin\": -94.50125310140274, \"xmax\": 199.99999999999997, \"ymax\": 94.50125310140272}"
  },
  4823: {
    "label": "GCS Sao Tome",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4824: {
    "label": "GCS Principe",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  4826: {
    "label": "WGS 1984 Cape Verde Grid",
    "defaultExtent": "{\"xmin\": -36773068.97441834, \"ymin\": -26234408.80997573, \"xmax\": 37096244.634418376, \"ymax\": 15868310.313928578}"
  },
  4839: {
    "label": "ETRS 1989 LCC Germany N-E",
    "defaultExtent": "{\"xmin\": -35955599.04675246, \"ymin\": -30798883.9161205, \"xmax\": 35955599.04564843, \"ymax\": 32804981.19303063}"
  },
  4901: {
    "label": "GCS ATF Paris",
    "defaultExtent": "{\"xmin\": -199.99999999999997, \"ymin\": -94.50125310140274, \"xmax\": 199.99999999999997, \"ymax\": 94.50125310140272}"
  },
  4902: {
    "label": "GCS Nord de Guerre Paris",
    "defaultExtent": "{\"xmin\": -199.99999999999997, \"ymin\": -94.50125310140274, \"xmax\": 199.99999999999997, \"ymax\": 94.50125310140272}"
  },
  4903: {
    "label": "GCS Madrid 1870 Madrid",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  4904: {
    "label": "GCS Lisbon 1890 Lisbon",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  5013: {
    "label": "GCS PTRA08",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5014: {
    "label": "PTRA08 UTM Zone 25N",
    "defaultExtent": "{\"xmin\": -5120763.767723999, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  5015: {
    "label": "PTRA08 UTM Zone 26N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  5016: {
    "label": "PTRA08 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  5018: {
    "label": "Lisbon Portuguese Grid New",
    "defaultExtent": "{\"xmin\": -5623255.480734327, \"ymin\": -14003524.858224163, \"xmax\": 5623255.480734327, \"ymax\": 5218337.99191501}"
  },
  5048: {
    "label": "ETRS 1989 TM35FIN NE",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  5069: {
    "label": "NAD 1927 Contiguous USA Albers",
    "defaultExtent": "{\"xmin\": -16885981.886121172, \"ymin\": -6956902.328335352, \"xmax\": 16885981.88647263, \"ymax\": 15293402.692694161}"
  },
  5070: {
    "label": "NAD 1983 Contiguous USA Albers",
    "defaultExtent": "{\"xmin\": -16885989.18210479, \"ymin\": -6957052.177887028, \"xmax\": 16885989.182114024, \"ymax\": 15293225.658442125}"
  },
  5071: {
    "label": "NAD 1983 HARN Contiguous USA Albers",
    "defaultExtent": "{\"xmin\": -16885989.18210479, \"ymin\": -6957052.177887028, \"xmax\": 16885989.182114024, \"ymax\": 15293225.658442125}"
  },
  5072: {
    "label": "NAD 1983 NSRS2007 Contiguous USA Albers",
    "defaultExtent": "{\"xmin\": -16885989.18210479, \"ymin\": -6957052.177887028, \"xmax\": 16885989.182114024, \"ymax\": 15293225.658442125}"
  },
  5105: {
    "label": "ETRS 1989 NTM Zone 5",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5106: {
    "label": "ETRS 1989 NTM Zone 6",
    "defaultExtent": "{\"xmin\": -5523012.972913164, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5107: {
    "label": "ETRS 1989 NTM Zone 7",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.9729131665, \"ymax\": 4179347.1149951257}"
  },
  5108: {
    "label": "ETRS 1989 NTM Zone 8",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5109: {
    "label": "ETRS 1989 NTM Zone 9",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5110: {
    "label": "ETRS 1989 NTM Zone 10",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5111: {
    "label": "ETRS 1989 NTM Zone 11",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5112: {
    "label": "ETRS 1989 NTM Zone 12",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5113: {
    "label": "ETRS 1989 NTM Zone 13",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5114: {
    "label": "ETRS 1989 NTM Zone 14",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5115: {
    "label": "ETRS 1989 NTM Zone 15",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5116: {
    "label": "ETRS 1989 NTM Zone 16",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5117: {
    "label": "ETRS 1989 NTM Zone 17",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.9729131665, \"ymax\": 4179347.1149951257}"
  },
  5118: {
    "label": "ETRS 1989 NTM Zone 18",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913164, \"ymax\": 4179347.1149951257}"
  },
  5119: {
    "label": "ETRS 1989 NTM Zone 19",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5120: {
    "label": "ETRS 1989 NTM Zone 20",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5121: {
    "label": "ETRS 1989 NTM Zone 21",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5122: {
    "label": "ETRS 1989 NTM Zone 22",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5123: {
    "label": "ETRS 1989 NTM Zone 23",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5124: {
    "label": "ETRS 1989 NTM Zone 24",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5125: {
    "label": "ETRS 1989 NTM Zone 25",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5126: {
    "label": "ETRS 1989 NTM Zone 26",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.9729131665, \"ymax\": 4179347.1149951257}"
  },
  5127: {
    "label": "ETRS 1989 NTM Zone 27",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752152, \"xmax\": 5723012.972913162, \"ymax\": 4179347.1149951257}"
  },
  5128: {
    "label": "ETRS 1989 NTM Zone 28",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913164, \"ymax\": 4179347.1149951257}"
  },
  5129: {
    "label": "ETRS 1989 NTM Zone 29",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913164, \"ymax\": 4179347.1149951257}"
  },
  5130: {
    "label": "ETRS 1989 NTM Zone 30",
    "defaultExtent": "{\"xmin\": -5523012.972913165, \"ymin\": -15041912.458752153, \"xmax\": 5723012.972913165, \"ymax\": 4179347.1149951257}"
  },
  5167: {
    "label": "Korean 1985 Korea East Sea Belt",
    "defaultExtent": "{\"xmin\": -5422345.712638921, \"ymin\": -13316646.83479561, \"xmax\": 5822345.712638919, \"ymax\": 5902491.419305773}"
  },
  5168: {
    "label": "Korean 1985 Korea Central Belt Jeju",
    "defaultExtent": "{\"xmin\": -5422345.712638919, \"ymin\": -13266646.83479561, \"xmax\": 5822345.712638919, \"ymax\": 5952491.419305773}"
  },
  5173: {
    "label": "Korean 1985 Modified Korea West Belt",
    "defaultExtent": "{\"xmin\": -5422345.712638919, \"ymin\": -13316646.83479561, \"xmax\": 5822345.712638919, \"ymax\": 5902491.419305773}"
  },
  5174: {
    "label": "Korean 1985 Modified Korea Central Belt",
    "defaultExtent": "{\"xmin\": -5422345.712638919, \"ymin\": -13316646.83479561, \"xmax\": 5822345.712638919, \"ymax\": 5902491.419305773}"
  },
  5175: {
    "label": "Korean 1985 Modified Korea Central Belt Jeju",
    "defaultExtent": "{\"xmin\": -5422345.712638919, \"ymin\": -13266646.83479561, \"xmax\": 5822345.712638919, \"ymax\": 5952491.419305773}"
  },
  5176: {
    "label": "Korean 1985 Modified Korea East Belt",
    "defaultExtent": "{\"xmin\": -5422345.712638919, \"ymin\": -13316646.83479561, \"xmax\": 5822345.712638919, \"ymax\": 5902491.419305773}"
  },
  5177: {
    "label": "Korean 1985 Modified Korea East Sea Belt",
    "defaultExtent": "{\"xmin\": -5422345.712638921, \"ymin\": -13316646.83479561, \"xmax\": 5822345.712638919, \"ymax\": 5902491.419305773}"
  },
  5178: {
    "label": "Korean 1985 Korea Unified Coordinate System",
    "defaultExtent": "{\"xmin\": -4620096.7743538655, \"ymin\": -11811120.176061692, \"xmax\": 6620096.774353864, \"ymax\": 7400330.422738052}"
  },
  5179: {
    "label": "Korea 2000 Korea Unified Coordinate System",
    "defaultExtent": "{\"xmin\": -4620763.767724002, \"ymin\": -11812600.55479475, \"xmax\": 6620763.767724001, \"ymax\": 7400970.515123028}"
  },
  5180: {
    "label": "Korea 2000 Korea West Belt",
    "defaultExtent": "{\"xmin\": -5423012.972913165, \"ymin\": -13318127.805917118, \"xmax\": 5823012.972913165, \"ymax\": 5903131.7678301595}"
  },
  5181: {
    "label": "Korea 2000 Korea Central Belt",
    "defaultExtent": "{\"xmin\": -5423012.972913165, \"ymin\": -13318127.805917118, \"xmax\": 5823012.972913165, \"ymax\": 5903131.7678301595}"
  },
  5182: {
    "label": "Korea 2000 Korea Central Belt Jeju",
    "defaultExtent": "{\"xmin\": -5423012.972913165, \"ymin\": -13268127.805917118, \"xmax\": 5823012.972913165, \"ymax\": 5953131.7678301595}"
  },
  5183: {
    "label": "Korea 2000 Korea East Belt",
    "defaultExtent": "{\"xmin\": -5423012.972913165, \"ymin\": -13318127.805917118, \"xmax\": 5823012.972913165, \"ymax\": 5903131.7678301595}"
  },
  5184: {
    "label": "Korea 2000 Korea East Sea Belt",
    "defaultExtent": "{\"xmin\": -5423012.972913167, \"ymin\": -13318127.805917118, \"xmax\": 5823012.972913165, \"ymax\": 5903131.7678301595}"
  },
  5185: {
    "label": "Korea 2000 Korea West Belt 2010",
    "defaultExtent": "{\"xmin\": -5423012.972913165, \"ymin\": -13218127.805917118, \"xmax\": 5823012.972913165, \"ymax\": 6003131.7678301595}"
  },
  5186: {
    "label": "Korea 2000 Korea Central Belt 2010",
    "defaultExtent": "{\"xmin\": -5423012.972913165, \"ymin\": -13218127.805917118, \"xmax\": 5823012.972913165, \"ymax\": 6003131.7678301595}"
  },
  5187: {
    "label": "Korea 2000 Korea East Belt 2010",
    "defaultExtent": "{\"xmin\": -5423012.972913165, \"ymin\": -13218127.805917118, \"xmax\": 5823012.972913165, \"ymax\": 6003131.7678301595}"
  },
  5188: {
    "label": "Korea 2000 Korea East Sea Belt 2010",
    "defaultExtent": "{\"xmin\": -5423012.972913167, \"ymin\": -13218127.805917118, \"xmax\": 5823012.972913165, \"ymax\": 6003131.7678301595}"
  },
  5221: {
    "label": "S-JTSK Ferro Krovak East North",
    "defaultExtent": "{\"xmin\": -33699687.5149513, \"ymin\": -33699674.50237148, \"xmax\": 33699687.51498498, \"ymax\": 33632762.769879624}"
  },
  5223: {
    "label": "WGS 1984 UTM Gabon TM",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9106785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 10106785.535047516}"
  },
  5228: {
    "label": "GCS S JTSK/05",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5229: {
    "label": "GCS S JTSK/05 Ferro",
    "defaultExtent": "{\"xmin\": -180.0, \"ymin\": -85.05112779126247, \"xmax\": 180.0, \"ymax\": 85.05112779126246}"
  },
  5233: {
    "label": "GCS SLD99",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5234: {
    "label": "Kandawala Sri Lanka Grid",
    "defaultExtent": "{\"xmin\": -5421783.633828565, \"ymin\": -10182746.011475747, \"xmax\": 5821783.633828564, \"ymax\": 9034762.166947024}"
  },
  5235: {
    "label": "SLD99 Sri Lanka Grid 1999",
    "defaultExtent": "{\"xmin\": -5121783.633828565, \"ymin\": -9882745.043956919, \"xmax\": 6121783.633828564, \"ymax\": 9334763.13446585}"
  },
  5243: {
    "label": "ETRS 1989 LCC Germany E-N",
    "defaultExtent": "{\"xmin\": -35955599.04675246, \"ymin\": -30798883.9161205, \"xmax\": 35955599.04564843, \"ymax\": 32804981.19303063}"
  },
  5246: {
    "label": "GCS GDBD2009",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5247: {
    "label": "GDBD2009 GEORSO",
    "defaultExtent": "{\"xmin\": -28973723.118105106, \"ymin\": -31202236.19634591, \"xmax\": 28970903.097957358, \"ymax\": 31198902.354118135}"
  },
  5252: {
    "label": "GCS TUREF",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5253: {
    "label": "TUREF TM27",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  5254: {
    "label": "TUREF TM30",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913164, \"ymax\": 9610629.786873637}"
  },
  5255: {
    "label": "TUREF TM33",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913164, \"ymax\": 9610629.786873637}"
  },
  5256: {
    "label": "TUREF TM36",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  5257: {
    "label": "TUREF TM39",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913164, \"ymax\": 9610629.786873637}"
  },
  5258: {
    "label": "TUREF TM42",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913164, \"ymax\": 9610629.786873637}"
  },
  5259: {
    "label": "TUREF TM45",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  5264: {
    "label": "GCS DRUKREF 03",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5266: {
    "label": "DRUKREF 03 Bhutan National Grid",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 5873012.972913165, \"ymax\": 9610629.786873637}"
  },
  5269: {
    "label": "TUREF 3 Degree GK Zone 9",
    "defaultExtent": "{\"xmin\": 3876987.0270868354, \"ymin\": -9610629.786873642, \"xmax\": 15123012.972913165, \"ymax\": 9610629.786873637}"
  },
  5270: {
    "label": "TUREF 3 Degree GK Zone 10",
    "defaultExtent": "{\"xmin\": 4876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 16123012.972913165, \"ymax\": 9610629.786873637}"
  },
  5271: {
    "label": "TUREF 3 Degree GK Zone 11",
    "defaultExtent": "{\"xmin\": 5876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 17123012.972913165, \"ymax\": 9610629.786873637}"
  },
  5272: {
    "label": "TUREF 3 Degree GK Zone 12",
    "defaultExtent": "{\"xmin\": 6876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 18123012.972913165, \"ymax\": 9610629.786873637}"
  },
  5273: {
    "label": "TUREF 3 Degree GK Zone 13",
    "defaultExtent": "{\"xmin\": 7876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 19123012.972913165, \"ymax\": 9610629.786873637}"
  },
  5274: {
    "label": "TUREF 3 Degree GK Zone 14",
    "defaultExtent": "{\"xmin\": 8876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 20123012.972913165, \"ymax\": 9610629.786873637}"
  },
  5275: {
    "label": "TUREF 3 Degree GK Zone 15",
    "defaultExtent": "{\"xmin\": 9876987.027086835, \"ymin\": -9610629.786873642, \"xmax\": 21123012.972913165, \"ymax\": 9610629.786873637}"
  },
  5292: {
    "label": "DRUKREF 03 Bumthang TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913165, \"ymax\": 7110629.786873637}"
  },
  5293: {
    "label": "DRUKREF 03 Chhukha TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913165, \"ymax\": 7110629.786873637}"
  },
  5294: {
    "label": "DRUKREF 03 Dagana TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913167, \"ymax\": 7110629.786873637}"
  },
  5295: {
    "label": "DRUKREF 03 Gasa TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913163, \"ymax\": 7110629.786873637}"
  },
  5296: {
    "label": "DRUKREF 03 Ha TM",
    "defaultExtent": "{\"xmin\": -5373012.972913164, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913163, \"ymax\": 7110629.786873637}"
  },
  5297: {
    "label": "DRUKREF 03 Lhuentse TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913163, \"ymax\": 7110629.786873637}"
  },
  5298: {
    "label": "DRUKREF 03 Mongar TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913163, \"ymax\": 7110629.786873637}"
  },
  5299: {
    "label": "DRUKREF 03 Paro TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913163, \"ymax\": 7110629.786873637}"
  },
  5300: {
    "label": "DRUKREF 03 Pemagatshel TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913165, \"ymax\": 7110629.786873637}"
  },
  5301: {
    "label": "DRUKREF 03 Punakha TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913167, \"ymax\": 7110629.786873637}"
  },
  5302: {
    "label": "DRUKREF 03 Samdrup Jongkhar TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913163, \"ymax\": 7110629.786873637}"
  },
  5303: {
    "label": "DRUKREF 03 Samtse TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913163, \"ymax\": 7110629.786873637}"
  },
  5304: {
    "label": "DRUKREF 03 Sarpang TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913167, \"ymax\": 7110629.786873637}"
  },
  5305: {
    "label": "DRUKREF 03 Thimphu TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913165, \"ymax\": 7110629.786873637}"
  },
  5306: {
    "label": "DRUKREF 03 Trashigang TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913163, \"ymax\": 7110629.786873637}"
  },
  5307: {
    "label": "DRUKREF 03 Trongsa TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873639, \"xmax\": 5873012.972913167, \"ymax\": 7110629.786873637}"
  },
  5308: {
    "label": "DRUKREF 03 Tsirang TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913167, \"ymax\": 7110629.786873637}"
  },
  5309: {
    "label": "DRUKREF 03 Wangdue Phodrang TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913165, \"ymax\": 7110629.786873637}"
  },
  5310: {
    "label": "DRUKREF 03 Yangtse TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913163, \"ymax\": 7110629.786873637}"
  },
  5311: {
    "label": "DRUKREF 03 Zhemgang TM",
    "defaultExtent": "{\"xmin\": -5373012.972913165, \"ymin\": -12110629.786873642, \"xmax\": 5873012.972913163, \"ymax\": 7110629.786873637}"
  },
  5316: {
    "label": "ETRS 1989 FAROE TM",
    "defaultExtent": "{\"xmin\": -5422996.103874247, \"ymin\": -15610600.954984281, \"xmax\": 5822996.103874247, \"ymax\": 3610600.9549842756}"
  },
  5320: {
    "label": "NAD 1983 Teranet Ontario Lambert",
    "defaultExtent": "{\"xmin\": -34997789.93144692, \"ymin\": -24440137.28648223, \"xmax\": 36997789.93150204, \"ymax\": 37906076.03688118}"
  },
  5321: {
    "label": "NAD 1983 CSRS Teranet Ontario Lambert",
    "defaultExtent": "{\"xmin\": -34997789.93144692, \"ymin\": -24440137.28648223, \"xmax\": 36997789.93150204, \"ymax\": 37906076.03688118}"
  },
  5324: {
    "label": "GCS ISN 2004",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5325: {
    "label": "ISN 2004 Lambert 2004",
    "defaultExtent": "{\"xmin\": -33341329.99311783, \"ymin\": -31759285.719874755, \"xmax\": 36741329.993086554, \"ymax\": 36817181.310167946}"
  },
  5329: {
    "label": "Gunung Segara Jakarta NEIEZ",
    "defaultExtent": "{\"xmin\": -16075077.227333918, \"ymin\": -19032704.26818891, \"xmax\": 23875077.22732159, \"ymax\": 20832704.268526573}"
  },
  5330: {
    "label": "Batavia Jakarta NEIEZ",
    "defaultExtent": "{\"xmin\": -16075077.227333918, \"ymin\": -19032704.26818891, \"xmax\": 23875077.22732159, \"ymax\": 20832704.268526573}"
  },
  5331: {
    "label": "Makassar Jakarta NEIEZ",
    "defaultExtent": "{\"xmin\": -16075077.227333918, \"ymin\": -19032704.26818891, \"xmax\": 23875077.22732159, \"ymax\": 20832704.268526573}"
  },
  5337: {
    "label": "Aratu UTM Zone 25S",
    "defaultExtent": "{\"xmin\": -5121006.178542031, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  5340: {
    "label": "GCS POSGAR 2007",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5343: {
    "label": "POSGAR 2007 Argentina Zone 1",
    "defaultExtent": "{\"xmin\": -4123012.9729131646, \"ymin\": 391335.94235681987, \"xmax\": 7123012.972913165, \"ymax\": 19612595.516104095}"
  },
  5344: {
    "label": "POSGAR 2007 Argentina Zone 2",
    "defaultExtent": "{\"xmin\": -3123012.9729131674, \"ymin\": 391335.94235681987, \"xmax\": 8123012.972913165, \"ymax\": 19612595.516104095}"
  },
  5345: {
    "label": "POSGAR 2007 Argentina Zone 3",
    "defaultExtent": "{\"xmin\": -2123012.9729131646, \"ymin\": 391335.94235681987, \"xmax\": 9123012.972913165, \"ymax\": 19612595.516104095}"
  },
  5346: {
    "label": "POSGAR 2007 Argentina Zone 4",
    "defaultExtent": "{\"xmin\": -1123012.9729131646, \"ymin\": 391335.94235681987, \"xmax\": 10123012.972913165, \"ymax\": 19612595.516104095}"
  },
  5347: {
    "label": "POSGAR 2007 Argentina Zone 5",
    "defaultExtent": "{\"xmin\": -123012.97291316744, \"ymin\": 391335.94235681987, \"xmax\": 11123012.972913165, \"ymax\": 19612595.516104095}"
  },
  5348: {
    "label": "POSGAR 2007 Argentina Zone 6",
    "defaultExtent": "{\"xmin\": 876987.0270868354, \"ymin\": 391335.94235681987, \"xmax\": 12123012.972913165, \"ymax\": 19612595.516104095}"
  },
  5349: {
    "label": "POSGAR 2007 Argentina Zone 7",
    "defaultExtent": "{\"xmin\": 1876987.0270868354, \"ymin\": 391335.94235681987, \"xmax\": 13123012.972913165, \"ymax\": 19612595.516104095}"
  },
  5354: {
    "label": "GCS MARGEN",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5355: {
    "label": "MARGEN UTM Zone 20S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  5356: {
    "label": "MARGEN UTM Zone 19S",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  5357: {
    "label": "MARGEN UTM Zone 21S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  5360: {
    "label": "GCS SIRGAS-Chile",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5361: {
    "label": "SIRGAS-Chile UTM Zone 19S",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  5362: {
    "label": "SIRGAS-Chile UTM Zone 18S",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  5365: {
    "label": "GCS CR05",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5367: {
    "label": "CRTM05",
    "defaultExtent": "{\"xmin\": -5122450.671591299, \"ymin\": -9609668.72398361, \"xmax\": 6122450.671591301, \"ymax\": 9609668.723983606}"
  },
  5371: {
    "label": "GCS MARCARIO SOLIS",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5373: {
    "label": "GCS Peru96",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5381: {
    "label": "GCS SIRGAS-ROU98",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5382: {
    "label": "SIRGAS-ROU98 UTM Zone 21S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  5383: {
    "label": "SIRGAS-ROU98 UTM Zone 22S",
    "defaultExtent": "{\"xmin\": -5120763.767699435, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  5387: {
    "label": "Peru96 UTM Zone 18S",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  5389: {
    "label": "Peru96 UTM Zone 19S",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  5393: {
    "label": "GCS SIRGAS ES2007.8",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5396: {
    "label": "SIRGAS 2000 UTM Zone 26S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  5451: {
    "label": "GCS Ocotepeque 1935",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5456: {
    "label": "Ocotepeque 1935 Costa Rica Norte",
    "defaultExtent": "{\"xmin\": -32289134.658735197, \"ymin\": -25894564.584026325, \"xmax\": 33289134.658843182, \"ymax\": 17805501.48398734}"
  },
  5457: {
    "label": "Ocotepeque 1935 Costa Rica Sur",
    "defaultExtent": "{\"xmin\": -30872278.49460389, \"ymin\": -25879689.661487438, \"xmax\": 31872278.49449722, \"ymax\": 18317381.469369195}"
  },
  5459: {
    "label": "Ocotepeque 1935 Guatemala Sur",
    "defaultExtent": "{\"xmin\": -35836017.190327846, \"ymin\": -25973070.886990257, \"xmax\": 36836017.19043182, \"ymax\": 16386283.78267812}"
  },
  5460: {
    "label": "Ocotepeque 1935 El Salvador Lambert",
    "defaultExtent": "{\"xmin\": -35053153.79999666, \"ymin\": -25943236.059445225, \"xmax\": 36053153.799996674, \"ymax\": 16737214.455401175}"
  },
  5461: {
    "label": "Ocotepeque 1935 Nicaragua Norte",
    "defaultExtent": "{\"xmin\": -35112086.05867421, \"ymin\": -25881546.058173984, \"xmax\": 36112086.05867423, \"ymax\": 16772036.673037328}"
  },
  5462: {
    "label": "Ocotepeque 1935 Nicaragua Sur",
    "defaultExtent": "{\"xmin\": -33417381.09111642, \"ymin\": -25881214.485479973, \"xmax\": 34417381.09111644, \"ymax\": 17413040.921334285}"
  },
  5463: {
    "label": "SAD 1969 UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": -9606819.739861675, \"xmax\": 6120784.157939793, \"ymax\": 9606819.739861669}"
  },
  5464: {
    "label": "GCS Sibun Gorge 1922",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5467: {
    "label": "GCS Panama-Colon 1911",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5469: {
    "label": "Panama-Colon 1911 Panama Lambert",
    "defaultExtent": "{\"xmin\": -30275386.213755667, \"ymin\": -25944798.2930315, \"xmax\": 31275386.213755682, \"ymax\": 18458011.14489087}"
  },
  5472: {
    "label": "Panama-Colon 1911 Panama Polyconic",
    "defaultExtent": "{\"xmin\": -20913719.236073203, \"ymin\": -16689969.116570786, \"xmax\": 22913719.23607322, \"ymax\": 16880612.75564451}"
  },
  5479: {
    "label": "RSRGD2000 MSLC2000",
    "defaultExtent": "{\"xmin\": -26493972.019650053, \"ymin\": -29775298.522151746, \"xmax\": 40493972.019862235, \"ymax\": 37134386.29341378}"
  },
  5480: {
    "label": "RSRGD2000 BCLC2000",
    "defaultExtent": "{\"xmin\": -29027764.90731831, \"ymin\": -32580392.260082953, \"xmax\": 39027764.907747045, \"ymax\": 35253677.81570643}"
  },
  5481: {
    "label": "RSRGD2000 PCLC2000",
    "defaultExtent": "{\"xmin\": -31406754.55338628, \"ymin\": -35095164.146852605, \"xmax\": 37406754.553577326, \"ymax\": 33266508.578531854}"
  },
  5482: {
    "label": "RSRGD2000 RSPS2000",
    "defaultExtent": "{\"xmin\": -25567784.1080401, \"ymin\": -29567784.10804025, \"xmax\": 35567784.1080401, \"ymax\": 31567784.10803964}"
  },
  5489: {
    "label": "GCS RGAF09",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5490: {
    "label": "RGAF09 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  5513: {
    "label": "S-JTSK Krovak",
    "defaultExtent": "{\"xmin\": -33632762.769879624, \"ymin\": -33699687.51498494, \"xmax\": 33699674.50237148, \"ymax\": 33699687.51495131}"
  },
  5514: {
    "label": "S-JTSK Krovak East North",
    "defaultExtent": "{\"xmin\": -33699687.51495131, \"ymin\": -33699674.50237148, \"xmax\": 33699687.51498494, \"ymax\": 33632762.769879624}"
  },
  5518: {
    "label": "Chatham Island 1971 Map Grid",
    "defaultExtent": "{\"xmin\": -5273255.480734303, \"ymin\": -4087019.8285775147, \"xmax\": 5973255.480734338, \"ymax\": 15134843.021520047}"
  },
  5519: {
    "label": "Chatham Islands 1979 Map Grid",
    "defaultExtent": "{\"xmin\": -5273255.480734303, \"ymin\": -4087019.8285775147, \"xmax\": 5973255.480734338, \"ymax\": 15134843.021520047}"
  },
  5520: {
    "label": "DHDN 3 Degree Gauss Zone 1",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.71263892, \"ymax\": 9609569.127050688}"
  },
  5523: {
    "label": "WGS 1984 UTM Gabon TM 2011",
    "defaultExtent": "{\"xmin\": -4120763.7676994344, \"ymin\": -4106785.535047522, \"xmax\": 7120763.767699434, \"ymax\": 15106785.535047516}"
  },
  5524: {
    "label": "GCS Corrego Alegre 1961",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5527: {
    "label": "GCS SAD 1969 96",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5530: {
    "label": "SAD 1969 96 Brazil Polyconic",
    "defaultExtent": "{\"xmin\": -15037579.32380563, \"ymin\": -5348308.772921104, \"xmax\": 25037579.32380564, \"ymax\": 25348308.772921093}"
  },
  5531: {
    "label": "SAD 1969 96 UTM Zone 21S",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  5533: {
    "label": "SAD 1969 96 UTM Zone 23S",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  5534: {
    "label": "SAD 1969 96 UTM Zone 24S",
    "defaultExtent": "{\"xmin\": -5120784.157939792, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  5535: {
    "label": "SAD 1969 96 UTM Zone 25S",
    "defaultExtent": "{\"xmin\": -5120784.157939792, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  5536: {
    "label": "Corrego Alegre 1961 UTM Zone 21S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  5537: {
    "label": "Corrego Alegre 1961 UTM Zone 22S",
    "defaultExtent": "{\"xmin\": -5121006.178542034, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  5538: {
    "label": "Corrego Alegre 1961 UTM Zone 23S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  5539: {
    "label": "Corrego Alegre 1961 UTM Zone 24S",
    "defaultExtent": "{\"xmin\": -5121006.178542031, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  5546: {
    "label": "GCS PNG94",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5550: {
    "label": "PNG94 PNGMG94 Zone 54",
    "defaultExtent": "{\"xmin\": -5120763.767723992, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  5551: {
    "label": "PNG94 PNGMG94 Zone 55",
    "defaultExtent": "{\"xmin\": -5120763.767723991, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  5552: {
    "label": "PNG94 PNGMG94 Zone 56",
    "defaultExtent": "{\"xmin\": -5120763.767723991, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  5559: {
    "label": "Ocotepeque 1935 Guatemala Norte",
    "defaultExtent": "{\"xmin\": -37005128.9335971, \"ymin\": -26145561.98950497, \"xmax\": 38005128.933695495, \"ymax\": 15693865.652280116}"
  },
  5561: {
    "label": "GCS Ukraine 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5562: {
    "label": "Ukraine 2000 GK Zone 4",
    "defaultExtent": "{\"xmin\": -1123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 10123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5563: {
    "label": "Ukraine 2000 GK Zone 5",
    "defaultExtent": "{\"xmin\": -123107.46752671711, \"ymin\": -9610795.116133098, \"xmax\": 11123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5564: {
    "label": "Ukraine 2000 GK Zone 6",
    "defaultExtent": "{\"xmin\": 876892.5324732829, \"ymin\": -9610795.116133098, \"xmax\": 12123107.467526715, \"ymax\": 9610795.116133094}"
  },
  5565: {
    "label": "Ukraine 2000 GK Zone 7",
    "defaultExtent": "{\"xmin\": 1876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 13123107.467526715, \"ymax\": 9610795.116133094}"
  },
  5566: {
    "label": "Ukraine 2000 GK CM 21E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5567: {
    "label": "Ukraine 2000 GK CM 27E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5568: {
    "label": "Ukraine 2000 GK CM 33E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  5569: {
    "label": "Ukraine 2000 GK CM 39E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  5570: {
    "label": "Ukraine 2000 3 Degree GK Zone 7",
    "defaultExtent": "{\"xmin\": 1876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 13123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5571: {
    "label": "Ukraine 2000 3 Degree GK Zone 8",
    "defaultExtent": "{\"xmin\": 2876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 14123107.467526715, \"ymax\": 9610795.116133094}"
  },
  5572: {
    "label": "Ukraine 2000 3 Degree GK Zone 9",
    "defaultExtent": "{\"xmin\": 3876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 15123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5573: {
    "label": "Ukraine 2000 3 Degree GK Zone 10",
    "defaultExtent": "{\"xmin\": 4876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 16123107.467526715, \"ymax\": 9610795.116133094}"
  },
  5574: {
    "label": "Ukraine 2000 3 Degree GK Zone 11",
    "defaultExtent": "{\"xmin\": 5876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 17123107.467526715, \"ymax\": 9610795.116133094}"
  },
  5575: {
    "label": "Ukraine 2000 3 Degree GK Zone 12",
    "defaultExtent": "{\"xmin\": 6876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 18123107.46752672, \"ymax\": 9610795.116133094}"
  },
  5576: {
    "label": "Ukraine 2000 3 Degree GK Zone 13",
    "defaultExtent": "{\"xmin\": 7876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 19123107.467526715, \"ymax\": 9610795.116133094}"
  },
  5577: {
    "label": "Ukraine 2000 3 Degree GK CM 21E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5578: {
    "label": "Ukraine 2000 3 Degree GK CM 24E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  5579: {
    "label": "Ukraine 2000 3 Degree GK CM 27E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5580: {
    "label": "Ukraine 2000 3 Degree GK CM 30E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  5581: {
    "label": "Ukraine 2000 3 Degree GK CM 33E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  5582: {
    "label": "Ukraine 2000 3 Degree GK CM 36E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5583: {
    "label": "Ukraine 2000 3 Degree GK CM 39E",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  5588: {
    "label": "NAD 1927 New Brunswick Stereographic",
    "defaultExtent": "{\"xmin\": -99774461.27984962, \"ymin\": -99211550.14882007, \"xmax\": 101774461.28028953, \"ymax\": 101716192.28562436}"
  },
  5589: {
    "label": "Sibun Gorge 1922 Colony Grid",
    "defaultExtent": "{\"xmin\": -18231788.063587736, \"ymin\": -37276603.43043709, \"xmax\": 18666306.58358772, \"ymax\": 25785774.365790125}"
  },
  5593: {
    "label": "GCS FEH2010",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5596: {
    "label": "FEH2010 Fehmarnbelt TM",
    "defaultExtent": "{\"xmin\": -4623012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6623012.972913165, \"ymax\": 9610629.786873637}"
  },
  5623: {
    "label": "NAD 1927 StatePlane Michigan East Old FIPS 2101",
    "defaultExtent": "{\"xmin\": -17947497.75954462, \"ymin\": -46606243.24123219, \"xmax\": 18947497.759544615, \"ymax\": 16451269.396136547}"
  },
  5624: {
    "label": "NAD 1927 StatePlane Michigan Central Old FIPS 2102",
    "defaultExtent": "{\"xmin\": -17946874.822049316, \"ymin\": -46604669.43556983, \"xmax\": 18946874.822049316, \"ymax\": 16450713.867539348}"
  },
  5625: {
    "label": "NAD 1927 StatePlane Michigan West Old FIPS 2103",
    "defaultExtent": "{\"xmin\": -17946874.822049312, \"ymin\": -46604669.43556983, \"xmax\": 18946874.822049312, \"ymax\": 16450713.867539348}"
  },
  5627: {
    "label": "ED 1950 TM 6 NE",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  5629: {
    "label": "Moznet UTM Zone 38S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  5631: {
    "label": "Pulkovo 1942 Adj 1958 GK Zone 2 E-N",
    "defaultExtent": "{\"xmin\": -3123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 8123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5632: {
    "label": "PTRA08 LCC Europe",
    "defaultExtent": "{\"xmin\": -31211653.14061199, \"ymin\": -27510234.270025503, \"xmax\": 39211653.14061456, \"ymax\": 34503962.231349826}"
  },
  5633: {
    "label": "PTRA08 LAEA Europe",
    "defaultExtent": "{\"xmin\": -8426404.408394862, \"ymin\": -9526565.972599337, \"xmax\": 17068404.40839246, \"ymax\": 15946565.972567223}"
  },
  5634: {
    "label": "REGCAN95 LCC Europe",
    "defaultExtent": "{\"xmin\": -31211653.14061199, \"ymin\": -27510234.270025503, \"xmax\": 39211653.14061456, \"ymax\": 34503962.231349826}"
  },
  5635: {
    "label": "REGCAN95 LAEA Europe",
    "defaultExtent": "{\"xmin\": -8426404.408394862, \"ymin\": -9526565.972599337, \"xmax\": 17068404.40839246, \"ymax\": 15946565.972567223}"
  },
  5636: {
    "label": "TUREF LAEA Europe",
    "defaultExtent": "{\"xmin\": -8426404.408394862, \"ymin\": -9526565.972599337, \"xmax\": 17068404.40839246, \"ymax\": 15946565.972567223}"
  },
  5637: {
    "label": "TUREF LCC Europe",
    "defaultExtent": "{\"xmin\": -31211653.14061199, \"ymin\": -27510234.270025503, \"xmax\": 39211653.14061456, \"ymax\": 34503962.231349826}"
  },
  5638: {
    "label": "ISN 2004 LAEA Europe",
    "defaultExtent": "{\"xmin\": -8426404.408394862, \"ymin\": -9526565.972599337, \"xmax\": 17068404.40839246, \"ymax\": 15946565.972567223}"
  },
  5639: {
    "label": "ISN 2004 LCC Europe",
    "defaultExtent": "{\"xmin\": -31211653.14061199, \"ymin\": -27510234.270025503, \"xmax\": 39211653.14061456, \"ymax\": 34503962.231349826}"
  },
  5641: {
    "label": "SIRGAS 2000 Brazil Mercator",
    "defaultExtent": "{\"xmin\": -15025382.398780778, \"ymin\": -9982775.102513395, \"xmax\": 25025382.398780804, \"ymax\": 29982775.102851924}"
  },
  5643: {
    "label": "ED 1950 Southern Permian Basin Lambert",
    "defaultExtent": "{\"xmin\": -35010183.2714132, \"ymin\": -30483098.902449787, \"xmax\": 36640183.27174568, \"ymax\": 34580137.939522475}"
  },
  5644: {
    "label": "RGR 1992 UTM 39S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724002, \"ymax\": 19606785.534958888}"
  },
  5646: {
    "label": "NAD 1983 StatePlane Vermont FIPS 4400 Feet",
    "defaultExtent": "{\"xmin\": -16807092.86547564, \"ymin\": -46972656.66709737, \"xmax\": 20087926.198808964, \"ymax\": 16086840.245779505}"
  },
  5649: {
    "label": "ETRS 1989 UTM Zone 31N zE-N",
    "defaultExtent": "{\"xmin\": 25879236.232276, \"ymin\": -9606785.534958892, \"xmax\": 37120763.767724, \"ymax\": 9606785.534958888}"
  },
  5650: {
    "label": "ETRS 1989 UTM Zone 33N zE-N",
    "defaultExtent": "{\"xmin\": 27879236.232276, \"ymin\": -9606785.534958892, \"xmax\": 39120763.767724, \"ymax\": 9606785.534958888}"
  },
  5651: {
    "label": "ETRS 1989 UTM Zone 31N N-zE",
    "defaultExtent": "{\"xmin\": 25879236.232276, \"ymin\": -9606785.534958892, \"xmax\": 37120763.767724, \"ymax\": 9606785.534958888}"
  },
  5652: {
    "label": "ETRS 1989 UTM Zone 32N N-zE",
    "defaultExtent": "{\"xmin\": 26879236.232276, \"ymin\": -9606785.534958892, \"xmax\": 38120763.767724, \"ymax\": 9606785.534958888}"
  },
  5653: {
    "label": "ETRS 1989 UTM Zone 33N N-zE",
    "defaultExtent": "{\"xmin\": 27879236.232276, \"ymin\": -9606785.534958892, \"xmax\": 39120763.767724, \"ymax\": 9606785.534958888}"
  },
  5654: {
    "label": "NAD 1983 HARN StatePlane Vermont FIPS 4400 Ft US",
    "defaultExtent": "{\"xmin\": -16807092.86547564, \"ymin\": -46972656.66709737, \"xmax\": 20087926.198808964, \"ymax\": 16086840.245779505}"
  },
  5655: {
    "label": "NAD 1983 NSRS2007 StatePlane Vermont FIPS 4400 Ft US",
    "defaultExtent": "{\"xmin\": -16807092.86547564, \"ymin\": -46972656.66709737, \"xmax\": 20087926.198808964, \"ymax\": 16086840.245779505}"
  },
  5659: {
    "label": "Monte Mario TM Emilia-Romagna",
    "defaultExtent": "{\"xmin\": -5120953.178542033, \"ymin\": -13606907.05249956, \"xmax\": 6121059.178542033, \"ymax\": 5607267.052499557}"
  },
  5663: {
    "label": "Pulkovo 1942 Adj 1958 GK Zone 3 E-N",
    "defaultExtent": "{\"xmin\": -2123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 9123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5664: {
    "label": "Pulkovo 1942 Adj 1983 GK Zone 2 E-N",
    "defaultExtent": "{\"xmin\": -3123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 8123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5665: {
    "label": "Pulkovo 1942 Adj 1983 GK Zone 3 E-N",
    "defaultExtent": "{\"xmin\": -2123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 9123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5666: {
    "label": "PD/83 3 Degree GK Zone 3 E-N",
    "defaultExtent": "{\"xmin\": -2122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 9122345.712638918, \"ymax\": 9609569.127050688}"
  },
  5667: {
    "label": "PD/83 3 Degree GK Zone 4 E-N",
    "defaultExtent": "{\"xmin\": -1122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 10122345.712638918, \"ymax\": 9609569.127050688}"
  },
  5668: {
    "label": "RD/83 3 Degree GK Zone 4 E-N",
    "defaultExtent": "{\"xmin\": -1122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 10122345.712638918, \"ymax\": 9609569.127050688}"
  },
  5669: {
    "label": "RD/83 3 Degree GK Zone 5 E-N",
    "defaultExtent": "{\"xmin\": -122345.71263891924, \"ymin\": -9609569.127050694, \"xmax\": 11122345.712638918, \"ymax\": 9609569.127050688}"
  },
  5670: {
    "label": "Pulkovo 1942 Adj 1958 3 Degree GK Zone 3 E-N",
    "defaultExtent": "{\"xmin\": -2123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 9123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5671: {
    "label": "Pulkovo 1942 Adj 1958 3 Degree GK Zone 4 E-N",
    "defaultExtent": "{\"xmin\": -1123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 10123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5672: {
    "label": "Pulkovo 1942 Adj 1958 3 Degree GK Zone 5 E-N",
    "defaultExtent": "{\"xmin\": -123107.46752671711, \"ymin\": -9610795.116133098, \"xmax\": 11123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5673: {
    "label": "Pulkovo 1942 Adj 1983 3 Degree GK Zone 3 E-N",
    "defaultExtent": "{\"xmin\": -2123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 9123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5674: {
    "label": "Pulkovo 1942 Adj 1983 3 Degree GK Zone 4 E-N",
    "defaultExtent": "{\"xmin\": -1123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 10123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5675: {
    "label": "Pulkovo 1942 Adj 1983 3 Degree GK Zone 5 E-N",
    "defaultExtent": "{\"xmin\": -123107.46752671711, \"ymin\": -9610795.116133098, \"xmax\": 11123107.467526717, \"ymax\": 9610795.116133094}"
  },
  5676: {
    "label": "DHDN 3 Degree GK Zone 2 E-N",
    "defaultExtent": "{\"xmin\": -3122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 8122345.712638919, \"ymax\": 9609569.127050688}"
  },
  5677: {
    "label": "DHDN 3 Degree GK Zone 3 E-N",
    "defaultExtent": "{\"xmin\": -2122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 9122345.712638918, \"ymax\": 9609569.127050688}"
  },
  5678: {
    "label": "DHDN 3 Degree GK Zone 4 E-N",
    "defaultExtent": "{\"xmin\": -1122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 10122345.712638918, \"ymax\": 9609569.127050688}"
  },
  5679: {
    "label": "DHDN 3 Degree GK Zone 5 E-N",
    "defaultExtent": "{\"xmin\": -122345.71263891924, \"ymin\": -9609569.127050694, \"xmax\": 11122345.712638918, \"ymax\": 9609569.127050688}"
  },
  5680: {
    "label": "DHDN 3 Degree GK Zone 1 E-N",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.71263892, \"ymax\": 9609569.127050688}"
  },
  5681: {
    "label": "GCS DB REF",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5682: {
    "label": "DB REF 3-Degree GK Zone 2 (E-N)",
    "defaultExtent": "{\"xmin\": -3122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 8122345.712638919, \"ymax\": 9609569.127050688}"
  },
  5683: {
    "label": "DB REF 3-Degree GK Zone 3 (E-N)",
    "defaultExtent": "{\"xmin\": -2122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 9122345.712638918, \"ymax\": 9609569.127050688}"
  },
  5684: {
    "label": "DB REF 3-Degree GK Zone 4 (E-N)",
    "defaultExtent": "{\"xmin\": -1122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 10122345.712638918, \"ymax\": 9609569.127050688}"
  },
  5685: {
    "label": "DB REF 3-Degree GK Zone 5 (E-N)",
    "defaultExtent": "{\"xmin\": -122345.71263891924, \"ymin\": -9609569.127050694, \"xmax\": 11122345.712638918, \"ymax\": 9609569.127050688}"
  },
  5700: {
    "label": "NZGD 2000 UTM Zone 1S",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  5825: {
    "label": "AGD 1966 ACT Standard Grid",
    "defaultExtent": "{\"xmin\": -5423516.952088407, \"ymin\": -5101297.028661731, \"xmax\": 5823516.952228073, \"ymax\": 14121684.016439361}"
  },
  5836: {
    "label": "Yemen NGN 1996 UTM Zone 37N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.7676994335, \"ymax\": 9606785.535047516}"
  },
  5837: {
    "label": "Yemen NGN 1996 UTM Zone 40N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  5839: {
    "label": "Peru96 UTM Zone 17S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  5842: {
    "label": "WGS 1984 TM 12 SE",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  5844: {
    "label": "RGRDC 2005 Congo TM Zone 30",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": 390331.2761050463, \"xmax\": 6122450.6716158725, \"ymax\": 19609668.72389495}"
  },
  5858: {
    "label": "SAD 1969 96 UTM Zone 22S",
    "defaultExtent": "{\"xmin\": -5120784.157939794, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  5875: {
    "label": "SAD 1969 96 UTM Zone 18S",
    "defaultExtent": "{\"xmin\": -5120784.157939795, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  5876: {
    "label": "SAD 1969 96 UTM Zone 19S",
    "defaultExtent": "{\"xmin\": -5120784.157939795, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  5877: {
    "label": "SAD 1969 96 UTM Zone 20S",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  5879: {
    "label": "Cadastre 1997 UTM Zone 38S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  5880: {
    "label": "SIRGAS 2000 Brazil Polyconic",
    "defaultExtent": "{\"xmin\": -15037507.067179196, \"ymin\": -5348253.618430104, \"xmax\": 25037507.06717921, \"ymax\": 25348253.618430093}"
  },
  5886: {
    "label": "GCS TGD2005",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  5887: {
    "label": "TGD2005 Tonga Map Grid",
    "defaultExtent": "{\"xmin\": -4120763.7677239766, \"ymin\": -4606785.534938088, \"xmax\": 7120763.767724008, \"ymax\": 14606785.534938097}"
  },
  5890: {
    "label": "JAXA Snow Depth Polar Stereographic North",
    "defaultExtent": "{\"xmin\": -30645853.441111725, \"ymin\": -30645853.441111576, \"xmax\": 30645853.441111114, \"ymax\": 30645853.441111576}"
  },
  20002: {
    "label": "Pulkovo 1995 GK Zone 2",
    "defaultExtent": "{\"xmin\": -3123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 8123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20003: {
    "label": "Pulkovo 1995 GK Zone 3",
    "defaultExtent": "{\"xmin\": -2123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 9123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20004: {
    "label": "Pulkovo 1995 GK Zone 4",
    "defaultExtent": "{\"xmin\": -1123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 10123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20005: {
    "label": "Pulkovo 1995 GK Zone 5",
    "defaultExtent": "{\"xmin\": -123107.46752671711, \"ymin\": -9610795.116133098, \"xmax\": 11123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20006: {
    "label": "Pulkovo 1995 GK Zone 6",
    "defaultExtent": "{\"xmin\": 876892.5324732829, \"ymin\": -9610795.116133098, \"xmax\": 12123107.467526715, \"ymax\": 9610795.116133094}"
  },
  20007: {
    "label": "Pulkovo 1995 GK Zone 7",
    "defaultExtent": "{\"xmin\": 1876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 13123107.467526715, \"ymax\": 9610795.116133094}"
  },
  20008: {
    "label": "Pulkovo 1995 GK Zone 8",
    "defaultExtent": "{\"xmin\": 2876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 14123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20009: {
    "label": "Pulkovo 1995 GK Zone 9",
    "defaultExtent": "{\"xmin\": 3876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 15123107.467526719, \"ymax\": 9610795.116133094}"
  },
  20010: {
    "label": "Pulkovo 1995 GK Zone 10",
    "defaultExtent": "{\"xmin\": 4876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 16123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20011: {
    "label": "Pulkovo 1995 GK Zone 11",
    "defaultExtent": "{\"xmin\": 5876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 17123107.46752672, \"ymax\": 9610795.116133094}"
  },
  20012: {
    "label": "Pulkovo 1995 GK Zone 12",
    "defaultExtent": "{\"xmin\": 6876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 18123107.46752672, \"ymax\": 9610795.116133094}"
  },
  20013: {
    "label": "Pulkovo 1995 GK Zone 13",
    "defaultExtent": "{\"xmin\": 7876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 19123107.46752672, \"ymax\": 9610795.116133094}"
  },
  20014: {
    "label": "Pulkovo 1995 GK Zone 14",
    "defaultExtent": "{\"xmin\": 8876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 20123107.46752672, \"ymax\": 9610795.116133094}"
  },
  20015: {
    "label": "Pulkovo 1995 GK Zone 15",
    "defaultExtent": "{\"xmin\": 9876892.532473283, \"ymin\": -9610795.116133101, \"xmax\": 21123107.467526715, \"ymax\": 9610795.116133094}"
  },
  20016: {
    "label": "Pulkovo 1995 GK Zone 16",
    "defaultExtent": "{\"xmin\": 10876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 22123107.467526715, \"ymax\": 9610795.116133094}"
  },
  20017: {
    "label": "Pulkovo 1995 GK Zone 17",
    "defaultExtent": "{\"xmin\": 11876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 23123107.46752672, \"ymax\": 9610795.116133094}"
  },
  20018: {
    "label": "Pulkovo 1995 GK Zone 18",
    "defaultExtent": "{\"xmin\": 12876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 24123107.46752672, \"ymax\": 9610795.116133094}"
  },
  20019: {
    "label": "Pulkovo 1995 GK Zone 19",
    "defaultExtent": "{\"xmin\": 13876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 25123107.467526715, \"ymax\": 9610795.116133094}"
  },
  20020: {
    "label": "Pulkovo 1995 GK Zone 20",
    "defaultExtent": "{\"xmin\": 14876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 26123107.46752672, \"ymax\": 9610795.116133094}"
  },
  20021: {
    "label": "Pulkovo 1995 GK Zone 21",
    "defaultExtent": "{\"xmin\": 15876892.532473281, \"ymin\": -9610795.116133098, \"xmax\": 27123107.46752672, \"ymax\": 9610795.116133096}"
  },
  20022: {
    "label": "Pulkovo 1995 GK Zone 22",
    "defaultExtent": "{\"xmin\": 16876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 28123107.46752672, \"ymax\": 9610795.116133094}"
  },
  20023: {
    "label": "Pulkovo 1995 GK Zone 23",
    "defaultExtent": "{\"xmin\": 17876892.53247328, \"ymin\": -9610795.116133096, \"xmax\": 29123105.667374637, \"ymax\": 9610795.116133094}"
  },
  20024: {
    "label": "Pulkovo 1995 GK Zone 24",
    "defaultExtent": "{\"xmin\": 18876892.53247329, \"ymin\": -9610795.116112284, \"xmax\": 30123107.467526726, \"ymax\": 9610795.116112294}"
  },
  20025: {
    "label": "Pulkovo 1995 GK Zone 25",
    "defaultExtent": "{\"xmin\": 19876892.532473292, \"ymin\": -9610795.116112284, \"xmax\": 31123107.467526726, \"ymax\": 9610795.116112294}"
  },
  20026: {
    "label": "Pulkovo 1995 GK Zone 26",
    "defaultExtent": "{\"xmin\": 20876892.532473292, \"ymin\": -9610795.116112284, \"xmax\": 32123107.467526726, \"ymax\": 9610795.116112294}"
  },
  20027: {
    "label": "Pulkovo 1995 GK Zone 27",
    "defaultExtent": "{\"xmin\": 21876892.5324733, \"ymin\": -9610795.116112284, \"xmax\": 33123107.467526726, \"ymax\": 9610795.116112294}"
  },
  20028: {
    "label": "Pulkovo 1995 GK Zone 28",
    "defaultExtent": "{\"xmin\": 22876892.532473303, \"ymin\": -9610795.116112284, \"xmax\": 34123107.46752673, \"ymax\": 9610795.116112294}"
  },
  20029: {
    "label": "Pulkovo 1995 GK Zone 29",
    "defaultExtent": "{\"xmin\": 23876892.532473303, \"ymin\": -9610795.116112284, \"xmax\": 35123107.46752673, \"ymax\": 9610795.116112294}"
  },
  20030: {
    "label": "Pulkovo 1995 GK Zone 30",
    "defaultExtent": "{\"xmin\": 24876892.5324733, \"ymin\": -9610795.116112284, \"xmax\": 36123107.46752673, \"ymax\": 9610795.116112294}"
  },
  20031: {
    "label": "Pulkovo 1995 GK Zone 31",
    "defaultExtent": "{\"xmin\": 25876892.532473307, \"ymin\": -9610795.116112284, \"xmax\": 37123107.46752673, \"ymax\": 9610795.116112294}"
  },
  20032: {
    "label": "Pulkovo 1995 GK Zone 32",
    "defaultExtent": "{\"xmin\": 26876892.532473307, \"ymin\": -9610795.116112284, \"xmax\": 38123107.46752673, \"ymax\": 9610795.116112294}"
  },
  20062: {
    "label": "Pulkovo 1995 GK Zone 2N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20063: {
    "label": "Pulkovo 1995 GK Zone 3N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20064: {
    "label": "Pulkovo 1995 GK Zone 4N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20065: {
    "label": "Pulkovo 1995 GK Zone 5N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20066: {
    "label": "Pulkovo 1995 GK Zone 6N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  20067: {
    "label": "Pulkovo 1995 GK Zone 7N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  20068: {
    "label": "Pulkovo 1995 GK Zone 8N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20069: {
    "label": "Pulkovo 1995 GK Zone 9N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526718, \"ymax\": 9610795.116133094}"
  },
  20070: {
    "label": "Pulkovo 1995 GK Zone 10N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20071: {
    "label": "Pulkovo 1995 GK Zone 11N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20072: {
    "label": "Pulkovo 1995 GK Zone 12N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.46752672, \"ymax\": 9610795.116133094}"
  },
  20073: {
    "label": "Pulkovo 1995 GK Zone 13N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.46752672, \"ymax\": 9610795.116133094}"
  },
  20074: {
    "label": "Pulkovo 1995 GK Zone 14N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20075: {
    "label": "Pulkovo 1995 GK Zone 15N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133101, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  20076: {
    "label": "Pulkovo 1995 GK Zone 16N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  20077: {
    "label": "Pulkovo 1995 GK Zone 17N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20078: {
    "label": "Pulkovo 1995 GK Zone 18N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20079: {
    "label": "Pulkovo 1995 GK Zone 19N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  20080: {
    "label": "Pulkovo 1995 GK Zone 20N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20081: {
    "label": "Pulkovo 1995 GK Zone 21N",
    "defaultExtent": "{\"xmin\": -5123107.46752672, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133096}"
  },
  20082: {
    "label": "Pulkovo 1995 GK Zone 22N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  20083: {
    "label": "Pulkovo 1995 GK Zone 23N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133096, \"xmax\": 6123105.667374637, \"ymax\": 9610795.116133094}"
  },
  20084: {
    "label": "Pulkovo 1995 GK Zone 24N",
    "defaultExtent": "{\"xmin\": -5123107.46752671, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  20085: {
    "label": "Pulkovo 1995 GK Zone 25N",
    "defaultExtent": "{\"xmin\": -5123107.467526707, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  20086: {
    "label": "Pulkovo 1995 GK Zone 26N",
    "defaultExtent": "{\"xmin\": -5123107.467526707, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  20087: {
    "label": "Pulkovo 1995 GK Zone 27N",
    "defaultExtent": "{\"xmin\": -5123107.467526701, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  20088: {
    "label": "Pulkovo 1995 GK Zone 28N",
    "defaultExtent": "{\"xmin\": -5123107.467526697, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  20089: {
    "label": "Pulkovo 1995 GK Zone 29N",
    "defaultExtent": "{\"xmin\": -5123107.467526697, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  20090: {
    "label": "Pulkovo 1995 GK Zone 30N",
    "defaultExtent": "{\"xmin\": -5123107.467526701, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  20091: {
    "label": "Pulkovo 1995 GK Zone 31N",
    "defaultExtent": "{\"xmin\": -5123107.467526693, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  20092: {
    "label": "Pulkovo 1995 GK Zone 32N",
    "defaultExtent": "{\"xmin\": -5123107.467526693, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  20135: {
    "label": "Adindan UTM Zone 35N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  20136: {
    "label": "Adindan UTM Zone 36N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  20137: {
    "label": "Adindan UTM Zone 37N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  20138: {
    "label": "Adindan UTM Zone 38N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  20248: {
    "label": "AGD 1966 AMG Zone 48",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  20249: {
    "label": "AGD 1966 AMG Zone 49",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939791, \"ymax\": 19606819.739861667}"
  },
  20250: {
    "label": "AGD 1966 AMG Zone 50",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  20251: {
    "label": "AGD 1966 AMG Zone 51",
    "defaultExtent": "{\"xmin\": -5120784.157939795, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  20252: {
    "label": "AGD 1966 AMG Zone 52",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  20253: {
    "label": "AGD 1966 AMG Zone 53",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.260138331, \"xmax\": 6120782.358530981, \"ymax\": 19606819.739861667}"
  },
  20254: {
    "label": "AGD 1966 AMG Zone 54",
    "defaultExtent": "{\"xmin\": -5120784.157939785, \"ymin\": 393180.26015913114, \"xmax\": 6120784.1579398, \"ymax\": 19606819.73984088}"
  },
  20255: {
    "label": "AGD 1966 AMG Zone 55",
    "defaultExtent": "{\"xmin\": -5120784.157939782, \"ymin\": 393180.26015913114, \"xmax\": 6120784.1579398, \"ymax\": 19606819.73984088}"
  },
  20256: {
    "label": "AGD 1966 AMG Zone 56",
    "defaultExtent": "{\"xmin\": -5120784.157939782, \"ymin\": 393180.26015913114, \"xmax\": 6120784.1579398, \"ymax\": 19606819.73984088}"
  },
  20257: {
    "label": "AGD 1966 AMG Zone 57",
    "defaultExtent": "{\"xmin\": -5120784.157939777, \"ymin\": 393180.26015913114, \"xmax\": 6120784.1579398, \"ymax\": 19606819.73984088}"
  },
  20258: {
    "label": "AGD 1966 AMG Zone 58",
    "defaultExtent": "{\"xmin\": -5120784.157939773, \"ymin\": 393180.26015913114, \"xmax\": 6120784.1579398, \"ymax\": 19606819.73984088}"
  },
  20348: {
    "label": "AGD 1984 AMG Zone 48",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  20349: {
    "label": "AGD 1984 AMG Zone 49",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939791, \"ymax\": 19606819.739861667}"
  },
  20350: {
    "label": "AGD 1984 AMG Zone 50",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  20351: {
    "label": "AGD 1984 AMG Zone 51",
    "defaultExtent": "{\"xmin\": -5120784.157939795, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  20352: {
    "label": "AGD 1984 AMG Zone 52",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  20353: {
    "label": "AGD 1984 AMG Zone 53",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.260138331, \"xmax\": 6120782.358530981, \"ymax\": 19606819.739861667}"
  },
  20354: {
    "label": "AGD 1984 AMG Zone 54",
    "defaultExtent": "{\"xmin\": -5120784.157939785, \"ymin\": 393180.26015913114, \"xmax\": 6120784.1579398, \"ymax\": 19606819.73984088}"
  },
  20355: {
    "label": "AGD 1984 AMG Zone 55",
    "defaultExtent": "{\"xmin\": -5120784.157939782, \"ymin\": 393180.26015913114, \"xmax\": 6120784.1579398, \"ymax\": 19606819.73984088}"
  },
  20356: {
    "label": "AGD 1984 AMG Zone 56",
    "defaultExtent": "{\"xmin\": -5120784.157939782, \"ymin\": 393180.26015913114, \"xmax\": 6120784.1579398, \"ymax\": 19606819.73984088}"
  },
  20357: {
    "label": "AGD 1984 AMG Zone 57",
    "defaultExtent": "{\"xmin\": -5120784.157939777, \"ymin\": 393180.26015913114, \"xmax\": 6120784.1579398, \"ymax\": 19606819.73984088}"
  },
  20358: {
    "label": "AGD 1984 AMG Zone 58",
    "defaultExtent": "{\"xmin\": -5120784.157939773, \"ymin\": 393180.26015913114, \"xmax\": 6120784.1579398, \"ymax\": 19606819.73984088}"
  },
  20436: {
    "label": "Ain el Abd UTM Zone 36N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542031, \"ymax\": 9607087.052499557}"
  },
  20437: {
    "label": "Ain el Abd UTM Zone 37N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542031, \"ymax\": 9607087.052499557}"
  },
  20438: {
    "label": "Ain el Abd UTM Zone 38N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  20439: {
    "label": "Ain el Abd UTM Zone 39N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542034, \"ymax\": 9607087.052499557}"
  },
  20440: {
    "label": "Ain el Abd UTM Zone 40N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  20499: {
    "label": "Bahrain State Grid",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542034, \"ymax\": 9607087.052499557}"
  },
  20538: {
    "label": "Afgooye UTM Zone 38N",
    "defaultExtent": "{\"xmin\": -5120858.224539707, \"ymin\": -9606950.798086647, \"xmax\": 6120858.224539707, \"ymax\": 9606950.798086641}"
  },
  20539: {
    "label": "Afgooye UTM Zone 39N",
    "defaultExtent": "{\"xmin\": -5120858.224539707, \"ymin\": -9606950.798086647, \"xmax\": 6120858.224539707, \"ymax\": 9606950.798086641}"
  },
  20790: {
    "label": "Portuguese National Grid",
    "defaultExtent": "{\"xmin\": -5423255.480734327, \"ymin\": -13703524.858224163, \"xmax\": 5823255.480734327, \"ymax\": 5518337.99191501}"
  },
  20791: {
    "label": "Lisbon Lisbon Portuguese Grid",
    "defaultExtent": "{\"xmin\": -5623255.480734327, \"ymin\": -14003524.858224163, \"xmax\": 5623255.480734327, \"ymax\": 5218337.99191501}"
  },
  20822: {
    "label": "Aratu UTM Zone 22S",
    "defaultExtent": "{\"xmin\": -5121006.178542034, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  20823: {
    "label": "Aratu UTM Zone 23S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  20824: {
    "label": "Aratu UTM Zone 24S",
    "defaultExtent": "{\"xmin\": -5121006.178542031, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  20934: {
    "label": "Arc 1950 UTM Zone 34S",
    "defaultExtent": "{\"xmin\": -5120944.422247933, \"ymin\": 393340.7290551327, \"xmax\": 6120944.422247933, \"ymax\": 19606659.270944864}"
  },
  20935: {
    "label": "Arc 1950 UTM Zone 35S",
    "defaultExtent": "{\"xmin\": -5120944.422247933, \"ymin\": 393340.7290551327, \"xmax\": 6120944.422247933, \"ymax\": 19606659.270944864}"
  },
  20936: {
    "label": "Arc 1950 UTM Zone 36S",
    "defaultExtent": "{\"xmin\": -5120944.422247933, \"ymin\": 393340.7290551327, \"xmax\": 6120944.422247931, \"ymax\": 19606659.270944864}"
  },
  21035: {
    "label": "Arc 1960 UTM Zone 35S",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": 393340.8109377753, \"xmax\": 6120944.444949269, \"ymax\": 19606659.189062223}"
  },
  21036: {
    "label": "Arc 1960 UTM Zone 36S",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": 393340.8109377753, \"xmax\": 6120944.444949269, \"ymax\": 19606659.189062223}"
  },
  21037: {
    "label": "Arc 1960 UTM Zone 37S",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": 393340.8109377753, \"xmax\": 6120944.444949269, \"ymax\": 19606659.189062223}"
  },
  21095: {
    "label": "Arc 1960 UTM Zone 35N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  21096: {
    "label": "Arc 1960 UTM Zone 36N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  21097: {
    "label": "Arc 1960 UTM Zone 37N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  21148: {
    "label": "Batavia UTM Zone 48S",
    "defaultExtent": "{\"xmin\": -5120096.774353864, \"ymin\": 394274.7006001249, \"xmax\": 6120096.774353864, \"ymax\": 19605725.299399868}"
  },
  21149: {
    "label": "Batavia UTM Zone 49S",
    "defaultExtent": "{\"xmin\": -5120096.774353864, \"ymin\": 394274.7006001249, \"xmax\": 6120096.774353862, \"ymax\": 19605725.299399868}"
  },
  21150: {
    "label": "Batavia UTM Zone 50S",
    "defaultExtent": "{\"xmin\": -5120096.774353864, \"ymin\": 394274.7006001249, \"xmax\": 6120096.774353864, \"ymax\": 19605725.299399868}"
  },
  21291: {
    "label": "Barbados 1938 British West Indies Grid",
    "defaultExtent": "{\"xmin\": -5220382.125577026, \"ymin\": -9605698.138723183, \"xmax\": 6020382.125577026, \"ymax\": 9605698.13872318}"
  },
  21292: {
    "label": "Barbados 1938 Barbados Grid",
    "defaultExtent": "{\"xmin\": -5593185.849967033, \"ymin\": -10992582.504261198, \"xmax\": 5653185.849967033, \"ymax\": 8228397.367166089}"
  },
  21413: {
    "label": "Beijing 1954 GK Zone 13",
    "defaultExtent": "{\"xmin\": 7876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 19123107.46752672, \"ymax\": 9610795.116133094}"
  },
  21414: {
    "label": "Beijing 1954 GK Zone 14",
    "defaultExtent": "{\"xmin\": 8876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 20123107.46752672, \"ymax\": 9610795.116133094}"
  },
  21415: {
    "label": "Beijing 1954 GK Zone 15",
    "defaultExtent": "{\"xmin\": 9876892.532473283, \"ymin\": -9610795.116133101, \"xmax\": 21123107.467526715, \"ymax\": 9610795.116133094}"
  },
  21416: {
    "label": "Beijing 1954 GK Zone 16",
    "defaultExtent": "{\"xmin\": 10876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 22123107.467526715, \"ymax\": 9610795.116133094}"
  },
  21417: {
    "label": "Beijing 1954 GK Zone 17",
    "defaultExtent": "{\"xmin\": 11876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 23123107.46752672, \"ymax\": 9610795.116133094}"
  },
  21418: {
    "label": "Beijing 1954 GK Zone 18",
    "defaultExtent": "{\"xmin\": 12876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 24123107.46752672, \"ymax\": 9610795.116133094}"
  },
  21419: {
    "label": "Beijing 1954 GK Zone 19",
    "defaultExtent": "{\"xmin\": 13876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 25123107.467526715, \"ymax\": 9610795.116133094}"
  },
  21420: {
    "label": "Beijing 1954 GK Zone 20",
    "defaultExtent": "{\"xmin\": 14876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 26123107.46752672, \"ymax\": 9610795.116133094}"
  },
  21421: {
    "label": "Beijing 1954 GK Zone 21",
    "defaultExtent": "{\"xmin\": 15876892.532473281, \"ymin\": -9610795.116133098, \"xmax\": 27123107.46752672, \"ymax\": 9610795.116133096}"
  },
  21422: {
    "label": "Beijing 1954 GK Zone 22",
    "defaultExtent": "{\"xmin\": 16876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 28123107.46752672, \"ymax\": 9610795.116133094}"
  },
  21423: {
    "label": "Beijing 1954 GK Zone 23",
    "defaultExtent": "{\"xmin\": 17876892.53247328, \"ymin\": -9610795.116133096, \"xmax\": 29123105.667374637, \"ymax\": 9610795.116133094}"
  },
  21473: {
    "label": "Beijing 1954 GK Zone 13N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.46752672, \"ymax\": 9610795.116133094}"
  },
  21474: {
    "label": "Beijing 1954 GK Zone 14N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  21475: {
    "label": "Beijing 1954 GK Zone 15N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133101, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  21476: {
    "label": "Beijing 1954 GK Zone 16N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  21477: {
    "label": "Beijing 1954 GK Zone 17N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  21478: {
    "label": "Beijing 1954 GK Zone 18N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  21479: {
    "label": "Beijing 1954 GK Zone 19N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  21480: {
    "label": "Beijing 1954 GK Zone 20N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  21481: {
    "label": "Beijing 1954 GK Zone 21N",
    "defaultExtent": "{\"xmin\": -5123107.46752672, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133096}"
  },
  21482: {
    "label": "Beijing 1954 GK Zone 22N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  21483: {
    "label": "Beijing 1954 GK Zone 23N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133096, \"xmax\": 6123105.667374637, \"ymax\": 9610795.116133094}"
  },
  21500: {
    "label": "Belge Lambert 1950",
    "defaultExtent": "{\"xmin\": -35872636.625857346, \"ymin\": -30622636.623816065, \"xmax\": 36172636.6258614, \"ymax\": 32543515.34114731}"
  },
  21780: {
    "label": "Bern 1898 Bern LV03C",
    "defaultExtent": "{\"xmin\": -29986227.448577397, \"ymin\": -33267738.605040614, \"xmax\": 9889449.048149815, \"ymax\": 30615241.658078846}"
  },
  21781: {
    "label": "CH1903 LV03",
    "defaultExtent": "{\"xmin\": -29386227.448577397, \"ymin\": -33067738.605040614, \"xmax\": 10489449.048149817, \"ymax\": 30815241.658078846}"
  },
  21782: {
    "label": "CH1903 LV03C-G",
    "defaultExtent": "{\"xmin\": -29986227.448577397, \"ymin\": -33267738.605040614, \"xmax\": 9889449.048149817, \"ymax\": 30615241.658078846}"
  },
  21817: {
    "label": "Bogota UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  21818: {
    "label": "Bogota UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5121006.178542035, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  21896: {
    "label": "Colombia West Zone",
    "defaultExtent": "{\"xmin\": -4623255.480734324, \"ymin\": -9119484.269387636, \"xmax\": 6623255.480734327, \"ymax\": 10102378.580751536}"
  },
  21897: {
    "label": "Colombia Bogota Zone",
    "defaultExtent": "{\"xmin\": -4623255.480734329, \"ymin\": -9119484.269387636, \"xmax\": 6623255.480734327, \"ymax\": 10102378.580751536}"
  },
  21898: {
    "label": "Colombia East Central Zone",
    "defaultExtent": "{\"xmin\": -4623255.480734327, \"ymin\": -9119484.269387636, \"xmax\": 6623255.480734327, \"ymax\": 10102378.580751536}"
  },
  21899: {
    "label": "Colombia East Zone",
    "defaultExtent": "{\"xmin\": -4623255.480734327, \"ymin\": -9119484.269387636, \"xmax\": 6623255.480734327, \"ymax\": 10102378.580751536}"
  },
  22032: {
    "label": "Camacupa UTM Zone 32S",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": 393340.8109377753, \"xmax\": 6120944.444949269, \"ymax\": 19606659.189062223}"
  },
  22033: {
    "label": "Camacupa UTM Zone 33S",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": 393340.8109377753, \"xmax\": 6120944.444949269, \"ymax\": 19606659.189062223}"
  },
  22091: {
    "label": "Camacupa TM 11 30 SE",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": 393340.8109377753, \"xmax\": 6120944.444949269, \"ymax\": 19606659.189062223}"
  },
  22092: {
    "label": "Camacupa TM 12 SE",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": 393340.8109377753, \"xmax\": 6120944.444949269, \"ymax\": 19606659.189062223}"
  },
  22171: {
    "label": "POSGAR 1998 Argentina Zone 1",
    "defaultExtent": "{\"xmin\": -4123012.9729131646, \"ymin\": 391335.94235681987, \"xmax\": 7123012.972913165, \"ymax\": 19612595.516104095}"
  },
  22172: {
    "label": "POSGAR 1998 Argentina Zone 2",
    "defaultExtent": "{\"xmin\": -3123012.9729131674, \"ymin\": 391335.94235681987, \"xmax\": 8123012.972913165, \"ymax\": 19612595.516104095}"
  },
  22173: {
    "label": "POSGAR 1998 Argentina Zone 3",
    "defaultExtent": "{\"xmin\": -2123012.9729131646, \"ymin\": 391335.94235681987, \"xmax\": 9123012.972913165, \"ymax\": 19612595.516104095}"
  },
  22174: {
    "label": "POSGAR 1998 Argentina Zone 4",
    "defaultExtent": "{\"xmin\": -1123012.9729131646, \"ymin\": 391335.94235681987, \"xmax\": 10123012.972913165, \"ymax\": 19612595.516104095}"
  },
  22175: {
    "label": "POSGAR 1998 Argentina Zone 5",
    "defaultExtent": "{\"xmin\": -123012.97291316744, \"ymin\": 391335.94235681987, \"xmax\": 11123012.972913165, \"ymax\": 19612595.516104095}"
  },
  22176: {
    "label": "POSGAR 1998 Argentina Zone 6",
    "defaultExtent": "{\"xmin\": 876987.0270868354, \"ymin\": 391335.94235681987, \"xmax\": 12123012.972913165, \"ymax\": 19612595.516104095}"
  },
  22177: {
    "label": "POSGAR 1998 Argentina Zone 7",
    "defaultExtent": "{\"xmin\": 1876987.0270868354, \"ymin\": 391335.94235681987, \"xmax\": 13123012.972913165, \"ymax\": 19612595.516104095}"
  },
  22181: {
    "label": "POSGAR 1994 Argentina Zone 1",
    "defaultExtent": "{\"xmin\": -4123012.9729131646, \"ymin\": 391335.94235681987, \"xmax\": 7123012.972913165, \"ymax\": 19612595.516104095}"
  },
  22182: {
    "label": "POSGAR 1994 Argentina Zone 2",
    "defaultExtent": "{\"xmin\": -3123012.9729131674, \"ymin\": 391335.94235681987, \"xmax\": 8123012.972913165, \"ymax\": 19612595.516104095}"
  },
  22183: {
    "label": "POSGAR 1994 Argentina Zone 3",
    "defaultExtent": "{\"xmin\": -2123012.9729131646, \"ymin\": 391335.94235681987, \"xmax\": 9123012.972913165, \"ymax\": 19612595.516104095}"
  },
  22184: {
    "label": "POSGAR 1994 Argentina Zone 4",
    "defaultExtent": "{\"xmin\": -1123012.9729131646, \"ymin\": 391335.94235681987, \"xmax\": 10123012.972913165, \"ymax\": 19612595.516104095}"
  },
  22185: {
    "label": "POSGAR 1994 Argentina Zone 5",
    "defaultExtent": "{\"xmin\": -123012.97291316744, \"ymin\": 391335.94235681987, \"xmax\": 11123012.972913165, \"ymax\": 19612595.516104095}"
  },
  22186: {
    "label": "POSGAR 1994 Argentina Zone 6",
    "defaultExtent": "{\"xmin\": 876987.0270868354, \"ymin\": 391335.94235681987, \"xmax\": 12123012.972913165, \"ymax\": 19612595.516104095}"
  },
  22187: {
    "label": "POSGAR 1994 Argentina Zone 7",
    "defaultExtent": "{\"xmin\": 1876987.0270868354, \"ymin\": 391335.94235681987, \"xmax\": 13123012.972913165, \"ymax\": 19612595.516104095}"
  },
  22191: {
    "label": "Argentina Zone 1",
    "defaultExtent": "{\"xmin\": -4123255.480734327, \"ymin\": 391356.8739198543, \"xmax\": 7123255.480734327, \"ymax\": 19613219.724059027}"
  },
  22192: {
    "label": "Argentina Zone 2",
    "defaultExtent": "{\"xmin\": -3123255.4807343287, \"ymin\": 391356.8739198543, \"xmax\": 8123255.480734327, \"ymax\": 19613219.724059027}"
  },
  22193: {
    "label": "Argentina Zone 3",
    "defaultExtent": "{\"xmin\": -2123255.480734327, \"ymin\": 391356.8739198543, \"xmax\": 9123255.480734326, \"ymax\": 19613219.724059027}"
  },
  22194: {
    "label": "Argentina Zone 4",
    "defaultExtent": "{\"xmin\": -1123255.4807343269, \"ymin\": 391356.8739198543, \"xmax\": 10123255.480734326, \"ymax\": 19613219.724059027}"
  },
  22195: {
    "label": "Argentina Zone 5",
    "defaultExtent": "{\"xmin\": -123255.48073432874, \"ymin\": 391356.8739198543, \"xmax\": 11123255.480734326, \"ymax\": 19613219.724059027}"
  },
  22196: {
    "label": "Argentina Zone 6",
    "defaultExtent": "{\"xmin\": 876744.5192656731, \"ymin\": 391356.8739198543, \"xmax\": 12123255.480734326, \"ymax\": 19613219.724059027}"
  },
  22197: {
    "label": "Argentina Zone 7",
    "defaultExtent": "{\"xmin\": 1876744.5192656731, \"ymin\": 391356.8739198543, \"xmax\": 13123255.480734326, \"ymax\": 19613219.724059027}"
  },
  22234: {
    "label": "Cape UTM Zone 34S",
    "defaultExtent": "{\"xmin\": -5120944.422247933, \"ymin\": 393340.7290551327, \"xmax\": 6120944.422247933, \"ymax\": 19606659.270944864}"
  },
  22235: {
    "label": "Cape UTM Zone 35S",
    "defaultExtent": "{\"xmin\": -5120944.422247933, \"ymin\": 393340.7290551327, \"xmax\": 6120944.422247933, \"ymax\": 19606659.270944864}"
  },
  22236: {
    "label": "Cape UTM Zone 36S",
    "defaultExtent": "{\"xmin\": -5120944.422247933, \"ymin\": 393340.7290551327, \"xmax\": 6120944.422247931, \"ymax\": 19606659.270944864}"
  },
  22332: {
    "label": "Carthage UTM Zone 32N",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": -9606659.335852288, \"xmax\": 6120944.475688979, \"ymax\": 9606659.335852282}"
  },
  22391: {
    "label": "Nord Tunisie",
    "defaultExtent": "{\"xmin\": -37094490.67079683, \"ymin\": -28508539.12928014, \"xmax\": 38094490.67077288, \"ymax\": 19323033.928321306}"
  },
  22392: {
    "label": "Sud Tunisie",
    "defaultExtent": "{\"xmin\": -37644652.57137002, \"ymin\": -28128361.974525623, \"xmax\": 38644652.571328, \"ymax\": 15867737.975734113}"
  },
  22521: {
    "label": "Corrego Alegre UTM Zone 21S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  22522: {
    "label": "Corrego Alegre UTM Zone 22S",
    "defaultExtent": "{\"xmin\": -5121006.178542034, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  22523: {
    "label": "Corrego Alegre UTM Zone 23S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  22524: {
    "label": "Corrego Alegre UTM Zone 24S",
    "defaultExtent": "{\"xmin\": -5121006.178542031, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  22525: {
    "label": "Corrego Alegre UTM Zone 25S",
    "defaultExtent": "{\"xmin\": -5121006.178542031, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  22700: {
    "label": "Deir ez Zor Levant Zone",
    "defaultExtent": "{\"xmin\": -30828939.444367345, \"ymin\": -30749687.190949254, \"xmax\": 30828943.722626586, \"ymax\": 30785446.594431575}"
  },
  22770: {
    "label": "Deir ez Zor Syria Lambert",
    "defaultExtent": "{\"xmin\": -37553502.79690192, \"ymin\": -28318238.39171624, \"xmax\": 38153502.79689231, \"ymax\": 17625756.002751935}"
  },
  22780: {
    "label": "Deir ez Zor Levant Stereographic",
    "defaultExtent": "{\"xmin\": -30828939.444367345, \"ymin\": -30749687.190949254, \"xmax\": 30828943.722626586, \"ymax\": 30785446.594431575}"
  },
  22832: {
    "label": "Douala UTM Zone 32N",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": -9606659.335852288, \"xmax\": 6120944.475688979, \"ymax\": 9606659.335852282}"
  },
  22991: {
    "label": "Egypt Blue Belt",
    "defaultExtent": "{\"xmin\": -5323067.795197411, \"ymin\": -11830876.291873828, \"xmax\": 5923067.795197411, \"ymax\": 7390578.327608526}"
  },
  22992: {
    "label": "Egypt Red Belt",
    "defaultExtent": "{\"xmin\": -5008067.795197411, \"ymin\": -12120876.291873828, \"xmax\": 6238067.795197411, \"ymax\": 7100578.327608526}"
  },
  22993: {
    "label": "Egypt Purple Belt",
    "defaultExtent": "{\"xmin\": -4923067.795197411, \"ymin\": -12730876.291873828, \"xmax\": 6323067.795197411, \"ymax\": 6490578.327608526}"
  },
  22994: {
    "label": "Egypt Extended Purple Belt",
    "defaultExtent": "{\"xmin\": -4923067.795197411, \"ymin\": -11730876.291873828, \"xmax\": 6323067.795197411, \"ymax\": 7490578.327608526}"
  },
  23028: {
    "label": "ED 1950 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  23029: {
    "label": "ED 1950 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  23030: {
    "label": "ED 1950 UTM Zone 30N",
    "defaultExtent": "{\"xmin\": -5121006.178542034, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  23031: {
    "label": "ED 1950 UTM Zone 31N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542034, \"ymax\": 9607087.052499557}"
  },
  23032: {
    "label": "ED 1950 UTM Zone 32N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  23033: {
    "label": "ED 1950 UTM Zone 33N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  23034: {
    "label": "ED 1950 UTM Zone 34N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  23035: {
    "label": "ED 1950 UTM Zone 35N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  23036: {
    "label": "ED 1950 UTM Zone 36N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542031, \"ymax\": 9607087.052499557}"
  },
  23037: {
    "label": "ED 1950 UTM Zone 37N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542031, \"ymax\": 9607087.052499557}"
  },
  23038: {
    "label": "ED 1950 UTM Zone 38N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  23090: {
    "label": "ED 1950 TM 0 N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  23095: {
    "label": "ED 1950 TM 5 NE",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  23239: {
    "label": "Fahud UTM Zone 39N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949271, \"ymax\": 9606659.189062221}"
  },
  23240: {
    "label": "Fahud UTM Zone 40N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  23700: {
    "label": "Hungarian 1972 Egyseges Orszagos Vetuleti",
    "defaultExtent": "{\"xmin\": -29338680.42037876, \"ymin\": -33101332.658409927, \"xmax\": 10539599.50213619, \"ymax\": 30826534.15607932}"
  },
  23830: {
    "label": "DGN 1995 Indonesia TM-3 Zone 46.2",
    "defaultExtent": "{\"xmin\": -5422450.6715913005, \"ymin\": -8109668.72398361, \"xmax\": 5822450.6715913005, \"ymax\": 11109668.723983606}"
  },
  23831: {
    "label": "DGN 1995 Indonesia TM-3 Zone 47.1",
    "defaultExtent": "{\"xmin\": -5422450.6715913005, \"ymin\": -8109668.72398361, \"xmax\": 5822450.671591299, \"ymax\": 11109668.723983606}"
  },
  23832: {
    "label": "DGN 1995 Indonesia TM-3 Zone 47.2",
    "defaultExtent": "{\"xmin\": -5422450.6715913005, \"ymin\": -8109668.72398361, \"xmax\": 5822450.6715913005, \"ymax\": 11109668.723983606}"
  },
  23833: {
    "label": "DGN 1995 Indonesia TM-3 Zone 48.1",
    "defaultExtent": "{\"xmin\": -5422450.6715913005, \"ymin\": -8109668.72398361, \"xmax\": 5822450.6715913005, \"ymax\": 11109668.723983606}"
  },
  23834: {
    "label": "DGN 1995 Indonesia TM-3 Zone 48.2",
    "defaultExtent": "{\"xmin\": -5422450.6715913005, \"ymin\": -8109668.72398361, \"xmax\": 5822450.671591299, \"ymax\": 11109668.723983606}"
  },
  23835: {
    "label": "DGN 1995 Indonesia TM-3 Zone 49.1",
    "defaultExtent": "{\"xmin\": -5422450.671591303, \"ymin\": -8109668.72398361, \"xmax\": 5822450.6715913005, \"ymax\": 11109668.723983606}"
  },
  23836: {
    "label": "DGN 1995 Indonesia TM-3 Zone 49.2",
    "defaultExtent": "{\"xmin\": -5422450.6715913005, \"ymin\": -8109668.72398361, \"xmax\": 5822450.6715913005, \"ymax\": 11109668.723983606}"
  },
  23837: {
    "label": "DGN 1995 Indonesia TM-3 Zone 50.1",
    "defaultExtent": "{\"xmin\": -5422450.6715913005, \"ymin\": -8109668.72398361, \"xmax\": 5822450.6715913005, \"ymax\": 11109668.723983606}"
  },
  23838: {
    "label": "DGN 1995 Indonesia TM-3 Zone 50.2",
    "defaultExtent": "{\"xmin\": -5422450.671591303, \"ymin\": -8109668.72398361, \"xmax\": 5822450.6715913005, \"ymax\": 11109668.723983606}"
  },
  23839: {
    "label": "DGN 1995 Indonesia TM-3 Zone 51.1",
    "defaultExtent": "{\"xmin\": -5422450.6715913005, \"ymin\": -8109668.72398361, \"xmax\": 5822450.6715913005, \"ymax\": 11109668.723983606}"
  },
  23840: {
    "label": "DGN 1995 Indonesia TM-3 Zone 51.2",
    "defaultExtent": "{\"xmin\": -5422450.6715913005, \"ymin\": -8109668.72398361, \"xmax\": 5822450.6715913005, \"ymax\": 11109668.723983606}"
  },
  23841: {
    "label": "DGN 1995 Indonesia TM-3 Zone 52.1",
    "defaultExtent": "{\"xmin\": -5422450.671591303, \"ymin\": -8109668.72398361, \"xmax\": 5822450.6715913005, \"ymax\": 11109668.723983606}"
  },
  23842: {
    "label": "DGN 1995 Indonesia TM-3 Zone 52.2",
    "defaultExtent": "{\"xmin\": -5422450.6715913005, \"ymin\": -8109668.72398361, \"xmax\": 5822450.6715913005, \"ymax\": 11109668.723983606}"
  },
  23843: {
    "label": "DGN 1995 Indonesia TM-3 Zone 53.1",
    "defaultExtent": "{\"xmin\": -5422450.6715913005, \"ymin\": -8109668.72398361, \"xmax\": 5822450.6715913005, \"ymax\": 11109668.723983606}"
  },
  23844: {
    "label": "DGN 1995 Indonesia TM-3 Zone 53.2",
    "defaultExtent": "{\"xmin\": -5422450.671591293, \"ymin\": -8109668.723962801, \"xmax\": 5822450.671591309, \"ymax\": 11109668.72396281}"
  },
  23845: {
    "label": "DGN 1995 Indonesia TM-3 Zone 54.1",
    "defaultExtent": "{\"xmin\": -5422450.67159129, \"ymin\": -8109668.723962801, \"xmax\": 5822450.671591309, \"ymax\": 11109668.72396281}"
  },
  23846: {
    "label": "Indonesian 1974 UTM Zone 46N",
    "defaultExtent": "{\"xmin\": -5120784.20835166, \"ymin\": -9606819.557986394, \"xmax\": 6120784.208351658, \"ymax\": 9606819.557986388}"
  },
  23847: {
    "label": "Indonesian 1974 UTM Zone 47N",
    "defaultExtent": "{\"xmin\": -5120784.20835166, \"ymin\": -9606819.557986394, \"xmax\": 6120784.20835166, \"ymax\": 9606819.557986388}"
  },
  23848: {
    "label": "Indonesian 1974 UTM Zone 48N",
    "defaultExtent": "{\"xmin\": -5120784.20835166, \"ymin\": -9606819.557986394, \"xmax\": 6120784.20835166, \"ymax\": 9606819.557986388}"
  },
  23849: {
    "label": "Indonesian 1974 UTM Zone 49N",
    "defaultExtent": "{\"xmin\": -5120784.20835166, \"ymin\": -9606819.557986394, \"xmax\": 6120784.208351658, \"ymax\": 9606819.557986388}"
  },
  23850: {
    "label": "Indonesian 1974 UTM Zone 50N",
    "defaultExtent": "{\"xmin\": -5120784.20835166, \"ymin\": -9606819.557986394, \"xmax\": 6120784.20835166, \"ymax\": 9606819.557986388}"
  },
  23851: {
    "label": "Indonesian 1974 UTM Zone 51N",
    "defaultExtent": "{\"xmin\": -5120784.208351661, \"ymin\": -9606819.557986394, \"xmax\": 6120784.20835166, \"ymax\": 9606819.557986388}"
  },
  23852: {
    "label": "Indonesian 1974 UTM Zone 52N",
    "defaultExtent": "{\"xmin\": -5120784.20835166, \"ymin\": -9606819.557986394, \"xmax\": 6120784.20835166, \"ymax\": 9606819.557986388}"
  },
  23853: {
    "label": "Indonesian 1974 UTM Zone 53N",
    "defaultExtent": "{\"xmin\": -5120784.20835166, \"ymin\": -9606819.55798639, \"xmax\": 6120782.408942802, \"ymax\": 9606819.557986388}"
  },
  23866: {
    "label": "DGN 1995 UTM Zone 46N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699433, \"ymax\": 9606785.535047516}"
  },
  23867: {
    "label": "DGN 1995 UTM Zone 47N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  23868: {
    "label": "DGN 1995 UTM Zone 48N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  23869: {
    "label": "DGN 1995 UTM Zone 49N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699433, \"ymax\": 9606785.535047516}"
  },
  23870: {
    "label": "DGN 1995 UTM Zone 50N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  23871: {
    "label": "DGN 1995 UTM Zone 51N",
    "defaultExtent": "{\"xmin\": -5120763.767699436, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  23872: {
    "label": "DGN 1995 UTM Zone 52N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  23877: {
    "label": "DGN 1995 UTM Zone 47S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  23878: {
    "label": "DGN 1995 UTM Zone 48S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  23879: {
    "label": "DGN 1995 UTM Zone 49S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699433, \"ymax\": 19606785.535047516}"
  },
  23880: {
    "label": "DGN 1995 UTM Zone 50S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  23881: {
    "label": "DGN 1995 UTM Zone 51S",
    "defaultExtent": "{\"xmin\": -5120763.767699436, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  23882: {
    "label": "DGN 1995 UTM Zone 52S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  23883: {
    "label": "DGN 1995 UTM Zone 53S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.46495248005, \"xmax\": 6120761.968297224, \"ymax\": 19606785.535047516}"
  },
  23884: {
    "label": "DGN 1995 UTM Zone 54S",
    "defaultExtent": "{\"xmin\": -5120763.767699427, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699442, \"ymax\": 19606785.53502673}"
  },
  23886: {
    "label": "Indonesian 1974 UTM Zone 46S",
    "defaultExtent": "{\"xmin\": -5120784.20835166, \"ymin\": 393180.4420136064, \"xmax\": 6120784.208351658, \"ymax\": 19606819.557986386}"
  },
  23887: {
    "label": "Indonesian 1974 UTM Zone 47S",
    "defaultExtent": "{\"xmin\": -5120784.20835166, \"ymin\": 393180.4420136064, \"xmax\": 6120784.20835166, \"ymax\": 19606819.557986386}"
  },
  23888: {
    "label": "Indonesian 1974 UTM Zone 48S",
    "defaultExtent": "{\"xmin\": -5120784.20835166, \"ymin\": 393180.4420136064, \"xmax\": 6120784.20835166, \"ymax\": 19606819.557986386}"
  },
  23889: {
    "label": "Indonesian 1974 UTM Zone 49S",
    "defaultExtent": "{\"xmin\": -5120784.20835166, \"ymin\": 393180.4420136064, \"xmax\": 6120784.208351658, \"ymax\": 19606819.557986386}"
  },
  23890: {
    "label": "Indonesian 1974 UTM Zone 50S",
    "defaultExtent": "{\"xmin\": -5120784.20835166, \"ymin\": 393180.4420136064, \"xmax\": 6120784.20835166, \"ymax\": 19606819.557986386}"
  },
  23891: {
    "label": "Indonesian 1974 UTM Zone 51S",
    "defaultExtent": "{\"xmin\": -5120784.208351661, \"ymin\": 393180.4420136064, \"xmax\": 6120784.20835166, \"ymax\": 19606819.557986386}"
  },
  23892: {
    "label": "Indonesian 1974 UTM Zone 52S",
    "defaultExtent": "{\"xmin\": -5120784.20835166, \"ymin\": 393180.4420136064, \"xmax\": 6120784.20835166, \"ymax\": 19606819.557986386}"
  },
  23893: {
    "label": "Indonesian 1974 UTM Zone 53S",
    "defaultExtent": "{\"xmin\": -5120784.20835166, \"ymin\": 393180.44201361015, \"xmax\": 6120782.408942802, \"ymax\": 19606819.557986386}"
  },
  23894: {
    "label": "Indonesian 1974 UTM Zone 54S",
    "defaultExtent": "{\"xmin\": -5120784.208351651, \"ymin\": 393180.4420344103, \"xmax\": 6120784.208351667, \"ymax\": 19606819.5579656}"
  },
  23946: {
    "label": "Indian 1954 UTM Zone 46N",
    "defaultExtent": "{\"xmin\": -5119962.926635592, \"ymin\": -9605642.135990623, \"xmax\": 6119962.926635591, \"ymax\": 9605642.135990622}"
  },
  23947: {
    "label": "Indian 1954 UTM Zone 47N",
    "defaultExtent": "{\"xmin\": -5119962.926635592, \"ymin\": -9605642.135990625, \"xmax\": 6119962.926635592, \"ymax\": 9605642.135990622}"
  },
  23948: {
    "label": "Indian 1954 UTM Zone 48N",
    "defaultExtent": "{\"xmin\": -5119962.926635592, \"ymin\": -9605642.135990625, \"xmax\": 6119962.926635592, \"ymax\": 9605642.135990622}"
  },
  24047: {
    "label": "Indian 1975 UTM Zone 47N",
    "defaultExtent": "{\"xmin\": -5119962.926635592, \"ymin\": -9605642.135990625, \"xmax\": 6119962.926635592, \"ymax\": 9605642.135990622}"
  },
  24048: {
    "label": "Indian 1975 UTM Zone 48N",
    "defaultExtent": "{\"xmin\": -5119962.926635592, \"ymin\": -9605642.135990625, \"xmax\": 6119962.926635592, \"ymax\": 9605642.135990622}"
  },
  24100: {
    "label": "Jamaica 1875 Old Grid",
    "defaultExtent": "{\"xmin\": -124492390.19104493, \"ymin\": -86678795.59083289, \"xmax\": 125592390.19104502, \"ymax\": 49594804.98786084}"
  },
  24200: {
    "label": "Jamaica Grid",
    "defaultExtent": "{\"xmin\": -37862792.48065939, \"ymin\": -26391802.193117533, \"xmax\": 38362792.48065941, \"ymax\": 15144351.14700006}"
  },
  24305: {
    "label": "Kalianpur 1937 UTM Zone 45N",
    "defaultExtent": "{\"xmin\": -5119962.926635592, \"ymin\": -9605642.135990627, \"xmax\": 6119962.926635591, \"ymax\": 9605642.135990622}"
  },
  24306: {
    "label": "Kalianpur 1937 UTM Zone 46N",
    "defaultExtent": "{\"xmin\": -5119962.926635592, \"ymin\": -9605642.135990623, \"xmax\": 6119962.926635591, \"ymax\": 9605642.135990622}"
  },
  24311: {
    "label": "Kalianpur 1962 UTM Zone 41N",
    "defaultExtent": "{\"xmin\": -5119984.867530668, \"ymin\": -9605679.639613787, \"xmax\": 6119984.867530668, \"ymax\": 9605679.639613781}"
  },
  24312: {
    "label": "Kalianpur 1962 UTM Zone 42N",
    "defaultExtent": "{\"xmin\": -5119984.867530668, \"ymin\": -9605679.639613787, \"xmax\": 6119984.86753067, \"ymax\": 9605679.639613781}"
  },
  24313: {
    "label": "Kalianpur 1962 UTM Zone 43N",
    "defaultExtent": "{\"xmin\": -5119984.867530668, \"ymin\": -9605679.639613787, \"xmax\": 6119984.86753067, \"ymax\": 9605679.639613781}"
  },
  24342: {
    "label": "Kalianpur 1975 UTM Zone 42N",
    "defaultExtent": "{\"xmin\": -5119983.023959557, \"ymin\": -9605676.488581548, \"xmax\": 6119983.023959558, \"ymax\": 9605676.488581544}"
  },
  24343: {
    "label": "Kalianpur 1975 UTM Zone 43N",
    "defaultExtent": "{\"xmin\": -5119983.023959557, \"ymin\": -9605676.488581548, \"xmax\": 6119983.023959558, \"ymax\": 9605676.488581544}"
  },
  24344: {
    "label": "Kalianpur 1975 UTM Zone 44N",
    "defaultExtent": "{\"xmin\": -5119983.023959557, \"ymin\": -9605676.488581548, \"xmax\": 6119983.023959557, \"ymax\": 9605676.488581544}"
  },
  24345: {
    "label": "Kalianpur 1975 UTM Zone 45N",
    "defaultExtent": "{\"xmin\": -5119983.023959557, \"ymin\": -9605676.48858155, \"xmax\": 6119983.023959554, \"ymax\": 9605676.488581544}"
  },
  24346: {
    "label": "Kalianpur 1975 UTM Zone 46N",
    "defaultExtent": "{\"xmin\": -5119983.023959557, \"ymin\": -9605676.488581548, \"xmax\": 6119983.023959554, \"ymax\": 9605676.488581544}"
  },
  24347: {
    "label": "Kalianpur 1975 UTM Zone 47N",
    "defaultExtent": "{\"xmin\": -5119983.023959557, \"ymin\": -9605676.488581548, \"xmax\": 6119983.023959557, \"ymax\": 9605676.488581544}"
  },
  24370: {
    "label": "Kalianpur 1880 India Zone 0",
    "defaultExtent": "{\"xmin\": -38109847.63727261, \"ymin\": -29416482.13203338, \"xmax\": 42820847.6370281, \"ymax\": 27825762.16612823}"
  },
  24371: {
    "label": "Kalianpur 1880 India Zone I",
    "defaultExtent": "{\"xmin\": -38886020.48878113, \"ymin\": -29941339.88895156, \"xmax\": 44886020.48874949, \"ymax\": 16841662.473849643}"
  },
  24372: {
    "label": "Kalianpur 1880 India Zone IIa",
    "defaultExtent": "{\"xmin\": -40442542.90867567, \"ymin\": -28978479.73122572, \"xmax\": 46442542.90867567, \"ymax\": 14437311.603604672}"
  },
  24373: {
    "label": "Kalianpur 1880 India Zone III",
    "defaultExtent": "{\"xmin\": -39106955.88289048, \"ymin\": -28092919.31137778, \"xmax\": 45106955.882890485, \"ymax\": 16999243.692953374}"
  },
  24374: {
    "label": "Kalianpur 1880 India Zone IV",
    "defaultExtent": "{\"xmin\": -34293457.895204745, \"ymin\": -27590763.85899765, \"xmax\": 40293457.89520477, \"ymax\": 19607918.879957758}"
  },
  24375: {
    "label": "Kalianpur 1937 India Zone IIb",
    "defaultExtent": "{\"xmin\": -36980468.35850501, \"ymin\": -26497783.66249764, \"xmax\": 42466839.738505006, \"ymax\": 13201408.87479647}"
  },
  24376: {
    "label": "Kalianpur 1962 India Zone I",
    "defaultExtent": "{\"xmin\": -35557330.51672997, \"ymin\": -27378325.30262816, \"xmax\": 41043723.316701025, \"ymax\": 15399995.968590083}"
  },
  24377: {
    "label": "Kalianpur 1962 India Zone IIa",
    "defaultExtent": "{\"xmin\": -36980612.74827305, \"ymin\": -26497887.12671756, \"xmax\": 42467005.54827305, \"ymax\": 13201460.414886404}"
  },
  24378: {
    "label": "Kalianpur 1975 India Zone I",
    "defaultExtent": "{\"xmin\": -35557318.85268457, \"ymin\": -27378316.32152686, \"xmax\": 41043709.85265563, \"ymax\": 15399990.91675727}"
  },
  24379: {
    "label": "Kalianpur 1975 India Zone IIa",
    "defaultExtent": "{\"xmin\": -36980600.61733636, \"ymin\": -26497878.43443384, \"xmax\": 42466991.61733636, \"ymax\": 13201456.084257785}"
  },
  24380: {
    "label": "Kalianpur 1975 India Zone IIb",
    "defaultExtent": "{\"xmin\": -36980600.61733636, \"ymin\": -26497878.43476283, \"xmax\": 42466991.61733636, \"ymax\": 13201456.084257785}"
  },
  24381: {
    "label": "Kalianpur 1975 India Zone III",
    "defaultExtent": "{\"xmin\": -35759341.83971704, \"ymin\": -25688123.311606362, \"xmax\": 41245732.83971705, \"ymax\": 15544082.94645011}"
  },
  24382: {
    "label": "Kalianpur 1880 India Zone IIb",
    "defaultExtent": "{\"xmin\": -40442542.90867567, \"ymin\": -28978479.73158551, \"xmax\": 46442542.90867567, \"ymax\": 14437311.603604672}"
  },
  24383: {
    "label": "Kalianpur 1975 India Zone IV",
    "defaultExtent": "{\"xmin\": -31357886.492563233, \"ymin\": -25228953.11632692, \"xmax\": 36844277.49256325, \"ymax\": 17929451.62741229}"
  },
  24500: {
    "label": "Kertau Singapore Grid",
    "defaultExtent": "{\"xmin\": -4978722.898507285, \"ymin\": -9721792.04711103, \"xmax\": 5038722.898507285, \"ymax\": 9497051.35728986}"
  },
  24547: {
    "label": "Kertau UTM Zone 47N",
    "defaultExtent": "{\"xmin\": -5119987.353071579, \"ymin\": -9605683.885661539, \"xmax\": 6119987.353071579, \"ymax\": 9605683.885661533}"
  },
  24548: {
    "label": "Kertau UTM Zone 48N",
    "defaultExtent": "{\"xmin\": -5119987.353071579, \"ymin\": -9605683.885661539, \"xmax\": 6119987.353071579, \"ymax\": 9605683.885661533}"
  },
  24571: {
    "label": "Kertau RSO Malaya Chains",
    "defaultExtent": "{\"xmin\": -1524042.221399555, \"ymin\": -1428379.942673967, \"xmax\": 1604361.267241544, \"ymax\": 1428146.9164940245}"
  },
  24600: {
    "label": "KOC Lambert",
    "defaultExtent": "{\"xmin\": -36802027.214273654, \"ymin\": -27126297.07353634, \"xmax\": 39802027.2142683, \"ymax\": 15653699.897959389}"
  },
  24718: {
    "label": "La Canoa UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5121006.178542035, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  24719: {
    "label": "La Canoa UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5121006.178542035, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  24720: {
    "label": "La Canoa UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  24721: {
    "label": "La Canoa UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  24817: {
    "label": "PSAD 1956 UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  24818: {
    "label": "PSAD 1956 UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5121006.178542035, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  24819: {
    "label": "PSAD 1956 UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5121006.178542035, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  24820: {
    "label": "PSAD 1956 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  24821: {
    "label": "PSAD 1956 UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  24877: {
    "label": "PSAD 1956 UTM Zone 17S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  24878: {
    "label": "PSAD 1956 UTM Zone 18S",
    "defaultExtent": "{\"xmin\": -5121006.178542035, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  24879: {
    "label": "PSAD 1956 UTM Zone 19S",
    "defaultExtent": "{\"xmin\": -5121006.178542035, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  24880: {
    "label": "PSAD 1956 UTM Zone 20S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  24881: {
    "label": "PSAD 1956 UTM Zone 21S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  24882: {
    "label": "PSAD 1956 UTM Zone 22S",
    "defaultExtent": "{\"xmin\": -5121006.178542034, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  24891: {
    "label": "Peru West Zone",
    "defaultExtent": "{\"xmin\": -5400299.97716304, \"ymin\": -7519099.059758197, \"xmax\": 5844299.97716304, \"ymax\": 11699497.61144548}"
  },
  24892: {
    "label": "Peru Central Zone",
    "defaultExtent": "{\"xmin\": -4899487.562166905, \"ymin\": -7514652.712371882, \"xmax\": 6339487.562166905, \"ymax\": 11694330.336345926}"
  },
  24893: {
    "label": "Peru East Zone",
    "defaultExtent": "{\"xmin\": -4296612.100797941, \"ymin\": -7516259.215730811, \"xmax\": 6944612.100797943, \"ymax\": 11696567.821119765}"
  },
  25000: {
    "label": "Ghana Metre Grid",
    "defaultExtent": "{\"xmin\": -5347468.414007636, \"ymin\": -10123949.065301735, \"xmax\": 5896107.434007635, \"ymax\": 9092252.463839838}"
  },
  25231: {
    "label": "Lome UTM Zone 31N",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": -9606659.335852288, \"xmax\": 6120944.47568898, \"ymax\": 9606659.335852282}"
  },
  25391: {
    "label": "Philippines Zone I",
    "defaultExtent": "{\"xmin\": -5122848.728180778, \"ymin\": -9610052.79298174, \"xmax\": 6122848.728180778, \"ymax\": 9610052.792981734}"
  },
  25392: {
    "label": "Philippines Zone II",
    "defaultExtent": "{\"xmin\": -5122848.728180778, \"ymin\": -9610052.79298174, \"xmax\": 6122848.728180778, \"ymax\": 9610052.792981734}"
  },
  25393: {
    "label": "Philippines Zone III",
    "defaultExtent": "{\"xmin\": -5122848.728180778, \"ymin\": -9610052.79298174, \"xmax\": 6122848.728180778, \"ymax\": 9610052.792981734}"
  },
  25394: {
    "label": "Philippines Zone IV",
    "defaultExtent": "{\"xmin\": -5122848.728180779, \"ymin\": -9610052.79298174, \"xmax\": 6122848.728180778, \"ymax\": 9610052.792981734}"
  },
  25395: {
    "label": "Philippines Zone V",
    "defaultExtent": "{\"xmin\": -5122848.728180778, \"ymin\": -9610052.79298174, \"xmax\": 6122848.728180778, \"ymax\": 9610052.792981734}"
  },
  25828: {
    "label": "ETRS 1989 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  25829: {
    "label": "ETRS 1989 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  25830: {
    "label": "ETRS 1989 UTM Zone 30N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  25831: {
    "label": "ETRS 1989 UTM Zone 31N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724002, \"ymax\": 9606785.534958888}"
  },
  25832: {
    "label": "ETRS 1989 UTM Zone 32N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  25833: {
    "label": "ETRS 1989 UTM Zone 33N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  25834: {
    "label": "ETRS 1989 UTM Zone 34N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  25835: {
    "label": "ETRS 1989 UTM Zone 35N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  25836: {
    "label": "ETRS 1989 UTM Zone 36N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767723999, \"ymax\": 9606785.534958888}"
  },
  25837: {
    "label": "ETRS 1989 UTM Zone 37N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767723999, \"ymax\": 9606785.534958888}"
  },
  25838: {
    "label": "ETRS 1989 UTM Zone 38N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  25884: {
    "label": "ETRS 1989 TM Baltic 1993",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767723999, \"ymax\": 9606785.534958888}"
  },
  25932: {
    "label": "Malongo 1987 UTM Zone 32S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  26191: {
    "label": "Nord Maroc",
    "defaultExtent": "{\"xmin\": -37644652.57125489, \"ymin\": -28128361.975257386, \"xmax\": 38644652.57137232, \"ymax\": 15867737.975734152}"
  },
  26192: {
    "label": "Sud Maroc",
    "defaultExtent": "{\"xmin\": -38611651.14957893, \"ymin\": -27628323.40364072, \"xmax\": 39611651.14957893, \"ymax\": 11443183.253599452}"
  },
  26193: {
    "label": "Sahara",
    "defaultExtent": "{\"xmin\": -38552575.06885357, \"ymin\": -27047880.437310666, \"xmax\": 40952575.068853594, \"ymax\": 12666917.02148565}"
  },
  26194: {
    "label": "Merchich Sahara Nord",
    "defaultExtent": "{\"xmin\": -38553223.454191625, \"ymin\": -27048328.126629043, \"xmax\": 40953223.45419165, \"ymax\": 12667117.101332707}"
  },
  26195: {
    "label": "Merchich Sahara Sud",
    "defaultExtent": "{\"xmin\": -38056375.877048224, \"ymin\": -26603714.105037093, \"xmax\": 41056375.877048254, \"ymax\": 13851537.125899928}"
  },
  26237: {
    "label": "Massawa UTM Zone 37N",
    "defaultExtent": "{\"xmin\": -5120096.774353864, \"ymin\": -9605725.299399875, \"xmax\": 6120096.774353863, \"ymax\": 9605725.29939987}"
  },
  26331: {
    "label": "Minna UTM Zone 31N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949271, \"ymax\": 9606659.189062221}"
  },
  26332: {
    "label": "Minna UTM Zone 32N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  26391: {
    "label": "Nigeria West Belt",
    "defaultExtent": "{\"xmin\": -5391049.664007636, \"ymin\": -10050253.809660502, \"xmax\": 5852526.184007635, \"ymax\": 9165947.71948107}"
  },
  26392: {
    "label": "Nigeria Mid Belt",
    "defaultExtent": "{\"xmin\": -4951233.944007635, \"ymin\": -10050253.809660502, \"xmax\": 6292341.904007636, \"ymax\": 9165947.71948107}"
  },
  26393: {
    "label": "Nigeria East Belt",
    "defaultExtent": "{\"xmin\": -4511418.224007635, \"ymin\": -10050253.809660502, \"xmax\": 6732157.624007636, \"ymax\": 9165947.71948107}"
  },
  26591: {
    "label": "Monte Mario Rome Italy 1",
    "defaultExtent": "{\"xmin\": -4121006.178542034, \"ymin\": -9607087.05249956, \"xmax\": 7121006.178542033, \"ymax\": 9607087.052499557}"
  },
  26592: {
    "label": "Monte Mario Rome Italy 2",
    "defaultExtent": "{\"xmin\": -3101006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 8141006.178542031, \"ymax\": 9607087.052499557}"
  },
  26632: {
    "label": "Mporaloko UTM Zone 32N",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": -9606659.335852288, \"xmax\": 6120944.475688979, \"ymax\": 9606659.335852282}"
  },
  26692: {
    "label": "Mporaloko UTM Zone 32S",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": 393340.6641477123, \"xmax\": 6120944.475688979, \"ymax\": 19606659.33585228}"
  },
  26701: {
    "label": "NAD 1927 UTM Zone 1N",
    "defaultExtent": "{\"xmin\": -5120880.632721118, \"ymin\": -9606689.106299058, \"xmax\": 6120880.632721149, \"ymax\": 9606689.106299067}"
  },
  26702: {
    "label": "NAD 1927 UTM Zone 2N",
    "defaultExtent": "{\"xmin\": -5120880.632721118, \"ymin\": -9606689.106299058, \"xmax\": 6120880.632721149, \"ymax\": 9606689.106299067}"
  },
  26703: {
    "label": "NAD 1927 UTM Zone 3N",
    "defaultExtent": "{\"xmin\": -5120880.632721126, \"ymin\": -9606689.106299058, \"xmax\": 6120880.632721149, \"ymax\": 9606689.106299067}"
  },
  26704: {
    "label": "NAD 1927 UTM Zone 4N",
    "defaultExtent": "{\"xmin\": -5120880.632721118, \"ymin\": -9606689.106299058, \"xmax\": 6120880.632721152, \"ymax\": 9606689.106299069}"
  },
  26705: {
    "label": "NAD 1927 UTM Zone 5N",
    "defaultExtent": "{\"xmin\": -5120880.632721118, \"ymin\": -9606689.106299058, \"xmax\": 6120880.632721149, \"ymax\": 9606689.106299067}"
  },
  26706: {
    "label": "NAD 1927 UTM Zone 6N",
    "defaultExtent": "{\"xmin\": -5120880.632721126, \"ymin\": -9606689.106299058, \"xmax\": 6120880.632721149, \"ymax\": 9606689.106299067}"
  },
  26707: {
    "label": "NAD 1927 UTM Zone 7N",
    "defaultExtent": "{\"xmin\": -5120880.632721118, \"ymin\": -9606689.106299058, \"xmax\": 6120880.632721152, \"ymax\": 9606689.106299069}"
  },
  26708: {
    "label": "NAD 1927 UTM Zone 8N",
    "defaultExtent": "{\"xmin\": -5120878.8332481645, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  26709: {
    "label": "NAD 1927 UTM Zone 9N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  26710: {
    "label": "NAD 1927 UTM Zone 10N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721144, \"ymax\": 9606689.106319858}"
  },
  26711: {
    "label": "NAD 1927 UTM Zone 11N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  26712: {
    "label": "NAD 1927 UTM Zone 12N",
    "defaultExtent": "{\"xmin\": -5120880.63272114, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  26713: {
    "label": "NAD 1927 UTM Zone 13N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  26714: {
    "label": "NAD 1927 UTM Zone 14N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  26715: {
    "label": "NAD 1927 UTM Zone 15N",
    "defaultExtent": "{\"xmin\": -5120880.63272114, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  26716: {
    "label": "NAD 1927 UTM Zone 16N",
    "defaultExtent": "{\"xmin\": -5120880.63272114, \"ymin\": -9606689.106319865, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  26717: {
    "label": "NAD 1927 UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  26718: {
    "label": "NAD 1927 UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120880.632721144, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  26719: {
    "label": "NAD 1927 UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120880.632721144, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  26720: {
    "label": "NAD 1927 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  26721: {
    "label": "NAD 1927 UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5120880.632721142, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  26722: {
    "label": "NAD 1927 UTM Zone 22N",
    "defaultExtent": "{\"xmin\": -5120880.632721143, \"ymin\": -9606689.106319863, \"xmax\": 6120880.632721142, \"ymax\": 9606689.106319858}"
  },
  26729: {
    "label": "NAD 1927 StatePlane Alabama East FIPS 0101",
    "defaultExtent": "{\"xmin\": -17947814.02122606, \"ymin\": -42602846.376129285, \"xmax\": 18947814.021226063, \"ymax\": 20455747.3116472}"
  },
  26730: {
    "label": "NAD 1927 StatePlane Alabama West FIPS 0102",
    "defaultExtent": "{\"xmin\": -17947322.059840377, \"ymin\": -42419877.71797121, \"xmax\": 18947322.05984038, \"ymax\": 20637034.340041734}"
  },
  26731: {
    "label": "NAD 1927 StatePlane Alaska 1 FIPS 5001",
    "defaultExtent": "{\"xmin\": -82718602.97859299, \"ymin\": -115815627.38941209, \"xmax\": 123526235.64173481, \"ymax\": 76337874.21712899}"
  },
  26732: {
    "label": "NAD 1927 StatePlane Alaska 2 FIPS 5002",
    "defaultExtent": "{\"xmin\": -17946707.10810819, \"ymin\": -51163523.62319098, \"xmax\": 18946707.108108293, \"ymax\": 11891286.397481056}"
  },
  26733: {
    "label": "NAD 1927 StatePlane Alaska 3 FIPS 5003",
    "defaultExtent": "{\"xmin\": -17946707.10810819, \"ymin\": -51163523.62319098, \"xmax\": 18946707.108108304, \"ymax\": 11891286.397481058}"
  },
  26734: {
    "label": "NAD 1927 StatePlane Alaska 4 FIPS 5004",
    "defaultExtent": "{\"xmin\": -17946707.10810819, \"ymin\": -51163523.62319098, \"xmax\": 18946707.108108304, \"ymax\": 11891286.397481058}"
  },
  26735: {
    "label": "NAD 1927 StatePlane Alaska 5 FIPS 5005",
    "defaultExtent": "{\"xmin\": -17946707.10810819, \"ymin\": -51163523.62319098, \"xmax\": 18946707.108108304, \"ymax\": 11891286.397481058}"
  },
  26736: {
    "label": "NAD 1927 StatePlane Alaska 6 FIPS 5006",
    "defaultExtent": "{\"xmin\": -17946707.10810821, \"ymin\": -51163523.62319098, \"xmax\": 18946707.108108293, \"ymax\": 11891286.397481056}"
  },
  26737: {
    "label": "NAD 1927 StatePlane Alaska 7 FIPS 5007",
    "defaultExtent": "{\"xmin\": -17746707.10810819, \"ymin\": -51163523.62319098, \"xmax\": 19146707.108108293, \"ymax\": 11891286.397481056}"
  },
  26738: {
    "label": "NAD 1927 StatePlane Alaska 8 FIPS 5008",
    "defaultExtent": "{\"xmin\": -17946707.10810819, \"ymin\": -51163523.62319098, \"xmax\": 18946707.108108293, \"ymax\": 11891286.397481056}"
  },
  26739: {
    "label": "NAD 1927 StatePlane Alaska 9 FIPS 5009",
    "defaultExtent": "{\"xmin\": -17846707.10810819, \"ymin\": -51163523.62319098, \"xmax\": 19046707.108108304, \"ymax\": 11891286.397481058}"
  },
  26740: {
    "label": "NAD 1927 StatePlane Alaska 10 FIPS 5010",
    "defaultExtent": "{\"xmin\": -114663408.23615177, \"ymin\": -101098779.46385796, \"xmax\": 120663408.2359527, \"ymax\": 111083188.395923}"
  },
  26741: {
    "label": "NAD 1927 StatePlane California I FIPS 0401",
    "defaultExtent": "{\"xmin\": -119014161.19801664, \"ymin\": -96221724.5862003, \"xmax\": 123014161.19877665, \"ymax\": 81043351.34327818}"
  },
  26742: {
    "label": "NAD 1927 StatePlane California II FIPS 0402",
    "defaultExtent": "{\"xmin\": -119767229.9862941, \"ymin\": -95454987.43345004, \"xmax\": 123767229.98662727, \"ymax\": 74836199.19409256}"
  },
  26743: {
    "label": "NAD 1927 StatePlane California III FIPS 0403",
    "defaultExtent": "{\"xmin\": -120416233.91698655, \"ymin\": -94903241.79638703, \"xmax\": 124416233.9168697, \"ymax\": 69786627.00141874}"
  },
  26744: {
    "label": "NAD 1927 StatePlane California IV FIPS 0404",
    "defaultExtent": "{\"xmin\": -121022113.66363545, \"ymin\": -94369182.06726794, \"xmax\": 125022113.66437428, \"ymax\": 65412221.83117404}"
  },
  26745: {
    "label": "NAD 1927 StatePlane California V FIPS 0405",
    "defaultExtent": "{\"xmin\": -122165055.95208943, \"ymin\": -93515630.47231127, \"xmax\": 126165055.95170596, \"ymax\": 57739709.21687016}"
  },
  26746: {
    "label": "NAD 1927 StatePlane California VI FIPS 0406",
    "defaultExtent": "{\"xmin\": -123165216.38555336, \"ymin\": -92893947.46844144, \"xmax\": 127165216.3853469, \"ymax\": 51664024.803820245}"
  },
  26748: {
    "label": "NAD 1927 StatePlane Arizona East FIPS 0201",
    "defaultExtent": "{\"xmin\": -17946707.108108267, \"ymin\": -42782130.69343315, \"xmax\": 18946707.10810827, \"ymax\": 20272679.32737539}"
  },
  26749: {
    "label": "NAD 1927 StatePlane Arizona Central FIPS 0202",
    "defaultExtent": "{\"xmin\": -17946707.10810826, \"ymin\": -42782130.69343315, \"xmax\": 18946707.10810827, \"ymax\": 20272679.32737539}"
  },
  26750: {
    "label": "NAD 1927 StatePlane Arizona West FIPS 0203",
    "defaultExtent": "{\"xmin\": -17947322.059840377, \"ymin\": -42783556.907077625, \"xmax\": 18947322.05984038, \"ymax\": 20273355.150935326}"
  },
  26751: {
    "label": "NAD 1927 StatePlane Arkansas North FIPS 0301",
    "defaultExtent": "{\"xmin\": -121634972.25662488, \"ymin\": -93902088.86465213, \"xmax\": 125634972.25648788, \"ymax\": 61193553.546192385}"
  },
  26752: {
    "label": "NAD 1927 StatePlane Arkansas South FIPS 0302",
    "defaultExtent": "{\"xmin\": -122653441.6415299, \"ymin\": -93141717.57390502, \"xmax\": 126653441.64111774, \"ymax\": 54750441.63299126}"
  },
  26753: {
    "label": "NAD 1927 StatePlane Colorado North FIPS 0501",
    "defaultExtent": "{\"xmin\": -119259139.09913105, \"ymin\": -96173069.96672912, \"xmax\": 123259139.10037813, \"ymax\": 78820118.03444816}"
  },
  26754: {
    "label": "NAD 1927 StatePlane Colorado Central FIPS 0502",
    "defaultExtent": "{\"xmin\": -119761671.81461431, \"ymin\": -95518618.25712237, \"xmax\": 123761671.81300737, \"ymax\": 74842396.23313609}"
  },
  26755: {
    "label": "NAD 1927 StatePlane Colorado South FIPS 0503",
    "defaultExtent": "{\"xmin\": -120375292.65779, \"ymin\": -94973060.47377765, \"xmax\": 124375292.65924278, \"ymax\": 70074935.25809057}"
  },
  26756: {
    "label": "NAD 1927 StatePlane Connecticut FIPS 0600",
    "defaultExtent": "{\"xmin\": -120149658.52822366, \"ymin\": -96835271.06915647, \"xmax\": 121349658.52723564, \"ymax\": 83100298.72301814}"
  },
  26757: {
    "label": "NAD 1927 StatePlane Delaware FIPS 0700",
    "defaultExtent": "{\"xmin\": -17948459.720544785, \"ymin\": -45333756.08758747, \"xmax\": 18948459.72054478, \"ymax\": 17727044.73925364}"
  },
  26758: {
    "label": "NAD 1927 StatePlane Florida East FIPS 0901",
    "defaultExtent": "{\"xmin\": -17947466.754365575, \"ymin\": -40360365.10894577, \"xmax\": 18947466.75436558, \"ymax\": 22697041.546056464}"
  },
  26759: {
    "label": "NAD 1927 StatePlane Florida West FIPS 0902",
    "defaultExtent": "{\"xmin\": -17947466.754365575, \"ymin\": -40360365.10894577, \"xmax\": 18947466.75436558, \"ymax\": 22697041.546056464}"
  },
  26760: {
    "label": "NAD 1927 StatePlane Florida North FIPS 0903",
    "defaultExtent": "{\"xmin\": -125902751.43338963, \"ymin\": -91447827.24905713, \"xmax\": 129902751.43478346, \"ymax\": 37469855.48626335}"
  },
  26766: {
    "label": "NAD 1927 StatePlane Georgia East FIPS 1001",
    "defaultExtent": "{\"xmin\": -17946707.108108267, \"ymin\": -42418463.6277746, \"xmax\": 18946707.10810827, \"ymax\": 20636346.393033933}"
  },
  26767: {
    "label": "NAD 1927 StatePlane Georgia West FIPS 1002",
    "defaultExtent": "{\"xmin\": -17946707.10810826, \"ymin\": -42418463.6277746, \"xmax\": 18946707.108108263, \"ymax\": 20636346.393033933}"
  },
  26768: {
    "label": "NAD 1927 StatePlane Idaho East FIPS 1101",
    "defaultExtent": "{\"xmin\": -17947580.986885473, \"ymin\": -46667180.48973383, \"xmax\": 18947580.986885477, \"ymax\": 16390616.636575714}"
  },
  26769: {
    "label": "NAD 1927 StatePlane Idaho Central FIPS 1102",
    "defaultExtent": "{\"xmin\": -17947580.986885473, \"ymin\": -46667180.48973383, \"xmax\": 18947580.986885484, \"ymax\": 16390616.636575714}"
  },
  26770: {
    "label": "NAD 1927 StatePlane Idaho West FIPS 1103",
    "defaultExtent": "{\"xmin\": -17947322.059840377, \"ymin\": -46666525.4772877, \"xmax\": 18947322.05984038, \"ymax\": 16390386.580725245}"
  },
  26771: {
    "label": "NAD 1927 StatePlane Illinois East FIPS 1201",
    "defaultExtent": "{\"xmin\": -17948090.749505512, \"ymin\": -44847379.65879033, \"xmax\": 18948090.749505516, \"ymax\": 18212159.945728146}"
  },
  26772: {
    "label": "NAD 1927 StatePlane Illinois West FIPS 1202",
    "defaultExtent": "{\"xmin\": -17947466.754365586, \"ymin\": -44845862.72420204, \"xmax\": 18947466.75436558, \"ymax\": 18211543.930800196}"
  },
  26773: {
    "label": "NAD 1927 StatePlane Indiana East FIPS 1301",
    "defaultExtent": "{\"xmin\": -17947937.01157248, \"ymin\": -45150408.98400517, \"xmax\": 18947937.011572488, \"ymax\": 17908605.11121221}"
  },
  26774: {
    "label": "NAD 1927 StatePlane Indiana West FIPS 1302",
    "defaultExtent": "{\"xmin\": -17947937.011572484, \"ymin\": -45150408.98400516, \"xmax\": 18947937.011572488, \"ymax\": 17908605.11121221}"
  },
  26775: {
    "label": "NAD 1927 StatePlane Iowa North FIPS 1401",
    "defaultExtent": "{\"xmin\": -118333502.57651529, \"ymin\": -97171041.55161494, \"xmax\": 122333502.5729386, \"ymax\": 86918841.35498421}"
  },
  26776: {
    "label": "NAD 1927 StatePlane Iowa South FIPS 1402",
    "defaultExtent": "{\"xmin\": -118874521.30769835, \"ymin\": -96500424.41611646, \"xmax\": 122874521.30967711, \"ymax\": 82173084.15305658}"
  },
  26777: {
    "label": "NAD 1927 StatePlane Kansas North FIPS 1501",
    "defaultExtent": "{\"xmin\": -119695269.53713773, \"ymin\": -95716190.91308247, \"xmax\": 123695269.53698695, \"ymax\": 75260800.49601673}"
  },
  26778: {
    "label": "NAD 1927 StatePlane Kansas South FIPS 1502",
    "defaultExtent": "{\"xmin\": -120332045.72371072, \"ymin\": -94980524.54409848, \"xmax\": 124332045.72341768, \"ymax\": 70423114.00071497}"
  },
  26779: {
    "label": "NAD 1927 StatePlane Kentucky North FIPS 1601",
    "defaultExtent": "{\"xmin\": -120062703.7023781, \"ymin\": -95338651.40901324, \"xmax\": 124062703.70364052, \"ymax\": 72394428.2375196}"
  },
  26780: {
    "label": "NAD 1927 StatePlane Kentucky South FIPS 1602",
    "defaultExtent": "{\"xmin\": -120635254.74397653, \"ymin\": -94803018.5820804, \"xmax\": 124635254.74324231, \"ymax\": 68088524.02933425}"
  },
  26781: {
    "label": "NAD 1927 StatePlane Louisiana North FIPS 1701",
    "defaultExtent": "{\"xmin\": -124290086.85547726, \"ymin\": -92210456.82032353, \"xmax\": 128290086.84870632, \"ymax\": 45451239.36146749}"
  },
  26782: {
    "label": "NAD 1927 StatePlane Louisiana South FIPS 1702",
    "defaultExtent": "{\"xmin\": -126067146.03656963, \"ymin\": -91310592.24826083, \"xmax\": 130067146.03660229, \"ymax\": 36761647.58005939}"
  },
  26783: {
    "label": "NAD 1927 StatePlane Maine East FIPS 1801",
    "defaultExtent": "{\"xmin\": -17946707.108108267, \"ymin\": -47454546.16391042, \"xmax\": 18946707.10810827, \"ymax\": 15600263.856898125}"
  },
  26784: {
    "label": "NAD 1927 StatePlane Maine West FIPS 1802",
    "defaultExtent": "{\"xmin\": -17947937.01157248, \"ymin\": -47093228.29778956, \"xmax\": 18947937.011572488, \"ymax\": 15965785.797427805}"
  },
  26785: {
    "label": "NAD 1927 StatePlane Maryland FIPS 1900",
    "defaultExtent": "{\"xmin\": -121067321.70539671, \"ymin\": -95498209.53403324, \"xmax\": 122667321.70654403, \"ymax\": 73935826.21847837}"
  },
  26786: {
    "label": "NAD 1927 StatePlane Massachusetts Mainland FIPS 2001",
    "defaultExtent": "{\"xmin\": -119901002.95793372, \"ymin\": -96951526.29182304, \"xmax\": 121101002.95791638, \"ymax\": 85451839.98682223}"
  },
  26787: {
    "label": "NAD 1927 StatePlane Massachusetts Island FIPS 2002",
    "defaultExtent": "{\"xmin\": -120608398.44453123, \"ymin\": -96883949.27725329, \"xmax\": 121008398.44372128, \"ymax\": 82487822.17927846}"
  },
  26788: {
    "label": "NAD 1927 StatePlane Michigan North FIPS 2111",
    "defaultExtent": "{\"xmin\": -117212044.6531035, \"ymin\": -98623411.04421233, \"xmax\": 121212044.6534562, \"ymax\": 97379398.91109686}"
  },
  26789: {
    "label": "NAD 1927 StatePlane Michigan Central FIPS 2112",
    "defaultExtent": "{\"xmin\": -117596687.79972321, \"ymin\": -98002744.2857531, \"xmax\": 121596687.79976003, \"ymax\": 93824368.48230912}"
  },
  26790: {
    "label": "NAD 1927 StatePlane Michigan South FIPS 2113",
    "defaultExtent": "{\"xmin\": -118254892.67043082, \"ymin\": -97186176.67095052, \"xmax\": 122254892.67002904, \"ymax\": 87673231.30508684}"
  },
  26791: {
    "label": "NAD 1927 StatePlane Minnesota North FIPS 2201",
    "defaultExtent": "{\"xmin\": -116804828.01736961, \"ymin\": -99333428.72268657, \"xmax\": 120804828.01738884, \"ymax\": 101130127.59970385}"
  },
  26792: {
    "label": "NAD 1927 StatePlane Minnesota Central FIPS 2202",
    "defaultExtent": "{\"xmin\": -117200021.91529629, \"ymin\": -98706564.78947504, \"xmax\": 121200021.91397186, \"ymax\": 97447669.77359036}"
  },
  26793: {
    "label": "NAD 1927 StatePlane Minnesota South FIPS 2203",
    "defaultExtent": "{\"xmin\": -117731217.17018642, \"ymin\": -97856868.41956697, \"xmax\": 121731217.16896476, \"ymax\": 92532616.12174733}"
  },
  26794: {
    "label": "NAD 1927 StatePlane Mississippi East FIPS 2301",
    "defaultExtent": "{\"xmin\": -17947814.021226056, \"ymin\": -42299791.83906175, \"xmax\": 18947814.021226063, \"ymax\": 20758801.848714728}"
  },
  26795: {
    "label": "NAD 1927 StatePlane Mississippi West FIPS 2302",
    "defaultExtent": "{\"xmin\": -17947466.754365575, \"ymin\": -42602044.408118784, \"xmax\": 18947466.75436558, \"ymax\": 20455362.24688345}"
  },
  26796: {
    "label": "NAD 1927 StatePlane Missouri East FIPS 2401",
    "defaultExtent": "{\"xmin\": -17947322.05984038, \"ymin\": -44542161.03973149, \"xmax\": 18947322.05984038, \"ymax\": 18514751.018281452}"
  },
  26797: {
    "label": "NAD 1927 StatePlane Missouri Central FIPS 2402",
    "defaultExtent": "{\"xmin\": -17947322.059840377, \"ymin\": -44542161.039731495, \"xmax\": 18947322.05984038, \"ymax\": 18514751.018281452}"
  },
  26798: {
    "label": "NAD 1927 StatePlane Missouri West FIPS 2403",
    "defaultExtent": "{\"xmin\": -17947466.754365575, \"ymin\": -44663846.200506315, \"xmax\": 18947466.75436558, \"ymax\": 18393560.454495914}"
  },
  26799: {
    "label": "NAD 1927 StatePlane California VII FIPS 0407",
    "defaultExtent": "{\"xmin\": -120398448.3968101, \"ymin\": -89529745.57199034, \"xmax\": 128771833.55944854, \"ymax\": 58878103.48717785}"
  },
  26847: {
    "label": "NAD 1983 StatePlane Maine East FIPS 1801 Feet",
    "defaultExtent": "{\"xmin\": -17462073.578459747, \"ymin\": -47394823.46926745, \"xmax\": 19430573.578459747, \"ymax\": 15660619.474023243}"
  },
  26848: {
    "label": "NAD 1983 StatePlane Maine West FIPS 1802 Feet",
    "defaultExtent": "{\"xmin\": -15494803.456352757, \"ymin\": -47094249.613278046, \"xmax\": 21400303.456352763, \"ymax\": 15965397.446620531}"
  },
  26849: {
    "label": "NAD 1983 StatePlane Minnesota North FIPS 2201 Feet",
    "defaultExtent": "{\"xmin\": -116187274.9046407, \"ymin\": -99013052.44763246, \"xmax\": 121436608.23799261, \"ymax\": 101462505.94340906}"
  },
  26850: {
    "label": "NAD 1983 StatePlane Minnesota Central FIPS 2202 Feet",
    "defaultExtent": "{\"xmin\": -116582266.11510086, \"ymin\": -98385996.91809723, \"xmax\": 121831599.44710183, \"ymax\": 97779609.32074675}"
  },
  26851: {
    "label": "NAD 1983 StatePlane Minnesota South FIPS 2203 Feet",
    "defaultExtent": "{\"xmin\": -117113204.75599502, \"ymin\": -97536056.0769135, \"xmax\": 122362538.08811755, \"ymax\": 92864008.81783636}"
  },
  26852: {
    "label": "NAD 1983 StatePlane Nebraska FIPS 2600 Feet",
    "defaultExtent": "{\"xmin\": -119097311.2825896, \"ymin\": -96454538.8716071, \"xmax\": 122378144.61571121, \"ymax\": 83343349.1178165}"
  },
  26853: {
    "label": "NAD 1983 StatePlane West Virginia North FIPS 4701 Feet",
    "defaultExtent": "{\"xmin\": -119563500.68514691, \"ymin\": -95817525.22647409, \"xmax\": 123500500.68522543, \"ymax\": 76689648.9887748}"
  },
  26854: {
    "label": "NAD 1983 StatePlane West Virginia South FIPS 4702 Feet",
    "defaultExtent": "{\"xmin\": -120234837.02250506, \"ymin\": -95133376.235018, \"xmax\": 124171837.0216932, \"ymax\": 71411120.61347568}"
  },
  26855: {
    "label": "NAD 1983 HARN StatePlane Maine East FIPS 1801 Feet",
    "defaultExtent": "{\"xmin\": -17462073.578459747, \"ymin\": -47394823.46926745, \"xmax\": 19430573.578459747, \"ymax\": 15660619.474023243}"
  },
  26856: {
    "label": "NAD 1983 HARN StatePlane Maine West FIPS 1802 Feet",
    "defaultExtent": "{\"xmin\": -15494803.456352757, \"ymin\": -47094249.613278046, \"xmax\": 21400303.456352763, \"ymax\": 15965397.446620531}"
  },
  26857: {
    "label": "NAD 1983 HARN StatePlane Minnesota North FIPS 2201 Feet",
    "defaultExtent": "{\"xmin\": -116187274.9046407, \"ymin\": -99013052.44763246, \"xmax\": 121436608.23799261, \"ymax\": 101462505.94340906}"
  },
  26858: {
    "label": "NAD 1983 HARN StatePlane Minnesota Central FIPS 2202 Feet",
    "defaultExtent": "{\"xmin\": -116582266.11510086, \"ymin\": -98385996.91809723, \"xmax\": 121831599.44710183, \"ymax\": 97779609.32074675}"
  },
  26859: {
    "label": "NAD 1983 HARN StatePlane Minnesota South FIPS 2203 Feet",
    "defaultExtent": "{\"xmin\": -117113204.75599502, \"ymin\": -97536056.0769135, \"xmax\": 122362538.08811755, \"ymax\": 92864008.81783636}"
  },
  26860: {
    "label": "NAD 1983 HARN StatePlane Nebraska FIPS 2600 Feet",
    "defaultExtent": "{\"xmin\": -119097311.2825896, \"ymin\": -96454538.8716071, \"xmax\": 122378144.61571121, \"ymax\": 83343349.1178165}"
  },
  26861: {
    "label": "NAD 1983 HARN StatePlane West Virginia North FIPS 4701 Feet",
    "defaultExtent": "{\"xmin\": -119563500.68514691, \"ymin\": -95817525.22647409, \"xmax\": 123500500.68522543, \"ymax\": 76689648.9887748}"
  },
  26862: {
    "label": "NAD 1983 HARN StatePlane West Virginia South FIPS 4702 Feet",
    "defaultExtent": "{\"xmin\": -120234837.02250506, \"ymin\": -95133376.235018, \"xmax\": 124171837.0216932, \"ymax\": 71411120.61347568}"
  },
  26863: {
    "label": "NAD 1983 NSRS2007 StatePlane Maine East FIPS 1801 Ft US",
    "defaultExtent": "{\"xmin\": -17462073.578459747, \"ymin\": -47394823.46926745, \"xmax\": 19430573.578459747, \"ymax\": 15660619.474023243}"
  },
  26864: {
    "label": "NAD 1983 NSRS2007 StatePlane Maine West FIPS 1802 Ft US",
    "defaultExtent": "{\"xmin\": -15494803.456352757, \"ymin\": -47094249.613278046, \"xmax\": 21400303.456352763, \"ymax\": 15965397.446620531}"
  },
  26865: {
    "label": "NAD 1983 NSRS2007 StatePlane Minnesota North FIPS 2201 Ft US",
    "defaultExtent": "{\"xmin\": -116187274.9046407, \"ymin\": -99013052.44763246, \"xmax\": 121436608.23799261, \"ymax\": 101462505.94340906}"
  },
  26866: {
    "label": "NAD 1983 NSRS2007 StatePlane Minnesota Central FIPS 2202 Ft US",
    "defaultExtent": "{\"xmin\": -116582266.11510086, \"ymin\": -98385996.91809723, \"xmax\": 121831599.44710183, \"ymax\": 97779609.32074675}"
  },
  26867: {
    "label": "NAD 1983 NSRS2007 StatePlane Minnesota South FIPS 2203 Ft US",
    "defaultExtent": "{\"xmin\": -117113204.75599502, \"ymin\": -97536056.0769135, \"xmax\": 122362538.08811755, \"ymax\": 92864008.81783636}"
  },
  26868: {
    "label": "NAD 1983 NSRS2007 StatePlane Nebraska FIPS 2600 Ft US",
    "defaultExtent": "{\"xmin\": -119097311.2825896, \"ymin\": -96454538.8716071, \"xmax\": 122378144.61571121, \"ymax\": 83343349.1178165}"
  },
  26869: {
    "label": "NAD 1983 NSRS2007 StatePlane West Virginia North FIPS 4701 FtUS",
    "defaultExtent": "{\"xmin\": -119563500.68514691, \"ymin\": -95817525.22647409, \"xmax\": 123500500.68522543, \"ymax\": 76689648.9887748}"
  },
  26870: {
    "label": "NAD 1983 NSRS2007 StatePlane West Virginia South FIPS 4702 FtUS",
    "defaultExtent": "{\"xmin\": -120234837.02250506, \"ymin\": -95133376.235018, \"xmax\": 124171837.0216932, \"ymax\": 71411120.61347568}"
  },
  26891: {
    "label": "NAD 1983 CSRS MTM 11",
    "defaultExtent": "{\"xmin\": -5317650.671615875, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  26892: {
    "label": "NAD 1983 CSRS MTM 12",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  26893: {
    "label": "NAD 1983 CSRS MTM 13",
    "defaultExtent": "{\"xmin\": -5317650.671615872, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615875, \"ymax\": 9609668.72389495}"
  },
  26894: {
    "label": "NAD 1983 CSRS MTM 14",
    "defaultExtent": "{\"xmin\": -5317650.671615872, \"ymin\": -9609668.723894956, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  26895: {
    "label": "NAD 1983 CSRS MTM 15",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  26896: {
    "label": "NAD 1983 CSRS MTM 16",
    "defaultExtent": "{\"xmin\": -5317650.671615872, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  26897: {
    "label": "NAD 1983 CSRS MTM 17",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  26898: {
    "label": "NAD 1983 CSRS MTM 1",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  26899: {
    "label": "NAD 1983 CSRS MTM 2",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  26901: {
    "label": "NAD 1983 UTM Zone 1N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  26902: {
    "label": "NAD 1983 UTM Zone 2N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  26903: {
    "label": "NAD 1983 UTM Zone 3N",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  26904: {
    "label": "NAD 1983 UTM Zone 4N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724011, \"ymax\": 9606785.534938097}"
  },
  26905: {
    "label": "NAD 1983 UTM Zone 5N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  26906: {
    "label": "NAD 1983 UTM Zone 6N",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  26907: {
    "label": "NAD 1983 UTM Zone 7N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724011, \"ymax\": 9606785.534938097}"
  },
  26908: {
    "label": "NAD 1983 UTM Zone 8N",
    "defaultExtent": "{\"xmin\": -5120761.968321789, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  26909: {
    "label": "NAD 1983 UTM Zone 9N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  26910: {
    "label": "NAD 1983 UTM Zone 10N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724002, \"ymax\": 9606785.534958888}"
  },
  26911: {
    "label": "NAD 1983 UTM Zone 11N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  26912: {
    "label": "NAD 1983 UTM Zone 12N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  26913: {
    "label": "NAD 1983 UTM Zone 13N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  26914: {
    "label": "NAD 1983 UTM Zone 14N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  26915: {
    "label": "NAD 1983 UTM Zone 15N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  26916: {
    "label": "NAD 1983 UTM Zone 16N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958893, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  26917: {
    "label": "NAD 1983 UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  26918: {
    "label": "NAD 1983 UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  26919: {
    "label": "NAD 1983 UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  26920: {
    "label": "NAD 1983 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  26921: {
    "label": "NAD 1983 UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  26922: {
    "label": "NAD 1983 UTM Zone 22N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  26923: {
    "label": "NAD 1983 UTM Zone 23N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  26929: {
    "label": "NAD 1983 StatePlane Alabama East FIPS 0101",
    "defaultExtent": "{\"xmin\": -5422788.052394249, \"ymin\": -12985652.072866369, \"xmax\": 5822788.052394249, \"ymax\": 6234838.650497956}"
  },
  26930: {
    "label": "NAD 1983 StatePlane Alabama West FIPS 0102",
    "defaultExtent": "{\"xmin\": -5022638.105381638, \"ymin\": -12929881.135173015, \"xmax\": 6222638.105381638, \"ymax\": 6290097.0212693475}"
  },
  26931: {
    "label": "NAD 1983 StatePlane Alaska 1 FIPS 5001",
    "defaultExtent": "{\"xmin\": -25224974.639177933, \"ymin\": -35282627.68932256, \"xmax\": 37636719.54767623, \"ymax\": 23274307.150670152}"
  },
  26932: {
    "label": "NAD 1983 StatePlane Alaska 2 FIPS 5002",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  26933: {
    "label": "NAD 1983 StatePlane Alaska 3 FIPS 5003",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615885, \"ymax\": 3624351.287199251}"
  },
  26934: {
    "label": "NAD 1983 StatePlane Alaska 4 FIPS 5004",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615885, \"ymax\": 3624351.287199251}"
  },
  26935: {
    "label": "NAD 1983 StatePlane Alaska 5 FIPS 5005",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615885, \"ymax\": 3624351.287199251}"
  },
  26936: {
    "label": "NAD 1983 StatePlane Alaska 6 FIPS 5006",
    "defaultExtent": "{\"xmin\": -5122450.671615858, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  26937: {
    "label": "NAD 1983 StatePlane Alaska 7 FIPS 5007",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  26938: {
    "label": "NAD 1983 StatePlane Alaska 8 FIPS 5008",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  26939: {
    "label": "NAD 1983 StatePlane Alaska 9 FIPS 5009",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615886, \"ymax\": 3624351.287199251}"
  },
  26940: {
    "label": "NAD 1983 StatePlane Alaska 10 FIPS 5010",
    "defaultExtent": "{\"xmin\": -34866236.36030873, \"ymin\": -30817495.97745897, \"xmax\": 36866236.36020292, \"ymax\": 33859948.69122673}"
  },
  26941: {
    "label": "NAD 1983 StatePlane California I FIPS 0401",
    "defaultExtent": "{\"xmin\": -34887054.27121294, \"ymin\": -28830499.630561125, \"xmax\": 38887054.271445766, \"ymax\": 25202733.856392305}"
  },
  26942: {
    "label": "NAD 1983 StatePlane California II FIPS 0402",
    "defaultExtent": "{\"xmin\": -35116508.911664024, \"ymin\": -28596719.981055927, \"xmax\": 39116508.911764205, \"ymax\": 23310630.66291148}"
  },
  26943: {
    "label": "NAD 1983 StatePlane California III FIPS 0403",
    "defaultExtent": "{\"xmin\": -35314262.749591045, \"ymin\": -28428487.57731289, \"xmax\": 39314262.749551564, \"ymax\": 21771398.527620755}"
  },
  26944: {
    "label": "NAD 1983 StatePlane California IV FIPS 0404",
    "defaultExtent": "{\"xmin\": -35498881.48266848, \"ymin\": -28265654.103608675, \"xmax\": 39498881.48289684, \"ymax\": 20437979.07279057}"
  },
  26945: {
    "label": "NAD 1983 StatePlane California V FIPS 0405",
    "defaultExtent": "{\"xmin\": -35847160.01764138, \"ymin\": -28005403.878855906, \"xmax\": 39847160.01752812, \"ymax\": 18099234.480987653}"
  },
  26946: {
    "label": "NAD 1983 StatePlane California VI FIPS 0406",
    "defaultExtent": "{\"xmin\": -36151940.068675034, \"ymin\": -27815848.278992966, \"xmax\": 40151940.06861196, \"ymax\": 16247248.704331301}"
  },
  26948: {
    "label": "NAD 1983 StatePlane Arizona East FIPS 0201",
    "defaultExtent": "{\"xmin\": -5409090.671615874, \"ymin\": -13040299.949871464, \"xmax\": 5835810.671615874, \"ymax\": 6179037.49791844}"
  },
  26949: {
    "label": "NAD 1983 StatePlane Arizona Central FIPS 0202",
    "defaultExtent": "{\"xmin\": -5409090.671615872, \"ymin\": -13040299.949871464, \"xmax\": 5835810.671615874, \"ymax\": 6179037.49791844}"
  },
  26950: {
    "label": "NAD 1983 StatePlane Arizona West FIPS 0203",
    "defaultExtent": "{\"xmin\": -5409278.105381638, \"ymin\": -13040734.670008475, \"xmax\": 5835998.105381638, \"ymax\": 6179243.48643389}"
  },
  26951: {
    "label": "NAD 1983 StatePlane Arkansas North FIPS 0301",
    "defaultExtent": "{\"xmin\": -37285630.80991245, \"ymin\": -28623235.611847952, \"xmax\": 38085630.80986683, \"ymax\": 18652037.545588575}"
  },
  26952: {
    "label": "NAD 1983 StatePlane Arkansas South FIPS 0302",
    "defaultExtent": "{\"xmin\": -37595985.155181974, \"ymin\": -27991400.9264211, \"xmax\": 38395985.15505119, \"ymax\": 17088046.267518982}"
  },
  26953: {
    "label": "NAD 1983 StatePlane Colorado North FIPS 0501",
    "defaultExtent": "{\"xmin\": -36047295.1761787, \"ymin\": -29010844.772414874, \"xmax\": 37876098.83435248, \"ymax\": 24329837.178702205}"
  },
  26954: {
    "label": "NAD 1983 StatePlane Colorado Central FIPS 0502",
    "defaultExtent": "{\"xmin\": -36200413.80326969, \"ymin\": -28811315.283514805, \"xmax\": 38029217.46057424, \"ymax\": 23117321.353997074}"
  },
  26955: {
    "label": "NAD 1983 StatePlane Colorado South FIPS 0503",
    "defaultExtent": "{\"xmin\": -36387386.019578025, \"ymin\": -28644971.833411947, \"xmax\": 38216189.6778173, \"ymax\": 21664082.8771381}"
  },
  26956: {
    "label": "NAD 1983 StatePlane Connecticut FIPS 0600",
    "defaultExtent": "{\"xmin\": -36501665.38080174, \"ymin\": -29365141.16645893, \"xmax\": 37111266.59970077, \"ymax\": 25482156.151964903}"
  },
  26957: {
    "label": "NAD 1983 StatePlane Delaware FIPS 0700",
    "defaultExtent": "{\"xmin\": -5422984.8578483015, \"ymin\": -13818058.715278085, \"xmax\": 5822984.857848301, \"ymax\": 5403104.752171321}"
  },
  26958: {
    "label": "NAD 1983 StatePlane Florida East FIPS 0901",
    "defaultExtent": "{\"xmin\": -5422682.2074441705, \"ymin\": -12302114.955780467, \"xmax\": 5822682.2074441705, \"ymax\": 6918013.955638945}"
  },
  26959: {
    "label": "NAD 1983 StatePlane Florida West FIPS 0902",
    "defaultExtent": "{\"xmin\": -5422682.207444169, \"ymin\": -12302114.955780467, \"xmax\": 5822682.2074441705, \"ymax\": 6918013.955638945}"
  },
  26960: {
    "label": "NAD 1983 StatePlane Florida North FIPS 0903",
    "defaultExtent": "{\"xmin\": -38386184.53222137, \"ymin\": -27874919.325736687, \"xmax\": 39586184.5326483, \"ymax\": 11420627.34512336}"
  },
  26961: {
    "label": "NAD 1983 StatePlane Hawaii 1 FIPS 5101",
    "defaultExtent": "{\"xmin\": -5122825.539147385, \"ymin\": -11693459.598062156, \"xmax\": 6122825.539147409, \"ymax\": 7527159.266991055}"
  },
  26962: {
    "label": "NAD 1983 StatePlane Hawaii 2 FIPS 5102",
    "defaultExtent": "{\"xmin\": -5122825.539199754, \"ymin\": -11859502.83699039, \"xmax\": 6122825.539095043, \"ymax\": 7361116.028067361}"
  },
  26963: {
    "label": "NAD 1983 StatePlane Hawaii 3 FIPS 5103",
    "defaultExtent": "{\"xmin\": -5122956.74278342, \"ymin\": -11952040.153067613, \"xmax\": 6122956.742783444, \"ymax\": 7269027.208042317}"
  },
  26964: {
    "label": "NAD 1983 StatePlane Hawaii 4 FIPS 5104",
    "defaultExtent": "{\"xmin\": -5122956.742783412, \"ymin\": -12025855.146337828, \"xmax\": 6122956.742783444, \"ymax\": 7195212.2147721015}"
  },
  26965: {
    "label": "NAD 1983 StatePlane Hawaii 5 FIPS 5105",
    "defaultExtent": "{\"xmin\": -5123012.972965518, \"ymin\": -12007520.920163663, \"xmax\": 6123012.972860808, \"ymax\": 7213738.653546542}"
  },
  26966: {
    "label": "NAD 1983 StatePlane Georgia East FIPS 1001",
    "defaultExtent": "{\"xmin\": -5422450.671615874, \"ymin\": -12929450.11040019, \"xmax\": 5822450.671615874, \"ymax\": 6289887.337389712}"
  },
  26967: {
    "label": "NAD 1983 StatePlane Georgia West FIPS 1002",
    "defaultExtent": "{\"xmin\": -4922450.671615872, \"ymin\": -12929450.11040019, \"xmax\": 6322450.6716158725, \"ymax\": 6289887.337389712}"
  },
  26968: {
    "label": "NAD 1983 StatePlane Idaho East FIPS 1101",
    "defaultExtent": "{\"xmin\": -5422717.024861958, \"ymin\": -14224494.619744752, \"xmax\": 5822717.024861958, \"ymax\": 4995753.308761801}"
  },
  26969: {
    "label": "NAD 1983 StatePlane Idaho Central FIPS 1102",
    "defaultExtent": "{\"xmin\": -5122717.024861958, \"ymin\": -14224494.619744752, \"xmax\": 6122717.024861961, \"ymax\": 4995753.308761801}"
  },
  26970: {
    "label": "NAD 1983 StatePlane Idaho West FIPS 1103",
    "defaultExtent": "{\"xmin\": -4822638.105381638, \"ymin\": -14224294.967206975, \"xmax\": 6422638.105381638, \"ymax\": 4995683.189235387}"
  },
  26971: {
    "label": "NAD 1983 StatePlane Illinois East FIPS 1201",
    "defaultExtent": "{\"xmin\": -5322872.397588842, \"ymin\": -13669807.500473078, \"xmax\": 5922872.397588842, \"ymax\": 5550971.541784854}"
  },
  26972: {
    "label": "NAD 1983 StatePlane Illinois West FIPS 1202",
    "defaultExtent": "{\"xmin\": -4922682.207444172, \"ymin\": -13669345.127777718, \"xmax\": 6322682.2074441705, \"ymax\": 5550783.783641693}"
  },
  26973: {
    "label": "NAD 1983 StatePlane Indiana East FIPS 1301",
    "defaultExtent": "{\"xmin\": -5522825.539147399, \"ymin\": -13512173.175005069, \"xmax\": 5722825.539147401, \"ymax\": 5708445.690089753}"
  },
  26974: {
    "label": "NAD 1983 StatePlane Indiana West FIPS 1302",
    "defaultExtent": "{\"xmin\": -4722825.539147401, \"ymin\": -13512173.175005067, \"xmax\": 6522825.539147401, \"ymax\": 5708445.690089753}"
  },
  26975: {
    "label": "NAD 1983 StatePlane Iowa North FIPS 1401",
    "defaultExtent": "{\"xmin\": -35179672.413309455, \"ymin\": -28619932.387049854, \"xmax\": 38179672.41221074, \"ymax\": 27493755.251850624}"
  },
  26976: {
    "label": "NAD 1983 StatePlane Iowa South FIPS 1402",
    "defaultExtent": "{\"xmin\": -36344508.92670218, \"ymin\": -29415464.41348134, \"xmax\": 37344508.92730374, \"ymax\": 25047110.383624904}"
  },
  26977: {
    "label": "NAD 1983 StatePlane Kansas North FIPS 1501",
    "defaultExtent": "{\"xmin\": -36694583.27893349, \"ymin\": -29176343.808520153, \"xmax\": 37494583.27889171, \"ymax\": 22940063.423304893}"
  },
  26978: {
    "label": "NAD 1983 StatePlane Kansas South FIPS 1502",
    "defaultExtent": "{\"xmin\": -36888610.08409184, \"ymin\": -28552051.03735451, \"xmax\": 37688610.084001794, \"ymax\": 21865414.924582668}"
  },
  26980: {
    "label": "NAD 1983 StatePlane Kentucky South FIPS 1602",
    "defaultExtent": "{\"xmin\": -36881000.62027418, \"ymin\": -28397921.164930366, \"xmax\": 37881000.620047584, \"ymax\": 21253778.418876573}"
  },
  26981: {
    "label": "NAD 1983 StatePlane Louisiana North FIPS 1701",
    "defaultExtent": "{\"xmin\": -37494730.88922037, \"ymin\": -28088971.837408308, \"xmax\": 39494730.88715185, \"ymax\": 13871961.36705782}"
  },
  26982: {
    "label": "NAD 1983 StatePlane Louisiana South FIPS 1702",
    "defaultExtent": "{\"xmin\": -38036283.63849772, \"ymin\": -27814605.530320723, \"xmax\": 40036283.638507746, \"ymax\": 11223230.411243448}"
  },
  26983: {
    "label": "NAD 1983 StatePlane Maine East FIPS 1801",
    "defaultExtent": "{\"xmin\": -5322450.671615874, \"ymin\": -14445971.085374892, \"xmax\": 5922450.671615874, \"ymax\": 4773366.36241501}"
  },
  26984: {
    "label": "NAD 1983 StatePlane Maine West FIPS 1802",
    "defaultExtent": "{\"xmin\": -4722825.539147399, \"ymin\": -14354355.990839133, \"xmax\": 6522825.539147401, \"ymax\": 4866262.874255687}"
  },
  26985: {
    "label": "NAD 1983 StatePlane Maryland FIPS 1900",
    "defaultExtent": "{\"xmin\": -36747007.26427332, \"ymin\": -29091384.527313504, \"xmax\": 37547007.26462395, \"ymax\": 22554678.123978678}"
  },
  26986: {
    "label": "NAD 1983 StatePlane Massachusetts Mainland FIPS 2001",
    "defaultExtent": "{\"xmin\": -36530705.74194933, \"ymin\": -28803004.001248993, \"xmax\": 36930705.741942905, \"ymax\": 26796569.38877064}"
  },
  26987: {
    "label": "NAD 1983 StatePlane Massachusetts Island FIPS 2002",
    "defaultExtent": "{\"xmin\": -36324363.173723884, \"ymin\": -29532372.723926485, \"xmax\": 37324363.17347703, \"ymax\": 25143058.28571613}"
  },
  26988: {
    "label": "NAD 1983 StatePlane Michigan North FIPS 2111",
    "defaultExtent": "{\"xmin\": -28338008.16261086, \"ymin\": -30062764.319301587, \"xmax\": 44338008.16271662, \"ymax\": 29682471.10421796}"
  },
  26989: {
    "label": "NAD 1983 StatePlane Michigan Central FIPS 2112",
    "defaultExtent": "{\"xmin\": -30455190.630660422, \"ymin\": -29873530.398834094, \"xmax\": 42455190.63111069, \"ymax\": 28598773.969079223}"
  },
  26990: {
    "label": "NAD 1983 StatePlane Michigan South FIPS 2113",
    "defaultExtent": "{\"xmin\": -32655721.616859354, \"ymin\": -29624554.326154392, \"xmax\": 40655721.616422996, \"ymax\": 26723713.97971105}"
  },
  26991: {
    "label": "NAD 1983 StatePlane Minnesota North FIPS 2201",
    "defaultExtent": "{\"xmin\": -35413952.21883893, \"ymin\": -30179238.744515866, \"xmax\": 37013952.21884459, \"ymax\": 30925833.663218413}"
  },
  26992: {
    "label": "NAD 1983 StatePlane Minnesota Central FIPS 2202",
    "defaultExtent": "{\"xmin\": -35534345.78057431, \"ymin\": -29988111.83685971, \"xmax\": 37134345.780168205, \"ymax\": 29803284.527532667}"
  },
  26993: {
    "label": "NAD 1983 StatePlane Minnesota South FIPS 2203",
    "defaultExtent": "{\"xmin\": -35696176.20197969, \"ymin\": -29729049.350341942, \"xmax\": 37296176.20161064, \"ymax\": 28305006.49768952}"
  },
  26994: {
    "label": "NAD 1983 StatePlane Mississippi East FIPS 2301",
    "defaultExtent": "{\"xmin\": -5322731.822264518, \"ymin\": -12874675.296950985, \"xmax\": 5922731.8222645195, \"ymax\": 6345623.2138176095}"
  },
  26995: {
    "label": "NAD 1983 StatePlane Mississippi West FIPS 2302",
    "defaultExtent": "{\"xmin\": -4922731.8222645195, \"ymin\": -12874675.296950981, \"xmax\": 6322731.8222645195, \"ymax\": 6345623.2138176095}"
  },
  26996: {
    "label": "NAD 1983 StatePlane Missouri East FIPS 2401",
    "defaultExtent": "{\"xmin\": -5372638.10538164, \"ymin\": -13576774.369054265, \"xmax\": 5872638.105381638, \"ymax\": 5643203.787388095}"
  },
  26997: {
    "label": "NAD 1983 StatePlane Missouri Central FIPS 2402",
    "defaultExtent": "{\"xmin\": -5122638.105381638, \"ymin\": -13576774.369054267, \"xmax\": 6122638.105381639, \"ymax\": 5643203.787388095}"
  },
  26998: {
    "label": "NAD 1983 StatePlane Missouri West FIPS 2403",
    "defaultExtent": "{\"xmin\": -4772682.2074441705, \"ymin\": -13613865.018881941, \"xmax\": 6472682.2074441705, \"ymax\": 5606263.89253747}"
  },
  27037: {
    "label": "Nahrwan 1967 UTM Zone 37N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  27038: {
    "label": "Nahrwan 1967 UTM Zone 38N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  27039: {
    "label": "Nahrwan 1967 UTM Zone 39N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949271, \"ymax\": 9606659.189062221}"
  },
  27040: {
    "label": "Nahrwan 1967 UTM Zone 40N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  27120: {
    "label": "Naparima 1972 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  27200: {
    "label": "GD 1949 New Zealand Map Grid",
    "defaultExtent": "{\"xmin\": 213149.55963138444, \"ymin\": 3626091.1378841167, \"xmax\": 4795922.296095829, \"ymax\": 8236548.883408386}"
  },
  27205: {
    "label": "NZGD 1949 Mount Eden Circuit",
    "defaultExtent": "{\"xmin\": -5322693.155203688, \"ymin\": -4827133.347574054, \"xmax\": 5922693.155168811, \"ymax\": 14392807.316240007}"
  },
  27206: {
    "label": "NZGD 1949 Bay of Plenty Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480734314, \"ymin\": -4729864.237265218, \"xmax\": 5923255.480734334, \"ymax\": 14491998.612832341}"
  },
  27207: {
    "label": "NZGD 1949 Poverty Bay Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480699398, \"ymin\": -4634018.238454568, \"xmax\": 5923255.480769247, \"ymax\": 14587844.611646019}"
  },
  27208: {
    "label": "NZGD 1949 Hawkes Bay Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480699402, \"ymin\": -4520085.330210702, \"xmax\": 5923255.480769238, \"ymax\": 14701777.519889887}"
  },
  27209: {
    "label": "NZGD 1949 Taranaki Circuit",
    "defaultExtent": "{\"xmin\": -5323255.4807343185, \"ymin\": -4577282.761903421, \"xmax\": 5923255.480734327, \"ymax\": 14644580.088194137}"
  },
  27210: {
    "label": "NZGD 1949 Tuhirangi Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480664502, \"ymin\": -4535458.386387415, \"xmax\": 5923255.480804151, \"ymax\": 14686404.4637162}"
  },
  27211: {
    "label": "NZGD 1949 Wanganui Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480751771, \"ymin\": -4454460.62476714, \"xmax\": 5923255.480716875, \"ymax\": 14767402.225331932}"
  },
  27212: {
    "label": "NZGD 1949 Wairarapa Circuit",
    "defaultExtent": "{\"xmin\": -5323255.48068195, \"ymin\": -4378549.083736181, \"xmax\": 5923255.480786699, \"ymax\": 14843313.76636592}"
  },
  27213: {
    "label": "NZGD 1949 Wellington Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480751774, \"ymin\": -4336814.422840218, \"xmax\": 5923255.480716875, \"ymax\": 14885048.427258855}"
  },
  27214: {
    "label": "NZGD 1949 Collingwood Circuit",
    "defaultExtent": "{\"xmin\": -5323255.48073431, \"ymin\": -4401956.261592133, \"xmax\": 5923255.480734334, \"ymax\": 14819906.588505425}"
  },
  27215: {
    "label": "NZGD 1949 Nelson Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480664491, \"ymin\": -4339788.118527217, \"xmax\": 5923255.480804159, \"ymax\": 14882074.731576398}"
  },
  27216: {
    "label": "NZGD 1949 Karamea Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480804139, \"ymin\": -4338081.440657268, \"xmax\": 5923255.48066451, \"ymax\": 14883781.409446346}"
  },
  27217: {
    "label": "NZGD 1949 Buller Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480664506, \"ymin\": -4280227.16093481, \"xmax\": 5923255.480804143, \"ymax\": 14941635.689168803}"
  },
  27218: {
    "label": "NZGD 1949 Grey Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480664502, \"ymin\": -4222145.418822426, \"xmax\": 5923255.480804151, \"ymax\": 14999717.431281189}"
  },
  27219: {
    "label": "NZGD 1949 Amuri Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480716858, \"ymin\": -4182662.7666393854, \"xmax\": 5923255.480751779, \"ymax\": 15039200.083459686}"
  },
  27220: {
    "label": "NZGD 1949 Marlborough Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480751783, \"ymin\": -4309806.987473777, \"xmax\": 5923255.480716875, \"ymax\": 14912055.862625295}"
  },
  27221: {
    "label": "NZGD 1949 Hokitika Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480734314, \"ymin\": -4160754.784088606, \"xmax\": 5923255.480734334, \"ymax\": 15061108.066008955}"
  },
  27222: {
    "label": "NZGD 1949 Okarito Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480786678, \"ymin\": -4135890.833027742, \"xmax\": 5923255.480681962, \"ymax\": 15085972.01707436}"
  },
  27223: {
    "label": "NZGD 1949 Jacksons Bay Circuit",
    "defaultExtent": "{\"xmin\": -5323255.48073431, \"ymin\": -4039486.272011509, \"xmax\": 5923255.480734327, \"ymax\": 15182376.57808605}"
  },
  27224: {
    "label": "NZGD 1949 Mount Pleasant Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480786687, \"ymin\": -4082504.7908786433, \"xmax\": 5923255.48068197, \"ymax\": 15139358.059223458}"
  },
  27225: {
    "label": "NZGD 1949 Gawler Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480769223, \"ymin\": -4064941.309198696, \"xmax\": 5923255.480699414, \"ymax\": 15156921.54090189}"
  },
  27226: {
    "label": "NZGD 1949 Timaru Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480786695, \"ymin\": -3992325.232060508, \"xmax\": 5923255.480681954, \"ymax\": 15229537.618041592}"
  },
  27227: {
    "label": "NZGD 1949 Lindis Peak Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480786687, \"ymin\": -3955314.687237148, \"xmax\": 5923255.480681962, \"ymax\": 15266548.162864953}"
  },
  27228: {
    "label": "NZGD 1949 Mount Nicholas Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480804131, \"ymin\": -3911123.9393289126, \"xmax\": 5923255.48066451, \"ymax\": 15310738.910774702}"
  },
  27229: {
    "label": "NZGD 1949 Mount York Circuit",
    "defaultExtent": "{\"xmin\": -5323255.480699398, \"ymin\": -3863241.263819569, \"xmax\": 5923255.480769238, \"ymax\": 15358621.58628102}"
  },
  27230: {
    "label": "NZGD 1949 Observation Point Circuit",
    "defaultExtent": "{\"xmin\": -5323255.48068195, \"ymin\": -3835179.4535308955, \"xmax\": 5923255.480786699, \"ymax\": 15386683.396571206}"
  },
  27231: {
    "label": "NZGD 1949 North Taieri Circuit",
    "defaultExtent": "{\"xmin\": -5323030.550532537, \"ymin\": -3829961.2088529244, \"xmax\": 5923030.5504976455, \"ymax\": 15391132.766732141}"
  },
  27232: {
    "label": "NZGD 1949 Bluff Circuit",
    "defaultExtent": "{\"xmin\": -5323252.820734314, \"ymin\": -3748051.958841514, \"xmax\": 5923258.1407343345, \"ymax\": 15473810.891256046}"
  },
  27258: {
    "label": "NZGD 1949 UTM Zone 58S",
    "defaultExtent": "{\"xmin\": -5121006.178542012, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  27259: {
    "label": "NZGD 1949 UTM Zone 59S",
    "defaultExtent": "{\"xmin\": -5121006.178542012, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  27260: {
    "label": "NZGD 1949 UTM Zone 60S",
    "defaultExtent": "{\"xmin\": -5121006.178542016, \"ymin\": 392912.9475212451, \"xmax\": 6121006.17854204, \"ymax\": 19607087.052478764}"
  },
  27291: {
    "label": "New Zealand North Island",
    "defaultExtent": "{\"xmin\": -5849677.6359740365, \"ymin\": -5387799.437729462, \"xmax\": 6449677.635974067, \"ymax\": 15633521.840664426}"
  },
  27292: {
    "label": "New Zealand South Island",
    "defaultExtent": "{\"xmin\": -5649677.635974037, \"ymin\": -4680476.860916989, \"xmax\": 6649677.635974067, \"ymax\": 16340844.417476902}"
  },
  27391: {
    "label": "NGO 1948 Oslo Norway Zone 1",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16040419.987911409, \"xmax\": 5622429.344341379, \"ymax\": 3179004.1485127923}"
  },
  27392: {
    "label": "NGO 1948 Oslo Norway Zone 2",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16040419.987911409, \"xmax\": 5622429.344341379, \"ymax\": 3179004.1485127923}"
  },
  27393: {
    "label": "NGO 1948 Oslo Norway Zone 3",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16040419.987911409, \"xmax\": 5622429.344341379, \"ymax\": 3179004.1485127923}"
  },
  27394: {
    "label": "NGO 1948 Oslo Norway Zone 4",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16040419.987911409, \"xmax\": 5622429.344341379, \"ymax\": 3179004.1485127923}"
  },
  27395: {
    "label": "NGO 1948 Oslo Norway Zone 5",
    "defaultExtent": "{\"xmin\": -5622429.34434138, \"ymin\": -16040419.987911409, \"xmax\": 5622429.344341379, \"ymax\": 3179004.1485127923}"
  },
  27396: {
    "label": "NGO 1948 Oslo Norway Zone 6",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16040419.987911409, \"xmax\": 5622429.344341379, \"ymax\": 3179004.1485127923}"
  },
  27397: {
    "label": "NGO 1948 Oslo Norway Zone 7",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16040419.987911409, \"xmax\": 5622429.34434138, \"ymax\": 3179004.1485127923}"
  },
  27398: {
    "label": "NGO 1948 Oslo Norway Zone 8",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16040419.987911409, \"xmax\": 5622429.344341379, \"ymax\": 3179004.1485127923}"
  },
  27429: {
    "label": "Datum 73 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  27493: {
    "label": "Datum 73 Modified Portuguese Grid",
    "defaultExtent": "{\"xmin\": -5623074.882734327, \"ymin\": -14003611.848224163, \"xmax\": 5623436.078734327, \"ymax\": 5218251.00191501}"
  },
  27500: {
    "label": "Nord de Guerre",
    "defaultExtent": "{\"xmin\": -35574647.97144063, \"ymin\": -30321046.440423455, \"xmax\": 36574647.97144702, \"ymax\": 32082358.213482283}"
  },
  27561: {
    "label": "NTF Paris Lambert Nord France",
    "defaultExtent": "{\"xmin\": -35485896.991476916, \"ymin\": -30428280.311745316, \"xmax\": 36685896.9914344, \"ymax\": 31994583.358255908}"
  },
  27562: {
    "label": "NTF Paris Lambert Centre France",
    "defaultExtent": "{\"xmin\": -35690513.61572029, \"ymin\": -30090817.847528145, \"xmax\": 36890513.61568137, \"ymax\": 30110710.055974342}"
  },
  27563: {
    "label": "NTF Paris Lambert Sud France",
    "defaultExtent": "{\"xmin\": -35928901.73456378, \"ymin\": -29736996.661565173, \"xmax\": 37128901.73917267, \"ymax\": 27881827.25755266}"
  },
  27564: {
    "label": "NTF Paris Lambert Corse",
    "defaultExtent": "{\"xmin\": -36730543.38940593, \"ymin\": -29491616.205146596, \"xmax\": 36731012.105471194, \"ymax\": 26062431.501326453}"
  },
  27571: {
    "label": "NTF Paris Lambert Zone I",
    "defaultExtent": "{\"xmin\": -35485896.991476916, \"ymin\": -29428280.311745316, \"xmax\": 36685896.9914344, \"ymax\": 32994583.358255908}"
  },
  27572: {
    "label": "NTF Paris Lambert Zone II",
    "defaultExtent": "{\"xmin\": -35690513.61572029, \"ymin\": -28090817.847528145, \"xmax\": 36890513.61568137, \"ymax\": 32110710.055974342}"
  },
  27573: {
    "label": "NTF Paris Lambert Zone III",
    "defaultExtent": "{\"xmin\": -35928901.73456378, \"ymin\": -26736996.661565173, \"xmax\": 37128901.73917267, \"ymax\": 30881827.25755266}"
  },
  27574: {
    "label": "NTF Paris Lambert Zone IV",
    "defaultExtent": "{\"xmin\": -36730543.38940593, \"ymin\": -25491616.205146596, \"xmax\": 36731012.105471194, \"ymax\": 30062431.501326453}"
  },
  27581: {
    "label": "NTF Paris France I",
    "defaultExtent": "{\"xmin\": -35485896.991476916, \"ymin\": -29428280.311745316, \"xmax\": 36685896.9914344, \"ymax\": 32994583.358255908}"
  },
  27582: {
    "label": "NTF Paris France II",
    "defaultExtent": "{\"xmin\": -35690513.61572029, \"ymin\": -28090817.847528145, \"xmax\": 36890513.61568137, \"ymax\": 32110710.055974342}"
  },
  27583: {
    "label": "NTF Paris France III",
    "defaultExtent": "{\"xmin\": -35928901.73456378, \"ymin\": -26736996.661565173, \"xmax\": 37128901.73917267, \"ymax\": 30881827.25755266}"
  },
  27584: {
    "label": "NTF Paris France IV",
    "defaultExtent": "{\"xmin\": -36730543.38940593, \"ymin\": -25491616.205146596, \"xmax\": 36731012.105471194, \"ymax\": 30062431.501326453}"
  },
  27591: {
    "label": "NTF Paris Nord France",
    "defaultExtent": "{\"xmin\": -35485896.991476916, \"ymin\": -30428280.311745316, \"xmax\": 36685896.9914344, \"ymax\": 31994583.358255908}"
  },
  27592: {
    "label": "NTF Paris Centre France",
    "defaultExtent": "{\"xmin\": -35690513.61572029, \"ymin\": -30090817.847528145, \"xmax\": 36890513.61568137, \"ymax\": 30110710.055974342}"
  },
  27593: {
    "label": "NTF Paris Sud France",
    "defaultExtent": "{\"xmin\": -35928901.73456378, \"ymin\": -29736996.661565173, \"xmax\": 37128901.73917267, \"ymax\": 27881827.25755266}"
  },
  27594: {
    "label": "NTF Paris Corse",
    "defaultExtent": "{\"xmin\": -36730543.38940593, \"ymin\": -29491616.205146596, \"xmax\": 36731012.105471194, \"ymax\": 26062431.501326453}"
  },
  27700: {
    "label": "British National Grid",
    "defaultExtent": "{\"xmin\": -5220247.551446327, \"ymin\": -15133062.096372003, \"xmax\": 6020247.551446325, \"ymax\": 4078934.4667145205}"
  },
  28191: {
    "label": "Palestine 1923 Palestine Grid",
    "defaultExtent": "{\"xmin\": -4839254.170277095, \"ymin\": -12995735.045918768, \"xmax\": 5179757.280277094, \"ymax\": 6225215.491011514}"
  },
  28192: {
    "label": "Palestine 1923 Palestine Belt",
    "defaultExtent": "{\"xmin\": -5452987.674987869, \"ymin\": -11995841.065498242, \"xmax\": 5793490.784987868, \"ymax\": 7225321.510590988}"
  },
  28193: {
    "label": "Palestine 1923 Israel CS Grid",
    "defaultExtent": "{\"xmin\": -4839254.170277095, \"ymin\": -11995735.045918768, \"xmax\": 5179757.280277094, \"ymax\": 7225215.491011514}"
  },
  28232: {
    "label": "Pointe Noire UTM Zone 32S",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": 393340.6641477123, \"xmax\": 6120944.475688979, \"ymax\": 19606659.33585228}"
  },
  28348: {
    "label": "GDA 1994 MGA Zone 48",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  28349: {
    "label": "GDA 1994 MGA Zone 49",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767723998, \"ymax\": 19606785.534958888}"
  },
  28350: {
    "label": "GDA 1994 MGA Zone 50",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  28351: {
    "label": "GDA 1994 MGA Zone 51",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  28352: {
    "label": "GDA 1994 MGA Zone 52",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  28353: {
    "label": "GDA 1994 MGA Zone 53",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504111215, \"xmax\": 6120761.968321789, \"ymax\": 19606785.534958888}"
  },
  28354: {
    "label": "GDA 1994 MGA Zone 54",
    "defaultExtent": "{\"xmin\": -5120763.767723992, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  28355: {
    "label": "GDA 1994 MGA Zone 55",
    "defaultExtent": "{\"xmin\": -5120763.767723991, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  28356: {
    "label": "GDA 1994 MGA Zone 56",
    "defaultExtent": "{\"xmin\": -5120763.767723991, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  28357: {
    "label": "GDA 1994 MGA Zone 57",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  28358: {
    "label": "GDA 1994 MGA Zone 58",
    "defaultExtent": "{\"xmin\": -5120763.76772398, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  28402: {
    "label": "Pulkovo 1942 GK Zone 2",
    "defaultExtent": "{\"xmin\": -3123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 8123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28403: {
    "label": "Pulkovo 1942 GK Zone 3",
    "defaultExtent": "{\"xmin\": -2123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 9123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28404: {
    "label": "Pulkovo 1942 GK Zone 4",
    "defaultExtent": "{\"xmin\": -1123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 10123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28405: {
    "label": "Pulkovo 1942 GK Zone 5",
    "defaultExtent": "{\"xmin\": -123107.46752671711, \"ymin\": -9610795.116133098, \"xmax\": 11123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28406: {
    "label": "Pulkovo 1942 GK Zone 6",
    "defaultExtent": "{\"xmin\": 876892.5324732829, \"ymin\": -9610795.116133098, \"xmax\": 12123107.467526715, \"ymax\": 9610795.116133094}"
  },
  28407: {
    "label": "Pulkovo 1942 GK Zone 7",
    "defaultExtent": "{\"xmin\": 1876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 13123107.467526715, \"ymax\": 9610795.116133094}"
  },
  28408: {
    "label": "Pulkovo 1942 GK Zone 8",
    "defaultExtent": "{\"xmin\": 2876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 14123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28409: {
    "label": "Pulkovo 1942 GK Zone 9",
    "defaultExtent": "{\"xmin\": 3876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 15123107.467526719, \"ymax\": 9610795.116133094}"
  },
  28410: {
    "label": "Pulkovo 1942 GK Zone 10",
    "defaultExtent": "{\"xmin\": 4876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 16123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28411: {
    "label": "Pulkovo 1942 GK Zone 11",
    "defaultExtent": "{\"xmin\": 5876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 17123107.46752672, \"ymax\": 9610795.116133094}"
  },
  28412: {
    "label": "Pulkovo 1942 GK Zone 12",
    "defaultExtent": "{\"xmin\": 6876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 18123107.46752672, \"ymax\": 9610795.116133094}"
  },
  28413: {
    "label": "Pulkovo 1942 GK Zone 13",
    "defaultExtent": "{\"xmin\": 7876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 19123107.46752672, \"ymax\": 9610795.116133094}"
  },
  28414: {
    "label": "Pulkovo 1942 GK Zone 14",
    "defaultExtent": "{\"xmin\": 8876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 20123107.46752672, \"ymax\": 9610795.116133094}"
  },
  28415: {
    "label": "Pulkovo 1942 GK Zone 15",
    "defaultExtent": "{\"xmin\": 9876892.532473283, \"ymin\": -9610795.116133101, \"xmax\": 21123107.467526715, \"ymax\": 9610795.116133094}"
  },
  28416: {
    "label": "Pulkovo 1942 GK Zone 16",
    "defaultExtent": "{\"xmin\": 10876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 22123107.467526715, \"ymax\": 9610795.116133094}"
  },
  28417: {
    "label": "Pulkovo 1942 GK Zone 17",
    "defaultExtent": "{\"xmin\": 11876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 23123107.46752672, \"ymax\": 9610795.116133094}"
  },
  28418: {
    "label": "Pulkovo 1942 GK Zone 18",
    "defaultExtent": "{\"xmin\": 12876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 24123107.46752672, \"ymax\": 9610795.116133094}"
  },
  28419: {
    "label": "Pulkovo 1942 GK Zone 19",
    "defaultExtent": "{\"xmin\": 13876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 25123107.467526715, \"ymax\": 9610795.116133094}"
  },
  28420: {
    "label": "Pulkovo 1942 GK Zone 20",
    "defaultExtent": "{\"xmin\": 14876892.532473283, \"ymin\": -9610795.116133098, \"xmax\": 26123107.46752672, \"ymax\": 9610795.116133094}"
  },
  28421: {
    "label": "Pulkovo 1942 GK Zone 21",
    "defaultExtent": "{\"xmin\": 15876892.532473281, \"ymin\": -9610795.116133098, \"xmax\": 27123107.46752672, \"ymax\": 9610795.116133096}"
  },
  28422: {
    "label": "Pulkovo 1942 GK Zone 22",
    "defaultExtent": "{\"xmin\": 16876892.53247328, \"ymin\": -9610795.116133098, \"xmax\": 28123107.46752672, \"ymax\": 9610795.116133094}"
  },
  28423: {
    "label": "Pulkovo 1942 GK Zone 23",
    "defaultExtent": "{\"xmin\": 17876892.53247328, \"ymin\": -9610795.116133096, \"xmax\": 29123105.667374637, \"ymax\": 9610795.116133094}"
  },
  28424: {
    "label": "Pulkovo 1942 GK Zone 24",
    "defaultExtent": "{\"xmin\": 18876892.53247329, \"ymin\": -9610795.116112284, \"xmax\": 30123107.467526726, \"ymax\": 9610795.116112294}"
  },
  28425: {
    "label": "Pulkovo 1942 GK Zone 25",
    "defaultExtent": "{\"xmin\": 19876892.532473292, \"ymin\": -9610795.116112284, \"xmax\": 31123107.467526726, \"ymax\": 9610795.116112294}"
  },
  28426: {
    "label": "Pulkovo 1942 GK Zone 26",
    "defaultExtent": "{\"xmin\": 20876892.532473292, \"ymin\": -9610795.116112284, \"xmax\": 32123107.467526726, \"ymax\": 9610795.116112294}"
  },
  28427: {
    "label": "Pulkovo 1942 GK Zone 27",
    "defaultExtent": "{\"xmin\": 21876892.5324733, \"ymin\": -9610795.116112284, \"xmax\": 33123107.467526726, \"ymax\": 9610795.116112294}"
  },
  28428: {
    "label": "Pulkovo 1942 GK Zone 28",
    "defaultExtent": "{\"xmin\": 22876892.532473303, \"ymin\": -9610795.116112284, \"xmax\": 34123107.46752673, \"ymax\": 9610795.116112294}"
  },
  28429: {
    "label": "Pulkovo 1942 GK Zone 29",
    "defaultExtent": "{\"xmin\": 23876892.532473303, \"ymin\": -9610795.116112284, \"xmax\": 35123107.46752673, \"ymax\": 9610795.116112294}"
  },
  28430: {
    "label": "Pulkovo 1942 GK Zone 30",
    "defaultExtent": "{\"xmin\": 24876892.5324733, \"ymin\": -9610795.116112284, \"xmax\": 36123107.46752673, \"ymax\": 9610795.116112294}"
  },
  28431: {
    "label": "Pulkovo 1942 GK Zone 31",
    "defaultExtent": "{\"xmin\": 25876892.532473307, \"ymin\": -9610795.116112284, \"xmax\": 37123107.46752673, \"ymax\": 9610795.116112294}"
  },
  28432: {
    "label": "Pulkovo 1942 GK Zone 32",
    "defaultExtent": "{\"xmin\": 26876892.532473307, \"ymin\": -9610795.116112284, \"xmax\": 38123107.46752673, \"ymax\": 9610795.116112294}"
  },
  28462: {
    "label": "Pulkovo 1942 GK Zone 2N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28463: {
    "label": "Pulkovo 1942 GK Zone 3N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28464: {
    "label": "Pulkovo 1942 GK Zone 4N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28465: {
    "label": "Pulkovo 1942 GK Zone 5N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28466: {
    "label": "Pulkovo 1942 GK Zone 6N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  28467: {
    "label": "Pulkovo 1942 GK Zone 7N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526716, \"ymax\": 9610795.116133094}"
  },
  28468: {
    "label": "Pulkovo 1942 GK Zone 8N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28469: {
    "label": "Pulkovo 1942 GK Zone 9N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526718, \"ymax\": 9610795.116133094}"
  },
  28470: {
    "label": "Pulkovo 1942 GK Zone 10N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28471: {
    "label": "Pulkovo 1942 GK Zone 11N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28472: {
    "label": "Pulkovo 1942 GK Zone 12N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.46752672, \"ymax\": 9610795.116133094}"
  },
  28473: {
    "label": "Pulkovo 1942 GK Zone 13N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.46752672, \"ymax\": 9610795.116133094}"
  },
  28474: {
    "label": "Pulkovo 1942 GK Zone 14N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28475: {
    "label": "Pulkovo 1942 GK Zone 15N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133101, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  28476: {
    "label": "Pulkovo 1942 GK Zone 16N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  28477: {
    "label": "Pulkovo 1942 GK Zone 17N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28478: {
    "label": "Pulkovo 1942 GK Zone 18N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28479: {
    "label": "Pulkovo 1942 GK Zone 19N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526715, \"ymax\": 9610795.116133094}"
  },
  28480: {
    "label": "Pulkovo 1942 GK Zone 20N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28481: {
    "label": "Pulkovo 1942 GK Zone 21N",
    "defaultExtent": "{\"xmin\": -5123107.46752672, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133096}"
  },
  28482: {
    "label": "Pulkovo 1942 GK Zone 22N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133098, \"xmax\": 6123107.467526717, \"ymax\": 9610795.116133094}"
  },
  28483: {
    "label": "Pulkovo 1942 GK Zone 23N",
    "defaultExtent": "{\"xmin\": -5123107.467526717, \"ymin\": -9610795.116133096, \"xmax\": 6123105.667374637, \"ymax\": 9610795.116133094}"
  },
  28484: {
    "label": "Pulkovo 1942 GK Zone 24N",
    "defaultExtent": "{\"xmin\": -5123107.46752671, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  28485: {
    "label": "Pulkovo 1942 GK Zone 25N",
    "defaultExtent": "{\"xmin\": -5123107.467526707, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  28486: {
    "label": "Pulkovo 1942 GK Zone 26N",
    "defaultExtent": "{\"xmin\": -5123107.467526707, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  28487: {
    "label": "Pulkovo 1942 GK Zone 27N",
    "defaultExtent": "{\"xmin\": -5123107.467526701, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  28488: {
    "label": "Pulkovo 1942 GK Zone 28N",
    "defaultExtent": "{\"xmin\": -5123107.467526697, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  28489: {
    "label": "Pulkovo 1942 GK Zone 29N",
    "defaultExtent": "{\"xmin\": -5123107.467526697, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  28490: {
    "label": "Pulkovo 1942 GK Zone 30N",
    "defaultExtent": "{\"xmin\": -5123107.467526701, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  28491: {
    "label": "Pulkovo 1942 GK Zone 31N",
    "defaultExtent": "{\"xmin\": -5123107.467526693, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  28492: {
    "label": "Pulkovo 1942 GK Zone 32N",
    "defaultExtent": "{\"xmin\": -5123107.467526693, \"ymin\": -9610795.116112284, \"xmax\": 6123107.4675267255, \"ymax\": 9610795.116112294}"
  },
  28600: {
    "label": "Qatar National Grid",
    "defaultExtent": "{\"xmin\": -5423199.248179519, \"ymin\": -12015975.72052533, \"xmax\": 5823199.248179519, \"ymax\": 7205694.91098534}"
  },
  28991: {
    "label": "RD Old",
    "defaultExtent": "{\"xmin\": -30670379.567908015, \"ymin\": -30742357.635665424, \"xmax\": 30670379.567907993, \"ymax\": 30649300.87968486}"
  },
  28992: {
    "label": "RD New",
    "defaultExtent": "{\"xmin\": -30515379.567908015, \"ymin\": -30279357.635665424, \"xmax\": 30825379.567907993, \"ymax\": 31112300.87968486}"
  },
  29101: {
    "label": "SAD 1969 Brazil Polyconic",
    "defaultExtent": "{\"xmin\": -15037579.32380563, \"ymin\": -5348308.772921104, \"xmax\": 25037579.32380564, \"ymax\": 25348308.772921093}"
  },
  29168: {
    "label": "SAD 1969 UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120784.157939795, \"ymin\": -9606819.739861675, \"xmax\": 6120784.157939793, \"ymax\": 9606819.739861669}"
  },
  29169: {
    "label": "SAD 1969 UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120784.157939795, \"ymin\": -9606819.739861675, \"xmax\": 6120784.157939793, \"ymax\": 9606819.739861669}"
  },
  29170: {
    "label": "SAD 1969 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": -9606819.739861675, \"xmax\": 6120784.157939793, \"ymax\": 9606819.739861669}"
  },
  29171: {
    "label": "SAD 1969 UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": -9606819.739861675, \"xmax\": 6120784.157939793, \"ymax\": 9606819.739861669}"
  },
  29172: {
    "label": "SAD 1969 UTM Zone 22N",
    "defaultExtent": "{\"xmin\": -5120784.157939794, \"ymin\": -9606819.739861675, \"xmax\": 6120784.157939793, \"ymax\": 9606819.739861669}"
  },
  29187: {
    "label": "SAD 1969 UTM Zone 17S",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  29188: {
    "label": "SAD 1969 UTM Zone 18S",
    "defaultExtent": "{\"xmin\": -5120784.157939795, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  29189: {
    "label": "SAD 1969 UTM Zone 19S",
    "defaultExtent": "{\"xmin\": -5120784.157939795, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  29190: {
    "label": "SAD 1969 UTM Zone 20S",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  29191: {
    "label": "SAD 1969 UTM Zone 21S",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  29192: {
    "label": "SAD 1969 UTM Zone 22S",
    "defaultExtent": "{\"xmin\": -5120784.157939794, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  29193: {
    "label": "SAD 1969 UTM Zone 23S",
    "defaultExtent": "{\"xmin\": -5120784.157939793, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  29194: {
    "label": "SAD 1969 UTM Zone 24S",
    "defaultExtent": "{\"xmin\": -5120784.157939792, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  29195: {
    "label": "SAD 1969 UTM Zone 25S",
    "defaultExtent": "{\"xmin\": -5120784.157939792, \"ymin\": 393180.2601383254, \"xmax\": 6120784.157939793, \"ymax\": 19606819.739861667}"
  },
  29220: {
    "label": "Sapper Hill 1943 UTM Zone 20S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  29221: {
    "label": "Sapper Hill 1943 UTM Zone 21S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  29333: {
    "label": "Schwarzeck UTM Zone 33S",
    "defaultExtent": "{\"xmin\": -5120173.1879996555, \"ymin\": 394144.096356092, \"xmax\": 6120173.1879996555, \"ymax\": 19605855.903643902}"
  },
  29635: {
    "label": "Sudan UTM Zone 35N",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": -9606659.335852288, \"xmax\": 6120944.475688979, \"ymax\": 9606659.335852282}"
  },
  29636: {
    "label": "Sudan UTM Zone 36N",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": -9606659.335852288, \"xmax\": 6120944.475688978, \"ymax\": 9606659.335852282}"
  },
  29701: {
    "label": "Tananarive 1925 Paris Laborde Grid",
    "defaultExtent": "{\"xmin\": -7929529.190219831, \"ymin\": -6100528.54577323, \"xmax\": 8729530.41438141, \"ymax\": 7700528.545773233}"
  },
  29738: {
    "label": "Tananarive 1925 UTM Zone 38S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542033, \"ymax\": 19607087.052499555}"
  },
  29739: {
    "label": "Tananarive 1925 UTM Zone 39S",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": 392912.94750043936, \"xmax\": 6121006.178542034, \"ymax\": 19607087.052499555}"
  },
  29849: {
    "label": "Timbalai 1948 UTM Zone 49N",
    "defaultExtent": "{\"xmin\": -5119982.500038063, \"ymin\": -9605675.590855356, \"xmax\": 6119982.50003806, \"ymax\": 9605675.59085535}"
  },
  29850: {
    "label": "Timbalai 1948 UTM Zone 50N",
    "defaultExtent": "{\"xmin\": -5119982.500038063, \"ymin\": -9605675.590855356, \"xmax\": 6119982.500038063, \"ymax\": 9605675.59085535}"
  },
  29871: {
    "label": "Timbalai 1948 RSO Borneo Chains",
    "defaultExtent": "{\"xmin\": -1440070.610298661, \"ymin\": -1550982.4565430125, \"xmax\": 1439930.7175863436, \"ymax\": 1550820.6398233336}"
  },
  29872: {
    "label": "Timbalai 1948 RSO Borneo Feet",
    "defaultExtent": "{\"xmin\": -95044660.27971154, \"ymin\": -102364842.13183792, \"xmax\": 95035427.36069588, \"ymax\": 102354162.22834003}"
  },
  29873: {
    "label": "Timbalai 1948 RSO Borneo Meters",
    "defaultExtent": "{\"xmin\": -28969562.225829132, \"ymin\": -31200749.785922885, \"xmax\": 28966748.036992356, \"ymax\": 31197494.556981973}"
  },
  29901: {
    "label": "OSNI 1952 Irish National Grid",
    "defaultExtent": "{\"xmin\": -5422489.397085395, \"ymin\": -15289652.882936455, \"xmax\": 5822489.397085395, \"ymax\": 3930007.1025026413}"
  },
  29902: {
    "label": "TM65 Irish Grid",
    "defaultExtent": "{\"xmin\": -5422489.397003066, \"ymin\": -15289652.88270891, \"xmax\": 5822489.397003066, \"ymax\": 3930007.102448756}"
  },
  29903: {
    "label": "TM75 Irish Grid",
    "defaultExtent": "{\"xmin\": -5422489.397003066, \"ymin\": -15289652.88270891, \"xmax\": 5822489.397003066, \"ymax\": 3930007.102448756}"
  },
  30161: {
    "label": "Japan Zone 1",
    "defaultExtent": "{\"xmin\": -5621783.478067655, \"ymin\": -13260629.46981559, \"xmax\": 5621783.478067655, \"ymax\": 5956586.870460385}"
  },
  30162: {
    "label": "Japan Zone 2",
    "defaultExtent": "{\"xmin\": -5621783.478067657, \"ymin\": -13260629.46981559, \"xmax\": 5621783.478067655, \"ymax\": 5956586.870460385}"
  },
  30163: {
    "label": "Japan Zone 3",
    "defaultExtent": "{\"xmin\": -5621783.478067655, \"ymin\": -13593355.708836392, \"xmax\": 5621783.478067659, \"ymax\": 5623860.6314395815}"
  },
  30164: {
    "label": "Japan Zone 4",
    "defaultExtent": "{\"xmin\": -5621783.478067655, \"ymin\": -13260629.46981559, \"xmax\": 5621783.478067655, \"ymax\": 5956586.870460385}"
  },
  30165: {
    "label": "Japan Zone 5",
    "defaultExtent": "{\"xmin\": -5621783.478067655, \"ymin\": -13593355.708836392, \"xmax\": 5621783.478067655, \"ymax\": 5623860.6314395815}"
  },
  30166: {
    "label": "Japan Zone 6",
    "defaultExtent": "{\"xmin\": -5621783.478067648, \"ymin\": -13593355.708815586, \"xmax\": 5621783.478067655, \"ymax\": 5623860.631418788}"
  },
  30167: {
    "label": "Japan Zone 7",
    "defaultExtent": "{\"xmin\": -5621783.4780152915, \"ymin\": -13593355.708817856, \"xmax\": 5621783.478120013, \"ymax\": 5623860.631421058}"
  },
  30168: {
    "label": "Japan Zone 8",
    "defaultExtent": "{\"xmin\": -5621783.478067648, \"ymin\": -13593355.708815586, \"xmax\": 5621783.4780676635, \"ymax\": 5623860.631418788}"
  },
  30169: {
    "label": "Japan Zone 9",
    "defaultExtent": "{\"xmin\": -5621783.478120003, \"ymin\": -13593355.708817856, \"xmax\": 5621783.478015297, \"ymax\": 5623860.631421058}"
  },
  30170: {
    "label": "Japan Zone 10",
    "defaultExtent": "{\"xmin\": -5621783.478120001, \"ymin\": -14037250.051471382, \"xmax\": 5621783.4780153055, \"ymax\": 5179966.288767532}"
  },
  30171: {
    "label": "Japan Zone 11",
    "defaultExtent": "{\"xmin\": -5621783.478067648, \"ymin\": -14481450.389769148, \"xmax\": 5621783.4780676635, \"ymax\": 4735765.950465225}"
  },
  30172: {
    "label": "Japan Zone 12",
    "defaultExtent": "{\"xmin\": -5621783.478067648, \"ymin\": -14481450.389769148, \"xmax\": 5621783.4780676635, \"ymax\": 4735765.950465225}"
  },
  30173: {
    "label": "Japan Zone 13",
    "defaultExtent": "{\"xmin\": -5621783.478067648, \"ymin\": -14481450.389769148, \"xmax\": 5621783.4780676635, \"ymax\": 4735765.950465225}"
  },
  30174: {
    "label": "Japan Zone 14",
    "defaultExtent": "{\"xmin\": -5621783.478067645, \"ymin\": -12484873.629557598, \"xmax\": 5621783.4780676635, \"ymax\": 6732342.710676774}"
  },
  30175: {
    "label": "Japan Zone 15",
    "defaultExtent": "{\"xmin\": -5621783.478067657, \"ymin\": -12484873.629578406, \"xmax\": 5621783.478067655, \"ymax\": 6732342.710697568}"
  },
  30176: {
    "label": "Japan Zone 16",
    "defaultExtent": "{\"xmin\": -5621783.478067655, \"ymin\": -12484873.629578406, \"xmax\": 5621783.478067655, \"ymax\": 6732342.710697568}"
  },
  30177: {
    "label": "Japan Zone 17",
    "defaultExtent": "{\"xmin\": -5621783.478067657, \"ymin\": -12484873.629578406, \"xmax\": 5621783.478067655, \"ymax\": 6732342.710697568}"
  },
  30178: {
    "label": "Japan Zone 18",
    "defaultExtent": "{\"xmin\": -5621783.478067648, \"ymin\": -11820538.505245166, \"xmax\": 5621783.478067655, \"ymax\": 7396677.834989205}"
  },
  30179: {
    "label": "Japan Zone 19",
    "defaultExtent": "{\"xmin\": -5621783.478067648, \"ymin\": -12484873.629557598, \"xmax\": 5621783.478067655, \"ymax\": 6732342.710676774}"
  },
  30200: {
    "label": "Trinidad 1903 Trinidad Grid",
    "defaultExtent": "{\"xmin\": -24472295.887599796, \"ymin\": -53188692.73089061, \"xmax\": 25332295.887599796, \"ymax\": 42359310.49697054}"
  },
  30339: {
    "label": "TC 1948 UTM Zone 39N",
    "defaultExtent": "{\"xmin\": -5120818.568079332, \"ymin\": -9606883.018817283, \"xmax\": 6120818.568079333, \"ymax\": 9606883.018817278}"
  },
  30340: {
    "label": "TC 1948 UTM Zone 40N",
    "defaultExtent": "{\"xmin\": -5120818.568079332, \"ymin\": -9606883.018817283, \"xmax\": 6120818.568079332, \"ymax\": 9606883.018817278}"
  },
  30491: {
    "label": "Nord Algerie Ancienne",
    "defaultExtent": "{\"xmin\": -37094490.67083504, \"ymin\": -28508539.130123466, \"xmax\": 38094490.67078953, \"ymax\": 19323033.9283213}"
  },
  30492: {
    "label": "Sud Algerie Ancienne",
    "defaultExtent": "{\"xmin\": -37644652.570998244, \"ymin\": -28128361.975272175, \"xmax\": 38644652.571257345, \"ymax\": 15867737.975734103}"
  },
  30493: {
    "label": "Voirol 1879 Nord Algerie Ancienne",
    "defaultExtent": "{\"xmin\": -37094490.67083504, \"ymin\": -28508539.130123466, \"xmax\": 38094490.67078953, \"ymax\": 19323033.9283213}"
  },
  30494: {
    "label": "Voirol 1879 Sud Algerie Ancienne",
    "defaultExtent": "{\"xmin\": -37644652.570998244, \"ymin\": -28128361.975272175, \"xmax\": 38644652.571257345, \"ymax\": 15867737.975734103}"
  },
  30591: {
    "label": "Nord Algerie",
    "defaultExtent": "{\"xmin\": -37094354.695977226, \"ymin\": -28508448.19506885, \"xmax\": 38094624.69593172, \"ymax\": 19323123.623061687}"
  },
  30592: {
    "label": "Sud Algerie",
    "defaultExtent": "{\"xmin\": -37644516.631470844, \"ymin\": -28128271.08484508, \"xmax\": 38644786.63172995, \"ymax\": 15867827.782508897}"
  },
  30729: {
    "label": "Nord Sahara 1959 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  30730: {
    "label": "Nord Sahara 1959 UTM Zone 30N",
    "defaultExtent": "{\"xmin\": -5120944.444949271, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  30731: {
    "label": "Nord Sahara 1959 UTM Zone 31N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949271, \"ymax\": 9606659.189062221}"
  },
  30732: {
    "label": "Nord Sahara 1959 UTM Zone 32N",
    "defaultExtent": "{\"xmin\": -5120944.444949269, \"ymin\": -9606659.189062225, \"xmax\": 6120944.444949269, \"ymax\": 9606659.189062221}"
  },
  30791: {
    "label": "Nord Sahara 1959 Voirol Unifie Nord",
    "defaultExtent": "{\"xmin\": -37094354.69597727, \"ymin\": -28508448.195068896, \"xmax\": 38094624.69593176, \"ymax\": 19323123.623061676}"
  },
  30792: {
    "label": "Nord Sahara 1959 Voirol Unifie Sud",
    "defaultExtent": "{\"xmin\": -37644516.63147091, \"ymin\": -28128271.084845144, \"xmax\": 38644786.63173002, \"ymax\": 15867827.782508884}"
  },
  31028: {
    "label": "Yoff 1972 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": -9606659.335852288, \"xmax\": 6120944.475688979, \"ymax\": 9606659.335852282}"
  },
  31121: {
    "label": "Zanderij 1972 UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  31154: {
    "label": "Zanderij TM 54 NW",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  31170: {
    "label": "Zanderij Suriname Old TM",
    "defaultExtent": "{\"xmin\": -5121006.178542031, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  31171: {
    "label": "Zanderij Suriname TM",
    "defaultExtent": "{\"xmin\": -5122693.155186252, \"ymin\": -9609970.331927082, \"xmax\": 6122693.155186254, \"ymax\": 9609970.331927076}"
  },
  31251: {
    "label": "MGI Ferro Austria GK West",
    "defaultExtent": "{\"xmin\": -5622345.712638919, \"ymin\": -14609569.127050694, \"xmax\": 5622345.712638919, \"ymax\": 4609569.1270506885}"
  },
  31252: {
    "label": "MGI Ferro Austria GK Central",
    "defaultExtent": "{\"xmin\": -5622345.712638919, \"ymin\": -14609569.127050694, \"xmax\": 5622345.71263892, \"ymax\": 4609569.1270506885}"
  },
  31253: {
    "label": "MGI Ferro Austria GK East",
    "defaultExtent": "{\"xmin\": -5622345.712638919, \"ymin\": -14609569.127050694, \"xmax\": 5622345.712638918, \"ymax\": 4609569.1270506885}"
  },
  31254: {
    "label": "MGI Austria GK West",
    "defaultExtent": "{\"xmin\": -5622345.712638919, \"ymin\": -14609569.127050694, \"xmax\": 5622345.712638919, \"ymax\": 4609569.1270506885}"
  },
  31255: {
    "label": "MGI Austria GK Central",
    "defaultExtent": "{\"xmin\": -5622345.712638919, \"ymin\": -14609569.127050694, \"xmax\": 5622345.712638919, \"ymax\": 4609569.1270506885}"
  },
  31256: {
    "label": "MGI Austria GK East",
    "defaultExtent": "{\"xmin\": -5622345.712638919, \"ymin\": -14609569.127050694, \"xmax\": 5622345.712638918, \"ymax\": 4609569.1270506885}"
  },
  31257: {
    "label": "MGI Austria GK M28",
    "defaultExtent": "{\"xmin\": -5472345.712638919, \"ymin\": -14609569.127050694, \"xmax\": 5772345.712638919, \"ymax\": 4609569.1270506885}"
  },
  31258: {
    "label": "MGI Austria GK M31",
    "defaultExtent": "{\"xmin\": -5172345.712638919, \"ymin\": -14609569.127050694, \"xmax\": 6072345.71263892, \"ymax\": 4609569.1270506885}"
  },
  31259: {
    "label": "MGI Austria GK M34",
    "defaultExtent": "{\"xmin\": -4872345.712638919, \"ymin\": -14609569.127050694, \"xmax\": 6372345.712638919, \"ymax\": 4609569.1270506885}"
  },
  31265: {
    "label": "MGI 3 Degree Gauss Zone 5",
    "defaultExtent": "{\"xmin\": -122345.71263891924, \"ymin\": -9609569.127050694, \"xmax\": 11122345.712638918, \"ymax\": 9609569.127050688}"
  },
  31266: {
    "label": "MGI 3 Degree Gauss Zone 6",
    "defaultExtent": "{\"xmin\": 877654.2873610808, \"ymin\": -9609569.127050694, \"xmax\": 12122345.712638918, \"ymax\": 9609569.127050688}"
  },
  31267: {
    "label": "MGI 3 Degree Gauss Zone 7",
    "defaultExtent": "{\"xmin\": 1877654.2873610808, \"ymin\": -9609569.127050694, \"xmax\": 13122345.712638918, \"ymax\": 9609569.127050688}"
  },
  31268: {
    "label": "MGI 3 Degree Gauss Zone 8",
    "defaultExtent": "{\"xmin\": 2877654.2873610808, \"ymin\": -9609569.127050694, \"xmax\": 14122345.712638918, \"ymax\": 9609569.127050688}"
  },
  31275: {
    "label": "MGI Balkans 5",
    "defaultExtent": "{\"xmin\": -121783.47806765512, \"ymin\": -9608608.17013799, \"xmax\": 11121783.478067655, \"ymax\": 9608608.170137983}"
  },
  31276: {
    "label": "MGI Balkans 6",
    "defaultExtent": "{\"xmin\": 878216.5219323449, \"ymin\": -9608608.17013799, \"xmax\": 12121783.478067655, \"ymax\": 9608608.170137983}"
  },
  31277: {
    "label": "MGI Balkans 7",
    "defaultExtent": "{\"xmin\": 1878216.521932345, \"ymin\": -9608608.17013799, \"xmax\": 13121783.478067655, \"ymax\": 9608608.170137983}"
  },
  31279: {
    "label": "MGI Balkans 8",
    "defaultExtent": "{\"xmin\": 2878216.521932345, \"ymin\": -9608608.17013799, \"xmax\": 14121783.478067655, \"ymax\": 9608608.170137983}"
  },
  31281: {
    "label": "Austria West Zone",
    "defaultExtent": "{\"xmin\": -5622345.712638919, \"ymin\": -9609569.127050694, \"xmax\": 5622345.712638919, \"ymax\": 9609569.127050688}"
  },
  31282: {
    "label": "Austria Central Zone",
    "defaultExtent": "{\"xmin\": -5622345.712638919, \"ymin\": -9609569.127050694, \"xmax\": 5622345.71263892, \"ymax\": 9609569.127050688}"
  },
  31283: {
    "label": "Austria East Zone",
    "defaultExtent": "{\"xmin\": -5622345.712638919, \"ymin\": -9609569.127050694, \"xmax\": 5622345.712638918, \"ymax\": 9609569.127050688}"
  },
  31284: {
    "label": "MGI M28",
    "defaultExtent": "{\"xmin\": -5472345.712638919, \"ymin\": -9609569.127050694, \"xmax\": 5772345.712638919, \"ymax\": 9609569.127050688}"
  },
  31285: {
    "label": "MGI M31",
    "defaultExtent": "{\"xmin\": -5172345.712638919, \"ymin\": -9609569.127050694, \"xmax\": 6072345.71263892, \"ymax\": 9609569.127050688}"
  },
  31286: {
    "label": "MGI M34",
    "defaultExtent": "{\"xmin\": -4872345.712638919, \"ymin\": -9609569.127050694, \"xmax\": 6372345.712638919, \"ymax\": 9609569.127050688}"
  },
  31287: {
    "label": "MGI Austria Lambert",
    "defaultExtent": "{\"xmin\": -35829841.356007785, \"ymin\": -29978080.932357267, \"xmax\": 36629841.3560589, \"ymax\": 30833115.889975503}"
  },
  31288: {
    "label": "MGI Ferro M28",
    "defaultExtent": "{\"xmin\": -5472345.712638919, \"ymin\": -9609569.127050694, \"xmax\": 5772345.712638919, \"ymax\": 9609569.127050688}"
  },
  31289: {
    "label": "MGI Ferro M31",
    "defaultExtent": "{\"xmin\": -5172345.712638919, \"ymin\": -9609569.127050694, \"xmax\": 6072345.71263892, \"ymax\": 9609569.127050688}"
  },
  31290: {
    "label": "MGI Ferro M34",
    "defaultExtent": "{\"xmin\": -4872345.712638919, \"ymin\": -9609569.127050694, \"xmax\": 6372345.712638918, \"ymax\": 9609569.127050688}"
  },
  31370: {
    "label": "Belge Lambert 1972",
    "defaultExtent": "{\"xmin\": -35872636.57412841, \"ymin\": -30622548.149173222, \"xmax\": 36172636.5995491, \"ymax\": 32543604.218167774}"
  },
  31466: {
    "label": "DHDN 3 Degree Gauss Zone 2",
    "defaultExtent": "{\"xmin\": -3122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 8122345.712638919, \"ymax\": 9609569.127050688}"
  },
  31467: {
    "label": "DHDN 3 Degree Gauss Zone 3",
    "defaultExtent": "{\"xmin\": -2122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 9122345.712638918, \"ymax\": 9609569.127050688}"
  },
  31468: {
    "label": "DHDN 3 Degree Gauss Zone 4",
    "defaultExtent": "{\"xmin\": -1122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 10122345.712638918, \"ymax\": 9609569.127050688}"
  },
  31469: {
    "label": "DHDN 3 Degree Gauss Zone 5",
    "defaultExtent": "{\"xmin\": -122345.71263891924, \"ymin\": -9609569.127050694, \"xmax\": 11122345.712638918, \"ymax\": 9609569.127050688}"
  },
  31491: {
    "label": "Germany Zone 1",
    "defaultExtent": "{\"xmin\": -4122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 7122345.71263892, \"ymax\": 9609569.127050688}"
  },
  31492: {
    "label": "Germany Zone 2",
    "defaultExtent": "{\"xmin\": -3122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 8122345.712638919, \"ymax\": 9609569.127050688}"
  },
  31493: {
    "label": "Germany Zone 3",
    "defaultExtent": "{\"xmin\": -2122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 9122345.712638918, \"ymax\": 9609569.127050688}"
  },
  31494: {
    "label": "Germany Zone 4",
    "defaultExtent": "{\"xmin\": -1122345.7126389192, \"ymin\": -9609569.127050694, \"xmax\": 10122345.712638918, \"ymax\": 9609569.127050688}"
  },
  31495: {
    "label": "Germany Zone 5",
    "defaultExtent": "{\"xmin\": -122345.71263891924, \"ymin\": -9609569.127050694, \"xmax\": 11122345.712638918, \"ymax\": 9609569.127050688}"
  },
  31528: {
    "label": "Conakry 1905 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": -9606659.335852288, \"xmax\": 6120944.475688979, \"ymax\": 9606659.335852282}"
  },
  31529: {
    "label": "Conakry 1905 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": -9606659.335852288, \"xmax\": 6120944.475688979, \"ymax\": 9606659.335852282}"
  },
  31600: {
    "label": "Stereo 33",
    "defaultExtent": "{\"xmin\": -30223247.475245144, \"ymin\": -30035948.876277775, \"xmax\": 31223247.47487916, \"ymax\": 31205487.319453847}"
  },
  31700: {
    "label": "Stereo 70",
    "defaultExtent": "{\"xmin\": -30221780.112340685, \"ymin\": -30036352.66697563, \"xmax\": 31221780.10821221, \"ymax\": 31204134.735311333}"
  },
  31838: {
    "label": "NGN UTM Zone 38N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  31839: {
    "label": "NGN UTM Zone 39N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699435, \"ymax\": 9606785.535047516}"
  },
  31901: {
    "label": "KUDAMS KTM",
    "defaultExtent": "{\"xmin\": -5123012.972913165, \"ymin\": -9610629.786873642, \"xmax\": 6123012.972913165, \"ymax\": 9610629.786873637}"
  },
  31965: {
    "label": "SIRGAS 2000 UTM Zone 11N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31966: {
    "label": "SIRGAS 2000 UTM Zone 12N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31967: {
    "label": "SIRGAS 2000 UTM Zone 13N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31968: {
    "label": "SIRGAS 2000 UTM Zone 14N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31969: {
    "label": "SIRGAS 2000 UTM Zone 15N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31970: {
    "label": "SIRGAS 2000 UTM Zone 16N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958893, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31971: {
    "label": "SIRGAS 2000 UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31972: {
    "label": "SIRGAS 2000 UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31973: {
    "label": "SIRGAS 2000 UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31974: {
    "label": "SIRGAS 2000 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31975: {
    "label": "SIRGAS 2000 UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31976: {
    "label": "SIRGAS 2000 UTM Zone 22N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31977: {
    "label": "SIRGAS 2000 UTM Zone 17S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31978: {
    "label": "SIRGAS 2000 UTM Zone 18S",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31979: {
    "label": "SIRGAS 2000 UTM Zone 19S",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31980: {
    "label": "SIRGAS 2000 UTM Zone 20S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31981: {
    "label": "SIRGAS 2000 UTM Zone 21S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31982: {
    "label": "SIRGAS 2000 UTM Zone 22S",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31983: {
    "label": "SIRGAS 2000 UTM Zone 23S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31984: {
    "label": "SIRGAS 2000 UTM Zone 24S",
    "defaultExtent": "{\"xmin\": -5120763.767723999, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31985: {
    "label": "SIRGAS 2000 UTM Zone 25S",
    "defaultExtent": "{\"xmin\": -5120763.767723999, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31986: {
    "label": "SIRGAS UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31987: {
    "label": "SIRGAS UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31988: {
    "label": "SIRGAS UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31989: {
    "label": "SIRGAS UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31990: {
    "label": "SIRGAS UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31991: {
    "label": "SIRGAS UTM Zone 22N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  31992: {
    "label": "SIRGAS UTM Zone 17S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31993: {
    "label": "SIRGAS UTM Zone 18S",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31994: {
    "label": "SIRGAS UTM Zone 19S",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31995: {
    "label": "SIRGAS UTM Zone 20S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31996: {
    "label": "SIRGAS UTM Zone 21S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31997: {
    "label": "SIRGAS UTM Zone 22S",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31998: {
    "label": "SIRGAS UTM Zone 23S",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  31999: {
    "label": "SIRGAS UTM Zone 24S",
    "defaultExtent": "{\"xmin\": -5120763.767723999, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  32000: {
    "label": "SIRGAS UTM Zone 25S",
    "defaultExtent": "{\"xmin\": -5120763.767723999, \"ymin\": 393214.46504110843, \"xmax\": 6120763.767724001, \"ymax\": 19606785.534958888}"
  },
  32001: {
    "label": "NAD 1927 StatePlane Montana North FIPS 2501",
    "defaultExtent": "{\"xmin\": -116698587.84914257, \"ymin\": -99540714.50048013, \"xmax\": 120698587.84907758, \"ymax\": 102149657.6264272}"
  },
  32002: {
    "label": "NAD 1927 StatePlane Montana Central FIPS 2502",
    "defaultExtent": "{\"xmin\": -116977362.12206852, \"ymin\": -99057555.59796317, \"xmax\": 120977362.12224735, \"ymax\": 99536879.00554872}"
  },
  32003: {
    "label": "NAD 1927 StatePlane Montana South FIPS 2503",
    "defaultExtent": "{\"xmin\": -117394673.2530558, \"ymin\": -98297851.73348154, \"xmax\": 121394673.25307614, \"ymax\": 95718532.76168253}"
  },
  32005: {
    "label": "NAD 1927 StatePlane Nebraska North FIPS 2601",
    "defaultExtent": "{\"xmin\": -118453075.97019011, \"ymin\": -97084099.0188445, \"xmax\": 122453075.97058392, \"ymax\": 85804929.24645765}"
  },
  32006: {
    "label": "NAD 1927 StatePlane Nebraska South FIPS 2602",
    "defaultExtent": "{\"xmin\": -118950479.07402991, \"ymin\": -96359697.27755822, \"xmax\": 122950479.07360175, \"ymax\": 81548246.19470257}"
  },
  32007: {
    "label": "NAD 1927 StatePlane Nevada East FIPS 2701",
    "defaultExtent": "{\"xmin\": -17946707.108108267, \"ymin\": -44146398.07922226, \"xmax\": 18946707.108108275, \"ymax\": 18908411.941586282}"
  },
  32008: {
    "label": "NAD 1927 StatePlane Nevada Central FIPS 2702",
    "defaultExtent": "{\"xmin\": -17946707.108108267, \"ymin\": -44146398.07922226, \"xmax\": 18946707.10810827, \"ymax\": 18908411.941586282}"
  },
  32009: {
    "label": "NAD 1927 StatePlane Nevada West FIPS 2703",
    "defaultExtent": "{\"xmin\": -17946707.108108267, \"ymin\": -44146398.07922226, \"xmax\": 18946707.10810827, \"ymax\": 18908411.941586282}"
  },
  32010: {
    "label": "NAD 1927 StatePlane New Hampshire FIPS 2800",
    "defaultExtent": "{\"xmin\": -17947937.011572484, \"ymin\": -46971748.72174005, \"xmax\": 18947937.011572488, \"ymax\": 16087265.373477316}"
  },
  32011: {
    "label": "NAD 1927 StatePlane New Jersey FIPS 2900",
    "defaultExtent": "{\"xmin\": -16448090.74950552, \"ymin\": -45636324.57738811, \"xmax\": 20448090.749505512, \"ymax\": 17423215.02713036}"
  },
  32012: {
    "label": "NAD 1927 StatePlane New Mexico East FIPS 3001",
    "defaultExtent": "{\"xmin\": -17946874.822217017, \"ymin\": -42782519.66079074, \"xmax\": 18946874.822217025, \"ymax\": 20272863.642891735}"
  },
  32013: {
    "label": "NAD 1927 StatePlane New Mexico Central FIPS 3002",
    "defaultExtent": "{\"xmin\": -17946707.108108267, \"ymin\": -42782130.69343315, \"xmax\": 18946707.10810827, \"ymax\": 20272679.32737539}"
  },
  32014: {
    "label": "NAD 1927 StatePlane New Mexico West FIPS 3003",
    "defaultExtent": "{\"xmin\": -17947014.583974324, \"ymin\": -42782843.80025538, \"xmax\": 18947014.583974328, \"ymax\": 20273017.239155356}"
  },
  32015: {
    "label": "NAD 1927 StatePlane New York East FIPS 3101",
    "defaultExtent": "{\"xmin\": -17947937.011572484, \"ymin\": -46060879.769489884, \"xmax\": 18947937.011572488, \"ymax\": 16998134.32572749}"
  },
  32016: {
    "label": "NAD 1927 StatePlane New York Central FIPS 3102",
    "defaultExtent": "{\"xmin\": -17947398.928806886, \"ymin\": -46059536.282380365, \"xmax\": 18947398.92880689, \"ymax\": 16997638.53028314}"
  },
  32017: {
    "label": "NAD 1927 StatePlane New York West FIPS 3103",
    "defaultExtent": "{\"xmin\": -17947398.928806897, \"ymin\": -46059536.282380365, \"xmax\": 18947398.92880689, \"ymax\": 16997638.53028314}"
  },
  32019: {
    "label": "NAD 1927 StatePlane North Carolina FIPS 3200",
    "defaultExtent": "{\"xmin\": -121836339.258004, \"ymin\": -93652701.46732512, \"xmax\": 125836339.25862262, \"ymax\": 59912961.363206044}"
  },
  32020: {
    "label": "NAD 1927 StatePlane North Dakota North FIPS 3301",
    "defaultExtent": "{\"xmin\": -116745069.91367564, \"ymin\": -99529554.17423095, \"xmax\": 120745069.9151863, \"ymax\": 101619253.80293016}"
  },
  32021: {
    "label": "NAD 1927 StatePlane North Dakota South FIPS 3302",
    "defaultExtent": "{\"xmin\": -117066362.07152306, \"ymin\": -98979384.856835, \"xmax\": 121066362.07307407, \"ymax\": 98653581.72041585}"
  },
  32022: {
    "label": "NAD 1927 StatePlane Ohio North FIPS 3401",
    "defaultExtent": "{\"xmin\": -118925822.1436901, \"ymin\": -96366663.48565821, \"xmax\": 122925822.14271761, \"ymax\": 81797678.99640897}"
  },
  32023: {
    "label": "NAD 1927 StatePlane Ohio South FIPS 3402",
    "defaultExtent": "{\"xmin\": -119633032.2978528, \"ymin\": -95605960.98736395, \"xmax\": 123633032.29803409, \"ymax\": 75913411.04150413}"
  },
  32024: {
    "label": "NAD 1927 StatePlane Oklahoma North FIPS 3501",
    "defaultExtent": "{\"xmin\": -121285808.93332501, \"ymin\": -94202977.24420936, \"xmax\": 125285808.93319671, \"ymax\": 63533160.40821104}"
  },
  32025: {
    "label": "NAD 1927 StatePlane Oklahoma South FIPS 3502",
    "defaultExtent": "{\"xmin\": -122277503.52713825, \"ymin\": -93439470.4321531, \"xmax\": 126277503.52559131, \"ymax\": 57039457.37229436}"
  },
  32026: {
    "label": "NAD 1927 StatePlane Oregon North FIPS 3601",
    "defaultExtent": "{\"xmin\": -117528431.49835028, \"ymin\": -98144578.95049556, \"xmax\": 121528431.49947406, \"ymax\": 94401902.13854277}"
  },
  32027: {
    "label": "NAD 1927 StatePlane Oregon South FIPS 3602",
    "defaultExtent": "{\"xmin\": -118157395.78176126, \"ymin\": -97268728.00678141, \"xmax\": 122157395.78180157, \"ymax\": 88588558.84440745}"
  },
  32028: {
    "label": "NAD 1927 StatePlane Pennsylvania North FIPS 3701",
    "defaultExtent": "{\"xmin\": -118791652.48156999, \"ymin\": -96580602.07204467, \"xmax\": 122791652.48364748, \"ymax\": 82914198.49534205}"
  },
  32030: {
    "label": "NAD 1927 StatePlane Rhode Island FIPS 3800",
    "defaultExtent": "{\"xmin\": -17948436.659854826, \"ymin\": -46456798.61830759, \"xmax\": 18948436.65985483, \"ymax\": 16603923.382138362}"
  },
  32031: {
    "label": "NAD 1927 StatePlane South Carolina North FIPS 3901",
    "defaultExtent": "{\"xmin\": -122425206.99291877, \"ymin\": -93297482.48964359, \"xmax\": 126425206.99324301, \"ymax\": 56167143.68788802}"
  },
  32033: {
    "label": "NAD 1927 StatePlane South Carolina South FIPS 3902",
    "defaultExtent": "{\"xmin\": -123415932.38123429, \"ymin\": -92739044.13944179, \"xmax\": 127415932.403407, \"ymax\": 50212205.694680326}"
  },
  32034: {
    "label": "NAD 1927 StatePlane South Dakota North FIPS 4001",
    "defaultExtent": "{\"xmin\": -117566843.86309166, \"ymin\": -98200146.94796717, \"xmax\": 121566843.86289462, \"ymax\": 93976881.19036278}"
  },
  32035: {
    "label": "NAD 1927 StatePlane South Dakota South FIPS 4002",
    "defaultExtent": "{\"xmin\": -118009405.2449922, \"ymin\": -97547468.45995413, \"xmax\": 122009405.24456261, \"ymax\": 89871046.79721011}"
  },
  32037: {
    "label": "NAD 1927 StatePlane Texas North FIPS 4201",
    "defaultExtent": "{\"xmin\": -121735619.05154426, \"ymin\": -93762659.12071413, \"xmax\": 125735619.05161719, \"ymax\": 60569957.3005796}"
  },
  32038: {
    "label": "NAD 1927 StatePlane Texas North Central FIPS 4202",
    "defaultExtent": "{\"xmin\": -123370895.43990469, \"ymin\": -92679241.07921445, \"xmax\": 127370895.4408924, \"ymax\": 50510338.14810767}"
  },
  32039: {
    "label": "NAD 1927 StatePlane Texas Central FIPS 4203",
    "defaultExtent": "{\"xmin\": -125097099.81398714, \"ymin\": -91759978.00208937, \"xmax\": 129097099.813969, \"ymax\": 41347688.51074191}"
  },
  32040: {
    "label": "NAD 1927 StatePlane Texas South Central FIPS 4204",
    "defaultExtent": "{\"xmin\": -126689517.26641087, \"ymin\": -90946723.77449241, \"xmax\": 130689517.26641086, \"ymax\": 37477486.00733462}"
  },
  32041: {
    "label": "NAD 1927 StatePlane Texas South FIPS 4205",
    "defaultExtent": "{\"xmin\": -128189121.38630803, \"ymin\": -89983319.60432447, \"xmax\": 132189121.38630804, \"ymax\": 39798734.959908515}"
  },
  32042: {
    "label": "NAD 1927 StatePlane Utah North FIPS 4301",
    "defaultExtent": "{\"xmin\": -118855896.63940258, \"ymin\": -96626786.3636115, \"xmax\": 122855896.94320486, \"ymax\": 82237308.72813217}"
  },
  32043: {
    "label": "NAD 1927 StatePlane Utah Central FIPS 4302",
    "defaultExtent": "{\"xmin\": -119430998.0146647, \"ymin\": -95766883.86220527, \"xmax\": 123430998.01679629, \"ymax\": 77566539.61972874}"
  },
  32044: {
    "label": "NAD 1927 StatePlane Utah South FIPS 4303",
    "defaultExtent": "{\"xmin\": -120401403.44709013, \"ymin\": -94968590.42270006, \"xmax\": 124401403.44615462, \"ymax\": 69865591.05793928}"
  },
  32045: {
    "label": "NAD 1927 StatePlane Vermont FIPS 4400",
    "defaultExtent": "{\"xmin\": -17947893.08644877, \"ymin\": -46971636.88051506, \"xmax\": 18947893.08644877, \"ymax\": 16087227.06918771}"
  },
  32046: {
    "label": "NAD 1927 StatePlane Virginia North FIPS 4501",
    "defaultExtent": "{\"xmin\": -119989261.24272962, \"ymin\": -95412817.07990089, \"xmax\": 123989261.24571212, \"ymax\": 72947185.11349829}"
  },
  32047: {
    "label": "NAD 1927 StatePlane Virginia South FIPS 4502",
    "defaultExtent": "{\"xmin\": -120617586.10312341, \"ymin\": -94806274.45888251, \"xmax\": 124617586.10281095, \"ymax\": 68230042.07269102}"
  },
  32048: {
    "label": "NAD 1927 StatePlane Washington North FIPS 4601",
    "defaultExtent": "{\"xmin\": -116737330.18238823, \"ymin\": -99531466.4822629, \"xmax\": 120737330.18301605, \"ymax\": 101708090.99456866}"
  },
  32049: {
    "label": "NAD 1927 StatePlane Washington South FIPS 4602",
    "defaultExtent": "{\"xmin\": -117131457.75562024, \"ymin\": -98842337.99626632, \"xmax\": 121131457.75816643, \"ymax\": 98055283.30501087}"
  },
  32050: {
    "label": "NAD 1927 StatePlane West Virginia North FIPS 4701",
    "defaultExtent": "{\"xmin\": -119526067.6113447, \"ymin\": -95810941.53593539, \"xmax\": 123526067.61141573, \"ymax\": 76687811.82409953}"
  },
  32051: {
    "label": "NAD 1927 StatePlane West Virginia South FIPS 4702",
    "defaultExtent": "{\"xmin\": -120197626.44139844, \"ymin\": -95127006.39232102, \"xmax\": 124197626.44059001, \"ymax\": 71409708.82075965}"
  },
  32052: {
    "label": "NAD 1927 StatePlane Wisconsin North FIPS 4801",
    "defaultExtent": "{\"xmin\": -117247905.33946048, \"ymin\": -98758725.64485882, \"xmax\": 121247905.3386298, \"ymax\": 96895623.04143758}"
  },
  32053: {
    "label": "NAD 1927 StatePlane Wisconsin Central FIPS 4802",
    "defaultExtent": "{\"xmin\": -117619131.47377805, \"ymin\": -98188217.12730597, \"xmax\": 121619131.45598258, \"ymax\": 93425811.9598517}"
  },
  32054: {
    "label": "NAD 1927 StatePlane Wisconsin South FIPS 4803",
    "defaultExtent": "{\"xmin\": -118082977.13506563, \"ymin\": -97410842.31901717, \"xmax\": 122082977.13531266, \"ymax\": 89262143.1951746}"
  },
  32055: {
    "label": "NAD 1927 StatePlane Wyoming East FIPS 4901",
    "defaultExtent": "{\"xmin\": -17947466.754365563, \"ymin\": -46302558.63750783, \"xmax\": 18947466.75436558, \"ymax\": 16754848.01749439}"
  },
  32056: {
    "label": "NAD 1927 StatePlane Wyoming East Central FIPS 4902",
    "defaultExtent": "{\"xmin\": -17947466.754365586, \"ymin\": -46302558.63750783, \"xmax\": 18947466.75436558, \"ymax\": 16754848.01749439}"
  },
  32057: {
    "label": "NAD 1927 StatePlane Wyoming West Central FIPS 4903",
    "defaultExtent": "{\"xmin\": -17947466.754365575, \"ymin\": -46302558.63750783, \"xmax\": 18947466.75436558, \"ymax\": 16754848.01749439}"
  },
  32058: {
    "label": "NAD 1927 StatePlane Wyoming West FIPS 4904",
    "defaultExtent": "{\"xmin\": -17947466.754365575, \"ymin\": -46302558.63750783, \"xmax\": 18947466.75436558, \"ymax\": 16754848.01749439}"
  },
  32059: {
    "label": "NAD 1927 StatePlane Puerto Rico FIPS 5201",
    "defaultExtent": "{\"xmin\": -124897210.51208878, \"ymin\": -87003780.852594, \"xmax\": 125897210.51239304, \"ymax\": 49074694.809181586}"
  },
  32060: {
    "label": "NAD 1927 StatePlane Virgin Islands St Croix FIPS 5202",
    "defaultExtent": "{\"xmin\": -124897210.51208878, \"ymin\": -86903780.852594, \"xmax\": 125897210.51239304, \"ymax\": 49174694.809181586}"
  },
  32061: {
    "label": "NAD 1927 Guatemala Norte",
    "defaultExtent": "{\"xmin\": -37005128.9335971, \"ymin\": -26145561.98950497, \"xmax\": 38005128.933695495, \"ymax\": 15693865.652280116}"
  },
  32062: {
    "label": "NAD 1927 Guatemala Sur",
    "defaultExtent": "{\"xmin\": -35836017.190327846, \"ymin\": -25973070.886990257, \"xmax\": 36836017.19043182, \"ymax\": 16386283.78267812}"
  },
  32064: {
    "label": "NAD 1927 BLM Zone 14N",
    "defaultExtent": "{\"xmin\": -16800755.87585261, \"ymin\": -31517945.842984416, \"xmax\": 20081589.209185943, \"ymax\": 31517945.842984397}"
  },
  32065: {
    "label": "NAD 1927 BLM Zone 15N",
    "defaultExtent": "{\"xmin\": -16800755.875852603, \"ymin\": -31517945.842984416, \"xmax\": 20081589.209185943, \"ymax\": 31517945.842984397}"
  },
  32066: {
    "label": "NAD 1927 BLM Zone 16N",
    "defaultExtent": "{\"xmin\": -16800755.875852603, \"ymin\": -31517945.84298442, \"xmax\": 20081589.209185943, \"ymax\": 31517945.842984397}"
  },
  32067: {
    "label": "NAD 1927 BLM Zone 17N",
    "defaultExtent": "{\"xmin\": -16800755.87585261, \"ymin\": -31517945.842984416, \"xmax\": 20081589.209185943, \"ymax\": 31517945.842984397}"
  },
  32081: {
    "label": "NAD 1927 MTM 1",
    "defaultExtent": "{\"xmin\": -5317767.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  32082: {
    "label": "NAD 1927 MTM 2",
    "defaultExtent": "{\"xmin\": -5317767.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  32083: {
    "label": "NAD 1927 MTM 3",
    "defaultExtent": "{\"xmin\": -5317767.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  32084: {
    "label": "NAD 1927 MTM 4",
    "defaultExtent": "{\"xmin\": -5317767.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  32085: {
    "label": "NAD 1927 MTM 5",
    "defaultExtent": "{\"xmin\": -5317767.571686546, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  32086: {
    "label": "NAD 1927 MTM 6",
    "defaultExtent": "{\"xmin\": -5317767.571686544, \"ymin\": -9609572.266315758, \"xmax\": 5927367.571686544, \"ymax\": 9609572.266315753}"
  },
  32098: {
    "label": "NAD 1927 Quebec Lambert",
    "defaultExtent": "{\"xmin\": -35680010.172839805, \"ymin\": -29914856.728651848, \"xmax\": 35681054.02616269, \"ymax\": 34676682.98203933}"
  },
  32099: {
    "label": "NAD 1927 StatePlane Louisiana Offshore FIPS 1703",
    "defaultExtent": "{\"xmin\": -128189121.38625799, \"ymin\": -89983319.60373336, \"xmax\": 132189121.38635808, \"ymax\": 39798734.9599408}"
  },
  32100: {
    "label": "NAD 1983 StatePlane Montana FIPS 2500",
    "defaultExtent": "{\"xmin\": -35665865.835127994, \"ymin\": -30006746.26947549, \"xmax\": 36865865.835221216, \"ymax\": 30370447.115839537}"
  },
  32104: {
    "label": "NAD 1983 StatePlane Nebraska FIPS 2600",
    "defaultExtent": "{\"xmin\": -36300933.080799475, \"ymin\": -29399402.24687034, \"xmax\": 37300933.080734946, \"ymax\": 25403103.617317706}"
  },
  32107: {
    "label": "NAD 1983 StatePlane Nevada East FIPS 2701",
    "defaultExtent": "{\"xmin\": -5422450.671615874, \"ymin\": -5456142.367622394, \"xmax\": 5822450.671615875, \"ymax\": 13763195.080167508}"
  },
  32108: {
    "label": "NAD 1983 StatePlane Nevada Central FIPS 2702",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": -7456142.367622394, \"xmax\": 6122450.671615874, \"ymax\": 11763195.080167508}"
  },
  32109: {
    "label": "NAD 1983 StatePlane Nevada West FIPS 2703",
    "defaultExtent": "{\"xmin\": -4822450.671615874, \"ymin\": -9456142.367622394, \"xmax\": 6422450.671615874, \"ymax\": 9763195.080167508}"
  },
  32110: {
    "label": "NAD 1983 StatePlane New Hampshire FIPS 2800",
    "defaultExtent": "{\"xmin\": -5322825.539147401, \"ymin\": -14317328.47673371, \"xmax\": 5922825.539147401, \"ymax\": 4903290.3883611085}"
  },
  32111: {
    "label": "NAD 1983 StatePlane New Jersey FIPS 2900",
    "defaultExtent": "{\"xmin\": -5472450.671615874, \"ymin\": -13909240.393148925, \"xmax\": 5772450.671615874, \"ymax\": 5310097.054640977}"
  },
  32112: {
    "label": "NAD 1983 StatePlane New Mexico East FIPS 3001",
    "defaultExtent": "{\"xmin\": -5457501.789915625, \"ymin\": -13040418.509908829, \"xmax\": 5787501.789915627, \"ymax\": 6179093.676604471}"
  },
  32113: {
    "label": "NAD 1983 StatePlane New Mexico Central FIPS 3002",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": -13040299.949871464, \"xmax\": 6122450.671615874, \"ymax\": 6179037.49791844}"
  },
  32114: {
    "label": "NAD 1983 StatePlane New Mexico West FIPS 3003",
    "defaultExtent": "{\"xmin\": -4792544.388498756, \"ymin\": -13040517.30993997, \"xmax\": 6452544.388498756, \"ymax\": 6179140.492176165}"
  },
  32115: {
    "label": "NAD 1983 StatePlane New York East FIPS 3101",
    "defaultExtent": "{\"xmin\": -5472450.671615874, \"ymin\": -13909240.393148925, \"xmax\": 5772450.671615874, \"ymax\": 5310097.054640977}"
  },
  32116: {
    "label": "NAD 1983 StatePlane New York Central FIPS 3102",
    "defaultExtent": "{\"xmin\": -5372661.534602356, \"ymin\": -14039281.307184162, \"xmax\": 5872661.534602358, \"ymax\": 5180776.937839759}"
  },
  32117: {
    "label": "NAD 1983 StatePlane New York West FIPS 3103",
    "defaultExtent": "{\"xmin\": -5272661.53460236, \"ymin\": -14039281.307184162, \"xmax\": 5972661.534602358, \"ymax\": 5180776.937839759}"
  },
  32118: {
    "label": "NAD 1983 StatePlane New York Long Island FIPS 3104",
    "defaultExtent": "{\"xmin\": -36587956.42066342, \"ymin\": -29425420.120449886, \"xmax\": 37187956.42150142, \"ymax\": 24629425.6260428}"
  },
  32119: {
    "label": "NAD 1983 StatePlane North Carolina FIPS 3200",
    "defaultExtent": "{\"xmin\": -37137389.9550148, \"ymin\": -28547205.58121489, \"xmax\": 38356592.395206995, \"ymax\": 18261684.963585444}"
  },
  32120: {
    "label": "NAD 1983 StatePlane North Dakota North FIPS 3301",
    "defaultExtent": "{\"xmin\": -35595748.115963005, \"ymin\": -30339027.657292105, \"xmax\": 36795748.11641998, \"ymax\": 30974941.604174778}"
  },
  32121: {
    "label": "NAD 1983 StatePlane North Dakota South FIPS 3302",
    "defaultExtent": "{\"xmin\": -35693627.05966489, \"ymin\": -30171287.465168312, \"xmax\": 36893627.0601383, \"ymax\": 30070892.076617684}"
  },
  32122: {
    "label": "NAD 1983 StatePlane Ohio North FIPS 3401",
    "defaultExtent": "{\"xmin\": -36260139.32294244, \"ymin\": -29374687.724612944, \"xmax\": 37460139.32264283, \"ymax\": 24932674.77100941}"
  },
  32123: {
    "label": "NAD 1983 StatePlane Ohio South FIPS 3402",
    "defaultExtent": "{\"xmin\": -36475619.49728193, \"ymin\": -29142750.459979072, \"xmax\": 37675619.497339524, \"ymax\": 23138992.601405952}"
  },
  32124: {
    "label": "NAD 1983 StatePlane Oklahoma North FIPS 3501",
    "defaultExtent": "{\"xmin\": -36979233.88907343, \"ymin\": -28714973.963273533, \"xmax\": 38179233.8890346, \"ymax\": 19365200.320864283}"
  },
  32125: {
    "label": "NAD 1983 StatePlane Oklahoma South FIPS 3502",
    "defaultExtent": "{\"xmin\": -37281426.008000575, \"ymin\": -28482182.493828315, \"xmax\": 38481426.007534444, \"ymax\": 17385783.726951864}"
  },
  32126: {
    "label": "NAD 1983 StatePlane Oregon North FIPS 3601",
    "defaultExtent": "{\"xmin\": -33934395.67833442, \"ymin\": -29916770.9826887, \"xmax\": 38934395.67866903, \"ymax\": 28774826.90963382}"
  },
  32127: {
    "label": "NAD 1983 StatePlane Oregon South FIPS 3602",
    "defaultExtent": "{\"xmin\": -35126017.07220474, \"ymin\": -29649727.834081486, \"xmax\": 38126017.072228044, \"ymax\": 27002732.65337064}"
  },
  32128: {
    "label": "NAD 1983 StatePlane Pennsylvania North FIPS 3701",
    "defaultExtent": "{\"xmin\": -36219260.373335704, \"ymin\": -29439912.0075843, \"xmax\": 37419260.373972096, \"ymax\": 25273022.556772325}"
  },
  32129: {
    "label": "NAD 1983 StatePlane Pennsylvania South FIPS 3702",
    "defaultExtent": "{\"xmin\": -36336434.103694856, \"ymin\": -29321240.345738437, \"xmax\": 37536434.10343623, \"ymax\": 24259081.311989907}"
  },
  32130: {
    "label": "NAD 1983 StatePlane Rhode Island FIPS 3800",
    "defaultExtent": "{\"xmin\": -5522977.829082084, \"ymin\": -14160369.134576127, \"xmax\": 5722977.829082084, \"ymax\": 5060770.306298815}"
  },
  32133: {
    "label": "NAD 1983 StatePlane South Carolina FIPS 3900",
    "defaultExtent": "{\"xmin\": -37462128.94764636, \"ymin\": -28285530.15549066, \"xmax\": 38681328.949165195, \"ymax\": 16261049.643896274}"
  },
  32134: {
    "label": "NAD 1983 StatePlane South Dakota North FIPS 4001",
    "defaultExtent": "{\"xmin\": -35846098.92496543, \"ymin\": -29933703.866771042, \"xmax\": 37046098.92490602, \"ymax\": 28645269.44168758}"
  },
  32135: {
    "label": "NAD 1983 StatePlane South Dakota South FIPS 4002",
    "defaultExtent": "{\"xmin\": -35980929.411304265, \"ymin\": -29734707.47249241, \"xmax\": 37180929.41117397, \"ymax\": 27393676.96179096}"
  },
  32136: {
    "label": "NAD 1983 StatePlane Tennessee FIPS 4100",
    "defaultExtent": "{\"xmin\": -37039650.6279049, \"ymin\": -28631019.31672457, \"xmax\": 38239650.62802555, \"ymax\": 18990861.045042165}"
  },
  32137: {
    "label": "NAD 1983 StatePlane Texas North FIPS 4201",
    "defaultExtent": "{\"xmin\": -37516299.8331, \"ymin\": -27580728.943599287, \"xmax\": 37916299.833128214, \"ymax\": 19461951.497943036}"
  },
  32138: {
    "label": "NAD 1983 StatePlane Texas North Central FIPS 4202",
    "defaultExtent": "{\"xmin\": -37614616.88807972, \"ymin\": -26250391.134317875, \"xmax\": 38814616.88802452, \"ymax\": 17395582.84290185}"
  },
  32139: {
    "label": "NAD 1983 StatePlane Texas Central FIPS 4203",
    "defaultExtent": "{\"xmin\": -38040663.03171102, \"ymin\": -24970101.92794974, \"xmax\": 39440663.03170802, \"ymax\": 15602650.666709403}"
  },
  32140: {
    "label": "NAD 1983 StatePlane Texas South Central FIPS 4204",
    "defaultExtent": "{\"xmin\": -38625948.2389665, \"ymin\": -23722141.01585047, \"xmax\": 39825948.2389665, \"ymax\": 15422945.822918478}"
  },
  32141: {
    "label": "NAD 1983 StatePlane Texas South FIPS 4205",
    "defaultExtent": "{\"xmin\": -39382898.13859524, \"ymin\": -22428383.748523414, \"xmax\": 39982898.13859524, \"ymax\": 17130472.597137526}"
  },
  32142: {
    "label": "NAD 1983 StatePlane Utah North FIPS 4301",
    "defaultExtent": "{\"xmin\": -36338834.42915058, \"ymin\": -28453982.376255378, \"xmax\": 37338834.521727204, \"ymax\": 26066690.159262396}"
  },
  32143: {
    "label": "NAD 1983 StatePlane Utah Central FIPS 4302",
    "defaultExtent": "{\"xmin\": -36514060.18168421, \"ymin\": -27191819.5738922, \"xmax\": 37514060.18232606, \"ymax\": 25642908.167597167}"
  },
  32144: {
    "label": "NAD 1983 StatePlane Utah South FIPS 4303",
    "defaultExtent": "{\"xmin\": -36809744.07562093, \"ymin\": -25948407.843968417, \"xmax\": 37809744.075334504, \"ymax\": 24295469.49478243}"
  },
  32145: {
    "label": "NAD 1983 StatePlane Vermont FIPS 4400",
    "defaultExtent": "{\"xmin\": -5122812.1510212775, \"ymin\": -14317294.386720052, \"xmax\": 6122812.151021276, \"ymax\": 4903278.713471021}"
  },
  32146: {
    "label": "NAD 1983 StatePlane Virginia North FIPS 4501",
    "defaultExtent": "{\"xmin\": -33684162.33987652, \"ymin\": -27083846.657879442, \"xmax\": 40684162.34077641, \"ymax\": 24234815.029329725}"
  },
  32147: {
    "label": "NAD 1983 StatePlane Virginia South FIPS 4502",
    "defaultExtent": "{\"xmin\": -33875616.80010519, \"ymin\": -27898914.99367497, \"xmax\": 40875616.80001254, \"ymax\": 21796916.219502896}"
  },
  32148: {
    "label": "NAD 1983 StatePlane Washington North FIPS 4601",
    "defaultExtent": "{\"xmin\": -35693390.40305884, \"ymin\": -30339611.799414955, \"xmax\": 36693390.40324891, \"ymax\": 31002022.19631627}"
  },
  32149: {
    "label": "NAD 1983 StatePlane Washington South FIPS 4602",
    "defaultExtent": "{\"xmin\": -35813457.80653769, \"ymin\": -30129505.531924177, \"xmax\": 36813457.80730579, \"ymax\": 29888507.91177208}"
  },
  32150: {
    "label": "NAD 1983 StatePlane West Virginia North FIPS 4701",
    "defaultExtent": "{\"xmin\": -36443027.89488857, \"ymin\": -29205240.099509504, \"xmax\": 37643027.8949125, \"ymax\": 23375051.76188209}"
  },
  32151: {
    "label": "NAD 1983 StatePlane West Virginia South FIPS 4702",
    "defaultExtent": "{\"xmin\": -36647651.619762786, \"ymin\": -28996711.06985563, \"xmax\": 37847651.61951533, \"ymax\": 21766153.09529358}"
  },
  32152: {
    "label": "NAD 1983 StatePlane Wisconsin North FIPS 4801",
    "defaultExtent": "{\"xmin\": -35748933.755770005, \"ymin\": -30104004.24499993, \"xmax\": 36948933.75551393, \"ymax\": 29535005.089385338}"
  },
  32153: {
    "label": "NAD 1983 StatePlane Wisconsin Central FIPS 4802",
    "defaultExtent": "{\"xmin\": -35862028.694118075, \"ymin\": -29930060.701200917, \"xmax\": 37062028.688673995, \"ymax\": 28477287.000578806}"
  },
  32154: {
    "label": "NAD 1983 StatePlane Wisconsin South FIPS 4803",
    "defaultExtent": "{\"xmin\": -36003344.686841294, \"ymin\": -29693054.532282908, \"xmax\": 37203344.68690827, \"ymax\": 27208063.07319163}"
  },
  32155: {
    "label": "NAD 1983 StatePlane Wyoming East FIPS 4901",
    "defaultExtent": "{\"xmin\": -5422661.534602354, \"ymin\": -14094797.558167633, \"xmax\": 5822661.534602358, \"ymax\": 5125260.686856288}"
  },
  32156: {
    "label": "NAD 1983 StatePlane Wyoming East Central FIPS 4902",
    "defaultExtent": "{\"xmin\": -5222661.53460236, \"ymin\": -13994797.558167633, \"xmax\": 6022661.534602358, \"ymax\": 5225260.686856289}"
  },
  32157: {
    "label": "NAD 1983 StatePlane Wyoming West Central FIPS 4903",
    "defaultExtent": "{\"xmin\": -5022661.534602358, \"ymin\": -14094797.558167633, \"xmax\": 6222661.534602358, \"ymax\": 5125260.686856289}"
  },
  32158: {
    "label": "NAD 1983 StatePlane Wyoming West FIPS 4904",
    "defaultExtent": "{\"xmin\": -4822661.534602356, \"ymin\": -13994797.558167633, \"xmax\": 6422661.534602358, \"ymax\": 5225260.686856289}"
  },
  32161: {
    "label": "NAD 1983 StatePlane Puerto Rico Virgin Islands FIPS 5200",
    "defaultExtent": "{\"xmin\": -38021748.15784241, \"ymin\": -26319807.671320274, \"xmax\": 38421748.157935165, \"ymax\": 15157853.89958689}"
  },
  32164: {
    "label": "NAD 1983 BLM Zone 14N ftUS",
    "defaultExtent": "{\"xmin\": -16800372.46127449, \"ymin\": -31518262.209277626, \"xmax\": 20081205.79460782, \"ymax\": 31518262.209277615}"
  },
  32165: {
    "label": "NAD 1983 BLM Zone 15N ftUS",
    "defaultExtent": "{\"xmin\": -16800372.461274482, \"ymin\": -31518262.209277626, \"xmax\": 20081205.79460782, \"ymax\": 31518262.209277615}"
  },
  32166: {
    "label": "NAD 1983 BLM Zone 16N ftUS",
    "defaultExtent": "{\"xmin\": -16800372.461274482, \"ymin\": -31518262.209277634, \"xmax\": 20081205.79460782, \"ymax\": 31518262.209277615}"
  },
  32167: {
    "label": "NAD 1983 BLM Zone 17N ftUS",
    "defaultExtent": "{\"xmin\": -16800372.46127449, \"ymin\": -31518262.209277626, \"xmax\": 20081205.79460782, \"ymax\": 31518262.209277615}"
  },
  32180: {
    "label": "NAD 1983 MTM 2 SCoPQ",
    "defaultExtent": "{\"xmin\": -5317650.671615875, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32181: {
    "label": "NAD 1983 MTM 1",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32182: {
    "label": "NAD 1983 MTM 2",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32183: {
    "label": "NAD 1983 MTM 3",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32184: {
    "label": "NAD 1983 MTM 4",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32185: {
    "label": "NAD 1983 MTM 5",
    "defaultExtent": "{\"xmin\": -5317650.671615875, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32186: {
    "label": "NAD 1983 MTM 6",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32187: {
    "label": "NAD 1983 MTM 7",
    "defaultExtent": "{\"xmin\": -5317650.671615872, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32188: {
    "label": "NAD 1983 MTM 8",
    "defaultExtent": "{\"xmin\": -5317650.671615875, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32189: {
    "label": "NAD 1983 MTM 9",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32190: {
    "label": "NAD 1983 MTM 10",
    "defaultExtent": "{\"xmin\": -5317650.671615872, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615875, \"ymax\": 9609668.72389495}"
  },
  32191: {
    "label": "NAD 1983 MTM 11",
    "defaultExtent": "{\"xmin\": -5317650.671615875, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32192: {
    "label": "NAD 1983 MTM 12",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32193: {
    "label": "NAD 1983 MTM 13",
    "defaultExtent": "{\"xmin\": -5317650.671615872, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615875, \"ymax\": 9609668.72389495}"
  },
  32194: {
    "label": "NAD 1983 MTM 14",
    "defaultExtent": "{\"xmin\": -5317650.671615872, \"ymin\": -9609668.723894956, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32195: {
    "label": "NAD 1983 MTM 15",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32196: {
    "label": "NAD 1983 MTM 16",
    "defaultExtent": "{\"xmin\": -5317650.671615872, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32197: {
    "label": "NAD 1983 MTM 17",
    "defaultExtent": "{\"xmin\": -5317650.671615874, \"ymin\": -9609668.723894954, \"xmax\": 5927250.671615874, \"ymax\": 9609668.72389495}"
  },
  32198: {
    "label": "NAD 1983 Quebec Lambert",
    "defaultExtent": "{\"xmin\": -35682354.79077794, \"ymin\": -29917365.243313543, \"xmax\": 35683398.59813096, \"ymax\": 34678404.71962829}"
  },
  32199: {
    "label": "NAD 1983 StatePlane Louisiana Offshore FIPS 1703",
    "defaultExtent": "{\"xmin\": -38682898.13857999, \"ymin\": -27409916.477594156, \"xmax\": 40682898.1386105, \"ymax\": 12148939.867896445}"
  },
  32201: {
    "label": "WGS 1972 UTM Zone 1N",
    "defaultExtent": "{\"xmin\": -5120761.958538079, \"ymin\": -9606782.69092524, \"xmax\": 6120761.958538111, \"ymax\": 9606782.690925248}"
  },
  32202: {
    "label": "WGS 1972 UTM Zone 2N",
    "defaultExtent": "{\"xmin\": -5120761.958538079, \"ymin\": -9606782.69092524, \"xmax\": 6120761.958538111, \"ymax\": 9606782.690925248}"
  },
  32203: {
    "label": "WGS 1972 UTM Zone 3N",
    "defaultExtent": "{\"xmin\": -5120761.958538087, \"ymin\": -9606782.69092524, \"xmax\": 6120761.958538111, \"ymax\": 9606782.690925248}"
  },
  32204: {
    "label": "WGS 1972 UTM Zone 4N",
    "defaultExtent": "{\"xmin\": -5120761.958538079, \"ymin\": -9606782.69092524, \"xmax\": 6120761.958538113, \"ymax\": 9606782.690925248}"
  },
  32205: {
    "label": "WGS 1972 UTM Zone 5N",
    "defaultExtent": "{\"xmin\": -5120761.958538079, \"ymin\": -9606782.69092524, \"xmax\": 6120761.958538111, \"ymax\": 9606782.690925248}"
  },
  32206: {
    "label": "WGS 1972 UTM Zone 6N",
    "defaultExtent": "{\"xmin\": -5120761.958538087, \"ymin\": -9606782.69092524, \"xmax\": 6120761.958538111, \"ymax\": 9606782.690925248}"
  },
  32207: {
    "label": "WGS 1972 UTM Zone 7N",
    "defaultExtent": "{\"xmin\": -5120761.958538079, \"ymin\": -9606782.69092524, \"xmax\": 6120761.958538113, \"ymax\": 9606782.690925248}"
  },
  32208: {
    "label": "WGS 1972 UTM Zone 8N",
    "defaultExtent": "{\"xmin\": -5120760.159136499, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32209: {
    "label": "WGS 1972 UTM Zone 9N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32210: {
    "label": "WGS 1972 UTM Zone 10N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538105, \"ymax\": 9606782.690946037}"
  },
  32211: {
    "label": "WGS 1972 UTM Zone 11N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32212: {
    "label": "WGS 1972 UTM Zone 12N",
    "defaultExtent": "{\"xmin\": -5120761.958538101, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32213: {
    "label": "WGS 1972 UTM Zone 13N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32214: {
    "label": "WGS 1972 UTM Zone 14N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32215: {
    "label": "WGS 1972 UTM Zone 15N",
    "defaultExtent": "{\"xmin\": -5120761.958538101, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32216: {
    "label": "WGS 1972 UTM Zone 16N",
    "defaultExtent": "{\"xmin\": -5120761.958538101, \"ymin\": -9606782.690946044, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32217: {
    "label": "WGS 1972 UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32218: {
    "label": "WGS 1972 UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120761.958538105, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32219: {
    "label": "WGS 1972 UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120761.958538105, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32220: {
    "label": "WGS 1972 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32221: {
    "label": "WGS 1972 UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32222: {
    "label": "WGS 1972 UTM Zone 22N",
    "defaultExtent": "{\"xmin\": -5120761.958538104, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32223: {
    "label": "WGS 1972 UTM Zone 23N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32224: {
    "label": "WGS 1972 UTM Zone 24N",
    "defaultExtent": "{\"xmin\": -5120761.958538102, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32225: {
    "label": "WGS 1972 UTM Zone 25N",
    "defaultExtent": "{\"xmin\": -5120761.958538102, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32226: {
    "label": "WGS 1972 UTM Zone 26N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32227: {
    "label": "WGS 1972 UTM Zone 27N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32228: {
    "label": "WGS 1972 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32229: {
    "label": "WGS 1972 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32230: {
    "label": "WGS 1972 UTM Zone 30N",
    "defaultExtent": "{\"xmin\": -5120761.958538104, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32231: {
    "label": "WGS 1972 UTM Zone 31N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538104, \"ymax\": 9606782.690946037}"
  },
  32232: {
    "label": "WGS 1972 UTM Zone 32N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32233: {
    "label": "WGS 1972 UTM Zone 33N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32234: {
    "label": "WGS 1972 UTM Zone 34N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32235: {
    "label": "WGS 1972 UTM Zone 35N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32236: {
    "label": "WGS 1972 UTM Zone 36N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538102, \"ymax\": 9606782.690946037}"
  },
  32237: {
    "label": "WGS 1972 UTM Zone 37N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538102, \"ymax\": 9606782.690946037}"
  },
  32238: {
    "label": "WGS 1972 UTM Zone 38N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32239: {
    "label": "WGS 1972 UTM Zone 39N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538104, \"ymax\": 9606782.690946037}"
  },
  32240: {
    "label": "WGS 1972 UTM Zone 40N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32241: {
    "label": "WGS 1972 UTM Zone 41N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32242: {
    "label": "WGS 1972 UTM Zone 42N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538105, \"ymax\": 9606782.690946037}"
  },
  32243: {
    "label": "WGS 1972 UTM Zone 43N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538105, \"ymax\": 9606782.690946037}"
  },
  32244: {
    "label": "WGS 1972 UTM Zone 44N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32245: {
    "label": "WGS 1972 UTM Zone 45N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946044, \"xmax\": 6120761.958538101, \"ymax\": 9606782.690946037}"
  },
  32246: {
    "label": "WGS 1972 UTM Zone 46N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538101, \"ymax\": 9606782.690946037}"
  },
  32247: {
    "label": "WGS 1972 UTM Zone 47N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32248: {
    "label": "WGS 1972 UTM Zone 48N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32249: {
    "label": "WGS 1972 UTM Zone 49N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538101, \"ymax\": 9606782.690946037}"
  },
  32250: {
    "label": "WGS 1972 UTM Zone 50N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32251: {
    "label": "WGS 1972 UTM Zone 51N",
    "defaultExtent": "{\"xmin\": -5120761.958538105, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32252: {
    "label": "WGS 1972 UTM Zone 52N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.690946043, \"xmax\": 6120761.958538103, \"ymax\": 9606782.690946037}"
  },
  32253: {
    "label": "WGS 1972 UTM Zone 53N",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": -9606782.69094604, \"xmax\": 6120760.159136499, \"ymax\": 9606782.690946037}"
  },
  32254: {
    "label": "WGS 1972 UTM Zone 54N",
    "defaultExtent": "{\"xmin\": -5120761.958538095, \"ymin\": -9606782.69092524, \"xmax\": 6120761.958538111, \"ymax\": 9606782.690925248}"
  },
  32255: {
    "label": "WGS 1972 UTM Zone 55N",
    "defaultExtent": "{\"xmin\": -5120761.958538093, \"ymin\": -9606782.69092524, \"xmax\": 6120761.958538111, \"ymax\": 9606782.690925248}"
  },
  32256: {
    "label": "WGS 1972 UTM Zone 56N",
    "defaultExtent": "{\"xmin\": -5120761.958538093, \"ymin\": -9606782.69092524, \"xmax\": 6120761.958538111, \"ymax\": 9606782.690925248}"
  },
  32257: {
    "label": "WGS 1972 UTM Zone 57N",
    "defaultExtent": "{\"xmin\": -5120761.958538087, \"ymin\": -9606782.69092524, \"xmax\": 6120761.958538111, \"ymax\": 9606782.690925248}"
  },
  32258: {
    "label": "WGS 1972 UTM Zone 58N",
    "defaultExtent": "{\"xmin\": -5120761.958538083, \"ymin\": -9606782.69092524, \"xmax\": 6120761.958538111, \"ymax\": 9606782.690925248}"
  },
  32259: {
    "label": "WGS 1972 UTM Zone 59N",
    "defaultExtent": "{\"xmin\": -5120761.958538083, \"ymin\": -9606782.69092524, \"xmax\": 6120761.958538111, \"ymax\": 9606782.690925248}"
  },
  32260: {
    "label": "WGS 1972 UTM Zone 60N",
    "defaultExtent": "{\"xmin\": -5120761.958538087, \"ymin\": -9606782.69092524, \"xmax\": 6120761.958538111, \"ymax\": 9606782.690925248}"
  },
  32301: {
    "label": "WGS 1972 UTM Zone 1S",
    "defaultExtent": "{\"xmin\": -5120761.958538079, \"ymin\": 393217.3090747595, \"xmax\": 6120761.958538111, \"ymax\": 19606782.690925248}"
  },
  32302: {
    "label": "WGS 1972 UTM Zone 2S",
    "defaultExtent": "{\"xmin\": -5120761.958538079, \"ymin\": 393217.3090747595, \"xmax\": 6120761.958538111, \"ymax\": 19606782.690925248}"
  },
  32303: {
    "label": "WGS 1972 UTM Zone 3S",
    "defaultExtent": "{\"xmin\": -5120761.958538087, \"ymin\": 393217.3090747595, \"xmax\": 6120761.958538111, \"ymax\": 19606782.690925248}"
  },
  32304: {
    "label": "WGS 1972 UTM Zone 4S",
    "defaultExtent": "{\"xmin\": -5120761.958538079, \"ymin\": 393217.3090747595, \"xmax\": 6120761.958538113, \"ymax\": 19606782.690925248}"
  },
  32305: {
    "label": "WGS 1972 UTM Zone 5S",
    "defaultExtent": "{\"xmin\": -5120761.958538079, \"ymin\": 393217.3090747595, \"xmax\": 6120761.958538111, \"ymax\": 19606782.690925248}"
  },
  32306: {
    "label": "WGS 1972 UTM Zone 6S",
    "defaultExtent": "{\"xmin\": -5120761.958538087, \"ymin\": 393217.3090747595, \"xmax\": 6120761.958538111, \"ymax\": 19606782.690925248}"
  },
  32307: {
    "label": "WGS 1972 UTM Zone 7S",
    "defaultExtent": "{\"xmin\": -5120761.958538079, \"ymin\": 393217.3090747595, \"xmax\": 6120761.958538113, \"ymax\": 19606782.690925248}"
  },
  32308: {
    "label": "WGS 1972 UTM Zone 8S",
    "defaultExtent": "{\"xmin\": -5120760.159136499, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32309: {
    "label": "WGS 1972 UTM Zone 9S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32310: {
    "label": "WGS 1972 UTM Zone 10S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538105, \"ymax\": 19606782.690946035}"
  },
  32311: {
    "label": "WGS 1972 UTM Zone 11S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32312: {
    "label": "WGS 1972 UTM Zone 12S",
    "defaultExtent": "{\"xmin\": -5120761.958538101, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32313: {
    "label": "WGS 1972 UTM Zone 13S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32314: {
    "label": "WGS 1972 UTM Zone 14S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32315: {
    "label": "WGS 1972 UTM Zone 15S",
    "defaultExtent": "{\"xmin\": -5120761.958538101, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32316: {
    "label": "WGS 1972 UTM Zone 16S",
    "defaultExtent": "{\"xmin\": -5120761.958538101, \"ymin\": 393217.3090539556, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32317: {
    "label": "WGS 1972 UTM Zone 17S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32318: {
    "label": "WGS 1972 UTM Zone 18S",
    "defaultExtent": "{\"xmin\": -5120761.958538105, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32319: {
    "label": "WGS 1972 UTM Zone 19S",
    "defaultExtent": "{\"xmin\": -5120761.958538105, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32320: {
    "label": "WGS 1972 UTM Zone 20S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32321: {
    "label": "WGS 1972 UTM Zone 21S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32322: {
    "label": "WGS 1972 UTM Zone 22S",
    "defaultExtent": "{\"xmin\": -5120761.958538104, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32323: {
    "label": "WGS 1972 UTM Zone 23S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32324: {
    "label": "WGS 1972 UTM Zone 24S",
    "defaultExtent": "{\"xmin\": -5120761.958538102, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32325: {
    "label": "WGS 1972 UTM Zone 25S",
    "defaultExtent": "{\"xmin\": -5120761.958538102, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32326: {
    "label": "WGS 1972 UTM Zone 26S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32327: {
    "label": "WGS 1972 UTM Zone 27S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32328: {
    "label": "WGS 1972 UTM Zone 28S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32329: {
    "label": "WGS 1972 UTM Zone 29S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32330: {
    "label": "WGS 1972 UTM Zone 30S",
    "defaultExtent": "{\"xmin\": -5120761.958538104, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32331: {
    "label": "WGS 1972 UTM Zone 31S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538104, \"ymax\": 19606782.690946035}"
  },
  32332: {
    "label": "WGS 1972 UTM Zone 32S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32333: {
    "label": "WGS 1972 UTM Zone 33S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32334: {
    "label": "WGS 1972 UTM Zone 34S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32335: {
    "label": "WGS 1972 UTM Zone 35S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32336: {
    "label": "WGS 1972 UTM Zone 36S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538102, \"ymax\": 19606782.690946035}"
  },
  32337: {
    "label": "WGS 1972 UTM Zone 37S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538102, \"ymax\": 19606782.690946035}"
  },
  32338: {
    "label": "WGS 1972 UTM Zone 38S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32339: {
    "label": "WGS 1972 UTM Zone 39S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538104, \"ymax\": 19606782.690946035}"
  },
  32340: {
    "label": "WGS 1972 UTM Zone 40S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32341: {
    "label": "WGS 1972 UTM Zone 41S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32342: {
    "label": "WGS 1972 UTM Zone 42S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538105, \"ymax\": 19606782.690946035}"
  },
  32343: {
    "label": "WGS 1972 UTM Zone 43S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538105, \"ymax\": 19606782.690946035}"
  },
  32344: {
    "label": "WGS 1972 UTM Zone 44S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32345: {
    "label": "WGS 1972 UTM Zone 45S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.3090539556, \"xmax\": 6120761.958538101, \"ymax\": 19606782.690946035}"
  },
  32346: {
    "label": "WGS 1972 UTM Zone 46S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538101, \"ymax\": 19606782.690946035}"
  },
  32347: {
    "label": "WGS 1972 UTM Zone 47S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32348: {
    "label": "WGS 1972 UTM Zone 48S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32349: {
    "label": "WGS 1972 UTM Zone 49S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538101, \"ymax\": 19606782.690946035}"
  },
  32350: {
    "label": "WGS 1972 UTM Zone 50S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32351: {
    "label": "WGS 1972 UTM Zone 51S",
    "defaultExtent": "{\"xmin\": -5120761.958538105, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32352: {
    "label": "WGS 1972 UTM Zone 52S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.30905395746, \"xmax\": 6120761.958538103, \"ymax\": 19606782.690946035}"
  },
  32353: {
    "label": "WGS 1972 UTM Zone 53S",
    "defaultExtent": "{\"xmin\": -5120761.958538103, \"ymin\": 393217.3090539593, \"xmax\": 6120760.159136499, \"ymax\": 19606782.690946035}"
  },
  32354: {
    "label": "WGS 1972 UTM Zone 54S",
    "defaultExtent": "{\"xmin\": -5120761.958538095, \"ymin\": 393217.3090747595, \"xmax\": 6120761.958538111, \"ymax\": 19606782.690925248}"
  },
  32355: {
    "label": "WGS 1972 UTM Zone 55S",
    "defaultExtent": "{\"xmin\": -5120761.958538093, \"ymin\": 393217.3090747595, \"xmax\": 6120761.958538111, \"ymax\": 19606782.690925248}"
  },
  32356: {
    "label": "WGS 1972 UTM Zone 56S",
    "defaultExtent": "{\"xmin\": -5120761.958538093, \"ymin\": 393217.3090747595, \"xmax\": 6120761.958538111, \"ymax\": 19606782.690925248}"
  },
  32357: {
    "label": "WGS 1972 UTM Zone 57S",
    "defaultExtent": "{\"xmin\": -5120761.958538087, \"ymin\": 393217.3090747595, \"xmax\": 6120761.958538111, \"ymax\": 19606782.690925248}"
  },
  32358: {
    "label": "WGS 1972 UTM Zone 58S",
    "defaultExtent": "{\"xmin\": -5120761.958538083, \"ymin\": 393217.3090747595, \"xmax\": 6120761.958538111, \"ymax\": 19606782.690925248}"
  },
  32359: {
    "label": "WGS 1972 UTM Zone 59S",
    "defaultExtent": "{\"xmin\": -5120761.958538083, \"ymin\": 393217.3090747595, \"xmax\": 6120761.958538111, \"ymax\": 19606782.690925248}"
  },
  32360: {
    "label": "WGS 1972 UTM Zone 60S",
    "defaultExtent": "{\"xmin\": -5120761.958538087, \"ymin\": 393217.3090747595, \"xmax\": 6120761.958538111, \"ymax\": 19606782.690925248}"
  },
  32601: {
    "label": "WGS 1984 UTM Zone 1N",
    "defaultExtent": "{\"xmin\": -5120763.76769941, \"ymin\": -9606785.535026718, \"xmax\": 6120763.767699442, \"ymax\": 9606785.535026727}"
  },
  32602: {
    "label": "WGS 1984 UTM Zone 2N",
    "defaultExtent": "{\"xmin\": -5120763.76769941, \"ymin\": -9606785.535026718, \"xmax\": 6120763.767699442, \"ymax\": 9606785.535026727}"
  },
  32603: {
    "label": "WGS 1984 UTM Zone 3N",
    "defaultExtent": "{\"xmin\": -5120763.767699419, \"ymin\": -9606785.535026718, \"xmax\": 6120763.767699442, \"ymax\": 9606785.535026727}"
  },
  32604: {
    "label": "WGS 1984 UTM Zone 4N",
    "defaultExtent": "{\"xmin\": -5120763.76769941, \"ymin\": -9606785.535026718, \"xmax\": 6120763.767699445, \"ymax\": 9606785.535026727}"
  },
  32605: {
    "label": "WGS 1984 UTM Zone 5N",
    "defaultExtent": "{\"xmin\": -5120763.76769941, \"ymin\": -9606785.535026718, \"xmax\": 6120763.767699442, \"ymax\": 9606785.535026727}"
  },
  32606: {
    "label": "WGS 1984 UTM Zone 6N",
    "defaultExtent": "{\"xmin\": -5120763.767699419, \"ymin\": -9606785.535026718, \"xmax\": 6120763.767699442, \"ymax\": 9606785.535026727}"
  },
  32607: {
    "label": "WGS 1984 UTM Zone 7N",
    "defaultExtent": "{\"xmin\": -5120763.76769941, \"ymin\": -9606785.535026718, \"xmax\": 6120763.767699445, \"ymax\": 9606785.535026727}"
  },
  32608: {
    "label": "WGS 1984 UTM Zone 8N",
    "defaultExtent": "{\"xmin\": -5120761.968297224, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32609: {
    "label": "WGS 1984 UTM Zone 9N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32610: {
    "label": "WGS 1984 UTM Zone 10N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699436, \"ymax\": 9606785.535047516}"
  },
  32611: {
    "label": "WGS 1984 UTM Zone 11N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32612: {
    "label": "WGS 1984 UTM Zone 12N",
    "defaultExtent": "{\"xmin\": -5120763.767699433, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32613: {
    "label": "WGS 1984 UTM Zone 13N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32614: {
    "label": "WGS 1984 UTM Zone 14N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32615: {
    "label": "WGS 1984 UTM Zone 15N",
    "defaultExtent": "{\"xmin\": -5120763.767699433, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32616: {
    "label": "WGS 1984 UTM Zone 16N",
    "defaultExtent": "{\"xmin\": -5120763.767699433, \"ymin\": -9606785.535047526, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32617: {
    "label": "WGS 1984 UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32618: {
    "label": "WGS 1984 UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120763.767699436, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32619: {
    "label": "WGS 1984 UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120763.767699436, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32620: {
    "label": "WGS 1984 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32621: {
    "label": "WGS 1984 UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32622: {
    "label": "WGS 1984 UTM Zone 22N",
    "defaultExtent": "{\"xmin\": -5120763.767699435, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32623: {
    "label": "WGS 1984 UTM Zone 23N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32624: {
    "label": "WGS 1984 UTM Zone 24N",
    "defaultExtent": "{\"xmin\": -5120763.7676994335, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32625: {
    "label": "WGS 1984 UTM Zone 25N",
    "defaultExtent": "{\"xmin\": -5120763.7676994335, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32626: {
    "label": "WGS 1984 UTM Zone 26N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32627: {
    "label": "WGS 1984 UTM Zone 27N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32628: {
    "label": "WGS 1984 UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32629: {
    "label": "WGS 1984 UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32630: {
    "label": "WGS 1984 UTM Zone 30N",
    "defaultExtent": "{\"xmin\": -5120763.767699435, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32631: {
    "label": "WGS 1984 UTM Zone 31N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699435, \"ymax\": 9606785.535047516}"
  },
  32632: {
    "label": "WGS 1984 UTM Zone 32N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32633: {
    "label": "WGS 1984 UTM Zone 33N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32634: {
    "label": "WGS 1984 UTM Zone 34N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32635: {
    "label": "WGS 1984 UTM Zone 35N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32636: {
    "label": "WGS 1984 UTM Zone 36N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.7676994335, \"ymax\": 9606785.535047516}"
  },
  32637: {
    "label": "WGS 1984 UTM Zone 37N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.7676994335, \"ymax\": 9606785.535047516}"
  },
  32638: {
    "label": "WGS 1984 UTM Zone 38N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32639: {
    "label": "WGS 1984 UTM Zone 39N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699435, \"ymax\": 9606785.535047516}"
  },
  32640: {
    "label": "WGS 1984 UTM Zone 40N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32641: {
    "label": "WGS 1984 UTM Zone 41N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32642: {
    "label": "WGS 1984 UTM Zone 42N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699436, \"ymax\": 9606785.535047516}"
  },
  32643: {
    "label": "WGS 1984 UTM Zone 43N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699436, \"ymax\": 9606785.535047516}"
  },
  32644: {
    "label": "WGS 1984 UTM Zone 44N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32645: {
    "label": "WGS 1984 UTM Zone 45N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047526, \"xmax\": 6120763.767699433, \"ymax\": 9606785.535047516}"
  },
  32646: {
    "label": "WGS 1984 UTM Zone 46N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699433, \"ymax\": 9606785.535047516}"
  },
  32647: {
    "label": "WGS 1984 UTM Zone 47N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32648: {
    "label": "WGS 1984 UTM Zone 48N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32649: {
    "label": "WGS 1984 UTM Zone 49N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699433, \"ymax\": 9606785.535047516}"
  },
  32650: {
    "label": "WGS 1984 UTM Zone 50N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32651: {
    "label": "WGS 1984 UTM Zone 51N",
    "defaultExtent": "{\"xmin\": -5120763.767699436, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32652: {
    "label": "WGS 1984 UTM Zone 52N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699434, \"ymax\": 9606785.535047516}"
  },
  32653: {
    "label": "WGS 1984 UTM Zone 53N",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": -9606785.53504752, \"xmax\": 6120761.968297224, \"ymax\": 9606785.535047516}"
  },
  32654: {
    "label": "WGS 1984 UTM Zone 54N",
    "defaultExtent": "{\"xmin\": -5120763.767699427, \"ymin\": -9606785.535026718, \"xmax\": 6120763.767699442, \"ymax\": 9606785.535026727}"
  },
  32655: {
    "label": "WGS 1984 UTM Zone 55N",
    "defaultExtent": "{\"xmin\": -5120763.767699424, \"ymin\": -9606785.535026718, \"xmax\": 6120763.767699442, \"ymax\": 9606785.535026727}"
  },
  32656: {
    "label": "WGS 1984 UTM Zone 56N",
    "defaultExtent": "{\"xmin\": -5120763.767699424, \"ymin\": -9606785.535026718, \"xmax\": 6120763.767699442, \"ymax\": 9606785.535026727}"
  },
  32657: {
    "label": "WGS 1984 UTM Zone 57N",
    "defaultExtent": "{\"xmin\": -5120763.767699419, \"ymin\": -9606785.535026718, \"xmax\": 6120763.767699442, \"ymax\": 9606785.535026727}"
  },
  32658: {
    "label": "WGS 1984 UTM Zone 58N",
    "defaultExtent": "{\"xmin\": -5120763.767699414, \"ymin\": -9606785.535026718, \"xmax\": 6120763.767699442, \"ymax\": 9606785.535026727}"
  },
  32659: {
    "label": "WGS 1984 UTM Zone 59N",
    "defaultExtent": "{\"xmin\": -5120763.767699414, \"ymin\": -9606785.535026718, \"xmax\": 6120763.767699442, \"ymax\": 9606785.535026727}"
  },
  32660: {
    "label": "WGS 1984 UTM Zone 60N",
    "defaultExtent": "{\"xmin\": -5120763.767699419, \"ymin\": -9606785.535026718, \"xmax\": 6120763.767699442, \"ymax\": 9606785.535026727}"
  },
  32661: {
    "label": "UPS North",
    "defaultExtent": "{\"xmin\": -28567784.109254938, \"ymin\": -28567784.109255087, \"xmax\": 32567784.109254938, \"ymax\": 32567784.109254476}"
  },
  32662: {
    "label": "WGS 1984 Plate Carree",
    "defaultExtent": "{\"xmin\": -20037507.0671618, \"ymin\": -9467848.237116976, \"xmax\": 20037507.0671618, \"ymax\": 9467848.237116976}"
  },
  32664: {
    "label": "WGS 1984 BLM Zone 14N ftUS",
    "defaultExtent": "{\"xmin\": -16800372.461193893, \"ymin\": -31518262.209568407, \"xmax\": 20081205.794527225, \"ymax\": 31518262.20956839}"
  },
  32665: {
    "label": "WGS 1984 BLM Zone 15N ftUS",
    "defaultExtent": "{\"xmin\": -16800372.461193886, \"ymin\": -31518262.209568407, \"xmax\": 20081205.794527225, \"ymax\": 31518262.20956839}"
  },
  32666: {
    "label": "WGS 1984 BLM Zone 16N ftUS",
    "defaultExtent": "{\"xmin\": -16800372.461193886, \"ymin\": -31518262.20956842, \"xmax\": 20081205.794527225, \"ymax\": 31518262.20956839}"
  },
  32667: {
    "label": "WGS 1984 BLM Zone 17N ftUS",
    "defaultExtent": "{\"xmin\": -16800372.461193893, \"ymin\": -31518262.209568407, \"xmax\": 20081205.794527225, \"ymax\": 31518262.20956839}"
  },
  32701: {
    "label": "WGS 1984 UTM Zone 1S",
    "defaultExtent": "{\"xmin\": -5120763.76769941, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699442, \"ymax\": 19606785.53502673}"
  },
  32702: {
    "label": "WGS 1984 UTM Zone 2S",
    "defaultExtent": "{\"xmin\": -5120763.76769941, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699442, \"ymax\": 19606785.53502673}"
  },
  32703: {
    "label": "WGS 1984 UTM Zone 3S",
    "defaultExtent": "{\"xmin\": -5120763.767699419, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699442, \"ymax\": 19606785.53502673}"
  },
  32704: {
    "label": "WGS 1984 UTM Zone 4S",
    "defaultExtent": "{\"xmin\": -5120763.76769941, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699445, \"ymax\": 19606785.53502673}"
  },
  32705: {
    "label": "WGS 1984 UTM Zone 5S",
    "defaultExtent": "{\"xmin\": -5120763.76769941, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699442, \"ymax\": 19606785.53502673}"
  },
  32706: {
    "label": "WGS 1984 UTM Zone 6S",
    "defaultExtent": "{\"xmin\": -5120763.767699419, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699442, \"ymax\": 19606785.53502673}"
  },
  32707: {
    "label": "WGS 1984 UTM Zone 7S",
    "defaultExtent": "{\"xmin\": -5120763.76769941, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699445, \"ymax\": 19606785.53502673}"
  },
  32708: {
    "label": "WGS 1984 UTM Zone 8S",
    "defaultExtent": "{\"xmin\": -5120761.968297224, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32709: {
    "label": "WGS 1984 UTM Zone 9S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32710: {
    "label": "WGS 1984 UTM Zone 10S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699436, \"ymax\": 19606785.535047516}"
  },
  32711: {
    "label": "WGS 1984 UTM Zone 11S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32712: {
    "label": "WGS 1984 UTM Zone 12S",
    "defaultExtent": "{\"xmin\": -5120763.767699433, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32713: {
    "label": "WGS 1984 UTM Zone 13S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32714: {
    "label": "WGS 1984 UTM Zone 14S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32715: {
    "label": "WGS 1984 UTM Zone 15S",
    "defaultExtent": "{\"xmin\": -5120763.767699433, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32716: {
    "label": "WGS 1984 UTM Zone 16S",
    "defaultExtent": "{\"xmin\": -5120763.767699433, \"ymin\": 393214.46495247446, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32717: {
    "label": "WGS 1984 UTM Zone 17S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32718: {
    "label": "WGS 1984 UTM Zone 18S",
    "defaultExtent": "{\"xmin\": -5120763.767699436, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32719: {
    "label": "WGS 1984 UTM Zone 19S",
    "defaultExtent": "{\"xmin\": -5120763.767699436, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32720: {
    "label": "WGS 1984 UTM Zone 20S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32721: {
    "label": "WGS 1984 UTM Zone 21S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32722: {
    "label": "WGS 1984 UTM Zone 22S",
    "defaultExtent": "{\"xmin\": -5120763.767699435, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32723: {
    "label": "WGS 1984 UTM Zone 23S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32724: {
    "label": "WGS 1984 UTM Zone 24S",
    "defaultExtent": "{\"xmin\": -5120763.7676994335, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32725: {
    "label": "WGS 1984 UTM Zone 25S",
    "defaultExtent": "{\"xmin\": -5120763.7676994335, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32726: {
    "label": "WGS 1984 UTM Zone 26S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32727: {
    "label": "WGS 1984 UTM Zone 27S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32728: {
    "label": "WGS 1984 UTM Zone 28S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32729: {
    "label": "WGS 1984 UTM Zone 29S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32730: {
    "label": "WGS 1984 UTM Zone 30S",
    "defaultExtent": "{\"xmin\": -5120763.767699435, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32731: {
    "label": "WGS 1984 UTM Zone 31S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699435, \"ymax\": 19606785.535047516}"
  },
  32732: {
    "label": "WGS 1984 UTM Zone 32S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32733: {
    "label": "WGS 1984 UTM Zone 33S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32734: {
    "label": "WGS 1984 UTM Zone 34S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32735: {
    "label": "WGS 1984 UTM Zone 35S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32736: {
    "label": "WGS 1984 UTM Zone 36S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.7676994335, \"ymax\": 19606785.535047516}"
  },
  32737: {
    "label": "WGS 1984 UTM Zone 37S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.7676994335, \"ymax\": 19606785.535047516}"
  },
  32738: {
    "label": "WGS 1984 UTM Zone 38S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32739: {
    "label": "WGS 1984 UTM Zone 39S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699435, \"ymax\": 19606785.535047516}"
  },
  32740: {
    "label": "WGS 1984 UTM Zone 40S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32741: {
    "label": "WGS 1984 UTM Zone 41S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32742: {
    "label": "WGS 1984 UTM Zone 42S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699436, \"ymax\": 19606785.535047516}"
  },
  32743: {
    "label": "WGS 1984 UTM Zone 43S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699436, \"ymax\": 19606785.535047516}"
  },
  32744: {
    "label": "WGS 1984 UTM Zone 44S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32745: {
    "label": "WGS 1984 UTM Zone 45S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.46495247446, \"xmax\": 6120763.767699433, \"ymax\": 19606785.535047516}"
  },
  32746: {
    "label": "WGS 1984 UTM Zone 46S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699433, \"ymax\": 19606785.535047516}"
  },
  32747: {
    "label": "WGS 1984 UTM Zone 47S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32748: {
    "label": "WGS 1984 UTM Zone 48S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32749: {
    "label": "WGS 1984 UTM Zone 49S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699433, \"ymax\": 19606785.535047516}"
  },
  32750: {
    "label": "WGS 1984 UTM Zone 50S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32751: {
    "label": "WGS 1984 UTM Zone 51S",
    "defaultExtent": "{\"xmin\": -5120763.767699436, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32752: {
    "label": "WGS 1984 UTM Zone 52S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  32753: {
    "label": "WGS 1984 UTM Zone 53S",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.46495248005, \"xmax\": 6120761.968297224, \"ymax\": 19606785.535047516}"
  },
  32754: {
    "label": "WGS 1984 UTM Zone 54S",
    "defaultExtent": "{\"xmin\": -5120763.767699427, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699442, \"ymax\": 19606785.53502673}"
  },
  32755: {
    "label": "WGS 1984 UTM Zone 55S",
    "defaultExtent": "{\"xmin\": -5120763.767699424, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699442, \"ymax\": 19606785.53502673}"
  },
  32756: {
    "label": "WGS 1984 UTM Zone 56S",
    "defaultExtent": "{\"xmin\": -5120763.767699424, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699442, \"ymax\": 19606785.53502673}"
  },
  32757: {
    "label": "WGS 1984 UTM Zone 57S",
    "defaultExtent": "{\"xmin\": -5120763.767699419, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699442, \"ymax\": 19606785.53502673}"
  },
  32758: {
    "label": "WGS 1984 UTM Zone 58S",
    "defaultExtent": "{\"xmin\": -5120763.767699414, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699442, \"ymax\": 19606785.53502673}"
  },
  32759: {
    "label": "WGS 1984 UTM Zone 59S",
    "defaultExtent": "{\"xmin\": -5120763.767699414, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699442, \"ymax\": 19606785.53502673}"
  },
  32760: {
    "label": "WGS 1984 UTM Zone 60S",
    "defaultExtent": "{\"xmin\": -5120763.767699419, \"ymin\": 393214.46497328207, \"xmax\": 6120763.767699442, \"ymax\": 19606785.53502673}"
  },
  32761: {
    "label": "UPS South",
    "defaultExtent": "{\"xmin\": -28567784.109254938, \"ymin\": -28567784.109254476, \"xmax\": 32567784.109254938, \"ymax\": 32567784.109255087}"
  },
  32766: {
    "label": "WGS 1984 TM 36 SE",
    "defaultExtent": "{\"xmin\": -5120763.767699434, \"ymin\": 393214.4649524782, \"xmax\": 6120763.767699434, \"ymax\": 19606785.535047516}"
  },
  37002: {
    "label": "GCS Fischer 1960",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37003: {
    "label": "GCS Fischer 1968",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37004: {
    "label": "GCS Fischer Modified",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37005: {
    "label": "GCS Hough 1960",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37006: {
    "label": "GCS Everest Modified 1969",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37007: {
    "label": "GCS Walbeck",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37008: {
    "label": "GCS Sphere ARC INFO",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37202: {
    "label": "GCS Everest Bangladesh",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37203: {
    "label": "GCS Everest India Nepal",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37206: {
    "label": "GCS Oman",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37207: {
    "label": "GCS South Asia Singapore",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37218: {
    "label": "GCS DOS 1968",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37221: {
    "label": "GCS GUX 1",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37225: {
    "label": "GCS Carthage Grad",
    "defaultExtent": "{\"xmin\": -199.99998726760407, \"ymin\": -94.50125310140274, \"xmax\": 199.99998726760407, \"ymax\": 94.50125310140272}"
  },
  37240: {
    "label": "GCS Fort Thomas 1955",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37241: {
    "label": "GCS Graciosa Base SW 1948",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37243: {
    "label": "GCS LC5 1961",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37245: {
    "label": "GCS Observatorio Meteorologico 1939",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37249: {
    "label": "GCS Sao Braz",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37257: {
    "label": "GCS S42 Hungary",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  37260: {
    "label": "GCS Alaskan Islands",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  53001: {
    "label": "Sphere Plate Carree",
    "defaultExtent": "{\"xmin\": -20015085.52182053, \"ymin\": -9457253.91578642, \"xmax\": 20015085.52182053, \"ymax\": 9457253.915786419}"
  },
  53002: {
    "label": "Sphere Equidistant Cylindrical",
    "defaultExtent": "{\"xmin\": -10007542.760910267, \"ymin\": -9457253.91578642, \"xmax\": 10007542.760910267, \"ymax\": 9457253.915786419}"
  },
  53003: {
    "label": "Sphere Miller Cylindrical",
    "defaultExtent": "{\"xmin\": -20015085.52182053, \"ymin\": -13059323.931620779, \"xmax\": 20015085.52182053, \"ymax\": 13059323.931620777}"
  },
  53004: {
    "label": "Sphere Mercator",
    "defaultExtent": "{\"xmin\": -20015085.52182053, \"ymin\": -20015085.52182054, \"xmax\": 20015085.52182053, \"ymax\": 20015085.52182053}"
  },
  53008: {
    "label": "Sphere Sinusoidal",
    "defaultExtent": "{\"xmin\": -20015085.52182053, \"ymin\": -9457253.91578642, \"xmax\": 20015085.52182053, \"ymax\": 9457253.915786419}"
  },
  53009: {
    "label": "Sphere Mollweide",
    "defaultExtent": "{\"xmin\": -18019908.064574886, \"ymin\": -8817760.011608297, \"xmax\": 18019908.064574886, \"ymax\": 8817760.011608297}"
  },
  53010: {
    "label": "Sphere Eckert VI",
    "defaultExtent": "{\"xmin\": -17653816.684564028, \"ymin\": -8773309.81986786, \"xmax\": 17653816.684564028, \"ymax\": 8773309.819867859}"
  },
  53011: {
    "label": "Sphere Eckert V",
    "defaultExtent": "{\"xmin\": -17653816.684564028, \"ymin\": -8341539.524607676, \"xmax\": 17653816.684564028, \"ymax\": 8341539.524607674}"
  },
  53012: {
    "label": "Sphere Eckert IV",
    "defaultExtent": "{\"xmin\": -16902267.379799496, \"ymin\": -8398767.689061321, \"xmax\": 16902267.379799496, \"ymax\": 8398767.689061321}"
  },
  53013: {
    "label": "Sphere Eckert III",
    "defaultExtent": "{\"xmin\": -16902267.379799496, \"ymin\": -7986427.746661876, \"xmax\": 16902267.379799496, \"ymax\": 7986427.746661875}"
  },
  53014: {
    "label": "Sphere Eckert II",
    "defaultExtent": "{\"xmin\": -18440253.197219778, \"ymin\": -9168712.620473467, \"xmax\": 18440253.197219778, \"ymax\": 9168712.620473467}"
  },
  53015: {
    "label": "Sphere Eckert I",
    "defaultExtent": "{\"xmin\": -18440253.197219778, \"ymin\": -8713135.727917563, \"xmax\": 18440253.197219778, \"ymax\": 8713135.727917563}"
  },
  53016: {
    "label": "Sphere Gall Stereographic",
    "defaultExtent": "{\"xmin\": -14152802.698507983, \"ymin\": -9974927.813310318, \"xmax\": 14152802.698507983, \"ymax\": 9974927.813310318}"
  },
  53017: {
    "label": "Sphere Behrmann",
    "defaultExtent": "{\"xmin\": -17333572.520814694, \"ymin\": -7329172.285689381, \"xmax\": 17333572.520814694, \"ymax\": 7329172.285689381}"
  },
  53018: {
    "label": "Sphere Winkel I",
    "defaultExtent": "{\"xmin\": -16378542.355319794, \"ymin\": -9457253.91578642, \"xmax\": 16378542.355319794, \"ymax\": 9457253.915786419}"
  },
  53019: {
    "label": "Sphere Winkel II",
    "defaultExtent": "{\"xmin\": -16378542.355319794, \"ymin\": -9457253.91578642, \"xmax\": 16378542.355319794, \"ymax\": 9457253.915786419}"
  },
  53021: {
    "label": "Sphere Polyconic",
    "defaultExtent": "{\"xmin\": -20015085.52182053, \"ymin\": -15339031.283145145, \"xmax\": 20015085.52182053, \"ymax\": 15339031.283145145}"
  },
  53022: {
    "label": "Sphere Quartic Authalic",
    "defaultExtent": "{\"xmin\": -20015085.52182053, \"ymin\": -8612561.101447491, \"xmax\": 20015085.52182053, \"ymax\": 8612561.10144749}"
  },
  53023: {
    "label": "Sphere Loximuthal",
    "defaultExtent": "{\"xmin\": -18726421.152636945, \"ymin\": -13905050.98156877, \"xmax\": 18726421.152519614, \"ymax\": 5009456.85000407}"
  },
  53024: {
    "label": "Sphere Bonne",
    "defaultExtent": "{\"xmin\": -13065030.319372226, \"ymin\": -16128949.514459943, \"xmax\": 13065030.319408117, \"ymax\": 9241317.068450488}"
  },
  53025: {
    "label": "Sphere Hotine",
    "defaultExtent": "{\"xmin\": -31607974.70959702, \"ymin\": -28658396.44017119, \"xmax\": 31607974.709598377, \"ymax\": 28658396.44017125}"
  },
  53026: {
    "label": "Sphere Stereographic",
    "defaultExtent": "{\"xmin\": -30761930.653895795, \"ymin\": -30761909.23073867, \"xmax\": 30761930.653895836, \"ymax\": 30761909.230738714}"
  },
  53027: {
    "label": "Sphere Equidistant Conic",
    "defaultExtent": "{\"xmin\": -19807248.07907297, \"ymin\": -9457253.91578642, \"xmax\": 19807248.079399634, \"ymax\": 28428547.38191376}"
  },
  53028: {
    "label": "Sphere Cassini",
    "defaultExtent": "{\"xmin\": -10007542.12431961, \"ymin\": -20015085.521820575, \"xmax\": 10007542.12431961, \"ymax\": 20015085.521820575}"
  },
  53029: {
    "label": "Sphere Van der Grinten I",
    "defaultExtent": "{\"xmin\": -20015085.52182053, \"ymin\": -26860673.200414088, \"xmax\": 20015085.52182053, \"ymax\": 26860673.200414117}"
  },
  53030: {
    "label": "Sphere Robinson",
    "defaultExtent": "{\"xmin\": -16986803.082369078, \"ymin\": -8412455.349807823, \"xmax\": 16986803.082369078, \"ymax\": 8412455.349807823}"
  },
  53031: {
    "label": "Sphere Two Point Equidistant",
    "defaultExtent": "{\"xmin\": -15816128.209995987, \"ymin\": -15248693.547984902, \"xmax\": 15816128.20938673, \"ymax\": 15248693.547917407}"
  },
  53032: {
    "label": "Sphere Azimuthal Equidistant",
    "defaultExtent": "{\"xmin\": -19987288.064410545, \"ymin\": -19987288.046113648, \"xmax\": 19987288.064410545, \"ymax\": 19987288.046113648}"
  },
  53034: {
    "label": "Sphere Cylindrical Equal Area",
    "defaultExtent": "{\"xmin\": -20015085.52182053, \"ymin\": -6347249.388119862, \"xmax\": 20015085.52182053, \"ymax\": 6347249.388119862}"
  },
  53042: {
    "label": "Sphere Winkel Tripel NGS",
    "defaultExtent": "{\"xmin\": -16377569.284296881, \"ymin\": -9713744.942570297, \"xmax\": 16377569.284296881, \"ymax\": 9713744.942570295}"
  },
  53043: {
    "label": "Sphere Aitoff",
    "defaultExtent": "{\"xmin\": -20015085.521820527, \"ymin\": -9970235.969354173, \"xmax\": 20015085.521820527, \"ymax\": 9970235.969354173}"
  },
  53044: {
    "label": "Sphere Hammer Aitoff",
    "defaultExtent": "{\"xmin\": -18019908.310762465, \"ymin\": -8976365.136807995, \"xmax\": 18019908.31076246, \"ymax\": 8976365.136807995}"
  },
  53045: {
    "label": "Sphere Flat Polar Quartic",
    "defaultExtent": "{\"xmin\": -18761723.699732393, \"ymin\": -8371558.795841706, \"xmax\": 18761723.699732393, \"ymax\": 8371558.795841706}"
  },
  53046: {
    "label": "Sphere Craster Parabolic",
    "defaultExtent": "{\"xmin\": -19558842.123826552, \"ymin\": -9287754.690513363, \"xmax\": 19558842.123826552, \"ymax\": 9287754.690513363}"
  },
  53048: {
    "label": "Sphere Times",
    "defaultExtent": "{\"xmin\": -14860101.713976452, \"ymin\": -9974927.813310318, \"xmax\": 14860101.713976452, \"ymax\": 9974927.813310318}"
  },
  53049: {
    "label": "Sphere Vertical Perspective",
    "defaultExtent": "{\"xmin\": -5476620.907256751, \"ymin\": -5458258.080209536, \"xmax\": 5476620.907256751, \"ymax\": 5458258.0802095365}"
  },
  54001: {
    "label": "World Plate Carree",
    "defaultExtent": "{\"xmin\": -20037507.0671618, \"ymin\": -9467848.237116976, \"xmax\": 20037507.0671618, \"ymax\": 9467848.237116976}"
  },
  54002: {
    "label": "World Equidistant Cylindrical",
    "defaultExtent": "{\"xmin\": -10018753.533580903, \"ymin\": -9467848.237116976, \"xmax\": 10018753.533580903, \"ymax\": 9467848.237116976}"
  },
  54003: {
    "label": "World Miller Cylindrical",
    "defaultExtent": "{\"xmin\": -20037507.0671618, \"ymin\": -13073953.408139376, \"xmax\": 20037507.0671618, \"ymax\": 13073953.408139372}"
  },
  54004: {
    "label": "World Mercator",
    "defaultExtent": "{\"xmin\": -20037507.0671618, \"ymin\": -19994873.9742325, \"xmax\": 20037507.0671618, \"ymax\": 19994873.97423248}"
  },
  54008: {
    "label": "World Sinusoidal",
    "defaultExtent": "{\"xmin\": -20037507.0671618, \"ymin\": -9449220.373095416, \"xmax\": 20037507.0671618, \"ymax\": 9449220.373095414}"
  },
  54009: {
    "label": "World Mollweide",
    "defaultExtent": "{\"xmin\": -18040094.547679093, \"ymin\": -8827637.951210065, \"xmax\": 18040094.547679093, \"ymax\": 8827637.951210065}"
  },
  54010: {
    "label": "World Eckert VI",
    "defaultExtent": "{\"xmin\": -17673593.060278628, \"ymin\": -8783137.964928979, \"xmax\": 17673593.060278628, \"ymax\": 8783137.964928979}"
  },
  54011: {
    "label": "World Eckert V",
    "defaultExtent": "{\"xmin\": -17673593.060278628, \"ymin\": -8350883.986636733, \"xmax\": 17673593.060278628, \"ymax\": 8350883.986636733}"
  },
  54012: {
    "label": "World Eckert IV",
    "defaultExtent": "{\"xmin\": -16921201.84570589, \"ymin\": -8408176.25992882, \"xmax\": 16921201.84570589, \"ymax\": 8408176.25992882}"
  },
  54013: {
    "label": "World Eckert III",
    "defaultExtent": "{\"xmin\": -16921201.84570589, \"ymin\": -7995374.401006238, \"xmax\": 16921201.84570589, \"ymax\": 7995374.401006237}"
  },
  54014: {
    "label": "World Eckert II",
    "defaultExtent": "{\"xmin\": -18460910.564519815, \"ymin\": -9178983.708524374, \"xmax\": 18460910.564519815, \"ymax\": 9178983.708524374}"
  },
  54015: {
    "label": "World Eckert I",
    "defaultExtent": "{\"xmin\": -18460910.564519815, \"ymin\": -8722896.4640171, \"xmax\": 18460910.564519815, \"ymax\": 8722896.464017099}"
  },
  54016: {
    "label": "World Gall Stereographic",
    "defaultExtent": "{\"xmin\": -14168657.125263477, \"ymin\": -9986102.049663106, \"xmax\": 14168657.125263477, \"ymax\": 9986102.049663104}"
  },
  54017: {
    "label": "World Behrmann",
    "defaultExtent": "{\"xmin\": -17367529.339510005, \"ymin\": -7314614.0584964715, \"xmax\": 17367529.339510005, \"ymax\": 7314614.05849647}"
  },
  54018: {
    "label": "World Winkel I",
    "defaultExtent": "{\"xmin\": -16396890.127536071, \"ymin\": -9467848.237116976, \"xmax\": 16396890.127536071, \"ymax\": 9467848.237116976}"
  },
  54019: {
    "label": "World Winkel II",
    "defaultExtent": "{\"xmin\": -16396890.127536071, \"ymin\": -9467848.237116976, \"xmax\": 16396890.127536071, \"ymax\": 9467848.237116976}"
  },
  54021: {
    "label": "World Polyconic",
    "defaultExtent": "{\"xmin\": -20037507.0671618, \"ymin\": -15348253.618163748, \"xmax\": 20037507.0671618, \"ymax\": 15348253.618163746}"
  },
  54022: {
    "label": "World Quartic Authalic",
    "defaultExtent": "{\"xmin\": -20037507.0671618, \"ymin\": -8622209.170601632, \"xmax\": 20037507.0671618, \"ymax\": 8622209.17060163}"
  },
  54023: {
    "label": "World Loximuthal",
    "defaultExtent": "{\"xmin\": -18747399.09452462, \"ymin\": -13920627.86884792, \"xmax\": 18747399.09440715, \"ymax\": 5015068.605386032}"
  },
  54024: {
    "label": "World Bonne",
    "defaultExtent": "{\"xmin\": -13065442.687278617, \"ymin\": -16103293.192585927, \"xmax\": 13065442.683167296, \"ymax\": 9267343.134162731}"
  },
  54025: {
    "label": "World Hotine",
    "defaultExtent": "{\"xmin\": -31949756.30168484, \"ymin\": -29307276.41369623, \"xmax\": 30830976.589559093, \"ymax\": 28425371.26572872}"
  },
  54026: {
    "label": "World Stereographic",
    "defaultExtent": "{\"xmin\": -30796391.45276573, \"ymin\": -30943151.038973816, \"xmax\": 30796391.45276576, \"ymax\": 30943151.03897386}"
  },
  54027: {
    "label": "World Equidistant Conic",
    "defaultExtent": "{\"xmin\": -19794991.579967946, \"ymin\": -9449220.373095417, \"xmax\": 19794991.580294408, \"ymax\": 28413137.62304946}"
  },
  54028: {
    "label": "World Cassini",
    "defaultExtent": "{\"xmin\": -5009377.085697311, \"ymin\": -9610523.775686787, \"xmax\": 5009377.085697311, \"ymax\": 9610523.775686782}"
  },
  54029: {
    "label": "World Van der Grinten I",
    "defaultExtent": "{\"xmin\": -20037507.0671618, \"ymin\": -26890763.394203346, \"xmax\": 20037507.0671618, \"ymax\": 26890763.394203376}"
  },
  54030: {
    "label": "World Robinson",
    "defaultExtent": "{\"xmin\": -16986822.228633102, \"ymin\": -8412464.831703294, \"xmax\": 16986822.228633102, \"ymax\": 8412464.831703294}"
  },
  54031: {
    "label": "World Two Point Equidistant",
    "defaultExtent": "{\"xmin\": -15833846.059320392, \"ymin\": -15265775.627072442, \"xmax\": 15833846.059351534, \"ymax\": 15265775.627004951}"
  },
  54032: {
    "label": "World Azimuthal Equidistant",
    "defaultExtent": "{\"xmin\": -19942496.49842423, \"ymin\": -19909555.59169106, \"xmax\": 19942496.498424232, \"ymax\": 19909555.591691058}"
  },
  54034: {
    "label": "World Cylindrical Equal Area",
    "defaultExtent": "{\"xmin\": -20037507.0671618, \"ymin\": -6339949.068630518, \"xmax\": 20037507.0671618, \"ymax\": 6339949.068630518}"
  },
  54042: {
    "label": "World Winkel Tripel NGS",
    "defaultExtent": "{\"xmin\": -16395915.96644757, \"ymin\": -9724626.593434388, \"xmax\": 16395915.96644757, \"ymax\": 9724626.593434388}"
  },
  54043: {
    "label": "World Aitoff",
    "defaultExtent": "{\"xmin\": -20037507.0671618, \"ymin\": -9981404.9497518, \"xmax\": 20037507.0671618, \"ymax\": 9981404.9497518}"
  },
  54044: {
    "label": "World Hammer Aitoff",
    "defaultExtent": "{\"xmin\": -18040094.794142455, \"ymin\": -8986420.751033299, \"xmax\": 18040094.79414245, \"ymax\": 8986420.751033299}"
  },
  54045: {
    "label": "World Flat Polar Quartic",
    "defaultExtent": "{\"xmin\": -18782741.18867369, \"ymin\": -8380936.886428102, \"xmax\": 18782741.18867369, \"ymax\": 8380936.886428102}"
  },
  54046: {
    "label": "World Craster Parabolic",
    "defaultExtent": "{\"xmin\": -19580752.57057553, \"ymin\": -9298159.1333365, \"xmax\": 19580752.57057553, \"ymax\": 9298159.1333365}"
  },
  54048: {
    "label": "World Times",
    "defaultExtent": "{\"xmin\": -14851809.019456536, \"ymin\": -9969361.29493742, \"xmax\": 14851809.019456536, \"ymax\": 9969361.294937419}"
  },
  54049: {
    "label": "World Vertical Perspective",
    "defaultExtent": "{\"xmin\": -5476620.907256751, \"ymin\": -5458258.080209536, \"xmax\": 5476620.907256751, \"ymax\": 5458258.0802095365}"
  },
  54050: {
    "label": "World Fuller",
    "defaultExtent": "{\"xmin\": -19419088.091734163, \"ymin\": -9173176.08504318, \"xmax\": 19419227.951385565, \"ymax\": 9173178.40623313}"
  },
  54051: {
    "label": "World Cube",
    "defaultExtent": "{\"xmin\": -20037507.06716184, \"ymin\": -15028129.981464531, \"xmax\": 20037507.067161806, \"ymax\": 15028129.981464528}"
  },
  54052: {
    "label": "World Goode Homolosine Land",
    "defaultExtent": "{\"xmin\": -20037507.067161817, \"ymin\": -8490849.819570258, \"xmax\": 20037507.067161832, \"ymax\": 8490849.819570262}"
  },
  54053: {
    "label": "World Goode Homolosine Ocean",
    "defaultExtent": "{\"xmin\": -20037507.06716183, \"ymin\": -8490849.819570258, \"xmax\": 20037507.067161843, \"ymax\": 8490849.819570262}"
  },
  65061: {
    "label": "NAD 1927 StatePlane Guam FIPS 5400",
    "defaultExtent": "{\"xmin\": -65576394.7447369, \"ymin\": -55079355.38072197, \"xmax\": 65904478.07802971, \"ymax\": 45631285.24988944}"
  },
  65062: {
    "label": "American Samoa 1962 StatePlane American Samoa FIPS 5300",
    "defaultExtent": "{\"xmin\": -117293513.11027402, \"ymin\": -53093029.58928256, \"xmax\": 118293513.11027405, \"ymax\": 86482568.80391248}"
  },
  65161: {
    "label": "NAD 1983 StatePlane Guam FIPS 5400",
    "defaultExtent": "{\"xmin\": -19987507.06712972, \"ymin\": -16788234.566776842, \"xmax\": 20087507.067117363, \"ymax\": 13908272.67000892}"
  },
  102001: {
    "label": "Canada Albers Equal Area Conic",
    "defaultExtent": "{\"xmin\": -13812694.698045112, \"ymin\": -7900603.2749695955, \"xmax\": 13812694.698289607, \"ymax\": 18276417.983055193}"
  },
  102002: {
    "label": "Canada Lambert Conformal Conic",
    "defaultExtent": "{\"xmin\": -35105358.78978467, \"ymin\": -29255312.28897947, \"xmax\": 35105358.7894367, \"ymax\": 38095200.83674246}"
  },
  102003: {
    "label": "USA Contiguous Albers Equal Area Conic",
    "defaultExtent": "{\"xmin\": -16885989.18210479, \"ymin\": -8563838.438464364, \"xmax\": 16885989.182114024, \"ymax\": 13686439.397864789}"
  },
  102004: {
    "label": "USA Contiguous Lambert Conformal Conic",
    "defaultExtent": "{\"xmin\": -36966076.137843065, \"ymin\": -29136955.126161516, \"xmax\": 36966076.137771465, \"ymax\": 22562989.008630853}"
  },
  102005: {
    "label": "USA Contiguous Equidistant Conic",
    "defaultExtent": "{\"xmin\": -21625506.28937472, \"ymin\": -13767724.35749375, \"xmax\": 21625506.289508644, \"ymax\": 16333851.935436562}"
  },
  102007: {
    "label": "Hawaii Albers Equal Area Conic",
    "defaultExtent": "{\"xmin\": -22474547.310762066, \"ymin\": -7089152.161929131, \"xmax\": 22474547.31076208, \"ymax\": 10866607.20129883}"
  },
  102008: {
    "label": "North America Albers Equal Area Conic",
    "defaultExtent": "{\"xmin\": -16672791.608757256, \"ymin\": -9052922.649932012, \"xmax\": 16672791.608551979, \"ymax\": 12990432.966953669}"
  },
  102009: {
    "label": "North America Lambert Conformal Conic",
    "defaultExtent": "{\"xmin\": -35214156.09379879, \"ymin\": -28218350.330740742, \"xmax\": 35214156.09364807, \"ymax\": 23671795.223477058}"
  },
  102010: {
    "label": "North America Equidistant Conic",
    "defaultExtent": "{\"xmin\": -21177234.342682857, \"ymin\": -13878749.403041797, \"xmax\": 21177234.342571862, \"ymax\": 15715255.966487303}"
  },
  102011: {
    "label": "Africa Sinusoidal",
    "defaultExtent": "{\"xmin\": -20037507.067179196, \"ymin\": -9449220.373066094, \"xmax\": 20037507.0671792, \"ymax\": 9449220.373095414}"
  },
  102012: {
    "label": "Asia Lambert Conformal Conic",
    "defaultExtent": "{\"xmin\": -35330910.924436264, \"ymin\": -24043540.25995127, \"xmax\": 35330910.92445279, \"ymax\": 34596272.74453714}"
  },
  102013: {
    "label": "Europe Albers Equal Area Conic",
    "defaultExtent": "{\"xmin\": -14477055.518816711, \"ymin\": -7092431.705086381, \"xmax\": 14477055.519347163, \"ymax\": 18612782.92583162}"
  },
  102014: {
    "label": "Europe Lambert Conformal Conic",
    "defaultExtent": "{\"xmin\": -35565531.27154592, \"ymin\": -28224965.756986216, \"xmax\": 35565531.27161981, \"ymax\": 35922733.930690125}"
  },
  102015: {
    "label": "South America Lambert Conformal Conic",
    "defaultExtent": "{\"xmin\": -37987067.8675607, \"ymin\": -11452652.132666977, \"xmax\": 37987067.86756071, \"ymax\": 26929172.644898146}"
  },
  102016: {
    "label": "North Pole Azimuthal Equidistant",
    "defaultExtent": "{\"xmin\": -19451186.10240804, \"ymin\": -19451186.102408137, \"xmax\": 19451186.10240804, \"ymax\": 19451186.10240775}"
  },
  102017: {
    "label": "North Pole Lambert Azimuthal Equal Area",
    "defaultExtent": "{\"xmin\": -12730027.198090494, \"ymin\": -12730027.198090555, \"xmax\": 12730027.198090494, \"ymax\": 12730027.1980903}"
  },
  102018: {
    "label": "North Pole Stereographic",
    "defaultExtent": "{\"xmin\": -30548236.162056506, \"ymin\": -30548236.162056655, \"xmax\": 30548236.162056506, \"ymax\": 30548236.162056044}"
  },
  102019: {
    "label": "South Pole Azimuthal Equidistant",
    "defaultExtent": "{\"xmin\": -19451186.10240804, \"ymin\": -19451186.10240775, \"xmax\": 19451186.10240804, \"ymax\": 19451186.102408137}"
  },
  102020: {
    "label": "South Pole Lambert Azimuthal Equal Area",
    "defaultExtent": "{\"xmin\": -12730027.198090494, \"ymin\": -12730027.1980903, \"xmax\": 12730027.198090494, \"ymax\": 12730027.198090555}"
  },
  102021: {
    "label": "South Pole Stereographic",
    "defaultExtent": "{\"xmin\": -30548236.162056506, \"ymin\": -30548236.162056044, \"xmax\": 30548236.162056506, \"ymax\": 30548236.162056655}"
  },
  102022: {
    "label": "Africa Albers Equal Area Conic",
    "defaultExtent": "{\"xmin\": -19154691.61469431, \"ymin\": -7600359.261139035, \"xmax\": 19154691.614694316, \"ymax\": 6715765.002699643}"
  },
  102023: {
    "label": "Africa Equidistant Conic",
    "defaultExtent": "{\"xmin\": -19397354.086091947, \"ymin\": -10168303.948541671, \"xmax\": 19397354.08609195, \"ymax\": 9449220.373031884}"
  },
  102024: {
    "label": "Africa Lambert Conformal Conic",
    "defaultExtent": "{\"xmin\": -20272245.004779223, \"ymin\": -18579536.6072298, \"xmax\": 20272245.00477923, \"ymax\": 19424389.878113717}"
  },
  102025: {
    "label": "Asia North Albers Equal Area Conic",
    "defaultExtent": "{\"xmin\": -16919064.062903296, \"ymin\": -8076837.888782006, \"xmax\": 16919064.062807526, \"ymax\": 13209737.706274569}"
  },
  102026: {
    "label": "Asia North Equidistant Conic",
    "defaultExtent": "{\"xmin\": -20999031.064210214, \"ymin\": -12769333.770620752, \"xmax\": 20999031.064452473, \"ymax\": 16144905.51044096}"
  },
  102027: {
    "label": "Asia North Lambert Conformal Conic",
    "defaultExtent": "{\"xmin\": -34230685.21050296, \"ymin\": -26567508.511737812, \"xmax\": 34230685.213656075, \"ymax\": 24721328.203485206}"
  },
  102028: {
    "label": "Asia South Albers Equal Area Conic",
    "defaultExtent": "{\"xmin\": -21650741.919035915, \"ymin\": -10254000.398505997, \"xmax\": 21650741.919035923, \"ymax\": 7710980.656983204}"
  },
  102029: {
    "label": "Asia South Equidistant Conic",
    "defaultExtent": "{\"xmin\": -23814583.026564386, \"ymin\": -11990899.725638261, \"xmax\": 23814583.02656439, \"ymax\": 11108209.962482706}"
  },
  102030: {
    "label": "Asia South Lambert Conformal Conic",
    "defaultExtent": "{\"xmin\": -32918293.283446793, \"ymin\": -15593655.196803633, \"xmax\": 32918293.283446804, \"ymax\": 25141240.811437}"
  },
  102031: {
    "label": "Europe Equidistant Conic",
    "defaultExtent": "{\"xmin\": -20128124.80470717, \"ymin\": -12769675.077997588, \"xmax\": 20128124.80484239, \"ymax\": 23254146.146718156}"
  },
  102032: {
    "label": "South America Equidistant Conic",
    "defaultExtent": "{\"xmin\": -24716253.246634334, \"ymin\": -10785983.957753524, \"xmax\": 24716253.246634346, \"ymax\": 12991118.70970978}"
  },
  102033: {
    "label": "South America Albers Equal Area Conic",
    "defaultExtent": "{\"xmin\": -21043143.044818323, \"ymin\": -10210148.40188038, \"xmax\": 21043143.04481833, \"ymax\": 8994000.200345553}"
  },
  102034: {
    "label": "North Pole Gnomonic",
    "defaultExtent": "{\"xmin\": -23803531.341634825, \"ymin\": -23803531.34163494, \"xmax\": 23803531.341634825, \"ymax\": 23803531.341634464}"
  },
  102035: {
    "label": "North Pole Orthographic",
    "defaultExtent": "{\"xmin\": -6378136.988519322, \"ymin\": -6378136.988519353, \"xmax\": 6378136.988519322, \"ymax\": 6378136.988519225}"
  },
  102036: {
    "label": "South Pole Gnomonic",
    "defaultExtent": "{\"xmin\": -23803531.341634825, \"ymin\": -23803531.341634464, \"xmax\": 23803531.341634825, \"ymax\": 23803531.34163494}"
  },
  102037: {
    "label": "South Pole Orthographic",
    "defaultExtent": "{\"xmin\": -6378136.988519322, \"ymin\": -6378136.988519225, \"xmax\": 6378136.988519322, \"ymax\": 6378136.988519353}"
  },
  102038: {
    "label": "The World From Space",
    "defaultExtent": "{\"xmin\": -6370996.988532205, \"ymin\": -6370996.988532206, \"xmax\": 6370996.988532205, \"ymax\": 6370996.988532204}"
  },
  102039: {
    "label": "USA Contiguous Albers Equal Area Conic USGS version",
    "defaultExtent": "{\"xmin\": -16885989.18210479, \"ymin\": -6957052.177887028, \"xmax\": 16885989.182114024, \"ymax\": 15293225.658442125}"
  },
  102041: {
    "label": "COB NAD83 2007",
    "defaultExtent": "{\"xmin\": -117104064.78403555, \"ymin\": -99539209.47191389, \"xmax\": 120384898.57799245, \"ymax\": 101712468.06241427}"
  },
  102042: {
    "label": "NAD 1983 USFS R9 Albers",
    "defaultExtent": "{\"xmin\": -15763640.106893884, \"ymin\": -7992789.79531165, \"xmax\": 15763640.106962565, \"ymax\": 16080185.692886524}"
  },
  102043: {
    "label": "NAD 1983 CORS96 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102044: {
    "label": "NAD 1983 NSRS2007 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102045: {
    "label": "NAD 1983 2011 UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102046: {
    "label": "NAD 1983 2011 UTM Zone 59N",
    "defaultExtent": "{\"xmin\": -5120763.76772398, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102047: {
    "label": "NAD 1983 2011 UTM Zone 60N",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102048: {
    "label": "NAD 1983 2011 UTM Zone 1N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102049: {
    "label": "NAD 1983 2011 UTM Zone 2N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102050: {
    "label": "NAD 1983 2011 UTM Zone 3N",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102051: {
    "label": "NAD 1983 2011 UTM Zone 4N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724011, \"ymax\": 9606785.534938097}"
  },
  102052: {
    "label": "NAD 1983 2011 UTM Zone 5N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102053: {
    "label": "NAD 1983 2011 UTM Zone 6N",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102054: {
    "label": "NAD 1983 2011 UTM Zone 7N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724011, \"ymax\": 9606785.534938097}"
  },
  102055: {
    "label": "NAD 1983 2011 UTM Zone 8N",
    "defaultExtent": "{\"xmin\": -5120761.968321789, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102056: {
    "label": "NAD 1983 2011 UTM Zone 9N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102057: {
    "label": "NAD 1983 2011 UTM Zone 10N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724002, \"ymax\": 9606785.534958888}"
  },
  102058: {
    "label": "NAD 1983 2011 UTM Zone 11N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102059: {
    "label": "NAD 1983 2011 UTM Zone 12N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102060: {
    "label": "D48 Slovenia TM",
    "defaultExtent": "{\"xmin\": -5121783.478067655, \"ymin\": -14608608.17013799, \"xmax\": 6121783.478067655, \"ymax\": 4608608.170137983}"
  },
  102061: {
    "label": "Everest Modified 1969 RSO Malaya Meters",
    "defaultExtent": "{\"xmin\": -30658785.502040155, \"ymin\": -28734370.782477967, \"xmax\": 32274544.149394643, \"ymax\": 28729683.051673792}"
  },
  102062: {
    "label": "Kertau RSO Malaya Meters",
    "defaultExtent": "{\"xmin\": -30658825.880139273, \"ymin\": -28734408.6261018, \"xmax\": 32274586.65549905, \"ymax\": 28729720.889124535}"
  },
  102063: {
    "label": "Kandawala Ceylon Belt Meters",
    "defaultExtent": "{\"xmin\": -5461278.250880137, \"ymin\": -10222603.242468296, \"xmax\": 5783145.371840134, \"ymax\": 8996368.618257241}"
  },
  102064: {
    "label": "Kandawala Ceylon Belt Indian Yards 1937",
    "defaultExtent": "{\"xmin\": -5972557.677143763, \"ymin\": -11179633.16854605, \"xmax\": 6324557.677143761, \"ymax\": 9838599.681077996}"
  },
  102068: {
    "label": "EMEP 50 Kilometer Grid",
    "defaultExtent": "{\"xmin\": -611.5452373442346, \"ymin\": -509.54523734423975, \"xmax\": 627.5452373442389, \"ymax\": 729.5452373442317}"
  },
  102069: {
    "label": "EMEP 150 Kilometer Grid",
    "defaultExtent": "{\"xmin\": -203.51507911474485, \"ymin\": -169.51507911474658, \"xmax\": 209.5150791147463, \"ymax\": 243.5150791147439}"
  },
  102070: {
    "label": "Guernsey Grid",
    "defaultExtent": "{\"xmin\": -5575996.103849671, \"ymin\": -15045819.42052619, \"xmax\": 5669996.103849671, \"ymax\": 4175382.489619698}"
  },
  102071: {
    "label": "AGD 1966 ACT Grid AGC Zone",
    "defaultExtent": "{\"xmin\": -5423516.952210597, \"ymin\": -5101297.028649784, \"xmax\": 5823516.952105881, \"ymax\": 14121684.016449794}"
  },
  102072: {
    "label": "AGD 1966 ISG 54 2",
    "defaultExtent": "{\"xmin\": -5322695.989286023, \"ymin\": -4610087.365602719, \"xmax\": 5922695.989286039, \"ymax\": 14610087.365602728}"
  },
  102073: {
    "label": "AGD 1966 ISG 54 3",
    "defaultExtent": "{\"xmin\": -5322695.989286023, \"ymin\": -4610087.365602719, \"xmax\": 5922695.989286039, \"ymax\": 14610087.365602728}"
  },
  102074: {
    "label": "AGD 1966 ISG 55 1",
    "defaultExtent": "{\"xmin\": -5322695.989286023, \"ymin\": -4610087.365602719, \"xmax\": 5922695.989286031, \"ymax\": 14610087.365602728}"
  },
  102075: {
    "label": "AGD 1966 ISG 55 2",
    "defaultExtent": "{\"xmin\": -5322695.98928602, \"ymin\": -4610087.365602719, \"xmax\": 5922695.989286039, \"ymax\": 14610087.365602728}"
  },
  102076: {
    "label": "AGD 1966 ISG 55 3",
    "defaultExtent": "{\"xmin\": -5322695.98928602, \"ymin\": -4610087.365602719, \"xmax\": 5922695.989286039, \"ymax\": 14610087.365602728}"
  },
  102077: {
    "label": "AGD 1966 ISG 56 1",
    "defaultExtent": "{\"xmin\": -5322695.98928602, \"ymin\": -4610087.365602719, \"xmax\": 5922695.989286039, \"ymax\": 14610087.365602728}"
  },
  102078: {
    "label": "AGD 1966 ISG 56 2",
    "defaultExtent": "{\"xmin\": -5322695.98928602, \"ymin\": -4610087.365602719, \"xmax\": 5922695.989286039, \"ymax\": 14610087.365602728}"
  },
  102079: {
    "label": "AGD 1966 ISG 56 3",
    "defaultExtent": "{\"xmin\": -5322695.989286023, \"ymin\": -4610087.365602719, \"xmax\": 5922695.989286039, \"ymax\": 14610087.365602728}"
  },
  102093: {
    "label": "Roma 1940 Gauss Boaga Est",
    "defaultExtent": "{\"xmin\": -3101006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 8141006.178542033, \"ymax\": 9607087.052499557}"
  },
  102094: {
    "label": "Roma 1940 Gauss Boaga Ovest",
    "defaultExtent": "{\"xmin\": -4121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 7121006.178542033, \"ymax\": 9607087.052499557}"
  },
  102096: {
    "label": "Bab South Palau Azimuthal Equidistant",
    "defaultExtent": "{\"xmin\": -19891967.654243514, \"ymin\": -19759201.63784392, \"xmax\": 19991967.654087085, \"ymax\": 20059205.27538667}"
  },
  102097: {
    "label": "ETRS 1989 UTM Zone 26N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102098: {
    "label": "ETRS 1989 UTM Zone 27N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102099: {
    "label": "ETRS 1989 UTM Zone 39N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724002, \"ymax\": 9606785.534958888}"
  },
  102100: {
    "label": "WGS 1984 Web Mercator Auxiliary Sphere",
    "defaultExtent": "{\"xmin\": -20037507.0671618, \"ymin\": -20037507.0671618, \"xmax\": 20037507.0671618, \"ymax\": 20037507.0671618}"
  },
  102101: {
    "label": "NGO 1948 Norway Zone 1",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16040419.987911409, \"xmax\": 5622429.344341379, \"ymax\": 3179004.1485127923}"
  },
  102102: {
    "label": "NGO 1948 Norway Zone 2",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16040419.987911409, \"xmax\": 5622429.344341379, \"ymax\": 3179004.1485127923}"
  },
  102103: {
    "label": "NGO 1948 Norway Zone 3",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16040419.987911409, \"xmax\": 5622429.344341379, \"ymax\": 3179004.1485127923}"
  },
  102104: {
    "label": "NGO 1948 Norway Zone 4",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16040419.987911409, \"xmax\": 5622429.34434138, \"ymax\": 3179004.1485127923}"
  },
  102105: {
    "label": "NGO 1948 Norway Zone 5",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16040419.987911409, \"xmax\": 5622429.344341379, \"ymax\": 3179004.1485127923}"
  },
  102106: {
    "label": "NGO 1948 Norway Zone 6",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16040419.987911409, \"xmax\": 5622429.344341379, \"ymax\": 3179004.1485127923}"
  },
  102107: {
    "label": "NGO 1948 Norway Zone 7",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16040419.987911409, \"xmax\": 5622429.344341379, \"ymax\": 3179004.1485127923}"
  },
  102108: {
    "label": "NGO 1948 Norway Zone 8",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16040419.987911409, \"xmax\": 5622429.344341379, \"ymax\": 3179004.1485127923}"
  },
  102109: {
    "label": "ETRS 1989 Slovenia TM",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": -14609668.723894954, \"xmax\": 6122450.671615874, \"ymax\": 4609668.72389495}"
  },
  102114: {
    "label": "Old Hawaiian UTM Zone 4N",
    "defaultExtent": "{\"xmin\": -5120880.632721118, \"ymin\": -9606689.106299058, \"xmax\": 6120880.632721152, \"ymax\": 9606689.106299069}"
  },
  102115: {
    "label": "Old Hawaiian UTM Zone 5N",
    "defaultExtent": "{\"xmin\": -5120880.632721118, \"ymin\": -9606689.106299058, \"xmax\": 6120880.632721149, \"ymax\": 9606689.106299067}"
  },
  102116: {
    "label": "American Samoa 1962 UTM Zone 2S",
    "defaultExtent": "{\"xmin\": -5120880.632721118, \"ymin\": 393310.8937009424, \"xmax\": 6120880.632721149, \"ymax\": 19606689.106299065}"
  },
  102117: {
    "label": "NAD 1927 Alaska Albers Meters",
    "defaultExtent": "{\"xmin\": -13739198.60741037, \"ymin\": -8935011.774912124, \"xmax\": 13739198.607921256, \"ymax\": 17285764.842849255}"
  },
  102118: {
    "label": "NAD 1927 Georgia Statewide Albers",
    "defaultExtent": "{\"xmin\": -55400092.23912577, \"ymin\": -22824437.055987064, \"xmax\": 55400092.238679215, \"ymax\": 50175105.334280744}"
  },
  102120: {
    "label": "NAD 1927 Michigan GeoRef Feet US",
    "defaultExtent": "{\"xmin\": -94633081.6736707, \"ymin\": -99627036.6508441, \"xmax\": 116645604.47027147, \"ymax\": 68272774.6456541}"
  },
  102121: {
    "label": "NAD 1983 Michigan GeoRef Feet US",
    "defaultExtent": "{\"xmin\": -94520489.46134017, \"ymin\": -99605004.48628494, \"xmax\": 116615286.34515853, \"ymax\": 68282848.0284211}"
  },
  102122: {
    "label": "NAD 1927 Michigan GeoRef Meters",
    "defaultExtent": "{\"xmin\": -28844220.982545808, \"ymin\": -30366381.503938258, \"xmax\": 35553651.349880055, \"ymax\": 20809583.331164066}"
  },
  102132: {
    "label": "NGO 1948 UTM Zone 32N",
    "defaultExtent": "{\"xmin\": -5120180.372603643, \"ymin\": -9605868.183384819, \"xmax\": 6120180.372603643, \"ymax\": 9605868.183384812}"
  },
  102133: {
    "label": "NGO 1948 UTM Zone 33N",
    "defaultExtent": "{\"xmin\": -5120180.372603643, \"ymin\": -9605868.183384819, \"xmax\": 6120180.372603643, \"ymax\": 9605868.183384812}"
  },
  102134: {
    "label": "NGO 1948 UTM Zone 34N",
    "defaultExtent": "{\"xmin\": -5120180.372603643, \"ymin\": -9605868.183384819, \"xmax\": 6120180.372603643, \"ymax\": 9605868.183384812}"
  },
  102135: {
    "label": "NGO 1948 UTM Zone 35N",
    "defaultExtent": "{\"xmin\": -5120180.372603643, \"ymin\": -9605868.183384819, \"xmax\": 6120180.372603643, \"ymax\": 9605868.183384812}"
  },
  102136: {
    "label": "NGO 1948 Baerum Kommune",
    "defaultExtent": "{\"xmin\": -5602430.024341378, \"ymin\": -16243397.777911408, \"xmax\": 5642428.664341379, \"ymax\": 2976026.3585127923}"
  },
  102137: {
    "label": "NGO 1948 Bergenhalvoen",
    "defaultExtent": "{\"xmin\": -5522429.344341379, \"ymin\": -16240419.987911409, \"xmax\": 5722429.344341379, \"ymax\": 2979004.1485127923}"
  },
  102138: {
    "label": "NGO 1948 Oslo Kommune",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16253399.167911408, \"xmax\": 5622429.344341379, \"ymax\": 2966024.968512792}"
  },
  102141: {
    "label": "Hong Kong 1980 UTM Zone 49N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542031, \"ymax\": 9607087.052499557}"
  },
  102142: {
    "label": "Hong Kong 1980 UTM Zone 50N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  102143: {
    "label": "QND 1995 UTM 39N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542034, \"ymax\": 9607087.052499557}"
  },
  102144: {
    "label": "Merchich Degree UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -5120944.475688979, \"ymin\": -9606659.335852288, \"xmax\": 6120944.475688979, \"ymax\": 9606659.335852282}"
  },
  102150: {
    "label": "JGD 2000 UTM Zone 56N",
    "defaultExtent": "{\"xmin\": -5120763.767723991, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102156: {
    "label": "Tokyo UTM Zone 56N",
    "defaultExtent": "{\"xmin\": -5120096.774353853, \"ymin\": -9605725.299379075, \"xmax\": 6120096.774353871, \"ymax\": 9605725.299379082}"
  },
  102157: {
    "label": "ETRS 1989 Kosovo Grid",
    "defaultExtent": "{\"xmin\": 1877549.3283841256, \"ymin\": -9609668.723894954, \"xmax\": 13122450.671615874, \"ymax\": 9609668.72389495}"
  },
  102158: {
    "label": "Jordan JTM",
    "defaultExtent": "{\"xmin\": -5122130.829638179, \"ymin\": -12609009.238784574, \"xmax\": 6122130.829638179, \"ymax\": 6609009.23878457}"
  },
  102159: {
    "label": "Observatorio Meteorologico 1965 Macau Grid",
    "defaultExtent": "{\"xmin\": -5603255.480734324, \"ymin\": -12048282.799066143, \"xmax\": 5643255.480734329, \"ymax\": 7173580.05107303}"
  },
  102160: {
    "label": "Datum 73 Hayford Gauss IGeoE",
    "defaultExtent": "{\"xmin\": -5423074.882734327, \"ymin\": -13703611.848224163, \"xmax\": 5823436.078734327, \"ymax\": 5518251.00191501}"
  },
  102161: {
    "label": "Datum 73 Hayford Gauss IPCC",
    "defaultExtent": "{\"xmin\": -5623074.882734327, \"ymin\": -14003611.848224163, \"xmax\": 5623436.078734327, \"ymax\": 5218251.00191501}"
  },
  102162: {
    "label": "Graciosa Base SW 1948 UTM Zone 26N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  102163: {
    "label": "Lisboa Bessel Bonne",
    "defaultExtent": "{\"xmin\": -13972436.907840354, \"ymin\": -13840258.366571773, \"xmax\": 13972436.907660162, \"ymax\": 11187068.203647485}"
  },
  102164: {
    "label": "Lisboa Hayford Gauss IGeoE",
    "defaultExtent": "{\"xmin\": -5423255.480734327, \"ymin\": -13703524.858224163, \"xmax\": 5823255.480734327, \"ymax\": 5518337.99191501}"
  },
  102165: {
    "label": "Lisboa Hayford Gauss IPCC",
    "defaultExtent": "{\"xmin\": -5623255.480734327, \"ymin\": -14003524.858224163, \"xmax\": 5623255.480734327, \"ymax\": 5218337.99191501}"
  },
  102166: {
    "label": "Observatorio Meteorologico 1939 UTM Zone 25N",
    "defaultExtent": "{\"xmin\": -5121006.178542031, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  102168: {
    "label": "Sao Braz UTM Zone 26N",
    "defaultExtent": "{\"xmin\": -5121006.178542033, \"ymin\": -9607087.05249956, \"xmax\": 6121006.178542033, \"ymax\": 9607087.052499557}"
  },
  102173: {
    "label": "ETRS 1989 UWPP 1992",
    "defaultExtent": "{\"xmin\": -5119076.863832125, \"ymin\": -14903902.34602283, \"xmax\": 6119076.863832125, \"ymax\": 4303902.346022826}"
  },
  102174: {
    "label": "ETRS 1989 UWPP 2000 PAS 5",
    "defaultExtent": "{\"xmin\": -122580.0009142505, \"ymin\": -9609889.768380051, \"xmax\": 11122580.00091425, \"ymax\": 9609889.768380046}"
  },
  102175: {
    "label": "ETRS 1989 UWPP 2000 PAS 6",
    "defaultExtent": "{\"xmin\": 877419.9990857495, \"ymin\": -9609889.768380051, \"xmax\": 12122580.00091425, \"ymax\": 9609889.768380046}"
  },
  102176: {
    "label": "ETRS 1989 UWPP 2000 PAS 7",
    "defaultExtent": "{\"xmin\": 1877419.9990857495, \"ymin\": -9609889.768380051, \"xmax\": 13122580.00091425, \"ymax\": 9609889.768380046}"
  },
  102177: {
    "label": "ETRS 1989 UWPP 2000 PAS 8",
    "defaultExtent": "{\"xmin\": 2877419.9990857495, \"ymin\": -9609889.768380051, \"xmax\": 14122580.00091425, \"ymax\": 9609889.768380046}"
  },
  102178: {
    "label": "NAD 1927 10TM AEP Forest",
    "defaultExtent": "{\"xmin\": -5118631.380767271, \"ymin\": -9602844.892992005, \"xmax\": 6118631.380767271, \"ymax\": 9602844.892992}"
  },
  102179: {
    "label": "NAD 1927 10TM AEP Resource",
    "defaultExtent": "{\"xmin\": -5618631.380767271, \"ymin\": -9602844.892992005, \"xmax\": 5618631.380767271, \"ymax\": 9602844.892992}"
  },
  102191: {
    "label": "Nord Maroc Degree",
    "defaultExtent": "{\"xmin\": -37644652.57125495, \"ymin\": -28128361.97525744, \"xmax\": 38644652.57137238, \"ymax\": 15867737.975734096}"
  },
  102192: {
    "label": "Sud Maroc Degree",
    "defaultExtent": "{\"xmin\": -38611651.149578966, \"ymin\": -27628323.40364075, \"xmax\": 39611651.149578966, \"ymax\": 11443183.253599452}"
  },
  102193: {
    "label": "Sahara Degree",
    "defaultExtent": "{\"xmin\": -38552575.06885365, \"ymin\": -27047880.437310733, \"xmax\": 40952575.068853654, \"ymax\": 12666917.021485645}"
  },
  102194: {
    "label": "UWPP 1992",
    "defaultExtent": "{\"xmin\": -5119076.863807566, \"ymin\": -14903902.346111434, \"xmax\": 6119076.863807566, \"ymax\": 4303902.346111428}"
  },
  102195: {
    "label": "UWPP 2000 PAS 5",
    "defaultExtent": "{\"xmin\": -122580.00088967662, \"ymin\": -9609889.768468712, \"xmax\": 11122580.000889678, \"ymax\": 9609889.768468706}"
  },
  102196: {
    "label": "UWPP 2000 PAS 6",
    "defaultExtent": "{\"xmin\": 877419.9991103234, \"ymin\": -9609889.768468712, \"xmax\": 12122580.000889678, \"ymax\": 9609889.768468706}"
  },
  102197: {
    "label": "UWPP 2000 PAS 7",
    "defaultExtent": "{\"xmin\": 1877419.9991103234, \"ymin\": -9609889.768468712, \"xmax\": 13122580.000889678, \"ymax\": 9609889.768468706}"
  },
  102198: {
    "label": "UWPP 2000 PAS 8",
    "defaultExtent": "{\"xmin\": 2877419.9991103234, \"ymin\": -9609889.768468712, \"xmax\": 14122580.000889676, \"ymax\": 9609889.768468706}"
  },
  102204: {
    "label": "Ain el Abd 1970 Aramco Lambert 2",
    "defaultExtent": "{\"xmin\": -38714529.1057336, \"ymin\": -24167073.755729213, \"xmax\": 40714529.1057336, \"ymax\": 15936530.81391371}"
  },
  102212: {
    "label": "NAD 1983 WyLAM",
    "defaultExtent": "{\"xmin\": -36129055.70850331, \"ymin\": -29362180.251424327, \"xmax\": 37129055.70829792, \"ymax\": 27101076.274321638}"
  },
  102213: {
    "label": "NAD 1983 UTM Zone 58N",
    "defaultExtent": "{\"xmin\": -5120763.76772398, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102215: {
    "label": "WGS 1984 Canada Atlas LCC",
    "defaultExtent": "{\"xmin\": -34655646.92927752, \"ymin\": -31416395.64225548, \"xmax\": 34655646.92943417, \"ymax\": 36225208.23552443}"
  },
  102216: {
    "label": "GDA 1994 Perth Coastal Grid 1994",
    "defaultExtent": "{\"xmin\": -5573007.687280972, \"ymin\": -5810620.752881642, \"xmax\": 5673007.687280972, \"ymax\": 13410620.752881639}"
  },
  102217: {
    "label": "NAD 1983 NSRS2007 Wisconsin TM US Ft",
    "defaultExtent": "{\"xmin\": -16734755.794607824, \"ymin\": -46216395.54261096, \"xmax\": 20146822.46127449, \"ymax\": 16820128.875944283}"
  },
  102218: {
    "label": "NAD 1983 USFS R6 Albers",
    "defaultExtent": "{\"xmin\": -14696772.28667844, \"ymin\": -7747811.135773793, \"xmax\": 15896772.287395695, \"ymax\": 17022025.32318843}"
  },
  102219: {
    "label": "NAD 1983 Wisconsin TM US Ft",
    "defaultExtent": "{\"xmin\": -16734755.794607824, \"ymin\": -46216395.54261096, \"xmax\": 20146822.46127449, \"ymax\": 16820128.875944283}"
  },
  102220: {
    "label": "NAD 1983 HARN Wisconsin TM US Ft",
    "defaultExtent": "{\"xmin\": -16734755.794607824, \"ymin\": -46216395.54261096, \"xmax\": 20146822.46127449, \"ymax\": 16820128.875944283}"
  },
  102221: {
    "label": "Ocotepeque 1935 Costa Rica Lambert Norte",
    "defaultExtent": "{\"xmin\": -32289354.838139847, \"ymin\": -25894684.195865467, \"xmax\": 33289354.838247836, \"ymax\": 17805469.002091587}"
  },
  102222: {
    "label": "Ocotepeque 1935 Costa Rica Lambert Sur",
    "defaultExtent": "{\"xmin\": -30872473.62711328, \"ymin\": -25879795.201281738, \"xmax\": 31872473.627006613, \"ymax\": 18317355.63253177}"
  },
  102223: {
    "label": "WGS 1984 Costa Rica TM 90",
    "defaultExtent": "{\"xmin\": -5120763.767699433, \"ymin\": -9606785.535047522, \"xmax\": 6120763.767699435, \"ymax\": 9606785.535047516}"
  },
  102224: {
    "label": "MONREF 1997 UTM Zone 46N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767723998, \"ymax\": 9606785.534958888}"
  },
  102225: {
    "label": "MONREF 1997 UTM Zone 47N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102226: {
    "label": "MONREF 1997 UTM Zone 48N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102227: {
    "label": "MONREF 1997 UTM Zone 49N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767723998, \"ymax\": 9606785.534958888}"
  },
  102228: {
    "label": "MONREF 1997 UTM Zone 50N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102231: {
    "label": "Colombia West West Zone",
    "defaultExtent": "{\"xmin\": -4623255.480734327, \"ymin\": -9119484.269387636, \"xmax\": 6623255.480734327, \"ymax\": 10102378.580751536}"
  },
  102232: {
    "label": "Bogota Ciudad Bogota",
    "defaultExtent": "{\"xmin\": -5533168.709167723, \"ymin\": -10023533.2666936, \"xmax\": 5717838.46716772, \"ymax\": 9206014.244564943}"
  },
  102233: {
    "label": "MAGNA Ciudad Bogota",
    "defaultExtent": "{\"xmin\": -5532926.192861325, \"ymin\": -10022911.009680243, \"xmax\": 5717595.950861325, \"ymax\": 9206033.28641041}"
  },
  102237: {
    "label": "Pohnpei Az Eq 1971",
    "defaultExtent": "{\"xmin\": -19861844.54633803, \"ymin\": -19828399.419898856, \"xmax\": 20022090.186338037, \"ymax\": 19989897.35429427}"
  },
  102238: {
    "label": "Saipan Az Eq 1969",
    "defaultExtent": "{\"xmin\": -19892001.273059137, \"ymin\": -19860946.938133743, \"xmax\": 19992001.2749969, \"ymax\": 19960953.910620507}"
  },
  102239: {
    "label": "Guam Geodetic Triangulation Network 1963",
    "defaultExtent": "{\"xmin\": -19891987.28215754, \"ymin\": -19860466.667187892, \"xmax\": 19991987.283963747, \"ymax\": 19960472.988106012}"
  },
  102240: {
    "label": "Guam Geodetic Network 1993",
    "defaultExtent": "{\"xmin\": -5523012.972913157, \"ymin\": -10903656.911824899, \"xmax\": 5723012.972913173, \"ymax\": 8317602.661880766}"
  },
  102247: {
    "label": "NAD 1983 CORS96 Alaska Albers",
    "defaultExtent": "{\"xmin\": -13739219.699563079, \"ymin\": -8935188.356798925, \"xmax\": 13739219.70003071, \"ymax\": 17285625.557825744}"
  },
  102299: {
    "label": "Berghaus Star AAG",
    "defaultExtent": "{\"xmin\": -18581937.60944319, \"ymin\": -15895685.9825394, \"xmax\": 18581937.60944319, \"ymax\": 19451186.101466488}"
  },
  102306: {
    "label": "Nepal Nagarkot TM",
    "defaultExtent": "{\"xmin\": -5121649.590179002, \"ymin\": -9608524.981769733, \"xmax\": 6121649.590178999, \"ymax\": 9608524.98176973}"
  },
  102319: {
    "label": "CGRS 1993 LTM",
    "defaultExtent": "{\"xmin\": -5422731.822239945, \"ymin\": -13110149.255472958, \"xmax\": 5822731.822239944, \"ymax\": 6110149.255472954}"
  },
  102328: {
    "label": "ETRS 1989 UTM Zone 32N 7stellen",
    "defaultExtent": "{\"xmin\": -3120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 8120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102329: {
    "label": "ETRS 1989 UTM Zone 32N 8stellen",
    "defaultExtent": "{\"xmin\": 26879236.232276, \"ymin\": -9606785.534958892, \"xmax\": 38120763.767724, \"ymax\": 9606785.534958888}"
  },
  102359: {
    "label": "ETRS 1989 UTM Zone 33N 7stellen",
    "defaultExtent": "{\"xmin\": -2120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 9120763.767724, \"ymax\": 9606785.534958888}"
  },
  102360: {
    "label": "ETRS 1989 UTM Zone 33N 8stellen",
    "defaultExtent": "{\"xmin\": 27879236.232276, \"ymin\": -9606785.534958892, \"xmax\": 39120763.767724, \"ymax\": 9606785.534958888}"
  },
  102364: {
    "label": "NAD 1983 CORS96 UTM Zone 59N",
    "defaultExtent": "{\"xmin\": -5120763.76772398, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102365: {
    "label": "NAD 1983 CORS96 UTM Zone 60N",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102366: {
    "label": "NAD 1983 CORS96 StatePlane Alaska 1 FIPS 5001",
    "defaultExtent": "{\"xmin\": -25224974.639177933, \"ymin\": -35282627.68932256, \"xmax\": 37636719.54767623, \"ymax\": 23274307.150670152}"
  },
  102367: {
    "label": "NAD 1983 CORS96 StatePlane Alaska 2 FIPS 5002",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  102368: {
    "label": "NAD 1983 CORS96 StatePlane Alaska 3 FIPS 5003",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615885, \"ymax\": 3624351.287199251}"
  },
  102369: {
    "label": "NAD 1983 CORS96 StatePlane Alaska 4 FIPS 5004",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615885, \"ymax\": 3624351.287199251}"
  },
  102370: {
    "label": "NAD 1983 CORS96 StatePlane Alaska 5 FIPS 5005",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615885, \"ymax\": 3624351.287199251}"
  },
  102371: {
    "label": "NAD 1983 CORS96 StatePlane Alaska 6 FIPS 5006",
    "defaultExtent": "{\"xmin\": -5122450.671615858, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  102372: {
    "label": "NAD 1983 CORS96 StatePlane Alaska 7 FIPS 5007",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  102373: {
    "label": "NAD 1983 CORS96 StatePlane Alaska 8 FIPS 5008",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  102374: {
    "label": "NAD 1983 CORS96 StatePlane Alaska 9 FIPS 5009",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615886, \"ymax\": 3624351.287199251}"
  },
  102375: {
    "label": "NAD 1983 CORS96 StatePlane Alaska 10 FIPS 5010",
    "defaultExtent": "{\"xmin\": -34866236.36030873, \"ymin\": -30817495.97745897, \"xmax\": 36866236.36020292, \"ymax\": 33859948.69122673}"
  },
  102376: {
    "label": "NAD 1983 CORS96 StatePlane Oregon North FIPS 3601",
    "defaultExtent": "{\"xmin\": -33934395.67833442, \"ymin\": -29916770.9826887, \"xmax\": 38934395.67866903, \"ymax\": 28774826.90963382}"
  },
  102377: {
    "label": "NAD 1983 CORS96 StatePlane Oregon South FIPS 3602",
    "defaultExtent": "{\"xmin\": -35126017.07220474, \"ymin\": -29649727.834081486, \"xmax\": 38126017.072228044, \"ymax\": 27002732.65337064}"
  },
  102378: {
    "label": "NAD 1983 CORS96 StatePlane Oregon North FIPS 3601 Ft Intl",
    "defaultExtent": "{\"xmin\": -111333319.15464048, \"ymin\": -98152135.76997603, \"xmax\": 127737518.6308039, \"ymax\": 94405600.09722382}"
  },
  102379: {
    "label": "NAD 1983 CORS96 StatePlane Oregon South FIPS 3602 Ft Intl",
    "defaultExtent": "{\"xmin\": -115242838.16340137, \"ymin\": -97276009.95433559, \"xmax\": 125085357.8485172, \"ymax\": 88591642.56355196}"
  },
  102380: {
    "label": "NAD 1983 CORS96 Oregon Statewide Lambert",
    "defaultExtent": "{\"xmin\": -36115366.195192955, \"ymin\": -29681657.82664154, \"xmax\": 36915366.19580745, \"ymax\": 28096555.99768769}"
  },
  102381: {
    "label": "NAD 1983 CORS96 Oregon Statewide Lambert Ft Intl",
    "defaultExtent": "{\"xmin\": -118488734.23619735, \"ymin\": -97380767.14777409, \"xmax\": 121113406.1542239, \"ymax\": 92180301.82968402}"
  },
  102382: {
    "label": "NAD 1983 2011 UTM Zone 13N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102383: {
    "label": "NAD 1983 2011 UTM Zone 14N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102384: {
    "label": "NAD 1983 2011 UTM Zone 15N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102385: {
    "label": "NAD 1983 2011 UTM Zone 16N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958893, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102386: {
    "label": "NAD 1983 2011 UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102387: {
    "label": "NAD 1983 2011 UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102388: {
    "label": "NAD 1983 2011 UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102389: {
    "label": "NAD 1983 Fargo Ground Coordinate System",
    "defaultExtent": "{\"xmin\": -100235394.51936483, \"ymin\": -82178529.15795694, \"xmax\": 113167737.30149743, \"ymax\": 48605352.35735963}"
  },
  102390: {
    "label": "NAD 1983 HARN Fargo Ground Coordinate System",
    "defaultExtent": "{\"xmin\": -100235394.51936483, \"ymin\": -82178529.15795694, \"xmax\": 113167737.30149743, \"ymax\": 48605352.35735963}"
  },
  102391: {
    "label": "NAD 1983 2011 Fargo Ground Coordinate System",
    "defaultExtent": "{\"xmin\": -100235394.51936483, \"ymin\": -82178529.15795694, \"xmax\": 113167737.30149743, \"ymax\": 48605352.35735963}"
  },
  102401: {
    "label": "NAD 1983 CORS96 UTM Zone 1N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102402: {
    "label": "NAD 1983 CORS96 UTM Zone 2N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102403: {
    "label": "NAD 1983 CORS96 UTM Zone 3N",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102404: {
    "label": "NAD 1983 CORS96 UTM Zone 4N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724011, \"ymax\": 9606785.534938097}"
  },
  102405: {
    "label": "NAD 1983 CORS96 UTM Zone 5N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102406: {
    "label": "NAD 1983 CORS96 UTM Zone 6N",
    "defaultExtent": "{\"xmin\": -5120763.767723984, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102407: {
    "label": "NAD 1983 CORS96 UTM Zone 7N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724011, \"ymax\": 9606785.534938097}"
  },
  102408: {
    "label": "NAD 1983 CORS96 UTM Zone 8N",
    "defaultExtent": "{\"xmin\": -5120761.968321789, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102409: {
    "label": "NAD 1983 CORS96 UTM Zone 9N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102410: {
    "label": "NAD 1983 CORS96 UTM Zone 10N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724002, \"ymax\": 9606785.534958888}"
  },
  102411: {
    "label": "NAD 1983 CORS96 UTM Zone 11N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102412: {
    "label": "NAD 1983 CORS96 UTM Zone 12N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102413: {
    "label": "NAD 1983 CORS96 UTM Zone 13N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102414: {
    "label": "NAD 1983 CORS96 UTM Zone 14N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102415: {
    "label": "NAD 1983 CORS96 UTM Zone 15N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102416: {
    "label": "NAD 1983 CORS96 UTM Zone 16N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958893, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102417: {
    "label": "NAD 1983 CORS96 UTM Zone 17N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102418: {
    "label": "NAD 1983 CORS96 UTM Zone 18N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102419: {
    "label": "NAD 1983 CORS96 UTM Zone 19N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102421: {
    "label": "WGS 1984 ARC System Zone 01",
    "defaultExtent": "{\"xmin\": -18451731.755464125, \"ymin\": -9467848.237116976, \"xmax\": 18451731.755464125, \"ymax\": 9467848.237116976}"
  },
  102422: {
    "label": "WGS 1984 ARC System Zone 02",
    "defaultExtent": "{\"xmin\": -15093363.999496877, \"ymin\": -9467848.237116976, \"xmax\": 15093363.999496877, \"ymax\": 9467848.237116976}"
  },
  102423: {
    "label": "WGS 1984 ARC System Zone 03",
    "defaultExtent": "{\"xmin\": -12256631.820519533, \"ymin\": -9467848.237116976, \"xmax\": 12256631.820519533, \"ymax\": 9467848.237116976}"
  },
  102424: {
    "label": "WGS 1984 ARC System Zone 04",
    "defaultExtent": "{\"xmin\": -9920529.006921647, \"ymin\": -9467848.237116976, \"xmax\": 9920529.006921647, \"ymax\": 9467848.237116976}"
  },
  102425: {
    "label": "WGS 1984 ARC System Zone 05",
    "defaultExtent": "{\"xmin\": -8119876.167358154, \"ymin\": -9467848.237116976, \"xmax\": 8119876.167358154, \"ymax\": 9467848.237116976}"
  },
  102426: {
    "label": "WGS 1984 ARC System Zone 06",
    "defaultExtent": "{\"xmin\": -6817410.319238347, \"ymin\": -9467848.237116976, \"xmax\": 6817410.319238347, \"ymax\": 9467848.237116976}"
  },
  102427: {
    "label": "WGS 1984 ARC System Zone 07",
    "defaultExtent": "{\"xmin\": -5478594.618995053, \"ymin\": -9467848.237116976, \"xmax\": 5478594.618995053, \"ymax\": 9467848.237116976}"
  },
  102428: {
    "label": "WGS 1984 ARC System Zone 08",
    "defaultExtent": "{\"xmin\": -4106889.16086334, \"ymin\": -9467848.237116976, \"xmax\": 4106889.16086334, \"ymax\": 9467848.237116976}"
  },
  102429: {
    "label": "WGS 1984 ARC System Zone 09",
    "defaultExtent": "{\"xmin\": -19451186.10240804, \"ymin\": -19451186.102408137, \"xmax\": 19451186.10240804, \"ymax\": 19451186.10240775}"
  },
  102430: {
    "label": "WGS 1984 ARC System Zone 10",
    "defaultExtent": "{\"xmin\": -18451731.755464125, \"ymin\": -9467848.237116976, \"xmax\": 18451731.755464125, \"ymax\": 9467848.237116976}"
  },
  102431: {
    "label": "WGS 1984 ARC System Zone 11",
    "defaultExtent": "{\"xmin\": -15093363.999496877, \"ymin\": -9467848.237116976, \"xmax\": 15093363.999496877, \"ymax\": 9467848.237116976}"
  },
  102432: {
    "label": "WGS 1984 ARC System Zone 12",
    "defaultExtent": "{\"xmin\": -12256631.820519533, \"ymin\": -9467848.237116976, \"xmax\": 12256631.820519533, \"ymax\": 9467848.237116976}"
  },
  102433: {
    "label": "WGS 1984 ARC System Zone 13",
    "defaultExtent": "{\"xmin\": -9920529.006921647, \"ymin\": -9467848.237116976, \"xmax\": 9920529.006921647, \"ymax\": 9467848.237116976}"
  },
  102434: {
    "label": "WGS 1984 ARC System Zone 14",
    "defaultExtent": "{\"xmin\": -8119876.167358154, \"ymin\": -9467848.237116976, \"xmax\": 8119876.167358154, \"ymax\": 9467848.237116976}"
  },
  102435: {
    "label": "WGS 1984 ARC System Zone 15",
    "defaultExtent": "{\"xmin\": -6817410.319238347, \"ymin\": -9467848.237116976, \"xmax\": 6817410.319238347, \"ymax\": 9467848.237116976}"
  },
  102436: {
    "label": "WGS 1984 ARC System Zone 16",
    "defaultExtent": "{\"xmin\": -5478594.618995053, \"ymin\": -9467848.237116976, \"xmax\": 5478594.618995053, \"ymax\": 9467848.237116976}"
  },
  102437: {
    "label": "WGS 1984 ARC System Zone 17",
    "defaultExtent": "{\"xmin\": -4106889.16086334, \"ymin\": -9467848.237116976, \"xmax\": 4106889.16086334, \"ymax\": 9467848.237116976}"
  },
  102438: {
    "label": "WGS 1984 ARC System Zone 18",
    "defaultExtent": "{\"xmin\": -19451186.10240804, \"ymin\": -19451186.10240775, \"xmax\": 19451186.10240804, \"ymax\": 19451186.102408137}"
  },
  102440: {
    "label": "LKS 1992 Latvia TM 0",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767723999, \"ymax\": 9606785.534958888}"
  },
  102450: {
    "label": "NGO 1948 Oslo Baerum Kommune",
    "defaultExtent": "{\"xmin\": -5602430.024341378, \"ymin\": -16243397.777911408, \"xmax\": 5642428.664341379, \"ymax\": 2976026.3585127923}"
  },
  102451: {
    "label": "NGO 1948 Oslo Bergenhalvoen",
    "defaultExtent": "{\"xmin\": -5522429.344341379, \"ymin\": -16240419.987911409, \"xmax\": 5722429.344341379, \"ymax\": 2979004.1485127923}"
  },
  102452: {
    "label": "NGO 1948 Oslo Oslo Kommune",
    "defaultExtent": "{\"xmin\": -5622429.344341379, \"ymin\": -16253399.167911408, \"xmax\": 5622429.344341379, \"ymax\": 2966024.968512792}"
  },
  102461: {
    "label": "NAD 1983 HARN StatePlane Hawaii 1 FIPS 5101 Feet",
    "defaultExtent": "{\"xmin\": -16807136.789686047, \"ymin\": -38364292.03130892, \"xmax\": 20087970.123019453, \"ymax\": 24695355.02845315}"
  },
  102462: {
    "label": "NAD 1983 HARN StatePlane Hawaii 2 FIPS 5102 Feet",
    "defaultExtent": "{\"xmin\": -16807136.789857857, \"ymin\": -38909052.224359296, \"xmax\": 20087970.12284765, \"ymax\": 24150594.83541766}"
  },
  102464: {
    "label": "NAD 1983 HARN StatePlane Hawaii 4 FIPS 5104 Feet",
    "defaultExtent": "{\"xmin\": -16807567.246948577, \"ymin\": -39454826.42594335, \"xmax\": 20088400.580282014, \"ymax\": 23606292.074631467}"
  },
  102465: {
    "label": "NAD 1983 HARN StatePlane Hawaii 5 FIPS 5105 Feet",
    "defaultExtent": "{\"xmin\": -16807751.72880437, \"ymin\": -39394674.88557028, \"xmax\": 20088585.06179416, \"ymax\": 23667074.23251061}"
  },
  102470: {
    "label": "Cape Lo15",
    "defaultExtent": "{\"xmin\": -5623193.699727823, \"ymin\": -9610503.472333794, \"xmax\": 5623193.699727823, \"ymax\": 9610503.4723338}"
  },
  102471: {
    "label": "Cape Lo17",
    "defaultExtent": "{\"xmin\": -5623193.699727823, \"ymin\": -9610503.472333794, \"xmax\": 5623193.699727823, \"ymax\": 9610503.4723338}"
  },
  102472: {
    "label": "Cape Lo19",
    "defaultExtent": "{\"xmin\": -5623193.699727823, \"ymin\": -9610503.472333794, \"xmax\": 5623193.699727823, \"ymax\": 9610503.4723338}"
  },
  102473: {
    "label": "Cape Lo21",
    "defaultExtent": "{\"xmin\": -5623193.699727823, \"ymin\": -9610503.472333794, \"xmax\": 5623193.699727823, \"ymax\": 9610503.4723338}"
  },
  102474: {
    "label": "Cape Lo23",
    "defaultExtent": "{\"xmin\": -5623193.69972782, \"ymin\": -9610503.472333794, \"xmax\": 5623193.699727823, \"ymax\": 9610503.4723338}"
  },
  102475: {
    "label": "Cape Lo25",
    "defaultExtent": "{\"xmin\": -5623193.699727823, \"ymin\": -9610503.472333794, \"xmax\": 5623193.699727823, \"ymax\": 9610503.4723338}"
  },
  102476: {
    "label": "Cape Lo27",
    "defaultExtent": "{\"xmin\": -5623193.699727823, \"ymin\": -9610503.472333794, \"xmax\": 5623193.699727823, \"ymax\": 9610503.4723338}"
  },
  102477: {
    "label": "Cape Lo29",
    "defaultExtent": "{\"xmin\": -5623193.699727823, \"ymin\": -9610503.472333794, \"xmax\": 5623193.699727823, \"ymax\": 9610503.4723338}"
  },
  102478: {
    "label": "Cape Lo31",
    "defaultExtent": "{\"xmin\": -5623193.699727825, \"ymin\": -9610503.472333794, \"xmax\": 5623193.699727823, \"ymax\": 9610503.4723338}"
  },
  102479: {
    "label": "Cape Lo33",
    "defaultExtent": "{\"xmin\": -5623193.699727822, \"ymin\": -9610503.472333794, \"xmax\": 5623193.699727823, \"ymax\": 9610503.4723338}"
  },
  102480: {
    "label": "Hartebeesthoek94 Lo15",
    "defaultExtent": "{\"xmin\": -5623012.972888589, \"ymin\": -9610629.7869623, \"xmax\": 5623012.972888589, \"ymax\": 9610629.786962306}"
  },
  102481: {
    "label": "Hartebeesthoek94 Lo17",
    "defaultExtent": "{\"xmin\": -5623012.972888589, \"ymin\": -9610629.7869623, \"xmax\": 5623012.972888589, \"ymax\": 9610629.786962306}"
  },
  102482: {
    "label": "Hartebeesthoek94 Lo19",
    "defaultExtent": "{\"xmin\": -5623012.972888589, \"ymin\": -9610629.7869623, \"xmax\": 5623012.972888589, \"ymax\": 9610629.786962306}"
  },
  102483: {
    "label": "Hartebeesthoek94 Lo21",
    "defaultExtent": "{\"xmin\": -5623012.972888589, \"ymin\": -9610629.7869623, \"xmax\": 5623012.972888589, \"ymax\": 9610629.786962306}"
  },
  102484: {
    "label": "Hartebeesthoek94 Lo23",
    "defaultExtent": "{\"xmin\": -5623012.972888586, \"ymin\": -9610629.7869623, \"xmax\": 5623012.972888589, \"ymax\": 9610629.786962306}"
  },
  102485: {
    "label": "Hartebeesthoek94 Lo25",
    "defaultExtent": "{\"xmin\": -5623012.972888589, \"ymin\": -9610629.7869623, \"xmax\": 5623012.972888589, \"ymax\": 9610629.786962306}"
  },
  102486: {
    "label": "Hartebeesthoek94 Lo27",
    "defaultExtent": "{\"xmin\": -5623012.972888589, \"ymin\": -9610629.7869623, \"xmax\": 5623012.972888589, \"ymax\": 9610629.786962306}"
  },
  102487: {
    "label": "Hartebeesthoek94 Lo29",
    "defaultExtent": "{\"xmin\": -5623012.972888589, \"ymin\": -9610629.7869623, \"xmax\": 5623012.972888589, \"ymax\": 9610629.786962306}"
  },
  102488: {
    "label": "Hartebeesthoek94 Lo31",
    "defaultExtent": "{\"xmin\": -5623012.97288859, \"ymin\": -9610629.7869623, \"xmax\": 5623012.972888589, \"ymax\": 9610629.786962306}"
  },
  102489: {
    "label": "Hartebeesthoek94 Lo33",
    "defaultExtent": "{\"xmin\": -5623012.972888588, \"ymin\": -9610629.7869623, \"xmax\": 5623012.972888589, \"ymax\": 9610629.786962306}"
  },
  102491: {
    "label": "Nord Algerie Ancienne Degree",
    "defaultExtent": "{\"xmin\": -37094490.67083504, \"ymin\": -28508539.130123466, \"xmax\": 38094490.67078953, \"ymax\": 19323033.9283213}"
  },
  102492: {
    "label": "Sud Algerie Ancienne Degree",
    "defaultExtent": "{\"xmin\": -37644652.570998244, \"ymin\": -28128361.97527217, \"xmax\": 38644652.571257345, \"ymax\": 15867737.975734096}"
  },
  102500: {
    "label": "OCRS Baker NAD 1983 CORS96 TM Feet Intl",
    "defaultExtent": "{\"xmin\": -18319923.408756007, \"ymin\": -47711079.79111914, \"xmax\": 18582390.600357056, \"ymax\": 15360885.350872582}"
  },
  102501: {
    "label": "OCRS Bend-Burns NAD 1983 CORS96 LCC Feet Intl",
    "defaultExtent": "{\"xmin\": -119638728.38533331, \"ymin\": -97873161.4050427, \"xmax\": 120426129.95942643, \"ymax\": 89771410.74817415}"
  },
  102502: {
    "label": "OCRS Bend-Klamath Falls NAD 1983 CORS96 TM Feet Intl",
    "defaultExtent": "{\"xmin\": -18189427.74116715, \"ymin\": -46710452.26979232, \"xmax\": 18714362.124369252, \"ymax\": 16364035.347209075}"
  },
  102503: {
    "label": "OCRS Bend-Redmond-Prineville NAD 1983 CORS96 LCC Feet Intl",
    "defaultExtent": "{\"xmin\": -119446142.89505278, \"ymin\": -98073895.54285371, \"xmax\": 119971077.27853593, \"ymax\": 92901549.22119384}"
  },
  102504: {
    "label": "OCRS Canyonville-Grants Pass NAD 1983 CORS96 TM Feet Intl",
    "defaultExtent": "{\"xmin\": -18318263.07027975, \"ymin\": -46977716.48073008, \"xmax\": 18580730.261880796, \"ymax\": 16088573.09248987}"
  },
  102505: {
    "label": "OCRS Columbia River East NAD 1983 CORS96 LCC Feet Intl",
    "defaultExtent": "{\"xmin\": -118908952.32841167, \"ymin\": -98823123.67372929, \"xmax\": 119893204.29886703, \"ymax\": 95316369.30990608}"
  },
  102506: {
    "label": "OCRS Columbia River West NAD 1983 CORS96 OM Feet Intl",
    "defaultExtent": "{\"xmin\": -61024704.34177867, \"ymin\": -119681127.84266053, \"xmax\": 109250959.08341469, \"ymax\": 94689924.24128178}"
  },
  102507: {
    "label": "OCRS Cottage Grove-Canyonville NAD 1983 CORS96 TM Feet Intl",
    "defaultExtent": "{\"xmin\": -18284587.605680913, \"ymin\": -47096996.87176883, \"xmax\": 18612671.595182218, \"ymax\": 15966328.793314748}"
  },
  102508: {
    "label": "OCRS Dufur-Madras NAD 1983 CORS96 TM Feet Intl",
    "defaultExtent": "{\"xmin\": -18187767.4026909, \"ymin\": -47708694.618757166, \"xmax\": 18712701.785892997, \"ymax\": 15360117.429472463}"
  },
  102509: {
    "label": "OCRS Eugene NAD 1983 CORS96 TM Feet Intl",
    "defaultExtent": "{\"xmin\": -18284440.02003858, \"ymin\": -47430746.57526374, \"xmax\": 18612524.00953989, \"ymax\": 15632074.5948179}"
  },
  102510: {
    "label": "OCRS Grants Pass-Ashland NAD 1983 CORS96 TM Feet Intl",
    "defaultExtent": "{\"xmin\": -18284956.569786742, \"ymin\": -46703120.19520088, \"xmax\": 18613040.55928805, \"ymax\": 16361466.70738753}"
  },
  102511: {
    "label": "OCRS Gresham-Warm Springs NAD 1983 CORS96 TM Feet Intl",
    "defaultExtent": "{\"xmin\": -18416319.303024314, \"ymin\": -47888136.29737491, \"xmax\": 18481936.10092457, \"ymax\": 15176892.038340196}"
  },
  102512: {
    "label": "OCRS La Grande NAD 1983 CORS96 TM Feet Intl",
    "defaultExtent": "{\"xmin\": -18319369.962597255, \"ymin\": -47891967.156735726, \"xmax\": 18581837.154198304, \"ymax\": 15178106.12899873}"
  },
  102513: {
    "label": "OCRS Ontario NAD 1983 CORS96 TM Feet Intl",
    "defaultExtent": "{\"xmin\": -18187582.920637976, \"ymin\": -47252505.1711826, \"xmax\": 18712517.30384008, \"ymax\": 15815676.258294597}"
  },
  102514: {
    "label": "OCRS Oregon Coast NAD 1983 CORS96 OM Feet Intl",
    "defaultExtent": "{\"xmin\": -106076238.07579784, \"ymin\": -83317173.51742797, \"xmax\": 108582448.7197009, \"ymax\": 52420717.27563217}"
  },
  102515: {
    "label": "OCRS Pendleton-La Grande NAD 1983 CORS96 TM Feet Intl",
    "defaultExtent": "{\"xmin\": -18353008.530785512, \"ymin\": -47924511.352364, \"xmax\": 18549858.9244863, \"ymax\": 15148399.717756351}"
  },
  102516: {
    "label": "OCRS Pendleton NAD 1983 CORS96 TM Feet Intl",
    "defaultExtent": "{\"xmin\": -18252185.0672472, \"ymin\": -47979054.36642713, \"xmax\": 18645885.854648773, \"ymax\": 15085658.659911765}"
  },
  102517: {
    "label": "OCRS Portland NAD 1983 CORS96 LCC Feet Intl",
    "defaultExtent": "{\"xmin\": -119120009.16551045, \"ymin\": -98685329.17476103, \"xmax\": 119776177.1444463, \"ymax\": 94933290.90002361}"
  },
  102518: {
    "label": "OCRS Salem NAD 1983 CORS96 TM Feet Intl",
    "defaultExtent": "{\"xmin\": -18284347.779012118, \"ymin\": -47643162.30400496, \"xmax\": 18612431.76851343, \"ymax\": 15419343.556700477}"
  },
  102519: {
    "label": "OCRS Santiam Pass NAD 1983 CORS96 TM Feet Intl",
    "defaultExtent": "{\"xmin\": -18451064.76353007, \"ymin\": -47558917.6609738, \"xmax\": 18451064.76353007, \"ymax\": 15512732.1716417}"
  },
  102530: {
    "label": "OCRS Baker NAD 1983 CORS96 TM Meters",
    "defaultExtent": "{\"xmin\": -5583912.654988831, \"ymin\": -14542337.120333115, \"xmax\": 5663912.654988831, \"ymax\": 4681997.854945963}"
  },
  102531: {
    "label": "OCRS Bend-Burns NAD 1983 CORS96 LCC Meters",
    "defaultExtent": "{\"xmin\": -36465884.411849596, \"ymin\": -29831739.596257016, \"xmax\": 36705884.41163318, \"ymax\": 27362325.99604348}"
  },
  102532: {
    "label": "OCRS Bend-Klamath Falls NAD 1983 CORS96 TM Meters",
    "defaultExtent": "{\"xmin\": -5544137.575507748, \"ymin\": -14237345.851832699, \"xmax\": 5704137.575507748, \"ymax\": 4987757.973829326}"
  },
  102533: {
    "label": "OCRS Bend-Redmond-Prineville NAD 1983 CORS96 LCC Meters",
    "defaultExtent": "{\"xmin\": -36407184.35441209, \"ymin\": -29892923.361461814, \"xmax\": 36567184.35449775, \"ymax\": 28316392.202619884}"
  },
  102534: {
    "label": "OCRS Canyonville-Grants Pass NAD 1983 CORS96 TM Meters",
    "defaultExtent": "{\"xmin\": -5583406.583821269, \"ymin\": -14318807.983326528, \"xmax\": 5663406.583821267, \"ymax\": 4903797.078590913}"
  },
  102535: {
    "label": "OCRS Columbia River East NAD 1983 CORS96 LCC Meters",
    "defaultExtent": "{\"xmin\": -36243448.66969988, \"ymin\": -30121288.095752686, \"xmax\": 36543448.67029467, \"ymax\": 29052429.365659375}"
  },
  102536: {
    "label": "OCRS Columbia River West NAD 1983 CORS96 OM Meters",
    "defaultExtent": "{\"xmin\": -18600329.88337414, \"ymin\": -36478807.76644293, \"xmax\": 33299692.3286248, \"ymax\": 28861488.90874269}"
  },
  102537: {
    "label": "OCRS Cottage Grove-Canyonville NAD 1983 CORS96 TM Meters",
    "defaultExtent": "{\"xmin\": -5573142.302211543, \"ymin\": -14355164.64651514, \"xmax\": 5673142.302211541, \"ymax\": 4866537.016202335}"
  },
  102538: {
    "label": "OCRS Dufur-Madras NAD 1983 CORS96 TM Meters",
    "defaultExtent": "{\"xmin\": -5543631.504340186, \"ymin\": -14541610.119797185, \"xmax\": 5703631.504340186, \"ymax\": 4681763.792503207}"
  },
  102539: {
    "label": "OCRS Eugene NAD 1983 CORS96 TM Meters",
    "defaultExtent": "{\"xmin\": -5573097.31810776, \"ymin\": -14456891.55614039, \"xmax\": 5673097.31810776, \"ymax\": 4764656.336500496}"
  },
  102540: {
    "label": "OCRS Grants Pass-Ashland NAD 1983 CORS96 TM Meters",
    "defaultExtent": "{\"xmin\": -5573254.762471, \"ymin\": -14235111.03549723, \"xmax\": 5673254.762470998, \"ymax\": 4986975.052411719}"
  },
  102541: {
    "label": "OCRS Gresham-Warm Springs NAD 1983 CORS96 TM Meters",
    "defaultExtent": "{\"xmin\": -5613294.123561812, \"ymin\": -14596303.943439875, \"xmax\": 5633294.12356181, \"ymax\": 4625916.693286092}"
  },
  102542: {
    "label": "OCRS La Grande NAD 1983 CORS96 TM Meters",
    "defaultExtent": "{\"xmin\": -5583743.964599644, \"ymin\": -14597471.58937305, \"xmax\": 5663743.964599644, \"ymax\": 4626286.748118813}"
  },
  102543: {
    "label": "OCRS Ontario NAD 1983 CORS96 TM Meters",
    "defaultExtent": "{\"xmin\": -5543575.274210456, \"ymin\": -14402563.576176459, \"xmax\": 5703575.274210456, \"ymax\": 4820618.123528194}"
  },
  102544: {
    "label": "OCRS Oregon Coast NAD 1983 CORS96 OM Meters",
    "defaultExtent": "{\"xmin\": -32332037.365503184, \"ymin\": -25395074.488112047, \"xmax\": 33095930.369764816, \"ymax\": 15977834.625612691}"
  },
  102545: {
    "label": "OCRS Pendleton-La Grande NAD 1983 CORS96 TM Meters",
    "defaultExtent": "{\"xmin\": -5593997.000183425, \"ymin\": -14607391.06020055, \"xmax\": 5653997.000183425, \"ymax\": 4617232.233972136}"
  },
  102546: {
    "label": "OCRS Pendleton NAD 1983 CORS96 TM Meters",
    "defaultExtent": "{\"xmin\": -5563266.008496947, \"ymin\": -14624015.770886991, \"xmax\": 5683266.008496947, \"ymax\": 4598108.759541106}"
  },
  102547: {
    "label": "OCRS Portland NAD 1983 CORS96 LCC Meters",
    "defaultExtent": "{\"xmin\": -36307778.79364759, \"ymin\": -30079288.33246716, \"xmax\": 36507778.79330929, \"ymax\": 28935667.066327196}"
  },
  102548: {
    "label": "OCRS Salem NAD 1983 CORS96 TM Meters",
    "defaultExtent": "{\"xmin\": -5573069.203042894, \"ymin\": -14521635.870260712, \"xmax\": 5673069.203042894, \"ymax\": 4699815.916082306}"
  },
  102549: {
    "label": "OCRS Santiam Pass NAD 1983 CORS96 TM Meters",
    "defaultExtent": "{\"xmin\": -5623884.539923966, \"ymin\": -14495958.103064816, \"xmax\": 5623884.539923966, \"ymax\": 4728280.76591639}"
  },
  102570: {
    "label": "WGS 1984 Complex UTM Zone 20N",
    "defaultExtent": "{\"xmin\": -15407901.093871329, \"ymin\": -9901788.062290225, \"xmax\": 16407901.093871314, \"ymax\": 9901788.062290225}"
  },
  102571: {
    "label": "WGS 1984 Complex UTM Zone 21N",
    "defaultExtent": "{\"xmin\": -15407901.093871329, \"ymin\": -9901788.062290225, \"xmax\": 16407901.093871314, \"ymax\": 9901788.062290225}"
  },
  102572: {
    "label": "WGS 1984 Complex UTM Zone 22N",
    "defaultExtent": "{\"xmin\": -15407901.093871297, \"ymin\": -9901788.062290225, \"xmax\": 16407901.093871314, \"ymax\": 9901788.062290225}"
  },
  102573: {
    "label": "WGS 1984 Complex UTM Zone 23N",
    "defaultExtent": "{\"xmin\": -15407901.093871329, \"ymin\": -9901788.062290225, \"xmax\": 16407901.093871314, \"ymax\": 9901788.062290225}"
  },
  102574: {
    "label": "WGS 1984 Complex UTM Zone 24N",
    "defaultExtent": "{\"xmin\": -15407901.093871329, \"ymin\": -9901788.062290225, \"xmax\": 16407901.093871314, \"ymax\": 9901788.062290225}"
  },
  102575: {
    "label": "WGS 1984 Complex UTM Zone 25N",
    "defaultExtent": "{\"xmin\": -15407901.093871297, \"ymin\": -9901788.062290225, \"xmax\": 16407901.093871314, \"ymax\": 9901788.062290225}"
  },
  102576: {
    "label": "WGS 1984 Complex UTM Zone 26N",
    "defaultExtent": "{\"xmin\": -15407901.093871329, \"ymin\": -9901788.062290225, \"xmax\": 16407901.093871314, \"ymax\": 9901788.062290225}"
  },
  102577: {
    "label": "WGS 1984 Complex UTM Zone 27N",
    "defaultExtent": "{\"xmin\": -15407901.093871329, \"ymin\": -9901788.062290225, \"xmax\": 16407901.093871314, \"ymax\": 9901788.062290225}"
  },
  102578: {
    "label": "WGS 1984 Complex UTM Zone 28N",
    "defaultExtent": "{\"xmin\": -15407901.093871297, \"ymin\": -9901788.062290225, \"xmax\": 16407901.093871314, \"ymax\": 9901788.062290225}"
  },
  102579: {
    "label": "WGS 1984 Complex UTM Zone 29N",
    "defaultExtent": "{\"xmin\": -15407901.093871329, \"ymin\": -9901788.062290225, \"xmax\": 16407901.093871314, \"ymax\": 9901788.062290225}"
  },
  102580: {
    "label": "WGS 1984 Complex UTM Zone 30N",
    "defaultExtent": "{\"xmin\": -15407901.093871329, \"ymin\": -9901788.062290225, \"xmax\": 16407901.093871295, \"ymax\": 9901788.062290225}"
  },
  102581: {
    "label": "NTF France I degrees",
    "defaultExtent": "{\"xmin\": -35485896.991476975, \"ymin\": -29428280.31174537, \"xmax\": 36685896.99143446, \"ymax\": 32994583.358365063}"
  },
  102582: {
    "label": "NTF France II degrees",
    "defaultExtent": "{\"xmin\": -35690513.61572032, \"ymin\": -28090817.847528167, \"xmax\": 36890513.615681395, \"ymax\": 32110710.05609012}"
  },
  102583: {
    "label": "NTF France III degrees",
    "defaultExtent": "{\"xmin\": -35928901.73456383, \"ymin\": -26736996.66156521, \"xmax\": 37128901.73917271, \"ymax\": 30881827.25767343}"
  },
  102584: {
    "label": "NTF France IV degrees",
    "defaultExtent": "{\"xmin\": -36730543.38940598, \"ymin\": -25491616.205146648, \"xmax\": 36731012.105471246, \"ymax\": 30062431.501449645}"
  },
  102585: {
    "label": "NTF Lambert Zone I",
    "defaultExtent": "{\"xmin\": -35485896.991476975, \"ymin\": -29428280.31174537, \"xmax\": 36685896.99143446, \"ymax\": 32994583.358365063}"
  },
  102586: {
    "label": "NTF Lambert Zone II",
    "defaultExtent": "{\"xmin\": -35690513.61572032, \"ymin\": -28090817.847528167, \"xmax\": 36890513.615681395, \"ymax\": 32110710.05609012}"
  },
  102587: {
    "label": "NTF Lambert Zone III",
    "defaultExtent": "{\"xmin\": -35928901.73456383, \"ymin\": -26736996.66156521, \"xmax\": 37128901.73917271, \"ymax\": 30881827.25767343}"
  },
  102588: {
    "label": "NTF Lambert Zone IV",
    "defaultExtent": "{\"xmin\": -36730543.38940598, \"ymin\": -25491616.205146648, \"xmax\": 36731012.105471246, \"ymax\": 30062431.501449645}"
  },
  102589: {
    "label": "Panhandle Energy Albers",
    "defaultExtent": "{\"xmin\": -56502695.41768322, \"ymin\": -23675443.51439447, \"xmax\": 56502695.41776468, \"ymax\": 47835140.66649554}"
  },
  102590: {
    "label": "Tananarive 1925 Laborde Grid",
    "defaultExtent": "{\"xmin\": -7929529.190219833, \"ymin\": -6100528.54577323, \"xmax\": 8729530.414381389, \"ymax\": 7700528.545773239}"
  },
  102591: {
    "label": "Nord Algerie Degree",
    "defaultExtent": "{\"xmin\": -37094354.69597727, \"ymin\": -28508448.195068896, \"xmax\": 38094624.69593176, \"ymax\": 19323123.623061676}"
  },
  102592: {
    "label": "Sud Algerie Degree",
    "defaultExtent": "{\"xmin\": -37644516.63147091, \"ymin\": -28128271.084845144, \"xmax\": 38644786.63173002, \"ymax\": 15867827.782508884}"
  },
  102593: {
    "label": "JGD 2011 UTM Zone 51N",
    "defaultExtent": "{\"xmin\": -5120763.767724002, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102594: {
    "label": "JGD 2011 UTM Zone 52N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  102595: {
    "label": "JGD 2011 UTM Zone 53N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958888, \"xmax\": 6120761.968321789, \"ymax\": 9606785.534958888}"
  },
  102596: {
    "label": "JGD 2011 UTM Zone 54N",
    "defaultExtent": "{\"xmin\": -5120763.767723992, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102597: {
    "label": "JGD 2011 UTM Zone 55N",
    "defaultExtent": "{\"xmin\": -5120763.767723991, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102598: {
    "label": "JGD 2011 UTM Zone 56N",
    "defaultExtent": "{\"xmin\": -5120763.767723991, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102599: {
    "label": "WGS 1984 California Teale Albers FtUS",
    "defaultExtent": "{\"xmin\": -55428284.98062813, \"ymin\": -19032372.612179775, \"xmax\": 55428284.98033971, \"ymax\": 54239919.62005681}"
  },
  102600: {
    "label": "NAD 1983 California Teale Albers FtUS",
    "defaultExtent": "{\"xmin\": -55428284.98036675, \"ymin\": -19032372.612076882, \"xmax\": 55428284.98007833, \"ymax\": 54239919.61982289}"
  },
  102604: {
    "label": "NAD 1983 Georgia Statewide Lambert",
    "defaultExtent": "{\"xmin\": -125510187.83967526, \"ymin\": -80511630.22611117, \"xmax\": 125510187.83785972, \"ymax\": 61706317.12487821}"
  },
  102605: {
    "label": "NAD 1983 Idaho TM",
    "defaultExtent": "{\"xmin\": -3120763.767724001, \"ymin\": -13056561.759661576, \"xmax\": 8120763.767724002, \"ymax\": 6157009.310256204}"
  },
  102610: {
    "label": "JGD 2011 Japan Zone 1",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -13262051.49216574, \"xmax\": 5622450.671615874, \"ymax\": 5957285.955624162}"
  },
  102611: {
    "label": "JGD 2011 Japan Zone 2",
    "defaultExtent": "{\"xmin\": -5622450.671615875, \"ymin\": -13262051.49216574, \"xmax\": 5622450.671615874, \"ymax\": 5957285.955624163}"
  },
  102612: {
    "label": "JGD 2011 Japan Zone 3",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -13594812.839924177, \"xmax\": 5622450.671615878, \"ymax\": 5624524.607865727}"
  },
  102613: {
    "label": "JGD 2011 Japan Zone 4",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -13262051.49216574, \"xmax\": 5622450.671615874, \"ymax\": 5957285.955624162}"
  },
  102614: {
    "label": "JGD 2011 Japan Zone 5",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -13594812.839924177, \"xmax\": 5622450.671615874, \"ymax\": 5624524.607865727}"
  },
  102615: {
    "label": "JGD 2011 Japan Zone 6",
    "defaultExtent": "{\"xmin\": -5622450.671615865, \"ymin\": -13594812.839903364, \"xmax\": 5622450.671615874, \"ymax\": 5624524.60784493}"
  },
  102616: {
    "label": "JGD 2011 Japan Zone 7",
    "defaultExtent": "{\"xmin\": -5622450.671563503, \"ymin\": -13594812.839905635, \"xmax\": 5622450.671668238, \"ymax\": 5624524.607847202}"
  },
  102617: {
    "label": "JGD 2011 Japan Zone 8",
    "defaultExtent": "{\"xmin\": -5622450.671615865, \"ymin\": -13594812.839903364, \"xmax\": 5622450.671615882, \"ymax\": 5624524.607844931}"
  },
  102618: {
    "label": "JGD 2011 Japan Zone 9",
    "defaultExtent": "{\"xmin\": -5622450.671668228, \"ymin\": -13594812.839905635, \"xmax\": 5622450.67156351, \"ymax\": 5624524.607847202}"
  },
  102619: {
    "label": "JGD 2011 Japan Zone 10",
    "defaultExtent": "{\"xmin\": -5622450.671668227, \"ymin\": -14038754.801209979, \"xmax\": 5622450.671563517, \"ymax\": 5180582.6465428565}"
  },
  102620: {
    "label": "JGD 2011 Japan Zone 11",
    "defaultExtent": "{\"xmin\": -5622450.671615865, \"ymin\": -14483003.711233342, \"xmax\": 5622450.671615882, \"ymax\": 4736333.736514953}"
  },
  102621: {
    "label": "JGD 2011 Japan Zone 12",
    "defaultExtent": "{\"xmin\": -5622450.671615865, \"ymin\": -14483003.711233342, \"xmax\": 5622450.671615882, \"ymax\": 4736333.736514953}"
  },
  102622: {
    "label": "JGD 2011 Japan Zone 13",
    "defaultExtent": "{\"xmin\": -5622450.671615865, \"ymin\": -14483003.711233342, \"xmax\": 5622450.671615882, \"ymax\": 4736333.736514953}"
  },
  102623: {
    "label": "JGD 2011 Japan Zone 14",
    "defaultExtent": "{\"xmin\": -5622450.671615864, \"ymin\": -12486215.612935264, \"xmax\": 5622450.671615882, \"ymax\": 6733121.834813031}"
  },
  102624: {
    "label": "JGD 2011 Japan Zone 15",
    "defaultExtent": "{\"xmin\": -5622450.671615875, \"ymin\": -12486215.612956075, \"xmax\": 5622450.671615874, \"ymax\": 6733121.834833829}"
  },
  102625: {
    "label": "JGD 2011 Japan Zone 16",
    "defaultExtent": "{\"xmin\": -5622450.671615874, \"ymin\": -12486215.612956075, \"xmax\": 5622450.671615874, \"ymax\": 6733121.834833828}"
  },
  102626: {
    "label": "JGD 2011 Japan Zone 17",
    "defaultExtent": "{\"xmin\": -5622450.671615875, \"ymin\": -12486215.612956075, \"xmax\": 5622450.671615874, \"ymax\": 6733121.834833829}"
  },
  102627: {
    "label": "JGD 2011 Japan Zone 18",
    "defaultExtent": "{\"xmin\": -5622450.671615865, \"ymin\": -11821813.741351712, \"xmax\": 5622450.671615874, \"ymax\": 7397523.70639658}"
  },
  102628: {
    "label": "JGD 2011 Japan Zone 19",
    "defaultExtent": "{\"xmin\": -5622450.671615865, \"ymin\": -12486215.612935264, \"xmax\": 5622450.671615874, \"ymax\": 6733121.83481303}"
  },
  102629: {
    "label": "NAD 1983 StatePlane Alabama East FIPS 0101 Feet",
    "defaultExtent": "{\"xmin\": -17791263.801896796, \"ymin\": -42603760.17572907, \"xmax\": 19103597.135230128, \"ymax\": 20455466.47250871}"
  },
  102630: {
    "label": "NAD 1983 StatePlane Alabama West FIPS 0102 Feet",
    "defaultExtent": "{\"xmin\": -16478438.517406255, \"ymin\": -42420785.024313465, \"xmax\": 20415438.517406255, \"ymax\": 20636759.977281183}"
  },
  102631: {
    "label": "NAD 1983 StatePlane Alaska 1 FIPS 5001 Feet",
    "defaultExtent": "{\"xmin\": -82758937.62870042, \"ymin\": -115756421.01071909, \"xmax\": 123479804.0493344, \"ymax\": 76359122.71015747}"
  },
  102632: {
    "label": "NAD 1983 StatePlane Alaska 2 FIPS 5002 Feet",
    "defaultExtent": "{\"xmin\": -16805906.911793, \"ymin\": -51164550.42840131, \"xmax\": 20086740.245126437, \"ymax\": 11890892.514752874}"
  },
  102633: {
    "label": "NAD 1983 StatePlane Alaska 3 FIPS 5003 Feet",
    "defaultExtent": "{\"xmin\": -16805906.911793, \"ymin\": -51164550.42840131, \"xmax\": 20086740.245126445, \"ymax\": 11890892.514752874}"
  },
  102634: {
    "label": "NAD 1983 StatePlane Alaska 4 FIPS 5004 Feet",
    "defaultExtent": "{\"xmin\": -16805906.911793, \"ymin\": -51164550.42840131, \"xmax\": 20086740.245126445, \"ymax\": 11890892.514752874}"
  },
  102635: {
    "label": "NAD 1983 StatePlane Alaska 5 FIPS 5005 Feet",
    "defaultExtent": "{\"xmin\": -16805906.911793, \"ymin\": -51164550.42840131, \"xmax\": 20086740.245126445, \"ymax\": 11890892.514752874}"
  },
  102636: {
    "label": "NAD 1983 StatePlane Alaska 6 FIPS 5006 Feet",
    "defaultExtent": "{\"xmin\": -16805906.911793023, \"ymin\": -51164550.42840131, \"xmax\": 20086740.245126437, \"ymax\": 11890892.514752874}"
  },
  102637: {
    "label": "NAD 1983 StatePlane Alaska 7 FIPS 5007 Feet",
    "defaultExtent": "{\"xmin\": -16805906.911793, \"ymin\": -51164550.42840131, \"xmax\": 20086740.245126437, \"ymax\": 11890892.514752874}"
  },
  102638: {
    "label": "NAD 1983 StatePlane Alaska 8 FIPS 5008 Feet",
    "defaultExtent": "{\"xmin\": -16805906.911793, \"ymin\": -51164550.42840131, \"xmax\": 20086740.245126437, \"ymax\": 11890892.514752874}"
  },
  102639: {
    "label": "NAD 1983 StatePlane Alaska 9 FIPS 5009 Feet",
    "defaultExtent": "{\"xmin\": -16805906.911793, \"ymin\": -51164550.42840131, \"xmax\": 20086740.24512645, \"ymax\": 11890892.514752874}"
  },
  102640: {
    "label": "NAD 1983 StatePlane Alaska 10 FIPS 5010 Feet",
    "defaultExtent": "{\"xmin\": -114390310.45877954, \"ymin\": -101107068.05271329, \"xmax\": 120951977.12509908, \"ymax\": 111088848.33113301}"
  },
  102648: {
    "label": "NAD 1983 StatePlane Arizona East FIPS 0201 Feet",
    "defaultExtent": "{\"xmin\": -17746324.978459746, \"ymin\": -42783050.752203286, \"xmax\": 19146322.178459745, \"ymax\": 20272392.191087414}"
  },
  102649: {
    "label": "NAD 1983 StatePlane Arizona Central FIPS 0202 Feet",
    "defaultExtent": "{\"xmin\": -17746324.97845974, \"ymin\": -42783050.752203286, \"xmax\": 19146322.178459745, \"ymax\": 20272392.191087414}"
  },
  102650: {
    "label": "NAD 1983 StatePlane Arizona West FIPS 0203 Feet",
    "defaultExtent": "{\"xmin\": -17746939.917406254, \"ymin\": -42784476.99651947, \"xmax\": 19146937.117406253, \"ymax\": 20273068.005075183}"
  },
  102661: {
    "label": "NAD 1983 StatePlane Hawaii 1 FIPS 5101 Feet",
    "defaultExtent": "{\"xmin\": -16807136.789686047, \"ymin\": -38364292.03130892, \"xmax\": 20087970.123019453, \"ymax\": 24695355.02845315}"
  },
  102662: {
    "label": "NAD 1983 StatePlane Hawaii 2 FIPS 5102 Feet",
    "defaultExtent": "{\"xmin\": -16807136.789857857, \"ymin\": -38909052.224359296, \"xmax\": 20087970.12284765, \"ymax\": 24150594.83541766}"
  },
  102664: {
    "label": "NAD 1983 StatePlane Hawaii 4 FIPS 5104 Feet",
    "defaultExtent": "{\"xmin\": -16807567.246948577, \"ymin\": -39454826.42594335, \"xmax\": 20088400.580282014, \"ymax\": 23606292.074631467}"
  },
  102665: {
    "label": "NAD 1983 StatePlane Hawaii 5 FIPS 5105 Feet",
    "defaultExtent": "{\"xmin\": -16807751.72880437, \"ymin\": -39394674.88557028, \"xmax\": 20088585.06179416, \"ymax\": 23667074.23251061}"
  },
  102688: {
    "label": "NAD 1983 StatePlane Michigan North FIPS 2111 Feet",
    "defaultExtent": "{\"xmin\": -92972281.78016578, \"ymin\": -98630919.27090861, \"xmax\": 145465615.1138461, \"ymax\": 97383240.61442176}"
  },
  102689: {
    "label": "NAD 1983 StatePlane Michigan Central FIPS 2112 Feet",
    "defaultExtent": "{\"xmin\": -99918404.59409173, \"ymin\": -98010074.31684151, \"xmax\": 139288404.59556898, \"ymax\": 93827810.93022074}"
  },
  102690: {
    "label": "NAD 1983 StatePlane Michigan South FIPS 2113 Feet",
    "defaultExtent": "{\"xmin\": -107137980.00464605, \"ymin\": -97193225.31839152, \"xmax\": 133384646.66988109, \"ymax\": 87676051.615102}"
  },
  102696: {
    "label": "NAD 1983 StatePlane Missouri East FIPS 2401 Feet",
    "defaultExtent": "{\"xmin\": -17626730.184072927, \"ymin\": -44543133.909138866, \"xmax\": 19267146.850739587, \"ymax\": 18514411.09245577}"
  },
  102697: {
    "label": "NAD 1983 StatePlane Missouri Central FIPS 2402 Feet",
    "defaultExtent": "{\"xmin\": -16806521.850739587, \"ymin\": -44543133.909138866, \"xmax\": 20087355.184072923, \"ymax\": 18514411.09245577}"
  },
  102698: {
    "label": "NAD 1983 StatePlane Missouri West FIPS 2403 Feet",
    "defaultExtent": "{\"xmin\": -15658374.875589747, \"ymin\": -44664822.1494485, \"xmax\": 21235791.542256415, \"ymax\": 18393217.454100013}"
  },
  102699: {
    "label": "NAD 1927 StatePlane California V Ventura",
    "defaultExtent": "{\"xmin\": -123757055.95208941, \"ymin\": -93781630.47231127, \"xmax\": 124573055.95170596, \"ymax\": 57473709.21687016}"
  },
  102700: {
    "label": "NAD 1983 StatePlane Montana FIPS 2500 Feet",
    "defaultExtent": "{\"xmin\": -117013761.4940824, \"ymin\": -98447133.38577083, \"xmax\": 120950761.49438825, \"ymax\": 99640375.24588354}"
  },
  102701: {
    "label": "NAD 1983 PACP00 UTM Zone 4N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724011, \"ymax\": 9606785.534938097}"
  },
  102702: {
    "label": "NAD 1983 PACP00 UTM Zone 5N",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": -9606785.534938088, \"xmax\": 6120763.767724008, \"ymax\": 9606785.534938097}"
  },
  102703: {
    "label": "NAD 1983 PACP00 UTM Zone 2S",
    "defaultExtent": "{\"xmin\": -5120763.767723977, \"ymin\": 393214.4650619123, \"xmax\": 6120763.767724008, \"ymax\": 19606785.534938097}"
  },
  102705: {
    "label": "NAD 1983 Nebraska Lancaster County FtUS",
    "defaultExtent": "{\"xmin\": -18285134.275349516, \"ymin\": -46157015.28243282, \"xmax\": 18613217.608682845, \"ymax\": 16908177.9531978}"
  },
  102720: {
    "label": "NAD 1983 StatePlane North Dakota North FIPS 3301 Feet",
    "defaultExtent": "{\"xmin\": -116783716.9437886, \"ymin\": -99537293.23896584, \"xmax\": 120720716.94528787, \"ymax\": 101623620.91303007}"
  },
  102721: {
    "label": "NAD 1983 StatePlane North Dakota South FIPS 3302 Feet",
    "defaultExtent": "{\"xmin\": -117104841.44491722, \"ymin\": -98986965.62530635, \"xmax\": 121041841.4464704, \"ymax\": 98657585.0880365}"
  },
  102726: {
    "label": "NAD 1983 StatePlane Oregon North FIPS 3601 Feet",
    "defaultExtent": "{\"xmin\": -111333096.48800217, \"ymin\": -98151939.4657045, \"xmax\": 127737263.15576662, \"ymax\": 94405411.2860236}"
  },
  102727: {
    "label": "NAD 1983 StatePlane Oregon South FIPS 3602 Feet",
    "defaultExtent": "{\"xmin\": -115242607.67772503, \"ymin\": -97275815.40231566, \"xmax\": 125085107.67780149, \"ymax\": 88591465.38026683}"
  },
  102733: {
    "label": "NAD 1983 StatePlane South Carolina FIPS 3900 Feet",
    "defaultExtent": "{\"xmin\": -122907001.38906974, \"ymin\": -92800110.18513893, \"xmax\": 126906993.39405279, \"ymax\": 53349793.70668302}"
  },
  102761: {
    "label": "NAD 1983 StatePlane Puerto Rico Virgin Islands FIPS 5200 Feet",
    "defaultExtent": "{\"xmin\": -124743018.74785464, \"ymin\": -86350902.33498992, \"xmax\": 126055352.08149227, \"ymax\": 49730392.33556131}"
  },
  102766: {
    "label": "NAD 1983 StatePlane Guam FIPS 5400 Feet",
    "defaultExtent": "{\"xmin\": -65575679.43607475, \"ymin\": -55079399.57450036, \"xmax\": 65903762.76936754, \"ymax\": 45630724.58485424}"
  },
  102767: {
    "label": "MAGNA Leticia Amazonas 1994",
    "defaultExtent": "{\"xmin\": -530640.759427674, \"ymin\": -525407.5881809443, \"xmax\": 582597.1934276781, \"ymax\": 580410.319181199}"
  },
  102768: {
    "label": "MAGNA Medellin Antioquia 2010",
    "defaultExtent": "{\"xmin\": 278619.27133829927, \"ymin\": 627748.3437575639, \"xmax\": 1392138.0226617036, \"ymax\": 1733885.3813615476}"
  },
  102769: {
    "label": "MAGNA Arauca 2007",
    "defaultExtent": "{\"xmin\": 478618.2405101749, \"ymin\": 722561.9829805599, \"xmax\": 1591908.6454898291, \"ymax\": 1828491.2571489657}"
  },
  102770: {
    "label": "MAGNA Barranquilla Atlantico 1997",
    "defaultExtent": "{\"xmin\": 360565.63343764376, \"ymin\": 1146760.420523594, \"xmax\": 1473963.1785623562, \"ymax\": 2252919.4466337264}"
  },
  102771: {
    "label": "MAGNA Bogota DC 2005",
    "defaultExtent": "{\"xmin\": -464502.1310944298, \"ymin\": -443809.922734017, \"xmax\": 649171.8890944439, \"ymax\": 662451.8210553918}"
  },
  102772: {
    "label": "MAGNA Cartagena Bolivar 2005",
    "defaultExtent": "{\"xmin\": 286300.05642953597, \"ymin\": 1088834.8491586703, \"xmax\": 1399662.7635704642, \"ymax\": 2194939.3308413364}"
  },
  102773: {
    "label": "MAGNA Tunja Boyaca 1997",
    "defaultExtent": "{\"xmin\": 523649.30864790396, \"ymin\": 550604.6485462558, \"xmax\": 1637380.5113521016, \"ymax\": 1656939.3663969974}"
  },
  102774: {
    "label": "MAGNA Manizales Caldas 2011",
    "defaultExtent": "{\"xmin\": 616926.3640827972, \"ymin\": 499293.1519963335, \"xmax\": 1730527.71591721, \"ymax\": 1605489.0797760834}"
  },
  102775: {
    "label": "MAGNA Florencia Caqueta 2007",
    "defaultExtent": "{\"xmin\": 605674.6713480324, \"ymin\": 118166.71419331233, \"xmax\": 1718926.0246519733, \"ymax\": 1223970.7165109143}"
  },
  102776: {
    "label": "MAGNA Yopal Casanare 2006",
    "defaultExtent": "{\"xmin\": 294538.268809058, \"ymin\": 531008.2378955558, \"xmax\": 1407830.0851909434, \"ymax\": 1636900.031847112}"
  },
  102777: {
    "label": "MAGNA Popayan Cauca 2006",
    "defaultExtent": "{\"xmin\": 495676.5375559849, \"ymin\": 210333.12635948742, \"xmax\": 1609184.5124440163, \"ymax\": 1316399.9582608652}"
  },
  102778: {
    "label": "MAGNA Valledupar Cesar 2011",
    "defaultExtent": "{\"xmin\": 534280.0412713197, \"ymin\": 1094137.5012267285, \"xmax\": 1647679.2787286844, \"ymax\": 2200280.3533243784}"
  },
  102779: {
    "label": "MAGNA Quibdo Choco 2011",
    "defaultExtent": "{\"xmin\": 490647.1290853135, \"ymin\": 568513.212310637, \"xmax\": 1603900.104914682, \"ymax\": 1674372.9670257722}"
  },
  102780: {
    "label": "MAGNA Monteria Cordoba 2006",
    "defaultExtent": "{\"xmin\": 575156.4072742331, \"ymin\": 909129.2573849697, \"xmax\": 1688473.4607257736, \"ymax\": 2015132.9802696037}"
  },
  102781: {
    "label": "MAGNA Inirida Guainia 2008",
    "defaultExtent": "{\"xmin\": 462560.3621877193, \"ymin\": -61113.40202248772, \"xmax\": 1575795.011812285, \"ymax\": 1044696.0530412509}"
  },
  102782: {
    "label": "MAGNA San Jose del Guaviare 2011",
    "defaultExtent": "{\"xmin\": 603257.9111087656, \"ymin\": 222481.70710024703, \"xmax\": 1716495.3288912387, \"ymax\": 1328278.9756368184}"
  },
  102783: {
    "label": "MAGNA Neiva Huila 2006",
    "defaultExtent": "{\"xmin\": 307835.2145463566, \"ymin\": 264276.2933122504, \"xmax\": 1421118.631453642, \"ymax\": 1370123.3573205834}"
  },
  102784: {
    "label": "MAGNA Riohacha La Guajira 2006",
    "defaultExtent": "{\"xmin\": 571453.4829661569, \"ymin\": 1214793.8707471988, \"xmax\": 1684855.9770338514, \"ymax\": 2320981.957073168}"
  },
  102785: {
    "label": "MAGNA Santa Marta Magdalena 2007",
    "defaultExtent": "{\"xmin\": 427194.74714757595, \"ymin\": 1179449.3665335174, \"xmax\": 1540590.0708524268, \"ymax\": 2285617.6686208635}"
  },
  102786: {
    "label": "MAGNA Villavicencio Meta 2011",
    "defaultExtent": "{\"xmin\": 494030.60341372725, \"ymin\": 398014.312562775, \"xmax\": 1607326.9105862812, \"ymax\": 1503889.930721254}"
  },
  102787: {
    "label": "MAGNA Pasto Narino 2008",
    "defaultExtent": "{\"xmin\": 423650.3354591882, \"ymin\": 71460.73000908922, \"xmax\": 1537289.0545408144, \"ymax\": 1177649.9258928085}"
  },
  102788: {
    "label": "MAGNA Cucuta Norte de Santander 2011",
    "defaultExtent": "{\"xmin\": 286132.7379711848, \"ymin\": 811401.708206024, \"xmax\": 1399478.074028818, \"ymax\": 1917407.4253970657}"
  },
  102789: {
    "label": "MAGNA Mocoa Putumayo 2011",
    "defaultExtent": "{\"xmin\": 490811.74666559394, \"ymin\": 64897.72040268162, \"xmax\": 1604123.0293344103, \"ymax\": 1170759.225606537}"
  },
  102790: {
    "label": "MAGNA Armenia Quindio 2006",
    "defaultExtent": "{\"xmin\": 599082.9649670713, \"ymin\": 440053.1289550166, \"xmax\": 1712566.36703293, \"ymax\": 1546121.7833564046}"
  },
  102791: {
    "label": "MAGNA Pereira Risaralda 2007",
    "defaultExtent": "{\"xmin\": 596745.6506538078, \"ymin\": 471153.87395250704, \"xmax\": 1710238.373346188, \"ymax\": 1577236.6168879503}"
  },
  102792: {
    "label": "MAGNA San Andres 2007",
    "defaultExtent": "{\"xmin\": 263719.66511218704, \"ymin\": 1324224.7718553264, \"xmax\": 1377158.9308878225, \"ymax\": 2430490.883950619}"
  },
  102793: {
    "label": "MAGNA Bucaramanga Santander 2008",
    "defaultExtent": "{\"xmin\": 540523.6785723618, \"ymin\": 721605.3219550159, \"xmax\": 1653958.9314276436, \"ymax\": 1827679.2166517763}"
  },
  102794: {
    "label": "MAGNA Sucre 2006",
    "defaultExtent": "{\"xmin\": 372384.1329905855, \"ymin\": 913122.2629141132, \"xmax\": 1485703.08100942, \"ymax\": 2019129.0526234158}"
  },
  102795: {
    "label": "MAGNA Ibague Tolima 2007",
    "defaultExtent": "{\"xmin\": 320925.703120515, \"ymin\": 427541.00489503075, \"xmax\": 1434342.9568795017, \"ymax\": 1533541.6781957427}"
  },
  102796: {
    "label": "MAGNA Cali Valle del Cauca 2009",
    "defaultExtent": "{\"xmin\": 505206.2512282488, \"ymin\": 319385.97077513393, \"xmax\": 1618594.1087717665, \"ymax\": 1425343.2800708634}"
  },
  102797: {
    "label": "MAGNA Mitu Vaupes 2011",
    "defaultExtent": "{\"xmin\": 537103.8940996355, \"ymin\": 77108.37973804015, \"xmax\": 1650330.901900373, \"ymax\": 1182886.0916956426}"
  },
  102798: {
    "label": "MAGNA Puerto Carreno Vichada 2011",
    "defaultExtent": "{\"xmin\": 507203.0675935035, \"ymin\": 622317.2404212123, \"xmax\": 1620466.338406505, \"ymax\": 1728197.7207354018}"
  },
  102962: {
    "label": "NAD 1983 2011 California Teale Albers",
    "defaultExtent": "{\"xmin\": -16894575.05116589, \"ymin\": -8581876.335913707, \"xmax\": 16894575.05107798, \"ymax\": 13751563.003248025}"
  },
  102963: {
    "label": "NAD 1983 2011 Mississippi TM",
    "defaultExtent": "{\"xmin\": -5122076.741253177, \"ymin\": -11905728.699493717, \"xmax\": 6122076.741253175, \"ymax\": 7312330.534534532}"
  },
  102965: {
    "label": "NAD 1983 2011 Contiguous USA Albers",
    "defaultExtent": "{\"xmin\": -16885989.18210479, \"ymin\": -6957052.177887028, \"xmax\": 16885989.182114024, \"ymax\": 15293225.658442125}"
  },
  102966: {
    "label": "NAD 1983 2011 Alaska Albers",
    "defaultExtent": "{\"xmin\": -13739219.699563079, \"ymin\": -8935188.356798925, \"xmax\": 13739219.70003071, \"ymax\": 17285625.557825744}"
  },
  102967: {
    "label": "NAD 1983 2011 Florida GDL Albers",
    "defaultExtent": "{\"xmin\": -19533690.484215964, \"ymin\": -7509915.322719345, \"xmax\": 20333690.484215967, \"ymax\": 11731295.795514686}"
  },
  102968: {
    "label": "NAD 1983 2011 Michigan GeoRef Meters",
    "defaultExtent": "{\"xmin\": -28809902.8075835, \"ymin\": -30359666.086749792, \"xmax\": 35544410.36686367, \"ymax\": 20812653.70437237}"
  },
  102969: {
    "label": "NAD 1983 2011 Oregon Statewide Lambert",
    "defaultExtent": "{\"xmin\": -36115366.195192955, \"ymin\": -29681657.82664154, \"xmax\": 36915366.19580745, \"ymax\": 28096555.99768769}"
  },
  102970: {
    "label": "NAD 1983 2011 Oregon Statewide Lambert Ft Intl",
    "defaultExtent": "{\"xmin\": -118488734.23619735, \"ymin\": -97380767.14777409, \"xmax\": 121113406.1542239, \"ymax\": 92180301.82968402}"
  },
  102971: {
    "label": "NAD 1983 2011 Texas Centric Mapping System Albers",
    "defaultExtent": "{\"xmin\": -17154324.437499855, \"ymin\": -675329.8507281002, \"xmax\": 20154324.43750238, \"ymax\": 19014408.076648667}"
  },
  102972: {
    "label": "NAD 1983 2011 Texas Centric Mapping System Lambert",
    "defaultExtent": "{\"xmin\": -37101439.53622417, \"ymin\": -21633811.39510804, \"xmax\": 40101439.53614661, \"ymax\": 19288743.702293932}"
  },
  102973: {
    "label": "NAD 1983 2011 Wisconsin TM",
    "defaultExtent": "{\"xmin\": -5100763.767724001, \"ymin\": -14086785.534958892, \"xmax\": 6140763.767724001, \"ymax\": 5126785.534958888}"
  },
  102974: {
    "label": "NAD 1983 2011 Wisconsin TM US Ft",
    "defaultExtent": "{\"xmin\": -16734755.794607824, \"ymin\": -46216395.54261096, \"xmax\": 20146822.46127449, \"ymax\": 16820128.875944283}"
  },
  102975: {
    "label": "NAD 1983 2011 StatePlane Alabama East FIPS 0101",
    "defaultExtent": "{\"xmin\": -5422788.052394249, \"ymin\": -12985652.072866369, \"xmax\": 5822788.052394249, \"ymax\": 6234838.650497956}"
  },
  102976: {
    "label": "NAD 1983 2011 StatePlane Alabama West FIPS 0102",
    "defaultExtent": "{\"xmin\": -5022638.105381638, \"ymin\": -12929881.135173015, \"xmax\": 6222638.105381638, \"ymax\": 6290097.0212693475}"
  },
  102977: {
    "label": "NAD 1983 2011 StatePlane Alaska 1 FIPS 5001",
    "defaultExtent": "{\"xmin\": -25224974.639177933, \"ymin\": -35282627.68932256, \"xmax\": 37636719.54767623, \"ymax\": 23274307.150670152}"
  },
  102978: {
    "label": "NAD 1983 2011 StatePlane Alaska 2 FIPS 5002",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  102979: {
    "label": "NAD 1983 2011 StatePlane Alaska 3 FIPS 5003",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615885, \"ymax\": 3624351.287199251}"
  },
  102980: {
    "label": "NAD 1983 2011 StatePlane Alaska 4 FIPS 5004",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615885, \"ymax\": 3624351.287199251}"
  },
  102981: {
    "label": "NAD 1983 2011 StatePlane Alaska 5 FIPS 5005",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615885, \"ymax\": 3624351.287199251}"
  },
  102982: {
    "label": "NAD 1983 2011 StatePlane Alaska 6 FIPS 5006",
    "defaultExtent": "{\"xmin\": -5122450.671615858, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  102983: {
    "label": "NAD 1983 2011 StatePlane Alaska 7 FIPS 5007",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  102984: {
    "label": "NAD 1983 2011 StatePlane Alaska 8 FIPS 5008",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615882, \"ymax\": 3624351.287199251}"
  },
  102985: {
    "label": "NAD 1983 2011 StatePlane Alaska 9 FIPS 5009",
    "defaultExtent": "{\"xmin\": -5122450.67161585, \"ymin\": -15594986.160549043, \"xmax\": 6122450.671615886, \"ymax\": 3624351.287199251}"
  },
  102986: {
    "label": "NAD 1983 2011 StatePlane Alaska 10 FIPS 5010",
    "defaultExtent": "{\"xmin\": -34866236.36030873, \"ymin\": -30817495.97745897, \"xmax\": 36866236.36020292, \"ymax\": 33859948.69122673}"
  },
  102987: {
    "label": "NAD 1983 2011 StatePlane Arizona East FIPS 0201",
    "defaultExtent": "{\"xmin\": -5409090.671615874, \"ymin\": -13040299.949871464, \"xmax\": 5835810.671615874, \"ymax\": 6179037.49791844}"
  },
  102988: {
    "label": "NAD 1983 2011 StatePlane Arizona Central FIPS 0202",
    "defaultExtent": "{\"xmin\": -5409090.671615872, \"ymin\": -13040299.949871464, \"xmax\": 5835810.671615874, \"ymax\": 6179037.49791844}"
  },
  102989: {
    "label": "NAD 1983 2011 StatePlane Arizona West FIPS 0203",
    "defaultExtent": "{\"xmin\": -5409278.105381638, \"ymin\": -13040734.670008475, \"xmax\": 5835998.105381638, \"ymax\": 6179243.48643389}"
  },
  102990: {
    "label": "NAD 1983 2011 StatePlane Arizona East FIPS 0201 Ft Intl",
    "defaultExtent": "{\"xmin\": -17746360.47118069, \"ymin\": -42783136.31847593, \"xmax\": 19146360.47118069, \"ymax\": 20272432.735952888}"
  },
  102991: {
    "label": "NAD 1983 2011 StatePlane Arizona Central FIPS 0202 Ft Intl",
    "defaultExtent": "{\"xmin\": -17746360.47118068, \"ymin\": -42783136.31847593, \"xmax\": 19146360.47118069, \"ymax\": 20272432.735952888}"
  },
  102992: {
    "label": "NAD 1983 2011 StatePlane Arizona West FIPS 0203 Ft Intl",
    "defaultExtent": "{\"xmin\": -17746975.41135708, \"ymin\": -42784562.5656446, \"xmax\": 19146975.41135708, \"ymax\": 20273108.55129229}"
  },
  102993: {
    "label": "NAD 1983 2011 StatePlane Arkansas North FIPS 0301",
    "defaultExtent": "{\"xmin\": -37285630.80991245, \"ymin\": -28623235.611847952, \"xmax\": 38085630.80986683, \"ymax\": 18652037.545588575}"
  },
  102994: {
    "label": "NAD 1983 2011 StatePlane Arkansas South FIPS 0302",
    "defaultExtent": "{\"xmin\": -37595985.155181974, \"ymin\": -27991400.9264211, \"xmax\": 38395985.15505119, \"ymax\": 17088046.267518982}"
  },
  102995: {
    "label": "NAD 1983 2011 StatePlane Arkansas North FIPS 0301 Ft US",
    "defaultExtent": "{\"xmin\": -122327940.41552109, \"ymin\": -93908065.50320448, \"xmax\": 124952607.08203807, \"ymax\": 61194226.51415184}"
  },
  102996: {
    "label": "NAD 1983 2011 StatePlane Arkansas South FIPS 0302 Ft US",
    "defaultExtent": "{\"xmin\": -123346161.29662618, \"ymin\": -91835121.20609988, \"xmax\": 125970827.96286376, \"ymax\": 56063031.79601851}"
  },
  102997: {
    "label": "NAD 1983 2011 StatePlane California I FIPS 0401",
    "defaultExtent": "{\"xmin\": -34887054.27121294, \"ymin\": -28830499.630561125, \"xmax\": 38887054.271445766, \"ymax\": 25202733.856392305}"
  },
  102998: {
    "label": "NAD 1983 2011 StatePlane California II FIPS 0402",
    "defaultExtent": "{\"xmin\": -35116508.911664024, \"ymin\": -28596719.981055927, \"xmax\": 39116508.911764205, \"ymax\": 23310630.66291148}"
  },
  102999: {
    "label": "NAD 1983 2011 StatePlane California III FIPS 0403",
    "defaultExtent": "{\"xmin\": -35314262.749591045, \"ymin\": -28428487.57731289, \"xmax\": 39314262.749551564, \"ymax\": 21771398.527620755}"
  },
  103000: {
    "label": "NAD 1983 2011 StatePlane California IV FIPS 0404",
    "defaultExtent": "{\"xmin\": -35498881.48266848, \"ymin\": -28265654.103608675, \"xmax\": 39498881.48289684, \"ymax\": 20437979.07279057}"
  },
  103001: {
    "label": "NAD 1983 2011 StatePlane California V FIPS 0405",
    "defaultExtent": "{\"xmin\": -35847160.01764138, \"ymin\": -28005403.878855906, \"xmax\": 39847160.01752812, \"ymax\": 18099234.480987653}"
  },
  103002: {
    "label": "NAD 1983 2011 StatePlane California VI FIPS 0406",
    "defaultExtent": "{\"xmin\": -36151940.068675034, \"ymin\": -27815848.278992966, \"xmax\": 40151940.06861196, \"ymax\": 16247248.704331301}"
  },
  103003: {
    "label": "NAD 1983 2011 StatePlane California I FIPS 0401 Ft US",
    "defaultExtent": "{\"xmin\": -114458610.55480444, \"ymin\": -94588064.20459928, \"xmax\": 127581943.88890164, \"ymax\": 82685969.32718042}"
  },
  103004: {
    "label": "NAD 1983 2011 StatePlane California II FIPS 0402 Ft US",
    "defaultExtent": "{\"xmin\": -115211412.98768437, \"ymin\": -93821072.13784765, \"xmax\": 128334746.32134637, \"ymax\": 76478294.09990206}"
  },
  103005: {
    "label": "NAD 1983 2011 StatePlane California III FIPS 0403 Ft US",
    "defaultExtent": "{\"xmin\": -115860210.37094994, \"ymin\": -93269129.6599007, \"xmax\": 128983543.70415375, \"ymax\": 71428330.00270241}"
  },
  103006: {
    "label": "NAD 1983 2011 StatePlane California IV FIPS 0404 Ft US",
    "defaultExtent": "{\"xmin\": -116465913.66438816, \"ymin\": -92734900.17158945, \"xmax\": 129589246.99847071, \"ymax\": 67053603.00798039}"
  },
  103007: {
    "label": "NAD 1983 2011 StatePlane California V FIPS 0405 Ft US",
    "defaultExtent": "{\"xmin\": -117608557.49121174, \"ymin\": -91881062.55921307, \"xmax\": 130731890.82417348, \"ymax\": 59380571.79304032}"
  },
  103008: {
    "label": "NAD 1983 2011 StatePlane California VI FIPS 0406 Ft US",
    "defaultExtent": "{\"xmin\": -118608490.04197799, \"ymin\": -91259162.22866274, \"xmax\": 131731823.37510438, \"ymax\": 53304515.12412693}"
  },
  103009: {
    "label": "NAD 1983 2011 StatePlane Colorado North FIPS 0501",
    "defaultExtent": "{\"xmin\": -36047295.1761787, \"ymin\": -29010844.772414874, \"xmax\": 37876098.83435248, \"ymax\": 24329837.178702205}"
  },
  103010: {
    "label": "NAD 1983 2011 StatePlane Colorado Central FIPS 0502",
    "defaultExtent": "{\"xmin\": -36200413.80326969, \"ymin\": -28811315.283514805, \"xmax\": 38029217.46057424, \"ymax\": 23117321.353997074}"
  },
  103011: {
    "label": "NAD 1983 2011 StatePlane Colorado South FIPS 0503",
    "defaultExtent": "{\"xmin\": -36387386.019578025, \"ymin\": -28644971.833411947, \"xmax\": 38216189.6778173, \"ymax\": 21664082.8771381}"
  },
  103012: {
    "label": "NAD 1983 2011 StatePlane Colorado North FIPS 0501 Ft US",
    "defaultExtent": "{\"xmin\": -118265167.59051295, \"ymin\": -95179746.55749778, \"xmax\": 124265167.5923714, \"ymax\": 79822140.81045881}"
  },
  103013: {
    "label": "NAD 1983 2011 StatePlane Colorado Central FIPS 0502 Ft US",
    "defaultExtent": "{\"xmin\": -118767524.2862273, \"ymin\": -94525123.55933148, \"xmax\": 124767524.28523397, \"ymax\": 75844078.47557206}"
  },
  103014: {
    "label": "NAD 1983 2011 StatePlane Colorado South FIPS 0503 Ft US",
    "defaultExtent": "{\"xmin\": -119380948.96589889, \"ymin\": -93979378.42345235, \"xmax\": 125380948.96797225, \"ymax\": 71076245.23941058}"
  },
  103015: {
    "label": "NAD 1983 2011 StatePlane Connecticut FIPS 0600",
    "defaultExtent": "{\"xmin\": -36501665.38080174, \"ymin\": -29365141.16645893, \"xmax\": 37111266.59970077, \"ymax\": 25482156.151964903}"
  },
  103016: {
    "label": "NAD 1983 2011 StatePlane Connecticut FIPS 0600 Ft US",
    "defaultExtent": "{\"xmin\": -119755880.50351368, \"ymin\": -96342133.97695734, \"xmax\": 121755880.50251827, \"ymax\": 83602707.3085715}"
  },
  103017: {
    "label": "NAD 1983 2011 StatePlane Delaware FIPS 0700",
    "defaultExtent": "{\"xmin\": -5422984.8578483015, \"ymin\": -13818058.715278085, \"xmax\": 5822984.857848301, \"ymax\": 5403104.752171321}"
  },
  103018: {
    "label": "NAD 1983 2011 StatePlane Delaware FIPS 0700 Ft US",
    "defaultExtent": "{\"xmin\": -17791909.487790633, \"ymin\": -45334747.63504151, \"xmax\": 19104242.821123965, \"ymax\": 17726686.174415406}"
  },
  103019: {
    "label": "NAD 1983 2011 StatePlane Florida East FIPS 0901",
    "defaultExtent": "{\"xmin\": -5422682.2074441705, \"ymin\": -12302114.955780467, \"xmax\": 5822682.2074441705, \"ymax\": 6918013.955638945}"
  },
  103020: {
    "label": "NAD 1983 2011 StatePlane Florida West FIPS 0902",
    "defaultExtent": "{\"xmin\": -5422682.207444169, \"ymin\": -12302114.955780467, \"xmax\": 5822682.2074441705, \"ymax\": 6918013.955638945}"
  },
  103021: {
    "label": "NAD 1983 2011 StatePlane Florida North FIPS 0903",
    "defaultExtent": "{\"xmin\": -38386184.53222137, \"ymin\": -27874919.325736687, \"xmax\": 39586184.5326483, \"ymax\": 11420627.34512336}"
  },
  103022: {
    "label": "NAD 1983 2011 StatePlane Florida East FIPS 0901 Ft US",
    "defaultExtent": "{\"xmin\": -17790916.542256415, \"ymin\": -40361188.817423075, \"xmax\": 19103249.875589747, \"ymax\": 22696850.786125436}"
  },
  103023: {
    "label": "NAD 1983 2011 StatePlane Florida West FIPS 0902 Ft US",
    "defaultExtent": "{\"xmin\": -17790916.542256407, \"ymin\": -40361188.817423075, \"xmax\": 19103249.875589747, \"ymax\": 22696850.786125436}"
  },
  103024: {
    "label": "NAD 1983 2011 StatePlane Florida North FIPS 0903 Ft US",
    "defaultExtent": "{\"xmin\": -125938673.75279626, \"ymin\": -91452964.48785444, \"xmax\": 129875673.75419696, \"ymax\": 37469174.881458886}"
  },
  103025: {
    "label": "NAD 1983 2011 StatePlane Georgia East FIPS 1001",
    "defaultExtent": "{\"xmin\": -5422450.671615874, \"ymin\": -12929450.11040019, \"xmax\": 5822450.671615874, \"ymax\": 6289887.337389712}"
  },
  103026: {
    "label": "NAD 1983 2011 StatePlane Georgia West FIPS 1002",
    "defaultExtent": "{\"xmin\": -4922450.671615872, \"ymin\": -12929450.11040019, \"xmax\": 6322450.6716158725, \"ymax\": 6289887.337389712}"
  },
  103027: {
    "label": "NAD 1983 2011 StatePlane Georgia East FIPS 1001 Ft US",
    "defaultExtent": "{\"xmin\": -17790156.91179308, \"ymin\": -42419370.90387128, \"xmax\": 19102490.24512641, \"ymax\": 20636072.039419413}"
  },
  103028: {
    "label": "NAD 1983 2011 StatePlane Georgia West FIPS 1002 Ft US",
    "defaultExtent": "{\"xmin\": -16149740.245126404, \"ymin\": -42419370.90387128, \"xmax\": 20742906.91179307, \"ymax\": 20636072.039419413}"
  },
  103029: {
    "label": "NAD 1983 2011 StatePlane Idaho East FIPS 1101",
    "defaultExtent": "{\"xmin\": -5422717.024861958, \"ymin\": -14224494.619744752, \"xmax\": 5822717.024861958, \"ymax\": 4995753.308761801}"
  },
  103030: {
    "label": "NAD 1983 2011 StatePlane Idaho Central FIPS 1102",
    "defaultExtent": "{\"xmin\": -5122717.024861958, \"ymin\": -14224494.619744752, \"xmax\": 6122717.024861961, \"ymax\": 4995753.308761801}"
  },
  103031: {
    "label": "NAD 1983 2011 StatePlane Idaho West FIPS 1103",
    "defaultExtent": "{\"xmin\": -4822638.105381638, \"ymin\": -14224294.967206975, \"xmax\": 6422638.105381638, \"ymax\": 4995683.189235387}"
  },
  103032: {
    "label": "NAD 1983 2011 StatePlane Idaho East FIPS 1101 Ft US",
    "defaultExtent": "{\"xmin\": -17791030.77240127, \"ymin\": -46668196.09827923, \"xmax\": 19103364.105734605, \"ymax\": 16390233.980496006}"
  },
  103033: {
    "label": "NAD 1983 2011 StatePlane Idaho Central FIPS 1102 Ft US",
    "defaultExtent": "{\"xmin\": -16806780.77240127, \"ymin\": -46668196.09827923, \"xmax\": 20087614.105734613, \"ymax\": 16390233.980496006}"
  },
  103034: {
    "label": "NAD 1983 2011 StatePlane Idaho West FIPS 1103 Ft US",
    "defaultExtent": "{\"xmin\": -15822271.850739589, \"ymin\": -46667541.07157821, \"xmax\": 21071605.18407292, \"ymax\": 16390003.930016432}"
  },
  103035: {
    "label": "NAD 1983 2011 StatePlane Illinois East FIPS 1201",
    "defaultExtent": "{\"xmin\": -5322872.397588842, \"ymin\": -13669807.500473078, \"xmax\": 5922872.397588842, \"ymax\": 5550971.541784854}"
  },
  103036: {
    "label": "NAD 1983 2011 StatePlane Illinois West FIPS 1202",
    "defaultExtent": "{\"xmin\": -4922682.207444172, \"ymin\": -13669345.127777718, \"xmax\": 6322682.2074441705, \"ymax\": 5550783.783641693}"
  },
  103037: {
    "label": "NAD 1983 2011 StatePlane Illinois East FIPS 1201 Ft US",
    "defaultExtent": "{\"xmin\": -17463457.191089388, \"ymin\": -44848360.107802086, \"xmax\": 19431957.191089388, \"ymax\": 18211812.466672473}"
  },
  103038: {
    "label": "NAD 1983 2011 StatePlane Illinois West FIPS 1202 Ft US",
    "defaultExtent": "{\"xmin\": -16150499.875589753, \"ymin\": -44846843.140050724, \"xmax\": 20743666.542256415, \"ymax\": 18211196.463497788}"
  },
  103039: {
    "label": "NAD 1983 2011 StatePlane Indiana East FIPS 1301",
    "defaultExtent": "{\"xmin\": -5522825.539147399, \"ymin\": -13512173.175005069, \"xmax\": 5722825.539147401, \"ymax\": 5708445.690089753}"
  },
  103040: {
    "label": "NAD 1983 2011 StatePlane Indiana West FIPS 1302",
    "defaultExtent": "{\"xmin\": -4722825.539147401, \"ymin\": -13512173.175005067, \"xmax\": 6522825.539147401, \"ymax\": 5708445.690089753}"
  },
  103041: {
    "label": "NAD 1983 2011 StatePlane Indiana East FIPS 1301 Ft US",
    "defaultExtent": "{\"xmin\": -18119470.123019423, \"ymin\": -44331188.15832912, \"xmax\": 18775636.789686095, \"ymax\": 18728458.901569463}"
  },
  103042: {
    "label": "NAD 1983 2011 StatePlane Indiana West FIPS 1302 Ft US",
    "defaultExtent": "{\"xmin\": -15494803.456352763, \"ymin\": -44331188.15832912, \"xmax\": 21400303.456352763, \"ymax\": 18728458.901569463}"
  },
  103043: {
    "label": "NAD 1983 2011 StatePlane Iowa North FIPS 1401",
    "defaultExtent": "{\"xmin\": -35179672.413309455, \"ymin\": -28619932.387049854, \"xmax\": 38179672.41221074, \"ymax\": 27493755.251850624}"
  },
  103044: {
    "label": "NAD 1983 2011 StatePlane Iowa South FIPS 1402",
    "defaultExtent": "{\"xmin\": -36344508.92670218, \"ymin\": -29415464.41348134, \"xmax\": 37344508.92730374, \"ymax\": 25047110.383624904}"
  },
  103045: {
    "label": "NAD 1983 2011 StatePlane Iowa North FIPS 1401 Ft US",
    "defaultExtent": "{\"xmin\": -115418641.90933275, \"ymin\": -93897228.17317939, \"xmax\": 125261141.90572806, \"ymax\": 90202428.6887799}"
  },
  103046: {
    "label": "NAD 1983 2011 StatePlane Iowa South FIPS 1402 Ft US",
    "defaultExtent": "{\"xmin\": -119240276.37035538, \"ymin\": -96507236.16323002, \"xmax\": 122521109.70566234, \"ymax\": 82175394.65027604}"
  },
  103047: {
    "label": "NAD 1983 2011 StatePlane Kansas North FIPS 1501",
    "defaultExtent": "{\"xmin\": -36694583.27893349, \"ymin\": -29176343.808520153, \"xmax\": 37494583.27889171, \"ymax\": 22940063.423304893}"
  },
  103048: {
    "label": "NAD 1983 2011 StatePlane Kansas South FIPS 1502",
    "defaultExtent": "{\"xmin\": -36888610.08409184, \"ymin\": -28552051.03735451, \"xmax\": 37688610.084001794, \"ymax\": 21865414.924582668}"
  },
  103049: {
    "label": "NAD 1983 2011 StatePlane Kansas North FIPS 1501 Ft US",
    "defaultExtent": "{\"xmin\": -120388811.97430094, \"ymin\": -95722721.31178652, \"xmax\": 123013478.64083055, \"ymax\": 75262524.74795946}"
  },
  103050: {
    "label": "NAD 1983 2011 StatePlane Kansas South FIPS 1502 Ft US",
    "defaultExtent": "{\"xmin\": -121025381.58422464, \"ymin\": -93674520.77838725, \"xmax\": 123650048.25059587, \"ymax\": 71736782.13173495}"
  },
  103051: {
    "label": "NAD 1983 2011 StatePlane Kentucky North FIPS 1601",
    "defaultExtent": "{\"xmin\": -36706540.6144563, \"ymin\": -29061234.143652882, \"xmax\": 37706540.61484275, \"ymax\": 22066321.05409854}"
  },
  103052: {
    "label": "NAD 1983 2011 StatePlane Kentucky North FIPS 1601 Ft US",
    "defaultExtent": "{\"xmin\": -120428041.99926203, \"ymin\": -95345065.68630116, \"xmax\": 123708875.33386324, \"ymax\": 72395921.65832162}"
  },
  103053: {
    "label": "NAD 1983 2011 StatePlane Kentucky FIPS 1600",
    "defaultExtent": "{\"xmin\": -35794088.47457762, \"ymin\": -27913214.15795621, \"xmax\": 38794088.4749888, \"ymax\": 22449415.817500036}"
  },
  103054: {
    "label": "NAD 1983 2011 StatePlane Kentucky FIPS 1600 Ft US",
    "defaultExtent": "{\"xmin\": -117434438.60367672, \"ymin\": -91578603.44989465, \"xmax\": 127276938.60502575, \"ymax\": 73652791.72791469}"
  },
  103055: {
    "label": "NAD 1983 2011 StatePlane Kentucky South FIPS 1602",
    "defaultExtent": "{\"xmin\": -36881000.62027418, \"ymin\": -28397921.164930366, \"xmax\": 37881000.620047584, \"ymax\": 21253778.418876573}"
  },
  103056: {
    "label": "NAD 1983 2011 StatePlane Kentucky South FIPS 1602 Ft US",
    "defaultExtent": "{\"xmin\": -121000416.20168228, \"ymin\": -93168846.35527492, \"xmax\": 124281249.53427221, \"ymax\": 69730104.69592905}"
  },
  103057: {
    "label": "NAD 1983 2011 StatePlane Louisiana North FIPS 1701",
    "defaultExtent": "{\"xmin\": -37494730.88922037, \"ymin\": -28088971.837408308, \"xmax\": 39494730.88715185, \"ymax\": 13871961.36705782}"
  },
  103058: {
    "label": "NAD 1983 2011 StatePlane Louisiana South FIPS 1702",
    "defaultExtent": "{\"xmin\": -38036283.63849772, \"ymin\": -27814605.530320723, \"xmax\": 40036283.638507746, \"ymax\": 11223230.411243448}"
  },
  103059: {
    "label": "NAD 1983 2011 StatePlane Louisiana North FIPS 1701 Ft US",
    "defaultExtent": "{\"xmin\": -123013962.92571716, \"ymin\": -92155235.10323042, \"xmax\": 129575629.58559735, \"ymax\": 45511593.25175553}"
  },
  103060: {
    "label": "NAD 1983 2011 StatePlane Louisiana South FIPS 1702 Ft US",
    "defaultExtent": "{\"xmin\": -124790707.23730458, \"ymin\": -91255084.9773939, \"xmax\": 131352373.90400414, \"ymax\": 36821548.440887876}"
  },
  103061: {
    "label": "NAD 1983 2011 StatePlane Maine East FIPS 1801",
    "defaultExtent": "{\"xmin\": -5322450.671615874, \"ymin\": -14445971.085374892, \"xmax\": 5922450.671615874, \"ymax\": 4773366.36241501}"
  },
  103062: {
    "label": "NAD 1983 2011 StatePlane Maine West FIPS 1802",
    "defaultExtent": "{\"xmin\": -4722825.539147399, \"ymin\": -14354355.990839133, \"xmax\": 6522825.539147401, \"ymax\": 4866262.874255687}"
  },
  103063: {
    "label": "NAD 1983 2011 StatePlane Maine East FIPS 1801 Ft US",
    "defaultExtent": "{\"xmin\": -17462073.578459747, \"ymin\": -47394823.46926745, \"xmax\": 19430573.578459747, \"ymax\": 15660619.474023243}"
  },
  103064: {
    "label": "NAD 1983 2011 StatePlane Maine West FIPS 1802 Ft US",
    "defaultExtent": "{\"xmin\": -15494803.456352757, \"ymin\": -47094249.613278046, \"xmax\": 21400303.456352763, \"ymax\": 15965397.446620531}"
  },
  103065: {
    "label": "NAD 1983 2011 Maine 2000 East Zone",
    "defaultExtent": "{\"xmin\": -4922900.5126537075, \"ymin\": -14465644.401938386, \"xmax\": 6322900.5126537075, \"ymax\": 4755230.746617417}"
  },
  103066: {
    "label": "NAD 1983 2011 Maine 2000 Central Zone",
    "defaultExtent": "{\"xmin\": -5122900.5126537075, \"ymin\": -14428609.897370517, \"xmax\": 6122900.5126537075, \"ymax\": 4792265.251185287}"
  },
  103067: {
    "label": "NAD 1983 2011 Maine 2000 West Zone",
    "defaultExtent": "{\"xmin\": -5322900.5126537075, \"ymin\": -14354547.388632273, \"xmax\": 5922900.5126537075, \"ymax\": 4866327.759923531}"
  },
  103068: {
    "label": "NAD 1983 2011 StatePlane Maryland FIPS 1900",
    "defaultExtent": "{\"xmin\": -36747007.26427332, \"ymin\": -29091384.527313504, \"xmax\": 37547007.26462395, \"ymax\": 22554678.123978678}"
  },
  103069: {
    "label": "NAD 1983 2011 StatePlane Maryland FIPS 1900 Ft US",
    "defaultExtent": "{\"xmin\": -120560806.33287005, \"ymin\": -95443984.07002771, \"xmax\": 123185473.00068705, \"ymax\": 73998139.81175338}"
  },
  103070: {
    "label": "NAD 1983 2011 StatePlane Massachusetts Mainland FIPS 2001",
    "defaultExtent": "{\"xmin\": -36530705.74194933, \"ymin\": -28803004.001248993, \"xmax\": 36930705.741942905, \"ymax\": 26796569.38877064}"
  },
  103071: {
    "label": "NAD 1983 2011 StatePlane Massachusetts Island FIPS 2002",
    "defaultExtent": "{\"xmin\": -36324363.173723884, \"ymin\": -29532372.723926485, \"xmax\": 37324363.17347703, \"ymax\": 25143058.28571613}"
  },
  103072: {
    "label": "NAD 1983 2011 StatePlane Massachusetts Mnld FIPS 2001 FtUS",
    "defaultExtent": "{\"xmin\": -119851157.08837874, \"ymin\": -94497855.62743106, \"xmax\": 121163490.421691, \"ymax\": 87915078.06965832}"
  },
  103073: {
    "label": "NAD 1983 2011 StatePlane Massachusetts Isl FIPS 2002 FtUS",
    "defaultExtent": "{\"xmin\": -119174181.5124591, \"ymin\": -96890792.84508213, \"xmax\": 122455014.84498255, \"ymax\": 82490183.72572033}"
  },
  103074: {
    "label": "NAD 1983 2011 StatePlane Michigan North FIPS 2111",
    "defaultExtent": "{\"xmin\": -28338008.16261086, \"ymin\": -30062764.319301587, \"xmax\": 44338008.16271662, \"ymax\": 29682471.10421796}"
  },
  103075: {
    "label": "NAD 1983 2011 StatePlane Michigan Central FIPS 2112",
    "defaultExtent": "{\"xmin\": -30455190.630660422, \"ymin\": -29873530.398834094, \"xmax\": 42455190.63111069, \"ymax\": 28598773.969079223}"
  },
  103076: {
    "label": "NAD 1983 2011 StatePlane Michigan South FIPS 2113",
    "defaultExtent": "{\"xmin\": -32655721.616859354, \"ymin\": -29624554.326154392, \"xmax\": 40655721.616422996, \"ymax\": 26723713.97971105}"
  },
  103077: {
    "label": "NAD 1983 2011 StatePlane Michigan North FIPS 2111 Ft Intl",
    "defaultExtent": "{\"xmin\": -92972467.72510123, \"ymin\": -98631116.53314169, \"xmax\": 145465906.0456582, \"ymax\": 97383435.38129252}"
  },
  103078: {
    "label": "NAD 1983 2011 StatePlane Michigan Central FIPS 2112 Ft Intl",
    "defaultExtent": "{\"xmin\": -99918604.4313006, \"ymin\": -98010270.3373822, \"xmax\": 139288683.17293534, \"ymax\": 93827998.58621791}"
  },
  103079: {
    "label": "NAD 1983 2011 StatePlane Michigan South FIPS 2113 Ft Intl",
    "defaultExtent": "{\"xmin\": -107138194.28103462, \"ymin\": -97193419.70523094, \"xmax\": 133384913.43970798, \"ymax\": 87676226.96755593}"
  },
  103080: {
    "label": "NAD 1983 2011 StatePlane Minnesota North FIPS 2201",
    "defaultExtent": "{\"xmin\": -35413952.21883893, \"ymin\": -30179238.744515866, \"xmax\": 37013952.21884459, \"ymax\": 30925833.663218413}"
  },
  103081: {
    "label": "NAD 1983 2011 StatePlane Minnesota Central FIPS 2202",
    "defaultExtent": "{\"xmin\": -35534345.78057431, \"ymin\": -29988111.83685971, \"xmax\": 37134345.780168205, \"ymax\": 29803284.527532667}"
  },
  103082: {
    "label": "NAD 1983 2011 StatePlane Minnesota South FIPS 2203",
    "defaultExtent": "{\"xmin\": -35696176.20197969, \"ymin\": -29729049.350341942, \"xmax\": 37296176.20161064, \"ymax\": 28305006.49768952}"
  },
  103083: {
    "label": "NAD 1983 2011 StatePlane Minnesota North FIPS 2201 Ft US",
    "defaultExtent": "{\"xmin\": -116187274.9046407, \"ymin\": -99013052.44763246, \"xmax\": 121436608.23799261, \"ymax\": 101462505.94340906}"
  },
  103084: {
    "label": "NAD 1983 2011 StatePlane Minnesota Central FIPS 2202 Ft US",
    "defaultExtent": "{\"xmin\": -116582266.11510086, \"ymin\": -98385996.91809723, \"xmax\": 121831599.44710183, \"ymax\": 97779609.32074675}"
  },
  103085: {
    "label": "NAD 1983 2011 StatePlane Minnesota South FIPS 2203 Ft US",
    "defaultExtent": "{\"xmin\": -117113204.75599502, \"ymin\": -97536056.0769135, \"xmax\": 122362538.08811755, \"ymax\": 92864008.81783636}"
  },
  103086: {
    "label": "NAD 1983 2011 StatePlane Mississippi East FIPS 2301",
    "defaultExtent": "{\"xmin\": -5322731.822264518, \"ymin\": -12874675.296950985, \"xmax\": 5922731.8222645195, \"ymax\": 6345623.2138176095}"
  },
  103087: {
    "label": "NAD 1983 2011 StatePlane Mississippi West FIPS 2302",
    "defaultExtent": "{\"xmin\": -4922731.8222645195, \"ymin\": -12874675.296950981, \"xmax\": 6322731.8222645195, \"ymax\": 6345623.2138176095}"
  },
  103088: {
    "label": "NAD 1983 2011 StatePlane Mississippi East FIPS 2301 Ft US",
    "defaultExtent": "{\"xmin\": -17462995.9868795, \"ymin\": -42239663.87008002, \"xmax\": 19431495.98687951, \"ymax\": 20818932.160666604}"
  },
  103089: {
    "label": "NAD 1983 2011 StatePlane Mississippi West FIPS 2302 Ft US",
    "defaultExtent": "{\"xmin\": -16150662.653546175, \"ymin\": -42239663.87008, \"xmax\": 20743829.32021284, \"ymax\": 20818932.160666604}"
  },
  103090: {
    "label": "NAD 1983 2011 StatePlane Missouri East FIPS 2401",
    "defaultExtent": "{\"xmin\": -5372638.10538164, \"ymin\": -13576774.369054265, \"xmax\": 5872638.105381638, \"ymax\": 5643203.787388095}"
  },
  103091: {
    "label": "NAD 1983 2011 StatePlane Missouri Central FIPS 2402",
    "defaultExtent": "{\"xmin\": -5122638.105381638, \"ymin\": -13576774.369054267, \"xmax\": 6122638.105381639, \"ymax\": 5643203.787388095}"
  },
  103092: {
    "label": "NAD 1983 2011 StatePlane Missouri West FIPS 2403",
    "defaultExtent": "{\"xmin\": -4772682.2074441705, \"ymin\": -13613865.018881941, \"xmax\": 6472682.2074441705, \"ymax\": 5606263.89253747}"
  },
  103093: {
    "label": "NAD 1983 2011 StatePlane Montana FIPS 2500",
    "defaultExtent": "{\"xmin\": -35665865.835127994, \"ymin\": -30006746.26947549, \"xmax\": 36865865.835221216, \"ymax\": 30370447.115839537}"
  },
  103094: {
    "label": "NAD 1983 2011 StatePlane Montana FIPS 2500 Ft Intl",
    "defaultExtent": "{\"xmin\": -117013995.52207346, \"ymin\": -98447330.28043139, \"xmax\": 120951003.39639506, \"ymax\": 99640574.5270326}"
  },
  103095: {
    "label": "NAD 1983 2011 StatePlane Nebraska FIPS 2600",
    "defaultExtent": "{\"xmin\": -36300933.080799475, \"ymin\": -29399402.24687034, \"xmax\": 37300933.080734946, \"ymax\": 25403103.617317706}"
  },
  103096: {
    "label": "NAD 1983 2011 StatePlane Nebraska FIPS 2600 Ft US",
    "defaultExtent": "{\"xmin\": -119097311.2825896, \"ymin\": -96454538.8716071, \"xmax\": 122378144.61571121, \"ymax\": 83343349.1178165}"
  },
  103097: {
    "label": "NAD 1983 2011 StatePlane Nevada East FIPS 2701",
    "defaultExtent": "{\"xmin\": -5422450.671615874, \"ymin\": -5456142.367622394, \"xmax\": 5822450.671615875, \"ymax\": 13763195.080167508}"
  },
  103098: {
    "label": "NAD 1983 2011 StatePlane Nevada Central FIPS 2702",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": -7456142.367622394, \"xmax\": 6122450.671615874, \"ymax\": 11763195.080167508}"
  },
  103099: {
    "label": "NAD 1983 2011 StatePlane Nevada West FIPS 2703",
    "defaultExtent": "{\"xmin\": -4822450.671615874, \"ymin\": -9456142.367622394, \"xmax\": 6422450.671615874, \"ymax\": 9763195.080167508}"
  },
  103100: {
    "label": "NAD 1983 2011 StatePlane Nevada East FIPS 2701 Ft US",
    "defaultExtent": "{\"xmin\": -17790156.91179308, \"ymin\": -17900693.751107804, \"xmax\": 19102490.245126415, \"ymax\": 45154749.19218288}"
  },
  103101: {
    "label": "NAD 1983 2011 StatePlane Nevada Central FIPS 2702 Ft US",
    "defaultExtent": "{\"xmin\": -16805906.91179308, \"ymin\": -24462360.417774465, \"xmax\": 20086740.24512641, \"ymax\": 38593082.525516234}"
  },
  103102: {
    "label": "NAD 1983 2011 StatePlane Nevada West FIPS 2703 Ft US",
    "defaultExtent": "{\"xmin\": -15821656.91179308, \"ymin\": -31024027.084441133, \"xmax\": 21070990.24512641, \"ymax\": 32031415.858849563}"
  },
  103103: {
    "label": "NAD 1983 2011 StatePlane New Hampshire FIPS 2800",
    "defaultExtent": "{\"xmin\": -5322825.539147401, \"ymin\": -14317328.47673371, \"xmax\": 5922825.539147401, \"ymax\": 4903290.3883611085}"
  },
  103104: {
    "label": "NAD 1983 2011 StatePlane New Hampshire FIPS 2800 Ft US",
    "defaultExtent": "{\"xmin\": -17463303.456352763, \"ymin\": -46972768.51075051, \"xmax\": 19431803.456352763, \"ymax\": 16086878.549148068}"
  },
  103105: {
    "label": "NAD 1983 2011 StatePlane New Jersey FIPS 2900",
    "defaultExtent": "{\"xmin\": -5472450.671615874, \"ymin\": -13909240.393148925, \"xmax\": 5772450.671615874, \"ymax\": 5310097.054640977}"
  },
  103106: {
    "label": "NAD 1983 2011 StatePlane New Jersey FIPS 2900 Ft US",
    "defaultExtent": "{\"xmin\": -17954198.578459747, \"ymin\": -45633899.523189425, \"xmax\": 18938448.578459747, \"ymax\": 17421543.42010127}"
  },
  103107: {
    "label": "NAD 1983 2011 StatePlane New Mexico East FIPS 3001",
    "defaultExtent": "{\"xmin\": -5457501.789915625, \"ymin\": -13040418.509908829, \"xmax\": 5787501.789915627, \"ymax\": 6179093.676604471}"
  },
  103108: {
    "label": "NAD 1983 2011 StatePlane New Mexico Central FIPS 3002",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": -13040299.949871464, \"xmax\": 6122450.671615874, \"ymax\": 6179037.49791844}"
  },
  103109: {
    "label": "NAD 1983 2011 StatePlane New Mexico West FIPS 3003",
    "defaultExtent": "{\"xmin\": -4792544.388498756, \"ymin\": -13040517.30993997, \"xmax\": 6452544.388498756, \"ymax\": 6179140.492176165}"
  },
  103110: {
    "label": "NAD 1983 2011 StatePlane New Mexico East FIPS 3001 Ft US",
    "defaultExtent": "{\"xmin\": -17905153.78908151, \"ymin\": -42783439.727925874, \"xmax\": 18987828.789081518, \"ymax\": 20272576.503993165}"
  },
  103111: {
    "label": "NAD 1983 2011 StatePlane New Mexico Central FIPS 3002 Ft US",
    "defaultExtent": "{\"xmin\": -16805906.91179308, \"ymin\": -42783050.752203286, \"xmax\": 20086740.24512641, \"ymax\": 20272392.191087414}"
  },
  103112: {
    "label": "NAD 1983 2011 StatePlane New Mexico West FIPS 3003 Ft US",
    "defaultExtent": "{\"xmin\": -15723539.381266333, \"ymin\": -42783763.87436138, \"xmax\": 21169722.714599665, \"ymax\": 20272730.0980813}"
  },
  103113: {
    "label": "NAD 1983 2011 StatePlane New York East FIPS 3101",
    "defaultExtent": "{\"xmin\": -5472450.671615874, \"ymin\": -13909240.393148925, \"xmax\": 5772450.671615874, \"ymax\": 5310097.054640977}"
  },
  103114: {
    "label": "NAD 1983 2011 StatePlane New York Central FIPS 3102",
    "defaultExtent": "{\"xmin\": -5372661.534602356, \"ymin\": -14039281.307184162, \"xmax\": 5872661.534602358, \"ymax\": 5180776.937839759}"
  },
  103115: {
    "label": "NAD 1983 2011 StatePlane New York West FIPS 3103",
    "defaultExtent": "{\"xmin\": -5272661.53460236, \"ymin\": -14039281.307184162, \"xmax\": 5972661.534602358, \"ymax\": 5180776.937839759}"
  },
  103116: {
    "label": "NAD 1983 2011 StatePlane New York Long Island FIPS 3104",
    "defaultExtent": "{\"xmin\": -36587956.42066342, \"ymin\": -29425420.120449886, \"xmax\": 37187956.42150142, \"ymax\": 24629425.6260428}"
  },
  103117: {
    "label": "NAD 1983 2011 StatePlane New York East FIPS 3101 Ft US",
    "defaultExtent": "{\"xmin\": -17954198.578459747, \"ymin\": -45633899.523189425, \"xmax\": 18938448.578459747, \"ymax\": 17421543.42010127}"
  },
  103118: {
    "label": "NAD 1983 2011 StatePlane New York Central FIPS 3102 Ft US",
    "defaultExtent": "{\"xmin\": -17626807.051441226, \"ymin\": -46060542.08865336, \"xmax\": 19267223.7181079, \"ymax\": 16997265.67022927}"
  },
  103119: {
    "label": "NAD 1983 2011 StatePlane New York West FIPS 3103 Ft US",
    "defaultExtent": "{\"xmin\": -17298723.718107905, \"ymin\": -46060542.08865336, \"xmax\": 19595307.051441234, \"ymax\": 16997265.67022927}"
  },
  103120: {
    "label": "NAD 1983 2011 StatePlane New York Long Isl FIPS 3104 Ft US",
    "defaultExtent": "{\"xmin\": -120038987.02345988, \"ymin\": -96539899.17850932, \"xmax\": 122007487.02620924, \"ymax\": 80805040.5747754}"
  },
  103121: {
    "label": "NAD 1983 2011 StatePlane North Carolina FIPS 3200",
    "defaultExtent": "{\"xmin\": -37137389.955812365, \"ymin\": -28547205.58121489, \"xmax\": 38356592.39440943, \"ymax\": 18261684.963585444}"
  },
  103122: {
    "label": "NAD 1983 2011 StatePlane North Carolina FIPS 3200 Ft US",
    "defaultExtent": "{\"xmin\": -121841586.88002771, \"ymin\": -93658623.64436917, \"xmax\": 125841586.88065827, \"ymax\": 59913544.75136323}"
  },
  103123: {
    "label": "NAD 1983 2011 StatePlane North Dakota North FIPS 3301",
    "defaultExtent": "{\"xmin\": -35595748.115963005, \"ymin\": -30339027.657292105, \"xmax\": 36795748.11641998, \"ymax\": 30974941.604174778}"
  },
  103124: {
    "label": "NAD 1983 2011 StatePlane North Dakota South FIPS 3302",
    "defaultExtent": "{\"xmin\": -35693627.05966489, \"ymin\": -30171287.465168312, \"xmax\": 36893627.0601383, \"ymax\": 30070892.076617684}"
  },
  103125: {
    "label": "NAD 1983 2011 StatePlane North Dakota North FIPS 3301 FtI",
    "defaultExtent": "{\"xmin\": -116783950.51168965, \"ymin\": -99537492.31395046, \"xmax\": 120720958.38720465, \"ymax\": 101623824.1606784}"
  },
  103126: {
    "label": "NAD 1983 2011 StatePlane North Dakota South FIPS 3302 FtI",
    "defaultExtent": "{\"xmin\": -117105075.65506853, \"ymin\": -98987163.59963356, \"xmax\": 121042083.53063746, \"ymax\": 98657782.40360132}"
  },
  103127: {
    "label": "NAD 1983 2011 StatePlane Ohio North FIPS 3401",
    "defaultExtent": "{\"xmin\": -36260139.32294244, \"ymin\": -29374687.724612944, \"xmax\": 37460139.32264283, \"ymax\": 24932674.77100941}"
  },
  103128: {
    "label": "NAD 1983 2011 StatePlane Ohio South FIPS 3402",
    "defaultExtent": "{\"xmin\": -36475619.49728193, \"ymin\": -29142750.459979072, \"xmax\": 37675619.497339524, \"ymax\": 23138992.601405952}"
  },
  103129: {
    "label": "NAD 1983 2011 StatePlane Ohio North FIPS 3401 Ft US",
    "defaultExtent": "{\"xmin\": -118963473.76202032, \"ymin\": -96373454.64316761, \"xmax\": 122900473.76103735, \"ymax\": 81799950.4778867}"
  },
  103130: {
    "label": "NAD 1983 2011 StatePlane Ohio South FIPS 3402 Ft US",
    "defaultExtent": "{\"xmin\": -119670428.30066578, \"ymin\": -95612507.13411467, \"xmax\": 123607428.30085474, \"ymax\": 75915178.22644602}"
  },
  103131: {
    "label": "NAD 1983 2011 StatePlane Oklahoma North FIPS 3501",
    "defaultExtent": "{\"xmin\": -36979233.88907343, \"ymin\": -28714973.963273533, \"xmax\": 38179233.8890346, \"ymax\": 19365200.320864283}"
  },
  103132: {
    "label": "NAD 1983 2011 StatePlane Oklahoma South FIPS 3502",
    "defaultExtent": "{\"xmin\": -37281426.008000575, \"ymin\": -28482182.493828315, \"xmax\": 38481426.007534444, \"ymax\": 17385783.726951864}"
  },
  103133: {
    "label": "NAD 1983 2011 StatePlane Oklahoma North FIPS 3501 Ft US",
    "defaultExtent": "{\"xmin\": -121322703.18440174, \"ymin\": -94209043.74450657, \"xmax\": 125259703.18427433, \"ymax\": 63533994.71936889}"
  },
  103134: {
    "label": "NAD 1983 2011 StatePlane Oklahoma South FIPS 3502 Ft US",
    "defaultExtent": "{\"xmin\": -122314145.16124853, \"ymin\": -93445293.73183505, \"xmax\": 126251145.15971924, \"ymax\": 57039858.7775079}"
  },
  103135: {
    "label": "NAD 1983 2011 StatePlane Oregon North FIPS 3601",
    "defaultExtent": "{\"xmin\": -33934395.67833442, \"ymin\": -29916770.9826887, \"xmax\": 38934395.67866903, \"ymax\": 28774826.90963382}"
  },
  103136: {
    "label": "NAD 1983 2011 StatePlane Oregon South FIPS 3602",
    "defaultExtent": "{\"xmin\": -35126017.07220474, \"ymin\": -29649727.834081486, \"xmax\": 38126017.072228044, \"ymax\": 27002732.65337064}"
  },
  103137: {
    "label": "NAD 1983 2011 StatePlane Oregon North FIPS 3601 Ft Intl",
    "defaultExtent": "{\"xmin\": -111333319.15464048, \"ymin\": -98152135.76997603, \"xmax\": 127737518.6308039, \"ymax\": 94405600.09722382}"
  },
  103138: {
    "label": "NAD 1983 2011 StatePlane Oregon South FIPS 3602 Ft Intl",
    "defaultExtent": "{\"xmin\": -115242838.16340137, \"ymin\": -97276009.95433559, \"xmax\": 125085357.8485172, \"ymax\": 88591642.56355196}"
  },
  103139: {
    "label": "NAD 1983 2011 StatePlane Pennsylvania North FIPS 3701",
    "defaultExtent": "{\"xmin\": -36219260.373335704, \"ymin\": -29439912.0075843, \"xmax\": 37419260.373972096, \"ymax\": 25273022.556772325}"
  },
  103140: {
    "label": "NAD 1983 2011 StatePlane Pennsylvania North FIPS 3701 Ft US",
    "defaultExtent": "{\"xmin\": -118829356.74151887, \"ymin\": -96587444.64488281, \"xmax\": 122766356.74360676, \"ymax\": 82916574.83834386}"
  },
  103141: {
    "label": "NAD 1983 2011 StatePlane Pennsylvania South FIPS 3702",
    "defaultExtent": "{\"xmin\": -36336434.103694856, \"ymin\": -29321240.345738437, \"xmax\": 37536434.10343623, \"ymax\": 24259081.311989907}"
  },
  103142: {
    "label": "NAD 1983 2011 StatePlane Pennsylvania South FIPS 3702 Ft US",
    "defaultExtent": "{\"xmin\": -119213784.2218722, \"ymin\": -96198102.70097685, \"xmax\": 123150784.2210237, \"ymax\": 79590002.60442021}"
  },
  103143: {
    "label": "NAD 1983 2011 StatePlane Rhode Island FIPS 3800",
    "defaultExtent": "{\"xmin\": -5522977.829082084, \"ymin\": -14160369.134576127, \"xmax\": 5722977.829082084, \"ymax\": 5060770.306298815}"
  },
  103144: {
    "label": "NAD 1983 2011 StatePlane Rhode Island FIPS 3800 Ft US",
    "defaultExtent": "{\"xmin\": -18119969.76091347, \"ymin\": -46457811.069021836, \"xmax\": 18776136.427580133, \"ymax\": 16603543.913248692}"
  },
  103145: {
    "label": "NAD 1983 2011 StatePlane South Carolina FIPS 3900",
    "defaultExtent": "{\"xmin\": -37462128.94764636, \"ymin\": -28285530.15549066, \"xmax\": 38681328.949165195, \"ymax\": 16261049.643896274}"
  },
  103146: {
    "label": "NAD 1983 2011 StatePlane South Carolina FIPS 3900 Ft Intl",
    "defaultExtent": "{\"xmin\": -122907247.20356415, \"ymin\": -92800295.78573051, \"xmax\": 126907247.20854722, \"ymax\": 53349900.40648384}"
  },
  103147: {
    "label": "NAD 1983 2011 StatePlane South Dakota North FIPS 4001",
    "defaultExtent": "{\"xmin\": -35846098.92496543, \"ymin\": -29933703.866771042, \"xmax\": 37046098.92490602, \"ymax\": 28645269.44168758}"
  },
  103148: {
    "label": "NAD 1983 2011 StatePlane South Dakota South FIPS 4002",
    "defaultExtent": "{\"xmin\": -35980929.411304265, \"ymin\": -29734707.47249241, \"xmax\": 37180929.41117397, \"ymax\": 27393676.96179096}"
  },
  103149: {
    "label": "NAD 1983 2011 StatePlane South Dakota North FIPS 4001 Ft US",
    "defaultExtent": "{\"xmin\": -117605076.22299072, \"ymin\": -98207493.43623132, \"xmax\": 121542076.22279583, \"ymax\": 93980354.82660332}"
  },
  103150: {
    "label": "NAD 1983 2011 StatePlane South Dakota South FIPS 4002 Ft US",
    "defaultExtent": "{\"xmin\": -118047432.57692073, \"ymin\": -97554619.43266883, \"xmax\": 121984432.57649325, \"ymax\": 89874088.49880916}"
  },
  103151: {
    "label": "NAD 1983 2011 StatePlane Tennessee FIPS 4100",
    "defaultExtent": "{\"xmin\": -37039650.6279049, \"ymin\": -28631019.31672457, \"xmax\": 38239650.62802555, \"ymax\": 18990861.045042165}"
  },
  103152: {
    "label": "NAD 1983 2011 StatePlane Tennessee FIPS 4100 Ft US",
    "defaultExtent": "{\"xmin\": -121520920.4350513, \"ymin\": -93933602.54162051, \"xmax\": 125457920.43544713, \"ymax\": 62305849.94527583}"
  },
  103153: {
    "label": "NAD 1983 2011 StatePlane Texas North FIPS 4201",
    "defaultExtent": "{\"xmin\": -37516299.8331, \"ymin\": -27580728.943599287, \"xmax\": 37916299.833128214, \"ymax\": 19461951.497943036}"
  },
  103154: {
    "label": "NAD 1983 2011 StatePlane Texas North Central FIPS 4202",
    "defaultExtent": "{\"xmin\": -37614616.88807972, \"ymin\": -26250391.134317875, \"xmax\": 38814616.88802452, \"ymax\": 17395582.84290185}"
  },
  103155: {
    "label": "NAD 1983 2011 StatePlane Texas Central FIPS 4203",
    "defaultExtent": "{\"xmin\": -38040663.03171102, \"ymin\": -24970101.92794974, \"xmax\": 39440663.03170802, \"ymax\": 15602650.666709403}"
  },
  103156: {
    "label": "NAD 1983 2011 StatePlane Texas South Central FIPS 4204",
    "defaultExtent": "{\"xmin\": -38625948.2389665, \"ymin\": -23722141.01585047, \"xmax\": 39825948.2389665, \"ymax\": 15422945.822918478}"
  },
  103157: {
    "label": "NAD 1983 2011 StatePlane Texas South FIPS 4205",
    "defaultExtent": "{\"xmin\": -39382898.13859524, \"ymin\": -22428383.748523414, \"xmax\": 39982898.13859524, \"ymax\": 17130472.597137526}"
  },
  103158: {
    "label": "NAD 1983 2011 StatePlane Texas North FIPS 4201 Ft US",
    "defaultExtent": "{\"xmin\": -123084727.03576224, \"ymin\": -90487774.87579198, \"xmax\": 124397060.36918813, \"ymax\": 63851419.2061681}"
  },
  103159: {
    "label": "NAD 1983 2011 StatePlane Texas North Central FIPS 4202 FtUS",
    "defaultExtent": "{\"xmin\": -123407288.90697485, \"ymin\": -86123158.24650788, \"xmax\": 127344288.90679376, \"ymax\": 57072008.04375381}"
  },
  103160: {
    "label": "NAD 1983 2011 StatePlane Texas Central FIPS 4203 Ft US",
    "defaultExtent": "{\"xmin\": -124805075.29653856, \"ymin\": -81922742.74194843, \"xmax\": 129398241.96319537, \"ymax\": 51189696.39569576}"
  },
  103161: {
    "label": "NAD 1983 2011 StatePlane Texas South Central FIPS 4204 FtUS",
    "defaultExtent": "{\"xmin\": -126725298.51400925, \"ymin\": -77828390.98283607, \"xmax\": 130662298.51400925, \"ymax\": 50600114.754025035}"
  },
  103162: {
    "label": "NAD 1983 2011 StatePlane Texas South FIPS 4205 Ft US",
    "defaultExtent": "{\"xmin\": -129208724.97637452, \"ymin\": -73583789.01494722, \"xmax\": 131177224.97637452, \"ymax\": 56202225.512442015}"
  },
  103163: {
    "label": "NAD 1983 2011 StatePlane Utah North FIPS 4301",
    "defaultExtent": "{\"xmin\": -36338834.42915058, \"ymin\": -28453982.376255378, \"xmax\": 37338834.521727204, \"ymax\": 26066690.159262396}"
  },
  103164: {
    "label": "NAD 1983 2011 StatePlane Utah Central FIPS 4302",
    "defaultExtent": "{\"xmin\": -36514060.18168421, \"ymin\": -27191819.5738922, \"xmax\": 37514060.18232606, \"ymax\": 25642908.167597167}"
  },
  103165: {
    "label": "NAD 1983 2011 StatePlane Utah South FIPS 4303",
    "defaultExtent": "{\"xmin\": -36809744.07562093, \"ymin\": -25948407.843968417, \"xmax\": 37809744.075334504, \"ymax\": 24295469.49478243}"
  },
  103166: {
    "label": "NAD 1983 2011 StatePlane Utah North FIPS 4301 Ft Intl",
    "defaultExtent": "{\"xmin\": -119221897.73343366, \"ymin\": -93352960.55201896, \"xmax\": 122502737.93217586, \"ymax\": 85520637.00545405}"
  },
  103167: {
    "label": "NAD 1983 2011 StatePlane Utah Central FIPS 4302 Ft Intl",
    "defaultExtent": "{\"xmin\": -119796785.37297969, \"ymin\": -89212006.47602427, \"xmax\": 123077625.27009863, \"ymax\": 84130276.14041065}"
  },
  103168: {
    "label": "NAD 1983 2011 StatePlane Utah South FIPS 4303 Ft Intl",
    "defaultExtent": "{\"xmin\": -120766876.88852009, \"ymin\": -85132571.66656305, \"xmax\": 124047716.78259352, \"ymax\": 79709545.58655652}"
  },
  103169: {
    "label": "NAD 1983 2011 StatePlane Utah North FIPS 4301 Ft US",
    "defaultExtent": "{\"xmin\": -119221659.28963818, \"ymin\": -93352773.84609784, \"xmax\": 122502492.92669998, \"ymax\": 85520465.96418004}"
  },
  103170: {
    "label": "NAD 1983 2011 StatePlane Utah Central FIPS 4302 Ft US",
    "defaultExtent": "{\"xmin\": -119796545.77940908, \"ymin\": -89211828.0520115, \"xmax\": 123077379.11484823, \"ymax\": 84130107.87985882}"
  },
  103171: {
    "label": "NAD 1983 2011 StatePlane Utah South FIPS 4303 Ft US",
    "defaultExtent": "{\"xmin\": -120766635.35476631, \"ymin\": -85132401.4014197, \"xmax\": 124047468.68715994, \"ymax\": 79709386.16746534}"
  },
  103172: {
    "label": "NAD 1983 2011 StatePlane Vermont FIPS 4400",
    "defaultExtent": "{\"xmin\": -5122812.1510212775, \"ymin\": -14317294.386720052, \"xmax\": 6122812.151021276, \"ymax\": 4903278.713471021}"
  },
  103173: {
    "label": "NAD 1983 2011 StatePlane Vermont FIPS 4400 Ft US",
    "defaultExtent": "{\"xmin\": -16807092.86547564, \"ymin\": -46972656.66709737, \"xmax\": 20087926.198808964, \"ymax\": 16086840.245779505}"
  },
  103174: {
    "label": "NAD 1983 2011 StatePlane Virginia North FIPS 4501",
    "defaultExtent": "{\"xmin\": -33684162.33987652, \"ymin\": -27083846.657879442, \"xmax\": 40684162.34077641, \"ymax\": 24234815.029329725}"
  },
  103175: {
    "label": "NAD 1983 2011 StatePlane Virginia South FIPS 4502",
    "defaultExtent": "{\"xmin\": -33875616.80010519, \"ymin\": -27898914.99367497, \"xmax\": 40875616.80001254, \"ymax\": 21796916.219502896}"
  },
  103176: {
    "label": "NAD 1983 2011 StatePlane Virginia North FIPS 4501 Ft US",
    "defaultExtent": "{\"xmin\": -110512122.6100782, \"ymin\": -88857586.91005945, \"xmax\": 133477955.94636394, \"ymax\": 79510388.9753926}"
  },
  103177: {
    "label": "NAD 1983 2011 StatePlane Virginia South FIPS 4502 Ft US",
    "defaultExtent": "{\"xmin\": -111140252.78501177, \"ymin\": -91531690.27508196, \"xmax\": 134106086.11804111, \"ymax\": 71512049.29681908}"
  },
  103178: {
    "label": "NAD 1983 2011 StatePlane Washington North FIPS 4601",
    "defaultExtent": "{\"xmin\": -35693390.40305884, \"ymin\": -30339611.799414955, \"xmax\": 36693390.40324891, \"ymax\": 31002022.19631627}"
  },
  103179: {
    "label": "NAD 1983 2011 StatePlane Washington South FIPS 4602",
    "defaultExtent": "{\"xmin\": -35813457.80653769, \"ymin\": -30129505.531924177, \"xmax\": 36813457.80730579, \"ymax\": 29888507.91177208}"
  },
  103180: {
    "label": "NAD 1983 2011 StatePlane Washington North FIPS 4601 Ft US",
    "defaultExtent": "{\"xmin\": -117104065.01403554, \"ymin\": -99539209.71191388, \"xmax\": 120384898.34799246, \"ymax\": 101712467.82241428}"
  },
  103181: {
    "label": "NAD 1983 2011 StatePlane Washington South FIPS 4602 Ft US",
    "defaultExtent": "{\"xmin\": -117497986.15361571, \"ymin\": -98849886.06598788, \"xmax\": 120778819.48946907, \"ymax\": 98059213.04053889}"
  },
  103182: {
    "label": "NAD 1983 2011 StatePlane West Virginia North FIPS 4701",
    "defaultExtent": "{\"xmin\": -36443027.89488857, \"ymin\": -29205240.099509504, \"xmax\": 37643027.8949125, \"ymax\": 23375051.76188209}"
  },
  103183: {
    "label": "NAD 1983 2011 StatePlane West Virginia South FIPS 4702",
    "defaultExtent": "{\"xmin\": -36647651.619762786, \"ymin\": -28996711.06985563, \"xmax\": 37847651.61951533, \"ymax\": 21766153.09529358}"
  },
  103184: {
    "label": "NAD 1983 2011 StatePlane West Virginia North FIPS 4701 FtUS",
    "defaultExtent": "{\"xmin\": -119563500.68514691, \"ymin\": -95817525.22647409, \"xmax\": 123500500.68522543, \"ymax\": 76689648.9887748}"
  },
  103185: {
    "label": "NAD 1983 2011 StatePlane West Virginia South FIPS 4702 FtUS",
    "defaultExtent": "{\"xmin\": -120234837.02250506, \"ymin\": -95133376.235018, \"xmax\": 124171837.0216932, \"ymax\": 71411120.61347568}"
  },
  103186: {
    "label": "NAD 1983 2011 StatePlane Wisconsin North FIPS 4801",
    "defaultExtent": "{\"xmin\": -35748933.755770005, \"ymin\": -30104004.24499993, \"xmax\": 36948933.75551393, \"ymax\": 29535005.089385338}"
  },
  103187: {
    "label": "NAD 1983 2011 StatePlane Wisconsin Central FIPS 4802",
    "defaultExtent": "{\"xmin\": -35862028.694118075, \"ymin\": -29930060.701200917, \"xmax\": 37062028.688673995, \"ymax\": 28477287.000578806}"
  },
  103188: {
    "label": "NAD 1983 2011 StatePlane Wisconsin South FIPS 4803",
    "defaultExtent": "{\"xmin\": -36003344.686841294, \"ymin\": -29693054.532282908, \"xmax\": 37203344.68690827, \"ymax\": 27208063.07319163}"
  },
  103189: {
    "label": "NAD 1983 2011 StatePlane Wisconsin North FIPS 4801 Ft US",
    "defaultExtent": "{\"xmin\": -117286293.49705541, \"ymin\": -98766220.59380393, \"xmax\": 121223293.49621527, \"ymax\": 96899429.19742505}"
  },
  103190: {
    "label": "NAD 1983 2011 StatePlane Wisconsin Central FIPS 4802 Ft US",
    "defaultExtent": "{\"xmin\": -117657339.14061904, \"ymin\": -98195540.81718999, \"xmax\": 121594339.12275791, \"ymax\": 93429232.43439895}"
  },
  103191: {
    "label": "NAD 1983 2011 StatePlane Wisconsin South FIPS 4803 Ft US",
    "defaultExtent": "{\"xmin\": -118120973.36007847, \"ymin\": -97417963.07799816, \"xmax\": 122057973.36029819, \"ymax\": 89265120.26596287}"
  },
  103192: {
    "label": "NAD 1983 2011 StatePlane Wyoming East FIPS 4901",
    "defaultExtent": "{\"xmin\": -5422661.534602354, \"ymin\": -14094797.558167633, \"xmax\": 5822661.534602358, \"ymax\": 5125260.686856288}"
  },
  103193: {
    "label": "NAD 1983 2011 StatePlane Wyoming East Central FIPS 4902",
    "defaultExtent": "{\"xmin\": -5222661.53460236, \"ymin\": -13994797.558167633, \"xmax\": 6022661.534602358, \"ymax\": 5225260.686856289}"
  },
  103194: {
    "label": "NAD 1983 2011 StatePlane Wyoming West Central FIPS 4903",
    "defaultExtent": "{\"xmin\": -5022661.534602358, \"ymin\": -14094797.558167633, \"xmax\": 6222661.534602358, \"ymax\": 5125260.686856289}"
  },
  103195: {
    "label": "NAD 1983 2011 StatePlane Wyoming West FIPS 4904",
    "defaultExtent": "{\"xmin\": -4822661.534602356, \"ymin\": -13994797.558167633, \"xmax\": 6422661.534602358, \"ymax\": 5225260.686856289}"
  },
  103196: {
    "label": "NAD 1983 2011 StatePlane Wyoming East FIPS 4901 Ft US",
    "defaultExtent": "{\"xmin\": -17790848.718107887, \"ymin\": -46242681.65542164, \"xmax\": 19103182.051441234, \"ymax\": 16815126.103461005}"
  },
  103197: {
    "label": "NAD 1983 2011 StatePlane Wyoming E Central FIPS 4902 Ft US",
    "defaultExtent": "{\"xmin\": -17134682.05144124, \"ymin\": -45914598.3220883, \"xmax\": 19759348.7181079, \"ymax\": 17143209.43679434}"
  },
  103198: {
    "label": "NAD 1983 2011 StatePlane Wyoming W Central FIPS 4903 Ft US",
    "defaultExtent": "{\"xmin\": -16478515.384774568, \"ymin\": -46242681.65542164, \"xmax\": 20415515.384774566, \"ymax\": 16815126.10346101}"
  },
  103199: {
    "label": "NAD 1983 2011 StatePlane Wyoming West FIPS 4904 Ft US",
    "defaultExtent": "{\"xmin\": -15822348.718107894, \"ymin\": -45914598.3220883, \"xmax\": 21071682.051441234, \"ymax\": 17143209.43679434}"
  },
  103200: {
    "label": "NAD 1983 2011 StatePlane Puerto Rico Virgin Isls FIPS 5200",
    "defaultExtent": "{\"xmin\": -38021748.15784241, \"ymin\": -26319807.671320274, \"xmax\": 38421748.157935165, \"ymax\": 15157853.89958689}"
  },
  103220: {
    "label": "NAD 1983 CORS96 StatePlane Alabama East FIPS 0101",
    "defaultExtent": "{\"xmin\": -5422788.052394249, \"ymin\": -12985652.072866369, \"xmax\": 5822788.052394249, \"ymax\": 6234838.650497956}"
  },
  103221: {
    "label": "NAD 1983 CORS96 StatePlane Alabama West FIPS 0102",
    "defaultExtent": "{\"xmin\": -5022638.105381638, \"ymin\": -12929881.135173015, \"xmax\": 6222638.105381638, \"ymax\": 6290097.0212693475}"
  },
  103222: {
    "label": "NAD 1983 CORS96 StatePlane Arizona East FIPS 0201",
    "defaultExtent": "{\"xmin\": -5409090.671615874, \"ymin\": -13040299.949871464, \"xmax\": 5835810.671615874, \"ymax\": 6179037.49791844}"
  },
  103223: {
    "label": "NAD 1983 CORS96 StatePlane Arizona Central FIPS 0202",
    "defaultExtent": "{\"xmin\": -5409090.671615872, \"ymin\": -13040299.949871464, \"xmax\": 5835810.671615874, \"ymax\": 6179037.49791844}"
  },
  103224: {
    "label": "NAD 1983 CORS96 StatePlane Arizona West FIPS 0203",
    "defaultExtent": "{\"xmin\": -5409278.105381638, \"ymin\": -13040734.670008475, \"xmax\": 5835998.105381638, \"ymax\": 6179243.48643389}"
  },
  103225: {
    "label": "NAD 1983 CORS96 StatePlane Arizona East FIPS 0201 Ft Intl",
    "defaultExtent": "{\"xmin\": -17746360.47118069, \"ymin\": -42783136.31847593, \"xmax\": 19146360.47118069, \"ymax\": 20272432.735952888}"
  },
  103226: {
    "label": "NAD 1983 CORS96 StatePlane Arizona Central FIPS 0202 Ft Intl",
    "defaultExtent": "{\"xmin\": -17746360.47118068, \"ymin\": -42783136.31847593, \"xmax\": 19146360.47118069, \"ymax\": 20272432.735952888}"
  },
  103227: {
    "label": "NAD 1983 CORS96 StatePlane Arizona West FIPS 0203 Ft Intl",
    "defaultExtent": "{\"xmin\": -17746975.41135708, \"ymin\": -42784562.5656446, \"xmax\": 19146975.41135708, \"ymax\": 20273108.55129229}"
  },
  103228: {
    "label": "NAD 1983 CORS96 StatePlane Arkansas North FIPS 0301",
    "defaultExtent": "{\"xmin\": -37285630.80991245, \"ymin\": -28623235.611847952, \"xmax\": 38085630.80986683, \"ymax\": 18652037.545588575}"
  },
  103229: {
    "label": "NAD 1983 CORS96 StatePlane Arkansas South FIPS 0302",
    "defaultExtent": "{\"xmin\": -37595985.155181974, \"ymin\": -27991400.9264211, \"xmax\": 38395985.15505119, \"ymax\": 17088046.267518982}"
  },
  103230: {
    "label": "NAD 1983 CORS96 StatePlane Arkansas North FIPS 0301 Ft US",
    "defaultExtent": "{\"xmin\": -122327940.41552109, \"ymin\": -93908065.50320448, \"xmax\": 124952607.08203807, \"ymax\": 61194226.51415184}"
  },
  103231: {
    "label": "NAD 1983 CORS96 StatePlane Arkansas South FIPS 0302 Ft US",
    "defaultExtent": "{\"xmin\": -123346161.29662618, \"ymin\": -91835121.20609988, \"xmax\": 125970827.96286376, \"ymax\": 56063031.79601851}"
  },
  103232: {
    "label": "NAD 1983 CORS96 StatePlane California I FIPS 0401",
    "defaultExtent": "{\"xmin\": -34887054.27121294, \"ymin\": -28830499.630561125, \"xmax\": 38887054.271445766, \"ymax\": 25202733.856392305}"
  },
  103233: {
    "label": "NAD 1983 CORS96 StatePlane California II FIPS 0402",
    "defaultExtent": "{\"xmin\": -35116508.911664024, \"ymin\": -28596719.981055927, \"xmax\": 39116508.911764205, \"ymax\": 23310630.66291148}"
  },
  103234: {
    "label": "NAD 1983 CORS96 StatePlane California III FIPS 0403",
    "defaultExtent": "{\"xmin\": -35314262.749591045, \"ymin\": -28428487.57731289, \"xmax\": 39314262.749551564, \"ymax\": 21771398.527620755}"
  },
  103235: {
    "label": "NAD 1983 CORS96 StatePlane California IV FIPS 0404",
    "defaultExtent": "{\"xmin\": -35498881.48266848, \"ymin\": -28265654.103608675, \"xmax\": 39498881.48289684, \"ymax\": 20437979.07279057}"
  },
  103236: {
    "label": "NAD 1983 CORS96 StatePlane California V FIPS 0405",
    "defaultExtent": "{\"xmin\": -35847160.01764138, \"ymin\": -28005403.878855906, \"xmax\": 39847160.01752812, \"ymax\": 18099234.480987653}"
  },
  103237: {
    "label": "NAD 1983 CORS96 StatePlane California VI FIPS 0406",
    "defaultExtent": "{\"xmin\": -36151940.068675034, \"ymin\": -27815848.278992966, \"xmax\": 40151940.06861196, \"ymax\": 16247248.704331301}"
  },
  103238: {
    "label": "NAD 1983 CORS96 StatePlane California I FIPS 0401 Ft US",
    "defaultExtent": "{\"xmin\": -114458610.55480444, \"ymin\": -94588064.20459928, \"xmax\": 127581943.88890164, \"ymax\": 82685969.32718042}"
  },
  103239: {
    "label": "NAD 1983 CORS96 StatePlane California II FIPS 0402 Ft US",
    "defaultExtent": "{\"xmin\": -115211412.98768437, \"ymin\": -93821072.13784765, \"xmax\": 128334746.32134637, \"ymax\": 76478294.09990206}"
  },
  103240: {
    "label": "NAD 1983 CORS96 StatePlane California III FIPS 0403 Ft US",
    "defaultExtent": "{\"xmin\": -115860210.37094994, \"ymin\": -93269129.6599007, \"xmax\": 128983543.70415375, \"ymax\": 71428330.00270241}"
  },
  103241: {
    "label": "NAD 1983 CORS96 StatePlane California IV FIPS 0404 Ft US",
    "defaultExtent": "{\"xmin\": -116465913.66438816, \"ymin\": -92734900.17158945, \"xmax\": 129589246.99847071, \"ymax\": 67053603.00798039}"
  },
  103242: {
    "label": "NAD 1983 CORS96 StatePlane California V FIPS 0405 Ft US",
    "defaultExtent": "{\"xmin\": -117608557.49121174, \"ymin\": -91881062.55921307, \"xmax\": 130731890.82417348, \"ymax\": 59380571.79304032}"
  },
  103243: {
    "label": "NAD 1983 CORS96 StatePlane California VI FIPS 0406 Ft US",
    "defaultExtent": "{\"xmin\": -118608490.04197799, \"ymin\": -91259162.22866274, \"xmax\": 131731823.37510438, \"ymax\": 53304515.12412693}"
  },
  103244: {
    "label": "NAD 1983 CORS96 StatePlane Colorado North FIPS 0501",
    "defaultExtent": "{\"xmin\": -36047295.1761787, \"ymin\": -29010844.772414874, \"xmax\": 37876098.83435248, \"ymax\": 24329837.178702205}"
  },
  103245: {
    "label": "NAD 1983 CORS96 StatePlane Colorado Central FIPS 0502",
    "defaultExtent": "{\"xmin\": -36200413.80326969, \"ymin\": -28811315.283514805, \"xmax\": 38029217.46057424, \"ymax\": 23117321.353997074}"
  },
  103246: {
    "label": "NAD 1983 CORS96 StatePlane Colorado South FIPS 0503",
    "defaultExtent": "{\"xmin\": -36387386.019578025, \"ymin\": -28644971.833411947, \"xmax\": 38216189.6778173, \"ymax\": 21664082.8771381}"
  },
  103247: {
    "label": "NAD 1983 CORS96 StatePlane Colorado North FIPS 0501 Ft US",
    "defaultExtent": "{\"xmin\": -118265167.59051295, \"ymin\": -95179746.55749778, \"xmax\": 124265167.5923714, \"ymax\": 79822140.81045881}"
  },
  103248: {
    "label": "NAD 1983 CORS96 StatePlane Colorado Central FIPS 0502 Ft US",
    "defaultExtent": "{\"xmin\": -118767524.2862273, \"ymin\": -94525123.55933148, \"xmax\": 124767524.28523397, \"ymax\": 75844078.47557206}"
  },
  103249: {
    "label": "NAD 1983 CORS96 StatePlane Colorado South FIPS 0503 Ft US",
    "defaultExtent": "{\"xmin\": -119380948.96589889, \"ymin\": -93979378.42345235, \"xmax\": 125380948.96797225, \"ymax\": 71076245.23941058}"
  },
  103250: {
    "label": "NAD 1983 CORS96 StatePlane Connecticut FIPS 0600",
    "defaultExtent": "{\"xmin\": -36501665.38080174, \"ymin\": -29365141.16645893, \"xmax\": 37111266.59970077, \"ymax\": 25482156.151964903}"
  },
  103251: {
    "label": "NAD 1983 CORS96 StatePlane Connecticut FIPS 0600 Ft US",
    "defaultExtent": "{\"xmin\": -119755880.50351368, \"ymin\": -96342133.97695734, \"xmax\": 121755880.50251827, \"ymax\": 83602707.3085715}"
  },
  103252: {
    "label": "NAD 1983 CORS96 StatePlane Delaware FIPS 0700",
    "defaultExtent": "{\"xmin\": -5422984.8578483015, \"ymin\": -13818058.715278085, \"xmax\": 5822984.857848301, \"ymax\": 5403104.752171321}"
  },
  103253: {
    "label": "NAD 1983 CORS96 StatePlane Delaware FIPS 0700 Ft US",
    "defaultExtent": "{\"xmin\": -17791909.487790633, \"ymin\": -45334747.63504151, \"xmax\": 19104242.821123965, \"ymax\": 17726686.174415406}"
  },
  103254: {
    "label": "NAD 1983 CORS96 StatePlane Florida East FIPS 0901",
    "defaultExtent": "{\"xmin\": -5422682.2074441705, \"ymin\": -12302114.955780467, \"xmax\": 5822682.2074441705, \"ymax\": 6918013.955638945}"
  },
  103255: {
    "label": "NAD 1983 CORS96 StatePlane Florida West FIPS 0902",
    "defaultExtent": "{\"xmin\": -5422682.207444169, \"ymin\": -12302114.955780467, \"xmax\": 5822682.2074441705, \"ymax\": 6918013.955638945}"
  },
  103256: {
    "label": "NAD 1983 CORS96 StatePlane Florida North FIPS 0903",
    "defaultExtent": "{\"xmin\": -38386184.53222137, \"ymin\": -27874919.325736687, \"xmax\": 39586184.5326483, \"ymax\": 11420627.34512336}"
  },
  103257: {
    "label": "NAD 1983 CORS96 StatePlane Florida East FIPS 0901 Ft US",
    "defaultExtent": "{\"xmin\": -17790916.542256415, \"ymin\": -40361188.817423075, \"xmax\": 19103249.875589747, \"ymax\": 22696850.786125436}"
  },
  103258: {
    "label": "NAD 1983 CORS96 StatePlane Florida West FIPS 0902 Ft US",
    "defaultExtent": "{\"xmin\": -17790916.542256407, \"ymin\": -40361188.817423075, \"xmax\": 19103249.875589747, \"ymax\": 22696850.786125436}"
  },
  103259: {
    "label": "NAD 1983 CORS96 StatePlane Florida North FIPS 0903 Ft US",
    "defaultExtent": "{\"xmin\": -125938673.75279626, \"ymin\": -91452964.48785444, \"xmax\": 129875673.75419696, \"ymax\": 37469174.881458886}"
  },
  103260: {
    "label": "NAD 1983 CORS96 StatePlane Georgia East FIPS 1001",
    "defaultExtent": "{\"xmin\": -5422450.671615874, \"ymin\": -12929450.11040019, \"xmax\": 5822450.671615874, \"ymax\": 6289887.337389712}"
  },
  103261: {
    "label": "NAD 1983 CORS96 StatePlane Georgia West FIPS 1002",
    "defaultExtent": "{\"xmin\": -4922450.671615872, \"ymin\": -12929450.11040019, \"xmax\": 6322450.6716158725, \"ymax\": 6289887.337389712}"
  },
  103262: {
    "label": "NAD 1983 CORS96 StatePlane Georgia East FIPS 1001 Ft US",
    "defaultExtent": "{\"xmin\": -17790156.91179308, \"ymin\": -42419370.90387128, \"xmax\": 19102490.24512641, \"ymax\": 20636072.039419413}"
  },
  103263: {
    "label": "NAD 1983 CORS96 StatePlane Georgia West FIPS 1002 Ft US",
    "defaultExtent": "{\"xmin\": -16149740.245126404, \"ymin\": -42419370.90387128, \"xmax\": 20742906.91179307, \"ymax\": 20636072.039419413}"
  },
  103264: {
    "label": "NAD 1983 CORS96 StatePlane Idaho East FIPS 1101",
    "defaultExtent": "{\"xmin\": -5422717.024861958, \"ymin\": -14224494.619744752, \"xmax\": 5822717.024861958, \"ymax\": 4995753.308761801}"
  },
  103265: {
    "label": "NAD 1983 CORS96 StatePlane Idaho Central FIPS 1102",
    "defaultExtent": "{\"xmin\": -5122717.024861958, \"ymin\": -14224494.619744752, \"xmax\": 6122717.024861961, \"ymax\": 4995753.308761801}"
  },
  103266: {
    "label": "NAD 1983 CORS96 StatePlane Idaho West FIPS 1103",
    "defaultExtent": "{\"xmin\": -4822638.105381638, \"ymin\": -14224294.967206975, \"xmax\": 6422638.105381638, \"ymax\": 4995683.189235387}"
  },
  103267: {
    "label": "NAD 1983 CORS96 StatePlane Idaho East FIPS 1101 Ft US",
    "defaultExtent": "{\"xmin\": -17791030.77240127, \"ymin\": -46668196.09827923, \"xmax\": 19103364.105734605, \"ymax\": 16390233.980496006}"
  },
  103268: {
    "label": "NAD 1983 CORS96 StatePlane Idaho Central FIPS 1102 Ft US",
    "defaultExtent": "{\"xmin\": -16806780.77240127, \"ymin\": -46668196.09827923, \"xmax\": 20087614.105734613, \"ymax\": 16390233.980496006}"
  },
  103269: {
    "label": "NAD 1983 CORS96 StatePlane Idaho West FIPS 1103 Ft US",
    "defaultExtent": "{\"xmin\": -15822271.850739589, \"ymin\": -46667541.07157821, \"xmax\": 21071605.18407292, \"ymax\": 16390003.930016432}"
  },
  103270: {
    "label": "NAD 1983 CORS96 StatePlane Illinois East FIPS 1201",
    "defaultExtent": "{\"xmin\": -5322872.397588842, \"ymin\": -13669807.500473078, \"xmax\": 5922872.397588842, \"ymax\": 5550971.541784854}"
  },
  103271: {
    "label": "NAD 1983 CORS96 StatePlane Illinois West FIPS 1202",
    "defaultExtent": "{\"xmin\": -4922682.207444172, \"ymin\": -13669345.127777718, \"xmax\": 6322682.2074441705, \"ymax\": 5550783.783641693}"
  },
  103272: {
    "label": "NAD 1983 CORS96 StatePlane Illinois East FIPS 1201 Ft US",
    "defaultExtent": "{\"xmin\": -17463457.191089388, \"ymin\": -44848360.107802086, \"xmax\": 19431957.191089388, \"ymax\": 18211812.466672473}"
  },
  103273: {
    "label": "NAD 1983 CORS96 StatePlane Illinois West FIPS 1202 Ft US",
    "defaultExtent": "{\"xmin\": -16150499.875589753, \"ymin\": -44846843.140050724, \"xmax\": 20743666.542256415, \"ymax\": 18211196.463497788}"
  },
  103274: {
    "label": "NAD 1983 CORS96 StatePlane Indiana East FIPS 1301",
    "defaultExtent": "{\"xmin\": -5522825.539147399, \"ymin\": -13512173.175005069, \"xmax\": 5722825.539147401, \"ymax\": 5708445.690089753}"
  },
  103275: {
    "label": "NAD 1983 CORS96 StatePlane Indiana West FIPS 1302",
    "defaultExtent": "{\"xmin\": -4722825.539147401, \"ymin\": -13512173.175005067, \"xmax\": 6522825.539147401, \"ymax\": 5708445.690089753}"
  },
  103276: {
    "label": "NAD 1983 CORS96 StatePlane Indiana East FIPS 1301 Ft US",
    "defaultExtent": "{\"xmin\": -18119470.123019423, \"ymin\": -44331188.15832912, \"xmax\": 18775636.789686095, \"ymax\": 18728458.901569463}"
  },
  103277: {
    "label": "NAD 1983 CORS96 StatePlane Indiana West FIPS 1302 Ft US",
    "defaultExtent": "{\"xmin\": -15494803.456352763, \"ymin\": -44331188.15832912, \"xmax\": 21400303.456352763, \"ymax\": 18728458.901569463}"
  },
  103278: {
    "label": "NAD 1983 CORS96 StatePlane Iowa North FIPS 1401",
    "defaultExtent": "{\"xmin\": -35179672.413309455, \"ymin\": -28619932.387049854, \"xmax\": 38179672.41221074, \"ymax\": 27493755.251850624}"
  },
  103279: {
    "label": "NAD 1983 CORS96 StatePlane Iowa South FIPS 1402",
    "defaultExtent": "{\"xmin\": -36344508.92670218, \"ymin\": -29415464.41348134, \"xmax\": 37344508.92730374, \"ymax\": 25047110.383624904}"
  },
  103280: {
    "label": "NAD 1983 CORS96 StatePlane Iowa North FIPS 1401 Ft US",
    "defaultExtent": "{\"xmin\": -115418641.90933275, \"ymin\": -93897228.17317939, \"xmax\": 125261141.90572806, \"ymax\": 90202428.6887799}"
  },
  103281: {
    "label": "NAD 1983 CORS96 StatePlane Iowa South FIPS 1402 Ft US",
    "defaultExtent": "{\"xmin\": -119240276.37035538, \"ymin\": -96507236.16323002, \"xmax\": 122521109.70566234, \"ymax\": 82175394.65027604}"
  },
  103282: {
    "label": "NAD 1983 CORS96 StatePlane Kansas North FIPS 1501",
    "defaultExtent": "{\"xmin\": -36694583.27893349, \"ymin\": -29176343.808520153, \"xmax\": 37494583.27889171, \"ymax\": 22940063.423304893}"
  },
  103283: {
    "label": "NAD 1983 CORS96 StatePlane Kansas South FIPS 1502",
    "defaultExtent": "{\"xmin\": -36888610.08409184, \"ymin\": -28552051.03735451, \"xmax\": 37688610.084001794, \"ymax\": 21865414.924582668}"
  },
  103284: {
    "label": "NAD 1983 CORS96 StatePlane Kansas North FIPS 1501 Ft US",
    "defaultExtent": "{\"xmin\": -120388811.97430094, \"ymin\": -95722721.31178652, \"xmax\": 123013478.64083055, \"ymax\": 75262524.74795946}"
  },
  103285: {
    "label": "NAD 1983 CORS96 StatePlane Kansas South FIPS 1502 Ft US",
    "defaultExtent": "{\"xmin\": -121025381.58422464, \"ymin\": -93674520.77838725, \"xmax\": 123650048.25059587, \"ymax\": 71736782.13173495}"
  },
  103286: {
    "label": "NAD 1983 CORS96 StatePlane Kentucky North FIPS 1601",
    "defaultExtent": "{\"xmin\": -36706540.6144563, \"ymin\": -29061234.143652882, \"xmax\": 37706540.61484275, \"ymax\": 22066321.05409854}"
  },
  103287: {
    "label": "NAD 1983 CORS96 StatePlane Kentucky North FIPS 1601 Ft US",
    "defaultExtent": "{\"xmin\": -120428041.99926203, \"ymin\": -95345065.68630116, \"xmax\": 123708875.33386324, \"ymax\": 72395921.65832162}"
  },
  103288: {
    "label": "NAD 1983 CORS96 StatePlane Kentucky FIPS 1600",
    "defaultExtent": "{\"xmin\": -35794088.47457762, \"ymin\": -27913214.15795621, \"xmax\": 38794088.4749888, \"ymax\": 22449415.817500036}"
  },
  103289: {
    "label": "NAD 1983 CORS96 StatePlane Kentucky FIPS 1600 Ft US",
    "defaultExtent": "{\"xmin\": -117434438.60367672, \"ymin\": -91578603.44989465, \"xmax\": 127276938.60502575, \"ymax\": 73652791.72791469}"
  },
  103290: {
    "label": "NAD 1983 CORS96 StatePlane Kentucky South FIPS 1602",
    "defaultExtent": "{\"xmin\": -36881000.62027418, \"ymin\": -28397921.164930366, \"xmax\": 37881000.620047584, \"ymax\": 21253778.418876573}"
  },
  103291: {
    "label": "NAD 1983 CORS96 StatePlane Kentucky South FIPS 1602 Ft US",
    "defaultExtent": "{\"xmin\": -121000416.20168285, \"ymin\": -93168846.35527569, \"xmax\": 124281249.53427276, \"ymax\": 69730104.69593088}"
  },
  103292: {
    "label": "NAD 1983 CORS96 StatePlane Louisiana North FIPS 1701",
    "defaultExtent": "{\"xmin\": -37494730.88922037, \"ymin\": -28088971.837408308, \"xmax\": 39494730.88715185, \"ymax\": 13871961.36705782}"
  },
  103293: {
    "label": "NAD 1983 CORS96 StatePlane Louisiana South FIPS 1702",
    "defaultExtent": "{\"xmin\": -38036283.63849772, \"ymin\": -27814605.530320723, \"xmax\": 40036283.638507746, \"ymax\": 11223230.411243448}"
  },
  103294: {
    "label": "NAD 1983 CORS96 StatePlane Louisiana North FIPS 1701 Ft US",
    "defaultExtent": "{\"xmin\": -123013962.92571716, \"ymin\": -92155235.10323042, \"xmax\": 129575629.58559735, \"ymax\": 45511593.25175553}"
  },
  103295: {
    "label": "NAD 1983 CORS96 StatePlane Louisiana South FIPS 1702 Ft US",
    "defaultExtent": "{\"xmin\": -124790707.23730458, \"ymin\": -91255084.9773939, \"xmax\": 131352373.90400414, \"ymax\": 36821548.440887876}"
  },
  103296: {
    "label": "NAD 1983 CORS96 StatePlane Maine East FIPS 1801",
    "defaultExtent": "{\"xmin\": -5322450.671615874, \"ymin\": -14445971.085374892, \"xmax\": 5922450.671615874, \"ymax\": 4773366.36241501}"
  },
  103297: {
    "label": "NAD 1983 CORS96 StatePlane Maine West FIPS 1802",
    "defaultExtent": "{\"xmin\": -4722825.539147399, \"ymin\": -14354355.990839133, \"xmax\": 6522825.539147401, \"ymax\": 4866262.874255687}"
  },
  103298: {
    "label": "NAD 1983 CORS96 StatePlane Maine East FIPS 1801 Ft US",
    "defaultExtent": "{\"xmin\": -17462073.578459747, \"ymin\": -47394823.46926745, \"xmax\": 19430573.578459747, \"ymax\": 15660619.474023243}"
  },
  103299: {
    "label": "NAD 1983 CORS96 StatePlane Maine West FIPS 1802 Ft US",
    "defaultExtent": "{\"xmin\": -15494803.456352757, \"ymin\": -47094249.613278046, \"xmax\": 21400303.456352763, \"ymax\": 15965397.446620531}"
  },
  103300: {
    "label": "NAD 1983 HARN WISCRS Adams County Meters",
    "defaultExtent": "{\"xmin\": -5475999.678942545, \"ymin\": -14414611.505394408, \"xmax\": 5770437.067342545, \"ymax\": 4807350.192133208}"
  },
  103301: {
    "label": "NAD 1983 HARN WISCRS Ashland County Meters",
    "defaultExtent": "{\"xmin\": -5450469.75000711, \"ymin\": -14674777.785483457, \"xmax\": 5796113.64220711, \"ymax\": 4547434.5534247495}"
  },
  103302: {
    "label": "NAD 1983 HARN WISCRS Barron County Meters",
    "defaultExtent": "{\"xmin\": -5530136.625274009, \"ymin\": -14611102.942501582, \"xmax\": 5716436.62527401, \"ymax\": 4611092.062674738}"
  },
  103303: {
    "label": "NAD 1983 HARN WISCRS Bayfield County Meters",
    "defaultExtent": "{\"xmin\": -36081251.241297, \"ymin\": -30133581.32651064, \"xmax\": 36538452.15609454, \"ymax\": 29965938.687049944}"
  },
  103304: {
    "label": "NAD 1983 HARN WISCRS Brown County Meters",
    "defaultExtent": "{\"xmin\": -5591525.433172623, \"ymin\": -14369037.137790259, \"xmax\": 5654725.433172623, \"ymax\": 4852606.861148495}"
  },
  103305: {
    "label": "NAD 1983 HARN WISCRS Buffalo County Meters",
    "defaultExtent": "{\"xmin\": -5447967.85927914, \"ymin\": -14427382.960586451, \"xmax\": 5798488.55967914, \"ymax\": 4794612.360690542}"
  },
  103306: {
    "label": "NAD 1983 HARN WISCRS Burnett County Meters",
    "defaultExtent": "{\"xmin\": -36310538.10665075, \"ymin\": -30123043.63136973, \"xmax\": 36438554.362796165, \"ymax\": 29270746.307380076}"
  },
  103307: {
    "label": "NAD 1983 HARN WISCRS Calumet County Meters",
    "defaultExtent": "{\"xmin\": -5378419.221733628, \"ymin\": -14342593.750644261, \"xmax\": 5867929.00033363, \"ymax\": 4879216.644816498}"
  },
  103308: {
    "label": "NAD 1983 HARN WISCRS Chippewa County Meters",
    "defaultExtent": "{\"xmin\": -36395668.53544931, \"ymin\": -30017602.653797057, \"xmax\": 36515759.97594681, \"ymax\": 28494412.238921527}"
  },
  103309: {
    "label": "NAD 1983 HARN WISCRS Clark County Meters",
    "defaultExtent": "{\"xmin\": -5423324.121200717, \"ymin\": -14440677.389416281, \"xmax\": 5823222.519000715, \"ymax\": 4781472.134415638}"
  },
  103310: {
    "label": "NAD 1983 HARN WISCRS Columbia County Meters",
    "defaultExtent": "{\"xmin\": -36431052.23074588, \"ymin\": -29747767.569199674, \"xmax\": 36769380.90670627, \"ymax\": 27222776.11113262}"
  },
  103311: {
    "label": "NAD 1983 HARN WISCRS Crawford County Meters",
    "defaultExtent": "{\"xmin\": -36513149.4747256, \"ymin\": -29770208.140488, \"xmax\": 36740530.729211755, \"ymax\": 26922090.079280972}"
  },
  103312: {
    "label": "NAD 1983 HARN WISCRS Dane County Meters",
    "defaultExtent": "{\"xmin\": -36393204.27436673, \"ymin\": -29659768.8323352, \"xmax\": 36887590.863248736, \"ymax\": 26893133.08936168}"
  },
  103313: {
    "label": "NAD 1983 HARN WISCRS Dodge County Meters",
    "defaultExtent": "{\"xmin\": -5359860.037903967, \"ymin\": -14204139.390344951, \"xmax\": 5886555.49050397, \"ymax\": 5017786.042432225}"
  },
  103314: {
    "label": "NAD 1983 HARN WISCRS Door County Meters",
    "defaultExtent": "{\"xmin\": -5464317.298614733, \"ymin\": -14529171.060603872, \"xmax\": 5781919.533814734, \"ymax\": 4692448.9521250585}"
  },
  103315: {
    "label": "NAD 1983 HARN WISCRS Douglas County Meters",
    "defaultExtent": "{\"xmin\": -5564098.375654565, \"ymin\": -14694314.511741694, \"xmax\": 5682361.012254565, \"ymax\": 4527685.88394782}"
  },
  103316: {
    "label": "NAD 1983 HARN WISCRS Dunn County Meters",
    "defaultExtent": "{\"xmin\": -5571427.594630674, \"ymin\": -14530420.80724789, \"xmax\": 5675059.802630675, \"ymax\": 4691627.460910719}"
  },
  103317: {
    "label": "NAD 1983 HARN WISCRS EauClaire County Meters",
    "defaultExtent": "{\"xmin\": -36345086.33363224, \"ymin\": -29955927.898352273, \"xmax\": 36585269.2140608, \"ymax\": 28452089.92831839}"
  },
  103318: {
    "label": "NAD 1983 HARN WISCRS Florence County Meters",
    "defaultExtent": "{\"xmin\": -5489820.748347894, \"ymin\": -14645159.050198944, \"xmax\": 5756826.084947893, \"ymax\": 4577161.719678768}"
  },
  103319: {
    "label": "NAD 1983 HARN WISCRS Fond du Lac County Meters",
    "defaultExtent": "{\"xmin\": -5378419.221733628, \"ymin\": -14342593.750644261, \"xmax\": 5867929.00033363, \"ymax\": 4879216.644816498}"
  },
  103320: {
    "label": "NAD 1983 HARN WISCRS Forest County Meters",
    "defaultExtent": "{\"xmin\": -5347546.850635446, \"ymin\": -14486044.282272523, \"xmax\": 5899235.957235447, \"ymax\": 4736508.889932576}"
  },
  103321: {
    "label": "NAD 1983 HARN WISCRS Grant County Meters",
    "defaultExtent": "{\"xmin\": -5380892.986126109, \"ymin\": -14197356.310155826, \"xmax\": 5865525.954326105, \"ymax\": 5024574.954351508}"
  },
  103322: {
    "label": "NAD 1983 HARN WISCRS Green County Meters",
    "defaultExtent": "{\"xmin\": -36515676.124067806, \"ymin\": -29701939.08160884, \"xmax\": 36855833.60474197, \"ymax\": 26383293.24414638}"
  },
  103323: {
    "label": "NAD 1983 HARN WISCRS GreenLake County Meters",
    "defaultExtent": "{\"xmin\": -36415114.46822533, \"ymin\": -29826466.5944898, \"xmax\": 36716867.07221894, \"ymax\": 27504152.23151386}"
  },
  103324: {
    "label": "NAD 1983 HARN WISCRS Iowa County Meters",
    "defaultExtent": "{\"xmin\": -5510154.033895843, \"ymin\": -14322691.309755355, \"xmax\": 5736316.086095845, \"ymax\": 4899327.428782176}"
  },
  103325: {
    "label": "NAD 1983 HARN WISCRS Iron County Meters",
    "defaultExtent": "{\"xmin\": -5402413.29502353, \"ymin\": -14644724.699395286, \"xmax\": 5844374.17882353, \"ymax\": 4577836.447710403}"
  },
  103326: {
    "label": "NAD 1983 HARN WISCRS Jackson County Meters",
    "defaultExtent": "{\"xmin\": -5596211.465271109, \"ymin\": -14488113.71194331, \"xmax\": 5650211.465271109, \"ymax\": 4733824.372266921}"
  },
  103327: {
    "label": "NAD 1983 HARN WISCRS Jefferson County Meters",
    "defaultExtent": "{\"xmin\": -5359860.037903967, \"ymin\": -14204139.390344951, \"xmax\": 5886555.49050397, \"ymax\": 5017786.042432225}"
  },
  103328: {
    "label": "NAD 1983 HARN WISCRS Juneau County Meters",
    "defaultExtent": "{\"xmin\": -5475999.678942545, \"ymin\": -14414611.505394408, \"xmax\": 5770437.067342545, \"ymax\": 4807350.192133208}"
  },
  103329: {
    "label": "NAD 1983 HARN WISCRS Kenosha County Meters",
    "defaultExtent": "{\"xmin\": -5437231.163384002, \"ymin\": -14286705.371294055, \"xmax\": 5809087.908984002, \"ymax\": 4935055.202661887}"
  },
  103330: {
    "label": "NAD 1983 HARN WISCRS Kewaunee County Meters",
    "defaultExtent": "{\"xmin\": -5543286.623575542, \"ymin\": -14403311.695436863, \"xmax\": 5703002.146375546, \"ymax\": 4818397.0868351525}"
  },
  103331: {
    "label": "NAD 1983 HARN WISCRS LaCrosse County Meters",
    "defaultExtent": "{\"xmin\": -5492738.241093779, \"ymin\": -14423928.347661158, \"xmax\": 5753647.560693778, \"ymax\": 4797946.277560591}"
  },
  103332: {
    "label": "NAD 1983 HARN WISCRS Lafayette County Meters",
    "defaultExtent": "{\"xmin\": -36515676.124067806, \"ymin\": -29701939.08160884, \"xmax\": 36855833.60474197, \"ymax\": 26383293.24414638}"
  },
  103333: {
    "label": "NAD 1983 HARN WISCRS Langlade County Meters",
    "defaultExtent": "{\"xmin\": -36242238.396148115, \"ymin\": -29980394.16545243, \"xmax\": 36639088.790145956, \"ymax\": 28705135.80603704}"
  },
  103334: {
    "label": "NAD 1983 HARN WISCRS Lincoln County Meters",
    "defaultExtent": "{\"xmin\": -5507220.760777146, \"ymin\": -14579160.473767418, \"xmax\": 5739478.825377146, \"ymax\": 4643250.459194705}"
  },
  103335: {
    "label": "NAD 1983 HARN WISCRS Manitowoc County Meters",
    "defaultExtent": "{\"xmin\": -5543286.623575542, \"ymin\": -14403311.695436863, \"xmax\": 5703002.146375546, \"ymax\": 4818397.0868351525}"
  },
  103336: {
    "label": "NAD 1983 HARN WISCRS Marathon County Meters",
    "defaultExtent": "{\"xmin\": -36388553.48290458, \"ymin\": -29996899.815266132, \"xmax\": 36537905.78152275, \"ymax\": 28440367.306292333}"
  },
  103337: {
    "label": "NAD 1983 HARN WISCRS Marinette County Meters",
    "defaultExtent": "{\"xmin\": -5384486.224196605, \"ymin\": -14561651.623620447, \"xmax\": 5861803.982996605, \"ymax\": 4660059.615128549}"
  },
  103338: {
    "label": "NAD 1983 HARN WISCRS Marquette County Meters",
    "defaultExtent": "{\"xmin\": -36415114.46822533, \"ymin\": -29826466.5944898, \"xmax\": 36716867.07221894, \"ymax\": 27504152.23151386}"
  },
  103339: {
    "label": "NAD 1983 HARN WISCRS Menominee County Meters",
    "defaultExtent": "{\"xmin\": -5517755.794471132, \"ymin\": -14564615.555991324, \"xmax\": 5728677.8186711315, \"ymax\": 4657340.786493374}"
  },
  103340: {
    "label": "NAD 1983 HARN WISCRS Milwaukee County Meters",
    "defaultExtent": "{\"xmin\": -5437231.163384002, \"ymin\": -14286705.371294055, \"xmax\": 5809087.908984002, \"ymax\": 4935055.202661887}"
  },
  103341: {
    "label": "NAD 1983 HARN WISCRS Monroe County Meters",
    "defaultExtent": "{\"xmin\": -36342979.86209494, \"ymin\": -29809858.90668843, \"xmax\": 36752022.279882535, \"ymax\": 27720626.304527137}"
  },
  103342: {
    "label": "NAD 1983 HARN WISCRS Oconto County Meters",
    "defaultExtent": "{\"xmin\": -5440265.797059154, \"ymin\": -14528934.082760144, \"xmax\": 5806026.532259153, \"ymax\": 4692780.783040531}"
  },
  103343: {
    "label": "NAD 1983 HARN WISCRS Oneida County Meters",
    "defaultExtent": "{\"xmin\": -36322295.619874515, \"ymin\": -30100439.439129062, \"xmax\": 36462503.899986826, \"ymax\": 29112378.812691625}"
  },
  103344: {
    "label": "NAD 1983 HARN WISCRS Outagamie County Meters",
    "defaultExtent": "{\"xmin\": -5378419.221733628, \"ymin\": -14342593.750644261, \"xmax\": 5867929.00033363, \"ymax\": 4879216.644816498}"
  },
  103345: {
    "label": "NAD 1983 HARN WISCRS Ozaukee County Meters",
    "defaultExtent": "{\"xmin\": -5437231.163384002, \"ymin\": -14286705.371294055, \"xmax\": 5809087.908984002, \"ymax\": 4935055.202661887}"
  },
  103346: {
    "label": "NAD 1983 HARN WISCRS Pepin County Meters",
    "defaultExtent": "{\"xmin\": -36319318.617179334, \"ymin\": -29930327.65606463, \"xmax\": 36654599.28777631, \"ymax\": 28243714.761941265}"
  },
  103347: {
    "label": "NAD 1983 HARN WISCRS Pierce County Meters",
    "defaultExtent": "{\"xmin\": -36319318.617179334, \"ymin\": -29930327.65606463, \"xmax\": 36654599.28777631, \"ymax\": 28243714.761941265}"
  },
  103348: {
    "label": "NAD 1983 HARN WISCRS Polk County Meters",
    "defaultExtent": "{\"xmin\": -5481524.644468694, \"ymin\": -14558545.550023401, \"xmax\": 5764989.209068694, \"ymax\": 4663547.936148363}"
  },
  103349: {
    "label": "NAD 1983 HARN WISCRS Portage County Meters",
    "defaultExtent": "{\"xmin\": -36451199.32252974, \"ymin\": -29937291.925023705, \"xmax\": 36563975.54808082, \"ymax\": 28017136.733906623}"
  },
  103350: {
    "label": "NAD 1983 HARN WISCRS Price County Meters",
    "defaultExtent": "{\"xmin\": -5395387.363370028, \"ymin\": -14547129.035942728, \"xmax\": 5851369.072570027, \"ymax\": 4675379.062408666}"
  },
  103351: {
    "label": "NAD 1983 HARN WISCRS Racine County Meters",
    "defaultExtent": "{\"xmin\": -5437231.163384002, \"ymin\": -14286705.371294055, \"xmax\": 5809087.908984002, \"ymax\": 4935055.202661887}"
  },
  103352: {
    "label": "NAD 1983 HARN WISCRS Richland County Meters",
    "defaultExtent": "{\"xmin\": -36412086.88968959, \"ymin\": -29706247.40617448, \"xmax\": 36816862.09918255, \"ymax\": 27116204.804725777}"
  },
  103353: {
    "label": "NAD 1983 HARN WISCRS Rock County Meters",
    "defaultExtent": "{\"xmin\": -5476898.3507260615, \"ymin\": -14256576.82531332, \"xmax\": 5769506.935926056, \"ymax\": 4965331.102662762}"
  },
  103354: {
    "label": "NAD 1983 HARN WISCRS Rusk County Meters",
    "defaultExtent": "{\"xmin\": -5372745.75956139, \"ymin\": -14476219.438163122, \"xmax\": 5873837.96216139, \"ymax\": 4745993.463927987}"
  },
  103355: {
    "label": "NAD 1983 HARN WISCRS Sauk County Meters",
    "defaultExtent": "{\"xmin\": -5437599.62777458, \"ymin\": -14353828.196161816, \"xmax\": 5808846.770974581, \"ymax\": 4868149.998972896}"
  },
  103356: {
    "label": "NAD 1983 HARN WISCRS Sawyer County Meters",
    "defaultExtent": "{\"xmin\": -36158404.20143948, \"ymin\": -30062508.006979614, \"xmax\": 36591830.668709375, \"ymax\": 29333702.25991753}"
  },
  103357: {
    "label": "NAD 1983 HARN WISCRS Shawano County Meters",
    "defaultExtent": "{\"xmin\": -5360760.393742168, \"ymin\": -14488930.263323259, \"xmax\": 5885627.044342167, \"ymax\": 4732947.158591758}"
  },
  103358: {
    "label": "NAD 1983 HARN WISCRS Sheboygan County Meters",
    "defaultExtent": "{\"xmin\": -5543286.623575542, \"ymin\": -14403311.695436863, \"xmax\": 5703002.146375546, \"ymax\": 4818397.0868351525}"
  },
  103359: {
    "label": "NAD 1983 HARN WISCRS St Croix County Meters",
    "defaultExtent": "{\"xmin\": -5457720.931035374, \"ymin\": -14489017.719341857, \"xmax\": 5788734.3914353745, \"ymax\": 4732975.7278623255}"
  },
  103360: {
    "label": "NAD 1983 HARN WISCRS Taylor County Meters",
    "defaultExtent": "{\"xmin\": -36251294.81385132, \"ymin\": -29980945.73129668, \"xmax\": 36625589.962651275, \"ymax\": 28727312.942050293}"
  },
  103361: {
    "label": "NAD 1983 HARN WISCRS Trempealeau County Meters",
    "defaultExtent": "{\"xmin\": -5366269.352399585, \"ymin\": -14391768.49206774, \"xmax\": 5880163.179999585, \"ymax\": 4830186.0032539135}"
  },
  103362: {
    "label": "NAD 1983 HARN WISCRS Vernon County Meters",
    "defaultExtent": "{\"xmin\": -36366665.158676155, \"ymin\": -29827126.31658915, \"xmax\": 36811674.04840423, \"ymax\": 27261976.202238657}"
  },
  103363: {
    "label": "NAD 1983 HARN WISCRS Vilas County Meters",
    "defaultExtent": "{\"xmin\": -36226135.57553386, \"ymin\": -30156500.970487516, \"xmax\": 36494969.711734675, \"ymax\": 29406028.7723625}"
  },
  103364: {
    "label": "NAD 1983 HARN WISCRS Walworth County Meters",
    "defaultExtent": "{\"xmin\": -36449709.867616914, \"ymin\": -29640949.45660499, \"xmax\": 36914835.59787832, \"ymax\": 26478994.101529367}"
  },
  103365: {
    "label": "NAD 1983 HARN WISCRS Washburn County Meters",
    "defaultExtent": "{\"xmin\": -36135451.21028559, \"ymin\": -30002546.018926416, \"xmax\": 36603624.94664866, \"ymax\": 29450128.315419946}"
  },
  103366: {
    "label": "NAD 1983 HARN WISCRS Washington County Meters",
    "defaultExtent": "{\"xmin\": -5503131.719638091, \"ymin\": -14364783.236183045, \"xmax\": 5743314.602638092, \"ymax\": 4857194.8282471}"
  },
  103367: {
    "label": "NAD 1983 HARN WISCRS Waukesha County Meters",
    "defaultExtent": "{\"xmin\": -5414419.21181396, \"ymin\": -14326015.797195243, \"xmax\": 5831996.047813959, \"ymax\": 4895909.176193831}"
  },
  103368: {
    "label": "NAD 1983 HARN WISCRS Waupaca County Meters",
    "defaultExtent": "{\"xmin\": -5438186.611029501, \"ymin\": -14420522.31087551, \"xmax\": 5808214.552829499, \"ymax\": 4801378.570586814}"
  },
  103369: {
    "label": "NAD 1983 HARN WISCRS Waushara County Meters",
    "defaultExtent": "{\"xmin\": -36416273.198916286, \"ymin\": -29901818.731134113, \"xmax\": 36656456.07900824, \"ymax\": 27745151.03787159}"
  },
  103370: {
    "label": "NAD 1983 HARN WISCRS Winnebago County Meters",
    "defaultExtent": "{\"xmin\": -5378419.221733628, \"ymin\": -14342593.750644261, \"xmax\": 5867929.00033363, \"ymax\": 4879216.644816498}"
  },
  103371: {
    "label": "NAD 1983 HARN WISCRS Wood County Meters",
    "defaultExtent": "{\"xmin\": -36304297.611852065, \"ymin\": -29845567.70777809, \"xmax\": 36721264.83892116, \"ymax\": 28054274.082976468}"
  },
  103372: {
    "label": "NAD 1983 CORS96 Maine 2000 East Zone",
    "defaultExtent": "{\"xmin\": -4922900.5126537075, \"ymin\": -14465644.401938386, \"xmax\": 6322900.5126537075, \"ymax\": 4755230.746617417}"
  },
  103373: {
    "label": "NAD 1983 CORS96 Maine 2000 Central Zone",
    "defaultExtent": "{\"xmin\": -5122900.5126537075, \"ymin\": -14428609.897370517, \"xmax\": 6122900.5126537075, \"ymax\": 4792265.251185287}"
  },
  103374: {
    "label": "NAD 1983 CORS96 Maine 2000 West Zone",
    "defaultExtent": "{\"xmin\": -5322900.5126537075, \"ymin\": -14354547.388632273, \"xmax\": 5922900.5126537075, \"ymax\": 4866327.759923531}"
  },
  103375: {
    "label": "NAD 1983 CORS96 StatePlane Maryland FIPS 1900",
    "defaultExtent": "{\"xmin\": -36747007.26427332, \"ymin\": -29091384.527313504, \"xmax\": 37547007.26462395, \"ymax\": 22554678.123978678}"
  },
  103376: {
    "label": "NAD 1983 CORS96 StatePlane Maryland FIPS 1900 Ft US",
    "defaultExtent": "{\"xmin\": -120560806.33287005, \"ymin\": -95443984.07002771, \"xmax\": 123185473.00068705, \"ymax\": 73998139.81175338}"
  },
  103377: {
    "label": "NAD 1983 CORS96 StatePlane Massachusetts Mainland FIPS 2001",
    "defaultExtent": "{\"xmin\": -36530705.74194933, \"ymin\": -28803004.001248993, \"xmax\": 36930705.741942905, \"ymax\": 26796569.38877064}"
  },
  103378: {
    "label": "NAD 1983 CORS96 StatePlane Massachusetts Island FIPS 2002",
    "defaultExtent": "{\"xmin\": -36324363.173723884, \"ymin\": -29532372.723926485, \"xmax\": 37324363.17347703, \"ymax\": 25143058.28571613}"
  },
  103379: {
    "label": "NAD 1983 CORS96 StatePlane Massachusetts Mnld FIPS 2001 FtUS",
    "defaultExtent": "{\"xmin\": -119851157.08837874, \"ymin\": -94497855.62743106, \"xmax\": 121163490.421691, \"ymax\": 87915078.06965832}"
  },
  103380: {
    "label": "NAD 1983 CORS96 StatePlane Massachusetts Isl FIPS 2002 FtUS",
    "defaultExtent": "{\"xmin\": -119174181.5124591, \"ymin\": -96890792.84508213, \"xmax\": 122455014.84498255, \"ymax\": 82490183.72572033}"
  },
  103381: {
    "label": "NAD 1983 CORS96 StatePlane Michigan North FIPS 2111",
    "defaultExtent": "{\"xmin\": -28338008.16261086, \"ymin\": -30062764.319301587, \"xmax\": 44338008.16271662, \"ymax\": 29682471.10421796}"
  },
  103382: {
    "label": "NAD 1983 CORS96 StatePlane Michigan Central FIPS 2112",
    "defaultExtent": "{\"xmin\": -30455190.630660422, \"ymin\": -29873530.398834094, \"xmax\": 42455190.63111069, \"ymax\": 28598773.969079223}"
  },
  103383: {
    "label": "NAD 1983 CORS96 StatePlane Michigan South FIPS 2113",
    "defaultExtent": "{\"xmin\": -32655721.616859354, \"ymin\": -29624554.326154392, \"xmax\": 40655721.616422996, \"ymax\": 26723713.97971105}"
  },
  103384: {
    "label": "NAD 1983 CORS96 StatePlane Michigan North FIPS 2111 Ft Intl",
    "defaultExtent": "{\"xmin\": -92972467.72510123, \"ymin\": -98631116.53314169, \"xmax\": 145465906.0456582, \"ymax\": 97383435.38129252}"
  },
  103385: {
    "label": "NAD 1983 CORS96 StatePlane Michigan Central FIPS 2112 Ft Intl",
    "defaultExtent": "{\"xmin\": -99918604.4313006, \"ymin\": -98010270.3373822, \"xmax\": 139288683.17293534, \"ymax\": 93827998.58621791}"
  },
  103386: {
    "label": "NAD 1983 CORS96 StatePlane Michigan South FIPS 2113 Ft Intl",
    "defaultExtent": "{\"xmin\": -107138194.28103462, \"ymin\": -97193419.70523094, \"xmax\": 133384913.43970798, \"ymax\": 87676226.96755593}"
  },
  103387: {
    "label": "NAD 1983 CORS96 StatePlane Minnesota North FIPS 2201",
    "defaultExtent": "{\"xmin\": -35413952.21883893, \"ymin\": -30179238.744515866, \"xmax\": 37013952.21884459, \"ymax\": 30925833.663218413}"
  },
  103388: {
    "label": "NAD 1983 CORS96 StatePlane Minnesota Central FIPS 2202",
    "defaultExtent": "{\"xmin\": -35534345.78057431, \"ymin\": -29988111.83685971, \"xmax\": 37134345.780168205, \"ymax\": 29803284.527532667}"
  },
  103389: {
    "label": "NAD 1983 CORS96 StatePlane Minnesota South FIPS 2203",
    "defaultExtent": "{\"xmin\": -35696176.20197969, \"ymin\": -29729049.350341942, \"xmax\": 37296176.20161064, \"ymax\": 28305006.49768952}"
  },
  103390: {
    "label": "NAD 1983 CORS96 StatePlane Minnesota North FIPS 2201 Ft US",
    "defaultExtent": "{\"xmin\": -116187274.9046407, \"ymin\": -99013052.44763246, \"xmax\": 121436608.23799261, \"ymax\": 101462505.94340906}"
  },
  103391: {
    "label": "NAD 1983 CORS96 StatePlane Minnesota Central FIPS 2202 Ft US",
    "defaultExtent": "{\"xmin\": -116582266.11510086, \"ymin\": -98385996.91809723, \"xmax\": 121831599.44710183, \"ymax\": 97779609.32074675}"
  },
  103392: {
    "label": "NAD 1983 CORS96 StatePlane Minnesota South FIPS 2203 Ft US",
    "defaultExtent": "{\"xmin\": -117113204.75599502, \"ymin\": -97536056.0769135, \"xmax\": 122362538.08811755, \"ymax\": 92864008.81783636}"
  },
  103393: {
    "label": "NAD 1983 CORS96 StatePlane Mississippi East FIPS 2301",
    "defaultExtent": "{\"xmin\": -5322731.822264518, \"ymin\": -12874675.296950985, \"xmax\": 5922731.8222645195, \"ymax\": 6345623.2138176095}"
  },
  103394: {
    "label": "NAD 1983 CORS96 StatePlane Mississippi West FIPS 2302",
    "defaultExtent": "{\"xmin\": -4922731.8222645195, \"ymin\": -12874675.296950981, \"xmax\": 6322731.8222645195, \"ymax\": 6345623.2138176095}"
  },
  103395: {
    "label": "NAD 1983 CORS96 StatePlane Mississippi East FIPS 2301 Ft US",
    "defaultExtent": "{\"xmin\": -17462995.9868795, \"ymin\": -42239663.87008002, \"xmax\": 19431495.98687951, \"ymax\": 20818932.160666604}"
  },
  103396: {
    "label": "NAD 1983 CORS96 StatePlane Mississippi West FIPS 2302 Ft US",
    "defaultExtent": "{\"xmin\": -16150662.653546175, \"ymin\": -42239663.87008, \"xmax\": 20743829.32021284, \"ymax\": 20818932.160666604}"
  },
  103397: {
    "label": "NAD 1983 CORS96 StatePlane Missouri East FIPS 2401",
    "defaultExtent": "{\"xmin\": -5372638.10538164, \"ymin\": -13576774.369054265, \"xmax\": 5872638.105381638, \"ymax\": 5643203.787388095}"
  },
  103398: {
    "label": "NAD 1983 CORS96 StatePlane Missouri Central FIPS 2402",
    "defaultExtent": "{\"xmin\": -5122638.105381638, \"ymin\": -13576774.369054267, \"xmax\": 6122638.105381639, \"ymax\": 5643203.787388095}"
  },
  103399: {
    "label": "NAD 1983 CORS96 StatePlane Missouri West FIPS 2403",
    "defaultExtent": "{\"xmin\": -4772682.2074441705, \"ymin\": -13613865.018881941, \"xmax\": 6472682.2074441705, \"ymax\": 5606263.89253747}"
  },
  103400: {
    "label": "NAD 1983 HARN WISCRS Adams County Feet",
    "defaultExtent": "{\"xmin\": -17965842.2802185, \"ymin\": -47291937.91408723, \"xmax\": 18931842.278218497, \"ymax\": 15772114.755217947}"
  },
  103401: {
    "label": "NAD 1983 HARN WISCRS Ashland County Feet",
    "defaultExtent": "{\"xmin\": -17882082.83864474, \"ymin\": -48145500.11745106, \"xmax\": 19016082.840644743, \"ymax\": 14919374.864450281}"
  },
  103402: {
    "label": "NAD 1983 HARN WISCRS Barron County Feet",
    "defaultExtent": "{\"xmin\": -18143456.578086477, \"ymin\": -47936593.570038356, \"xmax\": 18754675.82808648, \"ymax\": 15128224.542777618}"
  },
  103403: {
    "label": "NAD 1983 HARN WISCRS Bayfield County Feet",
    "defaultExtent": "{\"xmin\": -118376571.78080314, \"ymin\": -98863258.06916606, \"xmax\": 119876571.78213891, \"ymax\": 98313250.50865726}"
  },
  103404: {
    "label": "NAD 1983 HARN WISCRS Brown County Feet",
    "defaultExtent": "{\"xmin\": -18344863.025667176, \"ymin\": -47142416.0099002, \"xmax\": 18552211.691667177, \"ymax\": 15920594.343284687}"
  },
  103405: {
    "label": "NAD 1983 HARN WISCRS Buffalo County Feet",
    "defaultExtent": "{\"xmin\": -17873874.551599476, \"ymin\": -47333838.92960537, \"xmax\": 19023874.549599476, \"ymax\": 15730324.05361755}"
  },
  103406: {
    "label": "NAD 1983 HARN WISCRS Burnett County Feet",
    "defaultExtent": "{\"xmin\": -119128823.77120432, \"ymin\": -98828685.64760976, \"xmax\": 119548823.77230607, \"ymax\": 96032440.17643854}"
  },
  103407: {
    "label": "NAD 1983 HARN WISCRS Calumet County Feet",
    "defaultExtent": "{\"xmin\": -17645697.06361616, \"ymin\": -47055659.66364812, \"xmax\": 19251697.061616164, \"ymax\": 16007896.608792711}"
  },
  103408: {
    "label": "NAD 1983 HARN WISCRS Chippewa County Feet",
    "defaultExtent": "{\"xmin\": -119408122.51975326, \"ymin\": -98482751.37368266, \"xmax\": 119802122.52138546, \"ymax\": 93485417.48684487}"
  },
  103409: {
    "label": "NAD 1983 HARN WISCRS Clark County Feet",
    "defaultExtent": "{\"xmin\": -17793022.554030433, \"ymin\": -47377455.735325076, \"xmax\": 19105022.548030425, \"ymax\": 15687213.160780136}"
  },
  103410: {
    "label": "NAD 1983 HARN WISCRS Columbia County Feet",
    "defaultExtent": "{\"xmin\": -119524210.52728851, \"ymin\": -97597467.43291242, \"xmax\": 120634210.52450241, \"ymax\": 89313391.29164442}"
  },
  103411: {
    "label": "NAD 1983 HARN WISCRS Crawford County Feet",
    "defaultExtent": "{\"xmin\": -119793557.90172371, \"ymin\": -97671091.20711245, \"xmax\": 120539557.90069404, \"ymax\": 88326890.53557956}"
  },
  103412: {
    "label": "NAD 1983 HARN WISCRS Dane County Feet",
    "defaultExtent": "{\"xmin\": -119400037.6901955, \"ymin\": -97308758.24396572, \"xmax\": 121022037.69046454, \"ymax\": 88231887.4774681}"
  },
  103413: {
    "label": "NAD 1983 HARN WISCRS Dodge County Feet",
    "defaultExtent": "{\"xmin\": -17584807.474059183, \"ymin\": -46601413.98309106, \"xmax\": 19312807.472059187, \"ymax\": 16462519.707612056}"
  },
  103414: {
    "label": "NAD 1983 HARN WISCRS Door County Feet",
    "defaultExtent": "{\"xmin\": -17927514.337197833, \"ymin\": -47667788.72087711, \"xmax\": 18969514.337197836, \"ymax\": 15395142.937551044}"
  },
  103415: {
    "label": "NAD 1983 HARN WISCRS Douglas County Feet",
    "defaultExtent": "{\"xmin\": -18254879.420915935, \"ymin\": -48209596.86105728, \"xmax\": 18642879.42091593, \"ymax\": 14854582.77046739}"
  },
  103416: {
    "label": "NAD 1983 HARN WISCRS Dunn County Feet",
    "defaultExtent": "{\"xmin\": -18278925.366924137, \"ymin\": -47671888.93162161, \"xmax\": 18618925.368924133, \"ymax\": 15392447.761495417}"
  },
  103417: {
    "label": "NAD 1983 HARN WISCRS EauClaire County Feet",
    "defaultExtent": "{\"xmin\": -119242170.74631459, \"ymin\": -98280406.77983932, \"xmax\": 120030170.74640828, \"ymax\": 93346565.03982931}"
  },
  103418: {
    "label": "NAD 1983 HARN WISCRS Florence County Feet",
    "defaultExtent": "{\"xmin\": -18011186.905452296, \"ymin\": -48048325.98353028, \"xmax\": 18887186.913452297, \"ymax\": 15016904.742310172}"
  },
  103419: {
    "label": "NAD 1983 HARN WISCRS Fond du Lac County Feet",
    "defaultExtent": "{\"xmin\": -17645697.06361616, \"ymin\": -47055659.66364812, \"xmax\": 19251697.061616164, \"ymax\": 16007896.608792711}"
  },
  103420: {
    "label": "NAD 1983 HARN WISCRS Forest County Feet",
    "defaultExtent": "{\"xmin\": -17544409.95941154, \"ymin\": -47526296.948931515, \"xmax\": 19354409.969411545, \"ymax\": 15539696.250211371}"
  },
  103421: {
    "label": "NAD 1983 HARN WISCRS Grant County Feet",
    "defaultExtent": "{\"xmin\": -17653813.07223349, \"ymin\": -46579159.8273779, \"xmax\": 19243813.06823348, \"ymax\": 16484792.996259904}"
  },
  103422: {
    "label": "NAD 1983 HARN WISCRS Green County Feet",
    "defaultExtent": "{\"xmin\": -119801847.41751337, \"ymin\": -97447111.80310658, \"xmax\": 120917847.41775666, \"ymax\": 86559187.91897532}"
  },
  103423: {
    "label": "NAD 1983 HARN WISCRS GreenLake County Feet",
    "defaultExtent": "{\"xmin\": -119471921.38465808, \"ymin\": -97855665.81554914, \"xmax\": 120461921.38594946, \"ymax\": 90236539.44581546}"
  },
  103424: {
    "label": "NAD 1983 HARN WISCRS Iowa County Feet",
    "defaultExtent": "{\"xmin\": -18077897.026003025, \"ymin\": -46990363.071852766, \"xmax\": 18819897.026003033, \"ymax\": 16073876.739499103}"
  },
  103425: {
    "label": "NAD 1983 HARN WISCRS Iron County Feet",
    "defaultExtent": "{\"xmin\": -17724417.61855661, \"ymin\": -48046900.951153114, \"xmax\": 19174417.61855661, \"ymax\": 15019118.412309462}"
  },
  103426: {
    "label": "NAD 1983 HARN WISCRS Jackson County Feet",
    "defaultExtent": "{\"xmin\": -18360237.115643628, \"ymin\": -47533086.40360067, \"xmax\": 18537402.115643628, \"ymax\": 15530888.794345723}"
  },
  103427: {
    "label": "NAD 1983 HARN WISCRS Jefferson County Feet",
    "defaultExtent": "{\"xmin\": -17584807.474059183, \"ymin\": -46601413.98309106, \"xmax\": 19312807.472059187, \"ymax\": 16462519.707612056}"
  },
  103428: {
    "label": "NAD 1983 HARN WISCRS Juneau County Feet",
    "defaultExtent": "{\"xmin\": -17965842.2802185, \"ymin\": -47291937.91408723, \"xmax\": 18931842.278218497, \"ymax\": 15772114.755217947}"
  },
  103429: {
    "label": "NAD 1983 HARN WISCRS Kenosha County Feet",
    "defaultExtent": "{\"xmin\": -17838649.241963677, \"ymin\": -46872299.205606654, \"xmax\": 19058649.247963678, \"ymax\": 16191093.610780451}"
  },
  103430: {
    "label": "NAD 1983 HARN WISCRS Kewaunee County Feet",
    "defaultExtent": "{\"xmin\": -18186599.53037392, \"ymin\": -47254865.1207161, \"xmax\": 18710599.542373937, \"ymax\": 15808357.775787996}"
  },
  103431: {
    "label": "NAD 1983 HARN WISCRS LaCrosse County Feet",
    "defaultExtent": "{\"xmin\": -18020758.713015668, \"ymin\": -47322504.92044506, \"xmax\": 18876758.70501567, \"ymax\": 15741262.07913662}"
  },
  103432: {
    "label": "NAD 1983 HARN WISCRS Lafayette County Feet",
    "defaultExtent": "{\"xmin\": -119801847.41751337, \"ymin\": -97447111.80310658, \"xmax\": 120917847.41775666, \"ymax\": 86559187.91897532}"
  },
  103433: {
    "label": "NAD 1983 HARN WISCRS Langlade County Feet",
    "defaultExtent": "{\"xmin\": -118904743.80518673, \"ymin\": -98360676.52455291, \"xmax\": 120206743.8051797, \"ymax\": 94176766.39024208}"
  },
  103434: {
    "label": "NAD 1983 HARN WISCRS Lincoln County Feet",
    "defaultExtent": "{\"xmin\": -18068273.4461206, \"ymin\": -47831795.65438076, \"xmax\": 18830273.4461206, \"ymax\": 15233730.881512458}"
  },
  103435: {
    "label": "NAD 1983 HARN WISCRS Manitowoc County Feet",
    "defaultExtent": "{\"xmin\": -18186599.53037392, \"ymin\": -47254865.1207161, \"xmax\": 18710599.542373937, \"ymax\": 15808357.775787996}"
  },
  103436: {
    "label": "NAD 1983 HARN WISCRS Marathon County Feet",
    "defaultExtent": "{\"xmin\": -119384779.21832453, \"ymin\": -98414828.8104067, \"xmax\": 119874779.21838412, \"ymax\": 93308105.07090634}"
  },
  103437: {
    "label": "NAD 1983 HARN WISCRS Marinette County Feet",
    "defaultExtent": "{\"xmin\": -17665601.88704986, \"ymin\": -47774352.03566007, \"xmax\": 19231601.90104986, \"ymax\": 15288878.92013558}"
  },
  103438: {
    "label": "NAD 1983 HARN WISCRS Marquette County Feet",
    "defaultExtent": "{\"xmin\": -119471921.38465808, \"ymin\": -97855665.81554914, \"xmax\": 120461921.38594946, \"ymax\": 90236539.44581546}"
  },
  103439: {
    "label": "NAD 1983 HARN WISCRS Menominee County Feet",
    "defaultExtent": "{\"xmin\": -18102837.135558788, \"ymin\": -47784076.202795945, \"xmax\": 18794837.143558785, \"ymax\": 15279958.897505928}"
  },
  103440: {
    "label": "NAD 1983 HARN WISCRS Milwaukee County Feet",
    "defaultExtent": "{\"xmin\": -17838649.241963677, \"ymin\": -46872299.205606654, \"xmax\": 19058649.247963678, \"ymax\": 16191093.610780451}"
  },
  103441: {
    "label": "NAD 1983 HARN WISCRS Monroe County Feet",
    "defaultExtent": "{\"xmin\": -119235259.76408397, \"ymin\": -97801178.76275669, \"xmax\": 120577259.7633871, \"ymax\": 90946754.8010397}"
  },
  103442: {
    "label": "NAD 1983 HARN WISCRS Oconto County Feet",
    "defaultExtent": "{\"xmin\": -17848605.369219236, \"ymin\": -47667011.23634899, \"xmax\": 19048605.381219238, \"ymax\": 15396231.619198725}"
  },
  103443: {
    "label": "NAD 1983 HARN WISCRS Oneida County Feet",
    "defaultExtent": "{\"xmin\": -119167398.21251638, \"ymin\": -98754525.05939275, \"xmax\": 119627398.21222867, \"ymax\": 95512862.82178892}"
  },
  103444: {
    "label": "NAD 1983 HARN WISCRS Outagamie County Feet",
    "defaultExtent": "{\"xmin\": -17645697.06361616, \"ymin\": -47055659.66364812, \"xmax\": 19251697.061616164, \"ymax\": 16007896.608792711}"
  },
  103445: {
    "label": "NAD 1983 HARN WISCRS Ozaukee County Feet",
    "defaultExtent": "{\"xmin\": -17838649.241963677, \"ymin\": -46872299.205606654, \"xmax\": 19058649.247963678, \"ymax\": 16191093.610780451}"
  },
  103446: {
    "label": "NAD 1983 HARN WISCRS Pepin County Feet",
    "defaultExtent": "{\"xmin\": -119157631.16358735, \"ymin\": -98196416.65117303, \"xmax\": 120257631.16416274, \"ymax\": 92662920.84856795}"
  },
  103447: {
    "label": "NAD 1983 HARN WISCRS Pierce County Feet",
    "defaultExtent": "{\"xmin\": -119157631.16358735, \"ymin\": -98196416.65117303, \"xmax\": 120257631.16416274, \"ymax\": 92662920.84856795}"
  },
  103448: {
    "label": "NAD 1983 HARN WISCRS Polk County Feet",
    "defaultExtent": "{\"xmin\": -17983968.77124029, \"ymin\": -47764161.52572535, \"xmax\": 18913968.763240285, \"ymax\": 15300323.520156503}"
  },
  103449: {
    "label": "NAD 1983 HARN WISCRS Portage County Feet",
    "defaultExtent": "{\"xmin\": -119590309.77741098, \"ymin\": -98219265.25717676, \"xmax\": 119960309.77725047, \"ymax\": 91919556.10133047}"
  },
  103450: {
    "label": "NAD 1983 HARN WISCRS Price County Feet",
    "defaultExtent": "{\"xmin\": -17701366.708456665, \"ymin\": -47726705.84518318, \"xmax\": 19197366.69845666, \"ymax\": 15339139.474158013}"
  },
  103451: {
    "label": "NAD 1983 HARN WISCRS Racine County Feet",
    "defaultExtent": "{\"xmin\": -17838649.241963677, \"ymin\": -46872299.205606654, \"xmax\": 19058649.247963678, \"ymax\": 16191093.610780451}"
  },
  103452: {
    "label": "NAD 1983 HARN WISCRS Richland County Feet",
    "defaultExtent": "{\"xmin\": -119461988.40400456, \"ymin\": -97461246.69792917, \"xmax\": 120789988.40365341, \"ymax\": 88963748.59733273}"
  },
  103453: {
    "label": "NAD 1983 HARN WISCRS Rock County Feet",
    "defaultExtent": "{\"xmin\": -17968790.672312252, \"ymin\": -46773452.46802511, \"xmax\": 18928790.67231223, \"ymax\": 16290423.792343078}"
  },
  103454: {
    "label": "NAD 1983 HARN WISCRS Rusk County Feet",
    "defaultExtent": "{\"xmin\": -17627083.379176073, \"ymin\": -47494063.273145, \"xmax\": 19271083.381176077, \"ymax\": 15570813.55646557}"
  },
  103455: {
    "label": "NAD 1983 HARN WISCRS Sauk County Feet",
    "defaultExtent": "{\"xmin\": -17839858.112281434, \"ymin\": -47092518.0066398, \"xmax\": 19057858.114281435, \"ymax\": 15971588.788564658}"
  },
  103456: {
    "label": "NAD 1983 HARN WISCRS Sawyer County Feet",
    "defaultExtent": "{\"xmin\": -118629697.78379199, \"ymin\": -98630078.35266952, \"xmax\": 120051697.78602134, \"ymax\": 96238988.16464217}"
  },
  103457: {
    "label": "NAD 1983 HARN WISCRS Shawano County Feet",
    "defaultExtent": "{\"xmin\": -17587761.392224178, \"ymin\": -47535765.37274905, \"xmax\": 19309761.394224174, \"ymax\": 15528010.802317124}"
  },
  103458: {
    "label": "NAD 1983 HARN WISCRS Sheboygan County Feet",
    "defaultExtent": "{\"xmin\": -18186599.53037392, \"ymin\": -47254865.1207161, \"xmax\": 18710599.542373937, \"ymax\": 15808357.775787996}"
  },
  103459: {
    "label": "NAD 1983 HARN WISCRS St Croix County Feet",
    "defaultExtent": "{\"xmin\": -17905872.754903056, \"ymin\": -47536052.30066665, \"xmax\": 18991872.748903055, \"ymax\": 15528104.53403573}"
  },
  103460: {
    "label": "NAD 1983 HARN WISCRS Taylor County Feet",
    "defaultExtent": "{\"xmin\": -118934456.40212119, \"ymin\": -98362486.12027201, \"xmax\": 120162456.40212104, \"ymax\": 94249525.87720048}"
  },
  103461: {
    "label": "NAD 1983 HARN WISCRS Trempealeau County Feet",
    "defaultExtent": "{\"xmin\": -17605835.3666898, \"ymin\": -47216993.79484365, \"xmax\": 19291835.366689805, \"ymax\": 15847035.24522413}"
  },
  103462: {
    "label": "NAD 1983 HARN WISCRS Vernon County Feet",
    "defaultExtent": "{\"xmin\": -119312967.2750556, \"ymin\": -97857830.25651571, \"xmax\": 120772967.27350727, \"ymax\": 89442000.2573385}"
  },
  103463: {
    "label": "NAD 1983 HARN WISCRS Vilas County Feet",
    "defaultExtent": "{\"xmin\": -118851913.13428006, \"ymin\": -98938453.60044144, \"xmax\": 119733913.12903343, \"ymax\": 96476279.39755896}"
  },
  103464: {
    "label": "NAD 1983 HARN WISCRS Walworth County Feet",
    "defaultExtent": "{\"xmin\": -119585423.12392205, \"ymin\": -97247015.00886886, \"xmax\": 121111423.12412354, \"ymax\": 86873166.4814436}"
  },
  103465: {
    "label": "NAD 1983 HARN WISCRS Washburn County Feet",
    "defaultExtent": "{\"xmin\": -118554392.84583145, \"ymin\": -98433353.0632899, \"xmax\": 120090392.84571029, \"ymax\": 96620962.64864476}"
  },
  103466: {
    "label": "NAD 1983 HARN WISCRS Washington County Feet",
    "defaultExtent": "{\"xmin\": -18054857.98383388, \"ymin\": -47128459.667219706, \"xmax\": 18842857.991833888, \"ymax\": 15935646.699164862}"
  },
  103467: {
    "label": "NAD 1983 HARN WISCRS Waukesha County Feet",
    "defaultExtent": "{\"xmin\": -17763807.031147964, \"ymin\": -47001270.16145289, \"xmax\": 19133807.033147965, \"ymax\": 16062662.022074426}"
  },
  103468: {
    "label": "NAD 1983 HARN WISCRS Waupaca County Feet",
    "defaultExtent": "{\"xmin\": -17841783.906213704, \"ymin\": -47311330.28156323, \"xmax\": 19055783.912213694, \"ymax\": 15752522.860367736}"
  },
  103469: {
    "label": "NAD 1983 HARN WISCRS Waushara County Feet",
    "defaultExtent": "{\"xmin\": -119475722.986834, \"ymin\": -98102883.62006406, \"xmax\": 120263722.98582333, \"ymax\": 91027216.36374879}"
  },
  103470: {
    "label": "NAD 1983 HARN WISCRS Winnebago County Feet",
    "defaultExtent": "{\"xmin\": -17645697.06361616, \"ymin\": -47055659.66364812, \"xmax\": 19251697.061616164, \"ymax\": 16007896.608792711}"
  },
  103471: {
    "label": "NAD 1983 HARN WISCRS Wood County Feet",
    "defaultExtent": "{\"xmin\": -119108349.7483097, \"ymin\": -97918333.38818361, \"xmax\": 120476349.72560209, \"ymax\": 92041397.55365027}"
  },
  103472: {
    "label": "NAD 1983 CORS96 StatePlane Montana FIPS 2500",
    "defaultExtent": "{\"xmin\": -35665865.835127994, \"ymin\": -30006746.26947549, \"xmax\": 36865865.835221216, \"ymax\": 30370447.115839537}"
  },
  103473: {
    "label": "NAD 1983 CORS96 StatePlane Montana FIPS 2500 Ft Intl",
    "defaultExtent": "{\"xmin\": -117013995.52207346, \"ymin\": -98447330.28043139, \"xmax\": 120951003.39639506, \"ymax\": 99640574.5270326}"
  },
  103474: {
    "label": "NAD 1983 CORS96 StatePlane Nebraska FIPS 2600",
    "defaultExtent": "{\"xmin\": -36300933.080799475, \"ymin\": -29399402.24687034, \"xmax\": 37300933.080734946, \"ymax\": 25403103.617317706}"
  },
  103475: {
    "label": "NAD 1983 CORS96 StatePlane Nebraska FIPS 2600 Ft US",
    "defaultExtent": "{\"xmin\": -119097311.2825896, \"ymin\": -96454538.8716071, \"xmax\": 122378144.61571121, \"ymax\": 83343349.1178165}"
  },
  103476: {
    "label": "NAD 1983 CORS96 StatePlane Nevada East FIPS 2701",
    "defaultExtent": "{\"xmin\": -5422450.671615874, \"ymin\": -5456142.367622394, \"xmax\": 5822450.671615875, \"ymax\": 13763195.080167508}"
  },
  103477: {
    "label": "NAD 1983 CORS96 StatePlane Nevada Central FIPS 2702",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": -7456142.367622394, \"xmax\": 6122450.671615874, \"ymax\": 11763195.080167508}"
  },
  103478: {
    "label": "NAD 1983 CORS96 StatePlane Nevada West FIPS 2703",
    "defaultExtent": "{\"xmin\": -4822450.671615874, \"ymin\": -9456142.367622394, \"xmax\": 6422450.671615874, \"ymax\": 9763195.080167508}"
  },
  103479: {
    "label": "NAD 1983 CORS96 StatePlane Nevada East FIPS 2701 Ft US",
    "defaultExtent": "{\"xmin\": -17790156.91179308, \"ymin\": -17900693.751107804, \"xmax\": 19102490.245126415, \"ymax\": 45154749.19218288}"
  },
  103480: {
    "label": "NAD 1983 CORS96 StatePlane Nevada Central FIPS 2702 Ft US",
    "defaultExtent": "{\"xmin\": -16805906.91179308, \"ymin\": -24462360.417774465, \"xmax\": 20086740.24512641, \"ymax\": 38593082.525516234}"
  },
  103481: {
    "label": "NAD 1983 CORS96 StatePlane Nevada West FIPS 2703 Ft US",
    "defaultExtent": "{\"xmin\": -15821656.91179308, \"ymin\": -31024027.084441133, \"xmax\": 21070990.24512641, \"ymax\": 32031415.858849563}"
  },
  103482: {
    "label": "NAD 1983 CORS96 StatePlane New Hampshire FIPS 2800",
    "defaultExtent": "{\"xmin\": -5322825.539147401, \"ymin\": -14317328.47673371, \"xmax\": 5922825.539147401, \"ymax\": 4903290.3883611085}"
  },
  103483: {
    "label": "NAD 1983 CORS96 StatePlane New Hampshire FIPS 2800 Ft US",
    "defaultExtent": "{\"xmin\": -17463303.456352763, \"ymin\": -46972768.51075051, \"xmax\": 19431803.456352763, \"ymax\": 16086878.549148068}"
  },
  103484: {
    "label": "NAD 1983 CORS96 StatePlane New Jersey FIPS 2900",
    "defaultExtent": "{\"xmin\": -5472450.671615874, \"ymin\": -13909240.393148925, \"xmax\": 5772450.671615874, \"ymax\": 5310097.054640977}"
  },
  103485: {
    "label": "NAD 1983 CORS96 StatePlane New Jersey FIPS 2900 Ft US",
    "defaultExtent": "{\"xmin\": -17954198.578459747, \"ymin\": -45633899.523189425, \"xmax\": 18938448.578459747, \"ymax\": 17421543.42010127}"
  },
  103486: {
    "label": "NAD 1983 CORS96 StatePlane New Mexico East FIPS 3001",
    "defaultExtent": "{\"xmin\": -5457501.789915625, \"ymin\": -13040418.509908829, \"xmax\": 5787501.789915627, \"ymax\": 6179093.676604471}"
  },
  103487: {
    "label": "NAD 1983 CORS96 StatePlane New Mexico Central FIPS 3002",
    "defaultExtent": "{\"xmin\": -5122450.671615874, \"ymin\": -13040299.949871464, \"xmax\": 6122450.671615874, \"ymax\": 6179037.49791844}"
  },
  103488: {
    "label": "NAD 1983 CORS96 StatePlane New Mexico West FIPS 3003",
    "defaultExtent": "{\"xmin\": -4792544.388498756, \"ymin\": -13040517.30993997, \"xmax\": 6452544.388498756, \"ymax\": 6179140.492176165}"
  },
  103489: {
    "label": "NAD 1983 CORS96 StatePlane New Mexico East FIPS 3001 Ft US",
    "defaultExtent": "{\"xmin\": -17905153.78908151, \"ymin\": -42783439.727925874, \"xmax\": 18987828.789081518, \"ymax\": 20272576.503993165}"
  },
  103490: {
    "label": "NAD 1983 CORS96 StatePlane New Mexico Central FIPS 3002 Ft US",
    "defaultExtent": "{\"xmin\": -16805906.91179308, \"ymin\": -42783050.752203286, \"xmax\": 20086740.24512641, \"ymax\": 20272392.191087414}"
  },
  103491: {
    "label": "NAD 1983 CORS96 StatePlane New Mexico West FIPS 3003 Ft US",
    "defaultExtent": "{\"xmin\": -15723539.381266333, \"ymin\": -42783763.87436138, \"xmax\": 21169722.714599665, \"ymax\": 20272730.0980813}"
  },
  103492: {
    "label": "NAD 1983 CORS96 StatePlane New York East FIPS 3101",
    "defaultExtent": "{\"xmin\": -5472450.671615874, \"ymin\": -13909240.393148925, \"xmax\": 5772450.671615874, \"ymax\": 5310097.054640977}"
  },
  103493: {
    "label": "NAD 1983 CORS96 StatePlane New York Central FIPS 3102",
    "defaultExtent": "{\"xmin\": -5372661.534602356, \"ymin\": -14039281.307184162, \"xmax\": 5872661.534602358, \"ymax\": 5180776.937839759}"
  },
  103494: {
    "label": "NAD 1983 CORS96 StatePlane New York West FIPS 3103",
    "defaultExtent": "{\"xmin\": -5272661.53460236, \"ymin\": -14039281.307184162, \"xmax\": 5972661.534602358, \"ymax\": 5180776.937839759}"
  },
  103495: {
    "label": "NAD 1983 CORS96 StatePlane New York Long Island FIPS 3104",
    "defaultExtent": "{\"xmin\": -36587956.42066342, \"ymin\": -29425420.120449886, \"xmax\": 37187956.42150142, \"ymax\": 24629425.6260428}"
  },
  103496: {
    "label": "NAD 1983 CORS96 StatePlane New York East FIPS 3101 Ft US",
    "defaultExtent": "{\"xmin\": -17954198.578459747, \"ymin\": -45633899.523189425, \"xmax\": 18938448.578459747, \"ymax\": 17421543.42010127}"
  },
  103497: {
    "label": "NAD 1983 CORS96 StatePlane New York Central FIPS 3102 Ft US",
    "defaultExtent": "{\"xmin\": -17626807.051441226, \"ymin\": -46060542.08865336, \"xmax\": 19267223.7181079, \"ymax\": 16997265.67022927}"
  },
  103498: {
    "label": "NAD 1983 CORS96 StatePlane New York West FIPS 3103 Ft US",
    "defaultExtent": "{\"xmin\": -17298723.718107905, \"ymin\": -46060542.08865336, \"xmax\": 19595307.051441234, \"ymax\": 16997265.67022927}"
  },
  103499: {
    "label": "NAD 1983 CORS96 StatePlane New York Long Isl FIPS 3104 Ft US",
    "defaultExtent": "{\"xmin\": -120038987.02345988, \"ymin\": -96539899.17850932, \"xmax\": 122007487.02620924, \"ymax\": 80805040.5747754}"
  },
  103500: {
    "label": "NAD 1983 CORS96 StatePlane North Carolina FIPS 3200",
    "defaultExtent": "{\"xmin\": -37137389.955812365, \"ymin\": -28547205.58121489, \"xmax\": 38356592.39440943, \"ymax\": 18261684.963585444}"
  },
  103501: {
    "label": "NAD 1983 CORS96 StatePlane North Carolina FIPS 3200 Ft US",
    "defaultExtent": "{\"xmin\": -121841586.88002771, \"ymin\": -93658623.64436917, \"xmax\": 125841586.88065827, \"ymax\": 59913544.75136323}"
  },
  103502: {
    "label": "NAD 1983 CORS96 StatePlane North Dakota North FIPS 3301",
    "defaultExtent": "{\"xmin\": -35595748.115963005, \"ymin\": -30339027.657292105, \"xmax\": 36795748.11641998, \"ymax\": 30974941.604174778}"
  },
  103503: {
    "label": "NAD 1983 CORS96 StatePlane North Dakota South FIPS 3302",
    "defaultExtent": "{\"xmin\": -35693627.05966489, \"ymin\": -30171287.465168312, \"xmax\": 36893627.0601383, \"ymax\": 30070892.076617684}"
  },
  103504: {
    "label": "NAD 1983 CORS96 StatePlane North Dakota North FIPS 3301 FtI",
    "defaultExtent": "{\"xmin\": -116783950.51168965, \"ymin\": -99537492.31395046, \"xmax\": 120720958.38720465, \"ymax\": 101623824.1606784}"
  },
  103505: {
    "label": "NAD 1983 CORS96 StatePlane North Dakota South FIPS 3302 FtI",
    "defaultExtent": "{\"xmin\": -117105075.65506853, \"ymin\": -98987163.59963356, \"xmax\": 121042083.53063746, \"ymax\": 98657782.40360132}"
  },
  103506: {
    "label": "NAD 1983 CORS96 StatePlane Ohio North FIPS 3401",
    "defaultExtent": "{\"xmin\": -36260139.32294244, \"ymin\": -29374687.724612944, \"xmax\": 37460139.32264283, \"ymax\": 24932674.77100941}"
  },
  103507: {
    "label": "NAD 1983 CORS96 StatePlane Ohio South FIPS 3402",
    "defaultExtent": "{\"xmin\": -36475619.49728193, \"ymin\": -29142750.459979072, \"xmax\": 37675619.497339524, \"ymax\": 23138992.601405952}"
  },
  103508: {
    "label": "NAD 1983 CORS96 StatePlane Ohio North FIPS 3401 Ft US",
    "defaultExtent": "{\"xmin\": -118963473.76202032, \"ymin\": -96373454.64316761, \"xmax\": 122900473.76103735, \"ymax\": 81799950.4778867}"
  },
  103509: {
    "label": "NAD 1983 CORS96 StatePlane Ohio South FIPS 3402 Ft US",
    "defaultExtent": "{\"xmin\": -119670428.30066578, \"ymin\": -95612507.13411467, \"xmax\": 123607428.30085474, \"ymax\": 75915178.22644602}"
  },
  103510: {
    "label": "NAD 1983 CORS96 StatePlane Oklahoma North FIPS 3501",
    "defaultExtent": "{\"xmin\": -36979233.88907343, \"ymin\": -28714973.963273533, \"xmax\": 38179233.8890346, \"ymax\": 19365200.320864283}"
  },
  103511: {
    "label": "NAD 1983 CORS96 StatePlane Oklahoma South FIPS 3502",
    "defaultExtent": "{\"xmin\": -37281426.008000575, \"ymin\": -28482182.493828315, \"xmax\": 38481426.007534444, \"ymax\": 17385783.726951864}"
  },
  103512: {
    "label": "NAD 1983 CORS96 StatePlane Oklahoma North FIPS 3501 Ft US",
    "defaultExtent": "{\"xmin\": -121322703.18440174, \"ymin\": -94209043.74450657, \"xmax\": 125259703.18427433, \"ymax\": 63533994.71936889}"
  },
  103513: {
    "label": "NAD 1983 CORS96 StatePlane Oklahoma South FIPS 3502 Ft US",
    "defaultExtent": "{\"xmin\": -122314145.16124853, \"ymin\": -93445293.73183505, \"xmax\": 126251145.15971924, \"ymax\": 57039858.7775079}"
  },
  103514: {
    "label": "NAD 1983 CORS96 StatePlane Pennsylvania North FIPS 3701",
    "defaultExtent": "{\"xmin\": -36219260.373335704, \"ymin\": -29439912.0075843, \"xmax\": 37419260.373972096, \"ymax\": 25273022.556772325}"
  },
  103515: {
    "label": "NAD 1983 CORS96 StatePlane Pennsylvania North FIPS 3701 Ft US",
    "defaultExtent": "{\"xmin\": -118829356.74151887, \"ymin\": -96587444.64488281, \"xmax\": 122766356.74360676, \"ymax\": 82916574.83834386}"
  },
  103516: {
    "label": "NAD 1983 CORS96 StatePlane Pennsylvania South FIPS 3702",
    "defaultExtent": "{\"xmin\": -36336434.103694856, \"ymin\": -29321240.345738437, \"xmax\": 37536434.10343623, \"ymax\": 24259081.311989907}"
  },
  103517: {
    "label": "NAD 1983 CORS96 StatePlane Pennsylvania South FIPS 3702 Ft US",
    "defaultExtent": "{\"xmin\": -119213784.2218722, \"ymin\": -96198102.70097685, \"xmax\": 123150784.2210237, \"ymax\": 79590002.60442021}"
  },
  103518: {
    "label": "NAD 1983 CORS96 StatePlane Rhode Island FIPS 3800",
    "defaultExtent": "{\"xmin\": -5522977.829082084, \"ymin\": -14160369.134576127, \"xmax\": 5722977.829082084, \"ymax\": 5060770.306298815}"
  },
  103519: {
    "label": "NAD 1983 CORS96 StatePlane Rhode Island FIPS 3800 Ft US",
    "defaultExtent": "{\"xmin\": -18119969.76091347, \"ymin\": -46457811.069021836, \"xmax\": 18776136.427580133, \"ymax\": 16603543.913248692}"
  },
  103520: {
    "label": "NAD 1983 CORS96 StatePlane South Carolina FIPS 3900",
    "defaultExtent": "{\"xmin\": -37462128.94764636, \"ymin\": -28285530.15549066, \"xmax\": 38681328.949165195, \"ymax\": 16261049.643896274}"
  },
  103521: {
    "label": "NAD 1983 CORS96 StatePlane South Carolina FIPS 3900 Ft Intl",
    "defaultExtent": "{\"xmin\": -122907247.20356415, \"ymin\": -92800295.78573051, \"xmax\": 126907247.20854722, \"ymax\": 53349900.40648384}"
  },
  103522: {
    "label": "NAD 1983 CORS96 StatePlane South Dakota North FIPS 4001",
    "defaultExtent": "{\"xmin\": -35846098.92496543, \"ymin\": -29933703.866771042, \"xmax\": 37046098.92490602, \"ymax\": 28645269.44168758}"
  },
  103523: {
    "label": "NAD 1983 CORS96 StatePlane South Dakota South FIPS 4002",
    "defaultExtent": "{\"xmin\": -35980929.411304265, \"ymin\": -29734707.47249241, \"xmax\": 37180929.41117397, \"ymax\": 27393676.96179096}"
  },
  103524: {
    "label": "NAD 1983 CORS96 StatePlane South Dakota North FIPS 4001 Ft US",
    "defaultExtent": "{\"xmin\": -117605076.22299072, \"ymin\": -98207493.43623132, \"xmax\": 121542076.22279583, \"ymax\": 93980354.82660332}"
  },
  103525: {
    "label": "NAD 1983 CORS96 StatePlane South Dakota South FIPS 4002 Ft US",
    "defaultExtent": "{\"xmin\": -118047432.57692073, \"ymin\": -97554619.43266883, \"xmax\": 121984432.57649325, \"ymax\": 89874088.49880916}"
  },
  103526: {
    "label": "NAD 1983 CORS96 StatePlane Tennessee FIPS 4100",
    "defaultExtent": "{\"xmin\": -37039650.6279049, \"ymin\": -28631019.31672457, \"xmax\": 38239650.62802555, \"ymax\": 18990861.045042165}"
  },
  103527: {
    "label": "NAD 1983 CORS96 StatePlane Tennessee FIPS 4100 Ft US",
    "defaultExtent": "{\"xmin\": -121520920.4350513, \"ymin\": -93933602.54162051, \"xmax\": 125457920.43544713, \"ymax\": 62305849.94527583}"
  },
  103539: {
    "label": "NAD 1983 CORS96 StatePlane Texas North FIPS 4201",
    "defaultExtent": "{\"xmin\": -37516299.8331, \"ymin\": -27580728.943599287, \"xmax\": 37916299.833128214, \"ymax\": 19461951.497943036}"
  },
  103540: {
    "label": "NAD 1983 CORS96 StatePlane Texas North Central FIPS 4202",
    "defaultExtent": "{\"xmin\": -37614616.88807972, \"ymin\": -26250391.134317875, \"xmax\": 38814616.88802452, \"ymax\": 17395582.84290185}"
  },
  103541: {
    "label": "NAD 1983 CORS96 StatePlane Texas Central FIPS 4203",
    "defaultExtent": "{\"xmin\": -38040663.03171102, \"ymin\": -24970101.92794974, \"xmax\": 39440663.03170802, \"ymax\": 15602650.666709403}"
  },
  103542: {
    "label": "NAD 1983 CORS96 StatePlane Texas South Central FIPS 4204",
    "defaultExtent": "{\"xmin\": -38625948.2389665, \"ymin\": -23722141.01585047, \"xmax\": 39825948.2389665, \"ymax\": 15422945.822918478}"
  },
  103543: {
    "label": "NAD 1983 CORS96 StatePlane Texas South FIPS 4205",
    "defaultExtent": "{\"xmin\": -39382898.13859524, \"ymin\": -22428383.748523414, \"xmax\": 39982898.13859524, \"ymax\": 17130472.597137526}"
  },
  103544: {
    "label": "NAD 1983 CORS96 StatePlane Texas North FIPS 4201 Ft US",
    "defaultExtent": "{\"xmin\": -123084727.03576224, \"ymin\": -90487774.87579198, \"xmax\": 124397060.36918813, \"ymax\": 63851419.2061681}"
  },
  103545: {
    "label": "NAD 1983 CORS96 StatePlane Texas North Central FIPS 4202 FtUS",
    "defaultExtent": "{\"xmin\": -123407288.90697485, \"ymin\": -86123158.24650788, \"xmax\": 127344288.90679376, \"ymax\": 57072008.04375381}"
  },
  103546: {
    "label": "NAD 1983 CORS96 StatePlane Texas Central FIPS 4203 Ft US",
    "defaultExtent": "{\"xmin\": -124805075.29653856, \"ymin\": -81922742.74194843, \"xmax\": 129398241.96319537, \"ymax\": 51189696.39569576}"
  },
  103547: {
    "label": "NAD 1983 CORS96 StatePlane Texas South Central FIPS 4204 FtUS",
    "defaultExtent": "{\"xmin\": -126725298.51400925, \"ymin\": -77828390.98283607, \"xmax\": 130662298.51400925, \"ymax\": 50600114.754025035}"
  },
  103548: {
    "label": "NAD 1983 CORS96 StatePlane Texas South FIPS 4205 Ft US",
    "defaultExtent": "{\"xmin\": -129208724.97637452, \"ymin\": -73583789.01494722, \"xmax\": 131177224.97637452, \"ymax\": 56202225.512442015}"
  },
  103549: {
    "label": "NAD 1983 CORS96 StatePlane Utah North FIPS 4301",
    "defaultExtent": "{\"xmin\": -36338834.42915058, \"ymin\": -28453982.376255378, \"xmax\": 37338834.521727204, \"ymax\": 26066690.159262396}"
  },
  103550: {
    "label": "NAD 1983 CORS96 StatePlane Utah Central FIPS 4302",
    "defaultExtent": "{\"xmin\": -36514060.18168421, \"ymin\": -27191819.5738922, \"xmax\": 37514060.18232606, \"ymax\": 25642908.167597167}"
  },
  103551: {
    "label": "NAD 1983 CORS96 StatePlane Utah South FIPS 4303",
    "defaultExtent": "{\"xmin\": -36809744.07562093, \"ymin\": -25948407.843968417, \"xmax\": 37809744.075334504, \"ymax\": 24295469.49478243}"
  },
  103552: {
    "label": "NAD 1983 CORS96 StatePlane Utah North FIPS 4301 Ft Intl",
    "defaultExtent": "{\"xmin\": -119221897.73343366, \"ymin\": -93352960.55201896, \"xmax\": 122502737.93217586, \"ymax\": 85520637.00545405}"
  },
  103553: {
    "label": "NAD 1983 CORS96 StatePlane Utah Central FIPS 4302 Ft Intl",
    "defaultExtent": "{\"xmin\": -119796785.37297969, \"ymin\": -89212006.47602427, \"xmax\": 123077625.27009863, \"ymax\": 84130276.14041065}"
  },
  103554: {
    "label": "NAD 1983 CORS96 StatePlane Utah South FIPS 4303 Ft Intl",
    "defaultExtent": "{\"xmin\": -120766876.88852009, \"ymin\": -85132571.66656305, \"xmax\": 124047716.78259352, \"ymax\": 79709545.58655652}"
  },
  103555: {
    "label": "NAD 1983 CORS96 StatePlane Utah North FIPS 4301 Ft US",
    "defaultExtent": "{\"xmin\": -119221659.28963818, \"ymin\": -93352773.84609784, \"xmax\": 122502492.92669998, \"ymax\": 85520465.96418004}"
  },
  103556: {
    "label": "NAD 1983 CORS96 StatePlane Utah Central FIPS 4302 Ft US",
    "defaultExtent": "{\"xmin\": -119796545.77940893, \"ymin\": -89211828.05201131, \"xmax\": 123077379.11484808, \"ymax\": 84130107.87985836}"
  },
  103557: {
    "label": "NAD 1983 CORS96 StatePlane Utah South FIPS 4303 Ft US",
    "defaultExtent": "{\"xmin\": -120766635.35476631, \"ymin\": -85132401.4014197, \"xmax\": 124047468.68715994, \"ymax\": 79709386.16746534}"
  },
  103558: {
    "label": "NAD 1983 CORS96 StatePlane Vermont FIPS 4400",
    "defaultExtent": "{\"xmin\": -5122812.1510212775, \"ymin\": -14317294.386720052, \"xmax\": 6122812.151021276, \"ymax\": 4903278.713471021}"
  },
  103559: {
    "label": "NAD 1983 CORS96 StatePlane Virginia North FIPS 4501",
    "defaultExtent": "{\"xmin\": -33684162.33987652, \"ymin\": -27083846.657879442, \"xmax\": 40684162.34077641, \"ymax\": 24234815.029329725}"
  },
  103560: {
    "label": "NAD 1983 CORS96 StatePlane Virginia South FIPS 4502",
    "defaultExtent": "{\"xmin\": -33875616.800105184, \"ymin\": -27898914.993674964, \"xmax\": 40875616.80001253, \"ymax\": 21796916.219502874}"
  },
  103561: {
    "label": "NAD 1983 CORS96 StatePlane Virginia North FIPS 4501 Ft US",
    "defaultExtent": "{\"xmin\": -110512122.6100782, \"ymin\": -88857586.91005945, \"xmax\": 133477955.94636394, \"ymax\": 79510388.9753926}"
  },
  103562: {
    "label": "NAD 1983 CORS96 StatePlane Virginia South FIPS 4502 Ft US",
    "defaultExtent": "{\"xmin\": -111140252.78501177, \"ymin\": -91531690.27508196, \"xmax\": 134106086.11804111, \"ymax\": 71512049.29681908}"
  },
  103563: {
    "label": "NAD 1983 CORS96 StatePlane Washington North FIPS 4601",
    "defaultExtent": "{\"xmin\": -35693390.40305884, \"ymin\": -30339611.799414955, \"xmax\": 36693390.40324891, \"ymax\": 31002022.19631627}"
  },
  103564: {
    "label": "NAD 1983 CORS96 StatePlane Washington South FIPS 4602",
    "defaultExtent": "{\"xmin\": -35813457.80653769, \"ymin\": -30129505.531924177, \"xmax\": 36813457.80730579, \"ymax\": 29888507.91177208}"
  },
  103565: {
    "label": "NAD 1983 CORS96 StatePlane Washington North FIPS 4601 Ft US",
    "defaultExtent": "{\"xmin\": -117104065.01403554, \"ymin\": -99539209.71191388, \"xmax\": 120384898.34799246, \"ymax\": 101712467.82241428}"
  },
  103566: {
    "label": "NAD 1983 CORS96 StatePlane Washington South FIPS 4602 Ft US",
    "defaultExtent": "{\"xmin\": -117497986.15361571, \"ymin\": -98849886.06598788, \"xmax\": 120778819.48946907, \"ymax\": 98059213.04053889}"
  },
  103567: {
    "label": "NAD 1983 CORS96 StatePlane West Virginia North FIPS 4701",
    "defaultExtent": "{\"xmin\": -36443027.89488857, \"ymin\": -29205240.099509504, \"xmax\": 37643027.8949125, \"ymax\": 23375051.76188209}"
  },
  103568: {
    "label": "NAD 1983 CORS96 StatePlane West Virginia South FIPS 4702",
    "defaultExtent": "{\"xmin\": -36647651.619762786, \"ymin\": -28996711.06985563, \"xmax\": 37847651.61951533, \"ymax\": 21766153.09529358}"
  },
  103569: {
    "label": "NAD 1983 CORS96 StatePlane West Virginia North FIPS 4701 FtUS",
    "defaultExtent": "{\"xmin\": -119563500.68514691, \"ymin\": -95817525.22647409, \"xmax\": 123500500.68522543, \"ymax\": 76689648.9887748}"
  },
  103570: {
    "label": "NAD 1983 CORS96 StatePlane West Virginia South FIPS 4702 FtUS",
    "defaultExtent": "{\"xmin\": -120234837.02250506, \"ymin\": -95133376.235018, \"xmax\": 124171837.0216932, \"ymax\": 71411120.61347568}"
  },
  103571: {
    "label": "NAD 1983 CORS96 StatePlane Wisconsin North FIPS 4801",
    "defaultExtent": "{\"xmin\": -35748933.755770005, \"ymin\": -30104004.24499993, \"xmax\": 36948933.75551393, \"ymax\": 29535005.089385338}"
  },
  103572: {
    "label": "NAD 1983 CORS96 StatePlane Wisconsin Central FIPS 4802",
    "defaultExtent": "{\"xmin\": -35862028.694118075, \"ymin\": -29930060.701200917, \"xmax\": 37062028.688673995, \"ymax\": 28477287.000578806}"
  },
  103573: {
    "label": "NAD 1983 CORS96 StatePlane Wisconsin South FIPS 4803",
    "defaultExtent": "{\"xmin\": -36003344.686841294, \"ymin\": -29693054.532282908, \"xmax\": 37203344.68690827, \"ymax\": 27208063.07319163}"
  },
  103574: {
    "label": "NAD 1983 CORS96 StatePlane Wisconsin North FIPS 4801 Ft US",
    "defaultExtent": "{\"xmin\": -117286293.49705541, \"ymin\": -98766220.59380393, \"xmax\": 121223293.49621527, \"ymax\": 96899429.19742505}"
  },
  103575: {
    "label": "NAD 1983 CORS96 StatePlane Wisconsin Central FIPS 4802 Ft US",
    "defaultExtent": "{\"xmin\": -117657339.14061904, \"ymin\": -98195540.81718999, \"xmax\": 121594339.12275791, \"ymax\": 93429232.43439895}"
  },
  103576: {
    "label": "NAD 1983 CORS96 StatePlane Wisconsin South FIPS 4803 Ft US",
    "defaultExtent": "{\"xmin\": -118120973.36007847, \"ymin\": -97417963.07799816, \"xmax\": 122057973.36029819, \"ymax\": 89265120.26596287}"
  },
  103577: {
    "label": "NAD 1983 CORS96 StatePlane Wyoming East FIPS 4901",
    "defaultExtent": "{\"xmin\": -5422661.534602354, \"ymin\": -14094797.558167633, \"xmax\": 5822661.534602358, \"ymax\": 5125260.686856288}"
  },
  103578: {
    "label": "NAD 1983 CORS96 StatePlane Wyoming East Central FIPS 4902",
    "defaultExtent": "{\"xmin\": -5222661.53460236, \"ymin\": -13994797.558167633, \"xmax\": 6022661.534602358, \"ymax\": 5225260.686856289}"
  },
  103579: {
    "label": "NAD 1983 CORS96 StatePlane Wyoming West Central FIPS 4903",
    "defaultExtent": "{\"xmin\": -5022661.534602358, \"ymin\": -14094797.558167633, \"xmax\": 6222661.534602358, \"ymax\": 5125260.686856289}"
  },
  103580: {
    "label": "NAD 1983 CORS96 StatePlane Wyoming West FIPS 4904",
    "defaultExtent": "{\"xmin\": -4822661.534602356, \"ymin\": -13994797.558167633, \"xmax\": 6422661.534602358, \"ymax\": 5225260.686856289}"
  },
  103581: {
    "label": "NAD 1983 CORS96 StatePlane Wyoming East FIPS 4901 Ft US",
    "defaultExtent": "{\"xmin\": -17790848.718107887, \"ymin\": -46242681.65542164, \"xmax\": 19103182.051441234, \"ymax\": 16815126.103461005}"
  },
  103582: {
    "label": "NAD 1983 CORS96 StatePlane Wyoming E Central FIPS 4902 Ft US",
    "defaultExtent": "{\"xmin\": -17134682.05144124, \"ymin\": -45914598.3220883, \"xmax\": 19759348.7181079, \"ymax\": 17143209.43679434}"
  },
  103583: {
    "label": "NAD 1983 CORS96 StatePlane Wyoming W Central FIPS 4903 Ft US",
    "defaultExtent": "{\"xmin\": -16478515.384774568, \"ymin\": -46242681.65542164, \"xmax\": 20415515.384774566, \"ymax\": 16815126.10346101}"
  },
  103585: {
    "label": "NAD 1983 CORS96 StatePlane Wyoming West FIPS 4904 Ft US",
    "defaultExtent": "{\"xmin\": -15822348.718107894, \"ymin\": -45914598.3220883, \"xmax\": 21071682.051441234, \"ymax\": 17143209.43679434}"
  },
  103600: {
    "label": "NAD 1983 HARN Adj MN Aitkin Meters",
    "defaultExtent": "{\"xmin\": -5470936.269452939, \"ymin\": -14694240.864815671, \"xmax\": 5775754.908823729, \"ymax\": 4528155.697736931}"
  },
  103601: {
    "label": "NAD 1983 HARN Adj MN Clay Meters",
    "defaultExtent": "{\"xmin\": -5470860.584582501, \"ymin\": -14746933.128109692, \"xmax\": 5775675.007095687, \"ymax\": 4475197.51202641}"
  },
  103602: {
    "label": "NAD 1983 HARN Adj MN Clearwater Meters",
    "defaultExtent": "{\"xmin\": -5471009.318500131, \"ymin\": -14805331.262532959, \"xmax\": 5775832.027871024, \"ymax\": 4417321.961344965}"
  },
  103603: {
    "label": "NAD 1983 HARN Adj MN Hubbard Meters",
    "defaultExtent": "{\"xmin\": -5471004.11047687, \"ymin\": -14766620.923108619, \"xmax\": 5775826.529677583, \"ymax\": 4456014.002130191}"
  },
  103604: {
    "label": "NAD 1983 HARN Adj MN Lake Meters",
    "defaultExtent": "{\"xmin\": -5471027.584657007, \"ymin\": -14795930.274144243, \"xmax\": 5775851.311744942, \"ymax\": 4426787.128750549}"
  },
  103605: {
    "label": "NAD 1983 HARN Adj MN Mille Lacs Meters",
    "defaultExtent": "{\"xmin\": -5470908.8806610275, \"ymin\": -14627999.478303129, \"xmax\": 5775725.994038116, \"ymax\": 4594300.852417561}"
  },
  103606: {
    "label": "NAD 1983 HARN Adj MN Washington Meters",
    "defaultExtent": "{\"xmin\": -5470830.599809822, \"ymin\": -14537427.843066948, \"xmax\": 5775643.351691661, \"ymax\": 4684597.444134499}"
  },
  103607: {
    "label": "NAD 1983 HARN Adj MN Wilkin Meters",
    "defaultExtent": "{\"xmin\": -5470880.1869037, \"ymin\": -14679361.7367338, \"xmax\": 5775695.701579647, \"ymax\": 4542837.777096498}"
  },
  103608: {
    "label": "NAD 1983 HARN Adj MN Anoka Meters",
    "defaultExtent": "{\"xmin\": -36281907.992264986, \"ymin\": -30042636.32986305, \"xmax\": 36586708.60198872, \"ymax\": 28702292.8298637}"
  },
  103609: {
    "label": "NAD 1983 HARN Adj MN Becker Meters",
    "defaultExtent": "{\"xmin\": -36137310.882117555, \"ymin\": -30262595.502409987, \"xmax\": 36442111.491873555, \"ymax\": 30073824.98057687}"
  },
  103610: {
    "label": "NAD 1983 HARN Adj MN Beltrami North Meters",
    "defaultExtent": "{\"xmin\": -36031270.61480777, \"ymin\": -30427676.898529366, \"xmax\": 36336071.2245787, \"ymax\": 31062299.557786025}"
  },
  103611: {
    "label": "NAD 1983 HARN Adj MN Beltrami South Meters",
    "defaultExtent": "{\"xmin\": -36075849.778838575, \"ymin\": -30351937.68484662, \"xmax\": 36380650.388457425, \"ymax\": 30653893.898646977}"
  },
  103612: {
    "label": "NAD 1983 HARN Adj MN Benton Meters",
    "defaultExtent": "{\"xmin\": -36241287.052047364, \"ymin\": -30110587.75718067, \"xmax\": 36546087.661635615, \"ymax\": 29081668.979615368}"
  },
  103613: {
    "label": "NAD 1983 HARN Adj MN Big Stone Meters",
    "defaultExtent": "{\"xmin\": -36268119.59696432, \"ymin\": -30059092.07828809, \"xmax\": 36572920.20611363, \"ymax\": 28839040.102899063}"
  },
  103614: {
    "label": "NAD 1983 HARN Adj MN Blue Earth Meters",
    "defaultExtent": "{\"xmin\": -36380402.321450874, \"ymin\": -29887619.166320622, \"xmax\": 36685202.93148015, \"ymax\": 27796176.336456735}"
  },
  103615: {
    "label": "NAD 1983 HARN Adj MN Brown Meters",
    "defaultExtent": "{\"xmin\": -36364795.86503159, \"ymin\": -29920445.036637343, \"xmax\": 36669596.47474432, \"ymax\": 27933130.06777621}"
  },
  103616: {
    "label": "NAD 1983 HARN Adj MN Carlton Meters",
    "defaultExtent": "{\"xmin\": -36163695.16848134, \"ymin\": -30222826.845407184, \"xmax\": 36468495.7780358, \"ymax\": 29815060.763124797}"
  },
  103617: {
    "label": "NAD 1983 HARN Adj MN Carver Meters",
    "defaultExtent": "{\"xmin\": -36320339.9002166, \"ymin\": -29989733.368232775, \"xmax\": 36625140.510065764, \"ymax\": 28339014.449302025}"
  },
  103618: {
    "label": "NAD 1983 HARN Adj MN Cass North Meters",
    "defaultExtent": "{\"xmin\": -36122434.19871162, \"ymin\": -30275049.321280457, \"xmax\": 36427234.80816271, \"ymax\": 30222294.66162719}"
  },
  103619: {
    "label": "NAD 1983 HARN Adj MN Cass South Meters",
    "defaultExtent": "{\"xmin\": -36172307.227806486, \"ymin\": -30192393.3966534, \"xmax\": 36477107.83731556, \"ymax\": 29755966.505945567}"
  },
  103620: {
    "label": "NAD 1983 HARN Adj MN Chippewa Meters",
    "defaultExtent": "{\"xmin\": -36300174.94410266, \"ymin\": -30007342.48782266, \"xmax\": 36604975.553108975, \"ymax\": 28543395.528014384}"
  },
  103621: {
    "label": "NAD 1983 HARN Adj MN Chisago Meters",
    "defaultExtent": "{\"xmin\": -36256757.43821172, \"ymin\": -30077335.01658816, \"xmax\": 36561558.047927424, \"ymax\": 28939946.958324686}"
  },
  103622: {
    "label": "NAD 1983 HARN Adj MN Cook North Meters",
    "defaultExtent": "{\"xmin\": -36050381.29263075, \"ymin\": -30409851.258445274, \"xmax\": 36355181.902246356, \"ymax\": 30882894.2250116}"
  },
  103623: {
    "label": "NAD 1983 HARN Adj MN Cook South Meters",
    "defaultExtent": "{\"xmin\": -36078467.573609486, \"ymin\": -30355055.807567857, \"xmax\": 36383268.18246887, \"ymax\": 30630705.484151132}"
  },
  103624: {
    "label": "NAD 1983 HARN Adj MN Cottonwood Meters",
    "defaultExtent": "{\"xmin\": -36392388.202979594, \"ymin\": -29885589.69635948, \"xmax\": 36697188.82233767, \"ymax\": 27679908.107997127}"
  },
  103625: {
    "label": "NAD 1983 HARN Adj MN Crow Wing Meters",
    "defaultExtent": "{\"xmin\": -36172307.227806486, \"ymin\": -30192393.3966534, \"xmax\": 36477107.83731556, \"ymax\": 29755966.505945567}"
  },
  103626: {
    "label": "NAD 1983 HARN Adj MN Dakota Meters",
    "defaultExtent": "{\"xmin\": -36327248.1438133, \"ymin\": -29969504.382223852, \"xmax\": 36632048.75315058, \"ymax\": 28285006.372834925}"
  },
  103627: {
    "label": "NAD 1983 HARN Adj MN Dodge Meters",
    "defaultExtent": "{\"xmin\": -36394622.40862702, \"ymin\": -29883296.816058256, \"xmax\": 36699423.01834897, \"ymax\": 27656234.242033698}"
  },
  103628: {
    "label": "NAD 1983 HARN Adj MN Douglas Meters",
    "defaultExtent": "{\"xmin\": -36220610.22836014, \"ymin\": -30137569.401472375, \"xmax\": 36525410.838295005, \"ymax\": 29281993.341730095}"
  },
  103629: {
    "label": "NAD 1983 HARN Adj MN Faribault Meters",
    "defaultExtent": "{\"xmin\": -36426662.883764334, \"ymin\": -29838912.50570827, \"xmax\": 36731463.49343531, \"ymax\": 27364507.88003543}"
  },
  103630: {
    "label": "NAD 1983 HARN Adj MN Fillmore Meters",
    "defaultExtent": "{\"xmin\": -36427155.91729554, \"ymin\": -29838448.622796066, \"xmax\": 36731956.52771778, \"ymax\": 27355765.090940922}"
  },
  103631: {
    "label": "NAD 1983 HARN Adj MN Freeborn Meters",
    "defaultExtent": "{\"xmin\": -36426662.883764334, \"ymin\": -29838912.50570827, \"xmax\": 36731463.49343531, \"ymax\": 27364507.88003543}"
  },
  103632: {
    "label": "NAD 1983 HARN Adj MN Goodhue Meters",
    "defaultExtent": "{\"xmin\": -36349042.78532624, \"ymin\": -29933716.670718234, \"xmax\": 36653843.39459011, \"ymax\": 28087895.929493822}"
  },
  103633: {
    "label": "NAD 1983 HARN Adj MN Grant Meters",
    "defaultExtent": "{\"xmin\": -36220610.22836014, \"ymin\": -30137569.401472375, \"xmax\": 36525410.838295005, \"ymax\": 29281993.341730095}"
  },
  103634: {
    "label": "NAD 1983 HARN Adj MN Hennepin Meters",
    "defaultExtent": "{\"xmin\": -36300672.766145684, \"ymin\": -30011206.786407955, \"xmax\": 36605473.37570663, \"ymax\": 28530905.194218926}"
  },
  103635: {
    "label": "NAD 1983 HARN Adj MN Houston Meters",
    "defaultExtent": "{\"xmin\": -36426178.70089946, \"ymin\": -29838517.13622042, \"xmax\": 36730979.31052503, \"ymax\": 27364146.070271533}"
  },
  103636: {
    "label": "NAD 1983 HARN Adj MN Isanti Meters",
    "defaultExtent": "{\"xmin\": -36256757.43821172, \"ymin\": -30077335.01658816, \"xmax\": 36561558.047927424, \"ymax\": 28939946.958324686}"
  },
  103637: {
    "label": "NAD 1983 HARN Adj MN Itasca North Meters",
    "defaultExtent": "{\"xmin\": -36077415.980458334, \"ymin\": -30361633.734876364, \"xmax\": 36382216.59055435, \"ymax\": 30630486.597343463}"
  },
  103638: {
    "label": "NAD 1983 HARN Adj MN Itasca South Meters",
    "defaultExtent": "{\"xmin\": -36111927.03383071, \"ymin\": -30302054.667932987, \"xmax\": 36416727.64438293, \"ymax\": 30311559.69037669}"
  },
  103639: {
    "label": "NAD 1983 HARN Adj MN Jackson Meters",
    "defaultExtent": "{\"xmin\": -36426662.883764334, \"ymin\": -29838912.50570827, \"xmax\": 36731463.49343531, \"ymax\": 27364507.88003543}"
  },
  103640: {
    "label": "NAD 1983 HARN Adj MN Kanabec Meters",
    "defaultExtent": "{\"xmin\": -36207378.30873227, \"ymin\": -30136834.52075254, \"xmax\": 36512178.91832771, \"ymax\": 29421616.091759343}"
  },
  103641: {
    "label": "NAD 1983 HARN Adj MN Kandiyohi Meters",
    "defaultExtent": "{\"xmin\": -36288283.192413166, \"ymin\": -30025615.788637865, \"xmax\": 36593083.80191191, \"ymax\": 28655328.099215075}"
  },
  103642: {
    "label": "NAD 1983 HARN Adj MN Kittson Meters",
    "defaultExtent": "{\"xmin\": -35995728.48300656, \"ymin\": -30491824.200847685, \"xmax\": 36300529.09258714, \"ymax\": 31379588.79462292}"
  },
  103643: {
    "label": "NAD 1983 HARN Adj MN Koochiching Meters",
    "defaultExtent": "{\"xmin\": -36029880.77674174, \"ymin\": -30408453.007271778, \"xmax\": 36334681.38630188, \"ymax\": 31095079.21751333}"
  },
  103644: {
    "label": "NAD 1983 HARN Adj MN Lac Qui Parle Meters",
    "defaultExtent": "{\"xmin\": -36300174.94410266, \"ymin\": -30007342.48782266, \"xmax\": 36604975.553108975, \"ymax\": 28543395.528014384}"
  },
  103645: {
    "label": "NAD 1983 HARN Adj MN Lake of the Woods North Meters",
    "defaultExtent": "{\"xmin\": -35960242.137462355, \"ymin\": -30565110.324345, \"xmax\": 36265042.74750051, \"ymax\": 31690081.92238179}"
  },
  103646: {
    "label": "NAD 1983 HARN Adj MN Lake of the Woods South Meters",
    "defaultExtent": "{\"xmin\": -36003273.70652108, \"ymin\": -30470981.617989667, \"xmax\": 36308074.315827735, \"ymax\": 31321340.29668578}"
  },
  103647: {
    "label": "NAD 1983 HARN Adj MN Le Sueur Meters",
    "defaultExtent": "{\"xmin\": -36349042.78532624, \"ymin\": -29933716.670718234, \"xmax\": 36653843.39459011, \"ymax\": 28087895.929493822}"
  },
  103648: {
    "label": "NAD 1983 HARN Adj MN Lincoln Meters",
    "defaultExtent": "{\"xmin\": -36353392.89297958, \"ymin\": -29934202.499203388, \"xmax\": 36658193.50266458, \"ymax\": 28055826.348120984}"
  },
  103649: {
    "label": "NAD 1983 HARN Adj MN Lyon Meters",
    "defaultExtent": "{\"xmin\": -36356047.52559507, \"ymin\": -29932952.671299923, \"xmax\": 36660848.13501646, \"ymax\": 28022752.679916188}"
  },
  103650: {
    "label": "NAD 1983 HARN Adj MN McLeod Meters",
    "defaultExtent": "{\"xmin\": -36326449.383269794, \"ymin\": -29967897.078986958, \"xmax\": 36631249.9933381, \"ymax\": 28294828.27852361}"
  },
  103651: {
    "label": "NAD 1983 HARN Adj MN Mahnomen Meters",
    "defaultExtent": "{\"xmin\": -36106118.36888571, \"ymin\": -30317277.29654278, \"xmax\": 36410918.9783231, \"ymax\": 30361447.389576524}"
  },
  103652: {
    "label": "NAD 1983 HARN Adj MN Marshall Meters",
    "defaultExtent": "{\"xmin\": -36025972.74755119, \"ymin\": -30445330.616710704, \"xmax\": 36330773.35713201, \"ymax\": 31098369.95282041}"
  },
  103653: {
    "label": "NAD 1983 HARN Adj MN Martin Meters",
    "defaultExtent": "{\"xmin\": -36426662.883764334, \"ymin\": -29838912.50570827, \"xmax\": 36731463.49343531, \"ymax\": 27364507.88003543}"
  },
  103654: {
    "label": "NAD 1983 HARN Adj MN Meeker Meters",
    "defaultExtent": "{\"xmin\": -36288283.192413166, \"ymin\": -30025615.788637865, \"xmax\": 36593083.80191191, \"ymax\": 28655328.099215075}"
  },
  103655: {
    "label": "NAD 1983 HARN Adj MN Morrison Meters",
    "defaultExtent": "{\"xmin\": -36209059.39656949, \"ymin\": -30141609.91132307, \"xmax\": 36513860.00661566, \"ymax\": 29401761.039886825}"
  },
  103656: {
    "label": "NAD 1983 HARN Adj MN Mower Meters",
    "defaultExtent": "{\"xmin\": -36426662.883764334, \"ymin\": -29838912.50570827, \"xmax\": 36731463.49343531, \"ymax\": 27364507.88003543}"
  },
  103657: {
    "label": "NAD 1983 HARN Adj MN Murray Meters",
    "defaultExtent": "{\"xmin\": -36392177.448650606, \"ymin\": -29886263.746716507, \"xmax\": 36696978.058079705, \"ymax\": 27688713.147757873}"
  },
  103658: {
    "label": "NAD 1983 HARN Adj MN Nicollet Meters",
    "defaultExtent": "{\"xmin\": -36380402.321450874, \"ymin\": -29887619.166320622, \"xmax\": 36685202.93148015, \"ymax\": 27796176.336456735}"
  },
  103659: {
    "label": "NAD 1983 HARN Adj MN Nobles Meters",
    "defaultExtent": "{\"xmin\": -36427257.18482345, \"ymin\": -29839397.79442032, \"xmax\": 36732057.79436213, \"ymax\": 27364951.976707555}"
  },
  103660: {
    "label": "NAD 1983 HARN Adj MN Norman Meters",
    "defaultExtent": "{\"xmin\": -36105447.84667774, \"ymin\": -30316592.54809305, \"xmax\": 36410248.4565592, \"ymax\": 30361010.017725226}"
  },
  103661: {
    "label": "NAD 1983 HARN Adj MN Olmsted Meters",
    "defaultExtent": "{\"xmin\": -36394622.40862702, \"ymin\": -29883296.816058256, \"xmax\": 36699423.01834897, \"ymax\": 27656234.242033698}"
  },
  103662: {
    "label": "NAD 1983 HARN Adj MN Ottertail Meters",
    "defaultExtent": "{\"xmin\": -36179085.579024345, \"ymin\": -30185240.77335803, \"xmax\": 36483886.189329244, \"ymax\": 29687316.521142438}"
  },
  103663: {
    "label": "NAD 1983 HARN Adj MN Pennington Meters",
    "defaultExtent": "{\"xmin\": -36064961.39796336, \"ymin\": -30363010.620713692, \"xmax\": 36369762.010973744, \"ymax\": 30754051.413374513}"
  },
  103664: {
    "label": "NAD 1983 HARN Adj MN Pine Meters",
    "defaultExtent": "{\"xmin\": -36207378.30873227, \"ymin\": -30136834.52075254, \"xmax\": 36512178.91832771, \"ymax\": 29421616.091759343}"
  },
  103665: {
    "label": "NAD 1983 HARN Adj MN Pipestone Meters",
    "defaultExtent": "{\"xmin\": -36394889.898567334, \"ymin\": -29886063.89919955, \"xmax\": 36699690.509086944, \"ymax\": 27663725.527368467}"
  },
  103666: {
    "label": "NAD 1983 HARN Adj MN Polk Meters",
    "defaultExtent": "{\"xmin\": -36064961.39796336, \"ymin\": -30363010.620713692, \"xmax\": 36369762.010973744, \"ymax\": 30754051.413374513}"
  },
  103667: {
    "label": "NAD 1983 HARN Adj MN Pope Meters",
    "defaultExtent": "{\"xmin\": -36255075.69880782, \"ymin\": -30076743.65820794, \"xmax\": 36559876.308659345, \"ymax\": 28965224.360692557}"
  },
  103668: {
    "label": "NAD 1983 HARN Adj MN Ramsey Meters",
    "defaultExtent": "{\"xmin\": -36300672.766145684, \"ymin\": -30011206.786407955, \"xmax\": 36605473.37570663, \"ymax\": 28530905.194218926}"
  },
  103669: {
    "label": "NAD 1983 HARN Adj MN Red Lake Meters",
    "defaultExtent": "{\"xmin\": -36064961.39796336, \"ymin\": -30363010.620713692, \"xmax\": 36369762.010973744, \"ymax\": 30754051.413374513}"
  },
  103670: {
    "label": "NAD 1983 HARN Adj MN Redwood Meters",
    "defaultExtent": "{\"xmin\": -36355377.019666664, \"ymin\": -29932306.71278772, \"xmax\": 36660177.62921008, \"ymax\": 28022316.59303027}"
  },
  103671: {
    "label": "NAD 1983 HARN Adj MN Renville Meters",
    "defaultExtent": "{\"xmin\": -36326449.383269794, \"ymin\": -29967897.078986958, \"xmax\": 36631249.9933381, \"ymax\": 28294828.27852361}"
  },
  103672: {
    "label": "NAD 1983 HARN Adj MN Rice Meters",
    "defaultExtent": "{\"xmin\": -36349042.78532624, \"ymin\": -29933716.670718234, \"xmax\": 36653843.39459011, \"ymax\": 28087895.929493822}"
  },
  103673: {
    "label": "NAD 1983 HARN Adj MN Rock Meters",
    "defaultExtent": "{\"xmin\": -36427257.18482345, \"ymin\": -29839397.79442032, \"xmax\": 36732057.79436213, \"ymax\": 27364951.976707555}"
  },
  103674: {
    "label": "NAD 1983 HARN Adj MN Roseau Meters",
    "defaultExtent": "{\"xmin\": -35995728.48300656, \"ymin\": -30491824.200847685, \"xmax\": 36300529.09258714, \"ymax\": 31379588.79462292}"
  },
  103675: {
    "label": "NAD 1983 HARN Adj MN St Louis North Meters",
    "defaultExtent": "{\"xmin\": -36033813.259916075, \"ymin\": -30406524.54556076, \"xmax\": 36338613.86956285, \"ymax\": 31056432.495938446}"
  },
  103676: {
    "label": "NAD 1983 HARN Adj MN St Louis Central Meters",
    "defaultExtent": "{\"xmin\": -36089130.318250924, \"ymin\": -30331622.941872314, \"xmax\": 36393930.9330231, \"ymax\": 30533254.40167971}"
  },
  103677: {
    "label": "NAD 1983 HARN Adj MN St Louis South Meters",
    "defaultExtent": "{\"xmin\": -36135005.152364075, \"ymin\": -30255241.32284548, \"xmax\": 36439805.76197388, \"ymax\": 30102794.057315893}"
  },
  103678: {
    "label": "NAD 1983 HARN Adj MN Scott Meters",
    "defaultExtent": "{\"xmin\": -36327248.1438133, \"ymin\": -29969504.382223852, \"xmax\": 36632048.75315058, \"ymax\": 28285006.372834925}"
  },
  103679: {
    "label": "NAD 1983 HARN Adj MN Sherburne Meters",
    "defaultExtent": "{\"xmin\": -36278971.7539162, \"ymin\": -30036943.05605229, \"xmax\": 36583772.363628514, \"ymax\": 28740385.568357468}"
  },
  103680: {
    "label": "NAD 1983 HARN Adj MN Sibley Meters",
    "defaultExtent": "{\"xmin\": -36326449.383269794, \"ymin\": -29967897.078986958, \"xmax\": 36631249.9933381, \"ymax\": 28294828.27852361}"
  },
  103681: {
    "label": "NAD 1983 HARN Adj MN Stearns Meters",
    "defaultExtent": "{\"xmin\": -36255075.69880782, \"ymin\": -30076743.65820794, \"xmax\": 36559876.308659345, \"ymax\": 28965224.360692557}"
  },
  103682: {
    "label": "NAD 1983 HARN Adj MN Steele Meters",
    "defaultExtent": "{\"xmin\": -36394622.40862702, \"ymin\": -29883296.816058256, \"xmax\": 36699423.01834897, \"ymax\": 27656234.242033698}"
  },
  103683: {
    "label": "NAD 1983 HARN Adj MN Stevens Meters",
    "defaultExtent": "{\"xmin\": -36255075.69880782, \"ymin\": -30076743.65820794, \"xmax\": 36559876.308659345, \"ymax\": 28965224.360692557}"
  },
  103684: {
    "label": "NAD 1983 HARN Adj MN Swift Meters",
    "defaultExtent": "{\"xmin\": -36268119.59696432, \"ymin\": -30059092.07828809, \"xmax\": 36572920.20611363, \"ymax\": 28839040.102899063}"
  },
  103685: {
    "label": "NAD 1983 HARN Adj MN Todd Meters",
    "defaultExtent": "{\"xmin\": -36207907.608796746, \"ymin\": -30142077.224054728, \"xmax\": 36512708.21846511, \"ymax\": 29417164.378704578}"
  },
  103686: {
    "label": "NAD 1983 HARN Adj MN Traverse Meters",
    "defaultExtent": "{\"xmin\": -36230976.48923904, \"ymin\": -30115612.76500722, \"xmax\": 36535777.099350095, \"ymax\": 29186314.158722144}"
  },
  103687: {
    "label": "NAD 1983 HARN Adj MN Wabasha Meters",
    "defaultExtent": "{\"xmin\": -36367934.50497694, \"ymin\": -29919558.73133523, \"xmax\": 36672735.11465185, \"ymax\": 27900185.944928937}"
  },
  103688: {
    "label": "NAD 1983 HARN Adj MN Wadena Meters",
    "defaultExtent": "{\"xmin\": -36172307.227806486, \"ymin\": -30192393.3966534, \"xmax\": 36477107.83731556, \"ymax\": 29755966.505945567}"
  },
  103689: {
    "label": "NAD 1983 HARN Adj MN Waseca Meters",
    "defaultExtent": "{\"xmin\": -36394622.40862702, \"ymin\": -29883296.816058256, \"xmax\": 36699423.01834897, \"ymax\": 27656234.242033698}"
  },
  103690: {
    "label": "NAD 1983 HARN Adj MN Watonwan Meters",
    "defaultExtent": "{\"xmin\": -36392388.202979594, \"ymin\": -29885589.69635948, \"xmax\": 36697188.82233767, \"ymax\": 27679908.107997127}"
  },
  103691: {
    "label": "NAD 1983 HARN Adj MN Winona Meters",
    "defaultExtent": "{\"xmin\": -36393665.76817786, \"ymin\": -29884843.376851805, \"xmax\": 36698466.37783435, \"ymax\": 27663004.447958555}"
  },
  103692: {
    "label": "NAD 1983 HARN Adj MN Wright Meters",
    "defaultExtent": "{\"xmin\": -36278971.7539162, \"ymin\": -30036943.05605229, \"xmax\": 36583772.363628514, \"ymax\": 28740385.568357468}"
  },
  103693: {
    "label": "NAD 1983 HARN Adj MN Yellow Medicine Meters",
    "defaultExtent": "{\"xmin\": -36319516.37699879, \"ymin\": -29979777.345454894, \"xmax\": 36624316.986553684, \"ymax\": 28366609.967843406}"
  },
  103694: {
    "label": "NAD 1983 HARN Adj MN St Louis CS96 Meters",
    "defaultExtent": "{\"xmin\": -4173270.2504405025, \"ymin\": -13775942.160374394, \"xmax\": 7073270.2504405035, \"ymax\": 5446200.096852486}"
  },
  103695: {
    "label": "NAD 1983 HARN Adj MN St Louis CS96 Feet",
    "defaultExtent": "{\"xmin\": -13691804.14665388, \"ymin\": -45196570.23782865, \"xmax\": 23206220.813319884, \"ymax\": 17868074.81775653}"
  },
  103700: {
    "label": "NAD 1983 HARN Adj MN Aitkin Feet",
    "defaultExtent": "{\"xmin\": -17949230.077363513, \"ymin\": -48209355.23731607, \"xmax\": 18949289.230032515, \"ymax\": 14856124.15165858}"
  },
  103701: {
    "label": "NAD 1983 HARN Adj MN Clay Feet",
    "defaultExtent": "{\"xmin\": -17948981.767917752, \"ymin\": -48382229.771139875, \"xmax\": 18949027.085779764, \"ymax\": 14682377.170706643}"
  },
  103702: {
    "label": "NAD 1983 HARN Adj MN Clearwater Feet",
    "defaultExtent": "{\"xmin\": -17949469.73911251, \"ymin\": -48573824.31716021, \"xmax\": 18949542.244773515, \"ymax\": 14492497.134845937}"
  },
  103703: {
    "label": "NAD 1983 HARN Adj MN Hubbard Feet",
    "defaultExtent": "{\"xmin\": -17949452.652456194, \"ymin\": -48446822.145232186, \"xmax\": 18949524.2061172, \"ymax\": 14619439.2719888}"
  },
  103704: {
    "label": "NAD 1983 HARN Adj MN Lake Feet",
    "defaultExtent": "{\"xmin\": -17949529.66732886, \"ymin\": -48542981.241088234, \"xmax\": 18949605.511949863, \"ymax\": 14523550.771575756}"
  },
  103705: {
    "label": "NAD 1983 HARN Adj MN Mille Lacs Feet",
    "defaultExtent": "{\"xmin\": -17949140.21930205, \"ymin\": -47992028.28839951, \"xmax\": 18949194.365440052, \"ymax\": 15073135.37997328}"
  },
  103706: {
    "label": "NAD 1983 HARN Adj MN Washington Feet",
    "defaultExtent": "{\"xmin\": -17948883.392876055, \"ymin\": -47694877.848462135, \"xmax\": 18948923.22967506, \"ymax\": 15369383.4479646}"
  },
  103707: {
    "label": "NAD 1983 HARN Adj MN Wilkin Feet",
    "defaultExtent": "{\"xmin\": -17949046.079866555, \"ymin\": -48160539.29793414, \"xmax\": 18949094.980932556, \"ymax\": 14904293.607024092}"
  },
  103708: {
    "label": "NAD 1983 HARN Adj MN Anoka Feet",
    "defaultExtent": "{\"xmin\": -119034893.13795602, \"ymin\": -98564882.69222568, \"xmax\": 120034893.13835797, \"ymax\": 94167439.05931115}"
  },
  103709: {
    "label": "NAD 1983 HARN Adj MN Becker Feet",
    "defaultExtent": "{\"xmin\": -118560494.11908066, \"ymin\": -99286532.07749009, \"xmax\": 119560494.11958848, \"ymax\": 98667207.45710927}"
  },
  103710: {
    "label": "NAD 1983 HARN Adj MN Beltrami North Feet",
    "defaultExtent": "{\"xmin\": -118212593.67541514, \"ymin\": -99828136.62459175, \"xmax\": 119212593.67597194, \"ymax\": 101910227.79916964}"
  },
  103711: {
    "label": "NAD 1983 HARN Adj MN Beltrami South Feet",
    "defaultExtent": "{\"xmin\": -118358850.48273954, \"ymin\": -99579648.88770095, \"xmax\": 119358850.48279738, \"ymax\": 100570316.89914428}"
  },
  103712: {
    "label": "NAD 1983 HARN Adj MN Benton Feet",
    "defaultExtent": "{\"xmin\": -118901622.60325871, \"ymin\": -98787820.0000169, \"xmax\": 119901622.60321617, \"ymax\": 95412108.97728807}"
  },
  103713: {
    "label": "NAD 1983 HARN Adj MN Big Stone Feet",
    "defaultExtent": "{\"xmin\": -118989655.71104044, \"ymin\": -98618871.2601835, \"xmax\": 119989655.70955779, \"ymax\": 94616084.07092799}"
  },
  103714: {
    "label": "NAD 1983 HARN Adj MN Blue Earth Feet",
    "defaultExtent": "{\"xmin\": -119358036.6162934, \"ymin\": -98056297.2148369, \"xmax\": 120358036.61769776, \"ymax\": 91194621.86385846}"
  },
  103715: {
    "label": "NAD 1983 HARN Adj MN Brown Feet",
    "defaultExtent": "{\"xmin\": -119306834.4338578, \"ymin\": -98163993.42436767, \"xmax\": 120306834.43422364, \"ymax\": 91643944.23069577}"
  },
  103716: {
    "label": "NAD 1983 HARN Adj MN Carlton Feet",
    "defaultExtent": "{\"xmin\": -118647056.56525919, \"ymin\": -99156057.74197339, \"xmax\": 119647056.56510577, \"ymax\": 97818245.18701859}"
  },
  103717: {
    "label": "NAD 1983 HARN Adj MN Carver Feet",
    "defaultExtent": "{\"xmin\": -119160981.82262729, \"ymin\": -98391316.89227702, \"xmax\": 120160981.82344075, \"ymax\": 92975583.23908505}"
  },
  103718: {
    "label": "NAD 1983 HARN Adj MN Cass North Feet",
    "defaultExtent": "{\"xmin\": -118511686.20027302, \"ymin\": -99327390.98156762, \"xmax\": 119511686.19978048, \"ymax\": 99154311.73568852}"
  },
  103719: {
    "label": "NAD 1983 HARN Adj MN Cass South Feet",
    "defaultExtent": "{\"xmin\": -118675311.29656176, \"ymin\": -99056210.66885369, \"xmax\": 119675311.29625945, \"ymax\": 97624366.7782564}"
  },
  103720: {
    "label": "NAD 1983 HARN Adj MN Chippewa Feet",
    "defaultExtent": "{\"xmin\": -119094823.96244346, \"ymin\": -98449089.47879817, \"xmax\": 120094823.96049169, \"ymax\": 93646123.49482718}"
  },
  103721: {
    "label": "NAD 1983 HARN Adj MN Chisago Feet",
    "defaultExtent": "{\"xmin\": -118952378.36186627, \"ymin\": -98678723.30025631, \"xmax\": 119952378.36224188, \"ymax\": 94947142.64577022}"
  },
  103722: {
    "label": "NAD 1983 HARN Adj MN Cook North Feet",
    "defaultExtent": "{\"xmin\": -118275292.62423936, \"ymin\": -99769653.67041586, \"xmax\": 119275292.62428658, \"ymax\": 101321628.80322553}"
  },
  103723: {
    "label": "NAD 1983 HARN Adj MN Cook South Feet",
    "defaultExtent": "{\"xmin\": -118367439.03108378, \"ymin\": -99589878.9286622, \"xmax\": 119367439.02864993, \"ymax\": 100494239.57591917}"
  },
  103724: {
    "label": "NAD 1983 HARN Adj MN Cottonwood Feet",
    "defaultExtent": "{\"xmin\": -119397360.2959422, \"ymin\": -98049638.86213939, \"xmax\": 120397360.32795283, \"ymax\": 90813165.18432057}"
  },
  103725: {
    "label": "NAD 1983 HARN Adj MN Crow Wing Feet",
    "defaultExtent": "{\"xmin\": -118675311.29656176, \"ymin\": -99056210.66885369, \"xmax\": 119675311.29625945, \"ymax\": 97624366.7782564}"
  },
  103726: {
    "label": "NAD 1983 HARN Adj MN Dakota Feet",
    "defaultExtent": "{\"xmin\": -119183646.61849411, \"ymin\": -98324948.96067941, \"xmax\": 120183646.61762819, \"ymax\": 92798391.74154256}"
  },
  103727: {
    "label": "NAD 1983 HARN Adj MN Dodge Feet",
    "defaultExtent": "{\"xmin\": -119404690.35230379, \"ymin\": -98042116.30401778, \"xmax\": 120404690.35269989, \"ymax\": 90735495.17573887}"
  },
  103728: {
    "label": "NAD 1983 HARN Adj MN Douglas Feet",
    "defaultExtent": "{\"xmin\": -118833785.3908782, \"ymin\": -98876342.27799727, \"xmax\": 119833785.39197285, \"ymax\": 96069339.82199281}"
  },
  103729: {
    "label": "NAD 1983 HARN Adj MN Faribault Feet",
    "defaultExtent": "{\"xmin\": -119509809.81115013, \"ymin\": -97896498.77914454, \"xmax\": 120509809.81137899, \"ymax\": 89778389.6030829}"
  },
  103730: {
    "label": "NAD 1983 HARN Adj MN Fillmore Feet",
    "defaultExtent": "{\"xmin\": -119511427.37199377, \"ymin\": -97894976.85662341, \"xmax\": 120511427.37468739, \"ymax\": 89749705.96919534}"
  },
  103731: {
    "label": "NAD 1983 HARN Adj MN Freeborn Feet",
    "defaultExtent": "{\"xmin\": -119509809.81115013, \"ymin\": -97896498.77914454, \"xmax\": 120509809.81137899, \"ymax\": 89778389.6030829}"
  },
  103732: {
    "label": "NAD 1983 HARN Adj MN Goodhue Feet",
    "defaultExtent": "{\"xmin\": -119255151.20485783, \"ymin\": -98207535.44384806, \"xmax\": 120255151.20375104, \"ymax\": 92151705.22868097}"
  },
  103733: {
    "label": "NAD 1983 HARN Adj MN Grant Feet",
    "defaultExtent": "{\"xmin\": -118833785.3908782, \"ymin\": -98876342.27799727, \"xmax\": 119833785.39197285, \"ymax\": 96069339.82199281}"
  },
  103734: {
    "label": "NAD 1983 HARN Adj MN Hennepin Feet",
    "defaultExtent": "{\"xmin\": -119096457.23359628, \"ymin\": -98461767.59840675, \"xmax\": 120096457.23346415, \"ymax\": 93605144.79136658}"
  },
  103735: {
    "label": "NAD 1983 HARN Adj MN Houston Feet",
    "defaultExtent": "{\"xmin\": -119508221.28786762, \"ymin\": -97895201.63774982, \"xmax\": 120508221.28794752, \"ymax\": 89777202.56554918}"
  },
  103736: {
    "label": "NAD 1983 HARN Adj MN Isanti Feet",
    "defaultExtent": "{\"xmin\": -118952378.36186627, \"ymin\": -98678723.30025631, \"xmax\": 119952378.36224188, \"ymax\": 94947142.64577022}"
  },
  103737: {
    "label": "NAD 1983 HARN Adj MN Itasca North Feet",
    "defaultExtent": "{\"xmin\": -118363988.92922036, \"ymin\": -99611460.0118402, \"xmax\": 119363988.93084371, \"ymax\": 100493521.44478433}"
  },
  103738: {
    "label": "NAD 1983 HARN Adj MN Itasca South Feet",
    "defaultExtent": "{\"xmin\": -118477213.9434929, \"ymin\": -99415991.02304347, \"xmax\": 119477213.94661298, \"ymax\": 99447175.41751085}"
  },
  103739: {
    "label": "NAD 1983 HARN Adj MN Jackson Feet",
    "defaultExtent": "{\"xmin\": -119509809.81115013, \"ymin\": -97896498.77914454, \"xmax\": 120509809.81137899, \"ymax\": 89778389.6030829}"
  },
  103740: {
    "label": "NAD 1983 HARN Adj MN Kanabec Feet",
    "defaultExtent": "{\"xmin\": -118790373.66789912, \"ymin\": -98873931.25683562, \"xmax\": 119790373.66788015, \"ymax\": 96527418.79438043}"
  },
  103741: {
    "label": "NAD 1983 HARN Adj MN Kandiyohi Feet",
    "defaultExtent": "{\"xmin\": -119055809.10710885, \"ymin\": -98509041.13322271, \"xmax\": 120055809.10677265, \"ymax\": 94013355.60550812}"
  },
  103742: {
    "label": "NAD 1983 HARN Adj MN Kittson Feet",
    "defaultExtent": "{\"xmin\": -118095985.864664, \"ymin\": -100038593.2322811, \"xmax\": 119095985.8645963, \"ymax\": 102951200.90369202}"
  },
  103743: {
    "label": "NAD 1983 HARN Adj MN Koochiching Feet",
    "defaultExtent": "{\"xmin\": -118208033.84836018, \"ymin\": -99765066.24135748, \"xmax\": 119208033.84822541, \"ymax\": 102017772.3994583}"
  },
  103744: {
    "label": "NAD 1983 HARN Adj MN Lac Qui Parle Feet",
    "defaultExtent": "{\"xmin\": -119094823.96244346, \"ymin\": -98449089.47879817, \"xmax\": 120094823.96049169, \"ymax\": 93646123.49482718}"
  },
  103745: {
    "label": "NAD 1983 HARN Adj MN Lake of the Woods North Feet",
    "defaultExtent": "{\"xmin\": -117979561.0793244, \"ymin\": -100279032.78912188, \"xmax\": 118979561.0807579, \"ymax\": 103969877.10701424}"
  },
  103746: {
    "label": "NAD 1983 HARN Adj MN Lake of the Woods South Feet",
    "defaultExtent": "{\"xmin\": -118120740.4854779, \"ymin\": -99970212.19168775, \"xmax\": 119120740.48451148, \"ymax\": 102760097.29004325}"
  },
  103747: {
    "label": "NAD 1983 HARN Adj MN Le Sueur Feet",
    "defaultExtent": "{\"xmin\": -119255151.20485783, \"ymin\": -98207535.44384806, \"xmax\": 120255151.20375104, \"ymax\": 92151705.22868097}"
  },
  103748: {
    "label": "NAD 1983 HARN Adj MN Lincoln Feet",
    "defaultExtent": "{\"xmin\": -119269423.18305048, \"ymin\": -98209129.36613643, \"xmax\": 120269423.18332537, \"ymax\": 92046490.27712691}"
  },
  103749: {
    "label": "NAD 1983 HARN Adj MN Lyon Feet",
    "defaultExtent": "{\"xmin\": -119278132.59022313, \"ymin\": -98205028.88908982, \"xmax\": 120278132.58963317, \"ymax\": 91937981.08402501}"
  },
  103750: {
    "label": "NAD 1983 HARN Adj MN McLeod Feet",
    "defaultExtent": "{\"xmin\": -119181026.01827763, \"ymin\": -98319675.66664304, \"xmax\": 120181026.01981007, \"ymax\": 92830615.77712286}"
  },
  103751: {
    "label": "NAD 1983 HARN Adj MN Mahnomen Feet",
    "defaultExtent": "{\"xmin\": -118458156.68191919, \"ymin\": -99465933.93040742, \"xmax\": 119458156.6813817, \"ymax\": 99610848.64396897}"
  },
  103752: {
    "label": "NAD 1983 HARN Adj MN Marshall Feet",
    "defaultExtent": "{\"xmin\": -118195212.25592418, \"ymin\": -99886055.53165835, \"xmax\": 119195212.25585726, \"ymax\": 102028568.75354494}"
  },
  103753: {
    "label": "NAD 1983 HARN Adj MN Martin Feet",
    "defaultExtent": "{\"xmin\": -119509809.81115013, \"ymin\": -97896498.77914454, \"xmax\": 120509809.81137899, \"ymax\": 89778389.6030829}"
  },
  103754: {
    "label": "NAD 1983 HARN Adj MN Meeker Feet",
    "defaultExtent": "{\"xmin\": -119055809.10710885, \"ymin\": -98509041.13322271, \"xmax\": 120055809.10677265, \"ymax\": 94013355.60550812}"
  },
  103755: {
    "label": "NAD 1983 HARN Adj MN Morrison Feet",
    "defaultExtent": "{\"xmin\": -118795889.03691173, \"ymin\": -98889598.51739909, \"xmax\": 119795889.03837153, \"ymax\": 96462277.67836201}"
  },
  103756: {
    "label": "NAD 1983 HARN Adj MN Mower Feet",
    "defaultExtent": "{\"xmin\": -119509809.81115013, \"ymin\": -97896498.77914454, \"xmax\": 120509809.81137899, \"ymax\": 89778389.6030829}"
  },
  103757: {
    "label": "NAD 1983 HARN Adj MN Murray Feet",
    "defaultExtent": "{\"xmin\": -119396668.84611452, \"ymin\": -98051850.30901906, \"xmax\": 120396668.84554982, \"ymax\": 90842053.05226894}"
  },
  103758: {
    "label": "NAD 1983 HARN Adj MN Nicollet Feet",
    "defaultExtent": "{\"xmin\": -119358036.6162934, \"ymin\": -98056297.2148369, \"xmax\": 120358036.61769776, \"ymax\": 91194621.86385846}"
  },
  103759: {
    "label": "NAD 1983 HARN Adj MN Nobles Feet",
    "defaultExtent": "{\"xmin\": -119511759.61387493, \"ymin\": -97898090.93052733, \"xmax\": 120511759.61366974, \"ymax\": 89779846.61024803}"
  },
  103760: {
    "label": "NAD 1983 HARN Adj MN Norman Feet",
    "defaultExtent": "{\"xmin\": -118455956.81030855, \"ymin\": -99463687.3848686, \"xmax\": 119455956.81122798, \"ymax\": 99609413.69982016}"
  },
  103761: {
    "label": "NAD 1983 HARN Adj MN Olmsted Feet",
    "defaultExtent": "{\"xmin\": -119404690.35230379, \"ymin\": -98042116.30401778, \"xmax\": 120404690.35269989, \"ymax\": 90735495.17573887}"
  },
  103762: {
    "label": "NAD 1983 HARN Adj MN Ottertail Feet",
    "defaultExtent": "{\"xmin\": -118697549.93718235, \"ymin\": -99032744.10392545, \"xmax\": 119697549.93949102, \"ymax\": 97399137.61978146}"
  },
  103763: {
    "label": "NAD 1983 HARN Adj MN Pennington Feet",
    "defaultExtent": "{\"xmin\": -118323127.51981811, \"ymin\": -99615977.34479149, \"xmax\": 119323127.53100301, \"ymax\": 100898917.0120462}"
  },
  103764: {
    "label": "NAD 1983 HARN Adj MN Pine Feet",
    "defaultExtent": "{\"xmin\": -118790373.66789912, \"ymin\": -98873931.25683562, \"xmax\": 119790373.66788015, \"ymax\": 96527418.79438043}"
  },
  103765: {
    "label": "NAD 1983 HARN Adj MN Pipestone Feet",
    "defaultExtent": "{\"xmin\": -119405567.9422163, \"ymin\": -98051194.64262384, \"xmax\": 120405567.94542691, \"ymax\": 90760072.8343747}"
  },
  103766: {
    "label": "NAD 1983 HARN Adj MN Polk Feet",
    "defaultExtent": "{\"xmin\": -118323127.51981811, \"ymin\": -99615977.34479149, \"xmax\": 119323127.53100301, \"ymax\": 100898917.0120462}"
  },
  103767: {
    "label": "NAD 1983 HARN Adj MN Pope Feet",
    "defaultExtent": "{\"xmin\": -118946860.85517198, \"ymin\": -98676783.15197055, \"xmax\": 119946860.85599318, \"ymax\": 95030073.59003882}"
  },
  103768: {
    "label": "NAD 1983 HARN Adj MN Ramsey Feet",
    "defaultExtent": "{\"xmin\": -119096457.23359628, \"ymin\": -98461767.59840675, \"xmax\": 120096457.23346415, \"ymax\": 93605144.79136658}"
  },
  103769: {
    "label": "NAD 1983 HARN Adj MN Red Lake Feet",
    "defaultExtent": "{\"xmin\": -118323127.51981811, \"ymin\": -99615977.34479149, \"xmax\": 119323127.53100301, \"ymax\": 100898917.0120462}"
  },
  103770: {
    "label": "NAD 1983 HARN Adj MN Redwood Feet",
    "defaultExtent": "{\"xmin\": -119275932.77202304, \"ymin\": -98202909.60687104, \"xmax\": 120275932.77183338, \"ymax\": 91936550.35563347}"
  },
  103771: {
    "label": "NAD 1983 HARN Adj MN Renville Feet",
    "defaultExtent": "{\"xmin\": -119181026.01827763, \"ymin\": -98319675.66664304, \"xmax\": 120181026.01981007, \"ymax\": 92830615.77712286}"
  },
  103772: {
    "label": "NAD 1983 HARN Adj MN Rice Feet",
    "defaultExtent": "{\"xmin\": -119255151.20485783, \"ymin\": -98207535.44384806, \"xmax\": 120255151.20375104, \"ymax\": 92151705.22868097}"
  },
  103773: {
    "label": "NAD 1983 HARN Adj MN Rock Feet",
    "defaultExtent": "{\"xmin\": -119511759.61387493, \"ymin\": -97898090.93052733, \"xmax\": 120511759.61366974, \"ymax\": 89779846.61024803}"
  },
  103774: {
    "label": "NAD 1983 HARN Adj MN Roseau Feet",
    "defaultExtent": "{\"xmin\": -118095985.864664, \"ymin\": -100038593.2322811, \"xmax\": 119095985.8645963, \"ymax\": 102951200.90369202}"
  },
  103775: {
    "label": "NAD 1983 HARN Adj MN St Louis North Feet",
    "defaultExtent": "{\"xmin\": -118220935.67024131, \"ymin\": -99758739.2798939, \"xmax\": 119220935.67039077, \"ymax\": 101890978.94709137}"
  },
  103776: {
    "label": "NAD 1983 HARN Adj MN St Louis Central Feet",
    "defaultExtent": "{\"xmin\": -118402421.71912822, \"ymin\": -99512999.60179274, \"xmax\": 119402421.73609328, \"ymax\": 100174518.8161775}"
  },
  103777: {
    "label": "NAD 1983 HARN Adj MN St Louis South Feet",
    "defaultExtent": "{\"xmin\": -118552929.40404779, \"ymin\": -99262404.24003553, \"xmax\": 119552929.40407595, \"ymax\": 98762250.16971055}"
  },
  103778: {
    "label": "NAD 1983 HARN Adj MN Scott Feet",
    "defaultExtent": "{\"xmin\": -119183646.61849411, \"ymin\": -98324948.96067941, \"xmax\": 120183646.61762819, \"ymax\": 92798391.74154256}"
  },
  103779: {
    "label": "NAD 1983 HARN Adj MN Sherburne Feet",
    "defaultExtent": "{\"xmin\": -119025259.8293067, \"ymin\": -98546204.00973155, \"xmax\": 120025259.8296712, \"ymax\": 94292414.98551945}"
  },
  103780: {
    "label": "NAD 1983 HARN Adj MN Sibley Feet",
    "defaultExtent": "{\"xmin\": -119181026.01827763, \"ymin\": -98319675.66664304, \"xmax\": 120181026.01981007, \"ymax\": 92830615.77712286}"
  },
  103781: {
    "label": "NAD 1983 HARN Adj MN Stearns Feet",
    "defaultExtent": "{\"xmin\": -118946860.85517198, \"ymin\": -98676783.15197055, \"xmax\": 119946860.85599318, \"ymax\": 95030073.59003882}"
  },
  103782: {
    "label": "NAD 1983 HARN Adj MN Steele Feet",
    "defaultExtent": "{\"xmin\": -119404690.35230379, \"ymin\": -98042116.30401778, \"xmax\": 120404690.35269989, \"ymax\": 90735495.17573887}"
  },
  103783: {
    "label": "NAD 1983 HARN Adj MN Stevens Feet",
    "defaultExtent": "{\"xmin\": -118946860.85517198, \"ymin\": -98676783.15197055, \"xmax\": 119946860.85599318, \"ymax\": 95030073.59003882}"
  },
  103784: {
    "label": "NAD 1983 HARN Adj MN Swift Feet",
    "defaultExtent": "{\"xmin\": -118989655.71104044, \"ymin\": -98618871.2601835, \"xmax\": 119989655.70955779, \"ymax\": 94616084.07092799}"
  },
  103785: {
    "label": "NAD 1983 HARN Adj MN Todd Feet",
    "defaultExtent": "{\"xmin\": -118792110.21319397, \"ymin\": -98891131.69258621, \"xmax\": 119792110.21341427, \"ymax\": 96512813.46579993}"
  },
  103786: {
    "label": "NAD 1983 HARN Adj MN Traverse Feet",
    "defaultExtent": "{\"xmin\": -118867795.36511172, \"ymin\": -98804306.2131945, \"xmax\": 119867795.36678442, \"ymax\": 95755432.36907423}"
  },
  103787: {
    "label": "NAD 1983 HARN Adj MN Wabasha Feet",
    "defaultExtent": "{\"xmin\": -119317131.78841184, \"ymin\": -98161085.60438898, \"xmax\": 120317131.7886536, \"ymax\": 91535860.054321}"
  },
  103788: {
    "label": "NAD 1983 HARN Adj MN Wadena Feet",
    "defaultExtent": "{\"xmin\": -118675311.29656176, \"ymin\": -99056210.66885369, \"xmax\": 119675311.29625945, \"ymax\": 97624366.7782564}"
  },
  103789: {
    "label": "NAD 1983 HARN Adj MN Waseca Feet",
    "defaultExtent": "{\"xmin\": -119404690.35230379, \"ymin\": -98042116.30401778, \"xmax\": 120404690.35269989, \"ymax\": 90735495.17573887}"
  },
  103790: {
    "label": "NAD 1983 HARN Adj MN Watonwan Feet",
    "defaultExtent": "{\"xmin\": -119397360.2959422, \"ymin\": -98049638.86213939, \"xmax\": 120397360.32795283, \"ymax\": 90813165.18432057}"
  },
  103791: {
    "label": "NAD 1983 HARN Adj MN Winona Feet",
    "defaultExtent": "{\"xmin\": -119401551.77443019, \"ymin\": -98047190.31222129, \"xmax\": 120401551.77461152, \"ymax\": 90757707.09301068}"
  },
  103792: {
    "label": "NAD 1983 HARN Adj MN Wright Feet",
    "defaultExtent": "{\"xmin\": -119025259.8293067, \"ymin\": -98546204.00973155, \"xmax\": 120025259.8296712, \"ymax\": 94292414.98551945}"
  },
  103793: {
    "label": "NAD 1983 HARN Adj MN Yellow Medicine Feet",
    "defaultExtent": "{\"xmin\": -119158279.98020351, \"ymin\": -98358652.84087992, \"xmax\": 120158279.98005153, \"ymax\": 93066119.53616624}"
  },
  103794: {
    "label": "Mexican Datum 1993 UTM Zone 11N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  103795: {
    "label": "Mexican Datum 1993 UTM Zone 12N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  103796: {
    "label": "Mexican Datum 1993 UTM Zone 13N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  103797: {
    "label": "Mexican Datum 1993 UTM Zone 14N",
    "defaultExtent": "{\"xmin\": -5120763.767724001, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  103798: {
    "label": "Mexican Datum 1993 UTM Zone 15N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958892, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  103799: {
    "label": "Mexican Datum 1993 UTM Zone 16N",
    "defaultExtent": "{\"xmin\": -5120763.767723998, \"ymin\": -9606785.534958893, \"xmax\": 6120763.767724001, \"ymax\": 9606785.534958888}"
  },
  103800: {
    "label": "NAD 1983 HARN Adj WI Adams Meters",
    "defaultExtent": "{\"xmin\": -5475999.410262476, \"ymin\": -14414612.885543382, \"xmax\": 5770436.799137254, \"ymax\": 4807349.894394769}"
  },
  103801: {
    "label": "NAD 1983 HARN Adj WI Ashland Meters",
    "defaultExtent": "{\"xmin\": -5450469.162039174, \"ymin\": -14674779.177975766, \"xmax\": 5796113.053326957, \"ymax\": 4547433.949055457}"
  },
  103802: {
    "label": "NAD 1983 HARN Adj WI Barron Meters",
    "defaultExtent": "{\"xmin\": -5530136.374881932, \"ymin\": -14611105.221563691, \"xmax\": 5716436.374881933, \"ymax\": 4611091.735685171}"
  },
  103803: {
    "label": "NAD 1983 HARN Adj WI Brown Meters",
    "defaultExtent": "{\"xmin\": -5591525.4331827955, \"ymin\": -14369037.147950165, \"xmax\": 5654725.433162477, \"ymax\": 4852606.850988488}"
  },
  103804: {
    "label": "NAD 1983 HARN Adj WI Buffalo Meters",
    "defaultExtent": "{\"xmin\": -5447967.534879768, \"ymin\": -14427384.240610559, \"xmax\": 5798488.235921171, \"ymax\": 4794612.012351203}"
  },
  103805: {
    "label": "NAD 1983 HARN Adj WI Calumet Meters",
    "defaultExtent": "{\"xmin\": -5378418.880737565, \"ymin\": -14342594.674965445, \"xmax\": 5867928.659757128, \"ymax\": 4879216.294969296}"
  },
  103806: {
    "label": "NAD 1983 HARN Adj WI Clark Meters",
    "defaultExtent": "{\"xmin\": -5423323.699901097, \"ymin\": -14440679.199321408, \"xmax\": 5823222.099697897, \"ymax\": 4781471.6746257525}"
  },
  103807: {
    "label": "NAD 1983 HARN Adj WI Dodge Meters",
    "defaultExtent": "{\"xmin\": -5359859.607199068, \"ymin\": -14204140.356135327, \"xmax\": 5886555.0605899785, \"ymax\": 5017785.610249701}"
  },
  103808: {
    "label": "NAD 1983 HARN Adj WI Door Meters",
    "defaultExtent": "{\"xmin\": -5464317.081708734, \"ymin\": -14529172.037900815, \"xmax\": 5781919.316913205, \"ymax\": 4692448.712219847}"
  },
  103809: {
    "label": "NAD 1983 HARN Adj WI Douglas Meters",
    "defaultExtent": "{\"xmin\": -5564098.345045476, \"ymin\": -14694316.866274096, \"xmax\": 5682360.981570748, \"ymax\": 4527685.7478256235}"
  },
  103810: {
    "label": "NAD 1983 HARN Adj WI Dunn Meters",
    "defaultExtent": "{\"xmin\": -5571428.747964608, \"ymin\": -14530426.185137529, \"xmax\": 5675060.955229022, \"ymax\": 4691628.331448201}"
  },
  103811: {
    "label": "NAD 1983 HARN Adj WI Florence Meters",
    "defaultExtent": "{\"xmin\": -5489817.854766746, \"ymin\": -14645154.953898828, \"xmax\": 5756823.188777412, \"ymax\": 4577159.212492893}"
  },
  103812: {
    "label": "NAD 1983 HARN Adj WI Fond du Lac Meters",
    "defaultExtent": "{\"xmin\": -5378418.880737565, \"ymin\": -14342594.674965445, \"xmax\": 5867928.659757128, \"ymax\": 4879216.294969296}"
  },
  103813: {
    "label": "NAD 1983 HARN Adj WI Forest Meters",
    "defaultExtent": "{\"xmin\": -5347546.279381521, \"ymin\": -14486046.75840343, \"xmax\": 5899235.382759729, \"ymax\": 4736508.254833599}"
  },
  103814: {
    "label": "NAD 1983 HARN Adj WI Grant Meters",
    "defaultExtent": "{\"xmin\": -5380892.6725563295, \"ymin\": -14197357.59177862, \"xmax\": 5865525.641822264, \"ymax\": 5024574.624514807}"
  },
  103815: {
    "label": "NAD 1983 HARN Adj WI Iowa Meters",
    "defaultExtent": "{\"xmin\": -5510153.81570139, \"ymin\": -14322693.085832743, \"xmax\": 5736315.868025497, \"ymax\": 4899327.172648529}"
  },
  103816: {
    "label": "NAD 1983 HARN Adj WI Iron Meters",
    "defaultExtent": "{\"xmin\": -5402466.3650840465, \"ymin\": -14644867.436289616, \"xmax\": 5844427.249005815, \"ymax\": 4577879.4519625725}"
  },
  103817: {
    "label": "NAD 1983 HARN Adj WI Jefferson Meters",
    "defaultExtent": "{\"xmin\": -5359859.607199068, \"ymin\": -14204140.356135327, \"xmax\": 5886555.0605899785, \"ymax\": 5017785.610249701}"
  },
  103818: {
    "label": "NAD 1983 HARN Adj WI Juneau Meters",
    "defaultExtent": "{\"xmin\": -5475999.410262476, \"ymin\": -14414612.885543382, \"xmax\": 5770436.799137254, \"ymax\": 4807349.894394769}"
  },
  103819: {
    "label": "NAD 1983 HARN Adj WI Kenosha Meters",
    "defaultExtent": "{\"xmin\": -5437230.757494789, \"ymin\": -14286705.869827928, \"xmax\": 5809087.501208276, \"ymax\": 4935054.807171696}"
  },
  103820: {
    "label": "NAD 1983 HARN Adj WI Kewaunee Meters",
    "defaultExtent": "{\"xmin\": -5543286.332267026, \"ymin\": -14403312.229863148, \"xmax\": 5703001.851698071, \"ymax\": 4818396.795166587}"
  },
  103821: {
    "label": "NAD 1983 HARN Adj WI LaCrosse Meters",
    "defaultExtent": "{\"xmin\": -5492737.996544647, \"ymin\": -14423929.818253938, \"xmax\": 5753647.318363291, \"ymax\": 4797946.000163396}"
  },
  103822: {
    "label": "NAD 1983 HARN Adj WI Lincoln Meters",
    "defaultExtent": "{\"xmin\": -5507220.460708464, \"ymin\": -14579163.13618532, \"xmax\": 5739478.525224593, \"ymax\": 4643250.071153988}"
  },
  103823: {
    "label": "NAD 1983 HARN Adj WI Manitowoc Meters",
    "defaultExtent": "{\"xmin\": -5543286.332267026, \"ymin\": -14403312.229863148, \"xmax\": 5703001.851698071, \"ymax\": 4818396.795166587}"
  },
  103824: {
    "label": "NAD 1983 HARN Adj WI Marinette Meters",
    "defaultExtent": "{\"xmin\": -5384485.922887569, \"ymin\": -14561652.91896406, \"xmax\": 5861803.677523078, \"ymax\": 4660059.280781435}"
  },
  103825: {
    "label": "NAD 1983 HARN Adj WI Menominee Meters",
    "defaultExtent": "{\"xmin\": -5517755.692811122, \"ymin\": -14564617.636299467, \"xmax\": 5728677.7146551665, \"ymax\": 4657340.6081987005}"
  },
  103826: {
    "label": "NAD 1983 HARN Adj WI Milwaukee Meters",
    "defaultExtent": "{\"xmin\": -5437230.757494789, \"ymin\": -14286705.869827928, \"xmax\": 5809087.501208276, \"ymax\": 4935054.807171696}"
  },
  104020: {
    "label": "GCS JGD 2011",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104101: {
    "label": "GCS Estonia 1937",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104102: {
    "label": "GCS Hermannskogel",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104103: {
    "label": "GCS Sierra Leone 1960",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104105: {
    "label": "GCS Datum Lisboa Bessel",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104106: {
    "label": "GCS Datum Lisboa Hayford",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104109: {
    "label": "GCS Pohnpei",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104112: {
    "label": "GCS Bab South",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104113: {
    "label": "GCS Majuro",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104115: {
    "label": "GCS ITRF 1988",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104116: {
    "label": "GCS ITRF 1989",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104117: {
    "label": "GCS ITRF 1990",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104118: {
    "label": "GCS ITRF 1991",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104119: {
    "label": "GCS ITRF 1992",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104120: {
    "label": "GCS ITRF 1993",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104121: {
    "label": "GCS ITRF 1994",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104122: {
    "label": "GCS ITRF 1996",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104123: {
    "label": "GCS ITRF 1997",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104124: {
    "label": "GCS ITRF 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104126: {
    "label": "GCS Observatorio Meteorologico 1965",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104127: {
    "label": "GCS Roma 1940",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104128: {
    "label": "GCS Sphere EMEP",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104129: {
    "label": "GCS EUREF FIN",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104130: {
    "label": "GCS Jordan",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104131: {
    "label": "GCS D48",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104134: {
    "label": "GCS MONREF 1997",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104135: {
    "label": "GCS MSK 1942",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104138: {
    "label": "GCS Old Hawaiian Intl 1924",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104139: {
    "label": "GCS Voirol 1875 Grad",
    "defaultExtent": "{\"xmin\": -199.99998726760407, \"ymin\": -94.50125310140274, \"xmax\": 199.99998726760407, \"ymax\": 94.50125310140272}"
  },
  104140: {
    "label": "GCS Voirol 1879 Grad",
    "defaultExtent": "{\"xmin\": -199.99998726760407, \"ymin\": -94.50125310140274, \"xmax\": 199.99998726760407, \"ymax\": 94.50125310140272}"
  },
  104141: {
    "label": "GCS CGRS 1993",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104145: {
    "label": "GCS NAD 1983 2011",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104223: {
    "label": "GCS NAD 1983 CORS96",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104256: {
    "label": "GCS Nepal Nagarkot",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104257: {
    "label": "GCS ITRF 2008",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104258: {
    "label": "GCS ETRF 1989",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104259: {
    "label": "GCS NAD 1983 PACP00",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104260: {
    "label": "GCS NAD 1983 MARP00",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104261: {
    "label": "GCS Merchich Degree",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104286: {
    "label": "GCS NAD 1983 MA11",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104287: {
    "label": "GCS NAD 1983 PA11",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104305: {
    "label": "GCS Voirol Unifie 1960 Degree",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104700: {
    "label": "GCS NAD 1983 HARN Adj MN Anoka",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104701: {
    "label": "GCS NAD 1983 HARN Adj MN Becker",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104702: {
    "label": "GCS NAD 1983 HARN Adj MN Beltrami North",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104703: {
    "label": "GCS NAD 1983 HARN Adj MN Beltrami South",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104704: {
    "label": "GCS NAD 1983 HARN Adj MN Benton",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104705: {
    "label": "GCS NAD 1983 HARN Adj MN Big Stone",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104706: {
    "label": "GCS NAD 1983 HARN Adj MN Blue Earth",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104707: {
    "label": "GCS NAD 1983 HARN Adj MN Brown",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104708: {
    "label": "GCS NAD 1983 HARN Adj MN Carlton",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104709: {
    "label": "GCS NAD 1983 HARN Adj MN Carver",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104710: {
    "label": "GCS NAD 1983 HARN Adj MN Cass North",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104711: {
    "label": "GCS NAD 1983 HARN Adj MN Cass South",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104712: {
    "label": "GCS NAD 1983 HARN Adj MN Chippewa",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104713: {
    "label": "GCS NAD 1983 HARN Adj MN Chisago",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104714: {
    "label": "GCS NAD 1983 HARN Adj MN Cook North",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104715: {
    "label": "GCS NAD 1983 HARN Adj MN Cook South",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104716: {
    "label": "GCS NAD 1983 HARN Adj MN Cottonwood",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104717: {
    "label": "GCS NAD 1983 HARN Adj MN Crow Wing",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104718: {
    "label": "GCS NAD 1983 HARN Adj MN Dakota",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104719: {
    "label": "GCS NAD 1983 HARN Adj MN Dodge",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104720: {
    "label": "GCS NAD 1983 HARN Adj MN Douglas",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104721: {
    "label": "GCS NAD 1983 HARN Adj MN Faribault",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104722: {
    "label": "GCS NAD 1983 HARN Adj MN Fillmore",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104723: {
    "label": "GCS NAD 1983 HARN Adj MN Freeborn",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104724: {
    "label": "GCS NAD 1983 HARN Adj MN Goodhue",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104725: {
    "label": "GCS NAD 1983 HARN Adj MN Grant",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104726: {
    "label": "GCS NAD 1983 HARN Adj MN Hennepin",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104727: {
    "label": "GCS NAD 1983 HARN Adj MN Houston",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104728: {
    "label": "GCS NAD 1983 HARN Adj MN Isanti",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104729: {
    "label": "GCS NAD 1983 HARN Adj MN Itasca North",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104730: {
    "label": "GCS NAD 1983 HARN Adj MN Itasca South",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104731: {
    "label": "GCS NAD 1983 HARN Adj MN Jackson",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104732: {
    "label": "GCS NAD 1983 HARN Adj MN Kanabec",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104733: {
    "label": "GCS NAD 1983 HARN Adj MN Kandiyohi",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104734: {
    "label": "GCS NAD 1983 HARN Adj MN Kittson",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104735: {
    "label": "GCS NAD 1983 HARN Adj MN Koochiching",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104736: {
    "label": "GCS NAD 1983 HARN Adj MN Lac Qui Parle",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104737: {
    "label": "GCS NAD 1983 HARN Adj MN Lake of the Woods North",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104738: {
    "label": "GCS NAD 1983 HARN Adj MN Lake of the Woods South",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104739: {
    "label": "GCS NAD 1983 HARN Adj MN Le Sueur",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104740: {
    "label": "GCS NAD 1983 HARN Adj MN Lincoln",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104741: {
    "label": "GCS NAD 1983 HARN Adj MN Lyon",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104742: {
    "label": "GCS NAD 1983 HARN Adj MN McLeod",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104743: {
    "label": "GCS NAD 1983 HARN Adj MN Mahnomen",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104744: {
    "label": "GCS NAD 1983 HARN Adj MN Marshall",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104745: {
    "label": "GCS NAD 1983 HARN Adj MN Martin",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104746: {
    "label": "GCS NAD 1983 HARN Adj MN Meeker",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104747: {
    "label": "GCS NAD 1983 HARN Adj MN Morrison",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104748: {
    "label": "GCS NAD 1983 HARN Adj MN Mower",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104749: {
    "label": "GCS NAD 1983 HARN Adj MN Murray",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104750: {
    "label": "GCS NAD 1983 HARN Adj MN Nicollet",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104751: {
    "label": "GCS NAD 1983 HARN Adj MN Nobles",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104752: {
    "label": "GCS NAD 1983 HARN Adj MN Norman",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104753: {
    "label": "GCS NAD 1983 HARN Adj MN Olmsted",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104754: {
    "label": "GCS NAD 1983 HARN Adj MN Ottertail",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104755: {
    "label": "GCS NAD 1983 HARN Adj MN Pennington",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104756: {
    "label": "GCS NAD 1983 HARN Adj MN Pine",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104757: {
    "label": "GCS NAD 1983 HARN Adj MN Pipestone",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104758: {
    "label": "GCS NAD 1983 HARN Adj MN Polk",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104759: {
    "label": "GCS NAD 1983 HARN Adj MN Pope",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104760: {
    "label": "GCS NAD 1983 HARN Adj MN Ramsey",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104761: {
    "label": "GCS NAD 1983 HARN Adj MN Red Lake",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104762: {
    "label": "GCS NAD 1983 HARN Adj MN Redwood",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104763: {
    "label": "GCS NAD 1983 HARN Adj MN Renville",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104764: {
    "label": "GCS NAD 1983 HARN Adj MN Rice",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104765: {
    "label": "GCS NAD 1983 HARN Adj MN Rock",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104766: {
    "label": "GCS NAD 1983 HARN Adj MN Roseau",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104767: {
    "label": "GCS NAD 1983 HARN Adj MN St Louis North",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104768: {
    "label": "GCS NAD 1983 HARN Adj MN St Louis Central",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104769: {
    "label": "GCS NAD 1983 HARN Adj MN St Louis South",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104770: {
    "label": "GCS NAD 1983 HARN Adj MN Scott",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104771: {
    "label": "GCS NAD 1983 HARN Adj MN Sherburne",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104772: {
    "label": "GCS NAD 1983 HARN Adj MN Sibley",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104773: {
    "label": "GCS NAD 1983 HARN Adj MN Stearns",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104774: {
    "label": "GCS NAD 1983 HARN Adj MN Steele",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104775: {
    "label": "GCS NAD 1983 HARN Adj MN Stevens",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104776: {
    "label": "GCS NAD 1983 HARN Adj MN Swift",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104777: {
    "label": "GCS NAD 1983 HARN Adj MN Todd",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104778: {
    "label": "GCS NAD 1983 HARN Adj MN Traverse",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104779: {
    "label": "GCS NAD 1983 HARN Adj MN Wabasha",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104780: {
    "label": "GCS NAD 1983 HARN Adj MN Wadena",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104781: {
    "label": "GCS NAD 1983 HARN Adj MN Waseca",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104782: {
    "label": "GCS NAD 1983 HARN Adj MN Watonwan",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104783: {
    "label": "GCS NAD 1983 HARN Adj MN Winona",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104784: {
    "label": "GCS NAD 1983 HARN Adj MN Wright",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104785: {
    "label": "GCS NAD 1983 HARN Adj MN Yellow Medicine",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104786: {
    "label": "GCS NAD 1983 HARN Adj MN St Louis",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104896: {
    "label": "GCS ITRF 2005",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104900: {
    "label": "GCS Mercury 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104901: {
    "label": "GCS Venus 1985",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104902: {
    "label": "GCS Venus 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104903: {
    "label": "GCS Moon 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104904: {
    "label": "GCS Mars 1979",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104905: {
    "label": "GCS Mars 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104906: {
    "label": "GCS Deimos 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104907: {
    "label": "GCS Phobos 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104908: {
    "label": "GCS Jupiter 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104909: {
    "label": "GCS Adrastea 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104910: {
    "label": "GCS Amalthea 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104911: {
    "label": "GCS Ananke 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104912: {
    "label": "GCS Callisto 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104913: {
    "label": "GCS Carme 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104914: {
    "label": "GCS Elara 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104915: {
    "label": "GCS Europa 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104916: {
    "label": "GCS Ganymede 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104917: {
    "label": "GCS Himalia 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104918: {
    "label": "GCS Io 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104919: {
    "label": "GCS Leda 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104920: {
    "label": "GCS Lysithea 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104921: {
    "label": "GCS Metis 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104922: {
    "label": "GCS Pasiphae 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104923: {
    "label": "GCS Sinope 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104924: {
    "label": "GCS Thebe 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104925: {
    "label": "GCS Saturn 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104926: {
    "label": "GCS Atlas 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104927: {
    "label": "GCS Calypso 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104928: {
    "label": "GCS Dione 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104929: {
    "label": "GCS Enceladus 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104930: {
    "label": "GCS Epimetheus 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104931: {
    "label": "GCS Helene 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104932: {
    "label": "GCS Hyperion 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104933: {
    "label": "GCS Iapetus 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104934: {
    "label": "GCS Janus 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104935: {
    "label": "GCS Mimas 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104936: {
    "label": "GCS Pan 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104937: {
    "label": "GCS Pandora 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104938: {
    "label": "GCS Phoebe 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104939: {
    "label": "GCS Prometheus 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104940: {
    "label": "GCS Rhea 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104941: {
    "label": "GCS Telesto 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104942: {
    "label": "GCS Tethys 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104943: {
    "label": "GCS Titan 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104944: {
    "label": "GCS Uranus 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104945: {
    "label": "GCS Ariel 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104946: {
    "label": "GCS Belinda 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104947: {
    "label": "GCS Bianca 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104948: {
    "label": "GCS Cordelia 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104949: {
    "label": "GCS Cressida 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104950: {
    "label": "GCS Desdemona 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104951: {
    "label": "GCS Juliet 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104952: {
    "label": "GCS Miranda 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104953: {
    "label": "GCS Oberon 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104954: {
    "label": "GCS Ophelia 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104955: {
    "label": "GCS Portia 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104956: {
    "label": "GCS Puck 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104957: {
    "label": "GCS Rosalind 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104958: {
    "label": "GCS Titania 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104959: {
    "label": "GCS Umbriel 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104960: {
    "label": "GCS Neptune 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104961: {
    "label": "GCS Despina 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104962: {
    "label": "GCS Galatea 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104963: {
    "label": "GCS Larissa 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104964: {
    "label": "GCS Naiad 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104965: {
    "label": "GCS Nereid 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104966: {
    "label": "GCS Proteus 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104967: {
    "label": "GCS Thalassa 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104968: {
    "label": "GCS Triton 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104969: {
    "label": "GCS Pluto 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104970: {
    "label": "GCS Charon 2000",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104990: {
    "label": "GCS HD1909",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104991: {
    "label": "GCS IGRS",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  },
  104992: {
    "label": "GCS MGI 1901",
    "defaultExtent": "{\"xmin\": -179.9999885408437, \"ymin\": -85.05112779126247, \"xmax\": 179.9999885408437, \"ymax\": 85.05112779126246}"
  }
};

const solutionSpatialRefCss = ".spatial-ref-switch{-webkit-margin-end:0.5rem;margin-inline-end:0.5rem}.spatial-ref-switch-title{margin-top:0.625rem;-webkit-margin-start:2.5rem;margin-inline-start:2.5rem}#spatialRefDefn .sc-calcite-label-h label.sc-calcite-label{margin:0px;background-color:#CBC3E3}.spatial-ref-default{margin:0px}.spatial-ref-item-title{margin-bottom:0.5rem;font-size:0.875rem;line-height:1.25rem}.spatial-ref-item-switch{-webkit-margin-end:0.5rem;margin-inline-end:0.5rem}.switch-label{margin:0.25rem;font-size:0.875rem;line-height:1.25rem}.disabled-div{pointer-events:none;opacity:0.4}.spatial-ref-container{max-height:200px;margin-bottom:1rem;overflow-y:auto}";

class SolutionSpatialRef {
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.featureServiceSpatialReferenceChange = createEvent(this, "featureServiceSpatialReferenceChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties (public)
    //
    //--------------------------------------------------------------------------
    /**
    * The wkid that will be used as the default when no user selection has been made.
    */
    this.defaultWkid = 102100;
    /**
    * Indicates if the control has been enabled.
    * The first time Spatial Reference has been enabled it should enable all feature services.
    */
    this.loaded = false;
    /**
    * When true, all but the main switch are disabled to prevent interaction.
    */
    this.locked = true;
    /**
     * Contains the translations for this component.
     */
    this.translations = {};
    /**
     * Contains the public value for this component.
     */
    this.value = null;
    /**
    * List of service names the spatial reference should apply to
    */
    this.services = [];
    this.spatialRef = this._createSpatialRefDisplay(this.value);
    this.locked = true;
  }
  valueChanged(newValue) {
    this.spatialRef = this._createSpatialRefDisplay(newValue);
    this._updateStore();
  }
  render() {
    return (hAsync(Host, null, hAsync("label", { class: "switch-label" }, hAsync("calcite-switch", { class: "spatial-ref-switch", onCalciteSwitchChange: (event) => this._updateLocked(event), scale: "m", switched: !this.locked }), this.translations.specifyParam), hAsync("div", { class: "spatial-ref-switch-title", id: "spatialRefDefn" }, hAsync("calcite-label", null, this.translations.spatialReferenceInfo, hAsync("label", { class: "spatial-ref-default" }, hAsync("calcite-input", { disabled: this.locked, onCalciteInputInput: (evt) => this._searchSpatialReferences(evt), onKeyDown: (evt) => this._inputKeyDown(evt), placeholder: this.translations.spatialReferencePlaceholder }))), hAsync("div", { class: this.locked ? 'disabled-div' : '' }, hAsync("calcite-tree", { id: "calcite-sr-tree", slot: "children" }, this._getTreeContent())), this._getFeatureServices(this.services))));
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods (async)
  //
  //--------------------------------------------------------------------------
  /**
   * Returns the spatial reference description of the supplied value.
   * (Exposes private method `_createSpatialRefDisplay` for testing.)
   *
   * @param value WKID or WKT or null for default
   * @returns If component is using a WKID, description using WKID; otherwise, the WKT; defaults to 102100
   */
  createSpatialRefDisplay(value) {
    return Promise.resolve(this._createSpatialRefDisplay(value));
  }
  /**
   * Returns the current spatial reference description.
   * (Exposes private variable `spatialRef` for testing.)
   */
  getSpatialRef() {
    return Promise.resolve(this.spatialRef);
  }
  /**
   * Converts a WKID into a spatial reference description.
   * (Exposes private method `_wkidToDisplay` for testing.)
   *
   * @param wkid WKID to look up
   * @returns Description, or "WKID &lt;wkid&gt;" if a description doesn't exist for the WKID
   */
  wkidToDisplay(wkid) {
    return Promise.resolve(this._wkidToDisplay(wkid));
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Returns the spatial reference description of the supplied value.
   *
   * @param value WKID or WKT or null for default
   * @returns If component is using a WKID, description using WKID; otherwise, the WKT; defaults to 102100
   */
  _createSpatialRefDisplay(value) {
    let spatialRef;
    if (!value) {
      spatialRef = {
        display: this._wkidToDisplay(this.defaultWkid),
        usingWkid: true,
        wkid: this.defaultWkid,
        wkt: ""
      };
    }
    else {
      const wkid = Number.parseInt(value);
      spatialRef = isNaN(wkid) ? {
        display: value,
        usingWkid: false,
        wkid: 0,
        wkt: value
      } : {
        display: this._wkidToDisplay(wkid),
        usingWkid: true,
        wkid: wkid,
        wkt: ""
      };
    }
    return spatialRef;
  }
  /**
   * Toggles the ability to set the default spatial reference.
   */
  _updateLocked(event) {
    this.locked = !event.detail.switched;
    this._updateStore();
    if (!this.loaded) {
      // when this is switched on when loading we have reloaded a solution that
      // has a custom wkid param and we should honor the settings they already have in the templates
      if (event.detail.switched) {
        // By default enable all Feature Services on first load
        this._setFeatureServiceDefaults(this.services);
      }
      this.loaded = true;
    }
  }
  ;
  /**
   * Enable spatial reference variable for all feature services.
   *
   * @param services list of service names
   */
  _setFeatureServiceDefaults(services) {
    // switch all spatial-ref-item-switch
    const fsNodes = nodeListToArray(this.el.getElementsByClassName("spatial-ref-item-switch"));
    fsNodes.forEach((node) => node.checked = true);
    services.forEach(name => this._updateEnabledServices({ detail: { switched: true } }, name));
  }
  /**
   * Stores the wkid as the components value.
   */
  _setSpatialRef(wkid) {
    if (this.value !== wkid) {
      this.value = wkid;
    }
  }
  /**
   * Converts a WKID into a spatial reference description.
   *
   * @param wkid WKID to look up
   * @returns Description, or "WKID &lt;wkid&gt;" if a description doesn't exist for the WKID
   */
  _wkidToDisplay(wkid) {
    const description = wkids[wkid];
    return description ? description.label + " (" + wkid.toString() + ")" : "WKID " + wkid.toString();
  }
  /**
   * Create a switch control for each of the services
   *
   * @param services List of feature services
   * @returns a node to control each feature service
   */
  _getFeatureServices(services) {
    // verify they are in state
    const _services = services.filter(s => {
      return state.spatialReferenceInfo["services"].some(stateService => stateService.hasOwnProperty(s));
    });
    return _services && _services.length > 0 ? (hAsync("div", null, hAsync("label", { class: "spatial-ref-item-title" }, this.translations.featureServicesHeading), _services.map(name => (hAsync("label", { class: "switch-label" }, hAsync("calcite-switch", { class: "spatial-ref-item-switch", disabled: this.locked, onCalciteSwitchChange: (event) => this._updateEnabledServices(event, name), scale: "m", switched: state.spatialReferenceInfo["services"][name] }), name))))) : (null);
  }
  /**
   * Updates the enabled and spatialReference prop in spatialReferenceInfo.
   */
  _updateStore() {
    state.spatialReferenceInfo["enabled"] = !this.locked;
    state.spatialReferenceInfo["spatialReference"] = this.spatialRef;
  }
  /**
   * Updates the enabled/disabled state of the service in spatialReferenceInfo.
   */
  _updateEnabledServices(event, name) {
    state.spatialReferenceInfo["services"][name] = event.detail.switched;
    this.featureServiceSpatialReferenceChange.emit({
      name,
      enabled: event.detail.switched
    });
  }
  /**
   * Select the first child on Enter key click
   * OR
   * Clear any selection while user is entering values and use the default wkid
   *
   * @param event The keyboard event
   */
  _inputKeyDown(event) {
    var _a;
    if (event.key === "Enter") {
      this._selectFirstChild(true);
    }
    else {
      if (((_a = this._srSearchText) === null || _a === void 0 ? void 0 : _a.length) > 1) {
        this._clearSelection();
        this._setSpatialRef(this.defaultWkid.toString());
      }
    }
  }
  /**
   * Clear any selected items in the elements tree.
   *
   */
  _clearSelection() {
    const selectedItems = nodeListToArray(this.el.querySelectorAll("calcite-tree-item[selected]"));
    selectedItems.forEach((treeItem) => {
      treeItem.selected = false;
    });
  }
  /**
   * Select the first child from the tree.
   *
   * @param autoFocus Boolean to indicate if focus should also be shifted to the first child.
   *
   */
  _selectFirstChild(autoFocus) {
    const wkidContainer = document.getElementById("solution-wkid-container");
    if (wkidContainer && wkidContainer.firstChild) {
      const firstChild = wkidContainer.firstChild;
      firstChild.selected = true;
      this._setSpatialRef(firstChild.id);
      if (autoFocus) {
        firstChild.focus();
      }
    }
  }
  /**
   * Set the search text State and cause render.
   *
   * @param event the event to get the value from
   *
   */
  _searchSpatialReferences(event) {
    this._srSearchText = event.detail.value;
  }
  /**
   * Get the tree items for the current spatial reference search
   *
   */
  _getTreeContent() {
    const id = "solution-wkid-container";
    const containerClass = "spatial-ref-container";
    if (this._srSearchText && this._srSearchText !== "" && this._srSearchText.length > 1) {
      const regEx = new RegExp(`${this._srSearchText}`, 'gi');
      const matches = Object.keys(wkids).filter(wkid => {
        return regEx.test(wkid.toString()) || regEx.test(wkids[wkid].label);
      });
      return matches.length > 0 ? (hAsync("div", { class: containerClass, id: id }, matches.map((wkid) => this._getTreeItem(wkid, false)))) : (null);
    }
    else {
      return (hAsync("div", { class: containerClass, id: id }, this._getTreeItem(this.defaultWkid.toString(), true)));
    }
  }
  /**
   * Get the individual spatial reference tree item
   *
   * @param wkid The wkid for the spatial reference that will be displayed.
   * @param selected Should the item be selected by default.
   *
   */
  _getTreeItem(wkid, selected) {
    return (hAsync("calcite-tree-item", { "aria-selected": selected, id: wkid, onClick: () => this._setSpatialRef(wkid), selected: selected }, hAsync("div", null, `${wkids[wkid].label} (${wkid})`)));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "value": ["valueChanged"]
  }; }
  static get style() { return solutionSpatialRefCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "solution-spatial-ref",
    "$members$": {
      "defaultWkid": [1538, "default-wkid"],
      "loaded": [1540],
      "locked": [1540],
      "translations": [1032],
      "value": [1537],
      "services": [1040],
      "spatialRef": [32],
      "_srSearchText": [32],
      "createSpatialRefDisplay": [64],
      "getSpatialRef": [64],
      "wkidToDisplay": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["defaultWkid", "default-wkid"], ["loaded", "loaded"], ["locked", "locked"], ["value", "value"]]
  }; }
}

const solutionTemplateDataCss = ":host{display:flexbox}.solution-data-container{position:relative;height:100%;width:100%}.solution-data-child-container{display:-ms-flexbox;display:flex;height:100%;width:100%;-ms-flex-direction:column;flex-direction:column;overflow:auto}.solution-data-child-container-collapsed{display:-ms-flexbox;display:flex;height:100%;-ms-flex-direction:column;flex-direction:column;overflow:auto;width:50px}.inputBottomSeparation{margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:1.5rem}.json-editor{margin:1rem;width:auto;width:-webkit-fill-available -moz-available}.collapse-btn{padding-left:1rem;padding-right:1rem;padding-top:1rem;padding-bottom:0px}.org-vars{padding-left:1rem;padding-right:1rem;padding-top:1rem;padding-bottom:0px;max-height:45%}.sol-vars{padding-top:0px;padding-bottom:0px;padding-left:1rem;padding-right:1rem;min-height:45%}.padding-1{padding:1rem}.light{background-color:#F4F4F4}";

class SolutionTemplateData {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    /**
     * Contains the translations for this component.
     */
    this.translations = {};
    /**
     * Contains the public value for this component.
     *
     * When working with a resource item this should contain an IResourceItem
     *
     * When working with a json type item this should contain the data and vars
     */
    this.value = {};
    /**
     * This needs to be unique for props vs data of an item
     */
    this.instanceid = "";
    /**
     * A templates itemId.
     * This is used to get the correct model from a store in the json-editor
     */
    this.itemid = "";
    /**
     * Contains the solution based variables
     */
    this.solutionVariables = [];
    /**
     * Contains the organization based variables
     */
    this.organizationVariables = [];
    /**
     * Used to show/hide the variable containers
     */
    this.varsOpen = true;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    return (hAsync(Host, null, hAsync("div", { class: "solution-data-container" }, hAsync("calcite-shell", { class: "light var-container", dir: "ltr" }, hAsync("calcite-panel", { class: "json-editor" }, hAsync("div", { class: "solution-data-child-container calcite-match-height" }, hAsync("json-editor", { instanceid: this.instanceid, translations: this.translations, value: this.itemid }))), hAsync("calcite-shell-panel", { "height-scale": "l", position: "end", slot: "contextual-panel", "width-scale": "xs" }, hAsync("div", { class: this.varsOpen ? "solution-data-child-container" : "solution-data-child-container-collapsed" }, hAsync("calcite-button", { appearance: "transparent", class: "collapse-btn", "icon-start": this.varsOpen ? "chevrons-right" : "chevrons-left", id: "collapse-vars", onClick: () => this._toggleVars(), scale: "s", title: this.translations.cancelEdits }), hAsync("div", { class: this.varsOpen ? "org-vars" : "org-vars display-none", id: "orgVars" }, hAsync("solution-organization-variables", { translations: this.translations, value: this.organizationVariables })), hAsync("div", { class: this.varsOpen ? "sol-vars" : "sol-vars display-none", id: "solVars" }, hAsync("solution-variables", { translations: this.translations, value: this.solutionVariables }))))))));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Events
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Public Methods (async)
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Toggle varsOpen prop to show/hide variable containers
   */
  _toggleVars() {
    this.varsOpen = !this.varsOpen;
  }
  get el() { return getElement(this); }
  static get style() { return solutionTemplateDataCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "solution-template-data",
    "$members$": {
      "authentication": [1040],
      "translations": [1032],
      "value": [1040],
      "instanceid": [1537],
      "itemid": [1537],
      "solutionVariables": [1040],
      "organizationVariables": [1040],
      "varsOpen": [1540, "vars-open"]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["instanceid", "instanceid"], ["itemid", "itemid"], ["varsOpen", "vars-open"]]
  }; }
}

const solutionVariablesCss = "/*!@:host*/.sc-solution-variables-h{display:block;-webkit-box-sizing:border-box;box-sizing:border-box;margin-left:0.75rem;margin-right:0.75rem;min-width:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:1;flex-shrink:1}/*!@:host-group-1-up > .block*/-group-1-up.sc-solution-variables-h>.block.sc-solution-variables{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}/*!@:host-group-2-up > .block*/-group-2-up.sc-solution-variables-h>.block.sc-solution-variables{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}/*!@:host-group-3-up > .block*/-group-3-up.sc-solution-variables-h>.block.sc-solution-variables{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}/*!@:host-group-4-up > .block*/-group-4-up.sc-solution-variables-h>.block.sc-solution-variables{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}/*!@:host-group-5-up > .block*/-group-5-up.sc-solution-variables-h>.block.sc-solution-variables{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}/*!@:host-group-6-up > .block*/-group-6-up.sc-solution-variables-h>.block.sc-solution-variables{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}/*!@:host-group-7-up > .block*/-group-7-up.sc-solution-variables-h>.block.sc-solution-variables{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}/*!@:host-group-8-up > .block*/-group-8-up.sc-solution-variables-h>.block.sc-solution-variables{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}/*!@.tablet-block-group-1-up > :host*/.tablet-block-group-1-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}/*!@.tablet-block-group-2-up > :host*/.tablet-block-group-2-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}/*!@.tablet-block-group-3-up > :host*/.tablet-block-group-3-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}/*!@.tablet-block-group-4-up > :host*/.tablet-block-group-4-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}/*!@.tablet-block-group-5-up > :host*/.tablet-block-group-5-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}/*!@.tablet-block-group-6-up > :host*/.tablet-block-group-6-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}/*!@.tablet-block-group-7-up > :host*/.tablet-block-group-7-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}/*!@.tablet-block-group-8-up > :host*/.tablet-block-group-8-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}/*!@.phone-block-group-1-up > :host*/.phone-block-group-1-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(100% - 1.5rem);flex-basis:calc(100% - 1.5rem);width:calc(100% - 1.5rem)}/*!@.phone-block-group-2-up > :host*/.phone-block-group-2-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(50% - 1.5rem);flex-basis:calc(50% - 1.5rem);width:calc(50% - 1.5rem)}/*!@.phone-block-group-3-up > :host*/.phone-block-group-3-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(33.33333% - 1.5rem);flex-basis:calc(33.33333% - 1.5rem);width:calc(33.33333% - 1.5rem)}/*!@.phone-block-group-4-up > :host*/.phone-block-group-4-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(25% - 1.5rem);flex-basis:calc(25% - 1.5rem);width:calc(25% - 1.5rem)}/*!@.phone-block-group-5-up > :host*/.phone-block-group-5-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(20% - 1.5rem);flex-basis:calc(20% - 1.5rem);width:calc(20% - 1.5rem)}/*!@.phone-block-group-6-up > :host*/.phone-block-group-6-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(16.66666% - 1.5rem);flex-basis:calc(16.66666% - 1.5rem);width:calc(16.66666% - 1.5rem)}/*!@.phone-block-group-7-up > :host*/.phone-block-group-7-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(14.2857% - 1.5rem);flex-basis:calc(14.2857% - 1.5rem);width:calc(14.2857% - 1.5rem)}/*!@.phone-block-group-8-up > :host*/.phone-block-group-8-up>.sc-solution-variables-h{-ms-flex-preferred-size:calc(12.5% - 1.5rem);flex-basis:calc(12.5% - 1.5rem);width:calc(12.5% - 1.5rem)}/*!@.code-face :host*/.code-face .sc-solution-variables-h{letter-spacing:0em;font-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;font-weight:400;font-style:normal}/*!@.code-face :host b, .code-face :host strong*/.code-face .sc-solution-variables-h b.sc-solution-variables,.code-face .sc-solution-variables-h strong.sc-solution-variables{font-weight:400}/*!@.code-italic :host*/.code-italic .sc-solution-variables-h{letter-spacing:0em;font-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;font-weight:400;font-style:italic}/*!@.code-italic :host b, .code-italic :host strong*/.code-italic .sc-solution-variables-h b.sc-solution-variables,.code-italic .sc-solution-variables-h strong.sc-solution-variables{font-weight:400}/*!@.container-border*/.container-border.sc-solution-variables{overflow-y:hidden}/*!@.org-var-header*/.org-var-header.sc-solution-variables{margin-top:1rem;margin-bottom:1rem;margin-left:0px;margin-right:0px}/*!@.icon-text*/.icon-text.sc-solution-variables{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}";

class SolutionVariables {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.solutionVariableSelected = createEvent(this, "solutionVariableSelected", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties (public)
    //
    //--------------------------------------------------------------------------
    /**
     * Contains the translations for this component.
     */
    this.translations = {};
    /**
     * Contains the public value for this component.
     */
    this.value = [];
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    return (hAsync(Host, null, hAsync("div", null, hAsync("h4", { class: "org-var-header" }, this.translations.solVariables)), hAsync("div", { class: "container-border" }, hAsync("calcite-label", { id: "variable-label" }, this._renderHierarchy(this.value)))));
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods (async)
  //
  //--------------------------------------------------------------------------
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Render the solution item variables that the user can insert into temaplates at runtime.
   *
   * @param objs a list of variable items that have been gathered from the solutions templates
   */
  _renderHierarchy(objs) {
    const hierarchy = objs.map(obj => {
      return obj.dependencies && obj.dependencies.length > 0 ? (hAsync("calcite-tree-item", null, hAsync("solution-item-icon", { type: obj.type }), hAsync("span", { class: "icon-text", title: obj.title }, obj.title), hAsync("calcite-tree", { slot: "children" }, this._renderHierarchy(obj.dependencies)))) : (hAsync("calcite-tree-item", { onClick: () => this._treeItemSelected(obj.id, obj.value) }, obj.title));
    });
    return hierarchy;
  }
  /**
   * Publishes the `solutionVariableSelected` event containing `itemId`, the id of the selected variable and the value of the variable.
   *
   * @param id Item id as reported by click event
   * @param value Variable id as reported by click event
   */
  _treeItemSelected(id, value) {
    this.solutionVariableSelected.emit({
      itemId: id,
      value
    });
  }
  get el() { return getElement(this); }
  static get style() { return solutionVariablesCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "solution-variables",
    "$members$": {
      "translations": [1032],
      "value": [1040]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

/**!
 * Sortable 1.14.0
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var version = "1.14.0";

function userAgent(pattern) {
  if (typeof window !== 'undefined' && window.navigator) {
    return !! /*@__PURE__*/navigator.userAgent.match(pattern);
  }
}

var IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\.|msie|iemobile|Windows Phone)/i);
var Edge = userAgent(/Edge/i);
var FireFox = userAgent(/firefox/i);
var Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);
var IOS = userAgent(/iP(ad|od|hone)/i);
var ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);

var captureMode = {
  capture: false,
  passive: false
};

function on(el, event, fn) {
  el.addEventListener(event, fn, !IE11OrLess && captureMode);
}

function off(el, event, fn) {
  el.removeEventListener(event, fn, !IE11OrLess && captureMode);
}

function matches(
/**HTMLElement*/
el,
/**String*/
selector) {
  if (!selector) return;
  selector[0] === '>' && (selector = selector.substring(1));

  if (el) {
    try {
      if (el.matches) {
        return el.matches(selector);
      } else if (el.msMatchesSelector) {
        return el.msMatchesSelector(selector);
      } else if (el.webkitMatchesSelector) {
        return el.webkitMatchesSelector(selector);
      }
    } catch (_) {
      return false;
    }
  }

  return false;
}

function getParentOrHost(el) {
  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;
}

function closest(
/**HTMLElement*/
el,
/**String*/
selector,
/**HTMLElement*/
ctx, includeCTX) {
  if (el) {
    ctx = ctx || document;

    do {
      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {
        return el;
      }

      if (el === ctx) break;
      /* jshint boss:true */
    } while (el = getParentOrHost(el));
  }

  return null;
}

var R_SPACE = /\s+/g;

function toggleClass(el, name, state) {
  if (el && name) {
    if (el.classList) {
      el.classList[state ? 'add' : 'remove'](name);
    } else {
      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');
      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');
    }
  }
}

function css(el, prop, val) {
  var style = el && el.style;

  if (style) {
    if (val === void 0) {
      if (document.defaultView && document.defaultView.getComputedStyle) {
        val = document.defaultView.getComputedStyle(el, '');
      } else if (el.currentStyle) {
        val = el.currentStyle;
      }

      return prop === void 0 ? val : val[prop];
    } else {
      if (!(prop in style) && prop.indexOf('webkit') === -1) {
        prop = '-webkit-' + prop;
      }

      style[prop] = val + (typeof val === 'string' ? '' : 'px');
    }
  }
}

function matrix(el, selfOnly) {
  var appliedTransforms = '';

  if (typeof el === 'string') {
    appliedTransforms = el;
  } else {
    do {
      var transform = css(el, 'transform');

      if (transform && transform !== 'none') {
        appliedTransforms = transform + ' ' + appliedTransforms;
      }
      /* jshint boss:true */

    } while (!selfOnly && (el = el.parentNode));
  }

  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;
  /*jshint -W056 */

  return matrixFn && new matrixFn(appliedTransforms);
}

function find(ctx, tagName, iterator) {
  if (ctx) {
    var list = ctx.getElementsByTagName(tagName),
        i = 0,
        n = list.length;

    if (iterator) {
      for (; i < n; i++) {
        iterator(list[i], i);
      }
    }

    return list;
  }

  return [];
}

function getWindowScrollingElement() {
  var scrollingElement = document.scrollingElement;

  if (scrollingElement) {
    return scrollingElement;
  } else {
    return document.documentElement;
  }
}
/**
 * Returns the "bounding client rect" of given element
 * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted
 * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container
 * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr
 * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone
 * @param  {[HTMLElement]} container              The parent the element will be placed in
 * @return {Object}                               The boundingClientRect of el, with specified adjustments
 */


function getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {
  if (!el.getBoundingClientRect && el !== window) return;
  var elRect, top, left, bottom, right, height, width;

  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {
    elRect = el.getBoundingClientRect();
    top = elRect.top;
    left = elRect.left;
    bottom = elRect.bottom;
    right = elRect.right;
    height = elRect.height;
    width = elRect.width;
  } else {
    top = 0;
    left = 0;
    bottom = window.innerHeight;
    right = window.innerWidth;
    height = window.innerHeight;
    width = window.innerWidth;
  }

  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {
    // Adjust for translate()
    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)
    // Not needed on <= IE11

    if (!IE11OrLess) {
      do {
        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {
          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container

          top -= containerRect.top + parseInt(css(container, 'border-top-width'));
          left -= containerRect.left + parseInt(css(container, 'border-left-width'));
          bottom = top + elRect.height;
          right = left + elRect.width;
          break;
        }
        /* jshint boss:true */

      } while (container = container.parentNode);
    }
  }

  if (undoScale && el !== window) {
    // Adjust for scale()
    var elMatrix = matrix(container || el),
        scaleX = elMatrix && elMatrix.a,
        scaleY = elMatrix && elMatrix.d;

    if (elMatrix) {
      top /= scaleY;
      left /= scaleX;
      width /= scaleX;
      height /= scaleY;
      bottom = top + height;
      right = left + width;
    }
  }

  return {
    top: top,
    left: left,
    bottom: bottom,
    right: right,
    width: width,
    height: height
  };
}
/**
 * Checks if a side of an element is scrolled past a side of its parents
 * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question
 * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')
 * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')
 * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element
 */


function isScrolledPast(el, elSide, parentSide) {
  var parent = getParentAutoScrollElement(el, true),
      elSideVal = getRect(el)[elSide];
  /* jshint boss:true */

  while (parent) {
    var parentSideVal = getRect(parent)[parentSide],
        visible = void 0;

    if (parentSide === 'top' || parentSide === 'left') {
      visible = elSideVal >= parentSideVal;
    } else {
      visible = elSideVal <= parentSideVal;
    }

    if (!visible) return parent;
    if (parent === getWindowScrollingElement()) break;
    parent = getParentAutoScrollElement(parent, false);
  }

  return false;
}
/**
 * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)
 * and non-draggable elements
 * @param  {HTMLElement} el       The parent element
 * @param  {Number} childNum      The index of the child
 * @param  {Object} options       Parent Sortable's options
 * @return {HTMLElement}          The child at index childNum, or null if not found
 */


function getChild(el, childNum, options, includeDragEl) {
  var currentChild = 0,
      i = 0,
      children = el.children;

  while (i < children.length) {
    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {
      if (currentChild === childNum) {
        return children[i];
      }

      currentChild++;
    }

    i++;
  }

  return null;
}
/**
 * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)
 * @param  {HTMLElement} el       Parent element
 * @param  {selector} selector    Any other elements that should be ignored
 * @return {HTMLElement}          The last child, ignoring ghostEl
 */


function lastChild(el, selector) {
  var last = el.lastElementChild;

  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {
    last = last.previousElementSibling;
  }

  return last || null;
}
/**
 * Returns the index of an element within its parent for a selected set of
 * elements
 * @param  {HTMLElement} el
 * @param  {selector} selector
 * @return {number}
 */


function index(el, selector) {
  var index = 0;

  if (!el || !el.parentNode) {
    return -1;
  }
  /* jshint boss:true */


  while (el = el.previousElementSibling) {
    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {
      index++;
    }
  }

  return index;
}
/**
 * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.
 * The value is returned in real pixels.
 * @param  {HTMLElement} el
 * @return {Array}             Offsets in the format of [left, top]
 */


function getRelativeScrollOffset(el) {
  var offsetLeft = 0,
      offsetTop = 0,
      winScroller = getWindowScrollingElement();

  if (el) {
    do {
      var elMatrix = matrix(el),
          scaleX = elMatrix.a,
          scaleY = elMatrix.d;
      offsetLeft += el.scrollLeft * scaleX;
      offsetTop += el.scrollTop * scaleY;
    } while (el !== winScroller && (el = el.parentNode));
  }

  return [offsetLeft, offsetTop];
}
/**
 * Returns the index of the object within the given array
 * @param  {Array} arr   Array that may or may not hold the object
 * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find
 * @return {Number}      The index of the object in the array, or -1
 */


function indexOfObject(arr, obj) {
  for (var i in arr) {
    if (!arr.hasOwnProperty(i)) continue;

    for (var key in obj) {
      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);
    }
  }

  return -1;
}

function getParentAutoScrollElement(el, includeSelf) {
  // skip to window
  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();
  var elem = el;
  var gotSelf = false;

  do {
    // we don't need to get elem css if it isn't even overflowing in the first place (performance)
    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {
      var elemCSS = css(elem);

      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {
        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();
        if (gotSelf || includeSelf) return elem;
        gotSelf = true;
      }
    }
    /* jshint boss:true */

  } while (elem = elem.parentNode);

  return getWindowScrollingElement();
}

function extend(dst, src) {
  if (dst && src) {
    for (var key in src) {
      if (src.hasOwnProperty(key)) {
        dst[key] = src[key];
      }
    }
  }

  return dst;
}

function isRectEqual(rect1, rect2) {
  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);
}

var _throttleTimeout;

function throttle(callback, ms) {
  return function () {
    if (!_throttleTimeout) {
      var args = arguments,
          _this = this;

      if (args.length === 1) {
        callback.call(_this, args[0]);
      } else {
        callback.apply(_this, args);
      }

      _throttleTimeout = setTimeout(function () {
        _throttleTimeout = void 0;
      }, ms);
    }
  };
}

function cancelThrottle() {
  clearTimeout(_throttleTimeout);
  _throttleTimeout = void 0;
}

function scrollBy(el, x, y) {
  el.scrollLeft += x;
  el.scrollTop += y;
}

function clone(el) {
  var Polymer = window.Polymer;
  var $ = window.jQuery || window.Zepto;

  if (Polymer && Polymer.dom) {
    return Polymer.dom(el).cloneNode(true);
  } else if ($) {
    return $(el).clone(true)[0];
  } else {
    return el.cloneNode(true);
  }
}

var expando = 'Sortable' + new Date().getTime();

function AnimationStateManager() {
  var animationStates = [],
      animationCallbackId;
  return {
    captureAnimationState: function captureAnimationState() {
      animationStates = [];
      if (!this.options.animation) return;
      var children = [].slice.call(this.el.children);
      children.forEach(function (child) {
        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;
        animationStates.push({
          target: child,
          rect: getRect(child)
        });

        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation


        if (child.thisAnimationDuration) {
          var childMatrix = matrix(child, true);

          if (childMatrix) {
            fromRect.top -= childMatrix.f;
            fromRect.left -= childMatrix.e;
          }
        }

        child.fromRect = fromRect;
      });
    },
    addAnimationState: function addAnimationState(state) {
      animationStates.push(state);
    },
    removeAnimationState: function removeAnimationState(target) {
      animationStates.splice(indexOfObject(animationStates, {
        target: target
      }), 1);
    },
    animateAll: function animateAll(callback) {
      var _this = this;

      if (!this.options.animation) {
        clearTimeout(animationCallbackId);
        if (typeof callback === 'function') callback();
        return;
      }

      var animating = false,
          animationTime = 0;
      animationStates.forEach(function (state) {
        var time = 0,
            target = state.target,
            fromRect = target.fromRect,
            toRect = getRect(target),
            prevFromRect = target.prevFromRect,
            prevToRect = target.prevToRect,
            animatingRect = state.rect,
            targetMatrix = matrix(target, true);

        if (targetMatrix) {
          // Compensate for current animation
          toRect.top -= targetMatrix.f;
          toRect.left -= targetMatrix.e;
        }

        target.toRect = toRect;

        if (target.thisAnimationDuration) {
          // Could also check if animatingRect is between fromRect and toRect
          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect
          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {
            // If returning to same place as started from animation and on same axis
            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);
          }
        } // if fromRect != toRect: animate


        if (!isRectEqual(toRect, fromRect)) {
          target.prevFromRect = fromRect;
          target.prevToRect = toRect;

          if (!time) {
            time = _this.options.animation;
          }

          _this.animate(target, animatingRect, toRect, time);
        }

        if (time) {
          animating = true;
          animationTime = Math.max(animationTime, time);
          clearTimeout(target.animationResetTimer);
          target.animationResetTimer = setTimeout(function () {
            target.animationTime = 0;
            target.prevFromRect = null;
            target.fromRect = null;
            target.prevToRect = null;
            target.thisAnimationDuration = null;
          }, time);
          target.thisAnimationDuration = time;
        }
      });
      clearTimeout(animationCallbackId);

      if (!animating) {
        if (typeof callback === 'function') callback();
      } else {
        animationCallbackId = setTimeout(function () {
          if (typeof callback === 'function') callback();
        }, animationTime);
      }

      animationStates = [];
    },
    animate: function animate(target, currentRect, toRect, duration) {
      if (duration) {
        css(target, 'transition', '');
        css(target, 'transform', '');
        var elMatrix = matrix(this.el),
            scaleX = elMatrix && elMatrix.a,
            scaleY = elMatrix && elMatrix.d,
            translateX = (currentRect.left - toRect.left) / (scaleX || 1),
            translateY = (currentRect.top - toRect.top) / (scaleY || 1);
        target.animatingX = !!translateX;
        target.animatingY = !!translateY;
        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');
        this.forRepaintDummy = repaint(target); // repaint

        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));
        css(target, 'transform', 'translate3d(0,0,0)');
        typeof target.animated === 'number' && clearTimeout(target.animated);
        target.animated = setTimeout(function () {
          css(target, 'transition', '');
          css(target, 'transform', '');
          target.animated = false;
          target.animatingX = false;
          target.animatingY = false;
        }, duration);
      }
    }
  };
}

function repaint(target) {
  return target.offsetWidth;
}

function calculateRealTime(animatingRect, fromRect, toRect, options) {
  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;
}

var plugins = [];
var defaults = {
  initializeByDefault: true
};
var PluginManager = {
  mount: function mount(plugin) {
    // Set default static properties
    for (var option in defaults) {
      if (defaults.hasOwnProperty(option) && !(option in plugin)) {
        plugin[option] = defaults[option];
      }
    }

    plugins.forEach(function (p) {
      if (p.pluginName === plugin.pluginName) {
        throw "Sortable: Cannot mount plugin ".concat(plugin.pluginName, " more than once");
      }
    });
    plugins.push(plugin);
  },
  pluginEvent: function pluginEvent(eventName, sortable, evt) {
    var _this = this;

    this.eventCanceled = false;

    evt.cancel = function () {
      _this.eventCanceled = true;
    };

    var eventNameGlobal = eventName + 'Global';
    plugins.forEach(function (plugin) {
      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable

      if (sortable[plugin.pluginName][eventNameGlobal]) {
        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({
          sortable: sortable
        }, evt));
      } // Only fire plugin event if plugin is enabled in this sortable,
      // and plugin has event defined


      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {
        sortable[plugin.pluginName][eventName](_objectSpread2({
          sortable: sortable
        }, evt));
      }
    });
  },
  initializePlugins: function initializePlugins(sortable, el, defaults, options) {
    plugins.forEach(function (plugin) {
      var pluginName = plugin.pluginName;
      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;
      var initialized = new plugin(sortable, el, sortable.options);
      initialized.sortable = sortable;
      initialized.options = sortable.options;
      sortable[pluginName] = initialized; // Add default options from plugin

      _extends(defaults, initialized.defaults);
    });

    for (var option in sortable.options) {
      if (!sortable.options.hasOwnProperty(option)) continue;
      var modified = this.modifyOption(sortable, option, sortable.options[option]);

      if (typeof modified !== 'undefined') {
        sortable.options[option] = modified;
      }
    }
  },
  getEventProperties: function getEventProperties(name, sortable) {
    var eventProperties = {};
    plugins.forEach(function (plugin) {
      if (typeof plugin.eventProperties !== 'function') return;

      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));
    });
    return eventProperties;
  },
  modifyOption: function modifyOption(sortable, name, value) {
    var modifiedValue;
    plugins.forEach(function (plugin) {
      // Plugin must exist on the Sortable
      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin

      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {
        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);
      }
    });
    return modifiedValue;
  }
};

function dispatchEvent$1(_ref) {
  var sortable = _ref.sortable,
      rootEl = _ref.rootEl,
      name = _ref.name,
      targetEl = _ref.targetEl,
      cloneEl = _ref.cloneEl,
      toEl = _ref.toEl,
      fromEl = _ref.fromEl,
      oldIndex = _ref.oldIndex,
      newIndex = _ref.newIndex,
      oldDraggableIndex = _ref.oldDraggableIndex,
      newDraggableIndex = _ref.newDraggableIndex,
      originalEvent = _ref.originalEvent,
      putSortable = _ref.putSortable,
      extraEventProperties = _ref.extraEventProperties;
  sortable = sortable || rootEl && rootEl[expando];
  if (!sortable) return;
  var evt,
      options = sortable.options,
      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature

  if (window.CustomEvent && !IE11OrLess && !Edge) {
    evt = new CustomEvent(name, {
      bubbles: true,
      cancelable: true
    });
  } else {
    evt = document.createEvent('Event');
    evt.initEvent(name, true, true);
  }

  evt.to = toEl || rootEl;
  evt.from = fromEl || rootEl;
  evt.item = targetEl || rootEl;
  evt.clone = cloneEl;
  evt.oldIndex = oldIndex;
  evt.newIndex = newIndex;
  evt.oldDraggableIndex = oldDraggableIndex;
  evt.newDraggableIndex = newDraggableIndex;
  evt.originalEvent = originalEvent;
  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;

  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));

  for (var option in allEventProperties) {
    evt[option] = allEventProperties[option];
  }

  if (rootEl) {
    rootEl.dispatchEvent(evt);
  }

  if (options[onName]) {
    options[onName].call(sortable, evt);
  }
}

var _excluded = ["evt"];

var pluginEvent = function pluginEvent(eventName, sortable) {
  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
      originalEvent = _ref.evt,
      data = _objectWithoutProperties(_ref, _excluded);

  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({
    dragEl: dragEl,
    parentEl: parentEl,
    ghostEl: ghostEl,
    rootEl: rootEl,
    nextEl: nextEl,
    lastDownEl: lastDownEl,
    cloneEl: cloneEl,
    cloneHidden: cloneHidden,
    dragStarted: moved,
    putSortable: putSortable,
    activeSortable: Sortable.active,
    originalEvent: originalEvent,
    oldIndex: oldIndex,
    oldDraggableIndex: oldDraggableIndex,
    newIndex: newIndex,
    newDraggableIndex: newDraggableIndex,
    hideGhostForTarget: _hideGhostForTarget,
    unhideGhostForTarget: _unhideGhostForTarget,
    cloneNowHidden: function cloneNowHidden() {
      cloneHidden = true;
    },
    cloneNowShown: function cloneNowShown() {
      cloneHidden = false;
    },
    dispatchSortableEvent: function dispatchSortableEvent(name) {
      _dispatchEvent({
        sortable: sortable,
        name: name,
        originalEvent: originalEvent
      });
    }
  }, data));
};

function _dispatchEvent(info) {
  dispatchEvent$1(_objectSpread2({
    putSortable: putSortable,
    cloneEl: cloneEl,
    targetEl: dragEl,
    rootEl: rootEl,
    oldIndex: oldIndex,
    oldDraggableIndex: oldDraggableIndex,
    newIndex: newIndex,
    newDraggableIndex: newDraggableIndex
  }, info));
}

var dragEl,
    parentEl,
    ghostEl,
    rootEl,
    nextEl,
    lastDownEl,
    cloneEl,
    cloneHidden,
    oldIndex,
    newIndex,
    oldDraggableIndex,
    newDraggableIndex,
    activeGroup,
    putSortable,
    awaitingDragStarted = false,
    ignoreNextClick = false,
    sortables = [],
    tapEvt,
    touchEvt,
    lastDx,
    lastDy,
    tapDistanceLeft,
    tapDistanceTop,
    moved,
    lastTarget,
    lastDirection,
    pastFirstInvertThresh = false,
    isCircumstantialInvert = false,
    targetMoveDistance,
    // For positioning ghost absolutely
ghostRelativeParent,
    ghostRelativeParentInitialScroll = [],
    // (left, top)
_silent = false,
    savedInputChecked = [];
/** @const */

var documentExists = typeof document !== 'undefined',
    PositionGhostAbsolutely = IOS,
    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',
    // This will not pass for IE9, because IE9 DnD only works on anchors
supportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),
    supportCssPointerEvents = function () {
  if (!documentExists) return; // false when <= IE11

  if (IE11OrLess) {
    return false;
  }

  var el = document.createElement('x');
  el.style.cssText = 'pointer-events:auto';
  return el.style.pointerEvents === 'auto';
}(),
    _detectDirection = function _detectDirection(el, options) {
  var elCSS = css(el),
      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),
      child1 = getChild(el, 0, options),
      child2 = getChild(el, 1, options),
      firstChildCSS = child1 && css(child1),
      secondChildCSS = child2 && css(child2),
      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,
      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;

  if (elCSS.display === 'flex') {
    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';
  }

  if (elCSS.display === 'grid') {
    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';
  }

  if (child1 && firstChildCSS["float"] && firstChildCSS["float"] !== 'none') {
    var touchingSideChild2 = firstChildCSS["float"] === 'left' ? 'left' : 'right';
    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';
  }

  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';
},
    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {
  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,
      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,
      dragElOppLength = vertical ? dragRect.width : dragRect.height,
      targetS1Opp = vertical ? targetRect.left : targetRect.top,
      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,
      targetOppLength = vertical ? targetRect.width : targetRect.height;
  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;
},

/**
 * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.
 * @param  {Number} x      X position
 * @param  {Number} y      Y position
 * @return {HTMLElement}   Element of the first found nearest Sortable
 */
_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {
  var ret;
  sortables.some(function (sortable) {
    var threshold = sortable[expando].options.emptyInsertThreshold;
    if (!threshold || lastChild(sortable)) return;
    var rect = getRect(sortable),
        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,
        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;

    if (insideHorizontally && insideVertically) {
      return ret = sortable;
    }
  });
  return ret;
},
    _prepareGroup = function _prepareGroup(options) {
  function toFn(value, pull) {
    return function (to, from, dragEl, evt) {
      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;

      if (value == null && (pull || sameGroup)) {
        // Default pull value
        // Default pull and put value if same group
        return true;
      } else if (value == null || value === false) {
        return false;
      } else if (pull && value === 'clone') {
        return value;
      } else if (typeof value === 'function') {
        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);
      } else {
        var otherGroup = (pull ? to : from).options.group.name;
        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;
      }
    };
  }

  var group = {};
  var originalGroup = options.group;

  if (!originalGroup || _typeof(originalGroup) != 'object') {
    originalGroup = {
      name: originalGroup
    };
  }

  group.name = originalGroup.name;
  group.checkPull = toFn(originalGroup.pull, true);
  group.checkPut = toFn(originalGroup.put);
  group.revertClone = originalGroup.revertClone;
  options.group = group;
},
    _hideGhostForTarget = function _hideGhostForTarget() {
  if (!supportCssPointerEvents && ghostEl) {
    css(ghostEl, 'display', 'none');
  }
},
    _unhideGhostForTarget = function _unhideGhostForTarget() {
  if (!supportCssPointerEvents && ghostEl) {
    css(ghostEl, 'display', '');
  }
}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position


if (documentExists) {
  document.addEventListener('click', function (evt) {
    if (ignoreNextClick) {
      evt.preventDefault();
      evt.stopPropagation && evt.stopPropagation();
      evt.stopImmediatePropagation && evt.stopImmediatePropagation();
      ignoreNextClick = false;
      return false;
    }
  }, true);
}

var nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {
  if (dragEl) {
    evt = evt.touches ? evt.touches[0] : evt;

    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);

    if (nearest) {
      // Create imitation event
      var event = {};

      for (var i in evt) {
        if (evt.hasOwnProperty(i)) {
          event[i] = evt[i];
        }
      }

      event.target = event.rootEl = nearest;
      event.preventDefault = void 0;
      event.stopPropagation = void 0;

      nearest[expando]._onDragOver(event);
    }
  }
};

var _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {
  if (dragEl) {
    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);
  }
};
/**
 * @class  Sortable
 * @param  {HTMLElement}  el
 * @param  {Object}       [options]
 */


function Sortable(el, options) {
  if (!(el && el.nodeType && el.nodeType === 1)) {
    throw "Sortable: `el` must be an HTMLElement, not ".concat({}.toString.call(el));
  }

  this.el = el; // root element

  this.options = options = _extends({}, options); // Export instance

  el[expando] = this;
  var defaults = {
    group: null,
    sort: true,
    disabled: false,
    store: null,
    handle: null,
    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',
    swapThreshold: 1,
    // percentage; 0 <= x <= 1
    invertSwap: false,
    // invert always
    invertedSwapThreshold: null,
    // will be set to same as swapThreshold if default
    removeCloneOnHide: true,
    direction: function direction() {
      return _detectDirection(el, this.options);
    },
    ghostClass: 'sortable-ghost',
    chosenClass: 'sortable-chosen',
    dragClass: 'sortable-drag',
    ignore: 'a, img',
    filter: null,
    preventOnFilter: true,
    animation: 0,
    easing: null,
    setData: function setData(dataTransfer, dragEl) {
      dataTransfer.setData('Text', dragEl.textContent);
    },
    dropBubble: false,
    dragoverBubble: false,
    dataIdAttr: 'data-id',
    delay: 0,
    delayOnTouchOnly: false,
    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,
    forceFallback: false,
    fallbackClass: 'sortable-fallback',
    fallbackOnBody: false,
    fallbackTolerance: 0,
    fallbackOffset: {
      x: 0,
      y: 0
    },
    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,
    emptyInsertThreshold: 5
  };
  PluginManager.initializePlugins(this, el, defaults); // Set default options

  for (var name in defaults) {
    !(name in options) && (options[name] = defaults[name]);
  }

  _prepareGroup(options); // Bind all private methods


  for (var fn in this) {
    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
      this[fn] = this[fn].bind(this);
    }
  } // Setup drag mode


  this.nativeDraggable = options.forceFallback ? false : supportDraggable;

  if (this.nativeDraggable) {
    // Touch start threshold cannot be greater than the native dragstart threshold
    this.options.touchStartThreshold = 1;
  } // Bind events


  if (options.supportPointer) {
    on(el, 'pointerdown', this._onTapStart);
  } else {
    on(el, 'mousedown', this._onTapStart);
    on(el, 'touchstart', this._onTapStart);
  }

  if (this.nativeDraggable) {
    on(el, 'dragover', this);
    on(el, 'dragenter', this);
  }

  sortables.push(this.el); // Restore sorting

  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager

  _extends(this, AnimationStateManager());
}

Sortable.prototype =
/** @lends Sortable.prototype */
{
  constructor: Sortable,
  _isOutsideThisEl: function _isOutsideThisEl(target) {
    if (!this.el.contains(target) && target !== this.el) {
      lastTarget = null;
    }
  },
  _getDirection: function _getDirection(evt, target) {
    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;
  },
  _onTapStart: function _onTapStart(
  /** Event|TouchEvent */
  evt) {
    if (!evt.cancelable) return;

    var _this = this,
        el = this.el,
        options = this.options,
        preventOnFilter = options.preventOnFilter,
        type = evt.type,
        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,
        target = (touch || evt).target,
        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,
        filter = options.filter;

    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.


    if (dragEl) {
      return;
    }

    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {
      return; // only left button and enabled
    } // cancel dnd if original target is content editable


    if (originalTarget.isContentEditable) {
      return;
    } // Safari ignores further event handling after mousedown


    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {
      return;
    }

    target = closest(target, options.draggable, el, false);

    if (target && target.animated) {
      return;
    }

    if (lastDownEl === target) {
      // Ignoring duplicate `down`
      return;
    } // Get the index of the dragged element within its parent


    oldIndex = index(target);
    oldDraggableIndex = index(target, options.draggable); // Check filter

    if (typeof filter === 'function') {
      if (filter.call(this, evt, target, this)) {
        _dispatchEvent({
          sortable: _this,
          rootEl: originalTarget,
          name: 'filter',
          targetEl: target,
          toEl: el,
          fromEl: el
        });

        pluginEvent('filter', _this, {
          evt: evt
        });
        preventOnFilter && evt.cancelable && evt.preventDefault();
        return; // cancel dnd
      }
    } else if (filter) {
      filter = filter.split(',').some(function (criteria) {
        criteria = closest(originalTarget, criteria.trim(), el, false);

        if (criteria) {
          _dispatchEvent({
            sortable: _this,
            rootEl: criteria,
            name: 'filter',
            targetEl: target,
            fromEl: el,
            toEl: el
          });

          pluginEvent('filter', _this, {
            evt: evt
          });
          return true;
        }
      });

      if (filter) {
        preventOnFilter && evt.cancelable && evt.preventDefault();
        return; // cancel dnd
      }
    }

    if (options.handle && !closest(originalTarget, options.handle, el, false)) {
      return;
    } // Prepare `dragstart`


    this._prepareDragStart(evt, touch, target);
  },
  _prepareDragStart: function _prepareDragStart(
  /** Event */
  evt,
  /** Touch */
  touch,
  /** HTMLElement */
  target) {
    var _this = this,
        el = _this.el,
        options = _this.options,
        ownerDocument = el.ownerDocument,
        dragStartFn;

    if (target && !dragEl && target.parentNode === el) {
      var dragRect = getRect(target);
      rootEl = el;
      dragEl = target;
      parentEl = dragEl.parentNode;
      nextEl = dragEl.nextSibling;
      lastDownEl = target;
      activeGroup = options.group;
      Sortable.dragged = dragEl;
      tapEvt = {
        target: dragEl,
        clientX: (touch || evt).clientX,
        clientY: (touch || evt).clientY
      };
      tapDistanceLeft = tapEvt.clientX - dragRect.left;
      tapDistanceTop = tapEvt.clientY - dragRect.top;
      this._lastX = (touch || evt).clientX;
      this._lastY = (touch || evt).clientY;
      dragEl.style['will-change'] = 'all';

      dragStartFn = function dragStartFn() {
        pluginEvent('delayEnded', _this, {
          evt: evt
        });

        if (Sortable.eventCanceled) {
          _this._onDrop();

          return;
        } // Delayed drag has been triggered
        // we can re-enable the events: touchmove/mousemove


        _this._disableDelayedDragEvents();

        if (!FireFox && _this.nativeDraggable) {
          dragEl.draggable = true;
        } // Bind the events: dragstart/dragend


        _this._triggerDragStart(evt, touch); // Drag start event


        _dispatchEvent({
          sortable: _this,
          name: 'choose',
          originalEvent: evt
        }); // Chosen item


        toggleClass(dragEl, options.chosenClass, true);
      }; // Disable "draggable"


      options.ignore.split(',').forEach(function (criteria) {
        find(dragEl, criteria.trim(), _disableDraggable);
      });
      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'mouseup', _this._onDrop);
      on(ownerDocument, 'touchend', _this._onDrop);
      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)

      if (FireFox && this.nativeDraggable) {
        this.options.touchStartThreshold = 4;
        dragEl.draggable = true;
      }

      pluginEvent('delayStart', this, {
        evt: evt
      }); // Delay is impossible for native DnD in Edge or IE

      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {
        if (Sortable.eventCanceled) {
          this._onDrop();

          return;
        } // If the user moves the pointer or let go the click or touch
        // before the delay has been reached:
        // disable the delayed drag


        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);
        on(ownerDocument, 'touchend', _this._disableDelayedDrag);
        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);
        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);
        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);
        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);
        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);
      } else {
        dragStartFn();
      }
    }
  },
  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(
  /** TouchEvent|PointerEvent **/
  e) {
    var touch = e.touches ? e.touches[0] : e;

    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {
      this._disableDelayedDrag();
    }
  },
  _disableDelayedDrag: function _disableDelayedDrag() {
    dragEl && _disableDraggable(dragEl);
    clearTimeout(this._dragStartTimer);

    this._disableDelayedDragEvents();
  },
  _disableDelayedDragEvents: function _disableDelayedDragEvents() {
    var ownerDocument = this.el.ownerDocument;
    off(ownerDocument, 'mouseup', this._disableDelayedDrag);
    off(ownerDocument, 'touchend', this._disableDelayedDrag);
    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);
    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);
    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);
    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);
  },
  _triggerDragStart: function _triggerDragStart(
  /** Event */
  evt,
  /** Touch */
  touch) {
    touch = touch || evt.pointerType == 'touch' && evt;

    if (!this.nativeDraggable || touch) {
      if (this.options.supportPointer) {
        on(document, 'pointermove', this._onTouchMove);
      } else if (touch) {
        on(document, 'touchmove', this._onTouchMove);
      } else {
        on(document, 'mousemove', this._onTouchMove);
      }
    } else {
      on(dragEl, 'dragend', this);
      on(rootEl, 'dragstart', this._onDragStart);
    }

    try {
      if (document.selection) {
        // Timeout neccessary for IE9
        _nextTick(function () {
          document.selection.empty();
        });
      } else {
        window.getSelection().removeAllRanges();
      }
    } catch (err) {}
  },
  _dragStarted: function _dragStarted(fallback, evt) {

    awaitingDragStarted = false;

    if (rootEl && dragEl) {
      pluginEvent('dragStarted', this, {
        evt: evt
      });

      if (this.nativeDraggable) {
        on(document, 'dragover', _checkOutsideTargetEl);
      }

      var options = this.options; // Apply effect

      !fallback && toggleClass(dragEl, options.dragClass, false);
      toggleClass(dragEl, options.ghostClass, true);
      Sortable.active = this;
      fallback && this._appendGhost(); // Drag start event

      _dispatchEvent({
        sortable: this,
        name: 'start',
        originalEvent: evt
      });
    } else {
      this._nulling();
    }
  },
  _emulateDragOver: function _emulateDragOver() {
    if (touchEvt) {
      this._lastX = touchEvt.clientX;
      this._lastY = touchEvt.clientY;

      _hideGhostForTarget();

      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
      var parent = target;

      while (target && target.shadowRoot) {
        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
        if (target === parent) break;
        parent = target;
      }

      dragEl.parentNode[expando]._isOutsideThisEl(target);

      if (parent) {
        do {
          if (parent[expando]) {
            var inserted = void 0;
            inserted = parent[expando]._onDragOver({
              clientX: touchEvt.clientX,
              clientY: touchEvt.clientY,
              target: target,
              rootEl: parent
            });

            if (inserted && !this.options.dragoverBubble) {
              break;
            }
          }

          target = parent; // store last element
        }
        /* jshint boss:true */
        while (parent = parent.parentNode);
      }

      _unhideGhostForTarget();
    }
  },
  _onTouchMove: function _onTouchMove(
  /**TouchEvent*/
  evt) {
    if (tapEvt) {
      var options = this.options,
          fallbackTolerance = options.fallbackTolerance,
          fallbackOffset = options.fallbackOffset,
          touch = evt.touches ? evt.touches[0] : evt,
          ghostMatrix = ghostEl && matrix(ghostEl, true),
          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,
          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,
          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),
          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),
          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging

      if (!Sortable.active && !awaitingDragStarted) {
        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {
          return;
        }

        this._onDragStart(evt, true);
      }

      if (ghostEl) {
        if (ghostMatrix) {
          ghostMatrix.e += dx - (lastDx || 0);
          ghostMatrix.f += dy - (lastDy || 0);
        } else {
          ghostMatrix = {
            a: 1,
            b: 0,
            c: 0,
            d: 1,
            e: dx,
            f: dy
          };
        }

        var cssMatrix = "matrix(".concat(ghostMatrix.a, ",").concat(ghostMatrix.b, ",").concat(ghostMatrix.c, ",").concat(ghostMatrix.d, ",").concat(ghostMatrix.e, ",").concat(ghostMatrix.f, ")");
        css(ghostEl, 'webkitTransform', cssMatrix);
        css(ghostEl, 'mozTransform', cssMatrix);
        css(ghostEl, 'msTransform', cssMatrix);
        css(ghostEl, 'transform', cssMatrix);
        lastDx = dx;
        lastDy = dy;
        touchEvt = touch;
      }

      evt.cancelable && evt.preventDefault();
    }
  },
  _appendGhost: function _appendGhost() {
    // Bug if using scale(): https://stackoverflow.com/questions/2637058
    // Not being adjusted for
    if (!ghostEl) {
      var container = this.options.fallbackOnBody ? document.body : rootEl,
          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),
          options = this.options; // Position absolutely

      if (PositionGhostAbsolutely) {
        // Get relatively positioned parent
        ghostRelativeParent = container;

        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {
          ghostRelativeParent = ghostRelativeParent.parentNode;
        }

        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {
          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();
          rect.top += ghostRelativeParent.scrollTop;
          rect.left += ghostRelativeParent.scrollLeft;
        } else {
          ghostRelativeParent = getWindowScrollingElement();
        }

        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);
      }

      ghostEl = dragEl.cloneNode(true);
      toggleClass(ghostEl, options.ghostClass, false);
      toggleClass(ghostEl, options.fallbackClass, true);
      toggleClass(ghostEl, options.dragClass, true);
      css(ghostEl, 'transition', '');
      css(ghostEl, 'transform', '');
      css(ghostEl, 'box-sizing', 'border-box');
      css(ghostEl, 'margin', 0);
      css(ghostEl, 'top', rect.top);
      css(ghostEl, 'left', rect.left);
      css(ghostEl, 'width', rect.width);
      css(ghostEl, 'height', rect.height);
      css(ghostEl, 'opacity', '0.8');
      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');
      css(ghostEl, 'zIndex', '100000');
      css(ghostEl, 'pointerEvents', 'none');
      Sortable.ghost = ghostEl;
      container.appendChild(ghostEl); // Set transform-origin

      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');
    }
  },
  _onDragStart: function _onDragStart(
  /**Event*/
  evt,
  /**boolean*/
  fallback) {
    var _this = this;

    var dataTransfer = evt.dataTransfer;
    var options = _this.options;
    pluginEvent('dragStart', this, {
      evt: evt
    });

    if (Sortable.eventCanceled) {
      this._onDrop();

      return;
    }

    pluginEvent('setupClone', this);

    if (!Sortable.eventCanceled) {
      cloneEl = clone(dragEl);
      cloneEl.draggable = false;
      cloneEl.style['will-change'] = '';

      this._hideClone();

      toggleClass(cloneEl, this.options.chosenClass, false);
      Sortable.clone = cloneEl;
    } // #1143: IFrame support workaround


    _this.cloneId = _nextTick(function () {
      pluginEvent('clone', _this);
      if (Sortable.eventCanceled) return;

      if (!_this.options.removeCloneOnHide) {
        rootEl.insertBefore(cloneEl, dragEl);
      }

      _this._hideClone();

      _dispatchEvent({
        sortable: _this,
        name: 'clone'
      });
    });
    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events

    if (fallback) {
      ignoreNextClick = true;
      _this._loopId = setInterval(_this._emulateDragOver, 50);
    } else {
      // Undo what was set in _prepareDragStart before drag started
      off(document, 'mouseup', _this._onDrop);
      off(document, 'touchend', _this._onDrop);
      off(document, 'touchcancel', _this._onDrop);

      if (dataTransfer) {
        dataTransfer.effectAllowed = 'move';
        options.setData && options.setData.call(_this, dataTransfer, dragEl);
      }

      on(document, 'drop', _this); // #1276 fix:

      css(dragEl, 'transform', 'translateZ(0)');
    }

    awaitingDragStarted = true;
    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));
    on(document, 'selectstart', _this);
    moved = true;

    if (Safari) {
      css(document.body, 'user-select', 'none');
    }
  },
  // Returns true - if no further action is needed (either inserted or another condition)
  _onDragOver: function _onDragOver(
  /**Event*/
  evt) {
    var el = this.el,
        target = evt.target,
        dragRect,
        targetRect,
        revert,
        options = this.options,
        group = options.group,
        activeSortable = Sortable.active,
        isOwner = activeGroup === group,
        canSort = options.sort,
        fromSortable = putSortable || activeSortable,
        vertical,
        _this = this,
        completedFired = false;

    if (_silent) return;

    function dragOverEvent(name, extra) {
      pluginEvent(name, _this, _objectSpread2({
        evt: evt,
        isOwner: isOwner,
        axis: vertical ? 'vertical' : 'horizontal',
        revert: revert,
        dragRect: dragRect,
        targetRect: targetRect,
        canSort: canSort,
        fromSortable: fromSortable,
        target: target,
        completed: completed,
        onMove: function onMove(target, after) {
          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);
        },
        changed: changed
      }, extra));
    } // Capture animation state


    function capture() {
      dragOverEvent('dragOverAnimationCapture');

      _this.captureAnimationState();

      if (_this !== fromSortable) {
        fromSortable.captureAnimationState();
      }
    } // Return invocation when dragEl is inserted (or completed)


    function completed(insertion) {
      dragOverEvent('dragOverCompleted', {
        insertion: insertion
      });

      if (insertion) {
        // Clones must be hidden before folding animation to capture dragRectAbsolute properly
        if (isOwner) {
          activeSortable._hideClone();
        } else {
          activeSortable._showClone(_this);
        }

        if (_this !== fromSortable) {
          // Set ghost class to new sortable's ghost class
          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);
          toggleClass(dragEl, options.ghostClass, true);
        }

        if (putSortable !== _this && _this !== Sortable.active) {
          putSortable = _this;
        } else if (_this === Sortable.active && putSortable) {
          putSortable = null;
        } // Animation


        if (fromSortable === _this) {
          _this._ignoreWhileAnimating = target;
        }

        _this.animateAll(function () {
          dragOverEvent('dragOverAnimationComplete');
          _this._ignoreWhileAnimating = null;
        });

        if (_this !== fromSortable) {
          fromSortable.animateAll();
          fromSortable._ignoreWhileAnimating = null;
        }
      } // Null lastTarget if it is not inside a previously swapped element


      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {
        lastTarget = null;
      } // no bubbling and not fallback


      if (!options.dragoverBubble && !evt.rootEl && target !== document) {
        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted


        !insertion && nearestEmptyInsertDetectEvent(evt);
      }

      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();
      return completedFired = true;
    } // Call when dragEl has been inserted


    function changed() {
      newIndex = index(dragEl);
      newDraggableIndex = index(dragEl, options.draggable);

      _dispatchEvent({
        sortable: _this,
        name: 'change',
        toEl: el,
        newIndex: newIndex,
        newDraggableIndex: newDraggableIndex,
        originalEvent: evt
      });
    }

    if (evt.preventDefault !== void 0) {
      evt.cancelable && evt.preventDefault();
    }

    target = closest(target, options.draggable, el, true);
    dragOverEvent('dragOver');
    if (Sortable.eventCanceled) return completedFired;

    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {
      return completed(false);
    }

    ignoreNextClick = false;

    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list
    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {
      vertical = this._getDirection(evt, target) === 'vertical';
      dragRect = getRect(dragEl);
      dragOverEvent('dragOverValid');
      if (Sortable.eventCanceled) return completedFired;

      if (revert) {
        parentEl = rootEl; // actualization

        capture();

        this._hideClone();

        dragOverEvent('revert');

        if (!Sortable.eventCanceled) {
          if (nextEl) {
            rootEl.insertBefore(dragEl, nextEl);
          } else {
            rootEl.appendChild(dragEl);
          }
        }

        return completed(true);
      }

      var elLastChild = lastChild(el, options.draggable);

      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {
        // Insert to end of list
        // If already at end of list: Do not insert
        if (elLastChild === dragEl) {
          return completed(false);
        } // if there is a last element, it is the target


        if (elLastChild && el === evt.target) {
          target = elLastChild;
        }

        if (target) {
          targetRect = getRect(target);
        }

        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {
          capture();
          el.appendChild(dragEl);
          parentEl = el; // actualization

          changed();
          return completed(true);
        }
      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {
        // Insert to start of list
        var firstChild = getChild(el, 0, options, true);

        if (firstChild === dragEl) {
          return completed(false);
        }

        target = firstChild;
        targetRect = getRect(target);

        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {
          capture();
          el.insertBefore(dragEl, firstChild);
          parentEl = el; // actualization

          changed();
          return completed(true);
        }
      } else if (target.parentNode === el) {
        targetRect = getRect(target);
        var direction = 0,
            targetBeforeFirstSwap,
            differentLevel = dragEl.parentNode !== el,
            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),
            side1 = vertical ? 'top' : 'left',
            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),
            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;

        if (lastTarget !== target) {
          targetBeforeFirstSwap = targetRect[side1];
          pastFirstInvertThresh = false;
          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;
        }

        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);
        var sibling;

        if (direction !== 0) {
          // Check if target is beside dragEl in respective direction (ignoring hidden elements)
          var dragIndex = index(dragEl);

          do {
            dragIndex -= direction;
            sibling = parentEl.children[dragIndex];
          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));
        } // If dragEl is already beside target: Do not insert


        if (direction === 0 || sibling === target) {
          return completed(false);
        }

        lastTarget = target;
        lastDirection = direction;
        var nextSibling = target.nextElementSibling,
            after = false;
        after = direction === 1;

        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);

        if (moveVector !== false) {
          if (moveVector === 1 || moveVector === -1) {
            after = moveVector === 1;
          }

          _silent = true;
          setTimeout(_unsilent, 30);
          capture();

          if (after && !nextSibling) {
            el.appendChild(dragEl);
          } else {
            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);
          } // Undo chrome's scroll adjustment (has no effect on other browsers)


          if (scrolledPastTop) {
            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);
          }

          parentEl = dragEl.parentNode; // actualization
          // must be done before animation

          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {
            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);
          }

          changed();
          return completed(true);
        }
      }

      if (el.contains(dragEl)) {
        return completed(false);
      }
    }

    return false;
  },
  _ignoreWhileAnimating: null,
  _offMoveEvents: function _offMoveEvents() {
    off(document, 'mousemove', this._onTouchMove);
    off(document, 'touchmove', this._onTouchMove);
    off(document, 'pointermove', this._onTouchMove);
    off(document, 'dragover', nearestEmptyInsertDetectEvent);
    off(document, 'mousemove', nearestEmptyInsertDetectEvent);
    off(document, 'touchmove', nearestEmptyInsertDetectEvent);
  },
  _offUpEvents: function _offUpEvents() {
    var ownerDocument = this.el.ownerDocument;
    off(ownerDocument, 'mouseup', this._onDrop);
    off(ownerDocument, 'touchend', this._onDrop);
    off(ownerDocument, 'pointerup', this._onDrop);
    off(ownerDocument, 'touchcancel', this._onDrop);
    off(document, 'selectstart', this);
  },
  _onDrop: function _onDrop(
  /**Event*/
  evt) {
    var el = this.el,
        options = this.options; // Get the index of the dragged element within its parent

    newIndex = index(dragEl);
    newDraggableIndex = index(dragEl, options.draggable);
    pluginEvent('drop', this, {
      evt: evt
    });
    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event

    newIndex = index(dragEl);
    newDraggableIndex = index(dragEl, options.draggable);

    if (Sortable.eventCanceled) {
      this._nulling();

      return;
    }

    awaitingDragStarted = false;
    isCircumstantialInvert = false;
    pastFirstInvertThresh = false;
    clearInterval(this._loopId);
    clearTimeout(this._dragStartTimer);

    _cancelNextTick(this.cloneId);

    _cancelNextTick(this._dragStartId); // Unbind events


    if (this.nativeDraggable) {
      off(document, 'drop', this);
      off(el, 'dragstart', this._onDragStart);
    }

    this._offMoveEvents();

    this._offUpEvents();

    if (Safari) {
      css(document.body, 'user-select', '');
    }

    css(dragEl, 'transform', '');

    if (evt) {
      if (moved) {
        evt.cancelable && evt.preventDefault();
        !options.dropBubble && evt.stopPropagation();
      }

      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);

      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {
        // Remove clone(s)
        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);
      }

      if (dragEl) {
        if (this.nativeDraggable) {
          off(dragEl, 'dragend', this);
        }

        _disableDraggable(dragEl);

        dragEl.style['will-change'] = ''; // Remove classes
        // ghostClass is added in dragStarted

        if (moved && !awaitingDragStarted) {
          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);
        }

        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event

        _dispatchEvent({
          sortable: this,
          name: 'unchoose',
          toEl: parentEl,
          newIndex: null,
          newDraggableIndex: null,
          originalEvent: evt
        });

        if (rootEl !== parentEl) {
          if (newIndex >= 0) {
            // Add event
            _dispatchEvent({
              rootEl: parentEl,
              name: 'add',
              toEl: parentEl,
              fromEl: rootEl,
              originalEvent: evt
            }); // Remove event


            _dispatchEvent({
              sortable: this,
              name: 'remove',
              toEl: parentEl,
              originalEvent: evt
            }); // drag from one list and drop into another


            _dispatchEvent({
              rootEl: parentEl,
              name: 'sort',
              toEl: parentEl,
              fromEl: rootEl,
              originalEvent: evt
            });

            _dispatchEvent({
              sortable: this,
              name: 'sort',
              toEl: parentEl,
              originalEvent: evt
            });
          }

          putSortable && putSortable.save();
        } else {
          if (newIndex !== oldIndex) {
            if (newIndex >= 0) {
              // drag & drop within the same list
              _dispatchEvent({
                sortable: this,
                name: 'update',
                toEl: parentEl,
                originalEvent: evt
              });

              _dispatchEvent({
                sortable: this,
                name: 'sort',
                toEl: parentEl,
                originalEvent: evt
              });
            }
          }
        }

        if (Sortable.active) {
          /* jshint eqnull:true */
          if (newIndex == null || newIndex === -1) {
            newIndex = oldIndex;
            newDraggableIndex = oldDraggableIndex;
          }

          _dispatchEvent({
            sortable: this,
            name: 'end',
            toEl: parentEl,
            originalEvent: evt
          }); // Save sorting


          this.save();
        }
      }
    }

    this._nulling();
  },
  _nulling: function _nulling() {
    pluginEvent('nulling', this);
    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;
    savedInputChecked.forEach(function (el) {
      el.checked = true;
    });
    savedInputChecked.length = lastDx = lastDy = 0;
  },
  handleEvent: function handleEvent(
  /**Event*/
  evt) {
    switch (evt.type) {
      case 'drop':
      case 'dragend':
        this._onDrop(evt);

        break;

      case 'dragenter':
      case 'dragover':
        if (dragEl) {
          this._onDragOver(evt);

          _globalDragOver(evt);
        }

        break;

      case 'selectstart':
        evt.preventDefault();
        break;
    }
  },

  /**
   * Serializes the item into an array of string.
   * @returns {String[]}
   */
  toArray: function toArray() {
    var order = [],
        el,
        children = this.el.children,
        i = 0,
        n = children.length,
        options = this.options;

    for (; i < n; i++) {
      el = children[i];

      if (closest(el, options.draggable, this.el, false)) {
        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));
      }
    }

    return order;
  },

  /**
   * Sorts the elements according to the array.
   * @param  {String[]}  order  order of the items
   */
  sort: function sort(order, useAnimation) {
    var items = {},
        rootEl = this.el;
    this.toArray().forEach(function (id, i) {
      var el = rootEl.children[i];

      if (closest(el, this.options.draggable, rootEl, false)) {
        items[id] = el;
      }
    }, this);
    useAnimation && this.captureAnimationState();
    order.forEach(function (id) {
      if (items[id]) {
        rootEl.removeChild(items[id]);
        rootEl.appendChild(items[id]);
      }
    });
    useAnimation && this.animateAll();
  },

  /**
   * Save the current sorting
   */
  save: function save() {
    var store = this.options.store;
    store && store.set && store.set(this);
  },

  /**
   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.
   * @param   {HTMLElement}  el
   * @param   {String}       [selector]  default: `options.draggable`
   * @returns {HTMLElement|null}
   */
  closest: function closest$1(el, selector) {
    return closest(el, selector || this.options.draggable, this.el, false);
  },

  /**
   * Set/get option
   * @param   {string} name
   * @param   {*}      [value]
   * @returns {*}
   */
  option: function option(name, value) {
    var options = this.options;

    if (value === void 0) {
      return options[name];
    } else {
      var modifiedValue = PluginManager.modifyOption(this, name, value);

      if (typeof modifiedValue !== 'undefined') {
        options[name] = modifiedValue;
      } else {
        options[name] = value;
      }

      if (name === 'group') {
        _prepareGroup(options);
      }
    }
  },

  /**
   * Destroy
   */
  destroy: function destroy() {
    pluginEvent('destroy', this);
    var el = this.el;
    el[expando] = null;
    off(el, 'mousedown', this._onTapStart);
    off(el, 'touchstart', this._onTapStart);
    off(el, 'pointerdown', this._onTapStart);

    if (this.nativeDraggable) {
      off(el, 'dragover', this);
      off(el, 'dragenter', this);
    } // Remove draggable attributes


    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {
      el.removeAttribute('draggable');
    });

    this._onDrop();

    this._disableDelayedDragEvents();

    sortables.splice(sortables.indexOf(this.el), 1);
    this.el = el = null;
  },
  _hideClone: function _hideClone() {
    if (!cloneHidden) {
      pluginEvent('hideClone', this);
      if (Sortable.eventCanceled) return;
      css(cloneEl, 'display', 'none');

      if (this.options.removeCloneOnHide && cloneEl.parentNode) {
        cloneEl.parentNode.removeChild(cloneEl);
      }

      cloneHidden = true;
    }
  },
  _showClone: function _showClone(putSortable) {
    if (putSortable.lastPutMode !== 'clone') {
      this._hideClone();

      return;
    }

    if (cloneHidden) {
      pluginEvent('showClone', this);
      if (Sortable.eventCanceled) return; // show clone at dragEl or original position

      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {
        rootEl.insertBefore(cloneEl, dragEl);
      } else if (nextEl) {
        rootEl.insertBefore(cloneEl, nextEl);
      } else {
        rootEl.appendChild(cloneEl);
      }

      if (this.options.group.revertClone) {
        this.animate(dragEl, cloneEl);
      }

      css(cloneEl, 'display', '');
      cloneHidden = false;
    }
  }
};

function _globalDragOver(
/**Event*/
evt) {
  if (evt.dataTransfer) {
    evt.dataTransfer.dropEffect = 'move';
  }

  evt.cancelable && evt.preventDefault();
}

function _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {
  var evt,
      sortable = fromEl[expando],
      onMoveFn = sortable.options.onMove,
      retVal; // Support for new CustomEvent feature

  if (window.CustomEvent && !IE11OrLess && !Edge) {
    evt = new CustomEvent('move', {
      bubbles: true,
      cancelable: true
    });
  } else {
    evt = document.createEvent('Event');
    evt.initEvent('move', true, true);
  }

  evt.to = toEl;
  evt.from = fromEl;
  evt.dragged = dragEl;
  evt.draggedRect = dragRect;
  evt.related = targetEl || toEl;
  evt.relatedRect = targetRect || getRect(toEl);
  evt.willInsertAfter = willInsertAfter;
  evt.originalEvent = originalEvent;
  fromEl.dispatchEvent(evt);

  if (onMoveFn) {
    retVal = onMoveFn.call(sortable, evt, originalEvent);
  }

  return retVal;
}

function _disableDraggable(el) {
  el.draggable = false;
}

function _unsilent() {
  _silent = false;
}

function _ghostIsFirst(evt, vertical, sortable) {
  var rect = getRect(getChild(sortable.el, 0, sortable.options, true));
  var spacer = 10;
  return vertical ? evt.clientX < rect.left - spacer || evt.clientY < rect.top && evt.clientX < rect.right : evt.clientY < rect.top - spacer || evt.clientY < rect.bottom && evt.clientX < rect.left;
}

function _ghostIsLast(evt, vertical, sortable) {
  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));
  var spacer = 10;
  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;
}

function _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {
  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,
      targetLength = vertical ? targetRect.height : targetRect.width,
      targetS1 = vertical ? targetRect.top : targetRect.left,
      targetS2 = vertical ? targetRect.bottom : targetRect.right,
      invert = false;

  if (!invertSwap) {
    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold
    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {
      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2
      // check if past first invert threshold on side opposite of lastDirection
      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {
        // past first invert threshold, do not restrict inverted threshold to dragEl shadow
        pastFirstInvertThresh = true;
      }

      if (!pastFirstInvertThresh) {
        // dragEl shadow (target move distance shadow)
        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow
        : mouseOnAxis > targetS2 - targetMoveDistance) {
          return -lastDirection;
        }
      } else {
        invert = true;
      }
    } else {
      // Regular
      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {
        return _getInsertDirection(target);
      }
    }
  }

  invert = invert || invertSwap;

  if (invert) {
    // Invert of regular
    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {
      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;
    }
  }

  return 0;
}
/**
 * Gets the direction dragEl must be swapped relative to target in order to make it
 * seem that dragEl has been "inserted" into that element's position
 * @param  {HTMLElement} target       The target whose position dragEl is being inserted at
 * @return {Number}                   Direction dragEl must be swapped
 */


function _getInsertDirection(target) {
  if (index(dragEl) < index(target)) {
    return 1;
  } else {
    return -1;
  }
}
/**
 * Generate id
 * @param   {HTMLElement} el
 * @returns {String}
 * @private
 */


function _generateId(el) {
  var str = el.tagName + el.className + el.src + el.href + el.textContent,
      i = str.length,
      sum = 0;

  while (i--) {
    sum += str.charCodeAt(i);
  }

  return sum.toString(36);
}

function _saveInputCheckedState(root) {
  savedInputChecked.length = 0;
  var inputs = root.getElementsByTagName('input');
  var idx = inputs.length;

  while (idx--) {
    var el = inputs[idx];
    el.checked && savedInputChecked.push(el);
  }
}

function _nextTick(fn) {
  return setTimeout(fn, 0);
}

function _cancelNextTick(id) {
  return clearTimeout(id);
} // Fixed #973:


if (documentExists) {
  on(document, 'touchmove', function (evt) {
    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {
      evt.preventDefault();
    }
  });
} // Export utils


Sortable.utils = {
  on: on,
  off: off,
  css: css,
  find: find,
  is: function is(el, selector) {
    return !!closest(el, selector, el, false);
  },
  extend: extend,
  throttle: throttle,
  closest: closest,
  toggleClass: toggleClass,
  clone: clone,
  index: index,
  nextTick: _nextTick,
  cancelNextTick: _cancelNextTick,
  detectDirection: _detectDirection,
  getChild: getChild
};
/**
 * Get the Sortable instance of an element
 * @param  {HTMLElement} element The element
 * @return {Sortable|undefined}         The instance of Sortable
 */

Sortable.get = function (element) {
  return element[expando];
};
/**
 * Mount a plugin to Sortable
 * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted
 */


Sortable.mount = function () {
  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {
    plugins[_key] = arguments[_key];
  }

  if (plugins[0].constructor === Array) plugins = plugins[0];
  plugins.forEach(function (plugin) {
    if (!plugin.prototype || !plugin.prototype.constructor) {
      throw "Sortable: Mounted plugin must be a constructor function, not ".concat({}.toString.call(plugin));
    }

    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);
    PluginManager.mount(plugin);
  });
};
/**
 * Create sortable instance
 * @param {HTMLElement}  el
 * @param {Object}      [options]
 */


Sortable.create = function (el, options) {
  return new Sortable(el, options);
}; // Export


Sortable.version = version;

var autoScrolls = [],
    scrollEl,
    scrollRootEl,
    scrolling = false,
    lastAutoScrollX,
    lastAutoScrollY,
    touchEvt$1,
    pointerElemChangedInterval;

function AutoScrollPlugin() {
  function AutoScroll() {
    this.defaults = {
      scroll: true,
      forceAutoScrollFallback: false,
      scrollSensitivity: 30,
      scrollSpeed: 10,
      bubbleScroll: true
    }; // Bind all private methods

    for (var fn in this) {
      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
        this[fn] = this[fn].bind(this);
      }
    }
  }

  AutoScroll.prototype = {
    dragStarted: function dragStarted(_ref) {
      var originalEvent = _ref.originalEvent;

      if (this.sortable.nativeDraggable) {
        on(document, 'dragover', this._handleAutoScroll);
      } else {
        if (this.options.supportPointer) {
          on(document, 'pointermove', this._handleFallbackAutoScroll);
        } else if (originalEvent.touches) {
          on(document, 'touchmove', this._handleFallbackAutoScroll);
        } else {
          on(document, 'mousemove', this._handleFallbackAutoScroll);
        }
      }
    },
    dragOverCompleted: function dragOverCompleted(_ref2) {
      var originalEvent = _ref2.originalEvent;

      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)
      if (!this.options.dragOverBubble && !originalEvent.rootEl) {
        this._handleAutoScroll(originalEvent);
      }
    },
    drop: function drop() {
      if (this.sortable.nativeDraggable) {
        off(document, 'dragover', this._handleAutoScroll);
      } else {
        off(document, 'pointermove', this._handleFallbackAutoScroll);
        off(document, 'touchmove', this._handleFallbackAutoScroll);
        off(document, 'mousemove', this._handleFallbackAutoScroll);
      }

      clearPointerElemChangedInterval();
      clearAutoScrolls();
      cancelThrottle();
    },
    nulling: function nulling() {
      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;
      autoScrolls.length = 0;
    },
    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {
      this._handleAutoScroll(evt, true);
    },
    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {
      var _this = this;

      var x = (evt.touches ? evt.touches[0] : evt).clientX,
          y = (evt.touches ? evt.touches[0] : evt).clientY,
          elem = document.elementFromPoint(x, y);
      touchEvt$1 = evt; // IE does not seem to have native autoscroll,
      // Edge's autoscroll seems too conditional,
      // MACOS Safari does not have autoscroll,
      // Firefox and Chrome are good

      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {
        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change

        var ogElemScroller = getParentAutoScrollElement(elem, true);

        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {
          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour

          pointerElemChangedInterval = setInterval(function () {
            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);

            if (newElem !== ogElemScroller) {
              ogElemScroller = newElem;
              clearAutoScrolls();
            }

            autoScroll(evt, _this.options, newElem, fallback);
          }, 10);
          lastAutoScrollX = x;
          lastAutoScrollY = y;
        }
      } else {
        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll
        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {
          clearAutoScrolls();
          return;
        }

        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);
      }
    }
  };
  return _extends(AutoScroll, {
    pluginName: 'scroll',
    initializeByDefault: true
  });
}

function clearAutoScrolls() {
  autoScrolls.forEach(function (autoScroll) {
    clearInterval(autoScroll.pid);
  });
  autoScrolls = [];
}

function clearPointerElemChangedInterval() {
  clearInterval(pointerElemChangedInterval);
}

var autoScroll = throttle(function (evt, options, rootEl, isFallback) {
  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521
  if (!options.scroll) return;
  var x = (evt.touches ? evt.touches[0] : evt).clientX,
      y = (evt.touches ? evt.touches[0] : evt).clientY,
      sens = options.scrollSensitivity,
      speed = options.scrollSpeed,
      winScroller = getWindowScrollingElement();
  var scrollThisInstance = false,
      scrollCustomFn; // New scroll root, set scrollEl

  if (scrollRootEl !== rootEl) {
    scrollRootEl = rootEl;
    clearAutoScrolls();
    scrollEl = options.scroll;
    scrollCustomFn = options.scrollFn;

    if (scrollEl === true) {
      scrollEl = getParentAutoScrollElement(rootEl, true);
    }
  }

  var layersOut = 0;
  var currentParent = scrollEl;

  do {
    var el = currentParent,
        rect = getRect(el),
        top = rect.top,
        bottom = rect.bottom,
        left = rect.left,
        right = rect.right,
        width = rect.width,
        height = rect.height,
        canScrollX = void 0,
        canScrollY = void 0,
        scrollWidth = el.scrollWidth,
        scrollHeight = el.scrollHeight,
        elCSS = css(el),
        scrollPosX = el.scrollLeft,
        scrollPosY = el.scrollTop;

    if (el === winScroller) {
      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');
      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');
    } else {
      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');
      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');
    }

    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);
    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);

    if (!autoScrolls[layersOut]) {
      for (var i = 0; i <= layersOut; i++) {
        if (!autoScrolls[i]) {
          autoScrolls[i] = {};
        }
      }
    }

    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {
      autoScrolls[layersOut].el = el;
      autoScrolls[layersOut].vx = vx;
      autoScrolls[layersOut].vy = vy;
      clearInterval(autoScrolls[layersOut].pid);

      if (vx != 0 || vy != 0) {
        scrollThisInstance = true;
        /* jshint loopfunc:true */

        autoScrolls[layersOut].pid = setInterval(function () {
          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour
          if (isFallback && this.layer === 0) {
            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely

          }

          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;
          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;

          if (typeof scrollCustomFn === 'function') {
            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {
              return;
            }
          }

          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);
        }.bind({
          layer: layersOut
        }), 24);
      }
    }

    layersOut++;
  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));

  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not
}, 30);

var drop = function drop(_ref) {
  var originalEvent = _ref.originalEvent,
      putSortable = _ref.putSortable,
      dragEl = _ref.dragEl,
      activeSortable = _ref.activeSortable,
      dispatchSortableEvent = _ref.dispatchSortableEvent,
      hideGhostForTarget = _ref.hideGhostForTarget,
      unhideGhostForTarget = _ref.unhideGhostForTarget;
  if (!originalEvent) return;
  var toSortable = putSortable || activeSortable;
  hideGhostForTarget();
  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;
  var target = document.elementFromPoint(touch.clientX, touch.clientY);
  unhideGhostForTarget();

  if (toSortable && !toSortable.el.contains(target)) {
    dispatchSortableEvent('spill');
    this.onSpill({
      dragEl: dragEl,
      putSortable: putSortable
    });
  }
};

function Revert() {}

Revert.prototype = {
  startIndex: null,
  dragStart: function dragStart(_ref2) {
    var oldDraggableIndex = _ref2.oldDraggableIndex;
    this.startIndex = oldDraggableIndex;
  },
  onSpill: function onSpill(_ref3) {
    var dragEl = _ref3.dragEl,
        putSortable = _ref3.putSortable;
    this.sortable.captureAnimationState();

    if (putSortable) {
      putSortable.captureAnimationState();
    }

    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);

    if (nextSibling) {
      this.sortable.el.insertBefore(dragEl, nextSibling);
    } else {
      this.sortable.el.appendChild(dragEl);
    }

    this.sortable.animateAll();

    if (putSortable) {
      putSortable.animateAll();
    }
  },
  drop: drop
};

_extends(Revert, {
  pluginName: 'revertOnSpill'
});

function Remove() {}

Remove.prototype = {
  onSpill: function onSpill(_ref4) {
    var dragEl = _ref4.dragEl,
        putSortable = _ref4.putSortable;
    var parentSortable = putSortable || this.sortable;
    parentSortable.captureAnimationState();
    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);
    parentSortable.animateAll();
  },
  drop: drop
};

_extends(Remove, {
  pluginName: 'removeOnSpill'
});

Sortable.mount(new AutoScrollPlugin());
Sortable.mount(Remove, Revert);

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$8 = {
  sortItem: "sort-item",
  container: "container",
  containerHorizontal: "container--horizontal",
  containerVertical: "container--vertical"
};

const sortableListCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-sortable-list:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-sortable-list{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-sortable-list{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-sortable-list{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-sortable-list{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-sortable-list{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-sortable-list:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-sortable-list-h{display:none}/*!@:host*/.sc-calcite-sortable-list-h{display:-ms-flexbox;display:flex}/*!@:host([disabled])*/[disabled].sc-calcite-sortable-list-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-sortable-list-h[disabled] .sc-calcite-sortable-list-s>[calcite-hydrated][disabled],[disabled].sc-calcite-sortable-list-h [calcite-hydrated][disabled].sc-calcite-sortable-list{opacity:1}/*!@.container*/.container.sc-calcite-sortable-list{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto}/*!@.container--vertical*/.container--vertical.sc-calcite-sortable-list{-ms-flex-direction:column;flex-direction:column}/*!@.container--horizontal*/.container--horizontal.sc-calcite-sortable-list{-ms-flex-direction:row;flex-direction:row}";

/**
 * @slot - A slot for adding sortable items.
 */
class SortableList {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteListOrderChange = createEvent(this, "calciteListOrderChange", 7);
    /**
     * The selector for the handle elements.
     */
    this.handleSelector = "calcite-handle";
    /**
     * Indicates the horizontal or vertical orientation of the component.
     */
    this.layout = "vertical";
    /**
     * When true, disabled prevents interaction. This state shows items with lower opacity/grayed.
     */
    this.disabled = false;
    /**
     * When true, content is waiting to be loaded. This state shows a busy indicator.
     */
    this.loading = false;
    this.handleActivated = false;
    this.items = [];
    this.mutationObserver = createObserver();
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    this.items = Array.from(this.el.children);
    this.setUpDragAndDrop();
    this.beginObserving();
  }
  disconnectedCallback() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    this.cleanUpDragAndDrop();
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  calciteHandleNudgeHandler(event) {
    var _a;
    const sortItem = this.items.find((item) => {
      return item.contains(event.detail.handle) || event.composedPath().includes(item);
    });
    const lastIndex = this.items.length - 1;
    const startingIndex = this.items.indexOf(sortItem);
    let appendInstead = false;
    let buddyIndex;
    switch (event.detail.direction) {
      case "up":
        event.preventDefault();
        if (startingIndex === 0) {
          appendInstead = true;
        }
        else {
          buddyIndex = startingIndex - 1;
        }
        break;
      case "down":
        event.preventDefault();
        if (startingIndex === lastIndex) {
          buddyIndex = 0;
        }
        else if (startingIndex === lastIndex - 1) {
          appendInstead = true;
        }
        else {
          buddyIndex = startingIndex + 2;
        }
        break;
      default:
        return;
    }
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    if (appendInstead) {
      sortItem.parentElement.appendChild(sortItem);
    }
    else {
      sortItem.parentElement.insertBefore(sortItem, this.items[buddyIndex]);
    }
    this.items = Array.from(this.el.children);
    event.detail.handle.activated = true;
    event.detail.handle.setFocus();
    this.beginObserving();
  }
  // --------------------------------------------------------------------------
  //
  //  Private Methods
  //
  // --------------------------------------------------------------------------
  setUpDragAndDrop() {
    this.cleanUpDragAndDrop();
    const options = {
      dataIdAttr: "id",
      group: this.group,
      handle: this.handleSelector,
      // Changed sorting within list
      onUpdate: () => {
        this.items = Array.from(this.el.children);
        this.calciteListOrderChange.emit();
      },
      // Element dragging started
      onStart: () => {
        var _a;
        (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
      },
      // Element dragging ended
      onEnd: () => {
        this.beginObserving();
      }
    };
    if (this.dragSelector) {
      options.draggable = this.dragSelector;
    }
    this.sortable = Sortable.create(this.el, options);
  }
  cleanUpDragAndDrop() {
    var _a;
    (_a = this.sortable) === null || _a === void 0 ? void 0 : _a.destroy();
    this.sortable = null;
  }
  beginObserving() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el, { childList: true, subtree: true });
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    const { layout } = this;
    const horizontal = layout === "horizontal" || false;
    return (hAsync("div", { class: {
        [CSS$8.container]: true,
        [CSS$8.containerVertical]: !horizontal,
        [CSS$8.containerHorizontal]: horizontal
      } }, hAsync("slot", null)));
  }
  get el() { return getElement(this); }
  static get style() { return sortableListCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-sortable-list",
    "$members$": {
      "dragSelector": [1, "drag-selector"],
      "group": [1],
      "handleSelector": [1, "handle-selector"],
      "layout": [1],
      "disabled": [516],
      "loading": [516],
      "handleActivated": [32]
    },
    "$listeners$": [[0, "calciteHandleNudge", "calciteHandleNudgeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["loading", "loading"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$7 = {
  container: "split-button__container",
  dividerContainer: "split-button__divider-container",
  divider: "split-button__divider",
  widthAuto: "width-auto",
  widthHalf: "width-half",
  widthFull: "width-full"
};

const splitButtonCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-split-button:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-split-button{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-split-button{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-split-button{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-split-button{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-split-button{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-split-button:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-split-button-h{display:none}/*!@:host*/.sc-calcite-split-button-h{display:inline-block}/*!@:host .split-button__container*/.sc-calcite-split-button-h .split-button__container.sc-calcite-split-button{display:-ms-flexbox;display:flex;-ms-flex-align:stretch;align-items:stretch}/*!@:host .split-button__container > calcite-dropdown > calcite-button*/.sc-calcite-split-button-h .split-button__container.sc-calcite-split-button>calcite-dropdown.sc-calcite-split-button>calcite-button.sc-calcite-split-button{height:100%;vertical-align:top}/*!@:host([appearance=solid]):host([color=blue])*/[appearance=solid].sc-calcite-split-button-h([color=blue]).sc-calcite-split-button-h{--calcite-split-button-background:var(--calcite-ui-brand);--calcite-split-button-divider:var(--calcite-ui-foreground-1)}/*!@:host([appearance=solid]):host([color=red])*/[appearance=solid].sc-calcite-split-button-h([color=red]).sc-calcite-split-button-h{--calcite-split-button-background:var(--calcite-ui-danger);--calcite-split-button-divider:var(--calcite-ui-foreground-1)}/*!@:host([appearance=solid]):host([color=neutral])*/[appearance=solid].sc-calcite-split-button-h([color=neutral]).sc-calcite-split-button-h{--calcite-split-button-background:var(--calcite-ui-foreground-3);--calcite-split-button-divider:var(--calcite-ui-text-1)}/*!@:host([appearance=solid]):host([color=inverse])*/[appearance=solid].sc-calcite-split-button-h([color=inverse]).sc-calcite-split-button-h{--calcite-split-button-background:var(--calcite-ui-inverse);--calcite-split-button-divider:var(--calcite-ui-foreground-1)}/*!@:host([appearance=transparent]):host([color=blue])*/[appearance=transparent].sc-calcite-split-button-h([color=blue]).sc-calcite-split-button-h{--calcite-split-button-divider:var(--calcite-ui-brand)}/*!@:host([appearance=transparent]):host([color=red])*/[appearance=transparent].sc-calcite-split-button-h([color=red]).sc-calcite-split-button-h{--calcite-split-button-divider:var(--calcite-ui-danger)}/*!@:host([appearance=transparent]):host([color=neutral])*/[appearance=transparent].sc-calcite-split-button-h([color=neutral]).sc-calcite-split-button-h{--calcite-split-button-divider:var(--calcite-ui-text-1)}/*!@:host([appearance=transparent]):host([color=inverse])*/[appearance=transparent].sc-calcite-split-button-h([color=inverse]).sc-calcite-split-button-h{--calcite-split-button-divider:var(--calcite-ui-foreground-1)}/*!@:host([appearance=clear]),\n:host([appearance=transparent])*/[appearance=clear].sc-calcite-split-button-h,[appearance=transparent].sc-calcite-split-button-h{--calcite-split-button-background:transparent}/*!@:host([appearance=outline])*/[appearance=outline].sc-calcite-split-button-h{--calcite-split-button-background:var(--calcite-ui-foreground-1)}/*!@:host([appearance=clear]):host([color=blue]),\n:host([appearance=outline]):host([color=blue])*/[appearance=clear].sc-calcite-split-button-h([color=blue]).sc-calcite-split-button-h,[appearance=outline].sc-calcite-split-button-h([color=blue]).sc-calcite-split-button-h{--calcite-split-button-divider:var(--calcite-ui-brand)}/*!@:host([appearance=clear]):host([color=red]),\n:host([appearance=outline]):host([color=red])*/[appearance=clear].sc-calcite-split-button-h([color=red]).sc-calcite-split-button-h,[appearance=outline].sc-calcite-split-button-h([color=red]).sc-calcite-split-button-h{--calcite-split-button-divider:var(--calcite-ui-danger)}/*!@:host([appearance=clear]):host([color=neutral]),\n:host([appearance=outline]):host([color=neutral])*/[appearance=clear].sc-calcite-split-button-h([color=neutral]).sc-calcite-split-button-h,[appearance=outline].sc-calcite-split-button-h([color=neutral]).sc-calcite-split-button-h{--calcite-split-button-divider:var(--calcite-ui-foreground-3)}/*!@:host([appearance=clear]):host([color=inverse]),\n:host([appearance=outline]):host([color=inverse])*/[appearance=clear].sc-calcite-split-button-h([color=inverse]).sc-calcite-split-button-h,[appearance=outline].sc-calcite-split-button-h([color=inverse]).sc-calcite-split-button-h{--calcite-split-button-divider:var(--calcite-ui-inverse)}/*!@.width-auto*/.width-auto.sc-calcite-split-button{width:auto}/*!@.width-half*/.width-half.sc-calcite-split-button{width:50%}/*!@.width-full*/.width-full.sc-calcite-split-button{width:100%}/*!@.split-button__divider-container*/.split-button__divider-container.sc-calcite-split-button{display:-ms-flexbox;display:flex;width:1px;-ms-flex-align:stretch;align-items:stretch;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;background-color:var(--calcite-split-button-background)}/*!@.split-button__divider*/.split-button__divider.sc-calcite-split-button{margin-top:0.25rem;margin-bottom:0.25rem;display:inline-block;width:1px;background-color:var(--calcite-split-button-divider)}/*!@:host([appearance=outline]) .split-button__divider-container,\n:host([appearance=clear]) .split-button__divider-container*/[appearance=outline].sc-calcite-split-button-h .split-button__divider-container.sc-calcite-split-button,[appearance=clear].sc-calcite-split-button-h .split-button__divider-container.sc-calcite-split-button{border-top:1px solid var(--calcite-split-button-divider);border-bottom:1px solid var(--calcite-split-button-divider)}/*!@:host([appearance=outline]):hover .split-button__divider-container,\n:host([appearance=clear]):hover .split-button__divider-container*/[appearance=outline].sc-calcite-split-button-h:hover .split-button__divider-container.sc-calcite-split-button,[appearance=clear].sc-calcite-split-button-h:hover .split-button__divider-container.sc-calcite-split-button{background-color:var(--calcite-split-button-divider)}/*!@:host([appearance=outline]:hover) .split-button__divider-container,\n:host([appearance=clear]:hover) .split-button__divider-container*/[appearance=outline].sc-calcite-split-button-h:hover .split-button__divider-container.sc-calcite-split-button,[appearance=clear].sc-calcite-split-button-h:hover .split-button__divider-container.sc-calcite-split-button{background-color:var(--calcite-split-button-divider)}/*!@:host([appearance=outline]:focus-within):host([color=blue]),\n:host([appearance=clear]:focus-within):host([color=blue])*/[appearance=outline].sc-calcite-split-button-h:focus-within.sc-calcite-split-button-h([color=blue]),[appearance=clear].sc-calcite-split-button-h:focus-within.sc-calcite-split-button-h([color=blue]){--calcite-split-button-divider:var(--calcite-ui-brand-press)}/*!@:host([appearance=outline]:focus-within):host([color=red]),\n:host([appearance=clear]:focus-within):host([color=red])*/[appearance=outline].sc-calcite-split-button-h:focus-within.sc-calcite-split-button-h([color=red]),[appearance=clear].sc-calcite-split-button-h:focus-within.sc-calcite-split-button-h([color=red]){--calcite-split-button-divider:var(--calcite-ui-danger-press)}/*!@:host([appearance=outline]:focus-within) .split-button__divider-container,\n:host([appearance=clear]:focus-within) .split-button__divider-container*/[appearance=outline].sc-calcite-split-button-h:focus-within .split-button__divider-container.sc-calcite-split-button,[appearance=clear].sc-calcite-split-button-h:focus-within .split-button__divider-container.sc-calcite-split-button{background-color:var(--calcite-split-button-divider)}/*!@:host([disabled])*/[disabled].sc-calcite-split-button-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) .split-button__divider-container*/[disabled].sc-calcite-split-button-h .split-button__divider-container.sc-calcite-split-button{opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) calcite-dropdown > calcite-button*/[disabled].sc-calcite-split-button-h calcite-dropdown.sc-calcite-split-button>calcite-button.sc-calcite-split-button{pointer-events:none}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-split-button-h[disabled] .sc-calcite-split-button-s>[calcite-hydrated][disabled],[disabled].sc-calcite-split-button-h [calcite-hydrated][disabled].sc-calcite-split-button{opacity:1}";

/**
 * @slot - A slot for adding `calcite-dropdown` content.
 */
class SplitButton {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteSplitButtonPrimaryClick = createEvent(this, "calciteSplitButtonPrimaryClick", 7);
    this.calciteSplitButtonSecondaryClick = createEvent(this, "calciteSplitButtonSecondaryClick", 7);
    /** specify the appearance style of the button, defaults to solid. */
    this.appearance = "solid";
    /** specify the color of the control, defaults to blue */
    this.color = "blue";
    /** is the control disabled  */
    this.disabled = false;
    /**
     * Is the dropdown currently active or not
     * @internal
     */
    this.active = false;
    /** specify the icon used for the dropdown menu, defaults to chevron */
    this.dropdownIconType = "chevron";
    /** optionally add a calcite-loader component to the control,
     disabling interaction. with the primary button */
    this.loading = false;
    /** Describes the type of positioning to use for the dropdown. If your element is in a fixed container, use the 'fixed' value. */
    this.overlayPositioning = "absolute";
    /** specify the scale of the control, defaults to m */
    this.scale = "m";
    /** specify the width of the button, defaults to auto */
    this.width = "auto";
    this.calciteSplitButtonPrimaryClickHandler = (e) => this.calciteSplitButtonPrimaryClick.emit(e);
    this.calciteSplitButtonSecondaryClickHandler = (e) => this.calciteSplitButtonSecondaryClick.emit(e);
  }
  handleDisabledChange(value) {
    if (!value) {
      this.active = false;
    }
  }
  activeHandler() {
    if (this.disabled) {
      this.active = false;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentDidRender() {
    updateHostInteraction(this);
  }
  render() {
    const widthClasses = {
      [CSS$7.container]: true,
      [CSS$7.widthAuto]: this.width === "auto",
      [CSS$7.widthHalf]: this.width === "half",
      [CSS$7.widthFull]: this.width === "full"
    };
    const buttonWidth = this.width === "auto" ? "auto" : "full";
    return (hAsync("div", { class: widthClasses }, hAsync("calcite-button", { appearance: this.appearance, color: this.color, disabled: this.disabled, "icon-end": this.primaryIconEnd ? this.primaryIconEnd : null, "icon-start": this.primaryIconStart ? this.primaryIconStart : null, iconFlipRtl: this.primaryIconFlipRtl ? this.primaryIconFlipRtl : null, label: this.primaryLabel, loading: this.loading, onClick: this.calciteSplitButtonPrimaryClickHandler, scale: this.scale, splitChild: "primary", type: "button", width: buttonWidth }, this.primaryText), hAsync("div", { class: CSS$7.dividerContainer }, hAsync("div", { class: CSS$7.divider })), hAsync("calcite-dropdown", { active: this.active, disabled: this.disabled, onClick: this.calciteSplitButtonSecondaryClickHandler, overlayPositioning: this.overlayPositioning, placement: "bottom-trailing", scale: this.scale, width: this.scale }, hAsync("calcite-button", { appearance: this.appearance, color: this.color, disabled: this.disabled, "icon-start": this.dropdownIcon, label: this.dropdownLabel, scale: this.scale, slot: "dropdown-trigger", splitChild: "secondary", type: "button" }), hAsync("slot", null))));
  }
  get dropdownIcon() {
    return this.dropdownIconType === "chevron"
      ? "chevronDown"
      : this.dropdownIconType === "caret"
        ? "caretDown"
        : this.dropdownIconType === "ellipsis"
          ? "ellipsis"
          : "handle-vertical";
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "disabled": ["handleDisabledChange"],
    "active": ["activeHandler"]
  }; }
  static get style() { return splitButtonCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-split-button",
    "$members$": {
      "appearance": [513],
      "color": [513],
      "disabled": [516],
      "active": [1540],
      "dropdownIconType": [513, "dropdown-icon-type"],
      "dropdownLabel": [513, "dropdown-label"],
      "loading": [516],
      "overlayPositioning": [1, "overlay-positioning"],
      "primaryIconEnd": [513, "primary-icon-end"],
      "primaryIconFlipRtl": [513, "primary-icon-flip-rtl"],
      "primaryIconStart": [513, "primary-icon-start"],
      "primaryLabel": [513, "primary-label"],
      "primaryText": [513, "primary-text"],
      "scale": [513],
      "width": [513]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["appearance", "appearance"], ["color", "color"], ["disabled", "disabled"], ["active", "active"], ["dropdownIconType", "dropdown-icon-type"], ["dropdownLabel", "dropdown-label"], ["loading", "loading"], ["primaryIconEnd", "primary-icon-end"], ["primaryIconFlipRtl", "primary-icon-flip-rtl"], ["primaryIconStart", "primary-icon-start"], ["primaryLabel", "primary-label"], ["primaryText", "primary-text"], ["scale", "scale"], ["width", "width"]]
  }; }
}

const stepperCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-stepper:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-stepper{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-stepper{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-stepper{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-stepper{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-stepper{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-stepper:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-stepper-h{display:none}/*!@:host*/.sc-calcite-stepper-h{position:relative;display:-ms-flexbox;display:flex;width:100%;min-width:100%;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:justify;justify-content:space-between}/*!@:host([layout=vertical])*/[layout=vertical].sc-calcite-stepper-h{-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column}/*!@:host ::slotted(.calcite-stepper-content)*/.sc-calcite-stepper-h .sc-calcite-stepper-s>.calcite-stepper-content{display:-ms-flexbox;display:flex;width:100%;min-width:100%;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:wrap;flex-wrap:wrap}";

/**
 * @slot - A slot for adding `calcite-stepper-item`s.
 */
class Stepper {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteStepperItemChange = createEvent(this, "calciteStepperItemChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Public Properties
    //
    //--------------------------------------------------------------------------
    /** optionally display a status icon next to the step title */
    this.icon = false;
    /** specify the layout of stepper, defaults to horizontal */
    this.layout = "horizontal";
    /** optionally display the number next to the step title */
    this.numbered = false;
    /** specify the scale of stepper, defaults to m */
    this.scale = "m";
    //--------------------------------------------------------------------------
    //
    //  Private State/Props
    //
    //--------------------------------------------------------------------------
    /** created list of Stepper items */
    this.items = [];
    /** sorted list of Stepper items */
    this.sortedItems = [];
  }
  // watch for removal of disabled to register step
  contentWatcher() {
    if (this.layout === "horizontal") {
      if (!this.stepperContentContainer && this.requestedContent) {
        this.addHorizontalContentContainer();
      }
      this.updateContent(this.requestedContent);
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentDidLoad() {
    // if no stepper items are set as active, default to the first one
    if (!this.currentPosition) {
      this.calciteStepperItemChange.emit({
        position: 0
      });
    }
  }
  componentWillLoad() {
    if (this.layout === "horizontal" && !this.stepperContentContainer) {
      this.addHorizontalContentContainer();
    }
  }
  render() {
    return hAsync("slot", null);
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  calciteStepperItemKeyEvent(e) {
    const item = e.detail.item;
    const itemToFocus = e.target;
    const isFirstItem = this.itemIndex(itemToFocus) === 0;
    const isLastItem = this.itemIndex(itemToFocus) === this.sortedItems.length - 1;
    switch (item.key) {
      case "ArrowDown":
      case "ArrowRight":
        if (isLastItem) {
          this.focusFirstItem();
        }
        else {
          this.focusNextItem(itemToFocus);
        }
        break;
      case "ArrowUp":
      case "ArrowLeft":
        if (isFirstItem) {
          this.focusLastItem();
        }
        else {
          this.focusPrevItem(itemToFocus);
        }
        break;
      case "Home":
        this.focusFirstItem();
        break;
      case "End":
        this.focusLastItem();
        break;
    }
  }
  registerItem(event) {
    const item = {
      item: event.target,
      position: event.detail.position,
      content: event.detail.content
    };
    if (item.content && item.item.active) {
      this.requestedContent = item.content;
    }
    if (!this.items.includes(item)) {
      this.items.push(item);
    }
    this.sortedItems = this.sortItems();
  }
  updateItem(event) {
    if (event.detail.content) {
      this.requestedContent = event.detail.content;
    }
    this.currentPosition = event.detail.position;
    this.calciteStepperItemChange.emit({
      position: this.currentPosition
    });
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** set the next step as active */
  async nextStep() {
    this.currentPosition =
      this.currentPosition + 1 < this.items.length
        ? this.currentPosition + 1
        : this.currentPosition;
    this.emitChangedItem();
  }
  /** set the previous step as active */
  async prevStep() {
    this.currentPosition =
      this.currentPosition - 1 >= 0 ? this.currentPosition - 1 : this.currentPosition;
    this.emitChangedItem();
  }
  /** set the requested step as active */
  async goToStep(num) {
    this.currentPosition = num - 1;
    this.emitChangedItem();
  }
  /** set the first step as active */
  async startStep() {
    this.currentPosition = 0;
    this.emitChangedItem();
  }
  /** set the last step as active */
  async endStep() {
    this.currentPosition = this.items.length - 1;
    this.emitChangedItem();
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  addHorizontalContentContainer() {
    this.stepperContentContainer = document.createElement("div");
    this.stepperContentContainer.classList.add("calcite-stepper-content");
    this.el.insertAdjacentElement("beforeend", this.stepperContentContainer);
  }
  emitChangedItem() {
    this.calciteStepperItemChange.emit({
      position: this.currentPosition
    });
  }
  focusFirstItem() {
    const firstItem = this.sortedItems[0];
    this.focusElement(firstItem);
  }
  focusLastItem() {
    const lastItem = this.sortedItems[this.sortedItems.length - 1];
    this.focusElement(lastItem);
  }
  focusNextItem(e) {
    const index = this.itemIndex(e);
    const nextItem = this.sortedItems[index + 1] || this.sortedItems[0];
    this.focusElement(nextItem);
  }
  focusPrevItem(e) {
    const index = this.itemIndex(e);
    const prevItem = this.sortedItems[index - 1] || this.sortedItems[this.sortedItems.length - 1];
    this.focusElement(prevItem);
  }
  itemIndex(e) {
    return this.sortedItems.indexOf(e);
  }
  focusElement(item) {
    const target = item;
    target.focus();
  }
  sortItems() {
    const items = Array.from(this.items)
      .filter((a) => !a.item.disabled)
      .sort((a, b) => a.position - b.position)
      .map((a) => a.item);
    return [...Array.from(new Set(items))];
  }
  updateContent(content) {
    this.stepperContentContainer.innerHTML = "";
    this.stepperContentContainer.append(...content);
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "requestedContent": ["contentWatcher"]
  }; }
  static get style() { return stepperCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-stepper",
    "$members$": {
      "icon": [516],
      "layout": [513],
      "numbered": [516],
      "scale": [513],
      "requestedContent": [1040],
      "nextStep": [64],
      "prevStep": [64],
      "goToStep": [64],
      "startStep": [64],
      "endStep": [64]
    },
    "$listeners$": [[0, "calciteStepperItemKeyEvent", "calciteStepperItemKeyEvent"], [0, "calciteStepperItemRegister", "registerItem"], [0, "calciteStepperItemSelect", "updateItem"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["icon", "icon"], ["layout", "layout"], ["numbered", "numbered"], ["scale", "scale"]]
  }; }
}

const stepperItemCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-stepper-item:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-stepper-item{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-stepper-item{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-stepper-item{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-stepper-item{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-stepper-item{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-stepper-item:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-stepper-item-h{display:none}/*!@:host([scale=s])*/[scale=s].sc-calcite-stepper-item-h{--calcite-stepper-item-spacing-unit-s:0.25rem;--calcite-stepper-item-spacing-unit-m:0.75rem;--calcite-stepper-item-spacing-unit-l:1rem;font-size:var(--calcite-font-size--1);line-height:1rem;-webkit-margin-end:0.25rem;margin-inline-end:0.25rem}/*!@:host([scale=s]) .stepper-item-subtitle*/[scale=s].sc-calcite-stepper-item-h .stepper-item-subtitle.sc-calcite-stepper-item{font-size:var(--calcite-font-size--2);line-height:1rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-stepper-item-h{--calcite-stepper-item-spacing-unit-s:0.5rem;--calcite-stepper-item-spacing-unit-m:1rem;--calcite-stepper-item-spacing-unit-l:1.25rem;font-size:var(--calcite-font-size-0);line-height:1.25rem;-webkit-margin-end:0.5rem;margin-inline-end:0.5rem}/*!@:host([scale=m]) .stepper-item-subtitle*/[scale=m].sc-calcite-stepper-item-h .stepper-item-subtitle.sc-calcite-stepper-item{font-size:var(--calcite-font-size--1);line-height:1rem}/*!@:host([scale=l])*/[scale=l].sc-calcite-stepper-item-h{--calcite-stepper-item-spacing-unit-s:0.75rem;--calcite-stepper-item-spacing-unit-m:1.25rem;--calcite-stepper-item-spacing-unit-l:1.5rem;font-size:var(--calcite-font-size-1);line-height:1.5rem;-webkit-margin-end:0.75rem;margin-inline-end:0.75rem}/*!@:host([scale=l]) .stepper-item-subtitle*/[scale=l].sc-calcite-stepper-item-h .stepper-item-subtitle.sc-calcite-stepper-item{font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@:host*/.sc-calcite-stepper-item-h{position:relative;display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-ms-flex-direction:column;flex-direction:column;margin-bottom:var(--calcite-stepper-item-spacing-unit-s)}/*!@:host .container*/.sc-calcite-stepper-item-h .container.sc-calcite-stepper-item{position:relative;display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;cursor:pointer;-ms-flex-direction:column;flex-direction:column;border-width:0px;border-top-width:2px;border-style:solid;border-color:var(--calcite-ui-border-3);color:var(--calcite-ui-text-3);-webkit-text-decoration-line:none;text-decoration-line:none;outline:2px solid transparent;outline-offset:2px;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}/*!@:host*/.sc-calcite-stepper-item-h{outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@:host(:focus)*/.sc-calcite-stepper-item-h:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:2px}/*!@:host .stepper-item-header*/.sc-calcite-stepper-item-h .stepper-item-header.sc-calcite-stepper-item{display:-ms-flexbox;display:flex;cursor:pointer;-ms-flex-align:start;align-items:flex-start}/*!@:host .stepper-item-content, :host .stepper-item-header*/.sc-calcite-stepper-item-h .stepper-item-content.sc-calcite-stepper-item,.sc-calcite-stepper-item-h .stepper-item-header.sc-calcite-stepper-item{-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);padding-block:var(--calcite-stepper-item-spacing-unit-l);-webkit-padding-end:var(--calcite-stepper-item-spacing-unit-m);padding-inline-end:var(--calcite-stepper-item-spacing-unit-m);text-align:start}/*!@:host .stepper-item-header **/.sc-calcite-stepper-item-h .stepper-item-header.sc-calcite-stepper-item *.sc-calcite-stepper-item{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}/*!@:host .stepper-item-content*/.sc-calcite-stepper-item-h .stepper-item-content.sc-calcite-stepper-item{display:none;width:100%;-ms-flex-direction:column;flex-direction:column;font-size:var(--calcite-font-size--2);line-height:1.375}/*!@:host .stepper-item-icon*/.sc-calcite-stepper-item-h .stepper-item-icon.sc-calcite-stepper-item{-webkit-margin-end:var(--calcite-stepper-item-spacing-unit-m);margin-inline-end:var(--calcite-stepper-item-spacing-unit-m);margin-top:1px;display:-ms-inline-flexbox;display:inline-flex;height:0.75rem;-ms-flex-negative:0;flex-shrink:0;-ms-flex-item-align:start;align-self:flex-start;color:var(--calcite-ui-text-3);opacity:var(--calcite-ui-opacity-disabled);-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}/*!@:host .stepper-item-header-text*/.sc-calcite-stepper-item-h .stepper-item-header-text.sc-calcite-stepper-item{-ms-flex-direction:column;flex-direction:column;text-align:initial;-webkit-margin-end:auto;margin-inline-end:auto}/*!@:host .stepper-item-title, :host .stepper-item-subtitle*/.sc-calcite-stepper-item-h .stepper-item-title.sc-calcite-stepper-item,.sc-calcite-stepper-item-h .stepper-item-subtitle.sc-calcite-stepper-item{display:-ms-flexbox;display:flex;width:100%}/*!@:host .stepper-item-title*/.sc-calcite-stepper-item-h .stepper-item-title.sc-calcite-stepper-item{margin-bottom:0.25rem;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-2)}/*!@:host .stepper-item-subtitle*/.sc-calcite-stepper-item-h .stepper-item-subtitle.sc-calcite-stepper-item{color:var(--calcite-ui-text-3)}/*!@:host .stepper-item-number*/.sc-calcite-stepper-item-h .stepper-item-number.sc-calcite-stepper-item{font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-3);-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-margin-end:var(--calcite-stepper-item-spacing-unit-m);margin-inline-end:var(--calcite-stepper-item-spacing-unit-m)}/*!@:host([disabled])*/[disabled].sc-calcite-stepper-item-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-stepper-item-h[disabled] .sc-calcite-stepper-item-s>[calcite-hydrated][disabled],[disabled].sc-calcite-stepper-item-h [calcite-hydrated][disabled].sc-calcite-stepper-item{opacity:1}/*!@:host([complete]) .container*/[complete].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item{border-color:rgba(0, 122, 194, 0.5)}/*!@:host([complete]) .container .stepper-item-icon*/[complete].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item .stepper-item-icon.sc-calcite-stepper-item{color:var(--calcite-ui-brand)}/*!@:host([error]) .container*/[error].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item{border-top-color:var(--calcite-ui-danger)}/*!@:host([error]) .container .stepper-item-number*/[error].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item .stepper-item-number.sc-calcite-stepper-item{color:var(--calcite-ui-danger)}/*!@:host([error]) .container .stepper-item-icon*/[error].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item .stepper-item-icon.sc-calcite-stepper-item{opacity:1;color:var(--calcite-ui-danger)}/*!@:host(:hover:not([disabled]):not([active])) .container, :host(:focus:not([disabled]):not([active])) .container*/.sc-calcite-stepper-item-h:hover:not([disabled]):not([active]) .container.sc-calcite-stepper-item,.sc-calcite-stepper-item-h:focus:not([disabled]):not([active]) .container.sc-calcite-stepper-item{border-top-color:var(--calcite-ui-brand)}/*!@:host(:hover:not([disabled]):not([active])) .container .stepper-item-title, :host(:focus:not([disabled]):not([active])) .container .stepper-item-title*/.sc-calcite-stepper-item-h:hover:not([disabled]):not([active]) .container.sc-calcite-stepper-item .stepper-item-title.sc-calcite-stepper-item,.sc-calcite-stepper-item-h:focus:not([disabled]):not([active]) .container.sc-calcite-stepper-item .stepper-item-title.sc-calcite-stepper-item{color:var(--calcite-ui-text-1)}/*!@:host(:hover:not([disabled]):not([active])) .container .stepper-item-subtitle, :host(:focus:not([disabled]):not([active])) .container .stepper-item-subtitle*/.sc-calcite-stepper-item-h:hover:not([disabled]):not([active]) .container.sc-calcite-stepper-item .stepper-item-subtitle.sc-calcite-stepper-item,.sc-calcite-stepper-item-h:focus:not([disabled]):not([active]) .container.sc-calcite-stepper-item .stepper-item-subtitle.sc-calcite-stepper-item{color:var(--calcite-ui-text-2)}/*!@:host([error]:hover:not([disabled]):not([active])) .container, :host([error]:focus:not([disabled]):not([active])) .container*/[error].sc-calcite-stepper-item-h:hover:not([disabled]):not([active]) .container.sc-calcite-stepper-item,[error].sc-calcite-stepper-item-h:focus:not([disabled]):not([active]) .container.sc-calcite-stepper-item{border-top-color:var(--calcite-ui-danger-hover)}/*!@:host([active]) .container*/[active].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item{border-top-color:var(--calcite-ui-brand)}/*!@:host([active]) .container .stepper-item-title*/[active].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item .stepper-item-title.sc-calcite-stepper-item{color:var(--calcite-ui-text-1)}/*!@:host([active]) .container .stepper-item-subtitle*/[active].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item .stepper-item-subtitle.sc-calcite-stepper-item{color:var(--calcite-ui-text-2)}/*!@:host([active]) .container .stepper-item-number*/[active].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item .stepper-item-number.sc-calcite-stepper-item{color:var(--calcite-ui-brand)}/*!@:host([active]) .container .stepper-item-icon*/[active].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item .stepper-item-icon.sc-calcite-stepper-item{color:var(--calcite-ui-brand);opacity:1}/*!@:host([layout=vertical]) .container*/[layout=vertical].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item{margin-left:0px;margin-right:0px;margin-top:0px;-ms-flex:1 1 auto;flex:1 1 auto;border-top-width:0px;border-style:solid;border-color:var(--calcite-ui-border-3);padding-top:0px;padding-bottom:0px;border-inline-start-width:2px;-webkit-padding-start:var(--calcite-stepper-item-spacing-unit-l);padding-inline-start:var(--calcite-stepper-item-spacing-unit-l)}/*!@:host([layout=vertical]) .container .stepper-item-icon*/[layout=vertical].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item .stepper-item-icon.sc-calcite-stepper-item{-ms-flex-order:3;order:3;margin-top:1px;margin-bottom:0px;-webkit-padding-start:var(--calcite-stepper-item-spacing-unit-s);padding-inline-start:var(--calcite-stepper-item-spacing-unit-s);-webkit-margin-start:auto;margin-inline-start:auto}/*!@:host([layout=vertical]) .container .stepper-item-header*/[layout=vertical].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item .stepper-item-header.sc-calcite-stepper-item{-webkit-padding-end:0px;padding-inline-end:0px}/*!@:host([layout=vertical]) .container .stepper-item-content*/[layout=vertical].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item .stepper-item-content.sc-calcite-stepper-item{padding:0px}/*!@:host([layout=vertical][active]) .container .stepper-item-content*/[layout=vertical][active].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item .stepper-item-content.sc-calcite-stepper-item{display:-ms-flexbox;display:flex}/*!@:host([layout=vertical][active]) .container .stepper-item-content ::slotted(:last-child)*/.sc-calcite-stepper-item-h[layout=vertical][active] .container .stepper-item-content .sc-calcite-stepper-item-s>:last-child{margin-bottom:var(--calcite-stepper-item-spacing-unit-l)}/*!@:host([layout=vertical][complete]) .container*/[layout=vertical][complete].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item{border-color:rgba(0, 122, 194, 0.5)}/*!@:host([layout=vertical][complete]:hover:not([disabled]):not([active])) .container, :host([layout=vertical][complete]:focus:not([disabled]):not([active])) .container*/[layout=vertical][complete].sc-calcite-stepper-item-h:hover:not([disabled]):not([active]) .container.sc-calcite-stepper-item,[layout=vertical][complete].sc-calcite-stepper-item-h:focus:not([disabled]):not([active]) .container.sc-calcite-stepper-item{border-color:var(--calcite-ui-brand)}/*!@:host([layout=vertical][error]) .container*/[layout=vertical][error].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item{border-color:var(--calcite-ui-danger)}/*!@:host([layout=vertical][active]) .container*/[layout=vertical][active].sc-calcite-stepper-item-h .container.sc-calcite-stepper-item{border-color:var(--calcite-ui-brand)}/*!@:host([layout=vertical]:hover:not([disabled]):not([active])) .container,\n:host([layout=vertical]:focus:not([disabled]):not([active])) .container*/[layout=vertical].sc-calcite-stepper-item-h:hover:not([disabled]):not([active]) .container.sc-calcite-stepper-item,[layout=vertical].sc-calcite-stepper-item-h:focus:not([disabled]):not([active]) .container.sc-calcite-stepper-item{border-color:rgba(0, 122, 194, 0.5)}/*!@:host([layout=vertical][error]:hover:not([disabled]):not([active])) .container, :host([layout=vertical][error]:focus:not([disabled]):not([active])) .container*/[layout=vertical][error].sc-calcite-stepper-item-h:hover:not([disabled]):not([active]) .container.sc-calcite-stepper-item,[layout=vertical][error].sc-calcite-stepper-item-h:focus:not([disabled]):not([active]) .container.sc-calcite-stepper-item{border-color:var(--calcite-ui-danger-hover)}";

/**
 * @slot - A slot for adding custom content.
 */
class StepperItem {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteStepperItemKeyEvent = createEvent(this, "calciteStepperItemKeyEvent", 7);
    this.calciteStepperItemSelect = createEvent(this, "calciteStepperItemSelect", 7);
    this.calciteStepperItemRegister = createEvent(this, "calciteStepperItemRegister", 7);
    //--------------------------------------------------------------------------
    //
    //  Public Properties
    //
    //--------------------------------------------------------------------------
    /** is the step active */
    this.active = false;
    /** has the step been completed */
    this.complete = false;
    /** does the step contain an error that needs to be resolved by the user */
    this.error = false;
    /** is the step disabled and not navigable to by a user */
    this.disabled = false;
    /** should the items display an icon based on status */
    /** @internal */
    this.icon = false;
    /** optionally display the step number next to the title and subtitle */
    /** @internal */
    this.numbered = false;
    /** the scale of the item */
    /** @internal */
    this.scale = "m";
  }
  // watch for removal of disabled to register step
  disabledWatcher() {
    this.registerStepperItem();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillLoad() {
    this.icon = getElementProp(this.el, "icon", false);
    this.numbered = getElementProp(this.el, "numbered", false);
    this.layout = getElementProp(this.el, "layout", false);
    this.scale = getElementProp(this.el, "scale", "m");
    this.parentStepperEl = this.el.parentElement;
  }
  componentDidLoad() {
    this.itemPosition = this.getItemPosition();
    this.itemContent = this.getItemContent();
    this.registerStepperItem();
    if (this.active) {
      this.emitRequestedItem();
    }
  }
  componentDidUpdate() {
    if (this.active) {
      this.emitRequestedItem();
    }
  }
  componentDidRender() {
    updateHostInteraction(this, true);
  }
  render() {
    return (hAsync(Host, { "aria-expanded": this.active.toString(), onClick: () => this.emitRequestedItem() }, hAsync("div", { class: "container" }, hAsync("div", { class: "stepper-item-header" }, this.icon ? this.renderIcon() : null, this.numbered ? (hAsync("div", { class: "stepper-item-number" }, this.getItemPosition() + 1, ".")) : null, hAsync("div", { class: "stepper-item-header-text" }, hAsync("span", { class: "stepper-item-title" }, this.itemTitle), hAsync("span", { class: "stepper-item-subtitle" }, this.itemSubtitle))), hAsync("div", { class: "stepper-item-content" }, hAsync("slot", null)))));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  keyDownHandler(e) {
    if (!this.disabled && e.target === this.el) {
      switch (e.key) {
        case " ":
        case "Enter":
          this.emitRequestedItem();
          e.preventDefault();
          break;
        case "ArrowUp":
        case "ArrowDown":
        case "ArrowLeft":
        case "ArrowRight":
        case "Home":
        case "End":
          this.calciteStepperItemKeyEvent.emit({ item: e });
          e.preventDefault();
          break;
      }
    }
  }
  updateActiveItemOnChange(event) {
    if (event.target === this.parentStepperEl) {
      this.activePosition = event.detail.position;
      this.determineActiveItem();
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  renderIcon() {
    const path = this.active
      ? "circleF"
      : this.error
        ? "exclamationMarkCircleF"
        : this.complete
          ? "checkCircleF"
          : "circle";
    return hAsync("calcite-icon", { class: "stepper-item-icon", icon: path, scale: "s" });
  }
  determineActiveItem() {
    this.active = !this.disabled && this.itemPosition === this.activePosition;
  }
  registerStepperItem() {
    this.calciteStepperItemRegister.emit({
      position: this.itemPosition,
      content: this.itemContent
    });
  }
  emitRequestedItem() {
    if (!this.disabled) {
      this.calciteStepperItemSelect.emit({
        position: this.itemPosition,
        content: this.itemContent
      });
    }
  }
  getItemContent() {
    var _a;
    // todo: Remove IE/Edge specific code.
    return ((_a = this.el.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector("slot"))
      ? this.el.shadowRoot.querySelector("slot").assignedNodes({ flatten: true })
      : this.el.querySelector(".stepper-item-content")
        ? this.el.querySelector(".stepper-item-content").childNodes
        : null;
  }
  getItemPosition() {
    return Array.prototype.indexOf.call(this.parentStepperEl.querySelectorAll("calcite-stepper-item"), this.el);
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "disabled": ["disabledWatcher"]
  }; }
  static get style() { return stepperItemCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-stepper-item",
    "$members$": {
      "active": [1540],
      "complete": [516],
      "error": [4],
      "disabled": [516],
      "itemTitle": [1, "item-title"],
      "itemSubtitle": [1, "item-subtitle"],
      "layout": [1537],
      "icon": [1028],
      "numbered": [1028],
      "scale": [1537]
    },
    "$listeners$": [[0, "keydown", "keyDownHandler"], [16, "calciteStepperItemChange", "updateActiveItemOnChange"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["active", "active"], ["complete", "complete"], ["disabled", "disabled"], ["layout", "layout"], ["scale", "scale"]]
  }; }
}

class StoreManager {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.stateLoaded = createEvent(this, "stateLoaded", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties (public)
    //
    //--------------------------------------------------------------------------
    /**
     * Contains source json as a string
     *
     */
    this.value = "";
    /**
     * Templates for the current solution
     */
    this.templates = [];
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    this._initValueObserver();
  }
  render() {
    return (null);
  }
  /**
   * Initialize the observer that will monitor and respond to changes in the value.
   * When we get a new value we are dealinmg with a new solution and need to fetch the items data and load the state.
   */
  _initValueObserver() {
    this._valueObserver = new MutationObserver(ml => {
      ml.some(mutation => {
        const newValue = mutation.target[mutation.attributeName];
        if (mutation.type === 'attributes' && mutation.attributeName === "value" &&
          newValue !== mutation.oldValue && newValue !== "") {
          const v = JSON.parse(newValue);
          // eslint-disable-next-line @typescript-eslint/no-floating-promises
          getItemDataAsJson(v, this.authentication).then(data => {
            state.models = getModels(Array.isArray(v) ? v : [v], this.authentication, v);
            state.featureServices = getFeatureServices(Array.isArray(v) ? v : [v]);
            state.spatialReferenceInfo = getSpatialReferenceInfo(state.featureServices, data);
            this.templates = v;
            this.stateLoaded.emit(state);
          });
          return true;
        }
      });
    });
    this._valueObserver.observe(this.el, { attributes: true, attributeOldValue: true });
  }
  get el() { return getElement(this); }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "store-manager",
    "$members$": {
      "value": [1537],
      "templates": [1040],
      "authentication": [1040]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["value", "value"]]
  }; }
}

const switchCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-switch:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-switch{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-switch{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-switch{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-switch{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-switch{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-switch:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-switch-h{display:none}/*!@:host([scale=s]) .container*/[scale=s].sc-calcite-switch-h .container.sc-calcite-switch{height:0.75rem}/*!@:host([scale=s]) .track*/[scale=s].sc-calcite-switch-h .track.sc-calcite-switch{height:0.75rem;width:1.5rem}/*!@:host([scale=s]) .handle*/[scale=s].sc-calcite-switch-h .handle.sc-calcite-switch{height:0.5rem;width:0.5rem}/*!@:host([scale=m]) .container*/[scale=m].sc-calcite-switch-h .container.sc-calcite-switch{height:1rem}/*!@:host([scale=m]) .track*/[scale=m].sc-calcite-switch-h .track.sc-calcite-switch{height:1rem;width:2rem}/*!@:host([scale=m]) .handle*/[scale=m].sc-calcite-switch-h .handle.sc-calcite-switch{height:0.75rem;width:0.75rem}/*!@:host([scale=l]) .container*/[scale=l].sc-calcite-switch-h .container.sc-calcite-switch{height:1.5rem}/*!@:host([scale=l]) .track*/[scale=l].sc-calcite-switch-h .track.sc-calcite-switch{height:1.5rem;width:3rem}/*!@:host([scale=l]) .handle*/[scale=l].sc-calcite-switch-h .handle.sc-calcite-switch{height:1.25rem;width:1.25rem}/*!@:host*/.sc-calcite-switch-h{position:relative;display:inline-block;width:auto;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:middle;tap-highlight-color:transparent}/*!@:host([disabled])*/[disabled].sc-calcite-switch-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-switch-h[disabled] .sc-calcite-switch-s>[calcite-hydrated][disabled],[disabled].sc-calcite-switch-h [calcite-hydrated][disabled].sc-calcite-switch{opacity:1}/*!@:host*/.sc-calcite-switch-h{width:auto;outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@.track*/.track.sc-calcite-switch{pointer-events:none;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;display:inline-block;border-radius:9999px;border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-2);background-color:var(--calcite-ui-foreground-2);vertical-align:top;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}/*!@.handle*/.handle.sc-calcite-switch{pointer-events:none;position:absolute;display:block;border-radius:9999px;border-width:2px;border-style:solid;border-color:var(--calcite-ui-border-input);background-color:var(--calcite-ui-foreground-1);-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);top:-1px;inset-inline:-1px auto}/*!@:host(:hover) .handle, :host(:focus) .handle*/.sc-calcite-switch-h:hover .handle.sc-calcite-switch,.sc-calcite-switch-h:focus .handle.sc-calcite-switch{border-color:var(--calcite-ui-brand);-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-brand);box-shadow:inset 0 0 0 1px var(--calcite-ui-brand)}/*!@:host([checked]) .track*/[checked].sc-calcite-switch-h .track.sc-calcite-switch{border-color:var(--calcite-ui-brand-hover);background-color:var(--calcite-ui-brand)}/*!@:host([checked]) .handle*/[checked].sc-calcite-switch-h .handle.sc-calcite-switch{border-color:var(--calcite-ui-brand);inset-inline:auto -1px}/*!@:host([checked]:hover) .track*/[checked].sc-calcite-switch-h:hover .track.sc-calcite-switch{border-color:var(--calcite-ui-brand-hover);background-color:var(--calcite-ui-brand)}/*!@:host([checked]:hover) .handle*/[checked].sc-calcite-switch-h:hover .handle.sc-calcite-switch{border-color:var(--calcite-ui-brand-hover);-webkit-box-shadow:inset 0 0 0 1px var(--calcite-ui-brand-hover);box-shadow:inset 0 0 0 1px var(--calcite-ui-brand-hover)}@media (forced-colors: active){/*!@:host([checked]) .track*/[checked].sc-calcite-switch-h .track.sc-calcite-switch{background-color:canvasText}}/*!@.container:focus*/.container.sc-calcite-switch:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:2px}/*!@::slotted(input[slot=hidden-form-input])*/.sc-calcite-switch-s>input[slot=hidden-form-input]{bottom:0 !important;left:0 !important;margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;right:0 !important;top:0 !important;-webkit-transform:none !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}";

class Switch {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteSwitchChange = createEvent(this, "calciteSwitchChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** True if the switch is disabled */
    this.disabled = false;
    /** The scale of the switch */
    this.scale = "m";
    /** True if the switch is initially on
     * @deprecated use 'checked' instead.
     */
    this.switched = false;
    /** True if the switch is initially on */
    this.checked = false;
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.keyDownHandler = (e) => {
      const key = e.key;
      if (!this.disabled && (key === " " || key === "Enter")) {
        this.toggle();
      }
    };
    this.clickHandler = () => {
      this.toggle();
    };
    this.setSwitchEl = (el) => {
      this.switchEl = el;
    };
  }
  switchedWatcher(switched) {
    this.checked = switched;
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    focusElement(this.switchEl);
  }
  onLabelClick() {
    if (!this.disabled) {
      this.toggle();
      this.setFocus();
    }
  }
  toggle() {
    this.checked = !this.checked;
    this.calciteSwitchChange.emit({
      // todo: We should remove emmitting redudant props in event payload.
      // https://github.com/Esri/calcite-components/issues/3163
      switched: this.checked
    });
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    const initiallyChecked = this.checked || this.switched;
    if (initiallyChecked) {
      // if either prop is set, we ensure both are synced initially
      this.switched = this.checked = initiallyChecked;
    }
    connectLabel(this);
    connectForm(this);
  }
  disconnectedCallback() {
    disconnectLabel(this);
    disconnectForm(this);
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    return (hAsync(Host, { onKeyDown: this.keyDownHandler }, hAsync("div", { "aria-checked": this.checked.toString(), "aria-label": getLabelText(this), class: "container", onClick: this.clickHandler, ref: this.setSwitchEl, role: "switch", tabIndex: 0 }, hAsync("div", { class: "track" }, hAsync("div", { class: "handle" })), hAsync(HiddenFormInputSlot, { component: this }))));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "switched": ["switchedWatcher"]
  }; }
  static get style() { return switchCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-switch",
    "$members$": {
      "disabled": [516],
      "label": [1],
      "name": [513],
      "scale": [513],
      "switched": [1028],
      "checked": [1540],
      "value": [8],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["name", "name"], ["scale", "scale"], ["checked", "checked"]]
  }; }
}

const tabCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-tab:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-tab{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-tab{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-tab{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-tab{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-tab{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-tab:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-tab-h{display:none}/*!@:host([active]) section*/[active].sc-calcite-tab-h section.sc-calcite-tab{display:block}/*!@:host*/.sc-calcite-tab-h{display:none;height:100%;width:100%}/*!@:host([active])*/[active].sc-calcite-tab-h{display:block;height:100%;width:100%;overflow:auto}/*!@section*/section.sc-calcite-tab{display:none;height:100%;width:100%}/*!@:host([scale=s])*/[scale=s].sc-calcite-tab-h{padding-top:0.25rem;padding-bottom:0.25rem;font-size:var(--calcite-font-size--2);line-height:1rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-tab-h{padding-top:0.5rem;padding-bottom:0.5rem;font-size:var(--calcite-font-size--1);line-height:1rem}/*!@:host([scale=l])*/[scale=l].sc-calcite-tab-h{padding-top:0.75rem;padding-bottom:0.75rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}";

/**
 * @slot - A slot for adding custom content.
 */
class Tab {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteTabRegister = createEvent(this, "calciteTabRegister", 7);
    /**
     * Show this tab
     */
    this.active = false;
    /** @internal Parent tabs component scale value */
    this.scale = "m";
    //--------------------------------------------------------------------------
    //
    //  Private State/Props
    //
    //--------------------------------------------------------------------------
    /**
     * @internal
     */
    this.guid = `calcite-tab-title-${guid()}`;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    const id = this.el.id || this.guid;
    return (hAsync(Host, { "aria-expanded": this.active.toString(), "aria-labelledby": this.labeledBy, id: id, role: "tabpanel" }, hAsync("section", null, hAsync("slot", null))));
  }
  componentDidLoad() {
    this.calciteTabRegister.emit();
  }
  componentWillRender() {
    var _a;
    this.scale = (_a = this.el.closest("calcite-tabs")) === null || _a === void 0 ? void 0 : _a.scale;
  }
  disconnectedCallback() {
    var _a;
    // Dispatching to body in order to be listened by other elements that are still connected to the DOM.
    (_a = document.body) === null || _a === void 0 ? void 0 : _a.dispatchEvent(new CustomEvent("calciteTabUnregister", {
      detail: this.el
    }));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  tabChangeHandler(event) {
    // to allow `<calcite-tabs>` to be nested we need to make sure this
    // `calciteTabChange` event was actually fired from a title that is a
    // child of the `<calcite-tabs>` that is the a parent of this tab.
    if (!event.composedPath().includes(this.el.closest("calcite-tabs"))) {
      return;
    }
    if (this.tab) {
      this.active = this.tab === event.detail.tab;
    }
    else {
      this.getTabIndex().then((index) => {
        this.active = index === event.detail.tab;
      });
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Return the index of this tab within the tab array
   */
  async getTabIndex() {
    return Array.prototype.indexOf.call(nodeListToArray$1(this.el.parentElement.children).filter((e) => e.matches("calcite-tab")), this.el);
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * @internal
   */
  async updateAriaInfo(tabIds = [], titleIds = []) {
    this.labeledBy = titleIds[tabIds.indexOf(this.el.id)] || null;
  }
  get el() { return getElement(this); }
  static get style() { return tabCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-tab",
    "$members$": {
      "tab": [513],
      "active": [1540],
      "scale": [1537],
      "labeledBy": [32],
      "getTabIndex": [64],
      "updateAriaInfo": [64]
    },
    "$listeners$": [[16, "calciteTabChange", "tabChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["tab", "tab"], ["active", "active"], ["scale", "scale"]]
  }; }
}

const tabNavCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-tab-nav:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-tab-nav{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-tab-nav{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-tab-nav{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-tab-nav{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-tab-nav{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-tab-nav:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-tab-nav-h{display:none}/*!@:host*/.sc-calcite-tab-nav-h{position:relative;display:-ms-flexbox;display:flex}/*!@:host([scale=s])*/[scale=s].sc-calcite-tab-nav-h{min-height:1.5rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-tab-nav-h{min-height:2rem}/*!@:host([scale=l])*/[scale=l].sc-calcite-tab-nav-h{min-height:2.75rem}/*!@.tab-nav*/.tab-nav.sc-calcite-tab-nav{display:-ms-flexbox;display:flex;width:100%;-ms-flex-pack:start;justify-content:flex-start;overflow:auto}/*!@:host([layout=center]) .tab-nav*/[layout=center].sc-calcite-tab-nav-h .tab-nav.sc-calcite-tab-nav{-ms-flex-pack:center;justify-content:center}/*!@.tab-nav-active-indicator-container*/.tab-nav-active-indicator-container.sc-calcite-tab-nav{position:absolute;left:0px;right:0px;bottom:0px;height:0.125rem;width:100%;overflow:hidden}/*!@.tab-nav-active-indicator*/.tab-nav-active-indicator.sc-calcite-tab-nav{position:absolute;bottom:0px;display:block;height:0.125rem;background-color:var(--calcite-ui-brand);-webkit-transition-property:all;transition-property:all;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0, 0, 0.2, 1);transition-timing-function:cubic-bezier(0, 0, 0.2, 1)}/*!@:host([position=below]) .tab-nav-active-indicator*/[position=below].sc-calcite-tab-nav-h .tab-nav-active-indicator.sc-calcite-tab-nav{bottom:unset;top:0px}/*!@:host([position=below]) .tab-nav-active-indicator-container*/[position=below].sc-calcite-tab-nav-h .tab-nav-active-indicator-container.sc-calcite-tab-nav{bottom:unset;top:0px}/*!@:host([bordered]) .tab-nav-active-indicator-container*/[bordered].sc-calcite-tab-nav-h .tab-nav-active-indicator-container.sc-calcite-tab-nav{bottom:unset}/*!@:host([bordered][position=below]) .tab-nav-active-indicator-container*/[bordered][position=below].sc-calcite-tab-nav-h .tab-nav-active-indicator-container.sc-calcite-tab-nav{bottom:0;top:unset}";

/**
 * @slot - A slot for adding `calcite-tab-title`s.
 */
class TabNav {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteTabChange = createEvent(this, "calciteTabChange", 7);
    /** @internal Parent tabs component scale value */
    this.scale = "m";
    /** @internal Parent tabs component layout value */
    this.layout = "inline";
    /** @internal Parent tabs component position value */
    this.position = "below";
    /** @internal Parent tabs component bordered value when layout is "inline" */
    this.bordered = false;
    this.animationActiveDuration = 0.3;
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.handleContainerScroll = () => {
      // remove active indicator transition duration while container is scrolling to prevent wobble
      this.activeIndicatorEl.style.transitionDuration = "0s";
      this.updateOffsetPosition();
    };
  }
  async selectedTabChanged() {
    if (localStorage &&
      this.storageId &&
      this.selectedTab !== undefined &&
      this.selectedTab !== null) {
      localStorage.setItem(`calcite-tab-nav-${this.storageId}`, JSON.stringify(this.selectedTab));
    }
    this.calciteTabChange.emit({
      tab: this.selectedTab
    });
    this.selectedTabEl = await this.getTabTitleById(this.selectedTab);
  }
  selectedTabElChanged() {
    this.updateOffsetPosition();
    this.updateActiveWidth();
    // reset the animation time on tab selection
    this.activeIndicatorEl.style.transitionDuration = `${this.animationActiveDuration}s`;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillLoad() {
    const storageKey = `calcite-tab-nav-${this.storageId}`;
    if (localStorage && this.storageId && localStorage.getItem(storageKey)) {
      const storedTab = JSON.parse(localStorage.getItem(storageKey));
      this.selectedTab = storedTab;
      this.calciteTabChange.emit({
        tab: this.selectedTab
      });
    }
  }
  componentWillRender() {
    var _a, _b, _c, _d;
    this.layout = (_a = this.el.closest("calcite-tabs")) === null || _a === void 0 ? void 0 : _a.layout;
    this.position = (_b = this.el.closest("calcite-tabs")) === null || _b === void 0 ? void 0 : _b.position;
    this.scale = (_c = this.el.closest("calcite-tabs")) === null || _c === void 0 ? void 0 : _c.scale;
    this.bordered = (_d = this.el.closest("calcite-tabs")) === null || _d === void 0 ? void 0 : _d.bordered;
    // fix issue with active tab-title not lining up with blue indicator
    if (this.selectedTabEl) {
      this.updateOffsetPosition();
    }
  }
  componentDidRender() {
    // if every tab title is active select the first tab.
    if (this.tabTitles.length &&
      this.tabTitles.every((title) => !title.active) &&
      !this.selectedTab) {
      this.tabTitles[0].getTabIdentifier().then((tab) => {
        this.calciteTabChange.emit({
          tab
        });
      });
    }
  }
  render() {
    const dir = getElementDir(this.el);
    const width = `${this.indicatorWidth}px`;
    const offset = `${this.indicatorOffset}px`;
    const indicatorStyle = dir !== "rtl" ? { width, left: offset } : { width, right: offset };
    return (hAsync(Host, { role: "tablist" }, hAsync("div", { class: "tab-nav", onScroll: this.handleContainerScroll, ref: (el) => (this.tabNavEl = el) }, hAsync("div", { class: "tab-nav-active-indicator-container", ref: (el) => (this.activeIndicatorContainerEl = el) }, hAsync("div", { class: "tab-nav-active-indicator", ref: (el) => (this.activeIndicatorEl = el), style: indicatorStyle })), hAsync("slot", null))));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  resizeHandler() {
    // remove active indicator transition duration during resize to prevent wobble
    this.activeIndicatorEl.style.transitionDuration = "0s";
    this.updateActiveWidth();
    this.updateOffsetPosition();
  }
  focusPreviousTabHandler(e) {
    const currentIndex = this.getIndexOfTabTitle(e.target, this.enabledTabTitles);
    const previousTab = this.enabledTabTitles[currentIndex - 1] ||
      this.enabledTabTitles[this.enabledTabTitles.length - 1];
    previousTab.focus();
    e.stopPropagation();
    e.preventDefault();
  }
  focusNextTabHandler(e) {
    const currentIndex = this.getIndexOfTabTitle(e.target, this.enabledTabTitles);
    const nextTab = this.enabledTabTitles[currentIndex + 1] || this.enabledTabTitles[0];
    nextTab.focus();
    e.stopPropagation();
    e.preventDefault();
  }
  activateTabHandler(e) {
    this.selectedTab = e.detail.tab
      ? e.detail.tab
      : this.getIndexOfTabTitle(e.target);
    e.stopPropagation();
    e.preventDefault();
  }
  /**
   * Check for active tabs on register and update selected
   */
  updateTabTitles(e) {
    if (e.target.active) {
      this.selectedTab = e.detail;
    }
  }
  globalTabChangeHandler(e) {
    if (this.syncId &&
      e.target !== this.el &&
      e.target.syncId === this.syncId &&
      this.selectedTab !== e.detail.tab) {
      this.selectedTab = e.detail.tab;
    }
  }
  updateOffsetPosition() {
    var _a, _b, _c, _d, _e;
    const dir = getElementDir(this.el);
    const navWidth = (_a = this.activeIndicatorContainerEl) === null || _a === void 0 ? void 0 : _a.offsetWidth;
    const tabLeft = (_b = this.selectedTabEl) === null || _b === void 0 ? void 0 : _b.offsetLeft;
    const tabWidth = (_c = this.selectedTabEl) === null || _c === void 0 ? void 0 : _c.offsetWidth;
    const offsetRight = navWidth - (tabLeft + tabWidth);
    this.indicatorOffset =
      dir !== "rtl" ? tabLeft - ((_d = this.tabNavEl) === null || _d === void 0 ? void 0 : _d.scrollLeft) : offsetRight + ((_e = this.tabNavEl) === null || _e === void 0 ? void 0 : _e.scrollLeft);
  }
  updateActiveWidth() {
    var _a;
    this.indicatorWidth = (_a = this.selectedTabEl) === null || _a === void 0 ? void 0 : _a.offsetWidth;
  }
  getIndexOfTabTitle(el, tabTitles = this.tabTitles) {
    // In most cases, since these indexes correlate with tab contents, we want to consider all tab titles.
    // However, when doing relative index operations, it makes sense to pass in this.enabledTabTitles as the 2nd arg.
    return tabTitles.indexOf(el);
  }
  async getTabTitleById(id) {
    return Promise.all(this.tabTitles.map((el) => el.getTabIdentifier())).then((ids) => {
      return this.tabTitles[ids.indexOf(id)];
    });
  }
  get tabTitles() {
    return filterDirectChildren(this.el, "calcite-tab-title");
  }
  get enabledTabTitles() {
    return filterDirectChildren(this.el, "calcite-tab-title:not([disabled])");
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "selectedTab": ["selectedTabChanged"],
    "selectedTabEl": ["selectedTabElChanged"]
  }; }
  static get style() { return tabNavCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-tab-nav",
    "$members$": {
      "storageId": [1, "storage-id"],
      "syncId": [1, "sync-id"],
      "scale": [1537],
      "layout": [1537],
      "position": [1537],
      "bordered": [1540],
      "indicatorOffset": [1026, "indicator-offset"],
      "indicatorWidth": [1026, "indicator-width"],
      "selectedTab": [32],
      "selectedTabEl": [32]
    },
    "$listeners$": [[9, "resize", "resizeHandler"], [0, "calciteTabsFocusPrevious", "focusPreviousTabHandler"], [0, "calciteTabsFocusNext", "focusNextTabHandler"], [0, "calciteTabsActivate", "activateTabHandler"], [0, "calciteTabTitleRegister", "updateTabTitles"], [16, "calciteTabChange", "globalTabChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["scale", "scale"], ["layout", "layout"], ["position", "position"], ["bordered", "bordered"]]
  }; }
}

const tabTitleCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-tab-title:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-tab-title{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-tab-title{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-tab-title{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-tab-title{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-tab-title{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-tab-title:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-tab-title-h{display:none}/*!@:host*/.sc-calcite-tab-title-h{margin-right:1.25rem;display:block;-ms-flex:0 1 auto;flex:0 1 auto;outline:2px solid transparent;outline-offset:2px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:1.25rem;margin-inline-end:1.25rem}/*!@:host([layout=center])*/[layout=center].sc-calcite-tab-title-h{margin-top:0px;margin-bottom:0px;margin-left:1.25rem;margin-right:1.25rem;text-align:center;-ms-flex-preferred-size:12rem;flex-basis:12rem}/*!@:host([position=below]) a*/[position=below].sc-calcite-tab-title-h a.sc-calcite-tab-title{border-bottom-width:0px;border-top-width:2px;border-top-color:transparent;border-top-style:solid}/*!@:host a*/.sc-calcite-tab-title-h a.sc-calcite-tab-title{outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@:host(:focus) a*/.sc-calcite-tab-title-h:focus a.sc-calcite-tab-title{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@:host(:active) a, :host(:focus) a, :host(:hover) a*/.sc-calcite-tab-title-h:active a.sc-calcite-tab-title,.sc-calcite-tab-title-h:focus a.sc-calcite-tab-title,.sc-calcite-tab-title-h:hover a.sc-calcite-tab-title{border-color:var(--calcite-ui-border-2);color:var(--calcite-ui-text-1);-webkit-text-decoration-line:none;text-decoration-line:none}/*!@:host([active]) a*/[active].sc-calcite-tab-title-h a.sc-calcite-tab-title{border-color:transparent;color:var(--calcite-ui-text-1)}/*!@:host([disabled])*/[disabled].sc-calcite-tab-title-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) span, :host([disabled]) a*/[disabled].sc-calcite-tab-title-h span.sc-calcite-tab-title,[disabled].sc-calcite-tab-title-h a.sc-calcite-tab-title{pointer-events:none;opacity:0.5}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-tab-title-h[disabled] .sc-calcite-tab-title-s>[calcite-hydrated][disabled],[disabled].sc-calcite-tab-title-h [calcite-hydrated][disabled].sc-calcite-tab-title{opacity:1}/*!@:host([scale=s])*/[scale=s].sc-calcite-tab-title-h{-webkit-margin-end:1rem;margin-inline-end:1rem}/*!@:host([scale=s]) a, :host([scale=s]) span*/[scale=s].sc-calcite-tab-title-h a.sc-calcite-tab-title,[scale=s].sc-calcite-tab-title-h span.sc-calcite-tab-title{padding-top:0.25rem;padding-bottom:0.25rem;font-size:var(--calcite-font-size--2);line-height:1rem}/*!@:host([scale=m]) a, :host([scale=m]) span*/[scale=m].sc-calcite-tab-title-h a.sc-calcite-tab-title,[scale=m].sc-calcite-tab-title-h span.sc-calcite-tab-title{padding-top:0.5rem;padding-bottom:0.5rem;font-size:var(--calcite-font-size--1);line-height:1rem}/*!@:host([scale=l])*/[scale=l].sc-calcite-tab-title-h{-webkit-margin-end:1.5rem;margin-inline-end:1.5rem}/*!@:host([scale=l]) a, :host([scale=l]) span*/[scale=l].sc-calcite-tab-title-h a.sc-calcite-tab-title,[scale=l].sc-calcite-tab-title-h span.sc-calcite-tab-title{padding-top:0.75rem;padding-bottom:0.75rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@a, span*/a.sc-calcite-tab-title,span.sc-calcite-tab-title{-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;height:100%;width:100%;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-ms-flex-pack:center;justify-content:center;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;border-bottom-width:2px;padding-left:0px;padding-right:0px;padding-top:0.5rem;padding-bottom:0.5rem;font-size:var(--calcite-font-size--1);line-height:1rem;color:var(--calcite-ui-text-3);-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;border-bottom-color:transparent;border-bottom-style:solid}/*!@span*/span.sc-calcite-tab-title{cursor:default}/*!@.calcite-tab-title--icon*/.calcite-tab-title--icon.sc-calcite-tab-title{position:relative;margin:0px;display:-ms-inline-flexbox;display:inline-flex;-ms-flex-item-align:center;align-self:center}/*!@.calcite-tab-title--icon svg*/.calcite-tab-title--icon.sc-calcite-tab-title svg.sc-calcite-tab-title{-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s}/*!@.container--has-text*/.container--has-text.sc-calcite-tab-title{padding:0.25rem}/*!@.container--has-text .calcite-tab-title--icon.icon-start*/.container--has-text.sc-calcite-tab-title .calcite-tab-title--icon.icon-start.sc-calcite-tab-title{-webkit-margin-end:0.5rem;margin-inline-end:0.5rem}/*!@.container--has-text .calcite-tab-title--icon.icon-end*/.container--has-text.sc-calcite-tab-title .calcite-tab-title--icon.icon-end.sc-calcite-tab-title{-webkit-margin-start:0.5rem;margin-inline-start:0.5rem}/*!@:host([icon-start][icon-end]) .calcite-tab-title--icon:first-child*/[icon-start][icon-end].sc-calcite-tab-title-h .calcite-tab-title--icon.sc-calcite-tab-title:first-child{-webkit-margin-end:0.5rem;margin-inline-end:0.5rem}/*!@:host([bordered])*/[bordered].sc-calcite-tab-title-h{-webkit-margin-end:0;margin-inline-end:0}/*!@:host([bordered][active])*/[bordered][active].sc-calcite-tab-title-h{-webkit-box-shadow:inset 0px -2px var(--calcite-ui-foreground-1);box-shadow:inset 0px -2px var(--calcite-ui-foreground-1)}/*!@:host([bordered][active][position=below])*/[bordered][active][position=below].sc-calcite-tab-title-h{-webkit-box-shadow:inset 0 2px 0 var(--calcite-ui-foreground-1);box-shadow:inset 0 2px 0 var(--calcite-ui-foreground-1)}/*!@:host([bordered]:hover) a, :host([bordered]:focus) a, :host([bordered]:active) a*/[bordered].sc-calcite-tab-title-h:hover a.sc-calcite-tab-title,[bordered].sc-calcite-tab-title-h:focus a.sc-calcite-tab-title,[bordered].sc-calcite-tab-title-h:active a.sc-calcite-tab-title{position:relative}/*!@:host([bordered]:hover) a*/[bordered].sc-calcite-tab-title-h:hover a.sc-calcite-tab-title{background-color:var(--calcite-button-transparent-hover);-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s}/*!@:host([bordered]) a*/[bordered].sc-calcite-tab-title-h a.sc-calcite-tab-title{border-bottom-style:unset}/*!@:host([bordered][position=below]) a*/[bordered][position=below].sc-calcite-tab-title-h a.sc-calcite-tab-title{border-top-style:unset}/*!@:host([active][bordered]) a*/[active][bordered].sc-calcite-tab-title-h a.sc-calcite-tab-title{border-left:1px solid var(--calcite-ui-border-1);border-right:1px solid var(--calcite-ui-border-1)}/*!@:host([bordered]) a, :host([bordered]) span*/[bordered].sc-calcite-tab-title-h a.sc-calcite-tab-title,[bordered].sc-calcite-tab-title-h span.sc-calcite-tab-title{padding-left:0.75rem;padding-right:0.75rem}/*!@:host([bordered][scale=s]) a, :host([bordered][scale=s]) span*/[bordered][scale=s].sc-calcite-tab-title-h a.sc-calcite-tab-title,[bordered][scale=s].sc-calcite-tab-title-h span.sc-calcite-tab-title{padding-left:0.5rem;padding-right:0.5rem}/*!@:host([bordered][scale=l]) a, :host([bordered][scale=l]) span*/[bordered][scale=l].sc-calcite-tab-title-h a.sc-calcite-tab-title,[bordered][scale=l].sc-calcite-tab-title-h span.sc-calcite-tab-title{padding-left:1rem;padding-right:1rem}";

/**
 * @slot - A slot for adding text.
 */
class TabTitle {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteTabsActivate = createEvent(this, "calciteTabsActivate", 7);
    this.calciteTabsFocusNext = createEvent(this, "calciteTabsFocusNext", 7);
    this.calciteTabsFocusPrevious = createEvent(this, "calciteTabsFocusPrevious", 7);
    this.calciteTabTitleRegister = createEvent(this, "calciteTabTitleRegister", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** Show this tab title as selected */
    this.active = false;
    /** Disable this tab title  */
    this.disabled = false;
    /** @internal Parent tabs component bordered value */
    this.bordered = false;
    //--------------------------------------------------------------------------
    //
    //  Private State/Props
    //
    //--------------------------------------------------------------------------
    /** watches for changing text content **/
    this.mutationObserver = createObserver();
    /** determine if there is slotted text for styling purposes */
    this.hasText = false;
    /**
     * @internal
     */
    this.guid = `calcite-tab-title-${guid()}`;
  }
  activeTabChanged() {
    if (this.active) {
      this.emitActiveTab();
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    this.setupTextContentObserver();
    this.parentTabNavEl = this.el.closest("calcite-tab-nav");
    this.parentTabsEl = this.el.closest("calcite-tabs");
  }
  disconnectedCallback() {
    var _a, _b;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    // Dispatching to body in order to be listened by other elements that are still connected to the DOM.
    (_b = document.body) === null || _b === void 0 ? void 0 : _b.dispatchEvent(new CustomEvent("calciteTabTitleUnregister", {
      detail: this.el
    }));
  }
  componentWillLoad() {
    if (this.tab && this.active) {
      this.emitActiveTab();
    }
  }
  componentWillRender() {
    if (this.parentTabsEl) {
      this.layout = this.parentTabsEl.layout;
      this.position = this.parentTabsEl.position;
      this.scale = this.parentTabsEl.scale;
      this.bordered = this.parentTabsEl.bordered;
    }
    // handle case when tab-nav is only parent
    if (!this.parentTabsEl && this.parentTabNavEl) {
      this.position = getElementProp(this.parentTabNavEl, "position", this.position);
      this.scale = getElementProp(this.parentTabNavEl, "scale", this.scale);
    }
  }
  render() {
    const id = this.el.id || this.guid;
    const showSideBorders = this.bordered && !this.disabled && this.layout !== "center";
    const iconStartEl = (hAsync("calcite-icon", { class: "calcite-tab-title--icon icon-start", flipRtl: this.iconFlipRtl === "start" || this.iconFlipRtl === "both", icon: this.iconStart, scale: "s" }));
    const iconEndEl = (hAsync("calcite-icon", { class: "calcite-tab-title--icon icon-end", flipRtl: this.iconFlipRtl === "end" || this.iconFlipRtl === "both", icon: this.iconEnd, scale: "s" }));
    return (hAsync(Host, { "aria-controls": this.controls, "aria-expanded": this.active.toString(), id: id, role: "tab" }, hAsync("a", { class: {
        container: true,
        "container--has-text": this.hasText
      }, style: showSideBorders && { width: `${this.parentTabNavEl.indicatorWidth}px` } }, this.iconStart ? iconStartEl : null, hAsync("slot", null), this.iconEnd ? iconEndEl : null)));
  }
  async componentDidLoad() {
    this.calciteTabTitleRegister.emit(await this.getTabIdentifier());
  }
  componentDidRender() {
    updateHostInteraction(this, true);
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  tabChangeHandler(event) {
    if (event.composedPath().includes(this.parentTabNavEl)) {
      if (this.tab) {
        this.active = this.tab === event.detail.tab;
      }
      else {
        this.getTabIndex().then((index) => {
          this.active = index === event.detail.tab;
        });
      }
    }
  }
  onClick() {
    this.emitActiveTab();
  }
  keyDownHandler(e) {
    switch (e.key) {
      case " ":
      case "Enter":
        this.emitActiveTab();
        e.preventDefault();
        break;
      case "ArrowRight":
        if (getElementDir(this.el) === "ltr") {
          this.calciteTabsFocusNext.emit();
        }
        else {
          this.calciteTabsFocusPrevious.emit();
        }
        break;
      case "ArrowLeft":
        if (getElementDir(this.el) === "ltr") {
          this.calciteTabsFocusPrevious.emit();
        }
        else {
          this.calciteTabsFocusNext.emit();
        }
        break;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Return the index of this title within the nav
   */
  async getTabIndex() {
    return Array.prototype.indexOf.call(this.el.parentElement.querySelectorAll("calcite-tab-title"), this.el);
  }
  /**
   * @internal
   */
  async getTabIdentifier() {
    return this.tab ? this.tab : this.getTabIndex();
  }
  /**
   * @internal
   */
  async updateAriaInfo(tabIds = [], titleIds = []) {
    this.controls = tabIds[titleIds.indexOf(this.el.id)] || null;
  }
  updateHasText() {
    this.hasText = this.el.textContent.trim().length > 0;
  }
  setupTextContentObserver() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el, { childList: true, subtree: true });
  }
  emitActiveTab() {
    if (!this.disabled) {
      this.calciteTabsActivate.emit({
        tab: this.tab
      });
    }
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "active": ["activeTabChanged"]
  }; }
  static get style() { return tabTitleCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-tab-title",
    "$members$": {
      "active": [1540],
      "disabled": [516],
      "iconEnd": [513, "icon-end"],
      "iconFlipRtl": [513, "icon-flip-rtl"],
      "iconStart": [513, "icon-start"],
      "layout": [1537],
      "position": [1537],
      "scale": [1537],
      "bordered": [1540],
      "tab": [513],
      "controls": [32],
      "hasText": [32],
      "getTabIndex": [64],
      "getTabIdentifier": [64],
      "updateAriaInfo": [64]
    },
    "$listeners$": [[16, "calciteTabChange", "tabChangeHandler"], [0, "click", "onClick"], [0, "keydown", "keyDownHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["active", "active"], ["disabled", "disabled"], ["iconEnd", "icon-end"], ["iconFlipRtl", "icon-flip-rtl"], ["iconStart", "icon-start"], ["layout", "layout"], ["position", "position"], ["scale", "scale"], ["bordered", "bordered"], ["tab", "tab"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const SLOTS$4 = {
  tabNav: "tab-nav"
};

const tabsCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-tabs:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-tabs{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-tabs{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-tabs{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-tabs{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-tabs{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-tabs:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-tabs-h{display:none}/*!@:host*/.sc-calcite-tabs-h{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}/*!@:host([bordered])*/[bordered].sc-calcite-tabs-h{-webkit-box-shadow:inset 0 1px 0 var(--calcite-ui-border-1);box-shadow:inset 0 1px 0 var(--calcite-ui-border-1);background-color:var(--calcite-ui-foreground-1)}/*!@:host([bordered]:not([position=below])) ::slotted(calcite-tab-nav)*/.sc-calcite-tabs-h[bordered]:not([position=below]) .sc-calcite-tabs-s>calcite-tab-nav{margin-bottom:-1px}/*!@:host([bordered][position=below]) ::slotted(calcite-tab-nav)*/.sc-calcite-tabs-h[bordered][position=below] .sc-calcite-tabs-s>calcite-tab-nav{margin-top:-1px}/*!@:host([bordered][position=below])*/[bordered][position=below].sc-calcite-tabs-h{-webkit-box-shadow:inset 0 1px 0 var(--calcite-ui-border-1), inset 0 -1px 0 var(--calcite-ui-border-1);box-shadow:inset 0 1px 0 var(--calcite-ui-border-1), inset 0 -1px 0 var(--calcite-ui-border-1)}/*!@:host([bordered]) section*/[bordered].sc-calcite-tabs-h section.sc-calcite-tabs{border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-1)}/*!@:host([bordered][scale=s]) section*/[bordered][scale=s].sc-calcite-tabs-h section.sc-calcite-tabs{padding:0.75rem}/*!@:host([bordered][scale=m]) section*/[bordered][scale=m].sc-calcite-tabs-h section.sc-calcite-tabs{padding:0.5rem}/*!@:host([bordered][scale=l]) section*/[bordered][scale=l].sc-calcite-tabs-h section.sc-calcite-tabs{padding:1rem}/*!@:host([position=below])*/[position=below].sc-calcite-tabs-h{-ms-flex-direction:column-reverse;flex-direction:column-reverse}/*!@section*/section.sc-calcite-tabs{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;border-top-width:1px;border-top-color:var(--calcite-ui-border-1);overflow:hidden;border-top-style:solid}/*!@:host([position=below]) section*/[position=below].sc-calcite-tabs-h section.sc-calcite-tabs{-ms-flex-direction:column-reverse;flex-direction:column-reverse;border-top-width:0px;border-bottom-width:1px;border-bottom-color:var(--calcite-ui-border-1)}/*!@:host([position=below]:not([bordered])) section*/[position=below].sc-calcite-tabs-h:not([bordered]) section.sc-calcite-tabs{border-bottom-style:solid}";

/**
 * @slot - A slot for adding `calcite-tab`s.
 * @slot tab-nav - A slot for adding a tab navigation component.
 */
class Tabs {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    //--------------------------------------------------------------------------
    //
    //  Public Properties
    //
    //--------------------------------------------------------------------------
    /**
     * Align tab titles to the edge or fully justify them across the tab nav ("center")
     */
    this.layout = "inline";
    /**
     * Display the tabs above (default) or below the tab content
     */
    this.position = "above";
    /**
     * Specify the scale of the tabs component, defaults to m
     */
    this.scale = "m";
    /**
     * Optionally enable tabs to appear like a folder-style menu when its layout is "inline"
     */
    this.bordered = false;
    //--------------------------------------------------------------------------
    //
    //  Events
    //
    //--------------------------------------------------------------------------
    //--------------------------------------------------------------------------
    //
    //  Private State/Props
    //
    //--------------------------------------------------------------------------
    /**
     * @internal
     *
     * Stores an array of ids of `<calcite-tab-titles>`s to match up ARIA
     * attributes.
     */
    this.titles = [];
    /**
     * @internal
     *
     * Stores an array of ids of `<calcite-tab>`s to match up ARIA attributes.
     */
    this.tabs = [];
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    if (this.layout === "center") {
      this.bordered = false;
    }
  }
  render() {
    return (hAsync(Fragment, null, hAsync("slot", { name: SLOTS$4.tabNav }), hAsync("section", null, hAsync("slot", null))));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  /**
   * @internal
   */
  calciteTabTitleRegister(e) {
    this.titles = [...this.titles, e.target];
    this.registryHandler();
    e.stopPropagation();
  }
  /**
   * @internal
   */
  calciteTabTitleUnregister(e) {
    this.titles = this.titles.filter((el) => el !== e.detail);
    this.registryHandler();
    e.stopPropagation();
  }
  /**
   * @internal
   */
  calciteTabRegister(e) {
    this.tabs = [...this.tabs, e.target];
    this.registryHandler();
    e.stopPropagation();
  }
  /**
   * @internal
   */
  calciteTabUnregister(e) {
    this.tabs = this.tabs.filter((el) => el !== e.detail);
    this.registryHandler();
    e.stopPropagation();
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * @internal
   *
   * Matches up elements from the internal `tabs` and `titles` to automatically
   * update the ARIA attributes and link `<calcite-tab>` and
   * `<calcite-tab-title>` components.
   */
  async registryHandler() {
    let tabIds;
    let titleIds;
    // determine if we are using `tab` based or `index` based tab identifiers.
    if (this.tabs.some((e) => e.tab) || this.titles.some((e) => e.tab)) {
      // if we are using `tab` based identifiers sort by `tab` to account for
      // possible out of order tabs and get the id of each tab
      tabIds = this.tabs.sort((a, b) => a.tab.localeCompare(b.tab)).map((e) => e.id);
      titleIds = this.titles.sort((a, b) => a.tab.localeCompare(b.tab)).map((e) => e.id);
    }
    else {
      // if we are using index based tabs then the `<calcite-tab>` and
      // `<calcite-tab-title>` might have been rendered out of order so the
      // order of `this.tabs` and `this.titles` might not reflect the DOM state,
      // and might not match each other so we need to get the index of all the
      // tabs and titles in the DOM order to match them up as a source of truth
      const tabDomIndexes = await Promise.all(this.tabs.map((el) => el.getTabIndex()));
      const titleDomIndexes = await Promise.all(this.titles.map((el) => el.getTabIndex()));
      // once we have the DOM order as a source of truth we can build the
      // matching tabIds and titleIds arrays
      tabIds = tabDomIndexes.reduce((ids, indexInDOM, registryIndex) => {
        ids[indexInDOM] = this.tabs[registryIndex].id;
        return ids;
      }, []);
      titleIds = titleDomIndexes.reduce((ids, indexInDOM, registryIndex) => {
        ids[indexInDOM] = this.titles[registryIndex].id;
        return ids;
      }, []);
    }
    // pass all our new aria information to each `<calcite-tab>` and
    // `<calcite-tab-title>` which will check if they can update their internal
    // `controlled` or `labeledBy` states and re-render if necessary
    this.tabs.forEach((el) => el.updateAriaInfo(tabIds, titleIds));
    this.titles.forEach((el) => el.updateAriaInfo(tabIds, titleIds));
  }
  get el() { return getElement(this); }
  static get style() { return tabsCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-tabs",
    "$members$": {
      "layout": [513],
      "position": [513],
      "scale": [513],
      "bordered": [1540],
      "titles": [32],
      "tabs": [32]
    },
    "$listeners$": [[0, "calciteTabTitleRegister", "calciteTabTitleRegister"], [16, "calciteTabTitleUnregister", "calciteTabTitleUnregister"], [0, "calciteTabRegister", "calciteTabRegister"], [16, "calciteTabUnregister", "calciteTabUnregister"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["layout", "layout"], ["position", "position"], ["scale", "scale"], ["bordered", "bordered"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const SLOTS$3 = {
  contentStart: "content-start",
  contentEnd: "content-end"
};

const tileCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-tile:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-tile{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-tile{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-tile{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-tile{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-tile{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-tile:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-tile-h{display:none}/*!@:host*/.sc-calcite-tile-h{-webkit-box-sizing:border-box;box-sizing:border-box;display:inline-block;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-3);-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}/*!@:host .container*/.sc-calcite-tile-h .container.sc-calcite-tile{pointer-events:none;display:grid;grid-template-columns:repeat(1, minmax(0, 1fr));gap:0.5rem}/*!@:host .content*/.sc-calcite-tile-h .content.sc-calcite-tile{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;gap:0.5rem;width:10%}/*!@:host .content-container*/.sc-calcite-tile-h .content-container.sc-calcite-tile{display:-ms-flexbox;display:flex;width:100%;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-align:stretch;align-items:stretch;padding:0px;color:var(--calcite-ui-text-2);outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@:host .content-slot-container*/.sc-calcite-tile-h .content-slot-container.sc-calcite-tile{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;background-color:var(--calcite-ui-foreground-1)}/*!@:host .content-slot-container:first-child*/.sc-calcite-tile-h .content-slot-container.sc-calcite-tile:first-child{padding-right:0.75rem}/*!@:host .content-slot-container:last-child*/.sc-calcite-tile-h .content-slot-container.sc-calcite-tile:last-child{padding-left:0.75rem}/*!@:host .heading*/.sc-calcite-tile-h .heading.sc-calcite-tile{pointer-events:none;overflow-wrap:break-word;font-size:var(--calcite-font-size--1);line-height:1.375;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-2);-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}/*!@:host .large-visual*/.sc-calcite-tile-h .large-visual.sc-calcite-tile{-ms-flex-align:center;align-items:center;text-align:center;min-height:12rem}/*!@:host .large-visual .icon*/.sc-calcite-tile-h .large-visual.sc-calcite-tile .icon.sc-calcite-tile{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-item-align:end;align-self:flex-end}/*!@:host .large-visual .content-container*/.sc-calcite-tile-h .large-visual.sc-calcite-tile .content-container.sc-calcite-tile{-ms-flex-item-align:center;align-self:center}/*!@:host .description*/.sc-calcite-tile-h .description.sc-calcite-tile{pointer-events:none;font-size:var(--calcite-font-size--2);line-height:1.375;color:var(--calcite-ui-text-3);-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}/*!@:host(:not([embed]))*/.sc-calcite-tile-h:not([embed]){padding:0.75rem;-webkit-box-shadow:0 0 0 1px var(--calcite-ui-border-2);box-shadow:0 0 0 1px var(--calcite-ui-border-2)}/*!@:host(:not([embed])[href]:hover)*/.sc-calcite-tile-h:not([embed])[href]:hover{cursor:pointer;-webkit-box-shadow:0 0 0 2px var(--calcite-ui-brand);box-shadow:0 0 0 2px var(--calcite-ui-brand)}/*!@:host(:not([embed])[href]:active)*/.sc-calcite-tile-h:not([embed])[href]:active{-webkit-box-shadow:0 0 0 3px var(--calcite-ui-brand);box-shadow:0 0 0 3px var(--calcite-ui-brand)}/*!@:host([icon][heading]:not([description]):not([embed]))*/[icon][heading].sc-calcite-tile-h:not([description]):not([embed]){padding:0px}/*!@:host([icon][heading]:not([description])) .icon*/[icon][heading].sc-calcite-tile-h:not([description]) .icon.sc-calcite-tile{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}/*!@:host([icon][heading]:not([description])) .large-visual*/[icon][heading].sc-calcite-tile-h:not([description]) .large-visual.sc-calcite-tile{text-align:center}/*!@:host([disabled])*/[disabled].sc-calcite-tile-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-tile-h[disabled] .sc-calcite-tile-s>[calcite-hydrated][disabled],[disabled].sc-calcite-tile-h [calcite-hydrated][disabled].sc-calcite-tile{opacity:1}/*!@:host(:hover) .heading, :host([active]) .heading*/.sc-calcite-tile-h:hover .heading.sc-calcite-tile,[active].sc-calcite-tile-h .heading.sc-calcite-tile{color:var(--calcite-ui-text-1)}/*!@:host(:hover) .description, :host([active]) .description*/.sc-calcite-tile-h:hover .description.sc-calcite-tile,[active].sc-calcite-tile-h .description.sc-calcite-tile{color:var(--calcite-ui-text-2)}";

/**
 * @slot content-start - A slot for adding non-actionable elements before the tile content.
 * @slot content-end - A slot for adding non-actionable elements after the tile content.
 */
class Tile {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** The active state of the tile. */
    this.active = false;
    /**
     * When true, prevents interaction.
     */
    this.disabled = false;
    /** The embed mode of the tile.  When true, renders without a border and padding for use by other components. */
    this.embed = false;
    /**
     * The focused state of the tile.
     * @internal
     */
    this.focused = false;
    /** The hidden state of the tile. */
    this.hidden = false;
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderTile() {
    const { icon, el, heading, description } = this;
    const isLargeVisual = heading && icon && !description;
    const iconStyle = isLargeVisual
      ? {
        height: "64px",
        width: "64px"
      }
      : undefined;
    return (hAsync("div", { class: { container: true, "large-visual": isLargeVisual } }, icon && (hAsync("div", { class: "icon" }, hAsync("calcite-icon", { icon: icon, scale: "l", style: iconStyle }))), hAsync("div", { class: "content-container" }, getSlotted(el, SLOTS$3.contentStart) ? (hAsync("div", { class: "content-slot-container" }, hAsync("slot", { name: SLOTS$3.contentStart }))) : null, hAsync("div", { class: "content" }, heading && hAsync("div", { class: "heading" }, heading), description && hAsync("div", { class: "description" }, description)), getSlotted(el, SLOTS$3.contentEnd) ? (hAsync("div", { class: "content-slot-container" }, hAsync("slot", { name: SLOTS$3.contentEnd }))) : null)));
  }
  render() {
    return (hAsync(Fragment, null, this.href ? (hAsync("calcite-link", { disabled: this.disabled, href: this.href }, this.renderTile())) : (this.renderTile())));
  }
  get el() { return getElement(this); }
  static get style() { return tileCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-tile",
    "$members$": {
      "active": [516],
      "description": [513],
      "disabled": [516],
      "embed": [516],
      "focused": [516],
      "heading": [513],
      "hidden": [516],
      "href": [513],
      "icon": [513]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["active", "active"], ["description", "description"], ["disabled", "disabled"], ["embed", "embed"], ["focused", "focused"], ["heading", "heading"], ["hidden", "hidden"], ["href", "href"], ["icon", "icon"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$6 = {
  checked: "checked",
  description: "description",
  descriptionOnly: "description-only",
  disabled: "disabled",
  heading: "heading",
  headingOnly: "heading-only",
  icon: "icon",
  iconOnly: "icon-only",
  inputAlignmentEnd: "input-alignment-end",
  inputAlignmentStart: "input-alignment-start",
  inputEnabled: "input-enabled",
  largeVisual: "large-visual",
  widthAuto: "width-auto",
  widthFull: "width-full"
};

const tileSelectCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-tile-select:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-tile-select{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-tile-select{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-tile-select{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-tile-select{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-tile-select{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-tile-select:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-tile-select-h{display:none}/*!@:host*/.sc-calcite-tile-select-h{display:block}/*!@:host .container*/.sc-calcite-tile-select-h .container.sc-calcite-tile-select{background-color:var(--calcite-ui-foreground-1);-webkit-box-shadow:0 0 0 1px var(--calcite-ui-border-2);box-shadow:0 0 0 1px var(--calcite-ui-border-2);-webkit-box-sizing:border-box;box-sizing:border-box;cursor:pointer;display:inline-block;height:100%;max-width:300px;padding:0.75rem;position:relative;-webkit-transition:var(--calcite-animation-timing);transition:var(--calcite-animation-timing);vertical-align:top;z-index:10}/*!@:host .container.checked*/.sc-calcite-tile-select-h .container.checked.sc-calcite-tile-select{z-index:30;-webkit-box-shadow:0 0 0 1px var(--calcite-ui-brand);box-shadow:0 0 0 1px var(--calcite-ui-brand)}/*!@:host .container.heading-only*/.sc-calcite-tile-select-h .container.heading-only.sc-calcite-tile-select{-ms-flex-align:center;align-items:center}/*!@:host .container:not(.input-enabled) ::slotted(calcite-checkbox), :host .container:not(.input-enabled) ::slotted(calcite-radio-button)*/.sc-calcite-tile-select-h .container:not(.input-enabled) .sc-calcite-tile-select-s>calcite-checkbox,.sc-calcite-tile-select-h .container:not(.input-enabled) .sc-calcite-tile-select-s>calcite-radio-button{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}/*!@:host .container.focused:not(.disabled)*/.sc-calcite-tile-select-h .container.focused.sc-calcite-tile-select:not(.disabled){z-index:30}/*!@:host .container.focused:not(.disabled):not(.input-enabled)*/.sc-calcite-tile-select-h .container.focused.sc-calcite-tile-select:not(.disabled):not(.input-enabled){-webkit-box-shadow:0 0 0 1px var(--calcite-ui-brand), inset 0 0 0 2px var(--calcite-ui-foreground-1), inset 0 0 0 5px var(--calcite-ui-brand);box-shadow:0 0 0 1px var(--calcite-ui-brand), inset 0 0 0 2px var(--calcite-ui-foreground-1), inset 0 0 0 5px var(--calcite-ui-brand)}/*!@:host .container.input-enabled.input-alignment-start.width-auto.heading-only, :host .container.input-enabled.input-alignment-start.width-auto.icon-only, :host .container.input-enabled.input-alignment-start.width-auto.description-only, :host .container.input-enabled.input-alignment-start.width-auto.heading.description, :host .container.input-enabled.input-alignment-start.width-auto.icon.description, :host .container.input-enabled.input-alignment-start.width-auto.heading.icon.description*/.sc-calcite-tile-select-h .container.input-enabled.input-alignment-start.width-auto.heading-only.sc-calcite-tile-select,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-start.width-auto.icon-only.sc-calcite-tile-select,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-start.width-auto.description-only.sc-calcite-tile-select,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-start.width-auto.heading.description.sc-calcite-tile-select,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-start.width-auto.icon.description.sc-calcite-tile-select,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-start.width-auto.heading.icon.description.sc-calcite-tile-select{display:inline-grid;grid-template-columns:-webkit-max-content 1fr;grid-template-columns:max-content 1fr}/*!@:host .container.input-enabled.input-alignment-start.heading-only, :host .container.input-enabled.input-alignment-start.icon-only, :host .container.input-enabled.input-alignment-start.description-only, :host .container.input-enabled.input-alignment-start.heading.description, :host .container.input-enabled.input-alignment-start.icon.description, :host .container.input-enabled.input-alignment-start.heading.icon.description*/.sc-calcite-tile-select-h .container.input-enabled.input-alignment-start.heading-only.sc-calcite-tile-select,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-start.icon-only.sc-calcite-tile-select,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-start.description-only.sc-calcite-tile-select,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-start.heading.description.sc-calcite-tile-select,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-start.icon.description.sc-calcite-tile-select,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-start.heading.icon.description.sc-calcite-tile-select{gap:0.75rem}/*!@:host .container.input-enabled.input-alignment-start calcite-tile*/.sc-calcite-tile-select-h .container.input-enabled.input-alignment-start.sc-calcite-tile-select calcite-tile.sc-calcite-tile-select{-ms-flex-order:1;order:1}/*!@:host .container.input-enabled.input-alignment-start.large-visual ::slotted(calcite-checkbox),\n:host .container.input-enabled.input-alignment-start.large-visual ::slotted(calcite-radio-button)*/.sc-calcite-tile-select-h .container.input-enabled.input-alignment-start.large-visual .sc-calcite-tile-select-s>calcite-checkbox,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-start.large-visual .sc-calcite-tile-select-s>calcite-radio-button{position:absolute;inset-block-start:0.75rem;inset-inline-start:0.75rem}/*!@:host .container.input-enabled.input-alignment-end.width-auto.heading-only, :host .container.input-enabled.input-alignment-end.width-auto.icon-only*/.sc-calcite-tile-select-h .container.input-enabled.input-alignment-end.width-auto.heading-only.sc-calcite-tile-select,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-end.width-auto.icon-only.sc-calcite-tile-select{display:inline-grid;grid-gap:0.75rem;grid-template-columns:-webkit-max-content 1fr;grid-template-columns:max-content 1fr}/*!@:host .container.input-enabled.input-alignment-end.heading-only, :host .container.input-enabled.input-alignment-end.icon-only*/.sc-calcite-tile-select-h .container.input-enabled.input-alignment-end.heading-only.sc-calcite-tile-select,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-end.icon-only.sc-calcite-tile-select{gap:0.75rem}/*!@:host .container.input-enabled.input-alignment-end.description-only ::slotted(calcite-checkbox),\n:host .container.input-enabled.input-alignment-end.description-only ::slotted(calcite-radio-button), :host .container.input-enabled.input-alignment-end.heading.description ::slotted(calcite-checkbox),\n:host .container.input-enabled.input-alignment-end.heading.description ::slotted(calcite-radio-button), :host .container.input-enabled.input-alignment-end.icon.description ::slotted(calcite-checkbox),\n:host .container.input-enabled.input-alignment-end.icon.description ::slotted(calcite-radio-button), :host .container.input-enabled.input-alignment-end.heading.icon.description ::slotted(calcite-checkbox),\n:host .container.input-enabled.input-alignment-end.heading.icon.description ::slotted(calcite-radio-button)*/.sc-calcite-tile-select-h .container.input-enabled.input-alignment-end.description-only .sc-calcite-tile-select-s>calcite-checkbox,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-end.description-only .sc-calcite-tile-select-s>calcite-radio-button,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-end.heading.description .sc-calcite-tile-select-s>calcite-checkbox,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-end.heading.description .sc-calcite-tile-select-s>calcite-radio-button,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-end.icon.description .sc-calcite-tile-select-s>calcite-checkbox,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-end.icon.description .sc-calcite-tile-select-s>calcite-radio-button,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-end.heading.icon.description .sc-calcite-tile-select-s>calcite-checkbox,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-end.heading.icon.description .sc-calcite-tile-select-s>calcite-radio-button{position:absolute;inset-block-start:0.75rem;inset-inline-end:0.75rem}/*!@:host .container.input-enabled.input-alignment-end.large-visual ::slotted(calcite-checkbox),\n:host .container.input-enabled.input-alignment-end.large-visual ::slotted(calcite-radio-button)*/.sc-calcite-tile-select-h .container.input-enabled.input-alignment-end.large-visual .sc-calcite-tile-select-s>calcite-checkbox,.sc-calcite-tile-select-h .container.input-enabled.input-alignment-end.large-visual .sc-calcite-tile-select-s>calcite-radio-button{position:absolute;inset-block-start:0.75rem;inset-inline-end:0.75rem}/*!@:host .container.width-full*/.sc-calcite-tile-select-h .container.width-full.sc-calcite-tile-select{display:-ms-flexbox;display:flex;max-width:none}/*!@:host .container.width-full calcite-tile*/.sc-calcite-tile-select-h .container.width-full.sc-calcite-tile-select calcite-tile.sc-calcite-tile-select{-ms-flex:1 1 auto;flex:1 1 auto}/*!@:host(:hover) .container*/.sc-calcite-tile-select-h:hover .container.sc-calcite-tile-select{z-index:20}/*!@:host(:hover) .container:not(.input-enabled)*/.sc-calcite-tile-select-h:hover .container.sc-calcite-tile-select:not(.input-enabled){-webkit-box-shadow:0 0 0 1px var(--calcite-ui-brand);box-shadow:0 0 0 1px var(--calcite-ui-brand)}/*!@:host([disabled])*/[disabled].sc-calcite-tile-select-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-tile-select-h[disabled] .sc-calcite-tile-select-s>[calcite-hydrated][disabled],[disabled].sc-calcite-tile-select-h [calcite-hydrated][disabled].sc-calcite-tile-select{opacity:1}";

/**
 * @slot - A slot for adding custom content.
 */
class TileSelect {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteTileSelectChange = createEvent(this, "calciteTileSelectChange", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** The checked state of the tile select. */
    this.checked = false;
    /** The disabled state of the tile select. */
    this.disabled = false;
    /** The hidden state of the tile select. */
    this.hidden = false;
    /** Display an interactive radio or checkbox. */
    this.inputEnabled = false;
    /** The side of the tile that the radio or checkbox appears on when inputEnabled is true. */
    this.inputAlignment = "start";
    /** The selection mode of the tile select: radio (single) or checkbox (multiple). */
    this.type = "radio";
    /** specify the width of the tile, defaults to auto */
    this.width = "auto";
    this.guid = `calcite-tile-select-${guid()}`;
    //--------------------------------------------------------------------------
    //
    //  State
    //
    //--------------------------------------------------------------------------
    /** The focused state of the tile-select. */
    this.focused = false;
  }
  checkedChanged(newChecked) {
    this.input.checked = newChecked;
  }
  nameChanged(newName) {
    this.input.name = newName;
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    this.input.setFocus();
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  checkboxChangeHandler(event) {
    const checkbox = event.target;
    if (checkbox === this.input) {
      this.checked = checkbox.checked;
    }
    event.stopPropagation();
    this.calciteTileSelectChange.emit();
  }
  checkboxFocusBlurHandler(event) {
    const checkbox = event.target;
    if (checkbox === this.input) {
      this.focused = event.detail;
    }
    event.stopPropagation();
  }
  radioButtonChangeHandler(event) {
    const radioButton = event.target;
    if (radioButton === this.input) {
      this.checked = radioButton.checked;
    }
    event.stopPropagation();
    this.calciteTileSelectChange.emit();
  }
  radioButtonCheckedChangeHandler(event) {
    const radioButton = event.target;
    if (radioButton === this.input) {
      this.checked = radioButton.checked;
    }
    event.stopPropagation();
  }
  radioButtonFocusBlurHandler(event) {
    const radioButton = event.target;
    if (radioButton === this.input) {
      this.focused = radioButton.focused;
    }
    event.stopPropagation();
  }
  click(event) {
    const target = event.target;
    const targets = ["calcite-tile", "calcite-tile-select"];
    if (targets.includes(target.localName)) {
      this.input.click();
    }
  }
  mouseenter() {
    if (this.input.localName === "calcite-radio-button") {
      this.input.hovered = true;
    }
    if (this.input.localName === "calcite-checkbox") {
      this.input.hovered = true;
    }
  }
  mouseleave() {
    if (this.input.localName === "calcite-radio-button") {
      this.input.hovered = false;
    }
    if (this.input.localName === "calcite-checkbox") {
      this.input.hovered = false;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    this.renderInput();
  }
  disconnectedCallback() {
    this.input.parentNode.removeChild(this.input);
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderInput() {
    this.input = document.createElement(this.type === "radio" ? "calcite-radio-button" : "calcite-checkbox");
    this.input.checked = this.checked;
    this.input.disabled = this.disabled;
    this.input.hidden = this.hidden;
    this.input.id = this.guid;
    this.input.label = this.heading || this.name || "";
    if (this.name) {
      this.input.name = this.name;
    }
    if (this.value) {
      this.input.value = this.value != null ? this.value.toString() : "";
    }
    this.el.insertAdjacentElement("beforeend", this.input);
  }
  render() {
    const { checked, description, disabled, focused, heading, icon, inputAlignment, inputEnabled, width } = this;
    return (hAsync("div", { class: {
        checked,
        container: true,
        [CSS$6.description]: Boolean(description),
        [CSS$6.descriptionOnly]: Boolean(!heading && !icon && description),
        disabled,
        focused,
        [CSS$6.heading]: Boolean(heading),
        [CSS$6.headingOnly]: heading && !icon && !description,
        [CSS$6.icon]: Boolean(icon),
        [CSS$6.iconOnly]: !heading && icon && !description,
        [CSS$6.inputAlignmentEnd]: inputAlignment === "end",
        [CSS$6.inputAlignmentStart]: inputAlignment === "start",
        [CSS$6.inputEnabled]: inputEnabled,
        [CSS$6.largeVisual]: heading && icon && !description,
        [CSS$6.widthAuto]: width === "auto",
        [CSS$6.widthFull]: width === "full"
      } }, hAsync("calcite-tile", { active: checked, description: description, embed: true, heading: heading, icon: icon }), hAsync("slot", null)));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "checked": ["checkedChanged"],
    "name": ["nameChanged"]
  }; }
  static get style() { return tileSelectCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-tile-select",
    "$members$": {
      "checked": [1540],
      "description": [513],
      "disabled": [516],
      "heading": [513],
      "hidden": [516],
      "icon": [513],
      "name": [520],
      "inputEnabled": [516, "input-enabled"],
      "inputAlignment": [513, "input-alignment"],
      "type": [513],
      "value": [8],
      "width": [513],
      "focused": [32],
      "setFocus": [64]
    },
    "$listeners$": [[0, "calciteCheckboxChange", "checkboxChangeHandler"], [0, "calciteInternalCheckboxFocus", "checkboxFocusBlurHandler"], [0, "calciteInternalCheckboxBlur", "checkboxFocusBlurHandler"], [0, "calciteRadioButtonChange", "radioButtonChangeHandler"], [0, "calciteInternalRadioButtonCheckedChange", "radioButtonCheckedChangeHandler"], [0, "calciteInternalRadioButtonFocus", "radioButtonFocusBlurHandler"], [0, "calciteInternalRadioButtonBlur", "radioButtonFocusBlurHandler"], [0, "click", "click"], [1, "mouseenter", "mouseenter"], [1, "mouseleave", "mouseleave"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["checked", "checked"], ["description", "description"], ["disabled", "disabled"], ["heading", "heading"], ["hidden", "hidden"], ["icon", "icon"], ["name", "name"], ["inputEnabled", "input-enabled"], ["inputAlignment", "input-alignment"], ["type", "type"], ["width", "width"]]
  }; }
}

const tileSelectGroupCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-tile-select-group:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-tile-select-group{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-tile-select-group{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-tile-select-group{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-tile-select-group{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-tile-select-group{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-tile-select-group:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-tile-select-group-h{display:none}/*!@:host*/.sc-calcite-tile-select-group-h{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}/*!@:host ::slotted(calcite-tile-select)*/.sc-calcite-tile-select-group-h .sc-calcite-tile-select-group-s>calcite-tile-select{margin-right:1px;margin-bottom:1px}/*!@:host([layout=vertical])*/[layout=vertical].sc-calcite-tile-select-group-h{-ms-flex-direction:column;flex-direction:column}/*!@:host([disabled])*/[disabled].sc-calcite-tile-select-group-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-tile-select-group-h[disabled] .sc-calcite-tile-select-group-s>[calcite-hydrated][disabled],[disabled].sc-calcite-tile-select-group-h [calcite-hydrated][disabled].sc-calcite-tile-select-group{opacity:1}";

/**
 * @slot - A slot for adding `calcite-tile-select`s.
 */
class TileSelectGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** The disabled state of the tile select. */
    this.disabled = false;
    /** Tiles by default move horizontally, stacking with each row, vertical allows single-column layouts */
    this.layout = "horizontal";
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentDidRender() {
    updateHostInteraction(this);
  }
  render() {
    return hAsync("slot", null);
  }
  get el() { return getElement(this); }
  static get style() { return tileSelectGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-tile-select-group",
    "$members$": {
      "disabled": [516],
      "layout": [513]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["layout", "layout"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$5 = {
  button: "button",
  buttonBottomLeft: "button--bottom-left",
  buttonBottomRight: "button--bottom-right",
  buttonHourDown: "button--hour-down",
  buttonHourUp: "button--hour-up",
  buttonMeridiemDown: "button--meridiem-down",
  buttonMeridiemUp: "button--meridiem-up",
  buttonMinuteDown: "button--minute-down",
  buttonMinuteUp: "button--minute-up",
  buttonSecondDown: "button--second-down",
  buttonSecondUp: "button--second-up",
  buttonTopLeft: "button--top-left",
  buttonTopRight: "button--top-right",
  column: "column",
  delimiter: "delimiter",
  hour: "hour",
  input: "input",
  meridiem: "meridiem",
  minute: "minute",
  second: "second",
  showMeridiem: "show-meridiem",
  showSecond: "show-second",
  "scale-s": "scale-s",
  "scale-m": "scale-m",
  "scale-l": "scale-l",
  timePicker: "time-picker",
  meridiemStart: "meridiem--start"
};
const TEXT$2 = {
  hour: "Hour",
  hourDown: "Decrease hour",
  hourUp: "Increase hour",
  meridiem: "AM/PM",
  meridiemDown: "Decrease AM/PM",
  meridiemUp: "Increase AM/PM",
  minute: "Minute",
  minuteDown: "Decrease minute",
  minuteUp: "Increase minute",
  second: "Second",
  secondDown: "Decrease second",
  secondUp: "Increase second"
};

const timePickerCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-time-picker:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-time-picker{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-time-picker{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-time-picker{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-time-picker{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-time-picker{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-time-picker:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-time-picker-h{display:none}/*!@:host*/.sc-calcite-time-picker-h{display:inline-block}/*!@.time-picker*/.time-picker.sc-calcite-time-picker{display:-ms-flexbox;display:flex;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-flex-align:center;align-items:center;background-color:var(--calcite-ui-foreground-1);font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1);--tw-shadow:0 6px 20px -4px rgba(0, 0, 0, 0.1), 0 4px 12px -2px rgba(0, 0, 0, 0.08);--tw-shadow-colored:0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);border-radius:var(--calcite-border-radius)}/*!@.time-picker .column*/.time-picker.sc-calcite-time-picker .column.sc-calcite-time-picker{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}/*!@.time-picker .meridiem--start*/.time-picker.sc-calcite-time-picker .meridiem--start.sc-calcite-time-picker{-ms-flex-order:-1;order:-1}/*!@.time-picker .button*/.time-picker.sc-calcite-time-picker .button.sc-calcite-time-picker{display:-ms-inline-flexbox;display:inline-flex;cursor:pointer;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background-color:var(--calcite-ui-foreground-1)}/*!@.time-picker .button:hover, .time-picker .button:focus*/.time-picker.sc-calcite-time-picker .button.sc-calcite-time-picker:hover,.time-picker.sc-calcite-time-picker .button.sc-calcite-time-picker:focus{background-color:var(--calcite-ui-foreground-2);outline:2px solid transparent;outline-offset:2px}/*!@.time-picker .button:active*/.time-picker.sc-calcite-time-picker .button.sc-calcite-time-picker:active{background-color:var(--calcite-ui-foreground-3)}/*!@.time-picker .button.top-left*/.time-picker.sc-calcite-time-picker .button.top-left.sc-calcite-time-picker{border-top-left-radius:var(--calcite-border-radius)}/*!@.time-picker .button.bottom-left*/.time-picker.sc-calcite-time-picker .button.bottom-left.sc-calcite-time-picker{border-bottom-left-radius:var(--calcite-border-radius)}/*!@.time-picker .button.top-right*/.time-picker.sc-calcite-time-picker .button.top-right.sc-calcite-time-picker{border-top-right-radius:var(--calcite-border-radius)}/*!@.time-picker .button.bottom-right*/.time-picker.sc-calcite-time-picker .button.bottom-right.sc-calcite-time-picker{border-bottom-right-radius:var(--calcite-border-radius)}/*!@.time-picker .button calcite-icon*/.time-picker.sc-calcite-time-picker .button.sc-calcite-time-picker calcite-icon.sc-calcite-time-picker{color:var(--calcite-ui-text-3)}/*!@.time-picker .input*/.time-picker.sc-calcite-time-picker .input.sc-calcite-time-picker{display:-ms-inline-flexbox;display:inline-flex;cursor:pointer;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background-color:var(--calcite-ui-foreground-1);font-weight:var(--calcite-font-weight-medium)}/*!@.time-picker .input:hover*/.time-picker.sc-calcite-time-picker .input.sc-calcite-time-picker:hover{-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-foreground-2);box-shadow:inset 0 0 0 2px var(--calcite-ui-foreground-2)}/*!@.time-picker .input:focus, .time-picker .input:hover:focus*/.time-picker.sc-calcite-time-picker .input.sc-calcite-time-picker:focus,.time-picker.sc-calcite-time-picker .input.sc-calcite-time-picker:hover:focus{outline:2px solid transparent;outline-offset:2px;-webkit-box-shadow:inset 0 0 0 2px var(--calcite-ui-brand);box-shadow:inset 0 0 0 2px var(--calcite-ui-brand)}/*!@.time-picker.scale-s*/.time-picker.scale-s.sc-calcite-time-picker{font-size:var(--calcite-font-size--1)}/*!@.time-picker.scale-s .button, .time-picker.scale-s .input*/.time-picker.scale-s.sc-calcite-time-picker .button.sc-calcite-time-picker,.time-picker.scale-s.sc-calcite-time-picker .input.sc-calcite-time-picker{padding-left:0.75rem;padding-right:0.75rem;padding-top:0.25rem;padding-bottom:0.25rem}/*!@.time-picker.scale-s:not(.show-meridiem) .delimiter:last-child*/.time-picker.scale-s.sc-calcite-time-picker:not(.show-meridiem) .delimiter.sc-calcite-time-picker:last-child{-webkit-padding-end:0.75rem;padding-inline-end:0.75rem}/*!@.time-picker.scale-m*/.time-picker.scale-m.sc-calcite-time-picker{font-size:var(--calcite-font-size-0)}/*!@.time-picker.scale-m .button, .time-picker.scale-m .input*/.time-picker.scale-m.sc-calcite-time-picker .button.sc-calcite-time-picker,.time-picker.scale-m.sc-calcite-time-picker .input.sc-calcite-time-picker{padding-left:1rem;padding-right:1rem;padding-top:0.5rem;padding-bottom:0.5rem}/*!@.time-picker.scale-m:not(.show-meridiem) .delimiter:last-child*/.time-picker.scale-m.sc-calcite-time-picker:not(.show-meridiem) .delimiter.sc-calcite-time-picker:last-child{-webkit-padding-end:1rem;padding-inline-end:1rem}/*!@.time-picker.scale-l*/.time-picker.scale-l.sc-calcite-time-picker{font-size:var(--calcite-font-size-1)}/*!@.time-picker.scale-l .button, .time-picker.scale-l .input*/.time-picker.scale-l.sc-calcite-time-picker .button.sc-calcite-time-picker,.time-picker.scale-l.sc-calcite-time-picker .input.sc-calcite-time-picker{padding-left:1.25rem;padding-right:1.25rem;padding-top:0.75rem;padding-bottom:0.75rem}/*!@.time-picker.scale-l:not(.show-meridiem) .delimiter:last-child*/.time-picker.scale-l.sc-calcite-time-picker:not(.show-meridiem) .delimiter.sc-calcite-time-picker:last-child{-webkit-padding-end:1.25rem;padding-inline-end:1.25rem}";

function capitalize(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}
class TimePicker {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteTimePickerBlur = createEvent(this, "calciteTimePickerBlur", 7);
    this.calciteTimePickerChange = createEvent(this, "calciteTimePickerChange", 7);
    this.calciteTimePickerFocus = createEvent(this, "calciteTimePickerFocus", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** aria-label for the hour input
     * @default "Hour"
     */
    this.intlHour = TEXT$2.hour;
    /** aria-label for the hour down button
     * @default "Decrease hour"
     */
    this.intlHourDown = TEXT$2.hourDown;
    /** aria-label for the hour up button
     * @default "Increase hour"
     */
    this.intlHourUp = TEXT$2.hourUp;
    /** aria-label for the meridiem (am/pm) input
     * @default "AM/PM"
     */
    this.intlMeridiem = TEXT$2.meridiem;
    /** aria-label for the meridiem (am/pm) down button
     * @default "Decrease AM/PM"
     */
    this.intlMeridiemDown = TEXT$2.meridiemDown;
    /** aria-label for the meridiem (am/pm) up button
     * @default "Increase AM/PM"
     */
    this.intlMeridiemUp = TEXT$2.meridiemUp;
    /** aria-label for the minute input
     * @default "Minute"
     */
    this.intlMinute = TEXT$2.minute;
    /** aria-label for the minute down button
     * @default "Decrease minute"
     */
    this.intlMinuteDown = TEXT$2.minuteDown;
    /** aria-label for the minute up button
     * @default "Increase minute"
     */
    this.intlMinuteUp = TEXT$2.minuteUp;
    /** aria-label for the second input
     * @default "Second"
     */
    this.intlSecond = TEXT$2.second;
    /** aria-label for the second down button
     * @default "Decrease second"
     */
    this.intlSecondDown = TEXT$2.secondDown;
    /** aria-label for the second up button
     * @default "Increase second"
     */
    this.intlSecondUp = TEXT$2.secondUp;
    /**
     * BCP 47 language tag for desired language and country format
     * @internal
     */
    this.locale = document.documentElement.lang || navigator.language || "en";
    /** The scale (size) of the time picker */
    this.scale = "m";
    /** number (seconds) that specifies the granularity that the value must adhere to */
    this.step = 60;
    /** The selected time in UTC (always 24-hour format) */
    this.value = null;
    this.showSecond = this.step < 60;
    this.decrementHour = () => {
      const newHour = !this.hour ? 0 : this.hour === "00" ? 23 : parseInt(this.hour) - 1;
      this.setValuePart("hour", newHour);
    };
    this.decrementMeridiem = () => {
      const newMeridiem = this.meridiem === "PM" ? "AM" : "PM";
      this.setValuePart("meridiem", newMeridiem);
    };
    this.decrementMinuteOrSecond = (key) => {
      let newValue;
      if (isValidNumber(this[key])) {
        const valueAsNumber = parseInt(this[key]);
        newValue = valueAsNumber === 0 ? 59 : valueAsNumber - 1;
      }
      else {
        newValue = 59;
      }
      this.setValuePart(key, newValue);
    };
    this.decrementMinute = () => {
      this.decrementMinuteOrSecond("minute");
    };
    this.decrementSecond = () => {
      this.decrementMinuteOrSecond("second");
    };
    this.focusHandler = (event) => {
      this.activeEl = event.currentTarget;
    };
    this.hourDownButtonKeyDownHandler = (event) => {
      if (this.buttonActivated(event)) {
        this.decrementHour();
      }
    };
    this.hourKeyDownHandler = (event) => {
      const key = event.key;
      if (numberKeys.includes(key)) {
        const keyAsNumber = parseInt(key);
        let newHour;
        if (isValidNumber(this.hour)) {
          switch (this.hourCycle) {
            case "12":
              newHour =
                this.hour === "01" && keyAsNumber >= 0 && keyAsNumber <= 2
                  ? `1${keyAsNumber}`
                  : keyAsNumber;
              break;
            case "24":
              if (this.hour === "01") {
                newHour = `1${keyAsNumber}`;
              }
              else if (this.hour === "02" && keyAsNumber >= 0 && keyAsNumber <= 3) {
                newHour = `2${keyAsNumber}`;
              }
              else {
                newHour = keyAsNumber;
              }
              break;
          }
        }
        else {
          newHour = keyAsNumber;
        }
        this.setValuePart("hour", newHour);
      }
      else {
        switch (key) {
          case "Backspace":
          case "Delete":
            this.setValuePart("hour", null);
            break;
          case "ArrowDown":
            event.preventDefault();
            this.decrementHour();
            break;
          case "ArrowUp":
            event.preventDefault();
            this.incrementHour();
            break;
          case " ":
          case "Spacebar":
            event.preventDefault();
            break;
        }
      }
    };
    this.hourUpButtonKeyDownHandler = (event) => {
      if (this.buttonActivated(event)) {
        this.incrementHour();
      }
    };
    this.incrementMeridiem = () => {
      const newMeridiem = this.meridiem === "AM" ? "PM" : "AM";
      this.setValuePart("meridiem", newMeridiem);
    };
    this.incrementHour = () => {
      const newHour = isValidNumber(this.hour)
        ? this.hour === "23"
          ? 0
          : parseInt(this.hour) + 1
        : 1;
      this.setValuePart("hour", newHour);
    };
    this.incrementMinuteOrSecond = (key) => {
      const newValue = isValidNumber(this[key])
        ? this[key] === "59"
          ? 0
          : parseInt(this[key]) + 1
        : 0;
      this.setValuePart(key, newValue);
    };
    this.incrementMinute = () => {
      this.incrementMinuteOrSecond("minute");
    };
    this.incrementSecond = () => {
      this.incrementMinuteOrSecond("second");
    };
    this.meridiemDownButtonKeyDownHandler = (event) => {
      if (this.buttonActivated(event)) {
        this.decrementMeridiem();
      }
    };
    this.meridiemKeyDownHandler = (event) => {
      switch (event.key) {
        case "a":
          this.setValuePart("meridiem", "AM");
          break;
        case "p":
          this.setValuePart("meridiem", "PM");
          break;
        case "Backspace":
        case "Delete":
          this.setValuePart("meridiem", null);
          break;
        case "ArrowUp":
          event.preventDefault();
          this.incrementMeridiem();
          break;
        case "ArrowDown":
          event.preventDefault();
          this.decrementMeridiem();
          break;
        case " ":
        case "Spacebar":
          event.preventDefault();
          break;
      }
    };
    this.meridiemUpButtonKeyDownHandler = (event) => {
      if (this.buttonActivated(event)) {
        this.incrementMeridiem();
      }
    };
    this.minuteDownButtonKeyDownHandler = (event) => {
      if (this.buttonActivated(event)) {
        this.decrementMinute();
      }
    };
    this.minuteKeyDownHandler = (event) => {
      const key = event.key;
      if (numberKeys.includes(key)) {
        const keyAsNumber = parseInt(key);
        let newMinute;
        if (isValidNumber(this.minute) && this.minute.startsWith("0")) {
          const minuteAsNumber = parseInt(this.minute);
          newMinute =
            minuteAsNumber > maxTenthForMinuteAndSecond
              ? keyAsNumber
              : `${minuteAsNumber}${keyAsNumber}`;
        }
        else {
          newMinute = keyAsNumber;
        }
        this.setValuePart("minute", newMinute);
      }
      else {
        switch (key) {
          case "Backspace":
          case "Delete":
            this.setValuePart("minute", null);
            break;
          case "ArrowDown":
            event.preventDefault();
            this.decrementMinute();
            break;
          case "ArrowUp":
            event.preventDefault();
            this.incrementMinute();
            break;
          case " ":
          case "Spacebar":
            event.preventDefault();
            break;
        }
      }
    };
    this.minuteUpButtonKeyDownHandler = (event) => {
      if (this.buttonActivated(event)) {
        this.incrementMinute();
      }
    };
    this.secondDownButtonKeyDownHandler = (event) => {
      if (this.buttonActivated(event)) {
        this.decrementSecond();
      }
    };
    this.secondKeyDownHandler = (event) => {
      const key = event.key;
      if (numberKeys.includes(key)) {
        const keyAsNumber = parseInt(key);
        let newSecond;
        if (isValidNumber(this.second) && this.second.startsWith("0")) {
          const secondAsNumber = parseInt(this.second);
          newSecond =
            secondAsNumber > maxTenthForMinuteAndSecond
              ? keyAsNumber
              : `${secondAsNumber}${keyAsNumber}`;
        }
        else {
          newSecond = keyAsNumber;
        }
        this.setValuePart("second", newSecond);
      }
      else {
        switch (key) {
          case "Backspace":
          case "Delete":
            this.setValuePart("second", null);
            break;
          case "ArrowDown":
            event.preventDefault();
            this.decrementSecond();
            break;
          case "ArrowUp":
            event.preventDefault();
            this.incrementSecond();
            break;
          case " ":
          case "Spacebar":
            event.preventDefault();
            break;
        }
      }
    };
    this.secondUpButtonKeyDownHandler = (event) => {
      if (this.buttonActivated(event)) {
        this.incrementSecond();
      }
    };
    this.setHourEl = (el) => (this.hourEl = el);
    this.setMeridiemEl = (el) => (this.meridiemEl = el);
    this.setMinuteEl = (el) => (this.minuteEl = el);
    this.setSecondEl = (el) => (this.secondEl = el);
    this.setValue = (value, emit = true) => {
      if (isValidTime(value)) {
        const { hour, minute, second } = parseTimeString(value);
        const { localizedHour, localizedHourSuffix, localizedMinute, localizedMinuteSuffix, localizedSecond, localizedSecondSuffix, localizedMeridiem } = localizeTimeStringToParts(value, this.locale);
        this.localizedHour = localizedHour;
        this.localizedHourSuffix = localizedHourSuffix;
        this.localizedMinute = localizedMinute;
        this.localizedMinuteSuffix = localizedMinuteSuffix;
        this.localizedSecond = localizedSecond;
        this.localizedSecondSuffix = localizedSecondSuffix;
        this.hour = hour;
        this.minute = minute;
        this.second = second;
        if (localizedMeridiem) {
          this.localizedMeridiem = localizedMeridiem;
          this.meridiem = getMeridiem(this.hour);
          const formatParts = getTimeParts(value, this.locale);
          this.meridiemOrder = this.getMeridiemOrder(formatParts);
        }
      }
      else {
        this.hour = null;
        this.localizedHour = null;
        this.localizedHourSuffix = null;
        this.localizedMeridiem = null;
        this.localizedMinute = null;
        this.localizedMinuteSuffix = null;
        this.localizedSecond = null;
        this.localizedSecondSuffix = null;
        this.meridiem = null;
        this.minute = null;
        this.second = null;
        this.value = null;
      }
      if (emit) {
        this.calciteTimePickerChange.emit();
      }
    };
    this.setValuePart = (key, value, emit = true) => {
      var _a;
      if (key === "meridiem") {
        this.meridiem = value;
        if (isValidNumber(this.hour)) {
          const hourAsNumber = parseInt(this.hour);
          switch (value) {
            case "AM":
              if (hourAsNumber >= 12) {
                this.hour = formatTimePart(hourAsNumber - 12);
              }
              break;
            case "PM":
              if (hourAsNumber < 12) {
                this.hour = formatTimePart(hourAsNumber + 12);
              }
              break;
          }
          this.localizedHour = localizeTimePart(this.hour, "hour", this.locale);
        }
      }
      else {
        this[key] = typeof value === "number" ? formatTimePart(value) : value;
        this[`localized${capitalize(key)}`] = localizeTimePart(this[key], key, this.locale);
      }
      if (this.hour && this.minute) {
        const showSeconds = this.second && this.showSecond;
        this.value = `${this.hour}:${this.minute}:${showSeconds ? this.second : "00"}`;
      }
      else {
        this.value = null;
      }
      this.localizedMeridiem = this.value
        ? ((_a = localizeTimeStringToParts(this.value, this.locale)) === null || _a === void 0 ? void 0 : _a.localizedMeridiem) || null
        : localizeTimePart(this.meridiem, "meridiem", this.locale);
      if (emit) {
        this.calciteTimePickerChange.emit();
      }
    };
  }
  localeWatcher(newLocale) {
    this.hourCycle = getLocaleHourCycle(newLocale);
    this.setValue(this.value, false);
  }
  valueWatcher(newValue) {
    this.setValue(newValue, false);
  }
  hourChanged(newHour) {
    if (this.meridiem && isValidNumber(newHour)) {
      this.setValuePart("meridiem", getMeridiem(newHour));
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  hostBlurHandler() {
    this.calciteTimePickerBlur.emit();
  }
  hostFocusHandler() {
    this.calciteTimePickerFocus.emit();
  }
  keyDownHandler(event) {
    const key = event.key;
    switch (this.activeEl) {
      case this.hourEl:
        if (key === "ArrowRight") {
          this.setFocus("minute");
        }
        break;
      case this.minuteEl:
        switch (key) {
          case "ArrowLeft":
            this.setFocus("hour");
            break;
          case "ArrowRight":
            if (this.step !== 60) {
              this.setFocus("second");
            }
            else if (this.hourCycle === "12") {
              this.setFocus("meridiem");
            }
            break;
        }
        break;
      case this.secondEl:
        switch (key) {
          case "ArrowLeft":
            this.setFocus("minute");
            break;
          case "ArrowRight":
            if (this.hourCycle === "12") {
              this.setFocus("meridiem");
            }
            break;
        }
        break;
      case this.meridiemEl:
        switch (key) {
          case "ArrowLeft":
            if (this.step !== 60) {
              this.setFocus("second");
            }
            else {
              this.setFocus("minute");
            }
            break;
        }
        break;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus(target) {
    var _a;
    (_a = this[`${target || "hour"}El`]) === null || _a === void 0 ? void 0 : _a.focus();
  }
  // --------------------------------------------------------------------------
  //
  //  Private Methods
  //
  // --------------------------------------------------------------------------
  buttonActivated(event) {
    const key = event.key;
    if (key === " ") {
      event.preventDefault();
    }
    return isActivationKey(key);
  }
  getMeridiemOrder(formatParts) {
    const isRTLKind = this.locale === "ar" || this.locale === "he";
    if (formatParts && !isRTLKind) {
      const index = formatParts.findIndex((parts) => {
        return parts.value === this.localizedMeridiem;
      });
      return index;
    }
    return 0;
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    this.setValue(this.value, false);
    this.hourCycle = getLocaleHourCycle(this.locale);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    const hourIsNumber = isValidNumber(this.hour);
    const iconScale = this.scale === "s" || this.scale === "m" ? "s" : "m";
    const minuteIsNumber = isValidNumber(this.minute);
    const secondIsNumber = isValidNumber(this.second);
    const showMeridiem = this.hourCycle === "12";
    return (hAsync("div", { class: {
        [CSS$5.timePicker]: true,
        [CSS$5.showMeridiem]: showMeridiem,
        [CSS$5.showSecond]: this.showSecond,
        [CSS$5[`scale-${this.scale}`]]: true
      }, dir: "ltr" }, hAsync("div", { class: CSS$5.column, role: "group" }, hAsync("span", { "aria-label": this.intlHourUp, class: {
        [CSS$5.button]: true,
        [CSS$5.buttonHourUp]: true,
        [CSS$5.buttonTopLeft]: true
      }, onClick: this.incrementHour, onKeyDown: this.hourUpButtonKeyDownHandler, role: "button", tabIndex: -1 }, hAsync("calcite-icon", { icon: "chevron-up", scale: iconScale })), hAsync("span", { "aria-label": this.intlHour, "aria-valuemax": "23", "aria-valuemin": "1", "aria-valuenow": (hourIsNumber && parseInt(this.hour)) || "0", "aria-valuetext": this.hour, class: {
        [CSS$5.input]: true,
        [CSS$5.hour]: true
      }, onFocus: this.focusHandler, onKeyDown: this.hourKeyDownHandler, ref: this.setHourEl, role: "spinbutton", tabIndex: 0 }, this.localizedHour || "--"), hAsync("span", { "aria-label": this.intlHourDown, class: {
        [CSS$5.button]: true,
        [CSS$5.buttonHourDown]: true,
        [CSS$5.buttonBottomLeft]: true
      }, onClick: this.decrementHour, onKeyDown: this.hourDownButtonKeyDownHandler, role: "button", tabIndex: -1 }, hAsync("calcite-icon", { icon: "chevron-down", scale: iconScale }))), hAsync("span", { class: CSS$5.delimiter }, this.localizedHourSuffix), hAsync("div", { class: CSS$5.column, role: "group" }, hAsync("span", { "aria-label": this.intlMinuteUp, class: {
        [CSS$5.button]: true,
        [CSS$5.buttonMinuteUp]: true
      }, onClick: this.incrementMinute, onKeyDown: this.minuteUpButtonKeyDownHandler, role: "button", tabIndex: -1 }, hAsync("calcite-icon", { icon: "chevron-up", scale: iconScale })), hAsync("span", { "aria-label": this.intlMinute, "aria-valuemax": "12", "aria-valuemin": "1", "aria-valuenow": (minuteIsNumber && parseInt(this.minute)) || "0", "aria-valuetext": this.minute, class: {
        [CSS$5.input]: true,
        [CSS$5.minute]: true
      }, onFocus: this.focusHandler, onKeyDown: this.minuteKeyDownHandler, ref: this.setMinuteEl, role: "spinbutton", tabIndex: 0 }, this.localizedMinute || "--"), hAsync("span", { "aria-label": this.intlMinuteDown, class: {
        [CSS$5.button]: true,
        [CSS$5.buttonMinuteDown]: true
      }, onClick: this.decrementMinute, onKeyDown: this.minuteDownButtonKeyDownHandler, role: "button", tabIndex: -1 }, hAsync("calcite-icon", { icon: "chevron-down", scale: iconScale }))), this.showSecond && hAsync("span", { class: CSS$5.delimiter }, this.localizedMinuteSuffix), this.showSecond && (hAsync("div", { class: CSS$5.column, role: "group" }, hAsync("span", { "aria-label": this.intlSecondUp, class: {
        [CSS$5.button]: true,
        [CSS$5.buttonSecondUp]: true
      }, onClick: this.incrementSecond, onKeyDown: this.secondUpButtonKeyDownHandler, role: "button", tabIndex: -1 }, hAsync("calcite-icon", { icon: "chevron-up", scale: iconScale })), hAsync("span", { "aria-label": this.intlSecond, "aria-valuemax": "59", "aria-valuemin": "0", "aria-valuenow": (secondIsNumber && parseInt(this.second)) || "0", "aria-valuetext": this.second, class: {
        [CSS$5.input]: true,
        [CSS$5.second]: true
      }, onFocus: this.focusHandler, onKeyDown: this.secondKeyDownHandler, ref: this.setSecondEl, role: "spinbutton", tabIndex: 0 }, this.localizedSecond || "--"), hAsync("span", { "aria-label": this.intlSecondDown, class: {
        [CSS$5.button]: true,
        [CSS$5.buttonSecondDown]: true
      }, onClick: this.decrementSecond, onKeyDown: this.secondDownButtonKeyDownHandler, role: "button", tabIndex: -1 }, hAsync("calcite-icon", { icon: "chevron-down", scale: iconScale })))), this.localizedSecondSuffix && (hAsync("span", { class: CSS$5.delimiter }, this.localizedSecondSuffix)), showMeridiem && (hAsync("div", { class: {
        [CSS$5.column]: true,
        [CSS$5.meridiemStart]: this.meridiemOrder === 0
      }, role: "group" }, hAsync("span", { "aria-label": this.intlMeridiemUp, class: {
        [CSS$5.button]: true,
        [CSS$5.buttonMeridiemUp]: true,
        [CSS$5.buttonTopRight]: true
      }, onClick: this.incrementMeridiem, onKeyDown: this.meridiemUpButtonKeyDownHandler, role: "button", tabIndex: -1 }, hAsync("calcite-icon", { icon: "chevron-up", scale: iconScale })), hAsync("span", { "aria-label": this.intlMeridiem, "aria-valuemax": "2", "aria-valuemin": "1", "aria-valuenow": (this.meridiem === "PM" && "2") || "1", "aria-valuetext": this.meridiem, class: {
        [CSS$5.input]: true,
        [CSS$5.meridiem]: true
      }, onFocus: this.focusHandler, onKeyDown: this.meridiemKeyDownHandler, ref: this.setMeridiemEl, role: "spinbutton", tabIndex: 0 }, this.localizedMeridiem || "--"), hAsync("span", { "aria-label": this.intlMeridiemDown, class: {
        [CSS$5.button]: true,
        [CSS$5.buttonMeridiemDown]: true,
        [CSS$5.buttonBottomRight]: true
      }, onClick: this.decrementMeridiem, onKeyDown: this.meridiemDownButtonKeyDownHandler, role: "button", tabIndex: -1 }, hAsync("calcite-icon", { icon: "chevron-down", scale: iconScale }))))));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "locale": ["localeWatcher"],
    "value": ["valueWatcher"],
    "hour": ["hourChanged"]
  }; }
  static get style() { return timePickerCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-time-picker",
    "$members$": {
      "intlHour": [1, "intl-hour"],
      "intlHourDown": [1, "intl-hour-down"],
      "intlHourUp": [1, "intl-hour-up"],
      "intlMeridiem": [1, "intl-meridiem"],
      "intlMeridiemDown": [1, "intl-meridiem-down"],
      "intlMeridiemUp": [1, "intl-meridiem-up"],
      "intlMinute": [1, "intl-minute"],
      "intlMinuteDown": [1, "intl-minute-down"],
      "intlMinuteUp": [1, "intl-minute-up"],
      "intlSecond": [1, "intl-second"],
      "intlSecondDown": [1, "intl-second-down"],
      "intlSecondUp": [1, "intl-second-up"],
      "locale": [1025, "lang"],
      "scale": [1],
      "step": [2],
      "value": [1025],
      "hour": [32],
      "hourCycle": [32],
      "localizedHour": [32],
      "localizedHourSuffix": [32],
      "localizedMeridiem": [32],
      "localizedMinute": [32],
      "localizedMinuteSuffix": [32],
      "localizedSecond": [32],
      "localizedSecondSuffix": [32],
      "meridiem": [32],
      "minute": [32],
      "second": [32],
      "showSecond": [32],
      "setFocus": [64]
    },
    "$listeners$": [[0, "blur", "hostBlurHandler"], [0, "focus", "hostFocusHandler"], [0, "keydown", "keyDownHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$4 = {
  header: "header",
  heading: "heading",
  close: "close",
  container: "container",
  tipContainer: "tip-container",
  tipContainerAdvancing: "tip-container--advancing",
  tipContainerRetreating: "tip-container--retreating",
  pagination: "pagination",
  pagePosition: "page-position",
  pageNext: "page-next",
  pagePrevious: "page-previous"
};
const ICONS$3 = {
  chevronLeft: "chevron-left",
  chevronRight: "chevron-right",
  close: "x"
};
const TEXT$1 = {
  defaultGroupTitle: "Tips",
  defaultPaginationLabel: "Tip",
  close: "Close",
  previous: "Previous",
  next: "Next"
};
const HEADING_LEVEL$1 = 2;

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$3 = {
  container: "container",
  header: "header",
  heading: "heading",
  close: "close",
  imageFrame: "image-frame",
  content: "content",
  info: "info"
};
const ICONS$2 = {
  close: "x"
};
const SLOTS$2 = {
  thumbnail: "thumbnail"
};
const TEXT = {
  close: "Close"
};
const HEADING_LEVEL = (HEADING_LEVEL$1 + 1);

const tipCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-tip:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-tip{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-tip{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-tip{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-tip{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-tip{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-tip:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-tip-h{display:none}/*!@:host*/.sc-calcite-tip-h{position:relative;margin:1rem;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-2);background-color:var(--calcite-ui-foreground-1);font-size:var(--calcite-font-size--1);line-height:1rem;color:var(--calcite-ui-text-2)}/*!@:host **/.sc-calcite-tip-h *.sc-calcite-tip{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@.container*/.container.sc-calcite-tip{width:100%;padding:1rem}/*!@:host([dismissed]), :host([dismissed]) .container*/[dismissed].sc-calcite-tip-h,[dismissed].sc-calcite-tip-h .container.sc-calcite-tip{display:none}/*!@:host([selected]) .container*/[selected].sc-calcite-tip-h .container.sc-calcite-tip{margin:0px;border-style:none;padding:0px}/*!@.header*/.header.sc-calcite-tip{margin:0px;display:-ms-flexbox;display:flex;-ms-flex-line-pack:justify;align-content:space-between;-ms-flex-align:center;align-items:center;fill:var(--calcite-ui-text-2);color:var(--calcite-ui-text-2)}/*!@.heading*/.heading.sc-calcite-tip{margin:0px;padding:0px;font-weight:var(--calcite-font-weight-medium)}/*!@.header .heading*/.header.sc-calcite-tip .heading.sc-calcite-tip{-ms-flex:1 1 auto;flex:1 1 auto;padding:0.5rem}/*!@h1.heading*/h1.heading.sc-calcite-tip{font-size:var(--calcite-font-size-2);line-height:1.5rem}/*!@h2.heading*/h2.heading.sc-calcite-tip{font-size:var(--calcite-font-size-1);line-height:1.5rem}/*!@h3.heading*/h3.heading.sc-calcite-tip{font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@h4.heading, h5.heading*/h4.heading.sc-calcite-tip,h5.heading.sc-calcite-tip{font-size:var(--calcite-font-size--1);line-height:1rem}/*!@.header*/.header.sc-calcite-tip{margin-bottom:0.5rem}/*!@.header .heading*/.header.sc-calcite-tip .heading.sc-calcite-tip{padding:0px;color:var(--calcite-ui-text-1)}/*!@.container[hidden]*/.container[hidden].sc-calcite-tip{display:none}/*!@.content*/.content.sc-calcite-tip{display:-ms-flexbox;display:flex}/*!@.info*/.info.sc-calcite-tip{padding-top:0px;padding-bottom:0px;padding-left:1rem;padding-right:1rem;width:70%}/*!@.info:only-child*/.info.sc-calcite-tip:only-child{width:100%;padding-left:0px;padding-right:0px}/*!@::slotted(p)*/.sc-calcite-tip-s>p{margin-top:0px}/*!@::slotted(a)*/.sc-calcite-tip-s>a{outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;color:var(--calcite-ui-brand)}/*!@::slotted(a:focus)*/.sc-calcite-tip-s>a:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:2px}/*!@.image-frame*/.image-frame.sc-calcite-tip{width:25%}/*!@.image-frame img*/.image-frame.sc-calcite-tip img.sc-calcite-tip{max-width:100%}/*!@::slotted(img)*/.sc-calcite-tip-s>img{max-width:100%}";

/**
 * @slot - A slot for adding text and a hyperlink.
 * @slot thumbnail - A slot for adding an HTML image element to the tip.
 */
class Tip {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteTipDismiss = createEvent(this, "calciteTipDismiss", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * No longer displays the tip.
     */
    this.dismissed = false;
    /**
     * Indicates whether the tip can be dismissed.
     */
    this.nonDismissible = false;
    /**
     * The selected state of the tip if it is being used inside a `calcite-tip-manager`.
     */
    this.selected = false;
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.hideTip = () => {
      this.dismissed = true;
      this.calciteTipDismiss.emit();
    };
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderHeader() {
    var _a;
    const { heading, headingLevel, el } = this;
    const parentLevel = (_a = el.closest("calcite-tip-manager")) === null || _a === void 0 ? void 0 : _a.headingLevel;
    const relativeLevel = parentLevel ? constrainHeadingLevel(parentLevel + 1) : null;
    const level = headingLevel || relativeLevel || HEADING_LEVEL;
    return heading ? (hAsync("header", { class: CSS$3.header }, hAsync(Heading, { class: CSS$3.heading, level: level }, heading))) : null;
  }
  renderDismissButton() {
    const { nonDismissible, hideTip, intlClose } = this;
    const text = intlClose || TEXT.close;
    return !nonDismissible ? (hAsync("calcite-action", { class: CSS$3.close, icon: ICONS$2.close, onClick: hideTip, scale: "l", text: text })) : null;
  }
  renderImageFrame() {
    const { el } = this;
    return getSlotted(el, SLOTS$2.thumbnail) ? (hAsync("div", { class: CSS$3.imageFrame, key: "thumbnail" }, hAsync("slot", { name: SLOTS$2.thumbnail }))) : null;
  }
  renderInfoNode() {
    return (hAsync("div", { class: CSS$3.info }, hAsync("slot", null)));
  }
  renderContent() {
    return (hAsync("div", { class: CSS$3.content }, this.renderImageFrame(), this.renderInfoNode()));
  }
  render() {
    return (hAsync(Fragment, null, hAsync("article", { class: CSS$3.container }, this.renderHeader(), this.renderContent()), this.renderDismissButton()));
  }
  get el() { return getElement(this); }
  static get style() { return tipCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-tip",
    "$members$": {
      "dismissed": [1540],
      "nonDismissible": [516, "non-dismissible"],
      "heading": [1],
      "headingLevel": [2, "heading-level"],
      "selected": [516],
      "intlClose": [1, "intl-close"]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["dismissed", "dismissed"], ["nonDismissible", "non-dismissible"], ["selected", "selected"]]
  }; }
}

const tipGroupCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-tip-group:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-tip-group{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-tip-group{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-tip-group{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-tip-group{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-tip-group{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-tip-group:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-tip-group-h{display:none}/*!@:host*/.sc-calcite-tip-group-h{-webkit-box-sizing:border-box;box-sizing:border-box;display:block;background-color:var(--calcite-ui-foreground-1);font-size:var(--calcite-font-size--1);line-height:1rem;color:var(--calcite-ui-text-2)}/*!@::slotted(calcite-tip)*/.sc-calcite-tip-group-s>calcite-tip{margin:0px;border-style:none}/*!@:host-context(calcite-tip-manager)*/calcite-tip-manager.sc-calcite-tip-group-h,calcite-tip-manager .sc-calcite-tip-group-h{margin-top:0.75rem;margin-bottom:0.75rem}/*!@:host-context(calcite-tip-manager) ::slotted(calcite-tip)*/.sc-calcite-tip-group-hcalcite-tip-manager .sc-calcite-tip-group-s>calcite-tip,calcite-tip-manager .sc-calcite-tip-group-h .sc-calcite-tip-group-s>calcite-tip{padding:1rem}";

/**
 * @slot - A slot for adding `calcite-tip`s.
 */
class TipGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
  }
  render() {
    return hAsync("slot", null);
  }
  static get style() { return tipGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-tip-group",
    "$members$": {
      "groupTitle": [1, "group-title"]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const tipManagerCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-tip-manager:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-tip-manager{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-tip-manager{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-tip-manager{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-tip-manager{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-tip-manager{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-tip-manager:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-tip-manager-h{display:none}/*!@:host*/.sc-calcite-tip-manager-h{-webkit-box-sizing:border-box;box-sizing:border-box;display:block;background-color:var(--calcite-ui-foreground-1);font-size:var(--calcite-font-size--1);line-height:1rem;color:var(--calcite-ui-text-2);--calcite-tip-manager-height:19vh}/*!@:host **/.sc-calcite-tip-manager-h *.sc-calcite-tip-manager{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@:host([closed])*/[closed].sc-calcite-tip-manager-h{display:none}/*!@.header*/.header.sc-calcite-tip-manager{margin:0px;display:-ms-flexbox;display:flex;-ms-flex-line-pack:justify;align-content:space-between;-ms-flex-align:center;align-items:center;fill:var(--calcite-ui-text-2);color:var(--calcite-ui-text-2)}/*!@.heading*/.heading.sc-calcite-tip-manager{margin:0px;padding:0px;font-weight:var(--calcite-font-weight-medium)}/*!@.header .heading*/.header.sc-calcite-tip-manager .heading.sc-calcite-tip-manager{-ms-flex:1 1 auto;flex:1 1 auto;padding:0.5rem}/*!@h1.heading*/h1.heading.sc-calcite-tip-manager{font-size:var(--calcite-font-size-2);line-height:1.5rem}/*!@h2.heading*/h2.heading.sc-calcite-tip-manager{font-size:var(--calcite-font-size-1);line-height:1.5rem}/*!@h3.heading*/h3.heading.sc-calcite-tip-manager{font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@h4.heading, h5.heading*/h4.heading.sc-calcite-tip-manager,h5.heading.sc-calcite-tip-manager{font-size:var(--calcite-font-size--1);line-height:1rem}/*!@.header*/.header.sc-calcite-tip-manager{border-width:0px;border-bottom-width:1px;border-style:solid;border-color:var(--calcite-ui-border-3);padding-top:0px;padding-bottom:0px;-webkit-padding-end:0px;padding-inline-end:0px;-webkit-padding-start:1rem;padding-inline-start:1rem}/*!@.header h2.heading*/.header.sc-calcite-tip-manager h2.heading.sc-calcite-tip-manager{padding:0px;font-size:var(--calcite-font-size-1);line-height:1.5rem;font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-1)}/*!@.container*/.container.sc-calcite-tip-manager{position:relative;outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;overflow:hidden;min-height:150px}/*!@.container:focus*/.container.sc-calcite-tip-manager:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:2px}/*!@.tip-container*/.tip-container.sc-calcite-tip-manager{margin-top:1px;display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:center;justify-content:center;overflow:auto;outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;-webkit-animation-name:none;animation-name:none;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing);height:var(--calcite-tip-manager-height)}/*!@.tip-container:focus*/.tip-container.sc-calcite-tip-manager:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:2px}/*!@::slotted(calcite-tip)*/.sc-calcite-tip-manager-s>calcite-tip{border-style:none;padding:0.75rem;max-width:var(--calcite-tip-max-width)}/*!@.tip-container--advancing*/.tip-container--advancing.sc-calcite-tip-manager{-webkit-animation-name:tip-advance;animation-name:tip-advance}/*!@.tip-container--retreating*/.tip-container--retreating.sc-calcite-tip-manager{-webkit-animation-name:tip-retreat;animation-name:tip-retreat}/*!@.pagination*/.pagination.sc-calcite-tip-manager{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;padding-left:0px;padding-right:0px;padding-top:0.75rem;padding-bottom:0.5rem}/*!@.page-position*/.page-position.sc-calcite-tip-manager{margin-top:0px;margin-bottom:0px;margin-left:0.5rem;margin-right:0.5rem;font-size:var(--calcite-font-size--2);line-height:1rem}@-webkit-keyframes tip-advance{0%{opacity:0}0%{-webkit-transform:translate3d(50px, 0, 0) scale(0.99);transform:translate3d(50px, 0, 0) scale(0.99)}100%{opacity:1}100%{-webkit-transform:translate3d(0, 0, 0) scale(1);transform:translate3d(0, 0, 0) scale(1)}}@keyframes tip-advance{0%{opacity:0}0%{-webkit-transform:translate3d(50px, 0, 0) scale(0.99);transform:translate3d(50px, 0, 0) scale(0.99)}100%{opacity:1}100%{-webkit-transform:translate3d(0, 0, 0) scale(1);transform:translate3d(0, 0, 0) scale(1)}}@-webkit-keyframes tip-retreat{0%{opacity:0}0%{-webkit-transform:translate3d(-50px, 0, 0) scale(0.99);transform:translate3d(-50px, 0, 0) scale(0.99)}100%{opacity:1}100%{-webkit-transform:translate3d(0, 0, 0) scale(1);transform:translate3d(0, 0, 0) scale(1)}}@keyframes tip-retreat{0%{opacity:0}0%{-webkit-transform:translate3d(-50px, 0, 0) scale(0.99);transform:translate3d(-50px, 0, 0) scale(0.99)}100%{opacity:1}100%{-webkit-transform:translate3d(0, 0, 0) scale(1);transform:translate3d(0, 0, 0) scale(1)}}";

/**
 * @slot - A slot for adding `calcite-tip`s.
 */
class TipManager {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteTipManagerToggle = createEvent(this, "calciteTipManagerToggle", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * Alternate text for closing the `calcite-tip-manager`.
     */
    this.closed = false;
    this.mutationObserver = createObserver();
    this.hideTipManager = () => {
      this.closed = true;
      this.calciteTipManagerToggle.emit();
    };
    this.previousClicked = () => {
      this.previousTip();
    };
    this.nextClicked = () => {
      this.nextTip();
    };
    this.tipManagerKeyUpHandler = (event) => {
      if (event.target !== this.container) {
        return;
      }
      switch (event.key) {
        case "ArrowRight":
          event.preventDefault();
          this.nextTip();
          break;
        case "ArrowLeft":
          event.preventDefault();
          this.previousTip();
          break;
        case "Home":
          event.preventDefault();
          this.selectedIndex = 0;
          break;
        case "End":
          event.preventDefault();
          this.selectedIndex = this.total - 1;
          break;
      }
    };
    this.storeContainerRef = (el) => {
      this.container = el;
    };
  }
  closedChangeHandler() {
    this.direction = null;
    this.calciteTipManagerToggle.emit();
  }
  selectedChangeHandler() {
    this.showSelectedTip();
    this.updateGroupTitle();
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    var _a;
    this.setUpTips();
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.el, { childList: true, subtree: true });
  }
  disconnectedCallback() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /** Selects the next tip to display */
  async nextTip() {
    this.direction = "advancing";
    const nextIndex = this.selectedIndex + 1;
    this.selectedIndex = (nextIndex + this.total) % this.total;
  }
  /** Selects the previous tip to display */
  async previousTip() {
    this.direction = "retreating";
    const previousIndex = this.selectedIndex - 1;
    this.selectedIndex = (previousIndex + this.total) % this.total;
  }
  // --------------------------------------------------------------------------
  //
  //  Private Methods
  //
  // --------------------------------------------------------------------------
  setUpTips() {
    const tips = Array.from(this.el.querySelectorAll("calcite-tip"));
    this.total = tips.length;
    if (this.total === 0) {
      return;
    }
    const selectedTip = this.el.querySelector("calcite-tip[selected]");
    this.tips = tips;
    this.selectedIndex = selectedTip ? tips.indexOf(selectedTip) : 0;
    tips.forEach((tip) => {
      tip.nonDismissible = true;
    });
    this.showSelectedTip();
    this.updateGroupTitle();
  }
  showSelectedTip() {
    this.tips.forEach((tip, index) => {
      const isSelected = this.selectedIndex === index;
      tip.selected = isSelected;
      tip.hidden = !isSelected;
    });
  }
  updateGroupTitle() {
    const selectedTip = this.tips[this.selectedIndex];
    const tipParent = selectedTip.closest("calcite-tip-group");
    this.groupTitle = (tipParent === null || tipParent === void 0 ? void 0 : tipParent.groupTitle) || this.intlDefaultTitle || TEXT$1.defaultGroupTitle;
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderPagination() {
    const dir = getElementDir(this.el);
    const { selectedIndex, tips, total, intlNext, intlPrevious, intlPaginationLabel } = this;
    const nextLabel = intlNext || TEXT$1.next;
    const previousLabel = intlPrevious || TEXT$1.previous;
    const paginationLabel = intlPaginationLabel || TEXT$1.defaultPaginationLabel;
    return tips.length > 1 ? (hAsync("footer", { class: CSS$4.pagination }, hAsync("calcite-action", { class: CSS$4.pagePrevious, icon: dir === "ltr" ? ICONS$3.chevronLeft : ICONS$3.chevronRight, onClick: this.previousClicked, scale: "m", text: previousLabel }), hAsync("span", { class: CSS$4.pagePosition }, `${paginationLabel} ${selectedIndex + 1}/${total}`), hAsync("calcite-action", { class: CSS$4.pageNext, icon: dir === "ltr" ? ICONS$3.chevronRight : ICONS$3.chevronLeft, onClick: this.nextClicked, scale: "m", text: nextLabel }))) : null;
  }
  render() {
    const { closed, direction, headingLevel, groupTitle, selectedIndex, intlClose, total } = this;
    const closeLabel = intlClose || TEXT$1.close;
    if (total === 0) {
      return null;
    }
    return (hAsync("section", { "aria-hidden": closed.toString(), class: CSS$4.container, hidden: closed, onKeyUp: this.tipManagerKeyUpHandler, ref: this.storeContainerRef, tabIndex: 0 }, hAsync("header", { class: CSS$4.header }, hAsync(Heading, { class: CSS$4.heading, level: headingLevel || HEADING_LEVEL$1 }, groupTitle), hAsync("calcite-action", { class: CSS$4.close, onClick: this.hideTipManager, scale: "m", text: closeLabel }, hAsync("calcite-icon", { icon: ICONS$3.close, scale: "m" }))), hAsync("div", { class: {
        [CSS$4.tipContainer]: true,
        [CSS$4.tipContainerAdvancing]: !closed && direction === "advancing",
        [CSS$4.tipContainerRetreating]: !closed && direction === "retreating"
      }, key: selectedIndex, tabIndex: 0 }, hAsync("slot", null)), this.renderPagination()));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "closed": ["closedChangeHandler"],
    "selectedIndex": ["selectedChangeHandler"]
  }; }
  static get style() { return tipManagerCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-tip-manager",
    "$members$": {
      "closed": [1540],
      "headingLevel": [2, "heading-level"],
      "intlClose": [1, "intl-close"],
      "intlDefaultTitle": [1, "intl-default-title"],
      "intlNext": [1, "intl-next"],
      "intlPaginationLabel": [1, "intl-pagination-label"],
      "intlPrevious": [1, "intl-previous"],
      "selectedIndex": [32],
      "tips": [32],
      "total": [32],
      "direction": [32],
      "groupTitle": [32],
      "nextTip": [64],
      "previousTip": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["closed", "closed"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$2 = {
  container: "container",
  arrow: "arrow"
};
const TOOLTIP_DELAY_MS = 500;
const TOOLTIP_REFERENCE = "data-calcite-tooltip-reference";
const ARIA_DESCRIBED_BY = "aria-describedby";

const tooltipCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-tooltip:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-tooltip{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-tooltip{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-tooltip{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-tooltip{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-tooltip{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-tooltip:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-tooltip-h{display:none}/*!@:host*/.sc-calcite-tooltip-h{display:block;position:absolute;z-index:999;-webkit-transform:scale(0);transform:scale(0)}/*!@.calcite-popper-anim*/.calcite-popper-anim.sc-calcite-tooltip{position:relative;z-index:1;-webkit-transition:var(--calcite-popper-transition);transition:var(--calcite-popper-transition);visibility:hidden;-webkit-transition-property:visibility, opacity, -webkit-transform;transition-property:visibility, opacity, -webkit-transform;transition-property:transform, visibility, opacity;transition-property:transform, visibility, opacity, -webkit-transform;opacity:0;-webkit-box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);border-radius:0.25rem}/*!@:host([data-popper-placement^=bottom]) .calcite-popper-anim*/[data-popper-placement^=bottom].sc-calcite-tooltip-h .calcite-popper-anim.sc-calcite-tooltip{-webkit-transform:translateY(-5px);transform:translateY(-5px)}/*!@:host([data-popper-placement^=top]) .calcite-popper-anim*/[data-popper-placement^=top].sc-calcite-tooltip-h .calcite-popper-anim.sc-calcite-tooltip{-webkit-transform:translateY(5px);transform:translateY(5px)}/*!@:host([data-popper-placement^=left]) .calcite-popper-anim*/[data-popper-placement^=left].sc-calcite-tooltip-h .calcite-popper-anim.sc-calcite-tooltip{-webkit-transform:translateX(5px);transform:translateX(5px)}/*!@:host([data-popper-placement^=right]) .calcite-popper-anim*/[data-popper-placement^=right].sc-calcite-tooltip-h .calcite-popper-anim.sc-calcite-tooltip{-webkit-transform:translateX(-5px);transform:translateX(-5px)}/*!@:host([data-popper-placement]) .calcite-popper-anim--active*/[data-popper-placement].sc-calcite-tooltip-h .calcite-popper-anim--active.sc-calcite-tooltip{opacity:1;visibility:visible;-webkit-transform:translate(0);transform:translate(0)}/*!@:host([data-popper-placement][data-popper-reference-hidden])*/[data-popper-placement][data-popper-reference-hidden].sc-calcite-tooltip-h{pointer-events:none;opacity:0}/*!@.arrow,\n.arrow::before*/.arrow.sc-calcite-tooltip,.arrow.sc-calcite-tooltip::before{position:absolute;width:8px;height:8px;z-index:-1}/*!@.arrow::before*/.arrow.sc-calcite-tooltip::before{content:\"\";--tw-shadow:0 4px 8px -1px rgba(0, 0, 0, 0.08), 0 2px 4px -1px rgba(0, 0, 0, 0.04);--tw-shadow-colored:0 4px 8px -1px var(--tw-shadow-color), 0 2px 4px -1px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);-webkit-transform:rotate(45deg);transform:rotate(45deg);background:var(--calcite-ui-foreground-1)}/*!@:host([data-popper-placement^=top]) .arrow*/[data-popper-placement^=top].sc-calcite-tooltip-h .arrow.sc-calcite-tooltip{bottom:-4px}/*!@:host([data-popper-placement^=bottom]) .arrow*/[data-popper-placement^=bottom].sc-calcite-tooltip-h .arrow.sc-calcite-tooltip{top:-4px}/*!@:host([data-popper-placement^=left]) .arrow*/[data-popper-placement^=left].sc-calcite-tooltip-h .arrow.sc-calcite-tooltip{right:-4px}/*!@:host([data-popper-placement^=right]) .arrow*/[data-popper-placement^=right].sc-calcite-tooltip-h .arrow.sc-calcite-tooltip{left:-4px}/*!@.container*/.container.sc-calcite-tooltip{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:start;justify-content:flex-start;border-radius:0.25rem;background-color:var(--calcite-ui-foreground-1);padding-top:0.75rem;padding-bottom:0.75rem;padding-left:1rem;padding-right:1rem;font-size:var(--calcite-font-size--2);line-height:1.375;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1);overflow:hidden;max-width:20rem;max-height:20rem}/*!@.calcite-popper-anim*/.calcite-popper-anim.sc-calcite-tooltip{border-radius:0.25rem;border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-3);background-color:var(--calcite-ui-foreground-1)}/*!@.arrow::before*/.arrow.sc-calcite-tooltip::before{outline:1px solid var(--calcite-ui-border-3)}";

/**
 * @slot - A slot for adding text.
 */
class Tooltip {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    /**
     * Offset the position of the tooltip away from the reference element.
     * @default 6
     */
    this.offsetDistance = defaultOffsetDistance;
    /**
     * Offset the position of the tooltip along the reference element.
     */
    this.offsetSkidding = 0;
    /**
     * Display and position the component.
     */
    this.open = false;
    /** Describes the type of positioning to use for the overlaid content. If your element is in a fixed container, use the 'fixed' value. */
    this.overlayPositioning = "absolute";
    /**
     * Determines where the component will be positioned relative to the referenceElement.
     * @see [PopperPlacement](https://github.com/Esri/calcite-components/blob/master/src/utils/popper.ts#L25)
     */
    this.placement = "auto";
    this.guid = `calcite-tooltip-${guid()}`;
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.setUpReferenceElement = () => {
      this.removeReferences();
      this.effectiveReferenceElement = this.getReferenceElement();
      const { el, referenceElement, effectiveReferenceElement } = this;
      if (referenceElement && !effectiveReferenceElement) {
        console.warn(`${el.tagName}: reference-element id "${referenceElement}" was not found.`, {
          el
        });
      }
      this.addReferences();
      this.createPopper();
    };
    this.getId = () => {
      return this.el.id || this.guid;
    };
    this.addReferences = () => {
      const { effectiveReferenceElement } = this;
      if (!effectiveReferenceElement) {
        return;
      }
      const id = this.getId();
      effectiveReferenceElement.setAttribute(TOOLTIP_REFERENCE, id);
      effectiveReferenceElement.setAttribute(ARIA_DESCRIBED_BY, id);
    };
    this.removeReferences = () => {
      const { effectiveReferenceElement } = this;
      if (!effectiveReferenceElement) {
        return;
      }
      effectiveReferenceElement.removeAttribute(TOOLTIP_REFERENCE);
      effectiveReferenceElement.removeAttribute(ARIA_DESCRIBED_BY);
    };
    this.show = () => {
      this.open = true;
    };
    this.hide = () => {
      this.open = false;
    };
  }
  offsetDistanceOffsetHandler() {
    this.reposition();
  }
  offsetSkiddingHandler() {
    this.reposition();
  }
  openHandler() {
    this.reposition();
  }
  placementHandler() {
    this.reposition();
  }
  referenceElementHandler() {
    this.setUpReferenceElement();
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  componentWillLoad() {
    this.setUpReferenceElement();
  }
  componentDidLoad() {
    this.reposition();
  }
  disconnectedCallback() {
    this.removeReferences();
    this.destroyPopper();
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /** Updates the position of the component. */
  async reposition() {
    const { popper, el, placement } = this;
    const modifiers = this.getModifiers();
    popper
      ? await updatePopper({
        el,
        modifiers,
        placement,
        popper
      })
      : this.createPopper();
  }
  getReferenceElement() {
    const { referenceElement, el } = this;
    return ((typeof referenceElement === "string"
      ? queryElementRoots(el, { id: referenceElement })
      : referenceElement) || null);
  }
  getModifiers() {
    const { arrowEl, offsetDistance, offsetSkidding } = this;
    const arrowModifier = {
      name: "arrow",
      enabled: true,
      options: {
        element: arrowEl
      }
    };
    const offsetModifier = {
      name: "offset",
      enabled: true,
      options: {
        offset: [offsetSkidding, offsetDistance]
      }
    };
    const eventListenerModifier = {
      name: "eventListeners",
      enabled: this.open
    };
    return [arrowModifier, offsetModifier, eventListenerModifier];
  }
  createPopper() {
    this.destroyPopper();
    const { el, placement, effectiveReferenceElement: referenceEl, overlayPositioning } = this;
    const modifiers = this.getModifiers();
    this.popper = createPopper({
      el,
      modifiers,
      placement,
      overlayPositioning,
      referenceEl
    });
  }
  destroyPopper() {
    const { popper } = this;
    if (popper) {
      popper.destroy();
    }
    this.popper = null;
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    const { effectiveReferenceElement, label, open } = this;
    const displayed = effectiveReferenceElement && open;
    const hidden = !displayed;
    return (hAsync(Host, { "aria-hidden": hidden.toString(), "aria-label": label, "calcite-hydrated-hidden": hidden, id: this.getId(), role: "tooltip" }, hAsync("div", { class: {
        [CSS$D.animation]: true,
        [CSS$D.animationActive]: displayed
      } }, hAsync("div", { class: CSS$2.arrow, ref: (arrowEl) => (this.arrowEl = arrowEl) }), hAsync("div", { class: CSS$2.container }, hAsync("slot", null)))));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "offsetDistance": ["offsetDistanceOffsetHandler"],
    "offsetSkidding": ["offsetSkiddingHandler"],
    "open": ["openHandler"],
    "placement": ["placementHandler"],
    "referenceElement": ["referenceElementHandler"]
  }; }
  static get style() { return tooltipCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-tooltip",
    "$members$": {
      "label": [1],
      "offsetDistance": [514, "offset-distance"],
      "offsetSkidding": [514, "offset-skidding"],
      "open": [516],
      "overlayPositioning": [1, "overlay-positioning"],
      "placement": [513],
      "referenceElement": [1, "reference-element"],
      "effectiveReferenceElement": [32],
      "reposition": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["offsetDistance", "offset-distance"], ["offsetSkidding", "offset-skidding"], ["open", "open"], ["placement", "placement"]]
  }; }
}

const tooltipManagerCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-tooltip-manager:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-tooltip-manager{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-tooltip-manager{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-tooltip-manager{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-tooltip-manager{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-tooltip-manager{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-tooltip-manager:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-tooltip-manager-h{display:none}/*!@:host*/.sc-calcite-tooltip-manager-h{position:relative;display:block}";

/**
 * @slot - A slot for adding elements that reference a 'calcite-tooltip' by the 'selector' property.
 */
class TooltipManager {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.hoverTimeouts = new WeakMap();
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * CSS Selector to match reference elements for tooltips. Reference elements will be identified by this selector in order to open their associated tooltip.
     * @default `[data-calcite-tooltip-reference]`
     */
    this.selector = `[${TOOLTIP_REFERENCE}]`;
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.queryTooltip = (composedPath) => {
      const { el } = this;
      if (!composedPath.includes(el)) {
        return null;
      }
      const referenceElement = composedPath.find((pathEl) => { var _a; return (_a = pathEl === null || pathEl === void 0 ? void 0 : pathEl.hasAttribute) === null || _a === void 0 ? void 0 : _a.call(pathEl, TOOLTIP_REFERENCE); });
      if (!referenceElement) {
        return null;
      }
      const id = referenceElement.getAttribute(TOOLTIP_REFERENCE);
      return queryElementRoots(el, { id });
    };
    this.clearHoverTimeout = (tooltip) => {
      const { hoverTimeouts } = this;
      if (hoverTimeouts.has(tooltip)) {
        window.clearTimeout(hoverTimeouts.get(tooltip));
        hoverTimeouts.delete(tooltip);
      }
    };
    this.closeExistingTooltip = () => {
      const { tooltipEl } = this;
      if (tooltipEl) {
        this.toggleTooltip(tooltipEl, false);
      }
    };
    this.focusTooltip = ({ tooltip, value }) => {
      this.closeExistingTooltip();
      if (value) {
        this.clearHoverTimeout(tooltip);
      }
      this.toggleTooltip(tooltip, value);
    };
    this.toggleTooltip = (tooltip, value) => {
      tooltip.open = value;
      if (value) {
        this.tooltipEl = tooltip;
      }
    };
    this.hoverToggle = ({ tooltip, value }) => {
      const { hoverTimeouts } = this;
      hoverTimeouts.delete(tooltip);
      if (value) {
        this.closeExistingTooltip();
      }
      this.toggleTooltip(tooltip, value);
    };
    this.hoverTooltip = ({ tooltip, value }) => {
      this.clearHoverTimeout(tooltip);
      const { hoverTimeouts } = this;
      const timeoutId = window.setTimeout(() => this.hoverToggle({ tooltip, value }), TOOLTIP_DELAY_MS );
      hoverTimeouts.set(tooltip, timeoutId);
    };
    this.activeTooltipHover = (event) => {
      const { tooltipEl, hoverTimeouts } = this;
      const { type } = event;
      if (!tooltipEl) {
        return;
      }
      if (type === "mouseover" && event.composedPath().includes(tooltipEl)) {
        this.clearHoverTimeout(tooltipEl);
      }
      else if (type === "mouseout" && !hoverTimeouts.has(tooltipEl)) {
        this.hoverTooltip({ tooltip: tooltipEl, value: false });
      }
    };
    this.hoverEvent = (event, value) => {
      const tooltip = this.queryTooltip(event.composedPath());
      this.activeTooltipHover(event);
      if (!tooltip) {
        return;
      }
      this.hoverTooltip({ tooltip, value });
    };
    this.focusEvent = (event, value) => {
      const tooltip = this.queryTooltip(event.composedPath());
      if (!tooltip || tooltip === this.clickedTooltip) {
        this.clickedTooltip = null;
        return;
      }
      this.focusTooltip({ tooltip, value });
    };
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  render() {
    return hAsync("slot", null);
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  keyUpHandler(event) {
    if (event.key === "Escape") {
      const { tooltipEl } = this;
      if (tooltipEl) {
        this.clearHoverTimeout(tooltipEl);
        this.toggleTooltip(tooltipEl, false);
      }
    }
  }
  mouseEnterShow(event) {
    this.hoverEvent(event, true);
  }
  mouseLeaveHide(event) {
    this.hoverEvent(event, false);
  }
  clickHandler(event) {
    const clickedTooltip = this.queryTooltip(event.composedPath());
    this.clickedTooltip = clickedTooltip;
    if (clickedTooltip) {
      this.toggleTooltip(clickedTooltip, false);
    }
  }
  focusShow(event) {
    this.focusEvent(event, true);
  }
  blurHide(event) {
    this.focusEvent(event, false);
  }
  get el() { return getElement(this); }
  static get style() { return tooltipManagerCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-tooltip-manager",
    "$members$": {
      "selector": [1]
    },
    "$listeners$": [[4, "keyup", "keyUpHandler"], [3, "mouseover", "mouseEnterShow"], [3, "mouseout", "mouseLeaveHide"], [2, "click", "clickHandler"], [2, "focus", "focusShow"], [2, "blur", "blurHide"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
var TreeSelectionMode;
(function (TreeSelectionMode) {
  TreeSelectionMode["Single"] = "single";
  TreeSelectionMode["Multi"] = "multi";
  TreeSelectionMode["Children"] = "children";
  TreeSelectionMode["MultiChildren"] = "multi-children";
  TreeSelectionMode["Ancestors"] = "ancestors";
})(TreeSelectionMode || (TreeSelectionMode = {}));

const treeCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-tree:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-tree{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-tree{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-tree{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-tree{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-tree{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-tree:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-tree-h{display:none}/*!@:host*/.sc-calcite-tree-h{display:block;outline:2px solid transparent;outline-offset:2px}";

/**
 * @slot - A slot for `calcite-tree-item` elements.
 */
class Tree {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteTreeSelect = createEvent(this, "calciteTreeSelect", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** Display indentation guide lines */
    this.lines = false;
    /** Display input
     * @deprecated use "ancestors" selection-mode for checkbox input
     */
    this.inputEnabled = false;
    /** Specify the scale of the tree, defaults to m */
    this.scale = "m";
    /** Customize how tree selection works (single, multi, children, multi-children, ancestors)
     * @default "single"
     * @see [TreeSelectionMode](https://github.com/Esri/calcite-components/blob/master/src/components/tree/interfaces.ts#L5)
     */
    this.selectionMode = TreeSelectionMode.Single;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillRender() {
    const parent = this.el.parentElement.closest("calcite-tree");
    this.lines = parent ? parent.lines : this.lines;
    this.scale = parent ? parent.scale : this.scale;
    this.selectionMode = parent ? parent.selectionMode : this.selectionMode;
    this.child = !!parent;
  }
  render() {
    return (hAsync(Host, { "aria-multiselectable": this.child
        ? undefined
        : (this.selectionMode === TreeSelectionMode.Multi ||
          this.selectionMode === TreeSelectionMode.MultiChildren).toString(), role: !this.child ? "tree" : undefined, tabIndex: this.getRootTabIndex() }, hAsync("slot", null)));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  onFocus() {
    if (!this.child) {
      const focusTarget = this.el.querySelector("calcite-tree-item[selected]") ||
        this.el.querySelector("calcite-tree-item");
      focusElement(focusTarget);
    }
  }
  onFocusIn(event) {
    const focusedFromRootOrOutsideTree = event.relatedTarget === this.el || !this.el.contains(event.relatedTarget);
    if (focusedFromRootOrOutsideTree) {
      // gives user the ability to tab into external elements (modifying tabindex property will not work in firefox)
      this.el.removeAttribute("tabindex");
    }
  }
  onFocusOut(event) {
    const willFocusOutsideTree = !this.el.contains(event.relatedTarget);
    if (willFocusOutsideTree) {
      this.el.tabIndex = this.getRootTabIndex();
    }
  }
  onClick(e) {
    const target = e.target;
    const childItems = nodeListToArray$1(target.querySelectorAll("calcite-tree-item"));
    if (this.child) {
      return;
    }
    if (!this.child) {
      e.preventDefault();
      e.stopPropagation();
    }
    if (this.selectionMode === TreeSelectionMode.Ancestors && !this.child) {
      this.updateAncestorTree(e);
      return;
    }
    const shouldSelect = this.selectionMode !== null &&
      (!target.hasChildren ||
        (target.hasChildren &&
          (this.selectionMode === TreeSelectionMode.Children ||
            this.selectionMode === TreeSelectionMode.MultiChildren)));
    const shouldModifyToCurrentSelection = e.detail.modifyCurrentSelection &&
      (this.selectionMode === TreeSelectionMode.Multi ||
        this.selectionMode === TreeSelectionMode.MultiChildren);
    const shouldSelectChildren = this.selectionMode === TreeSelectionMode.MultiChildren ||
      this.selectionMode === TreeSelectionMode.Children;
    const shouldClearCurrentSelection = !shouldModifyToCurrentSelection &&
      (((this.selectionMode === TreeSelectionMode.Single ||
        this.selectionMode === TreeSelectionMode.Multi) &&
        childItems.length <= 0) ||
        this.selectionMode === TreeSelectionMode.Children ||
        this.selectionMode === TreeSelectionMode.MultiChildren);
    const shouldExpandTarget = this.selectionMode === TreeSelectionMode.Children ||
      this.selectionMode === TreeSelectionMode.MultiChildren;
    if (!this.child) {
      const targetItems = [];
      if (shouldSelect) {
        targetItems.push(target);
      }
      if (shouldSelectChildren) {
        childItems.forEach((treeItem) => {
          targetItems.push(treeItem);
        });
      }
      if (shouldClearCurrentSelection) {
        const selectedItems = nodeListToArray$1(this.el.querySelectorAll("calcite-tree-item[selected]"));
        selectedItems.forEach((treeItem) => {
          if (!targetItems.includes(treeItem)) {
            treeItem.selected = false;
          }
        });
      }
      if (shouldExpandTarget && !e.detail.forceToggle) {
        target.expanded = true;
      }
      if (shouldModifyToCurrentSelection) {
        window.getSelection().removeAllRanges();
      }
      if ((shouldModifyToCurrentSelection && target.selected) ||
        (shouldSelectChildren && e.detail.forceToggle)) {
        targetItems.forEach((treeItem) => {
          treeItem.selected = false;
        });
      }
      else {
        targetItems.forEach((treeItem) => {
          treeItem.selected = true;
        });
      }
    }
    this.calciteTreeSelect.emit({
      selected: nodeListToArray$1(this.el.querySelectorAll("calcite-tree-item")).filter((i) => i.selected)
    });
  }
  keyDownHandler(event) {
    var _a;
    const root = this.el.closest("calcite-tree:not([child])");
    const target = event.target;
    if (root === this.el && target.tagName === "CALCITE-TREE-ITEM" && this.el.contains(target)) {
      switch (event.key) {
        case "ArrowDown":
          const next = target.nextElementSibling;
          if (next && next.matches("calcite-tree-item")) {
            next.focus();
            event.preventDefault();
          }
          break;
        case "ArrowLeft":
          // When focus is on an open node, closes the node.
          if (target.hasChildren && target.expanded) {
            target.expanded = false;
            event.preventDefault();
            break;
          }
          // When focus is on a child node that is also either an end node or a closed node, moves focus to its parent node.
          const parentItem = target.parentElement.closest("calcite-tree-item");
          if (parentItem && (!target.hasChildren || target.expanded === false)) {
            parentItem.focus();
            event.preventDefault();
            break;
          }
          // When focus is on a root node that is also either an end node or a closed node, does nothing.
          break;
        case "ArrowRight":
          if (!target.hasChildren) {
            break;
          }
          if (target.expanded && document.activeElement === target) {
            // When focus is on an open node, moves focus to the first child node.
            (_a = target.querySelector("calcite-tree-item")) === null || _a === void 0 ? void 0 : _a.focus();
            event.preventDefault();
          }
          else {
            // When focus is on a closed node, opens the node; focus does not move.
            target.expanded = true;
            event.preventDefault();
          }
          // When focus is on an end node, does nothing.
          break;
        case "ArrowUp":
          const previous = target.previousElementSibling;
          if (previous && previous.matches("calcite-tree-item")) {
            previous.focus();
            event.preventDefault();
          }
          break;
      }
    }
  }
  updateAncestorTree(e) {
    const item = e.target;
    const children = item.querySelectorAll("calcite-tree-item");
    const ancestors = [];
    let parent = item.parentElement.closest("calcite-tree-item");
    while (parent) {
      ancestors.push(parent);
      parent = parent.parentElement.closest("calcite-tree-item");
    }
    item.selected = !item.selected;
    item.indeterminate = false;
    if (children === null || children === void 0 ? void 0 : children.length) {
      children.forEach((el) => {
        el.selected = item.selected;
        el.indeterminate = false;
      });
    }
    if (ancestors) {
      ancestors.forEach((ancestor) => {
        const descendants = nodeListToArray$1(ancestor.querySelectorAll("calcite-tree-item"));
        const activeDescendants = descendants.filter((el) => el.selected);
        if (activeDescendants.length === 0) {
          ancestor.selected = false;
          ancestor.indeterminate = false;
          return;
        }
        const indeterminate = activeDescendants.length < descendants.length;
        ancestor.indeterminate = indeterminate;
        ancestor.selected = !indeterminate;
      });
    }
    this.calciteTreeSelect.emit({
      selected: nodeListToArray$1(this.el.querySelectorAll("calcite-tree-item")).filter((i) => i.selected)
    });
  }
  // --------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  getRootTabIndex() {
    return !this.child ? 0 : -1;
  }
  get el() { return getElement(this); }
  static get style() { return treeCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-tree",
    "$members$": {
      "lines": [1540],
      "inputEnabled": [4, "input-enabled"],
      "child": [1540],
      "scale": [1537],
      "selectionMode": [1537, "selection-mode"]
    },
    "$listeners$": [[0, "focus", "onFocus"], [0, "focusin", "onFocusIn"], [0, "focusout", "onFocusOut"], [0, "calciteTreeItemSelect", "onClick"], [0, "keydown", "keyDownHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["lines", "lines"], ["child", "child"], ["scale", "scale"], ["selectionMode", "selection-mode"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS$1 = {
  checkboxLabel: "checkbox-label",
  checkbox: "checkbox",
  chevron: "chevron",
  nodeContainer: "node-container",
  childrenContainer: "children-container",
  bulletPointIcon: "bullet-point",
  checkmarkIcon: "checkmark"
};
const SLOTS$1 = {
  children: "children"
};
const ICONS$1 = {
  bulletPoint: "bullet-point",
  checkmark: "check",
  chevronRight: "chevron-right"
};

const treeItemCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-tree-item:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-tree-item{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-tree-item{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-tree-item{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-tree-item{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-tree-item{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-tree-item:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-tree-item-h{display:none}/*!@:host*/.sc-calcite-tree-item-h{display:block;max-width:100%;cursor:pointer;color:var(--calcite-ui-text-3);outline:2px solid transparent;outline-offset:2px}/*!@:host([scale=s])*/[scale=s].sc-calcite-tree-item-h{font-size:var(--calcite-font-size--2);line-height:1rem}/*!@:host([scale=s]) .node-container*/[scale=s].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item{--calcite-tree-padding-y:0.25rem}/*!@:host([scale=s]) .node-container .checkbox,\n:host([scale=s]) .node-container .chevron,\n:host([scale=s]) .node-container .checkmark,\n:host([scale=s]) .node-container .bullet-point*/[scale=s].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item .checkbox.sc-calcite-tree-item,[scale=s].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item .chevron.sc-calcite-tree-item,[scale=s].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item .checkmark.sc-calcite-tree-item,[scale=s].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item .bullet-point.sc-calcite-tree-item{margin-inline:0.25rem}/*!@:host([scale=m])*/[scale=m].sc-calcite-tree-item-h{font-size:var(--calcite-font-size--1);line-height:1rem}/*!@:host([scale=m]) .node-container*/[scale=m].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item{--calcite-tree-padding-y:0.5rem}/*!@:host([scale=m]) .node-container .checkbox,\n:host([scale=m]) .node-container .chevron,\n:host([scale=m]) .node-container .checkmark,\n:host([scale=m]) .node-container .bullet-point*/[scale=m].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item .checkbox.sc-calcite-tree-item,[scale=m].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item .chevron.sc-calcite-tree-item,[scale=m].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item .checkmark.sc-calcite-tree-item,[scale=m].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item .bullet-point.sc-calcite-tree-item{margin-inline:0.5rem}/*!@:host([scale=l])*/[scale=l].sc-calcite-tree-item-h{font-size:var(--calcite-font-size-0);line-height:1.25rem}/*!@:host([scale=l]) .node-container*/[scale=l].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item{--calcite-tree-padding-y:0.75rem}/*!@:host([scale=l]) .node-container .checkbox,\n:host([scale=l]) .node-container .chevron,\n:host([scale=l]) .node-container .checkmark,\n:host([scale=l]) .node-container .bullet-point*/[scale=l].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item .checkbox.sc-calcite-tree-item,[scale=l].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item .chevron.sc-calcite-tree-item,[scale=l].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item .checkmark.sc-calcite-tree-item,[scale=l].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item .bullet-point.sc-calcite-tree-item{margin-inline:0.75rem}/*!@:host([lines]) .children-container:after*/[lines].sc-calcite-tree-item-h .children-container.sc-calcite-tree-item:after{position:absolute;top:0px;width:1px;transition-property:color, background-color, border-color, fill, stroke, -webkit-text-decoration-color;-webkit-transition-property:color, background-color, border-color, fill, stroke, -webkit-text-decoration-color;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, -webkit-text-decoration-color;-webkit-transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transition-duration:150ms;transition-duration:150ms;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;height:96%;content:\"\";background-color:var(--calcite-ui-border-2);z-index:-1}/*!@:host(:not([lines])) .node-container:after*/.sc-calcite-tree-item-h:not([lines]) .node-container.sc-calcite-tree-item:after{display:none}/*!@::slotted(*)*/.sc-calcite-tree-item-s>*{min-width:0px;max-width:100%;overflow-wrap:break-word;color:inherit;text-decoration:none !important}/*!@::slotted(*):hover*/.sc-calcite-tree-item-s>*:hover{text-decoration:none !important}/*!@::slotted(a)*/.sc-calcite-tree-item-s>a{width:100%;-webkit-text-decoration-line:none;text-decoration-line:none}/*!@:host*/.sc-calcite-tree-item-h{outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@:host(:focus)*/.sc-calcite-tree-item-h:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@.checkbox*/.checkbox.sc-calcite-tree-item{outline:2px solid transparent;outline-offset:2px;line-height:0}/*!@.checkbox-label*/.checkbox-label.sc-calcite-tree-item{pointer-events:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}/*!@.children-container*/.children-container.sc-calcite-tree-item{position:relative;height:0px;overflow:hidden;-webkit-margin-start:1.25rem;margin-inline-start:1.25rem;-webkit-transform:scaleY(0);transform:scaleY(0);opacity:0;-webkit-transition:var(--calcite-animation-timing) cubic-bezier(0.215, 0.44, 0.42, 0.88), opacity var(--calcite-animation-timing) cubic-bezier(0.215, 0.44, 0.42, 0.88), all var(--calcite-animation-timing) ease-in-out;transition:var(--calcite-animation-timing) cubic-bezier(0.215, 0.44, 0.42, 0.88), opacity var(--calcite-animation-timing) cubic-bezier(0.215, 0.44, 0.42, 0.88), all var(--calcite-animation-timing) ease-in-out;-webkit-transform-origin:top;transform-origin:top}/*!@:host([expanded]) > .children-container*/[expanded].sc-calcite-tree-item-h>.children-container.sc-calcite-tree-item{-webkit-transform:scaleY(1);transform:scaleY(1);opacity:1;height:auto}/*!@.node-container*/.node-container.sc-calcite-tree-item{position:relative;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:var(--calcite-tree-padding-y) 0}/*!@.node-container .checkmark, .node-container .bullet-point*/.node-container.sc-calcite-tree-item .checkmark.sc-calcite-tree-item,.node-container.sc-calcite-tree-item .bullet-point.sc-calcite-tree-item{opacity:0;-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;color:var(--calcite-ui-border-1)}/*!@.node-container:hover .checkmark, .node-container:hover .bullet-point, :host([selected]) .node-container:hover .checkmark, :host([selected]) .node-container:hover .bullet-point, :host(:focus) .node-container .checkmark, :host(:focus) .node-container .bullet-point*/.node-container.sc-calcite-tree-item:hover .checkmark.sc-calcite-tree-item,.node-container.sc-calcite-tree-item:hover .bullet-point.sc-calcite-tree-item,[selected].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item:hover .checkmark.sc-calcite-tree-item,[selected].sc-calcite-tree-item-h .node-container.sc-calcite-tree-item:hover .bullet-point.sc-calcite-tree-item,.sc-calcite-tree-item-h:focus .node-container.sc-calcite-tree-item .checkmark.sc-calcite-tree-item,.sc-calcite-tree-item-h:focus .node-container.sc-calcite-tree-item .bullet-point.sc-calcite-tree-item{opacity:1}/*!@:host([selected]) > .node-container, :host([selected]) > .node-container:hover*/[selected].sc-calcite-tree-item-h>.node-container.sc-calcite-tree-item,[selected].sc-calcite-tree-item-h>.node-container.sc-calcite-tree-item:hover{font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1)}/*!@:host([selected]) > .node-container .bullet-point, :host([selected]) > .node-container .checkmark, :host([selected]) > .node-container:hover .bullet-point, :host([selected]) > .node-container:hover .checkmark*/[selected].sc-calcite-tree-item-h>.node-container.sc-calcite-tree-item .bullet-point.sc-calcite-tree-item,[selected].sc-calcite-tree-item-h>.node-container.sc-calcite-tree-item .checkmark.sc-calcite-tree-item,[selected].sc-calcite-tree-item-h>.node-container.sc-calcite-tree-item:hover .bullet-point.sc-calcite-tree-item,[selected].sc-calcite-tree-item-h>.node-container.sc-calcite-tree-item:hover .checkmark.sc-calcite-tree-item{opacity:1;color:var(--calcite-ui-brand)}/*!@:host(:not([has-children])):host([scale=s]) > .node-container[data-selection-mode=ancestors] .checkbox*/.sc-calcite-tree-item-h:not([has-children]).sc-calcite-tree-item-h([scale=s])>.node-container[data-selection-mode=ancestors].sc-calcite-tree-item .checkbox.sc-calcite-tree-item{-webkit-padding-start:1.25rem;padding-inline-start:1.25rem}/*!@:host(:not([has-children])):host([scale=m]) > .node-container[data-selection-mode=ancestors] .checkbox*/.sc-calcite-tree-item-h:not([has-children]).sc-calcite-tree-item-h([scale=m])>.node-container[data-selection-mode=ancestors].sc-calcite-tree-item .checkbox.sc-calcite-tree-item{-webkit-padding-start:1.5rem;padding-inline-start:1.5rem}/*!@:host(:not([has-children])):host([scale=l]) > .node-container[data-selection-mode=ancestors] .checkbox*/.sc-calcite-tree-item-h:not([has-children]).sc-calcite-tree-item-h([scale=l])>.node-container[data-selection-mode=ancestors].sc-calcite-tree-item .checkbox.sc-calcite-tree-item{-webkit-padding-start:1.75rem;padding-inline-start:1.75rem}/*!@:host([has-children]) > .node-container[data-selection-mode=ancestors] .checkbox*/[has-children].sc-calcite-tree-item-h>.node-container[data-selection-mode=ancestors].sc-calcite-tree-item .checkbox.sc-calcite-tree-item{-webkit-margin-start:0;margin-inline-start:0}/*!@:host([has-children]) > .node-container .bullet-point, :host([has-children]) > .node-container .checkmark*/[has-children].sc-calcite-tree-item-h>.node-container.sc-calcite-tree-item .bullet-point.sc-calcite-tree-item,[has-children].sc-calcite-tree-item-h>.node-container.sc-calcite-tree-item .checkmark.sc-calcite-tree-item{display:none}/*!@:host([has-children][expanded]:not([selected])) > .node-container ::slotted(*)*/.sc-calcite-tree-item-h[has-children][expanded]:not([selected])>.node-container .sc-calcite-tree-item-s>*{font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1)}/*!@:host([has-children][selected]) > .node-container[data-selection-mode=children], :host([has-children][selected]) > .node-container[data-selection-mode=multi-children]*/[has-children][selected].sc-calcite-tree-item-h>.node-container[data-selection-mode=children].sc-calcite-tree-item,[has-children][selected].sc-calcite-tree-item-h>.node-container[data-selection-mode=multi-children].sc-calcite-tree-item{color:var(--calcite-ui-brand)}/*!@.chevron*/.chevron.sc-calcite-tree-item{position:relative;-ms-flex-item-align:center;align-self:center;color:var(--calcite-ui-text-3);-webkit-transition-property:all;transition-property:all;-webkit-transition-duration:var(--calcite-animation-timing);transition-duration:var(--calcite-animation-timing);-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s;-ms-flex:0 0 auto;flex:0 0 auto;-webkit-transform:rotate(0deg);transform:rotate(0deg)}/*!@.calcite--rtl .chevron*/.calcite--rtl.sc-calcite-tree-item .chevron.sc-calcite-tree-item{-webkit-transform:rotate(180deg);transform:rotate(180deg)}/*!@:host([expanded]) > .node-container > .chevron*/[expanded].sc-calcite-tree-item-h>.node-container.sc-calcite-tree-item>.chevron.sc-calcite-tree-item{-webkit-transform:rotate(90deg);transform:rotate(90deg)}/*!@:host([selected]) .checkmark,\n:host([selected]) .bullet-point*/[selected].sc-calcite-tree-item-h .checkmark.sc-calcite-tree-item,[selected].sc-calcite-tree-item-h .bullet-point.sc-calcite-tree-item{color:var(--calcite-ui-brand)}";

/**
 * @slot - A slot for adding content to the item.
 * @slot children - A slot for adding nested `calcite-tree` elements.
 */
class TreeItem {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteTreeItemSelect = createEvent(this, "calciteTreeItemSelect", 7);
    //--------------------------------------------------------------------------
    //
    //  Properties
    //
    //--------------------------------------------------------------------------
    /** Is the item currently selected */
    this.selected = false;
    /** True if the item is in an expanded state */
    this.expanded = false;
    /** @internal Is the parent of this item expanded? */
    this.parentExpanded = false;
    /** @internal What level of depth is this item at? */
    this.depth = -1;
    /** @internal Does this tree item have a tree inside it? */
    this.hasChildren = null;
    this.iconClickHandler = (event) => {
      event.stopPropagation();
      this.expanded = !this.expanded;
    };
    this.childrenClickHandler = (event) => event.stopPropagation();
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.updateParentIsExpanded = (el, expanded) => {
      const items = getSlotted(el, SLOTS$1.children, {
        all: true,
        selector: "calcite-tree-item"
      });
      items.forEach((item) => (item.parentExpanded = expanded));
    };
    this.updateAncestorTree = () => {
      if (this.selected && this.selectionMode === TreeSelectionMode.Ancestors) {
        const ancestors = [];
        let parent = this.parentTreeItem;
        while (parent) {
          ancestors.push(parent);
          parent = parent.parentElement.closest("calcite-tree-item");
        }
        ancestors.forEach((item) => (item.indeterminate = true));
        return;
      }
    };
  }
  expandedHandler(newValue) {
    this.updateParentIsExpanded(this.el, newValue);
  }
  getselectionMode() {
    this.isSelectionMultiLike =
      this.selectionMode === TreeSelectionMode.Multi ||
        this.selectionMode === TreeSelectionMode.MultiChildren;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    this.parentTreeItem = this.el.parentElement.closest("calcite-tree-item");
    if (this.parentTreeItem) {
      const { expanded } = this.parentTreeItem;
      this.updateParentIsExpanded(this.parentTreeItem, expanded);
    }
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  componentWillRender() {
    this.hasChildren = !!this.el.querySelector("calcite-tree");
    this.depth = 0;
    let parentTree = this.el.closest("calcite-tree");
    if (!parentTree) {
      return;
    }
    this.selectionMode = parentTree.selectionMode;
    this.scale = parentTree.scale || "m";
    this.lines = parentTree.lines;
    let nextParentTree;
    while (parentTree) {
      nextParentTree = parentTree.parentElement.closest("calcite-tree");
      if (nextParentTree === parentTree) {
        break;
      }
      else {
        parentTree = nextParentTree;
        this.depth = this.depth + 1;
      }
    }
  }
  componentDidLoad() {
    this.updateAncestorTree();
  }
  render() {
    const rtl = getElementDir(this.el) === "rtl";
    const showBulletPoint = this.selectionMode === TreeSelectionMode.Single ||
      this.selectionMode === TreeSelectionMode.Children;
    const showCheckmark = this.selectionMode === TreeSelectionMode.Multi ||
      this.selectionMode === TreeSelectionMode.MultiChildren;
    const chevron = this.hasChildren ? (hAsync("calcite-icon", { class: {
        [CSS$1.chevron]: true,
        [CSS_UTILITY.rtl]: rtl
      }, "data-test-id": "icon", icon: ICONS$1.chevronRight, onClick: this.iconClickHandler, scale: "s" })) : null;
    const defaultSlotNode = hAsync("slot", { key: "default-slot" });
    const checkbox = this.selectionMode === TreeSelectionMode.Ancestors ? (hAsync("label", { class: CSS$1.checkboxLabel, key: "checkbox-label" }, hAsync("calcite-checkbox", { checked: this.selected, class: CSS$1.checkbox, "data-test-id": "checkbox", indeterminate: this.hasChildren && this.indeterminate, scale: this.scale, tabIndex: -1 }), defaultSlotNode)) : null;
    const selectedIcon = showBulletPoint
      ? ICONS$1.bulletPoint
      : showCheckmark
        ? ICONS$1.checkmark
        : null;
    const bulletOrCheckIcon = selectedIcon ? (hAsync("calcite-icon", { class: {
        [CSS$1.bulletPointIcon]: selectedIcon === ICONS$1.bulletPoint,
        [CSS$1.checkmarkIcon]: selectedIcon === ICONS$1.checkmark,
        [CSS_UTILITY.rtl]: rtl
      }, icon: selectedIcon, scale: "s" })) : null;
    const hidden = !(this.parentExpanded || this.depth === 1);
    return (hAsync(Host, { "aria-expanded": this.hasChildren ? this.expanded.toString() : undefined, "aria-hidden": hidden.toString(), "aria-selected": this.selected ? "true" : showCheckmark ? "false" : undefined, "calcite-hydrated-hidden": hidden, role: "treeitem", tabindex: this.parentExpanded || this.depth === 1 ? "0" : "-1" }, hAsync("div", { class: {
        [CSS$1.nodeContainer]: true,
        [CSS_UTILITY.rtl]: rtl
      }, "data-selection-mode": this.selectionMode, ref: (el) => (this.defaultSlotWrapper = el) }, chevron, bulletOrCheckIcon, checkbox ? checkbox : defaultSlotNode), hAsync("div", { class: {
        [CSS$1.childrenContainer]: true,
        [CSS_UTILITY.rtl]: rtl
      }, "data-test-id": "calcite-tree-children", onClick: this.childrenClickHandler, ref: (el) => (this.childrenSlotWrapper = el), role: this.hasChildren ? "group" : undefined }, hAsync("slot", { name: SLOTS$1.children }))));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  onClick(e) {
    // Solve for if the item is clicked somewhere outside the slotted anchor.
    // Anchor is triggered anywhere you click
    const [link] = filterDirectChildren(this.el, "a");
    if (link && e.composedPath()[0].tagName.toLowerCase() !== "a") {
      const target = link.target === "" ? "_self" : link.target;
      window.open(link.href, target);
    }
    this.calciteTreeItemSelect.emit({
      modifyCurrentSelection: this.selectionMode === TreeSelectionMode.Ancestors || this.isSelectionMultiLike,
      forceToggle: false
    });
  }
  keyDownHandler(e) {
    let root;
    switch (e.key) {
      case " ":
        this.calciteTreeItemSelect.emit({
          modifyCurrentSelection: this.isSelectionMultiLike,
          forceToggle: false
        });
        e.preventDefault();
        break;
      case "Enter":
        // activates a node, i.e., performs its default action. For parent nodes, one possible default action is to open or close the node. In single-select trees where selection does not follow focus (see note below), the default action is typically to select the focused node.
        const link = nodeListToArray$1(this.el.children).find((e) => e.matches("a"));
        if (link) {
          link.click();
          this.selected = true;
        }
        else {
          this.calciteTreeItemSelect.emit({
            modifyCurrentSelection: this.isSelectionMultiLike,
            forceToggle: false
          });
        }
        e.preventDefault();
        break;
      case "Home":
        root = this.el.closest("calcite-tree:not([child])");
        const firstNode = root.querySelector("calcite-tree-item");
        firstNode.focus();
        break;
      case "End":
        root = this.el.closest("calcite-tree:not([child])");
        let currentNode = root.children[root.children.length - 1]; // last child
        let currentTree = nodeListToArray$1(currentNode.children).find((e) => e.matches("calcite-tree"));
        while (currentTree) {
          currentNode = currentTree.children[root.children.length - 1];
          currentTree = nodeListToArray$1(currentNode.children).find((e) => e.matches("calcite-tree"));
        }
        currentNode.focus();
        break;
    }
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "expanded": ["expandedHandler"],
    "selectionMode": ["getselectionMode"]
  }; }
  static get style() { return treeItemCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-tree-item",
    "$members$": {
      "selected": [1540],
      "expanded": [1540],
      "parentExpanded": [4, "parent-expanded"],
      "depth": [1538],
      "hasChildren": [1540, "has-children"],
      "lines": [1540],
      "inputEnabled": [4, "input-enabled"],
      "scale": [1537],
      "indeterminate": [516],
      "selectionMode": [1025, "selection-mode"]
    },
    "$listeners$": [[0, "click", "onClick"], [0, "keydown", "keyDownHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["selected", "selected"], ["expanded", "expanded"], ["depth", "depth"], ["hasChildren", "has-children"], ["lines", "lines"], ["scale", "scale"], ["indeterminate", "indeterminate"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const CSS = {
  container: "container",
  handle: "handle"
};
var ICON_TYPES;
(function (ICON_TYPES) {
  ICON_TYPES["grip"] = "grip";
})(ICON_TYPES || (ICON_TYPES = {}));

const valueListCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-value-list:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-value-list{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-value-list{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-value-list{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-value-list{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-value-list{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-value-list:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-value-list-h{display:none}/*!@:host*/.sc-calcite-value-list-h{position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:stretch;align-items:stretch;background-color:transparent;font-size:var(--calcite-font-size--1);color:var(--calcite-ui-text-2)}/*!@:host **/.sc-calcite-value-list-h *.sc-calcite-value-list{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@:host([disabled])*/[disabled].sc-calcite-value-list-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-value-list-h[disabled] .sc-calcite-value-list-s>[calcite-hydrated][disabled],[disabled].sc-calcite-value-list-h [calcite-hydrated][disabled].sc-calcite-value-list{opacity:1}/*!@calcite-value-list-item:last-of-type*/calcite-value-list-item.sc-calcite-value-list:last-of-type{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@:host([filter-enabled]) header*/[filter-enabled].sc-calcite-value-list-h header.sc-calcite-value-list{margin-bottom:0.25rem;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end;background-color:var(--calcite-ui-foreground-1);--tw-shadow:0 1px 0 var(--calcite-ui-border-3);--tw-shadow-colored:0 1px 0 var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@:host([filter-enabled]) header.sticky-pos*/[filter-enabled].sc-calcite-value-list-h header.sticky-pos.sc-calcite-value-list{position:-webkit-sticky;position:sticky;top:0px;z-index:10}/*!@calcite-filter*/calcite-filter.sc-calcite-value-list{margin-bottom:1px}";

/**
 * @slot - A slot for adding `calcite-value-list-item` elements. Items are displayed as a vertical list.
 * @slot menu-actions - A slot for adding a button + menu combo for performing actions like sorting.
 */
class ValueList {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteListChange = createEvent(this, "calciteListChange", 7);
    this.calciteListOrderChange = createEvent(this, "calciteListOrderChange", 7);
    // --------------------------------------------------------------------------
    //
    //  Properties
    //
    // --------------------------------------------------------------------------
    /**
     * When true, disabled prevents interaction. This state shows items with lower opacity/grayed.
     */
    this.disabled = false;
    /**
     * When true, the items will be sortable via drag and drop.
     */
    this.dragEnabled = false;
    /**
     * When true, an input appears at the top of the list that can be used by end users to filter items in the list.
     */
    this.filterEnabled = false;
    /**
     * When true, content is waiting to be loaded. This state shows a busy indicator.
     */
    this.loading = false;
    /**
     * Multiple Works similar to standard radio buttons and checkboxes.
     * When true, a user can select multiple items at a time.
     * When false, only a single item can be selected at a time
     * and selecting a new item will deselect any other selected items.
     */
    this.multiple = false;
    /**
     * When true and single-selection is enabled, the selection will change when navigating items via the keyboard.
     */
    this.selectionFollowsFocus = false;
    // --------------------------------------------------------------------------
    //
    //  Private Properties
    //
    // --------------------------------------------------------------------------
    this.selectedValues = new Map();
    this.dataForFilter = [];
    this.lastSelectedItem = null;
    this.mutationObserver = createObserver("mutation", mutationObserverCallback.bind(this));
    this.setFilterEl = (el) => {
      this.filterEl = el;
    };
    this.deselectRemovedItems = deselectRemovedItems.bind(this);
    this.deselectSiblingItems = deselectSiblingItems.bind(this);
    this.selectSiblings = selectSiblings.bind(this);
    this.handleFilter = handleFilter.bind(this);
    this.getItemData = getItemData.bind(this);
    this.keyDownHandler = (event) => {
      const handleElement = event
        .composedPath()
        .find((item) => { var _a; return ((_a = item.dataset) === null || _a === void 0 ? void 0 : _a.jsHandle) !== undefined; });
      const item = event
        .composedPath()
        .find((item) => { var _a; return ((_a = item.tagName) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === "calcite-value-list-item"; });
      // Only trigger keyboard sorting when the internal drag handle is focused and activated
      if (!handleElement || !item.handleActivated) {
        keyDownHandler.call(this, event);
        return;
      }
      const { items } = this;
      if ((event.key !== "ArrowUp" && event.key !== "ArrowDown") || items.length <= 1) {
        return;
      }
      event.preventDefault();
      const { el } = this;
      const nextIndex = moveItemIndex(this, item, event.key === "ArrowUp" ? "up" : "down");
      if (nextIndex === items.length - 1) {
        el.appendChild(item);
      }
      else {
        const itemAtNextIndex = el.children[nextIndex];
        const insertionReferenceItem = itemAtNextIndex === item.nextElementSibling
          ? itemAtNextIndex.nextElementSibling
          : itemAtNextIndex;
        el.insertBefore(item, insertionReferenceItem);
      }
      this.items = this.getItems();
      this.calciteListOrderChange.emit(this.items.map(({ value }) => value));
      requestAnimationFrame(() => handleElement.focus());
      item.handleActivated = true;
    };
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    initialize.call(this);
    initializeObserver.call(this);
  }
  componentDidLoad() {
    this.setUpDragAndDrop();
  }
  componentDidRender() {
    updateHostInteraction(this);
  }
  disconnectedCallback() {
    cleanUpObserver.call(this);
    this.cleanUpDragAndDrop();
  }
  calciteListFocusOutHandler(event) {
    calciteListFocusOutHandler.call(this, event);
  }
  calciteListItemRemoveHandler(event) {
    removeItem.call(this, event);
  }
  calciteListItemChangeHandler(event) {
    calciteListItemChangeHandler.call(this, event);
  }
  calciteListItemPropsChangeHandler(event) {
    event.stopPropagation();
    this.setUpFilter();
  }
  calciteListItemValueChangeHandler(event) {
    calciteListItemValueChangeHandler.call(this, event);
  }
  // --------------------------------------------------------------------------
  //
  //  Private Methods
  //
  // --------------------------------------------------------------------------
  getItems() {
    return Array.from(this.el.querySelectorAll("calcite-value-list-item"));
  }
  setUpItems() {
    setUpItems.call(this, "calcite-value-list-item");
  }
  setUpFilter() {
    if (this.filterEnabled) {
      this.dataForFilter = this.getItemData();
    }
  }
  setUpDragAndDrop() {
    this.cleanUpDragAndDrop();
    if (!this.dragEnabled) {
      return;
    }
    this.sortable = Sortable.create(this.el, {
      dataIdAttr: "id",
      handle: `.${CSS.handle}`,
      draggable: "calcite-value-list-item",
      group: this.group,
      onSort: () => {
        this.items = Array.from(this.el.querySelectorAll("calcite-value-list-item"));
        const values = this.items.map((item) => item.value);
        this.calciteListOrderChange.emit(values);
      }
    });
  }
  cleanUpDragAndDrop() {
    var _a;
    (_a = this.sortable) === null || _a === void 0 ? void 0 : _a.destroy();
    this.sortable = null;
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /** Returns the currently selected items */
  async getSelectedItems() {
    return this.selectedValues;
  }
  /** Sets focus on the component. */
  async setFocus(focusId) {
    return setFocus.call(this, focusId);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  getIconType() {
    let type = null;
    if (this.dragEnabled) {
      type = ICON_TYPES.grip;
    }
    return type;
  }
  render() {
    return hAsync(List, { onKeyDown: this.keyDownHandler, props: this });
  }
  get el() { return getElement(this); }
  static get style() { return valueListCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-value-list",
    "$members$": {
      "disabled": [516],
      "dragEnabled": [516, "drag-enabled"],
      "filterEnabled": [516, "filter-enabled"],
      "filterPlaceholder": [513, "filter-placeholder"],
      "group": [1],
      "loading": [516],
      "multiple": [516],
      "selectionFollowsFocus": [4, "selection-follows-focus"],
      "selectedValues": [32],
      "dataForFilter": [32],
      "getSelectedItems": [64],
      "setFocus": [64]
    },
    "$listeners$": [[0, "focusout", "calciteListFocusOutHandler"], [0, "calciteListItemRemove", "calciteListItemRemoveHandler"], [0, "calciteListItemChange", "calciteListItemChangeHandler"], [0, "calciteListItemPropsChange", "calciteListItemPropsChangeHandler"], [0, "calciteListItemValueChange", "calciteListItemValueChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"], ["dragEnabled", "drag-enabled"], ["filterEnabled", "filter-enabled"], ["filterPlaceholder", "filter-placeholder"], ["loading", "loading"], ["multiple", "multiple"]]
  }; }
}

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 */
const ICONS = {
  drag: "drag"
};
const SLOTS = {
  actionsEnd: "actions-end",
  actionsStart: "actions-start"
};

const valueListItemCss = "@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}/*!@:root*/.sc-calcite-value-list-item:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}/*!@.calcite-animate*/.calcite-animate.sc-calcite-value-list-item{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}/*!@.calcite-animate__in*/.calcite-animate__in.sc-calcite-value-list-item{-webkit-animation-name:in;animation-name:in}/*!@.calcite-animate__in-down*/.calcite-animate__in-down.sc-calcite-value-list-item{-webkit-animation-name:in-down;animation-name:in-down}/*!@.calcite-animate__in-up*/.calcite-animate__in-up.sc-calcite-value-list-item{-webkit-animation-name:in-up;animation-name:in-up}/*!@.calcite-animate__in-scale*/.calcite-animate__in-scale.sc-calcite-value-list-item{-webkit-animation-name:in-scale;animation-name:in-scale}/*!@:root*/.sc-calcite-value-list-item:root{--calcite-popper-transition:var(--calcite-animation-timing)}/*!@:host([hidden])*/[hidden].sc-calcite-value-list-item-h{display:none}/*!@:host*/.sc-calcite-value-list-item-h{margin-bottom:1px;-webkit-box-sizing:border-box;box-sizing:border-box;display:-ms-flexbox;display:flex;background-color:var(--calcite-ui-foreground-1);font-size:var(--calcite-font-size--1);color:var(--calcite-ui-text-2);--tw-shadow:0 1px 0 var(--calcite-ui-border-3);--tw-shadow-colored:0 1px 0 var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);-webkit-transition:background-color var(--calcite-animation-timing), -webkit-box-shadow var(--calcite-animation-timing);transition:background-color var(--calcite-animation-timing), -webkit-box-shadow var(--calcite-animation-timing);transition:background-color var(--calcite-animation-timing), box-shadow var(--calcite-animation-timing);transition:background-color var(--calcite-animation-timing), box-shadow var(--calcite-animation-timing), -webkit-box-shadow var(--calcite-animation-timing)}/*!@:host **/.sc-calcite-value-list-item-h *.sc-calcite-value-list-item{-webkit-box-sizing:border-box;box-sizing:border-box}/*!@calcite-pick-list-item*/calcite-pick-list-item.sc-calcite-value-list-item{position:relative;margin:0px;-ms-flex-positive:1;flex-grow:1;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@:host([active]), :host([selected])*/[active].sc-calcite-value-list-item-h,[selected].sc-calcite-value-list-item-h{--tw-shadow:0 0 0 1px var(--calcite-ui-brand);--tw-shadow-colored:0 0 0 1px var(--tw-shadow-color);-webkit-box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}/*!@.handle*/.handle.sc-calcite-value-list-item{display:-ms-flexbox;display:flex;cursor:move;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border-style:none;background-color:transparent;padding-top:0px;padding-bottom:0px;padding-left:0.25rem;padding-right:0.25rem;color:var(--calcite-ui-text-1);color:var(--calcite-ui-border-1);outline-offset:0;outline-color:transparent;-webkit-transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;transition:outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out}/*!@.handle:hover*/.handle.sc-calcite-value-list-item:hover{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-text-1)}/*!@.handle:focus*/.handle.sc-calcite-value-list-item:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}/*!@.handle--activated*/.handle--activated.sc-calcite-value-list-item{background-color:var(--calcite-ui-foreground-3);color:var(--calcite-ui-text-1)}/*!@.handle calcite-icon*/.handle.sc-calcite-value-list-item calcite-icon.sc-calcite-value-list-item{color:inherit}/*!@:host([disabled])*/[disabled].sc-calcite-value-list-item-h{pointer-events:none;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}/*!@:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled]*/.sc-calcite-value-list-item-h[disabled] .sc-calcite-value-list-item-s>[calcite-hydrated][disabled],[disabled].sc-calcite-value-list-item-h [calcite-hydrated][disabled].sc-calcite-value-list-item{opacity:1}";

/**
 * @slot actions-end - A slot for adding actions or content to the end side of the item.
 * @slot actions-start - A slot for adding actions or content to the start side of the item.
 */
class ValueListItem {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.calciteListItemRemove = createEvent(this, "calciteListItemRemove", 7);
    /**
     * When true, the item cannot be clicked and is visually muted
     */
    this.disabled = false;
    /**
     * @internal When false, the item cannot be deselected by user interaction.
     */
    this.disableDeselect = false;
    /**
     * When true, prevents the content of the list item from user interaction.
     */
    this.nonInteractive = false;
    /**
     * @internal - stores the activated state of the drag handle.
     */
    this.handleActivated = false;
    /**
     * Determines the icon SVG symbol that will be shown. Options are circle, square, grip or null.
     * @see [ICON_TYPES](https://github.com/Esri/calcite-components/blob/master/src/components/pick-list/resources.ts#L5)
     */
    this.icon = null;
    /**
     * Set this to true to display a remove action that removes the item from the list.
     */
    this.removable = false;
    /**
     * Set this to true to pre-select an item. Toggles when an item is checked/unchecked.
     */
    this.selected = false;
    this.pickListItem = null;
    this.guid = `calcite-value-list-item-${guid()}`;
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.getPickListRef = (el) => (this.pickListItem = el);
    this.handleKeyDown = (event) => {
      if (event.key === " ") {
        this.handleActivated = !this.handleActivated;
      }
    };
    this.handleBlur = () => {
      this.handleActivated = false;
    };
    this.handleSelectChange = (event) => {
      this.selected = event.detail.selected;
    };
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    connectConditionalSlotComponent(this);
  }
  disconnectedCallback() {
    disconnectConditionalSlotComponent(this);
  }
  componentDidRender() {
    updateHostInteraction(this, this.el.closest("calcite-value-list") ? "managed" : false);
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /**
   * Used to toggle the selection state. By default this won't trigger an event.
   * The first argument allows the value to be coerced, rather than swapping values.
   */
  async toggleSelected(coerce) {
    this.pickListItem.toggleSelected(coerce);
  }
  /** Sets focus on the component. */
  async setFocus() {
    var _a;
    (_a = this.pickListItem) === null || _a === void 0 ? void 0 : _a.setFocus();
  }
  calciteListItemChangeHandler(event) {
    // adjust item payload from wrapped item before bubbling
    event.detail.item = this.el;
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderActionsEnd() {
    const { el } = this;
    const hasActionsEnd = getSlotted(el, SLOTS.actionsEnd);
    return hasActionsEnd ? (hAsync("slot", { name: SLOTS.actionsEnd, slot: SLOTS$9.actionsEnd })) : null;
  }
  renderActionsStart() {
    const { el } = this;
    const hasActionsStart = getSlotted(el, SLOTS.actionsStart);
    return hasActionsStart ? (hAsync("slot", { name: SLOTS.actionsStart, slot: SLOTS$9.actionsStart })) : null;
  }
  renderHandle() {
    const { icon } = this;
    if (icon === ICON_TYPES$1.grip) {
      return (hAsync("span", { "aria-pressed": this.handleActivated.toString(), class: {
          [CSS$h.handle]: true,
          [CSS$h.handleActivated]: this.handleActivated
        }, "data-js-handle": true, onBlur: this.handleBlur, onKeyDown: this.handleKeyDown, role: "button", tabindex: "0" }, hAsync("calcite-icon", { icon: ICONS.drag, scale: "s" })));
    }
  }
  render() {
    return (hAsync(Host, { id: this.el.id || this.guid }, this.renderHandle(), hAsync("calcite-pick-list-item", { description: this.description, disableDeselect: this.disableDeselect, disabled: this.disabled, label: this.label, metadata: this.metadata, nonInteractive: this.nonInteractive, onCalciteListItemChange: this.handleSelectChange, ref: this.getPickListRef, removable: this.removable, selected: this.selected, value: this.value }, this.renderActionsStart(), this.renderActionsEnd())));
  }
  get el() { return getElement(this); }
  static get style() { return valueListItemCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "calcite-value-list-item",
    "$members$": {
      "description": [513],
      "disabled": [516],
      "disableDeselect": [4, "disable-deselect"],
      "nonInteractive": [516, "non-interactive"],
      "handleActivated": [1028, "handle-activated"],
      "icon": [513],
      "label": [513],
      "metadata": [16],
      "removable": [516],
      "selected": [1540],
      "value": [8],
      "toggleSelected": [64],
      "setFocus": [64]
    },
    "$listeners$": [[0, "calciteListItemChange", "calciteListItemChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["description", "description"], ["disabled", "disabled"], ["nonInteractive", "non-interactive"], ["icon", "icon"], ["label", "label"], ["removable", "removable"], ["selected", "selected"]]
  }; }
}

registerComponents([
  Accordion,
  AccordionItem,
  Action,
  ActionBar,
  ActionGroup,
  ActionMenu,
  ActionPad,
  Alert,
  Avatar,
  Block,
  BlockSection,
  Button,
  Card,
  Checkbox,
  Chip,
  ColorPicker,
  ColorPickerHexInput,
  ColorPickerSwatch,
  Combobox,
  ComboboxItem,
  ComboboxItemGroup,
  DatePicker,
  DatePickerDay,
  DatePickerMonth,
  DatePickerMonthHeader,
  Dropdown,
  DropdownGroup,
  DropdownItem,
  Fab,
  Filter,
  Flow,
  Graph,
  Handle,
  Icon,
  InlineEditable,
  Input,
  InputDatePicker,
  InputMessage,
  InputTimePicker,
  JsonEditor,
  Label,
  Link,
  List$1,
  ListItem,
  ListItemGroup,
  Loader,
  Modal,
  Notice,
  Option,
  OptionGroup,
  Pagination,
  Panel,
  PickList,
  PickListGroup,
  PickListItem,
  Popover,
  PopoverManager,
  Progress,
  RadioButton,
  RadioButtonGroup,
  RadioGroup,
  RadioGroupItem,
  Rating,
  Scrim,
  Select,
  Shell,
  ShellCenterRow,
  ShellPanel,
  Slider,
  SolutionConfiguration,
  SolutionContents,
  SolutionItem,
  SolutionItemDetails,
  SolutionItemIcon,
  SolutionItemSharing,
  SolutionOrganizationVariables,
  SolutionResourceItem,
  SolutionSpatialRef,
  SolutionTemplateData,
  SolutionVariables,
  SortableList,
  SplitButton,
  Stepper,
  StepperItem,
  StoreManager,
  Switch,
  Tab,
  TabNav,
  TabTitle,
  Tabs,
  Tile,
  TileSelect,
  TileSelectGroup,
  TimePicker,
  Tip,
  TipGroup,
  TipManager,
  Tooltip,
  TooltipManager,
  Tree,
  TreeItem,
  ValueList,
  ValueListItem,
]);

exports.hydrateApp = hydrateApp;


  /*hydrateAppClosure end*/
  hydrateApp(window, $stencilHydrateOpts, $stencilHydrateResults, $stencilAfterHydrate, $stencilHydrateResolve);
  }

  hydrateAppClosure($stencilWindow);
}

function createWindowFromHtml(e, t) {
 let r = templateWindows.get(t);
 return null == r && (r = new MockWindow(e), templateWindows.set(t, r)), cloneWindow(r);
}

function normalizeHydrateOptions(e) {
 const t = Object.assign({
  serializeToHtml: !1,
  destroyWindow: !1,
  destroyDocument: !1
 }, e || {});
 return "boolean" != typeof t.clientHydrateAnnotations && (t.clientHydrateAnnotations = !0), 
 "boolean" != typeof t.constrainTimeouts && (t.constrainTimeouts = !0), "number" != typeof t.maxHydrateCount && (t.maxHydrateCount = 300), 
 "boolean" != typeof t.runtimeLogging && (t.runtimeLogging = !1), "number" != typeof t.timeout && (t.timeout = 15e3), 
 Array.isArray(t.excludeComponents) ? t.excludeComponents = t.excludeComponents.filter(filterValidTags).map(mapValidTags) : t.excludeComponents = [], 
 Array.isArray(t.staticComponents) ? t.staticComponents = t.staticComponents.filter(filterValidTags).map(mapValidTags) : t.staticComponents = [], 
 t;
}

function filterValidTags(e) {
 return "string" == typeof e && e.includes("-");
}

function mapValidTags(e) {
 return e.trim().toLowerCase();
}

function generateHydrateResults(e) {
 "string" != typeof e.url && (e.url = "https://hydrate.stenciljs.com/"), "string" != typeof e.buildId && (e.buildId = createHydrateBuildId());
 const t = {
  buildId: e.buildId,
  diagnostics: [],
  url: e.url,
  host: null,
  hostname: null,
  href: null,
  pathname: null,
  port: null,
  search: null,
  hash: null,
  html: null,
  httpStatus: null,
  hydratedCount: 0,
  anchors: [],
  components: [],
  imgs: [],
  scripts: [],
  staticData: [],
  styles: [],
  title: null
 };
 try {
  const r = new URL(e.url, "https://hydrate.stenciljs.com/");
  t.url = r.href, t.host = r.host, t.hostname = r.hostname, t.href = r.href, t.port = r.port, 
  t.pathname = r.pathname, t.search = r.search, t.hash = r.hash;
 } catch (e) {
  renderCatchError(t, e);
 }
 return t;
}

function renderBuildDiagnostic(e, t, r, s) {
 const n = {
  level: t,
  type: "build",
  header: r,
  messageText: s,
  relFilePath: null,
  absFilePath: null,
  lines: []
 };
 return e.pathname ? "/" !== e.pathname && (n.header += ": " + e.pathname) : e.url && (n.header += ": " + e.url), 
 e.diagnostics.push(n), n;
}

function renderBuildError(e, t) {
 return renderBuildDiagnostic(e, "error", "Hydrate Error", t);
}

function renderCatchError(e, t) {
 const r = renderBuildError(e, null);
 return null != t && (null != t.stack ? r.messageText = t.stack.toString() : null != t.message ? r.messageText = t.message.toString() : r.messageText = t.toString()), 
 r;
}

function runtimeLog(e, t, r) {
 global.console[t].apply(global.console, [ `[ ${e}  ${t} ] `, ...r ]);
}

function inspectElement(e, t, r) {
 const s = t.children;
 for (let t = 0, n = s.length; t < n; t++) {
  const n = s[t], o = n.nodeName.toLowerCase();
  if (o.includes("-")) {
   const t = e.components.find((e => e.tag === o));
   null != t && (t.count++, r > t.depth && (t.depth = r));
  } else switch (o) {
  case "a":
   const t = collectAttributes(n);
   t.href = n.href, "string" == typeof t.href && (e.anchors.some((e => e.href === t.href)) || e.anchors.push(t));
   break;

  case "img":
   const r = collectAttributes(n);
   r.src = n.src, "string" == typeof r.src && (e.imgs.some((e => e.src === r.src)) || e.imgs.push(r));
   break;

  case "link":
   const s = collectAttributes(n);
   s.href = n.href, "string" == typeof s.rel && "stylesheet" === s.rel.toLowerCase() && "string" == typeof s.href && (e.styles.some((e => e.link === s.href)) || (delete s.rel, 
   delete s.type, e.styles.push(s)));
   break;

  case "script":
   const o = collectAttributes(n);
   if (n.hasAttribute("src")) o.src = n.src, "string" == typeof o.src && (e.scripts.some((e => e.src === o.src)) || e.scripts.push(o)); else {
    const t = n.getAttribute("data-stencil-static");
    t && e.staticData.push({
     id: t,
     type: n.getAttribute("type"),
     content: n.textContent
    });
   }
  }
  inspectElement(e, n, ++r);
 }
}

function collectAttributes(e) {
 const t = {}, r = e.attributes;
 for (let e = 0, s = r.length; e < s; e++) {
  const s = r.item(e), n = s.nodeName.toLowerCase();
  if (SKIP_ATTRS.has(n)) continue;
  const o = s.nodeValue;
  "class" === n && "" === o || (t[n] = o);
 }
 return t;
}

function patchDomImplementation(e, t) {
 let r;
 if (null != e.defaultView ? (t.destroyWindow = !0, patchWindow(e.defaultView), r = e.defaultView) : (t.destroyWindow = !0, 
 t.destroyDocument = !1, r = new MockWindow(!1)), r.document !== e && (r.document = e), 
 e.defaultView !== r && (e.defaultView = r), "function" != typeof e.documentElement.constructor.prototype.getRootNode && (e.createElement("unknown-element").constructor.prototype.getRootNode = getRootNode), 
 "function" == typeof e.createEvent) {
  const t = e.createEvent("CustomEvent").constructor;
  r.CustomEvent !== t && (r.CustomEvent = t);
 }
 try {
  e.baseURI;
 } catch (t) {
  Object.defineProperty(e, "baseURI", {
   get() {
    const t = e.querySelector("base[href]");
    return t ? new URL(t.getAttribute("href"), r.location.href).href : r.location.href;
   }
  });
 }
 return r;
}

function getRootNode(e) {
 const t = null != e && !0 === e.composed;
 let r = this;
 for (;null != r.parentNode; ) r = r.parentNode, !0 === t && null == r.parentNode && null != r.host && (r = r.host);
 return r;
}

function renderToString(e, t) {
 const r = normalizeHydrateOptions(t);
 return r.serializeToHtml = !0, new Promise((t => {
  let s;
  const n = generateHydrateResults(r);
  if (hasError(n.diagnostics)) t(n); else if ("string" == typeof e) try {
   r.destroyWindow = !0, r.destroyDocument = !0, s = new MockWindow(e), render(s, r, n, t);
  } catch (e) {
   s && s.close && s.close(), s = null, renderCatchError(n, e), t(n);
  } else if (isValidDocument(e)) try {
   r.destroyDocument = !1, s = patchDomImplementation(e, r), render(s, r, n, t);
  } catch (e) {
   s && s.close && s.close(), s = null, renderCatchError(n, e), t(n);
  } else renderBuildError(n, 'Invalid html or document. Must be either a valid "html" string, or DOM "document".'), 
  t(n);
 }));
}

function hydrateDocument(e, t) {
 const r = normalizeHydrateOptions(t);
 return r.serializeToHtml = !1, new Promise((t => {
  let s;
  const n = generateHydrateResults(r);
  if (hasError(n.diagnostics)) t(n); else if ("string" == typeof e) try {
   r.destroyWindow = !0, r.destroyDocument = !0, s = new MockWindow(e), render(s, r, n, t);
  } catch (e) {
   s && s.close && s.close(), s = null, renderCatchError(n, e), t(n);
  } else if (isValidDocument(e)) try {
   r.destroyDocument = !1, s = patchDomImplementation(e, r), render(s, r, n, t);
  } catch (e) {
   s && s.close && s.close(), s = null, renderCatchError(n, e), t(n);
  } else renderBuildError(n, 'Invalid html or document. Must be either a valid "html" string, or DOM "document".'), 
  t(n);
 }));
}

function render(e, t, r, s) {
 if (process.__stencilErrors || (process.__stencilErrors = !0, process.on("unhandledRejection", (e => {
  console.log("unhandledRejection", e);
 }))), function n(e, t, r, s) {
  try {
   e.location.href = r.url;
  } catch (e) {
   renderCatchError(s, e);
  }
  if ("string" == typeof r.userAgent) try {
   e.navigator.userAgent = r.userAgent;
  } catch (e) {}
  if ("string" == typeof r.cookie) try {
   t.cookie = r.cookie;
  } catch (e) {}
  if ("string" == typeof r.referrer) try {
   t.referrer = r.referrer;
  } catch (e) {}
  if ("string" == typeof r.direction) try {
   t.documentElement.setAttribute("dir", r.direction);
  } catch (e) {}
  if ("string" == typeof r.language) try {
   t.documentElement.setAttribute("lang", r.language);
  } catch (e) {}
  if ("string" == typeof r.buildId) try {
   t.documentElement.setAttribute("data-stencil-build", r.buildId);
  } catch (e) {}
  try {
   e.customElements = null;
  } catch (e) {}
  return r.constrainTimeouts && constrainTimeouts(e), function n(e, t, r) {
   try {
    const s = e.location.pathname;
    e.console.error = (...e) => {
     const n = e.reduce(((e, t) => {
      if (t) {
       if (null != t.stack) return e + " " + String(t.stack);
       if (null != t.message) return e + " " + String(t.message);
      }
      return String(t);
     }), "").trim();
     "" !== n && (renderCatchError(r, n), t.runtimeLogging && runtimeLog(s, "error", [ n ]));
    }, e.console.debug = (...e) => {
     renderBuildDiagnostic(r, "debug", "Hydrate Debug", [ ...e ].join(", ")), t.runtimeLogging && runtimeLog(s, "debug", e);
    }, t.runtimeLogging && [ "log", "warn", "assert", "info", "trace" ].forEach((t => {
     e.console[t] = (...e) => {
      runtimeLog(s, t, e);
     };
    }));
   } catch (e) {
    renderCatchError(r, e);
   }
  }(e, r, s), e;
 }(e, e.document, t, r), "function" == typeof t.beforeHydrate) try {
  const n = t.beforeHydrate(e.document);
  isPromise(n) ? n.then((() => {
   hydrateFactory(e, t, r, afterHydrate, s);
  })) : hydrateFactory(e, t, r, afterHydrate, s);
 } catch (n) {
  renderCatchError(r, n), finalizeHydrate(e, e.document, t, r, s);
 } else hydrateFactory(e, t, r, afterHydrate, s);
}

function afterHydrate(e, t, r, s) {
 if ("function" == typeof t.afterHydrate) try {
  const n = t.afterHydrate(e.document);
  isPromise(n) ? n.then((() => {
   finalizeHydrate(e, e.document, t, r, s);
  })) : finalizeHydrate(e, e.document, t, r, s);
 } catch (n) {
  renderCatchError(r, n), finalizeHydrate(e, e.document, t, r, s);
 } else finalizeHydrate(e, e.document, t, r, s);
}

function finalizeHydrate(e, t, r, s, n) {
 try {
  if (inspectElement(s, t.documentElement, 0), !1 !== r.removeUnusedStyles) try {
   ((e, t) => {
    try {
     const r = e.head.querySelectorAll("style[data-styles]"), s = r.length;
     if (s > 0) {
      const n = (e => {
       const t = {
        attrs: new Set,
        classNames: new Set,
        ids: new Set,
        tags: new Set
       };
       return collectUsedSelectors(t, e), t;
      })(e.documentElement);
      for (let e = 0; e < s; e++) removeUnusedStyleText(n, t, r[e]);
     }
    } catch (e) {
     ((e, t, r) => {
      const s = {
       level: "error",
       type: "build",
       header: "Build Error",
       messageText: "build error",
       relFilePath: null,
       absFilePath: null,
       lines: []
      };
      null != t && (null != t.stack ? s.messageText = t.stack.toString() : null != t.message ? s.messageText = t.message.length ? t.message : "UNKNOWN ERROR" : s.messageText = t.toString()), 
      null == e || shouldIgnoreError(s.messageText) || e.push(s);
     })(t, e);
    }
   })(t, s.diagnostics);
  } catch (e) {
   renderCatchError(s, e);
  }
  if ("string" == typeof r.title) try {
   t.title = r.title;
  } catch (e) {
   renderCatchError(s, e);
  }
  s.title = t.title, r.removeScripts && removeScripts(t.documentElement);
  try {
   ((e, t) => {
    let r = e.head.querySelector('link[rel="canonical"]');
    "string" == typeof t ? (null == r && (r = e.createElement("link"), r.setAttribute("rel", "canonical"), 
    e.head.appendChild(r)), r.setAttribute("href", t)) : null != r && (r.getAttribute("href") || r.parentNode.removeChild(r));
   })(t, r.canonicalUrl);
  } catch (e) {
   renderCatchError(s, e);
  }
  try {
   (e => {
    const t = e.head;
    let r = t.querySelector("meta[charset]");
    null == r ? (r = e.createElement("meta"), r.setAttribute("charset", "utf-8")) : r.remove(), 
    t.insertBefore(r, t.firstChild);
   })(t);
  } catch (e) {}
  hasError(s.diagnostics) || (s.httpStatus = 200);
  try {
   const e = t.head.querySelector('meta[http-equiv="status"]');
   if (null != e) {
    const t = e.getAttribute("content");
    t && t.length > 0 && (s.httpStatus = parseInt(t, 10));
   }
  } catch (e) {}
  r.clientHydrateAnnotations && t.documentElement.classList.add("hydrated"), r.serializeToHtml && (s.html = serializeDocumentToString(t, r));
 } catch (e) {
  renderCatchError(s, e);
 }
 if (r.destroyWindow) try {
  r.destroyDocument || (e.document = null, t.defaultView = null), e.close && e.close();
 } catch (e) {
  renderCatchError(s, e);
 }
 n(s);
}

function serializeDocumentToString(e, t) {
 return serializeNodeToHtml(e, {
  approximateLineWidth: t.approximateLineWidth,
  outerHtml: !1,
  prettyHtml: t.prettyHtml,
  removeAttributeQuotes: t.removeAttributeQuotes,
  removeBooleanAttributeQuotes: t.removeBooleanAttributeQuotes,
  removeEmptyAttributes: t.removeEmptyAttributes,
  removeHtmlComments: t.removeHtmlComments,
  serializeShadowRoot: !1
 });
}

function isValidDocument(e) {
 return null != e && 9 === e.nodeType && null != e.documentElement && 1 === e.documentElement.nodeType && null != e.body && 1 === e.body.nodeType;
}

function removeScripts(e) {
 const t = e.children;
 for (let e = t.length - 1; e >= 0; e--) {
  const r = t[e];
  removeScripts(r), ("SCRIPT" === r.nodeName || "LINK" === r.nodeName && "modulepreload" === r.getAttribute("rel")) && r.remove();
 }
}

const templateWindows = new Map, createHydrateBuildId = () => {
 let e = "abcdefghijklmnopqrstuvwxyz", t = "";
 for (;t.length < 8; ) t += e[Math.floor(Math.random() * e.length)], 1 === t.length && (e += "0123456789");
 return t;
}, isPromise = e => !!e && ("object" == typeof e || "function" == typeof e) && "function" == typeof e.then, hasError = e => null != e && 0 !== e.length && e.some((e => "error" === e.level && "runtime" !== e.type)), shouldIgnoreError = e => e === TASK_CANCELED_MSG, TASK_CANCELED_MSG = "task canceled", SKIP_ATTRS = new Set([ "s-id", "c-id" ]), collectUsedSelectors = (e, t) => {
 if (null != t && 1 === t.nodeType) {
  const r = t.children, s = t.nodeName.toLowerCase();
  e.tags.add(s);
  const n = t.attributes;
  for (let r = 0, s = n.length; r < s; r++) {
   const s = n.item(r), o = s.name.toLowerCase();
   if (e.attrs.add(o), "class" === o) {
    const r = t.classList;
    for (let t = 0, s = r.length; t < s; t++) e.classNames.add(r.item(t));
   } else "id" === o && e.ids.add(s.value);
  }
  if (r) for (let t = 0, s = r.length; t < s; t++) collectUsedSelectors(e, r[t]);
 }
}, parseCss = (e, t) => {
 let r = 1, s = 1;
 const n = [], o = e => {
  const t = e.match(/\n/g);
  t && (r += t.length);
  const n = e.lastIndexOf("\n");
  s = ~n ? e.length - n : s + e.length;
 }, i = () => {
  const e = {
   line: r,
   column: s
  };
  return t => (t.position = new z(e), m(), t);
 }, a = o => {
  const i = e.split("\n"), a = {
   level: "error",
   type: "css",
   language: "css",
   header: "CSS Parse",
   messageText: o,
   absFilePath: t,
   lines: [ {
    lineIndex: r - 1,
    lineNumber: r,
    errorCharStart: s,
    text: e[r - 1]
   } ]
  };
  if (r > 1) {
   const t = {
    lineIndex: r - 1,
    lineNumber: r - 1,
    text: e[r - 2],
    errorCharStart: -1,
    errorLength: -1
   };
   a.lines.unshift(t);
  }
  if (r + 2 < i.length) {
   const e = {
    lineIndex: r,
    lineNumber: r + 1,
    text: i[r],
    errorCharStart: -1,
    errorLength: -1
   };
   a.lines.push(e);
  }
  return n.push(a), null;
 }, l = () => u(/^{\s*/), c = () => u(/^}/), u = t => {
  const r = t.exec(e);
  if (!r) return;
  const s = r[0];
  return o(s), e = e.slice(s.length), r;
 }, d = () => {
  let t;
  const r = [];
  for (m(), h(r); e.length && "}" !== e.charAt(0) && (t = w() || A()); ) !1 !== t && (r.push(t), 
  h(r));
  return r;
 }, m = () => u(/^\s*/), h = e => {
  let t;
  for (e = e || []; t = p(); ) !1 !== t && e.push(t);
  return e;
 }, p = () => {
  const t = i();
  if ("/" !== e.charAt(0) || "*" !== e.charAt(1)) return null;
  let r = 2;
  for (;"" !== e.charAt(r) && ("*" !== e.charAt(r) || "/" !== e.charAt(r + 1)); ) ++r;
  if (r += 2, "" === e.charAt(r - 1)) return a("End of comment missing");
  const n = e.slice(2, r - 2);
  return s += 2, o(n), e = e.slice(r), s += 2, t({
   type: 1,
   comment: n
  });
 }, f = () => {
  const e = u(/^([^{]+)/);
  return e ? trim(e[0]).replace(/\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*\/+/g, "").replace(/"(?:\\"|[^"])*"|'(?:\\'|[^'])*'/g, (function(e) {
   return e.replace(/,/g, "‌");
  })).split(/\s*(?![^(]*\)),\s*/).map((function(e) {
   return e.replace(/\u200C/g, ",");
  })) : null;
 }, g = () => {
  const e = i();
  let t = u(/^(\*?[-#\/\*\\\w]+(\[[0-9a-z_-]+\])?)\s*/);
  if (!t) return null;
  if (t = trim(t[0]), !u(/^:\s*/)) return a("property missing ':'");
  const r = u(/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^\)]*?\)|[^};])+)/), s = e({
   type: 4,
   property: t.replace(commentre, ""),
   value: r ? trim(r[0]).replace(commentre, "") : ""
  });
  return u(/^[;\s]*/), s;
 }, y = () => {
  const e = [];
  if (!l()) return a("missing '{'");
  let t;
  for (h(e); t = g(); ) !1 !== t && (e.push(t), h(e));
  return c() ? e : a("missing '}'");
 }, C = () => {
  let e;
  const t = [], r = i();
  for (;e = u(/^((\d+\.\d+|\.\d+|\d+)%?|[a-z]+)\s*/); ) t.push(e[1]), u(/^,\s*/);
  return t.length ? r({
   type: 9,
   values: t,
   declarations: y()
  }) : null;
 }, S = (e, t) => {
  const r = new RegExp("^@" + e + "\\s*([^;]+);");
  return () => {
   const s = i(), n = u(r);
   if (!n) return null;
   const o = {
    type: t
   };
   return o[e] = n[1].trim(), s(o);
  };
 }, E = S("import", 7), b = S("charset", 0), T = S("namespace", 11), w = () => "@" !== e[0] ? null : (() => {
  const e = i();
  let t = u(/^@([-\w]+)?keyframes\s*/);
  if (!t) return null;
  const r = t[1];
  if (t = u(/^([-\w]+)\s*/), !t) return a("@keyframes missing name");
  const s = t[1];
  if (!l()) return a("@keyframes missing '{'");
  let n, o = h();
  for (;n = C(); ) o.push(n), o = o.concat(h());
  return c() ? e({
   type: 8,
   name: s,
   vendor: r,
   keyframes: o
  }) : a("@keyframes missing '}'");
 })() || (() => {
  const e = i(), t = u(/^@media *([^{]+)/);
  if (!t) return null;
  const r = trim(t[1]);
  if (!l()) return a("@media missing '{'");
  const s = h().concat(d());
  return c() ? e({
   type: 10,
   media: r,
   rules: s
  }) : a("@media missing '}'");
 })() || (() => {
  const e = i(), t = u(/^@custom-media\s+(--[^\s]+)\s*([^{;]+);/);
  return t ? e({
   type: 2,
   name: trim(t[1]),
   media: trim(t[2])
  }) : null;
 })() || (() => {
  const e = i(), t = u(/^@supports *([^{]+)/);
  if (!t) return null;
  const r = trim(t[1]);
  if (!l()) return a("@supports missing '{'");
  const s = h().concat(d());
  return c() ? e({
   type: 15,
   supports: r,
   rules: s
  }) : a("@supports missing '}'");
 })() || E() || b() || T() || (() => {
  const e = i(), t = u(/^@([-\w]+)?document *([^{]+)/);
  if (!t) return null;
  const r = trim(t[1]), s = trim(t[2]);
  if (!l()) return a("@document missing '{'");
  const n = h().concat(d());
  return c() ? e({
   type: 3,
   document: s,
   vendor: r,
   rules: n
  }) : a("@document missing '}'");
 })() || (() => {
  const e = i();
  if (!u(/^@page */)) return null;
  const t = f() || [];
  if (!l()) return a("@page missing '{'");
  let r, s = h();
  for (;r = g(); ) s.push(r), s = s.concat(h());
  return c() ? e({
   type: 12,
   selectors: t,
   declarations: s
  }) : a("@page missing '}'");
 })() || (() => {
  const e = i();
  if (!u(/^@host\s*/)) return null;
  if (!l()) return a("@host missing '{'");
  const t = h().concat(d());
  return c() ? e({
   type: 6,
   rules: t
  }) : a("@host missing '}'");
 })() || (() => {
  const e = i();
  if (!u(/^@font-face\s*/)) return null;
  if (!l()) return a("@font-face missing '{'");
  let t, r = h();
  for (;t = g(); ) r.push(t), r = r.concat(h());
  return c() ? e({
   type: 5,
   declarations: r
  }) : a("@font-face missing '}'");
 })(), A = () => {
  const e = i(), t = f();
  return t ? (h(), e({
   type: 13,
   selectors: t,
   declarations: y()
  })) : a("selector missing");
 };
 class z {
  constructor(e) {
   this.start = e, this.end = {
    line: r,
    column: s
   }, this.source = t;
  }
 }
 return z.prototype.content = e, {
  diagnostics: n,
  ...addParent((() => {
   const e = d();
   return {
    type: 14,
    stylesheet: {
     source: t,
     rules: e
    }
   };
  })())
 };
}, trim = e => e ? e.trim() : "", addParent = (e, t) => {
 const r = e && "string" == typeof e.type, s = r ? e : t;
 for (const t in e) {
  const r = e[t];
  Array.isArray(r) ? r.forEach((function(e) {
   addParent(e, s);
  })) : r && "object" == typeof r && addParent(r, s);
 }
 return r && Object.defineProperty(e, "parent", {
  configurable: !0,
  writable: !0,
  enumerable: !1,
  value: t || null
 }), e;
}, commentre = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g, getCssSelectors = e => {
 SELECTORS.all.length = SELECTORS.tags.length = SELECTORS.classNames.length = SELECTORS.ids.length = SELECTORS.attrs.length = 0;
 const t = (e = e.replace(/\./g, " .").replace(/\#/g, " #").replace(/\[/g, " [").replace(/\>/g, " > ").replace(/\+/g, " + ").replace(/\~/g, " ~ ").replace(/\*/g, " * ").replace(/\:not\((.*?)\)/g, " ")).split(" ");
 for (let e = 0, r = t.length; e < r; e++) t[e] = t[e].split(":")[0], 0 !== t[e].length && ("." === t[e].charAt(0) ? SELECTORS.classNames.push(t[e].substr(1)) : "#" === t[e].charAt(0) ? SELECTORS.ids.push(t[e].substr(1)) : "[" === t[e].charAt(0) ? (t[e] = t[e].substr(1).split("=")[0].split("]")[0].trim(), 
 SELECTORS.attrs.push(t[e].toLowerCase())) : /[a-z]/g.test(t[e].charAt(0)) && SELECTORS.tags.push(t[e].toLowerCase()));
 return SELECTORS.classNames = SELECTORS.classNames.sort(((e, t) => e.length < t.length ? -1 : e.length > t.length ? 1 : 0)), 
 SELECTORS;
}, SELECTORS = {
 all: [],
 tags: [],
 classNames: [],
 ids: [],
 attrs: []
}, serializeCssVisitNode = (e, t, r, s) => {
 const n = t.type;
 return 4 === n ? serializeCssDeclaration(t, r, s) : 13 === n ? serializeCssRule(e, t) : 1 === n ? "!" === t.comment[0] ? `/*${t.comment}*/` : "" : 10 === n ? serializeCssMedia(e, t) : 8 === n ? serializeCssKeyframes(e, t) : 9 === n ? serializeCssKeyframe(e, t) : 5 === n ? serializeCssFontFace(e, t) : 15 === n ? serializeCssSupports(e, t) : 7 === n ? "@import " + t.import + ";" : 0 === n ? "@charset " + t.charset + ";" : 12 === n ? serializeCssPage(e, t) : 6 === n ? "@host{" + serializeCssMapVisit(e, t.rules) + "}" : 2 === n ? "@custom-media " + t.name + " " + t.media + ";" : 3 === n ? serializeCssDocument(e, t) : 11 === n ? "@namespace " + t.namespace + ";" : "";
}, serializeCssRule = (e, t) => {
 const r = t.declarations, s = e.usedSelectors, n = t.selectors.slice();
 if (null == r || 0 === r.length) return "";
 if (s) {
  let t, r, o = !0;
  for (t = n.length - 1; t >= 0; t--) {
   const i = getCssSelectors(n[t]);
   o = !0;
   let a = i.classNames.length;
   if (a > 0 && e.hasUsedClassNames) for (r = 0; r < a; r++) if (!s.classNames.has(i.classNames[r])) {
    o = !1;
    break;
   }
   if (o && e.hasUsedTags && (a = i.tags.length, a > 0)) for (r = 0; r < a; r++) if (!s.tags.has(i.tags[r])) {
    o = !1;
    break;
   }
   if (o && e.hasUsedAttrs && (a = i.attrs.length, a > 0)) for (r = 0; r < a; r++) if (!s.attrs.has(i.attrs[r])) {
    o = !1;
    break;
   }
   if (o && e.hasUsedIds && (a = i.ids.length, a > 0)) for (r = 0; r < a; r++) if (!s.ids.has(i.ids[r])) {
    o = !1;
    break;
   }
   o || n.splice(t, 1);
  }
 }
 if (0 === n.length) return "";
 const o = [];
 let i = "";
 for (const e of t.selectors) i = removeSelectorWhitespace(e), o.includes(i) || o.push(i);
 return `${o}{${serializeCssMapVisit(e, r)}}`;
}, serializeCssDeclaration = (e, t, r) => "" === e.value ? "" : r - 1 === t ? e.property + ":" + e.value : e.property + ":" + e.value + ";", serializeCssMedia = (e, t) => {
 const r = serializeCssMapVisit(e, t.rules);
 return "" === r ? "" : "@media " + removeMediaWhitespace(t.media) + "{" + r + "}";
}, serializeCssKeyframes = (e, t) => {
 const r = serializeCssMapVisit(e, t.keyframes);
 return "" === r ? "" : "@" + (t.vendor || "") + "keyframes " + t.name + "{" + r + "}";
}, serializeCssKeyframe = (e, t) => t.values.join(",") + "{" + serializeCssMapVisit(e, t.declarations) + "}", serializeCssFontFace = (e, t) => {
 const r = serializeCssMapVisit(e, t.declarations);
 return "" === r ? "" : "@font-face{" + r + "}";
}, serializeCssSupports = (e, t) => {
 const r = serializeCssMapVisit(e, t.rules);
 return "" === r ? "" : "@supports " + t.supports + "{" + r + "}";
}, serializeCssPage = (e, t) => "@page " + t.selectors.join(", ") + "{" + serializeCssMapVisit(e, t.declarations) + "}", serializeCssDocument = (e, t) => {
 const r = serializeCssMapVisit(e, t.rules), s = "@" + (t.vendor || "") + "document " + t.document;
 return "" === r ? "" : s + "{" + r + "}";
}, serializeCssMapVisit = (e, t) => {
 let r = "";
 if (t) for (let s = 0, n = t.length; s < n; s++) r += serializeCssVisitNode(e, t[s], s, n);
 return r;
}, removeSelectorWhitespace = e => {
 let t = "", r = "", s = !1;
 for (let n = 0, o = (e = e.trim()).length; n < o; n++) if (r = e[n], "[" === r && "\\" !== t[t.length - 1] ? s = !0 : "]" === r && "\\" !== t[t.length - 1] && (s = !1), 
 !s && CSS_WS_REG.test(r)) {
  if (CSS_NEXT_CHAR_REG.test(e[n + 1])) continue;
  if (CSS_PREV_CHAR_REG.test(t[t.length - 1])) continue;
  t += " ";
 } else t += r;
 return t;
}, removeMediaWhitespace = e => {
 let t = "", r = "";
 for (let s = 0, n = (e = e.trim()).length; s < n; s++) if (r = e[s], CSS_WS_REG.test(r)) {
  if (CSS_WS_REG.test(t[t.length - 1])) continue;
  t += " ";
 } else t += r;
 return t;
}, CSS_WS_REG = /\s/, CSS_NEXT_CHAR_REG = /[>\(\)\~\,\+\s]/, CSS_PREV_CHAR_REG = /[>\(\~\,\+]/, removeUnusedStyleText = (e, t, r) => {
 try {
  const s = parseCss(r.innerHTML);
  if (t.push(...s.diagnostics), hasError(t)) return;
  try {
   r.innerHTML = ((e, t) => {
    const r = t.usedSelectors || null, s = {
     usedSelectors: r || null,
     hasUsedAttrs: !!r && r.attrs.size > 0,
     hasUsedClassNames: !!r && r.classNames.size > 0,
     hasUsedIds: !!r && r.ids.size > 0,
     hasUsedTags: !!r && r.tags.size > 0
    }, n = e.rules;
    if (!n) return "";
    const o = n.length, i = [];
    for (let e = 0; e < o; e++) i.push(serializeCssVisitNode(s, n[e], e, o));
    return i.join("");
   })(s.stylesheet, {
    usedSelectors: e
   });
  } catch (e) {
   t.push({
    level: "warn",
    type: "css",
    header: "CSS Stringify",
    messageText: e
   });
  }
 } catch (e) {
  t.push({
   level: "warn",
   type: "css",
   header: "CSS Parse",
   messageText: e
  });
 }
};

exports.createWindowFromHtml = createWindowFromHtml;
exports.hydrateDocument = hydrateDocument;
exports.renderToString = renderToString;
exports.serializeDocumentToString = serializeDocumentToString;

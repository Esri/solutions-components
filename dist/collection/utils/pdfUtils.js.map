{"version":3,"file":"pdfUtils.js","sourceRoot":"","sources":["../../src/utils/pdfUtils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAEH;;;;;;;GAOG;AACH,MAAM,UAAU,SAAS,CACvB,MAAkB,EAClB,WAAqB,EACrB,oBAAyB,EACzB,gBAAgB,GAAG,IAAI;EAEvB,MAAM,YAAY,GAAG,cAAc,CAAC,MAAM,EAAE,WAAW,EAAE,gBAAgB,CAAC,CAAC;EAE3E,gBAAgB,CAAC,YAAY,EAAE,oBAAoB,EAAE,UAAU,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AAC1F,CAAC;AAED;;;;;;GAMG;AACH,SAAS,gBAAgB,CACvB,MAAkB,EAClB,oBAAyB,EACzB,SAAiB;EAEjB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,MAAM,EAAE,oBAAoB,EAAE,SAAS,CAAC,CAAC,CAAA,KAAK;AAChF,CAAC;AAED;;;;;;;;GAQG;AACH,SAAS,cAAc,CACrB,MAAkB,EAClB,WAAqB,EACrB,gBAAgB,GAAG,IAAI;EAEvB,+BAA+B;EAC/B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;EAEzB,+BAA+B;EAC/B,IAAI,gBAAgB,EAAE;IACpB,MAAM,OAAO,GAAgB,IAAI,GAAG,EAAE,CAAC;IACvC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChE,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;GAC7D;EAED,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Exports a PDF of labels.\r\n *\r\n * @param labels Labels to write\r\n * @param labelFormat Field format per label\r\n * @param labelPageDescription Page format to use for labels\r\n * @param removeDuplicates Remove duplicate labels before exporting\r\n */\r\nexport function exportPDF(\r\n  labels: string[][],\r\n  labelFormat: string[],\r\n  labelPageDescription: any,\r\n  removeDuplicates = true\r\n): void {\r\n  const outputLabels = _prepareOutput(labels, labelFormat, removeDuplicates);\r\n\r\n  _downloadPDFFile(outputLabels, labelPageDescription, `notify-${Date.now().toString()}`);\r\n}\r\n\r\n/**\r\n * Downloads the PDF file.\r\n *\r\n * @param labels Labels to write\r\n * @param labelPageDescription Page format to use for labels\r\n * @param fileTitle Title (without file extension) to use for file; defaults to \"export\"\r\n */\r\nfunction _downloadPDFFile(\r\n  labels: string[][],\r\n  labelPageDescription: any,\r\n  fileTitle: string\r\n): void {\r\n  console.log(\"_downloadPDFFile\", labels, labelPageDescription, fileTitle);//???\r\n}\r\n\r\n/**\r\n * Prepares labels for export.\r\n *\r\n * @param labels Array of labels to prepare\r\n * @param labelFormat Field format per label\r\n * @param removeDuplicates Remove duplicate lines\r\n *\r\n * @returns De-duped array of labels if removeDuplicates is true\r\n */\r\nfunction _prepareOutput(\r\n  labels: string[][],\r\n  labelFormat: string[],\r\n  removeDuplicates = true\r\n): string[][] {\r\n  // Format the input into labels\r\n  console.log(labelFormat);\r\n\r\n  // Remove duplicates if desired\r\n  if (removeDuplicates) {\r\n    const uniques: Set<string> = new Set();\r\n    labels.forEach(labelLines => uniques.add(labelLines.join(\"|\")));\r\n    labels = Array.from(uniques).map(label => label.split(\"|\"));\r\n  }\r\n\r\n  return labels;\r\n}\r\n"]}
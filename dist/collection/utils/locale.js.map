{"version":3,"file":"locale.js","sourceRoot":"","sources":["../../src/utils/locale.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAEH,qGAAqG;AACrG,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAE7C,SAAS,2BAA2B,CAAC,OAAoB;;EACvD,MAAM,cAAc,GAAG,MAAA,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAE,mCAAI,MAAA,MAAA,OAAO,CAAC,UAAU,0CAAE,aAAa,0CAAE,eAAsB,CAAC;EACjH,2EAA2E;EAC3E,MAAM,IAAI,GAAG,CAAC,CAAA,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,IAAI,MAAI,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,CAAA,IAAI,IAAI,CAAC,CAAC,WAAW,EAAE,CAAE;EAClF,IAAI,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;IACzB,OAAO,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;GAC9B;OAAM;IACL,gCAAgC;IAChC,OAAO,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;GACrF;AACH,CAAC;AAQD,SAAS,8BAA8B,CAAwC,aAAqB,EAAE,MAAc;EAClH,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAQ,EAAE;IAC3C,KAAK,CAAC,YAAY,CAAC,iBAAiB,aAAa,cAAc,MAAM,OAAO,CAAC,CAAC,CAAC,IAAI,CACjF,MAAM,CAAC,EAAE;MACP,IAAI,MAAM,CAAC,EAAE,EAAE;QAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;OAAC;WACnC;QAAC,MAAM,EAAE,CAAC;OAAC;IAClB,CAAC,EACD,GAAG,EAAE,CAAC,MAAM,EAAE,CACf,CAAC;EACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,yBAAyB,CAAwC,OAAoB;EACzG,MAAM,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;EACpD,MAAM,iBAAiB,GAAG,2BAA2B,CAAC,OAAO,CAAC,CAAC;EAC/D,IAAI,OAAU,CAAC;EACf,IAAI;IACF,OAAO,GAAG,MAAM,8BAA8B,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;GAClF;EAAC,OAAO,CAAC,EAAE;IACV,OAAO,CAAC,IAAI,CAAC,iBAAiB,aAAa,KAAK,iBAAiB,8BAA8B,CAAC,CAAC;IACjG,OAAO,GAAG,MAAM,8BAA8B,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;GACrE;EACD,OAAO,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;AACtC,CAAC","sourcesContent":["/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// https://medium.com/stencil-tricks/implementing-internationalisation-i18n-with-stencil-5e6559554117\r\nimport { languageMap } from \"./languageUtil\";\r\nimport { getAssetPath } from \"@stencil/core\";\r\n\r\nfunction getComponentClosestLanguage(element: HTMLElement): string | undefined {\r\n  const closestElement = (element.closest(\"[lang]\") ) ?? element.shadowRoot?.ownerDocument?.documentElement as any;\r\n  // language set by the calling application or browser. defaults to english.\r\n  const lang = (closestElement?.lang || navigator?.language || \"en\").toLowerCase() ;\r\n  if (languageMap.has(lang)) {\r\n    return languageMap.get(lang);\r\n  } else {\r\n    // \"ru-RU\" maps to \"ru\" use case\r\n    return languageMap.has(lang.slice(0, 2)) ? languageMap.get(lang.slice(0, 2)) : \"en\";\r\n  }\r\n}\r\n\r\ntype StringValue = string | StringBundle;\r\n\r\ninterface StringBundle {\r\n  [key: string]: StringValue;\r\n}\r\n\r\nfunction fetchLocaleStringsForComponent<T extends StringBundle = StringBundle>(componentName: string, locale: string): Promise<T> {\r\n  return new Promise((resolve, reject): void => {\r\n    fetch(getAssetPath(`../assets/t9n/${componentName}/resources_${locale}.json`)).then(\r\n      result => {\r\n        if (result.ok) {resolve(result.json());}\r\n        else {reject();}\r\n      },\r\n      () => reject(),\r\n    );\r\n  });\r\n}\r\n\r\nexport async function getLocaleComponentStrings<T extends StringBundle = StringBundle>(element: HTMLElement): Promise<[T, string]> {\r\n  const componentName = element.tagName.toLowerCase();\r\n  const componentLanguage = getComponentClosestLanguage(element);\r\n  let strings: T;\r\n  try {\r\n    strings = await fetchLocaleStringsForComponent(componentName, componentLanguage);\r\n  } catch (e) {\r\n    console.warn(`no locale for ${componentName} (${componentLanguage}) loading default locale en.`);\r\n    strings = await fetchLocaleStringsForComponent(componentName, \"en\");\r\n  }\r\n  return [strings, componentLanguage];\r\n}\r\n"]}
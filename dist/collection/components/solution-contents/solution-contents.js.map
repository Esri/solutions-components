{"version":3,"file":"solution-contents.js","sourceRoot":"","sources":["../../../src/components/solution-contents/solution-contents.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAEH,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAgB,IAAI,EAAE,CAAC,EAAE,IAAI,EAAS,KAAK,EAAE,MAAM,eAAe,CAAC;AAErG,OAAO,0BAA0B,CAAC;AAQlC,MAAM,OAAO,gBAAgB;;;6BAwBmD,EAAE;;EAEpD,iBAAiB,CAAC,CAAM,EAAE,IAAS;IAC7D,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;MACvD,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;KACjC;EACH,CAAC;EAED,4EAA4E;EAC5E,EAAE;EACF,aAAa;EACb,EAAE;EACF,4EAA4E;EAE5E,iBAAiB;IACf,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;EACrD,CAAC;EAED;;KAEG;EACH,MAAM;IACJ,OAAO,CACL,EAAC,IAAI;MACH,wBACG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAChC,CACV,CACR,CAAC;EACJ,CAAC;EAED,eAAe,CAAC,IAAsB;IACpC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;MACtB,MAAM,QAAQ,GAAY,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,KAAK,GAAG,CAAC,EAAE,CAAC;MAChF,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,GAAG,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QACxD,CACE,yBAAmB,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,QAAQ,EAAE,QAAQ;UAC1F,0BAAoB,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,YAAY,EAAE,GAAG,CAAC,YAAY,GAAI;UACtE,YAAM,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,GAAG,CAAC,KAAK,IAAG,GAAG,CAAC,KAAK,CAAQ;UAC5D,oBAAc,IAAI,EAAC,UAAU,IAC1B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,YAAY,CAAC,CAC1B,CACG,CACrB;QACD,CAAC;UACD,CACE,yBAAmB,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,QAAQ,EAAE,QAAQ;YAC1F,0BAAoB,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,YAAY,EAAE,GAAG,CAAC,YAAY,GAAI;YACtE,YAAM,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,GAAG,CAAC,KAAK,IAAG,GAAG,CAAC,KAAK,CAAQ,CAC1C,CACrB,CAAC;IACN,CAAC,CAAC,CAAC;EACL,CAAC;EA2BD,4EAA4E;EAC5E,EAAE;EACF,0BAA0B;EAC1B,EAAE;EACF,4EAA4E;EAE5E,4EAA4E;EAC5E,EAAE;EACF,mBAAmB;EACnB,EAAE;EACF,4EAA4E;EAE5E;;;;;;;KAOG;EACO,iBAAiB,CACzB,MAAc,EACd,MAAW,SAAS;;IAEpB,MAAM,QAAQ,GAAG,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,MAAM,0CAAE,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAC3D,IAAI,QAAQ,EAAE;MACZ,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,CAAA,CAAC;KACzC;IACD,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;IAC7B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACzC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { Component, Element, Event, EventEmitter, Host, h, Prop, VNode, Watch } from '@stencil/core';\r\nimport { IInventoryItem/*, ISolutionTemplateEdit */ } from '../../utils/interfaces';\r\nimport '@esri/calcite-components';\r\n\r\n@Component({\r\n  tag: 'solution-contents',\r\n  styleUrl: 'solution-contents.scss',\r\n  shadow: false,\r\n  assetsDirs: ['item-type-icons']\r\n})\r\nexport class SolutionContents {\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Host element access\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  @Element() el: HTMLSolutionContentsElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Contains the current item that is selected.\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) selectedItemId: string;\r\n\r\n  /**\r\n   * Contains the public value for this component.\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) templateHierarchy: IInventoryItem[] = [];\r\n\r\n  @Watch(\"templateHierarchy\") valueWatchHandler(v: any, oldV: any): void {\r\n    if (v && v !== oldV && Array.isArray(v) && v.length > 0) {\r\n      this._treeItemSelected(v[0].id);\r\n    }\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Lifecycle\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  componentWillLoad() {\r\n    this.valueWatchHandler(this.templateHierarchy, []);\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   */\r\n  render(): VNode {\r\n    return (\r\n      <Host>\r\n        <calcite-tree>\r\n          {this.renderHierarchy(this.templateHierarchy)}\r\n        </calcite-tree>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  renderHierarchy(objs: IInventoryItem[]): HTMLCalciteTreeItemElement[] {\r\n    return objs.map((obj) => {\r\n      const selected: boolean = this.selectedItemId && this.selectedItemId === obj.id;\r\n      return (obj.dependencies && obj.dependencies.length > 0) ?\r\n        (\r\n          <calcite-tree-item onClick={(evt) => this._treeItemSelected(obj.id, evt)} selected={selected}>\r\n            <solution-item-icon type={obj.type} typeKeywords={obj.typeKeywords} />\r\n            <span class=\"icon-text\" title={obj.title}>{obj.title}</span>\r\n            <calcite-tree slot=\"children\" >\r\n              {this.renderHierarchy(obj.dependencies)}\r\n            </calcite-tree>\r\n          </calcite-tree-item>\r\n        )\r\n        :\r\n        (\r\n          <calcite-tree-item onClick={(evt) => this._treeItemSelected(obj.id, evt)} selected={selected}>\r\n            <solution-item-icon type={obj.type} typeKeywords={obj.typeKeywords} />\r\n            <span class=\"icon-text\" title={obj.title}>{obj.title}</span>\r\n          </calcite-tree-item>\r\n        );\r\n    });\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Event Listeners\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /*@Listen(\"solutionLoaded\", { target: \"window\" })\r\n  _solutionLoaded(): void {\r\n    this._treeItemSelected(this.templateHierarchy[0].solutionItem);\r\n  }*/\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Events\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  @Event() solutionItemSelected: EventEmitter<string>;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Public Methods (async)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Private Methods\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Publishes the `solutionItemSelected` event containing `solutionItem` of the selected item.\r\n   *\r\n   * Also toggles the expanded state of the tree item.\r\n   *\r\n   * @param solutionItem the selected solution item to emit\r\n   * @param evt MouseEvent or undefined\r\n   */\r\n  protected _treeItemSelected(\r\n    itemId: string,\r\n    evt: any = undefined\r\n  ): void {\r\n    const treeItem = evt?.target?.closest(\"calcite-tree-item\");\r\n    if (treeItem) {\r\n      treeItem.expanded = !treeItem?.expanded;\r\n    }\r\n    this.selectedItemId = itemId;\r\n    this.solutionItemSelected.emit(itemId);\r\n  }\r\n}\r\n"]}
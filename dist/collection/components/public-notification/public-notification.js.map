{"version":3,"file":"public-notification.js","sourceRoot":"","sources":["../../../src/components/public-notification/public-notification.tsx"],"names":[],"mappings":"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","sourcesContent":["/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { Component, Element, Host, h, Listen, Prop, State, VNode, Watch } from \"@stencil/core\";\r\nimport { EExportType, EPageType, ESketchType, EWorkflowType, ISelectionSet } from \"../../utils/interfaces\";\r\nimport { loadModules } from \"../../utils/loadModules\";\r\nimport { goToSelection, getMapLayerView, highlightFeatures } from \"../../utils/mapViewUtils\";\r\nimport { getSelectionSetQuery } from \"../../utils/queryUtils\";\r\nimport state from \"../../utils/publicNotificationStore\";\r\nimport NewPublicNotification_T9n from \"../../assets/t9n/public-notification/resources.json\";\r\nimport { getLocaleComponentStrings } from \"../../utils/locale\";\r\nimport * as utils from \"../../utils/publicNotificationUtils\";\r\n\r\n@Component({\r\n  tag: \"public-notification\",\r\n  styleUrl: \"public-notification.css\",\r\n  shadow: false,\r\n})\r\nexport class PublicNotification {\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Host element access\r\n  //\r\n  //--------------------------------------------------------------------------\r\n  @Element() el: HTMLPublicNotificationElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * esri/views/layers/FeatureLayerView: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-layers-FeatureLayerView.html\r\n   */\r\n  @Prop() addresseeLayer: __esri.FeatureLayerView;\r\n\r\n  /**\r\n   * esri/views/View: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\r\n   */\r\n  @Prop() mapView: __esri.MapView;\r\n\r\n  /**\r\n   * boolean: When true the refine selection workflow will be included in the UI\r\n   */\r\n  @Prop() showRefineSelection = false;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  State (internal)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * boolean: Enabled when we have 1 or more selection sets that is enabled in the download pages.\r\n   * By default all selection sets are enabled for download when they are first created.\r\n   */\r\n  @State() _downloadActive = true;\r\n\r\n  /**\r\n   * number: The number of selected features\r\n   */\r\n  @State() _numSelected = 0;\r\n\r\n  /**\r\n   * utils/interfaces/EPageType: LIST | SELECT | REFINE | PDF | CSV\r\n   */\r\n  @State() _pageType: EPageType = EPageType.LIST;\r\n\r\n  /**\r\n   * boolean: Save is enabled when we have 1 or more selected features\r\n   */\r\n  @State() _saveEnabled = false;\r\n\r\n  /**\r\n   * utils/interfaces/ISelectionSet: An array of user defined selection sets\r\n   */\r\n  @State() _selectionSets: ISelectionSet[] = [];\r\n\r\n  /**\r\n   * ESketchType: The current type of sketch\r\n   * used to control information messages.\r\n   */\r\n  @State() _sketchType: ESketchType = ESketchType.INTERACTIVE;\r\n\r\n  /**\r\n   * utils/interfaces/EWorkflowType: SEARCH | SELECT | SKETCH\r\n   */\r\n  @State() _selectionWorkflowType = EWorkflowType.SEARCH;\r\n\r\n  /**\r\n   * Contains the translations for this component.\r\n   * All UI strings should be defined here.\r\n   */\r\n  @State() protected _translations: typeof NewPublicNotification_T9n;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * ISelectionSet: The current active selection set\r\n   */\r\n  protected _activeSelection: ISelectionSet;\r\n\r\n  /**\r\n   * HTMLPdfDownloadElement: The pdf tools element\r\n   */\r\n  protected _downloadTools: HTMLPdfDownloadElement;\r\n\r\n  /**\r\n   * esri/geometry/geometryEngine: https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-geometryEngine.html\r\n   */\r\n  protected _geometryEngine: __esri.geometryEngine;\r\n\r\n  /**\r\n   * HTMLCalciteCheckboxElement: When enabled popups will be shown on map click\r\n   */\r\n  protected _popupsEnabled: boolean;\r\n\r\n  /**\r\n   * HTMLCalciteCheckboxElement: The remove duplicates checkbox element\r\n   */\r\n  protected _removeDuplicates: HTMLCalciteCheckboxElement;\r\n\r\n  /**\r\n   * HTMLMapSelectToolsElement: The select tools element\r\n   */\r\n  protected _selectTools: HTMLMapSelectToolsElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Watch handlers\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Called each time the mapView prop is changed.\r\n   */\r\n  @Watch(\"mapView\")\r\n  async mapViewWatchHandler(\r\n    v: __esri.MapView\r\n  ): Promise<void> {\r\n    if (v?.popup) {\r\n      this._popupsEnabled = v?.popup.autoOpenEnabled;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called each time the selectionSets prop is changed.\r\n   */\r\n  @Watch(\"_selectionSets\")\r\n  async selectionSetsWatchHandler(\r\n    v: ISelectionSet[],\r\n    oldV: ISelectionSet[]\r\n  ): Promise<void> {\r\n    if (v && v !== oldV && v.length > 0) {\r\n      const nonRefineSets = v.filter(ss => ss.workflowType !== EWorkflowType.REFINE)\r\n      if (nonRefineSets.length === 0) {\r\n        this._selectionSets = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called each time the pageType prop is changed.\r\n   */\r\n  @Watch(\"_pageType\")\r\n  async pageTypeWatchHandler(\r\n    pageType: EPageType,\r\n    oldPageType: EPageType\r\n  ): Promise<void> {\r\n    this._checkPopups();\r\n    this._clearHighlight();\r\n\r\n    if (oldPageType === EPageType.SELECT || oldPageType === EPageType.REFINE) {\r\n      // clear any draw shapes or buffers\r\n      await this._clearSelection()\r\n    }\r\n\r\n    if (pageType !== EPageType.SELECT) {\r\n      return this._highlightFeatures();\r\n    }\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Methods (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Events (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Handle changes to the selection sets\r\n   */\r\n  @Listen(\"selectionSetsChanged\", { target: \"window\" })\r\n  selectionSetsChanged(event: CustomEvent): void {\r\n    this._selectionSets = [...event.detail];\r\n  }\r\n\r\n  /**\r\n   * Handle changes to the selection sets\r\n   */\r\n  @Listen(\"sketchTypeChange\", { target: \"window\" })\r\n  sketchTypeChange(event: CustomEvent): void {\r\n    this._sketchType = event.detail;\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (lifecycle)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * StencilJS: Called once just after the component is first connected to the DOM.\r\n   */\r\n  async componentWillLoad(): Promise<void> {\r\n    await this._getTranslations();\r\n    await this._initModules();\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   */\r\n  render(): void {\r\n    const hasSelections = this._selectionSets.length > 0;\r\n    return (\r\n      <Host>\r\n        <calcite-shell>\r\n          <calcite-action-bar class=\"border-bottom-1 action-bar-size\" expand-disabled layout=\"horizontal\" slot=\"header\">\r\n            {this._getActionGroup(\"list-check\", false, EPageType.LIST, this._translations.myLists)}\r\n            {this.showRefineSelection ? this._getActionGroup(\"test-data\", !hasSelections, EPageType.REFINE, this._translations.refineSelection) : undefined}\r\n            {this._getActionGroup(\"file-pdf\", !hasSelections, EPageType.PDF, this._translations.downloadPDF)}\r\n            {this._getActionGroup(\"file-csv\", !hasSelections, EPageType.CSV, this._translations.downloadCSV)}\r\n          </calcite-action-bar>\r\n          {this._getPage(this._pageType)}\r\n        </calcite-shell>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Load esri javascript api modules\r\n   *\r\n   * @returns Promise resolving when function is done\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _initModules(): Promise<void> {\r\n    const [geometryEngine]: [\r\n      __esri.geometryEngine\r\n    ] = await loadModules([\r\n      \"esri/geometry/geometryEngine\"\r\n    ]);\r\n    this._geometryEngine = geometryEngine;\r\n  }\r\n\r\n  /**\r\n   * Get a calcite action group for the current action\r\n   *\r\n   * @param icon the icon to display for the current action\r\n   * @param disabled should the action be disabled\r\n   * @param pageType what page type will the action navigate to\r\n   * @param tip information tip to display helpful details to end user\r\n   *\r\n   * @protected\r\n   */\r\n  protected _getActionGroup(\r\n    icon: string,\r\n    disabled: boolean,\r\n    pageType: EPageType,\r\n    tip: string\r\n  ): VNode {\r\n    const groupClass = this.showRefineSelection ? \"action-center w-1-4\" : \"action-center w-1-3\";\r\n    return (\r\n      <calcite-action-group class={groupClass} layout=\"horizontal\">\r\n        <calcite-action\r\n          active={this._pageType === pageType}\r\n          alignment=\"center\"\r\n          class=\"width-full height-full\"\r\n          compact={false}\r\n          disabled={disabled}\r\n          icon={icon}\r\n          id={icon}\r\n          onClick={() => { this._setPageType(pageType) }}\r\n          text=\"\"\r\n        />\r\n        <calcite-tooltip label=\"\" placement=\"bottom\" reference-element={icon}>\r\n          <span>{tip}</span>\r\n        </calcite-tooltip>\r\n      </calcite-action-group>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Navigate to the defined page type\r\n   *\r\n   * @param pageType what page type will the action navigate to\r\n   *\r\n   * @protected\r\n   */\r\n  protected _setPageType(\r\n    pageType: EPageType\r\n  ): void {\r\n    this._pageType = pageType;\r\n  }\r\n\r\n  /**\r\n   * Navigate to the defined page type\r\n   *\r\n   * @param pageType what page type will the action navigate to\r\n   *\r\n   * @returns the page node\r\n   * @protected\r\n   */\r\n  _getPage(\r\n    pageType: EPageType\r\n  ): VNode {\r\n    let page: VNode;\r\n    switch (pageType) {\r\n      case EPageType.LIST:\r\n        page = this._getListPage();\r\n        break;\r\n\r\n      case EPageType.SELECT:\r\n        page = this._getSelectPage();\r\n        break;\r\n\r\n      case EPageType.REFINE:\r\n        page = this._getRefinePage();\r\n        break;\r\n\r\n      case EPageType.PDF:\r\n        page = this._getPDFPage();\r\n        break;\r\n\r\n      case EPageType.CSV:\r\n        page = this._getCSVPage();\r\n        break;\r\n\r\n    }\r\n    return page;\r\n  }\r\n\r\n  /**\r\n   * Create the List page that shows as the initial home screen\r\n   * This page is also used to show and selection sets that have been created\r\n   *\r\n   * @returns the page node\r\n   * @protected\r\n   */\r\n  protected _getListPage(): VNode {\r\n    const hasSets = this._selectionSets.filter(ss => ss.workflowType !== EWorkflowType.REFINE).length > 0;\r\n    const total = utils.getTotal(this._selectionSets);\r\n    return hasSets ? (\r\n      <calcite-panel>\r\n        <div class=\"padding-top-sides-1\">\r\n          <calcite-label class=\"font-bold\">{this._translations.myLists}</calcite-label>\r\n        </div>\r\n        {this._getNotice(this._translations.listHasSetsTip, \"padding-sides-1 padding-bottom-1\")}\r\n        <div class=\"display-flex padding-sides-1\">\r\n          <calcite-label class=\"font-bold width-full\">{this._translations.addresseeLayer}\r\n            <map-layer-picker\r\n              mapView={this.mapView}\r\n              onLayerSelectionChange={(evt) => this._layerSelectionChange(evt)}\r\n              selectedLayers={this.addresseeLayer ? [this.addresseeLayer?.layer.title] : []}\r\n              selectionMode={\"single\"}\r\n            />\r\n          </calcite-label>\r\n        </div>\r\n        <div class=\"padding-sides-1 height-1-1-2\">\r\n          <div class=\"position-left\">\r\n            <calcite-label alignment=\"start\" class=\"font-bold\">{this._translations.notifications}</calcite-label>\r\n          </div>\r\n          <div class=\"position-right\">\r\n            <calcite-input-message active class=\"info-blue margin-top-0\" scale=\"m\">{this._translations.uniqueCout.replace(\"{{n}}\", total.toString())}</calcite-input-message>\r\n          </div>\r\n        </div>\r\n        {\r\n          hasSets ? this._getSelectionSetList() : (\r\n            <div class=\"info-message\">\r\n              <calcite-input-message active class=\"info-blue\" scale=\"m\">{this._translations.noNotifications}</calcite-input-message>\r\n            </div>\r\n          )\r\n        }\r\n        <div class=\"display-flex padding-1\">\r\n          <calcite-button onClick={() => { this._setPageType(EPageType.SELECT) }} width=\"full\">{this._translations.add}</calcite-button>\r\n        </div>\r\n      </calcite-panel>\r\n    ) : (\r\n      <calcite-panel>\r\n        <div class=\"padding-top-sides-1\">\r\n          <calcite-label class=\"font-bold\">{this._translations.myLists}</calcite-label>\r\n        </div>\r\n        <div class=\"padding-sides-1\">\r\n          <calcite-label>{this._translations.notifications}</calcite-label>\r\n        </div>\r\n        <div class=\"info-message padding-bottom-1\">\r\n          <calcite-input-message active class=\"info-blue\" scale=\"m\">{this._translations.noNotifications}</calcite-input-message>\r\n        </div>\r\n        {this._getNotice(this._translations.selectLayerAndAdd, \"padding-sides-1 padding-bottom-1\")}\r\n        <div class=\"display-flex padding-sides-1\">\r\n          <calcite-label class=\"font-bold width-full\">{this._translations.addresseeLayer}\r\n            <map-layer-picker\r\n              mapView={this.mapView}\r\n              onLayerSelectionChange={(evt) => this._layerSelectionChange(evt)}\r\n              selectedLayers={this.addresseeLayer ? [this.addresseeLayer?.layer.title] : []}\r\n              selectionMode={\"single\"}\r\n            />\r\n          </calcite-label>\r\n        </div>\r\n        <div class=\"display-flex padding-1\">\r\n          <calcite-button onClick={() => { this._setPageType(EPageType.SELECT) }} width=\"full\">{this._translations.add}</calcite-button>\r\n        </div>\r\n      </calcite-panel>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Create the selection sets list node for the List page\r\n   *\r\n   * @returns selection sets list node\r\n   * @protected\r\n   */\r\n  protected _getSelectionSetList(): VNode {\r\n    return (\r\n      <calcite-list class=\"list-border margin-sides-1\">\r\n        {\r\n          // REFINE is handled seperately from the core selection sets\r\n          // You can only access after clicking the refine action\r\n          this._selectionSets.reduce((prev, cur, i) => {\r\n            if (cur.workflowType !== EWorkflowType.REFINE) {\r\n              prev.push((\r\n                <calcite-list-item\r\n                  description={this._translations.selectedFeatures.replace(\"{{n}}\", cur.selectedIds.length.toString())}\r\n                  label={cur.label}\r\n                  onClick={() => this._gotoSelection(cur, this.mapView)}\r\n                >\r\n                  {this._getAction(true, \"pencil\", \"\", (evt): void => this._openSelection(cur, evt), false, \"actions-end\")}\r\n                  {this._getAction(true, \"x\", \"\", (evt): Promise<void> => this._deleteSelection(i, evt), false, \"actions-end\")}\r\n                </calcite-list-item>\r\n              ));\r\n            }\r\n            return prev;\r\n          }, [])\r\n        }\r\n      </calcite-list>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Create the Select page that shows the selection workflows\r\n   *\r\n   * @returns the page node\r\n   * @protected\r\n   */\r\n  protected _getSelectPage(): VNode {\r\n    // const searchTip = `${this._translations.selectSearchTip} ${this._translations.optionalSearchDistance}`;\r\n    const searchTip = this._translations.selectSearchTip;\r\n    // const selectTip = `${this._translations.selectLayerTip} ${this._translations.optionalSearchDistance}`;\r\n    const selectTip = this._translations.selectLayerTip;\r\n    // const sketchTip = this._sketchType === ESketchType.INTERACTIVE ?\r\n    //   `${this._translations.selectSketchTip} ${this._translations.optionalSearchDistance}` :\r\n    //   `${this._translations.selectLayerTip} ${this._translations.optionalSearchDistance}`;\r\n    const sketchTip = this._sketchType === ESketchType.INTERACTIVE ?\r\n      this._translations.selectSketchTip :\r\n      this._translations.selectLayerTip;\r\n\r\n    const noticeText = this._selectionWorkflowType === EWorkflowType.SELECT ? selectTip :\r\n      this._selectionWorkflowType === EWorkflowType.SKETCH ? sketchTip : searchTip;\r\n\r\n    return (\r\n      <calcite-panel>\r\n        {this._getLabel(this._translations.stepTwoFull.replace(\"{{layer}}\", this.addresseeLayer?.layer.title))}\r\n        {this._getNotice(noticeText)}\r\n        <div class={\"padding-1\"}>\r\n          <map-select-tools\r\n            class=\"font-bold\"\r\n            isUpdate={!!this._activeSelection}\r\n            mapView={this.mapView}\r\n            onSelectionSetChange={(evt) => this._updateForSelection(evt)}\r\n            onWorkflowTypeChange={(evt) => this._updateForWorkflowType(evt)}\r\n            ref={(el) => { this._selectTools = el }}\r\n            selectLayerView={this.addresseeLayer}\r\n            selectionSet={this._activeSelection}\r\n          />\r\n        </div>\r\n        <div class=\"padding-sides-1 padding-bottom-1\" style={{ \"align-items\": \"end\", \"display\": \"flex\" }}>\r\n          <calcite-icon class=\"info-blue padding-end-1-2\" icon=\"feature-layer\" scale=\"s\" />\r\n          <calcite-input-message active class=\"info-blue\" scale=\"m\">\r\n            {this._translations.selectedAddresses.replace(\"{{n}}\", this._numSelected.toString()).replace(\"{{layer}}\", this.addresseeLayer?.layer.title || \"\")}\r\n          </calcite-input-message>\r\n        </div>\r\n        {\r\n          this._getPageNavButtons(\r\n            this._translations.done,\r\n            this._numSelected === 0,\r\n            (): void => { void this._saveSelection() },\r\n            this._translations.cancel,\r\n            false,\r\n            (): void => { void this._home() }\r\n          )\r\n        }\r\n      </calcite-panel>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Create the Refine page that users can interactively add/remove features from existing selection sets\r\n   *\r\n   * @returns the page node\r\n   * @protected\r\n   */\r\n  protected _getRefinePage(): VNode {\r\n    return (\r\n      <calcite-panel>\r\n        {this._getLabel(this._translations.refineSelection)}\r\n        {this._getNotice(this._translations.refineTip, \"padding-sides-1\")}\r\n        <refine-selection\r\n          addresseeLayer={this.addresseeLayer}\r\n          mapView={this.mapView}\r\n          selectionSets={this._selectionSets}\r\n        />\r\n      </calcite-panel>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Create the PDF download page that shows the download options\r\n   *\r\n   * @returns the page node\r\n   * @protected\r\n   */\r\n  protected _getPDFPage(): VNode {\r\n    return this._getDownloadPage(EExportType.PDF);\r\n  }\r\n\r\n  /**\r\n   * Create the CSV download page that shows the download options\r\n   *\r\n   * @returns the page node\r\n   * @protected\r\n   */\r\n  protected _getCSVPage(): VNode {\r\n    return this._getDownloadPage(EExportType.CSV);\r\n  }\r\n\r\n  /**\r\n   * Create the main download page that has the shared aspects of both PDF and CSV\r\n   * But only show the current PDF or CSV page content\r\n   *\r\n   * @param type EExportType of the current type expected\r\n   *\r\n   * @returns the page node\r\n   * @protected\r\n   */\r\n  protected _getDownloadPage(\r\n    type: EExportType\r\n  ): VNode {\r\n    const isPdf = type === EExportType.PDF;\r\n    return (\r\n      <calcite-panel>\r\n        <div>\r\n          <div class=\"padding-top-sides-1\">\r\n            <calcite-label class=\"font-bold\">\r\n              {isPdf ? this._translations.pdfDownloads : this._translations.csvDownloads}\r\n            </calcite-label>\r\n            <calcite-label>{this._translations.notifications}</calcite-label>\r\n          </div>\r\n          {this._getSelectionLists()}\r\n          <div class=\"margin-side-1 padding-top-1 border-bottom\" />\r\n          <div class=\"padding-top-sides-1\">\r\n            <calcite-label layout=\"inline\">\r\n              <calcite-checkbox disabled={!this._downloadActive} ref={(el) => { this._removeDuplicates = el }} />\r\n              {this._translations.removeDuplicate}\r\n            </calcite-label>\r\n          </div>\r\n          <div class={isPdf ? \"\" : \"display-none\"}>\r\n            {this._getLabel(this._translations.selectPDFLabelOption, false)}\r\n            <div class={\"padding-sides-1\"}>\r\n              <pdf-download\r\n                disabled={!this._downloadActive}\r\n                layerView={this.addresseeLayer}\r\n                ref={(el) => { this._downloadTools = el }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"padding-1 display-flex\">\r\n            <calcite-button\r\n              disabled={!this._downloadActive}\r\n              onClick={isPdf ? () => this._downloadPDF() : () => this._downloadCSV()}\r\n              width=\"full\"\r\n            >\r\n              {isPdf ? this._translations.downloadPDF : this._translations.downloadCSV}\r\n            </calcite-button>\r\n          </div>\r\n        </div>\r\n      </calcite-panel>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Create the stacked navigation buttons for a page\r\n   *\r\n   * @param topLabel the label to use for the button on top\r\n   * @param topDisabled should the button be disabled\r\n   * @param topFunc the fucntion to execute when the button is clicked\r\n   * @param bottomLabel the label to use for the button on bottom\r\n   * @param bottomDisabled should the button be disabled\r\n   * @param bottomFunc the fucntion to execute when the button is clicked\r\n   *\r\n   * @returns the page node\r\n   * @protected\r\n   */\r\n  protected _getPageNavButtons(\r\n    topLabel: string,\r\n    topDisabled: boolean,\r\n    topFunc: () => void,\r\n    bottomLabel: string,\r\n    bottomDisabled: boolean,\r\n    bottomFunc: () => void\r\n  ): VNode {\r\n    return (\r\n      <div>\r\n        <div class=\"display-flex padding-top-sides-1\">\r\n          <calcite-button\r\n            disabled={topDisabled}\r\n            onClick={topFunc}\r\n            width=\"full\"\r\n          >\r\n            {topLabel}\r\n          </calcite-button>\r\n        </div>\r\n        <div class=\"display-flex padding-top-1-2 padding-sides-1\">\r\n          <calcite-button\r\n            appearance=\"outline\"\r\n            disabled={bottomDisabled}\r\n            onClick={bottomFunc}\r\n            width=\"full\"\r\n          >\r\n            {bottomLabel}\r\n          </calcite-button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Create an informational notice\r\n   *\r\n   * @param message the message to display in the notice\r\n   * @param noticeClass any custom css for the notice (default is \"padding-1\")\r\n   *\r\n   * @returns the notice node\r\n   * @protected\r\n   */\r\n  protected _getNotice(\r\n    message: string,\r\n    noticeClass = \"padding-1\"\r\n  ): VNode {\r\n    return (\r\n      <calcite-notice class={noticeClass} color=\"green\" icon=\"lightbulb\" open={true}>\r\n        <div slot=\"message\">{message}</div>\r\n      </calcite-notice>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Create a calcite label\r\n   *\r\n   * @param label value to display in the label\r\n   * @param disableSpacing should extra calcite defined spacing be applied\r\n   *\r\n   * @returns the label node\r\n   * @protected\r\n   */\r\n  protected _getLabel(\r\n    label: string,\r\n    disableSpacing = false\r\n  ): VNode {\r\n    return (\r\n      <div class=\"padding-top-sides-1\">\r\n        <calcite-label\r\n          class=\"font-bold\"\r\n          disable-spacing={disableSpacing}\r\n        >\r\n          {label}\r\n        </calcite-label>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get selection set list node with checkbox for Download pages\r\n   *\r\n   * @returns the list node\r\n   * @protected\r\n   */\r\n  protected _getSelectionLists(): VNode {\r\n    return this._selectionSets.reduce((prev, cur) => {\r\n      if (cur.workflowType !== EWorkflowType.REFINE) {\r\n        if (!this._downloadActive && cur.download) {\r\n          this._downloadActive = true;\r\n        }\r\n        prev.push((\r\n          <div class=\"display-flex padding-sides-1 padding-bottom-1\">\r\n            <calcite-checkbox checked={cur.download} onClick={() => { void this._toggleDownload(cur.id) }} />\r\n            <calcite-list class=\"list-border margin-start-1-2 w-100\" id=\"download-list\">\r\n              <calcite-list-item\r\n                description={this._translations.selectedFeatures.replace(\"{{n}}\", cur.selectedIds.length.toString())}\r\n                disabled={!cur.download}\r\n                label={cur.label}\r\n                onClick={() => { void this._toggleDownload(cur.id) }}\r\n              />\r\n            </calcite-list>\r\n          </div>\r\n        ));\r\n      }\r\n      return prev;\r\n    }, []) || (<div />);\r\n  }\r\n\r\n  /**\r\n   * Toggle the disabled state for the download options based on user selection\r\n   *\r\n   * @param id the selection set id to toggle\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _toggleDownload(\r\n    id: number\r\n  ): Promise<void> {\r\n    let isActive = false;\r\n    this._selectionSets = this._selectionSets.map(ss => {\r\n      ss.download = ss.id === id ? !ss.download : ss.download;\r\n      isActive = ss.download ? true : isActive;\r\n      return ss;\r\n    });\r\n    this._downloadActive = isActive;\r\n    await this._highlightFeatures();\r\n  }\r\n\r\n  /**\r\n   * Download all selection sets as PDF\r\n   *\r\n   * @protected\r\n   */\r\n  protected _downloadPDF(): void {\r\n    const ids = utils.getSelectionIds(this._getDownloadSelectionSets());\r\n    void this._downloadTools.downloadPDF(ids, this._removeDuplicates.checked);\r\n  }\r\n\r\n  /**\r\n   * Download all selection sets as CSV\r\n   *\r\n   * @protected\r\n   */\r\n  protected _downloadCSV(): void {\r\n    const ids = utils.getSelectionIds(this._getDownloadSelectionSets());\r\n    void this._downloadTools.downloadCSV(ids, this._removeDuplicates.checked);\r\n  }\r\n\r\n  /**\r\n   * Get all enabled selection sets\r\n   *\r\n   * @returns the selection sets\r\n   * @protected\r\n   */\r\n  protected _getDownloadSelectionSets(): ISelectionSet[] {\r\n    return this._selectionSets.filter(ss => {\r\n      return ss.download || ss.workflowType === EWorkflowType.REFINE;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Store the current workflow type\r\n   *\r\n   * @protected\r\n   */\r\n  protected _updateForWorkflowType(\r\n    evt: CustomEvent\r\n  ): void {\r\n    this._selectionWorkflowType = evt.detail;\r\n  }\r\n\r\n  /**\r\n   * Create a calcite action\r\n   *\r\n   * @param enabled controls the enabled state of the control\r\n   * @param icon the image to display in the action\r\n   * @param text and supporting text for the action\r\n   * @param onClick the fucntion the actio will execute\r\n   * @param indicator boolean to control if an indicator should be shown (default is false)\r\n   * @param slot the supporting slot to use\r\n   *\r\n   * @returns the calcite action node\r\n   * @protected\r\n   */\r\n  protected _getAction(\r\n    enabled: boolean,\r\n    icon: string,\r\n    text: string,\r\n    onClick: any,\r\n    indicator = false,\r\n    slot = \"\"\r\n  ): VNode {\r\n    return (\r\n      <calcite-action\r\n        disabled={!enabled}\r\n        icon={icon}\r\n        indicator={indicator}\r\n        onClick={onClick}\r\n        slot={slot}\r\n        text={text} />\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Store the number of selected features and if it's more than one enable save\r\n   *\r\n   * @returns the page node\r\n   * @protected\r\n   */\r\n  protected _updateForSelection(evt: CustomEvent): void {\r\n    this._numSelected = evt.detail;\r\n    this._saveEnabled = this._numSelected > 0;\r\n  }\r\n\r\n  /**\r\n   * Clear the selection and navigate to the home page\r\n   *\r\n   * @returns Promise when the function has completed\r\n   * @protected\r\n   */\r\n  protected async _home(): Promise<void> {\r\n    await this._clearSelection();\r\n    if (typeof this._popupsEnabled === 'boolean' && this.mapView.popup) {\r\n      this.mapView.popup.autoOpenEnabled = this._popupsEnabled;\r\n    }\r\n    this._setPageType(EPageType.LIST);\r\n  }\r\n\r\n  /**\r\n   * Fetch the layer defined in the selection change event\r\n   *\r\n   * @returns Promise when the function has completed\r\n   * @protected\r\n   */\r\n  protected async _layerSelectionChange(\r\n    evt: CustomEvent\r\n  ): Promise<void> {\r\n    const title: string = evt?.detail?.length > 0 ? evt.detail[0] : \"\";\r\n    if (title !== this.addresseeLayer?.layer.title) {\r\n      this.addresseeLayer = await getMapLayerView(this.mapView, title);\r\n      await this._updateSelectionSets(this.addresseeLayer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update selection sets when the addressee layer changes.\r\n   * Will remove any \"refine\" selection set.\r\n   * Will use stored search, select, and sketch geometries and any buffers to select from the new addressee layer.\r\n   *\r\n   * @param layerView The new addressee layer view to select from\r\n   *\r\n   * @returns Promise when the function has completed\r\n   * @protected\r\n   */\r\n  protected async _updateSelectionSets(\r\n    layerView: __esri.FeatureLayerView\r\n  ): Promise<void> {\r\n    const _selectionSets = this._selectionSets.filter(\r\n      selectionSet => selectionSet.workflowType !== EWorkflowType.REFINE\r\n    );\r\n    const oidDefs = [];\r\n    _selectionSets.forEach(selectionSet => {\r\n      selectionSet.layerView = layerView;\r\n      selectionSet.selectedIds = [];\r\n      oidDefs.push(getSelectionSetQuery(selectionSet, this._geometryEngine));\r\n    });\r\n\r\n    return Promise.all(oidDefs).then(async (results): Promise<void> => {\r\n      results.forEach((result, i) => {\r\n        _selectionSets[i].selectedIds = result;\r\n      });\r\n      await this._highlightFeatures();\r\n      this._selectionSets = [\r\n        ..._selectionSets\r\n      ];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update the selection sets with any new selections from the select tools\r\n   *\r\n   * @returns Promise when the function has completed\r\n   * @protected\r\n   */\r\n  protected async _saveSelection(): Promise<void> {\r\n    const results = await this._selectTools?.getSelection();\r\n    const isUpdate = this._selectTools?.isUpdate;\r\n\r\n    this._selectionSets = isUpdate ? this._selectionSets.map(ss => {\r\n      return ss.id === results.id ? results : ss;\r\n    }) : [\r\n      ...this._selectionSets,\r\n      results\r\n    ];\r\n    return this._home();\r\n  }\r\n\r\n  /**\r\n   * Clear any selections\r\n   *\r\n   * @returns Promise when the function has completed\r\n   * @protected\r\n   */\r\n  protected async _clearSelection(): Promise<void> {\r\n    await this._selectTools?.clearSelection();\r\n    this._numSelected = 0;\r\n    this._activeSelection = undefined;\r\n  }\r\n\r\n  /**\r\n   * Delete the selection at the defined index\r\n   *\r\n   * @param index number that defines what selection set to delete\r\n   *\r\n   * @protected\r\n   */\r\n  protected _deleteSelection(\r\n    index: number,\r\n    evt: CustomEvent\r\n  ): Promise<void> {\r\n    evt.stopPropagation();\r\n    this._selectionSets = this._selectionSets.filter((ss, i) => {\r\n      if (i !== index) {\r\n        return ss;\r\n      }\r\n    });\r\n    return this._highlightFeatures();\r\n  }\r\n\r\n  /**\r\n   * Pan to the current selection\r\n   *\r\n   * @param selSet ISelectionSet to pan to\r\n   * @param mapView Current MapView to pan within\r\n   *\r\n   * @protected\r\n   */\r\n  protected _gotoSelection(\r\n    selSet: ISelectionSet,\r\n    mapView: __esri.MapView\r\n  ): void {\r\n    void goToSelection(selSet.selectedIds, selSet.layerView, mapView)\r\n  }\r\n\r\n  /**\r\n   * Open the selection set for further adjustment\r\n   *\r\n   * @protected\r\n   */\r\n  protected _openSelection(\r\n    selectionSet: ISelectionSet,\r\n    evt: CustomEvent\r\n  ): void {\r\n    evt.stopPropagation();\r\n    this._activeSelection = selectionSet;\r\n    this._pageType = EPageType.SELECT;\r\n  }\r\n\r\n  /**\r\n   * Highlight any selected features in the map\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _highlightFeatures(): Promise<void> {\r\n    this._clearHighlight();\r\n    const ids = utils.getSelectionIds(this._selectionSets);\r\n    if (ids.length > 0) {\r\n      state.highlightHandle = await highlightFeatures(\r\n        ids,\r\n        this.addresseeLayer,\r\n        this.mapView\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear any highlighted features in the map\r\n   *\r\n   * @protected\r\n   */\r\n  protected _checkPopups(): void {\r\n    if (typeof this._popupsEnabled !== 'boolean') {\r\n      this._popupsEnabled = this.mapView?.popup.autoOpenEnabled;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear any highlighted features in the map\r\n   *\r\n   * @protected\r\n   */\r\n  protected _clearHighlight(): void {\r\n    if (state && state.highlightHandle) {\r\n      state.highlightHandle?.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetches the component's translations\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _getTranslations(): Promise<void> {\r\n    const translations = await getLocaleComponentStrings(this.el);\r\n    this._translations = translations[0] as typeof NewPublicNotification_T9n;\r\n  }\r\n}\r\n"]}
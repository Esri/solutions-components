{"version":3,"file":"map-select-tools.js","sourceRoot":"","sources":["../../../src/components/map-select-tools/map-select-tools.tsx"],"names":[],"mappings":"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","sourcesContent":["/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { Component, Element, Event, EventEmitter, Host, h, Method, Listen, Prop, State, VNode, Watch } from \"@stencil/core\";\r\nimport { loadModules } from \"../../utils/loadModules\";\r\nimport { highlightFeatures, goToSelection } from \"../../utils/mapViewUtils\";\r\nimport { getQueryGeoms, queryObjectIds } from \"../../utils/queryUtils\";\r\nimport { DistanceUnit, ILayerSourceConfigItem, ILocatorSourceConfigItem, ISearchConfiguration, EWorkflowType, ESelectionMode, ISelectionSet, ERefineMode, ESketchType } from \"../../utils/interfaces\";\r\nimport state from \"../../utils/publicNotificationStore\";\r\nimport MapSelectTools_T9n from \"../../assets/t9n/map-select-tools/resources.json\";\r\nimport { getLocaleComponentStrings } from \"../../utils/locale\";\r\n\r\n@Component({\r\n  tag: \"map-select-tools\",\r\n  styleUrl: \"map-select-tools.css\",\r\n  shadow: false,\r\n})\r\nexport class MapSelectTools {\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Host element access\r\n  //\r\n  //--------------------------------------------------------------------------\r\n  @Element() el: HTMLMapSelectToolsElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * string | number[] |  object with r, g, b, a: https://developers.arcgis.com/javascript/latest/api-reference/esri-Color.html\r\n   */\r\n  @Prop() bufferColor: any = [227, 139, 79, 0.8];\r\n\r\n  /**\r\n   * string | number[] | object with r, g, b, a: https://developers.arcgis.com/javascript/latest/api-reference/esri-Color.html\r\n   */\r\n  @Prop() bufferOutlineColor: any = [255, 255, 255];\r\n\r\n  /**\r\n   * string[]: Optional list of enabled layer ids\r\n   *  If empty all layers will be available\r\n   */\r\n  @Prop() enabledLayerIds: string[] = [];\r\n\r\n  /**\r\n   * number: The default value to show for the buffer distance\r\n   */\r\n  @Prop() defaultBufferDistance: number;\r\n\r\n  /**\r\n   * number: The default value to show for the buffer unit\r\n   */\r\n  @Prop() defaultBufferUnit: DistanceUnit;\r\n\r\n  /**\r\n   * esri/geometry: https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry.html\r\n   */\r\n  @Prop() geometries: __esri.Geometry[];\r\n\r\n  /**\r\n   * boolean: When true a new label is not generated for the stored selection set\r\n   */\r\n  @Prop() isUpdate = false;\r\n\r\n  /**\r\n   * esri/views/View: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\r\n   */\r\n  @Prop() mapView: __esri.MapView;\r\n\r\n  /**\r\n   * ISearchConfiguration: Configuration details for the Search widget\r\n   */\r\n  @Prop() searchConfiguration: ISearchConfiguration;\r\n\r\n  /**\r\n   * utils/interfaces/ISelectionSet: Used to store key details about any selections that have been made.\r\n   */\r\n  @Prop({ reflect: false }) selectionSet: ISelectionSet;\r\n\r\n  /**\r\n   * esri/views/layers/FeatureLayerView: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-layers-FeatureLayerView.html\r\n   */\r\n  @Prop() selectLayerView: __esri.FeatureLayerView;\r\n\r\n  /**\r\n   * boolean: When true the buffer tools will be available for use\r\n   */\r\n  @Prop() showBufferTools = true;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  State (internal)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  @State() _layerSelectChecked: boolean;\r\n\r\n  /**\r\n   * string: Text entered by the end user.\r\n   * Used to search against the locator.\r\n   */\r\n  @State() _searchTerm: string;\r\n\r\n  /**\r\n   * Contains the translations for this component.\r\n   * All UI strings should be defined here.\r\n   */\r\n  @State() protected _translations: typeof MapSelectTools_T9n;\r\n\r\n  /**\r\n   * EWorkflowType: \"SEARCH\", \"SELECT\", \"SKETCH\", \"REFINE\"\r\n   */\r\n  @State() _workflowType: EWorkflowType;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * esri/layers/FeatureLayer: https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html\r\n   */\r\n  protected FeatureLayer: typeof import(\"esri/layers/FeatureLayer\");\r\n\r\n  /**\r\n   * esri/Graphic: https://developers.arcgis.com/javascript/latest/api-reference/esri-Graphic.html\r\n   */\r\n  protected Graphic: typeof import(\"esri/Graphic\");\r\n\r\n  /**\r\n   * esri/layers/GraphicsLayer: https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GraphicsLayer.html\r\n   */\r\n  protected GraphicsLayer: typeof import(\"esri/layers/GraphicsLayer\");\r\n\r\n  /**\r\n   * esri/widgets/Search: https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Search.html\r\n   */\r\n  protected Search: typeof import(\"esri/widgets/Search\");\r\n\r\n  /**\r\n   * esri/geometry/geometryEngine: https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-geometryEngine.html\r\n   */\r\n  protected _geometryEngine: __esri.geometryEngine;\r\n\r\n  /**\r\n   * esri/geometry: https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry.html\r\n   */\r\n  protected _bufferGeometry: __esri.Geometry;\r\n\r\n  /**\r\n   * esri/layers/GraphicsLayer: https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GraphicsLayer.html\r\n   */\r\n  protected _bufferGraphicsLayer: __esri.GraphicsLayer;\r\n\r\n  /**\r\n   * HTMLBufferToolsElement: The container div for the buffer tools\r\n   */\r\n  protected _bufferTools: HTMLBufferToolsElement;\r\n\r\n  /**\r\n   * HTMLMapDrawToolsElement: The container div for the sketch widget\r\n   */\r\n  protected _drawTools: HTMLMapDrawToolsElement;\r\n\r\n  /**\r\n   * esri/views/layers/FeatureLayerView: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-layers-FeatureLayerView.html\r\n   */\r\n  protected _refineSelectLayers: __esri.FeatureLayerView[];\r\n\r\n  /**\r\n   * HTMLRefineSelectionToolsElement: The container div for the sketch widget\r\n   */\r\n  protected _refineTools: HTMLRefineSelectionToolsElement;\r\n\r\n  /**\r\n   * HTMLElement: The container div for the search widget\r\n   */\r\n  protected _searchElement: HTMLElement;\r\n\r\n  /**\r\n   * An array of objects representing the results of search\r\n   */\r\n  protected _searchResult: any;\r\n\r\n  /**\r\n   * esri/widgets/Search: https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Search.html\r\n   */\r\n  protected _searchWidget: __esri.widgetsSearch;\r\n\r\n  /**\r\n   * HTMLCalciteCheckboxElement: The checkbox element that controls if user drawn graphics\r\n   * are used, if checked, to first make a selection on the layer and use the returned geomerties to select from the addressee layer\r\n   */\r\n  protected _selectFromLayerElement: HTMLCalciteCheckboxElement;\r\n\r\n  /**\r\n   * number[]: the oids of the selected features\r\n   */\r\n  protected _selectedIds: number[] = [];\r\n\r\n  /**\r\n   * string: A label to help uniquely identify the selection set\r\n   */\r\n  protected _selectionLabel = \"\";\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Watch handlers\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Called each time the geometries prop is changed.\r\n   *\r\n   * @returns Promise when complete\r\n   */\r\n  @Watch(\"geometries\")\r\n  async watchGeometriesHandler(\r\n    newValue: __esri.Geometry[],\r\n    oldValue: __esri.Geometry[]\r\n  ): Promise<void> {\r\n    if (newValue !== oldValue) {\r\n      if (newValue.length > 0) {\r\n        return this._geomQuery(this.geometries);\r\n      } else if (newValue.length === 0) {\r\n        return this._clearResults(true, true);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called each time the workflowType prop is changed and emits the workflowTypeChange event.\r\n   *\r\n   * @returns Promise when complete\r\n   */\r\n  @Watch(\"_workflowType\")\r\n  async workflowTypeHandler(\r\n    newValue: EWorkflowType,\r\n    oldValue: EWorkflowType\r\n  ): Promise<void> {\r\n    if (newValue !== oldValue) {\r\n      this.mapView.popup.autoOpenEnabled = [\"SELECT\", \"SKETCH\", \"REFINE\"].indexOf(newValue) < 0;\r\n      this.workflowTypeChange.emit(newValue);\r\n    }\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Methods (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Clear any selection results\r\n   *\r\n   * @returns Promise when the results have been cleared\r\n   */\r\n  @Method()\r\n  async clearSelection(): Promise<void> {\r\n    return this._clearResults();\r\n  }\r\n\r\n  /**\r\n   * Get the new selection set\r\n   *\r\n   * @returns Promise with the new selection set\r\n   */\r\n  @Method()\r\n  async getSelection(): Promise<ISelectionSet> {\r\n    // Allow any non whitespace\r\n    if (!/\\S+/gm.test(this._selectionLabel)) {\r\n      this._selectionLabel = this._getSelectionBaseLabel();\r\n    }\r\n    const isBaseLabel = this._selectionLabel === this._getSelectionBaseLabel();\r\n    return {\r\n      id: this.isUpdate ? this.selectionSet.id : Date.now(),\r\n      workflowType: this._workflowType,\r\n      searchResult: this._searchResult,\r\n      buffer: this._bufferGeometry,\r\n      distance: this._bufferTools.distance,\r\n      download: true,\r\n      unit: this._bufferTools.unit,\r\n      label: (this._selectionLabel && !isBaseLabel) ?\r\n        this._selectionLabel : `${this._selectionLabel} ${this._bufferTools.distance} ${this._bufferTools.unit}`,\r\n      selectedIds: this._selectedIds,\r\n      layerView: this.selectLayerView,\r\n      geometries: this.geometries,\r\n      refineSelectLayers: this._refineTools.layerViews\r\n    } as ISelectionSet;\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Events (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Emitted on demand when the selection set changes.\r\n   *\r\n   */\r\n  @Event() selectionSetChange: EventEmitter<number>;\r\n\r\n  /**\r\n   * Emitted on demand when the sketch type changes.\r\n   *\r\n   */\r\n  @Event() sketchTypeChange: EventEmitter<ESketchType>;\r\n\r\n  /**\r\n   * Emitted on demand when the workflow type changes.\r\n   *\r\n   */\r\n  @Event() workflowTypeChange: EventEmitter<EWorkflowType>;\r\n\r\n  /**\r\n   * Handle changes to the selection sets\r\n   */\r\n  @Listen(\"labelChange\", { target: \"window\" })\r\n  labelChange(event: CustomEvent): void {\r\n    this._selectionLabel = event.detail;\r\n  }\r\n\r\n  /**\r\n   * Listen to changes in the sketch graphics\r\n   *\r\n   */\r\n  @Listen(\"sketchGraphicsChange\", { target: \"window\" })\r\n  sketchGraphicsChange(event: CustomEvent): void {\r\n    this._updateSelection(EWorkflowType.SKETCH, event.detail, this._selectionLabel || this._translations.sketch);\r\n  }\r\n\r\n  /**\r\n   * Listen to changes in the refine graphics\r\n   *\r\n   */\r\n  @Listen(\"refineSelectionGraphicsChange\", { target: \"window\" })\r\n  refineSelectionGraphicsChange(event: CustomEvent): Promise<void> {\r\n    const graphics = event.detail;\r\n\r\n    this._updateSelection(EWorkflowType.SELECT, graphics, this._selectionLabel || this._translations.select);\r\n    // Using OIDs to avoid issue with points\r\n    const oids = Array.isArray(graphics) ? graphics.map(g => g.attributes[g.layer.objectIdField]) : [];\r\n    return this._highlightFeatures(oids);\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (lifecycle)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * StencilJS: Called once just after the component is first connected to the DOM.\r\n   */\r\n  async componentWillLoad(): Promise<void> {\r\n    await this._getTranslations();\r\n    await this._initModules();\r\n  }\r\n\r\n  /**\r\n   * StencilJS: Called once just after the component is fully loaded and the first render() occurs.\r\n   */\r\n  async componentDidLoad(): Promise<void> {\r\n    return this._init();\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   */\r\n  render(): VNode {\r\n    const searchEnabled = this._workflowType === EWorkflowType.SEARCH;\r\n    const showSearchClass = searchEnabled ? \" div-visible-search\" : \" div-not-visible\";\r\n\r\n    const drawEnabled = this._workflowType === EWorkflowType.SKETCH || this._workflowType === EWorkflowType.SELECT;\r\n    const showBufferToolsClass = this.showBufferTools ? \"search-distance\" : \"div-not-visible\";\r\n\r\n    const useSelectClass = this._layerSelectChecked && !searchEnabled ? \" div-visible\" : \" div-not-visible\";\r\n    const useDrawClass = !this._layerSelectChecked && !searchEnabled ? \" div-visible\" : \" div-not-visible\";\r\n\r\n    const showLayerChoiceClass = searchEnabled ? \"div-not-visible\" : \"div-visible\";\r\n    return (\r\n      <Host>\r\n        <div class=\"padding-bottom-1\">\r\n          <calcite-radio-group\r\n            class=\"w-100\"\r\n            onCalciteRadioGroupChange={(evt) => this._workflowChange(evt)}\r\n          >\r\n            <calcite-radio-group-item\r\n              checked={searchEnabled}\r\n              class=\"w-50 end-border\"\r\n              value={EWorkflowType.SEARCH}\r\n            >\r\n              {this._translations.search}\r\n            </calcite-radio-group-item>\r\n            <calcite-radio-group-item\r\n              checked={drawEnabled}\r\n              class=\"w-50\"\r\n              value={EWorkflowType.SKETCH}\r\n            >\r\n              {this._translations.sketch}\r\n            </calcite-radio-group-item>\r\n          </calcite-radio-group>\r\n        </div>\r\n        <div class={showSearchClass}>\r\n          <div class=\"search-widget\" ref={(el) => { this._searchElement = el }} />\r\n        </div>\r\n        <div class={showLayerChoiceClass}>\r\n          <calcite-label layout=\"inline\">\r\n            <calcite-checkbox\r\n              checked={this.selectionSet?.workflowType === EWorkflowType.SELECT}\r\n              onCalciteCheckboxChange={() => this._layerSelectChanged()}\r\n              ref={(el) => this._selectFromLayerElement = el}\r\n            />\r\n            {\"Use layer features\"}\r\n          </calcite-label>\r\n        </div>\r\n        <div class={useDrawClass}>\r\n          <map-draw-tools\r\n            active={true}\r\n            border={true}\r\n            mapView={this.mapView}\r\n            ref={(el) => { this._drawTools = el }}\r\n          />\r\n        </div>\r\n        <div class={useSelectClass}>\r\n          <refine-selection-tools\r\n            active={true}\r\n            border={true}\r\n            enabledLayerIds={this.enabledLayerIds}\r\n            layerViews={this._refineSelectLayers}\r\n            mapView={this.mapView}\r\n            mode={ESelectionMode.ADD}\r\n            ref={(el) => { this._refineTools = el }}\r\n            refineMode={ERefineMode.SUBSET}\r\n          />\r\n        </div>\r\n        <calcite-label class={showBufferToolsClass}>\r\n          {this._translations.searchDistance}\r\n          <buffer-tools\r\n            distance={this.selectionSet?.distance || this.defaultBufferDistance}\r\n            geometries={this.geometries}\r\n            onBufferComplete={(evt) => this._bufferComplete(evt)}\r\n            ref={(el) => this._bufferTools = el}\r\n            unit={this.selectionSet?.unit || this.defaultBufferUnit}\r\n          />\r\n        </calcite-label>\r\n        <slot />\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Load esri javascript api modules\r\n   *\r\n   * @returns Promise resolving when function is done\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _initModules(): Promise<void> {\r\n    const [GraphicsLayer, Graphic, Search, geometryEngine, FeatureLayer] = await loadModules([\r\n      \"esri/layers/GraphicsLayer\",\r\n      \"esri/Graphic\",\r\n      \"esri/widgets/Search\",\r\n      \"esri/geometry/geometryEngine\",\r\n      \"esri/layers/FeatureLayer\"\r\n    ]);\r\n    this.GraphicsLayer = GraphicsLayer;\r\n    this.Graphic = Graphic;\r\n    this.Search = Search;\r\n    this._geometryEngine = geometryEngine;\r\n    this.FeatureLayer = FeatureLayer;\r\n  }\r\n\r\n  /**\r\n   * Initialize the graphics layer, selection set, and search widget\r\n   *\r\n   * @returns Promise when the operation has completed\r\n   */\r\n  protected async _init(): Promise<void> {\r\n    this._initGraphicsLayer();\r\n    this._initSelectionSet();\r\n    this._initSearchWidget();\r\n  }\r\n\r\n  /**\r\n   * Initialize the state of the component with any stored values in a selection set\r\n   *\r\n   * @protected\r\n   */\r\n  protected _initSelectionSet(): void {\r\n    if (this.selectionSet) {\r\n      this._searchTerm = this.selectionSet?.searchResult?.name;\r\n      this._workflowType = this.selectionSet?.workflowType;\r\n      this._searchResult = this.selectionSet?.searchResult;\r\n      this._refineSelectLayers = this.selectionSet?.refineSelectLayers;\r\n      this.geometries = [\r\n        ...this.selectionSet?.geometries\r\n      ];\r\n      // reset selection label base\r\n      this._selectionLabel = this.selectionSet?.label || this._getSelectionBaseLabel();\r\n\r\n      void goToSelection(this.selectionSet.selectedIds, this.selectionSet.layerView, this.mapView, false);\r\n    } else {\r\n      this._workflowType = EWorkflowType.SEARCH;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the default label base when the user has not provided a value\r\n   *\r\n   * @protected\r\n   */\r\n  protected _getSelectionBaseLabel(): string {\r\n    return this._workflowType === EWorkflowType.SKETCH ?\r\n      this._translations.sketch : this._workflowType === EWorkflowType.SELECT ?\r\n        this._translations.select : this._workflowType === EWorkflowType.SEARCH && this._searchResult ?\r\n          this._searchResult?.name : this.selectionSet?.label;\r\n  }\r\n\r\n  /**\r\n   * Initialize the search widget\r\n   *\r\n   * @protected\r\n   */\r\n  protected _initSearchWidget(): void {\r\n    if (this.mapView && this._searchElement) {\r\n      const searchConfiguration = this._getSearchConfig(this.searchConfiguration, this.mapView);\r\n\r\n      const searchOptions: __esri.widgetsSearchProperties = {\r\n        view: this.mapView,\r\n        container: this._searchElement,\r\n        searchTerm: this._searchTerm,\r\n        ...searchConfiguration\r\n      };\r\n\r\n      this._searchWidget = new this.Search(searchOptions);\r\n\r\n      this._searchWidget.on(\"search-clear\", () => {\r\n        void this._clearResults(false);\r\n      });\r\n\r\n      this._searchWidget.on(\"select-result\", (searchResults) => {\r\n        void this._clearResults(false);\r\n        if (searchResults.result) {\r\n          this._searchResult = searchResults.result;\r\n          this._updateSelection(\r\n            EWorkflowType.SEARCH,\r\n            [searchResults.result.feature],\r\n            searchResults?.result?.name\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the search widget based on user defined configuration\r\n   *\r\n   * @param searchConfiguration search configuration defined by the user\r\n   * @param view the current map view\r\n   *\r\n   * @protected\r\n   */\r\n  protected _getSearchConfig(\r\n    searchConfiguration: ISearchConfiguration,\r\n    view: __esri.MapView\r\n  ): ISearchConfiguration {\r\n    const sources = searchConfiguration?.sources;\r\n    if (sources) {\r\n      sources.forEach(source => {\r\n        const isLayerSource = source.hasOwnProperty(\"layer\");\r\n        if (isLayerSource) {\r\n          const layerSource = source as ILayerSourceConfigItem;\r\n          const layerFromMap = layerSource.layer?.id\r\n            ? view.map.findLayerById(layerSource.layer.id)\r\n            : null;\r\n          if (layerFromMap) {\r\n            layerSource.layer = layerFromMap as __esri.FeatureLayer;\r\n          } else if (layerSource?.layer?.url) {\r\n            layerSource.layer = new this.FeatureLayer(layerSource?.layer?.url as any);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    searchConfiguration?.sources?.forEach(source => {\r\n      const isLocatorSource = source.hasOwnProperty(\"locator\");\r\n      if (isLocatorSource) {\r\n        const locatorSource = source as ILocatorSourceConfigItem;\r\n        locatorSource.url = locatorSource.url;\r\n        delete locatorSource.url;\r\n      }\r\n    });\r\n    return searchConfiguration;\r\n  }\r\n\r\n  /**\r\n   * Initialize the graphics layer used to store any buffer grapghics\r\n   *\r\n   * @protected\r\n   */\r\n  protected _initGraphicsLayer(): void {\r\n    const title = this._translations.bufferLayer;\r\n\r\n    const bufferIndex = this.mapView.map.layers.findIndex((l) => l.title === title);\r\n    if (bufferIndex > -1) {\r\n      this._bufferGraphicsLayer = this.mapView.map.layers.getItemAt(bufferIndex) as __esri.GraphicsLayer;\r\n    } else {\r\n      this._bufferGraphicsLayer = new this.GraphicsLayer({ title });\r\n      state.managedLayers.push(title);\r\n      const sketchIndex = this.mapView.map.layers.findIndex((l) => l.title === this._translations.sketchLayer);\r\n      if (sketchIndex > -1) {\r\n        this.mapView.map.layers.add(this._bufferGraphicsLayer, sketchIndex);\r\n      } else {\r\n        this.mapView.map.layers.add(this._bufferGraphicsLayer);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Store the layer select checked change\r\n   *\r\n   * @protected\r\n   */\r\n  protected _layerSelectChanged(): void {\r\n    this._layerSelectChecked = this._selectFromLayerElement.checked;\r\n    this.sketchTypeChange.emit(this._layerSelectChecked ? ESketchType.LAYER : ESketchType.INTERACTIVE);\r\n  }\r\n\r\n  /**\r\n   * Store workflow type change\r\n   *\r\n   * @protected\r\n   */\r\n  protected _workflowChange(evt: CustomEvent): void {\r\n    this._workflowType = evt.detail;\r\n  }\r\n\r\n  /**\r\n   * Highlight the features in the map\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _highlightFeatures(\r\n    ids: number[]\r\n  ): Promise<void> {\r\n    state.highlightHandle?.remove();\r\n    if (ids.length > 0) {\r\n      state.highlightHandle = await highlightFeatures(\r\n        ids,\r\n        this.selectLayerView,\r\n        this.mapView\r\n      );\r\n    }\r\n    this.selectionSetChange.emit(ids.length);\r\n  }\r\n\r\n  /**\r\n   * Query the selectLayerView based on any user drawn geometries or buffers\r\n   *\r\n   * @param geometries Array of geometries used for the selection of ids from the select layer view\r\n   *\r\n   * @returns Promise when the selection is complete and the graphics have been highlighted\r\n   */\r\n  protected async _selectFeatures(\r\n    geometries: __esri.Geometry[]\r\n  ): Promise<void> {\r\n    this._selectedIds = await queryObjectIds(\r\n      geometries,\r\n      this.selectLayerView.layer\r\n    );\r\n    // Add geometries used for selecting features as graphics\r\n    this._drawTools.graphics = this.geometries.map(geom => {\r\n      const props = {\r\n        \"geometry\": geom,\r\n        \"symbol\": geom.type === \"point\" ?\r\n          this._drawTools?.pointSymbol : geom.type === \"polyline\" ?\r\n            this._drawTools?.polylineSymbol : geom.type === \"polygon\" ?\r\n              this._drawTools?.polygonSymbol : undefined\r\n      };\r\n      return new this.Graphic(props)\r\n    });\r\n    void this._highlightFeatures(this._selectedIds);\r\n  }\r\n\r\n  /**\r\n   * Query the selectLayerView based on any user drawn geometries or buffers\r\n   *\r\n   * @param evt CustomEvent that contains the result of the buffer\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _bufferComplete(\r\n    evt: CustomEvent\r\n  ): Promise<void> {\r\n    this._bufferGeometry = Array.isArray(evt.detail) ?\r\n      evt.detail[0] : evt.detail;\r\n\r\n    if (this._bufferGeometry) {\r\n      // Create a symbol for rendering the graphic\r\n      const symbol = {\r\n        type: \"simple-fill\",\r\n        color: this.bufferColor,\r\n        outline: {\r\n          color: this.bufferOutlineColor,\r\n          width: 1\r\n        }\r\n      };\r\n\r\n      // Add the geometry and symbol to a new graphic\r\n      const polygonGraphic = new this.Graphic({\r\n        geometry: this._bufferGeometry,\r\n        symbol\r\n      });\r\n\r\n      this._bufferGraphicsLayer.removeAll();\r\n      this._bufferGraphicsLayer.add(polygonGraphic);\r\n      void this._selectFeatures([this._bufferGeometry]);\r\n      void this.mapView.goTo(polygonGraphic.geometry.extent);\r\n    } else {\r\n      if (this._bufferGraphicsLayer) {\r\n        this._bufferGraphicsLayer.removeAll();\r\n      }\r\n      void this._geomQuery(this.geometries);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetch a single geometry for each potential geometry type\r\n   *\r\n   * @param geometries All current selection geometries\r\n   *\r\n   * @protected\r\n   */\r\n  protected _geomQuery(\r\n    geometries: __esri.Geometry[]\r\n  ): Promise<void> {\r\n    const queryGeoms = getQueryGeoms(geometries, this._geometryEngine);\r\n    return this._selectFeatures(queryGeoms);\r\n  }\r\n\r\n  /**\r\n   * Clear all stored values and general state for the component\r\n   *\r\n   * @param clearSearchWidget Optional boolean for clearing the search widget (default is true)\r\n   * @param clearLabel Optional boolean for clearing the search label (default is true)\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _clearResults(\r\n    clearSearchWidget = true,\r\n    clearLabel = true\r\n  ): Promise<void> {\r\n    this._selectedIds = [];\r\n\r\n    if (clearLabel) {\r\n      this._selectionLabel = \"\";\r\n    }\r\n\r\n    if (this._bufferGraphicsLayer) {\r\n      this._bufferGraphicsLayer.removeAll();\r\n    }\r\n\r\n    if (clearSearchWidget && this._searchWidget) {\r\n      this._searchWidget.clear();\r\n    }\r\n\r\n    state.highlightHandle?.remove();\r\n\r\n    // for sketch\r\n    // checking for clear as it would throw off tests\r\n    if (this._drawTools?.clear) {\r\n      void this._drawTools.clear();\r\n    }\r\n    this.selectionSetChange.emit(this._selectedIds.length);\r\n  }\r\n\r\n  /**\r\n   * Fetch a single geometry for the current geometry type\r\n   *\r\n   * @param type worflow type\r\n   * @param graphics graphics to be used for selection\r\n   * @param label selection label\r\n   *\r\n   * @protected\r\n   */\r\n  protected _updateSelection(\r\n    type: EWorkflowType,\r\n    graphics: __esri.Graphic[],\r\n    label: string\r\n  ): void {\r\n    this.geometries = Array.isArray(graphics) ? graphics.map(g => g.geometry) : this.geometries;\r\n    this._workflowType = type;\r\n    this._selectionLabel = label;\r\n  }\r\n\r\n  /**\r\n   * Fetches the component's translations\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _getTranslations(): Promise<void> {\r\n    const translations = await getLocaleComponentStrings(this.el);\r\n    this._translations = translations[0] as typeof MapSelectTools_T9n;\r\n  }\r\n}\r\n"]}
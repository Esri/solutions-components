{"version":3,"file":"solution-template-data.js","sourceRoot":"","sources":["../../../src/components/solution-template-data/solution-template-data.tsx"],"names":[],"mappings":"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","sourcesContent":["/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { Component, Element, Host, h, Prop, State, VNode, Watch } from '@stencil/core';\r\nimport state from \"../../utils/solution-store\";\r\nimport SolutionTemplateData_T9n from '../../assets/t9n/solution-template-data/resources.json';\r\nimport { getLocaleComponentStrings } from '../../utils/locale';\r\n\r\n@Component({\r\n  tag: 'solution-template-data',\r\n  styleUrl: 'solution-template-data.scss',\r\n  shadow: false\r\n})\r\n\r\nexport class SolutionTemplateData {\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Host element access\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  @Element() el: HTMLSolutionTemplateDataElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Contains the public value for this component.\r\n   *\r\n   * When working with a resource item this should contain an IResourceItem\r\n   *\r\n   * When working with a json type item this should contain the data and vars\r\n   */\r\n  //@Prop({ mutable: true, reflect: true }) value: ITemplateData = {};\r\n\r\n  /**\r\n   * This needs to be unique for props vs data of an item\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) instanceid = \"\";\r\n\r\n  /**\r\n   * A template's itemId.\r\n   * This is used to get the correct model from a store in the json-editor\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) itemId = \"\";\r\n\r\n  @Watch(\"itemId\") itemIdWatchHandler(): void {\r\n    this._initializing = true;\r\n    this.value = JSON.stringify(\r\n      this.instanceid === \"data\"\r\n      ? state.getItemInfo(this.itemId).data\r\n      : state.getItemInfo(this.itemId).properties\r\n      , null, 2);\r\n  }\r\n\r\n  /*\r\n   * Contains the organization based variables\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) organizationVariables = \"\";\r\n\r\n  /**\r\n   * Contains the solution based variables\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) solutionVariables = \"\";\r\n\r\n  /**\r\n   * Used to show/hide the variable containers\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) varsOpen = true;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Lifecycle\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  constructor() {\r\n    window.addEventListener(\"solutionEditorContentChanged\",\r\n      (evt) => {\r\n        if (this.itemId) {\r\n          const { id, contents } = (evt as any).detail;\r\n          const [itemId, instanceId] = id.split(\"|\");\r\n          if (itemId == this.itemId && instanceId === this.instanceid) {\r\n            if(!this._initializing && contents.length > 0) {\r\n              const itemEdit = state.getItemInfo(itemId);\r\n              if (instanceId === \"data\") {\r\n                itemEdit.data = JSON.parse(contents);\r\n              } else {\r\n                itemEdit.properties = JSON.parse(contents);\r\n              }\r\n              state.setItemInfo(itemEdit);\r\n            }\r\n            this._initializing = false;\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * StencilJS: Called once just after the component is first connected to the DOM.\r\n   */\r\n  componentWillLoad(): Promise<void> {\r\n    return this._getTranslations();\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   */\r\n  render(): VNode {\r\n    return (\r\n      <Host>\r\n        <div class=\"solution-data-container\">\r\n          <calcite-shell class=\"light var-container\" dir=\"ltr\">\r\n            <calcite-panel class=\"json-editor\">\r\n              <div class=\"solution-data-child-container calcite-match-height\">\r\n                  <json-editor\r\n                    class=\"solution-data-editor-container\"\r\n                    instanceid={this.itemId + \"|\" + this.instanceid}\r\n                    value={this.value}\r\n                  />\r\n              </div>\r\n            </calcite-panel>\r\n\r\n            <calcite-shell-panel height-scale=\"l\" position=\"end\" slot=\"contextual-panel\" width-scale=\"xs\">\r\n              <div class={this.varsOpen ? \"solution-data-child-container\" : \"solution-data-child-container-collapsed\"}>\r\n                <calcite-button\r\n                  appearance=\"transparent\"\r\n                  class=\"collapse-btn\"\r\n                  icon-start={this.varsOpen ? \"chevrons-right\" : \"chevrons-left\"}\r\n                  id=\"collapse-vars\"\r\n                  onClick={() => this._toggleVars()}\r\n                  scale=\"s\"\r\n                  title={this.varsOpen ? this._translations.collapse : this._translations.expand}\r\n                />\r\n                <div class={this.varsOpen ? \"org-vars\" : \"org-vars display-none\"} id=\"orgVars\">\r\n                  <solution-organization-variables\r\n                    value={this.organizationVariables}\r\n                  />\r\n                </div>\r\n                <div class={this.varsOpen ? \"sol-vars\" : \"sol-vars display-none\"} id=\"solVars\">\r\n                  <solution-variables\r\n                    value={this.solutionVariables}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </calcite-shell-panel>\r\n          </calcite-shell>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Contains the translations for this component.\r\n   * All UI strings should be defined here.\r\n   */\r\n  @State() protected _translations: typeof SolutionTemplateData_T9n;\r\n\r\n  @State() protected value = \"\";\r\n\r\n  protected _initializing = false;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Event Listeners\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Events\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Public Methods (async)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Private Methods\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Toggle varsOpen prop to show/hide variable containers\r\n   */\r\n  _toggleVars(): void {\r\n    this.varsOpen = !this.varsOpen;\r\n  }\r\n\r\n  /**\r\n   * Fetches the component's translations\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _getTranslations(): Promise<void> {\r\n    const translations = await getLocaleComponentStrings(this.el);\r\n    this._translations = translations[0] as typeof SolutionTemplateData_T9n;\r\n  }\r\n}\r\n"]}
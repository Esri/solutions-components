{"version":3,"file":"json-editor.js","sourceRoot":"","sources":["../../../src/components/json-editor/json-editor.tsx"],"names":[],"mappings":"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","sourcesContent":["/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Encapsulates the Monaco Editor (https://microsoft.github.io/monaco-editor/) into a\r\n * web component for JSON content. Note that the app's HTML must include the editor because\r\n * it lives in the global space.\r\n *\r\n * Attributes:\r\n * `hasErrors`: Flag indicating if the JSON currently contained in the editor has errors\r\n * `instanceid`: id of component (required if there are multiple instances of the component)\r\n * `value`: Initial content of editor\r\n *\r\n * Methods:\r\n * `getEditorContents`: Gets the contents of the editor.\r\n * `replaceCurrentSelection`: Replaces the current selection with the supplied text, inserting if nothing is selected.\r\n * `reset`: Resets the contents of the editor with the current `value`.\r\n *\r\n * @example\r\n *   <script src=\"./libs/require.js\"></script>\r\n *   <script src=\"./monacoConfig.js\"></script>\r\n *   <script>\r\n *     require.config({\r\n *       \"paths\": {\r\n *         \"vs\": \"./libs/monaco-editor\"\r\n *       }\r\n *     });\r\n *     require([\"vs/editor/editor.main\"], function () {\r\n *     });\r\n *   </script>\r\n *\r\n * @example\r\n *   <json-editor\r\n *     instanceid=\"a1f271c0de554604beed2adc1f244be1\"\r\n *     value=\"{\\\"id\\\": \\\"12345\\\"}\"\r\n *   ></json-editor>\r\n*/\r\n\r\nimport { Component, Element, Host, h, Method, Prop, VNode } from '@stencil/core';\r\nimport JsonEditor_T9n from '../../assets/t9n/json-editor/resources.json';\r\nimport { getLocaleComponentStrings } from '../../utils/locale';\r\n\r\n@Component({\r\n  tag: 'json-editor',\r\n  styleUrl: 'json-editor.scss',\r\n  shadow: false,\r\n  assetsDirs: ['assets']\r\n})\r\nexport class JsonEditor {\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Host element access\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  @Element() el: HTMLJsonEditorElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Contains a public value to indicate if the model has any changes.\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) hasChanges: boolean = false;\r\n\r\n  /**\r\n   * Contains a public value to indicate if the model has any errors\r\n   * that would prevent saving it.\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) hasErrors: boolean = false;\r\n\r\n  /**\r\n   * Contains a unique identifier for when we have multiple instances of the editor.\r\n   * For example when we want to show an item's data as well as an item's properties.\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) instanceid: any = \"\";\r\n\r\n  /**\r\n   * Contains the public value for this component; it is not changed by the editor.\r\n   * When changed, the change overwrites the contents of the editor.\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) value: any = \"\";\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Lifecycle\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * StencilJS: Called once just after the component is fully loaded and the first render() occurs.\r\n   */\r\n  componentDidLoad(): void {\r\n    const editorContainer = document.getElementById(`${this.instanceid}-container`);\r\n    if (editorContainer) {\r\n      this._editor = monaco.editor.create(\r\n        editorContainer,\r\n        {\r\n          value: this.value,\r\n          language: \"json\",\r\n          theme: \"vs\",\r\n          minimap: {\r\n            enabled: false\r\n          },\r\n          automaticLayout: true,\r\n          scrollBeyondLastLine: false\r\n        }\r\n      );\r\n\r\n      this._currentModel = this._editor.getModel();\r\n\r\n      this._contentChanged = this._currentModel.onDidChangeContent(this._onEditorChange.bind(this));\r\n\r\n      // Intercept the monaco function call that shows error markers to see if our content has errors\r\n      const setModelMarkers = monaco.editor.setModelMarkers;\r\n      const self = this;\r\n      monaco.editor.setModelMarkers = function(model, owner, markers) {\r\n        // If this call was for our model, it acts like an onEditorChange event\r\n        // but gives us access to the error state as well\r\n        if (model.id === self._currentModel.id) {\r\n\r\n          // Set the error state & dispatch event if state has changed\r\n          self._flagEditorHasErrors(markers.length > 0);\r\n\r\n          // Set the changed state & dispatch event if state has changed, but only if there are no errors\r\n          if (!self.hasErrors) {\r\n            self._flagEditorHasChanges(self._currentModel?.canUndo());\r\n            if (self._currentModel?.canUndo()) {\r\n              self._flagEditorContentChanged();\r\n            }\r\n          }\r\n\r\n          // Show the error flag if there are errors\r\n          const errorFlag = document.getElementById(`${self.instanceid}-errorFlag`);\r\n          errorFlag.style.visibility = self.hasErrors ? \"visible\" : \"hidden\";\r\n        }\r\n\r\n        // Pass on the call to the next editor in a chain of intercepts or, finally, to monaco\r\n        setModelMarkers.call(monaco.editor, model, owner, markers);\r\n      }\r\n\r\n      this._diffEditor = monaco.editor.createDiffEditor(document.getElementById(`${this.instanceid}-diff-container`), {\r\n        automaticLayout: true\r\n      });\r\n      this._setDiffModel();\r\n\r\n      this._loaded = true;\r\n\r\n      this._toggleUndoRedo();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * StencilJS: Called once just after the component is first connected to the DOM.\r\n   *\r\n   * @returns Promise when complete\r\n   */\r\n  async componentWillLoad(): Promise<void> {\r\n    this._initValueObserver();\r\n    await this._getTranslations();\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   */\r\n  render(): VNode {\r\n    return (\r\n      <Host>\r\n        <div id={`${this.instanceid}-editor-container`} class=\"editor-container padding-right\">\r\n          <div class=\"editor-controls\">\r\n            <div class=\"editor-buttons\">\r\n              {/* errors flag */}\r\n              <calcite-icon\r\n                id={`${this.instanceid}-errorFlag`}\r\n                icon=\"exclamation-mark-triangle\"\r\n                title={this._translations.errorFlag}\r\n                scale=\"s\"\r\n                class=\"edit-error-flag\"\r\n              ></calcite-icon>\r\n              {/* undo */}\r\n              <calcite-button\r\n                id={`${this.instanceid}-undo`}\r\n                color=\"blue\"\r\n                appearance=\"solid\"\r\n                title={this._translations.undo}\r\n                onClick={() => this._undo()}\r\n                scale=\"s\"\r\n                class=\"edit-button\"\r\n              >\r\n                <calcite-icon icon=\"undo\" scale=\"s\"></calcite-icon>\r\n              </calcite-button>\r\n              {/* redo */}\r\n              <calcite-button\r\n                id={`${this.instanceid}-redo`}\r\n                color=\"blue\"\r\n                appearance=\"solid\"\r\n                title={this._translations.redo}\r\n                onClick={() => this._redo()}\r\n                scale=\"s\"\r\n                class=\"edit-button\"\r\n              >\r\n                <calcite-icon icon=\"redo\" scale=\"s\"></calcite-icon>\r\n              </calcite-button>\r\n              {/* diff */}\r\n              <calcite-button\r\n                id={`${this.instanceid}-diff`}\r\n                color=\"blue\"\r\n                appearance=\"solid\"\r\n                title={this._translations.diff}\r\n                onClick={() => this._toggleEditor()}\r\n                scale=\"s\"\r\n                class=\"edit-button\"\r\n              >\r\n                <calcite-icon icon=\"compare\" scale=\"s\"></calcite-icon>\r\n              </calcite-button>\r\n              {/* search */}\r\n              <calcite-button\r\n                id={`${this.instanceid}-search`}\r\n                appearance=\"outline\"\r\n                color=\"blue\"\r\n                title={this._translations.search}\r\n                onClick={() => this._search()}\r\n                scale=\"s\"\r\n                class=\"edit-button\"\r\n              >\r\n                <calcite-icon icon=\"search\" scale=\"s\"></calcite-icon>\r\n              </calcite-button>\r\n              {/* cancel */}\r\n              <calcite-button\r\n                id={`${this.instanceid}-reset`}\r\n                color=\"blue\"\r\n                appearance=\"solid\"\r\n                disabled\r\n                title={this._translations.cancelEdits}\r\n                onClick={() => this._reset()}\r\n                scale=\"s\"\r\n                class=\"edit-button\"\r\n              >\r\n                <calcite-icon icon=\"reset\" scale=\"s\"></calcite-icon>\r\n              </calcite-button>\r\n            </div>\r\n          </div>\r\n          <div class=\"edit-parent\">\r\n            <div id={`${this.instanceid}-container`} class=\"json-edit-container\"></div>\r\n            <div id={`${this.instanceid}-diff-container`} class=\"json-edit-container display-none\"></div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  protected _cancelEditsBtnHandler: any;\r\n  protected _contentChanged: any;\r\n  protected _currentModel: any;\r\n  protected _diffEditor: any;\r\n  protected _editor: any;\r\n  protected _loaded: boolean = false;\r\n  protected _searchBtnHandler: any;\r\n  protected _translations: typeof JsonEditor_T9n;\r\n  protected _useDiffEditor: boolean = false;\r\n  protected _valueObserver: MutationObserver;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Event Listeners\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Events\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Public Methods (async)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Gets the contents of the editor.\r\n   *\r\n   * @returns Promise resolving with the current contents of the editor\r\n   */\r\n  @Method()\r\n  async getEditorContents(): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      try {\r\n        const currentValue = this._currentModel.getValue();\r\n        resolve(currentValue);\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Frees the editor events and memory; to be called when the web component is no longer needed.\r\n   *\r\n   * Because the component lifecycle doesn't include an \"onDestroy\" event\r\n   * (@see https://stenciljs.com/docs/component-lifecycle#disconnectedcallback)\r\n   * and TypeScript/JavaScript does automatic garbage collection without a callback\r\n   * hook until ES2021\r\n   * (@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry),\r\n   * this cleanup call needs to be called manually.\r\n   */\r\n  @Method()\r\n  async prepareForDeletion(): Promise<void> {\r\n    this._searchBtnHandler?.removeEventListener(\"click\", this._search);\r\n    this._cancelEditsBtnHandler?.removeEventListener(\"click\", this._reset);\r\n\r\n    this._valueObserver?.disconnect();\r\n\r\n    this._contentChanged?.dispose();\r\n\r\n    this._editor?.dispose();\r\n  }\r\n\r\n  /**\r\n   * Replaces the current selection with the supplied text, inserting if nothing is selected.\r\n   *\r\n   * @param replacement Text to use for replacement or insertion\r\n   * @returns Promise resolving when function is done\r\n   */\r\n  @Method()\r\n  async replaceCurrentSelection(\r\n    replacement: string\r\n  ): Promise<any> {\r\n    const currentSelection = this._editor.getSelection();\r\n    this._editor.executeEdits(\"\", [\r\n     { range: currentSelection, text: replacement }\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * Resets the contents of the editor with the current `value`.\r\n   *\r\n   * @returns Promise resolving when function is done\r\n   */\r\n  @Method()\r\n  async reset(): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      try {\r\n        this._reset();\r\n        resolve({ success: true });\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Private Methods\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Disables a button.\r\n   *\r\n   * @param buttonId Id of button to disable\r\n   *\r\n    * @protected\r\n   */\r\n   protected _disableButton(buttonId: string): void {\r\n    document.getElementById(buttonId)?.setAttribute(\"disabled\", \"\");\r\n  }\r\n\r\n  /**\r\n   * Enables a button.\r\n   *\r\n   * @param buttonId Id of button to enable\r\n   *\r\n   * @protected\r\n   */\r\n  protected _enableButton(buttonId: string): void {\r\n    document.getElementById(buttonId)?.removeAttribute(\"disabled\");\r\n  }\r\n\r\n  /**\r\n   * Dispatches an event that the editor's content has changed.\r\n   *\r\n   * @protected\r\n   */\r\n  protected _flagEditorContentChanged(): void {\r\n    // Event for notifying that the editor contents have changed\r\n    window.dispatchEvent(new CustomEvent(\"solutionEditorContentChanged\", {\r\n      detail: {\r\n        id: this.instanceid,\r\n        contents: this._currentModel.getValue()\r\n      },\r\n      bubbles: true,\r\n      cancelable: false,\r\n      composed: true\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Sets the editor's flag indicating if it has changes and dispatches an event when\r\n   * the flag value changes.\r\n   *\r\n   * @param flagHasChanges Current state of change in the editor; if it doesn't match the value saved in this\r\n   * object, an event is dispatched with the new value and the saved value is updated\r\n   *\r\n   * @protected\r\n   */\r\n  protected _flagEditorHasChanges(flagHasChanges: boolean): void {\r\n    // Event for notifying if the editor has updated the value of its hasChanges property\r\n    if (this.hasChanges !== flagHasChanges) {\r\n      window.dispatchEvent(new CustomEvent(\"solutionEditorHasChanges\", {\r\n        detail: flagHasChanges,\r\n        bubbles: true,\r\n        cancelable: false,\r\n        composed: true\r\n      }));\r\n      this.hasChanges = flagHasChanges;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the editor's flag indicating if it has errors and dispatches an event when\r\n   * the flag value changes.\r\n   *\r\n   * @param flagHasErrors Current state of errors in the editor; if it doesn't match the value saved in this\r\n   * object, an event is dispatched with the new value and the saved value is updated\r\n   *\r\n   * @protected\r\n   */\r\n  protected _flagEditorHasErrors(flagHasErrors: boolean): void {\r\n    // Event for notifying if the editor has updated the value of its hasErrors property\r\n    if (this.hasErrors !== flagHasErrors) {\r\n      window.dispatchEvent(new CustomEvent(\"solutionEditorHasErrors\", {\r\n        detail: flagHasErrors,\r\n        bubbles: true,\r\n        cancelable: false,\r\n        composed: true\r\n      }));\r\n      this.hasErrors = flagHasErrors;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetches the component's translations\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _getTranslations(): Promise<void> {\r\n    const translations = await getLocaleComponentStrings(this.el);\r\n    this._translations = translations[0] as typeof JsonEditor_T9n;\r\n  }\r\n\r\n  /**\r\n   * Initializes the observer that will monitor and respond to changes of the value.\r\n   *\r\n   * @protected\r\n   */\r\n   protected _initValueObserver(): void {\r\n    this._valueObserver = new MutationObserver(ml => {\r\n      ml.forEach(mutation => {\r\n        if (mutation.type === 'attributes' && mutation.attributeName === \"value\") {\r\n          const newValue: string = mutation.target[mutation.attributeName];\r\n          if ((newValue !== mutation.oldValue && this._loaded)) {\r\n            this._currentModel.setValue(this.value);\r\n          }\r\n        }\r\n      });\r\n    });\r\n    this._valueObserver.observe(this.el, { attributes: true, attributeOldValue: true });\r\n  }\r\n\r\n  /**\r\n   * Handles activites appropriate to changes in the editor.\r\n   *\r\n   * @protected\r\n   */\r\n  protected _onEditorChange(): void {\r\n    // Note: we're not flagging that the editor has changes here because this event\r\n    // arrives before the model markers event, which indicates errors. We don't want\r\n    // to notify about changes if there are errors.\r\n    this._toggleUndoRedo();\r\n  }\r\n\r\n  /**\r\n   * Redoes the previous edit operation.\r\n   *\r\n   * @protected\r\n   */\r\n   protected _redo(): void {\r\n    if (this._currentModel?.canRedo()) {\r\n      this._currentModel.redo();\r\n      this._toggleUndoRedo();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets the stored model to the original value.\r\n   *\r\n   * @protected\r\n   */\r\n   protected _reset(): void {\r\n    // Restore the original value\r\n    this._currentModel.setValue(this.value);\r\n\r\n    // update the ui\r\n    this._toggleUndoRedo();\r\n  }\r\n\r\n  /**\r\n   * Handles click on \"Search\" button.\r\n   *\r\n   * @protected\r\n   */\r\n   protected _search(): void {\r\n    this._editor.trigger('toggleFind', 'actions.find');\r\n  }\r\n\r\n  /**\r\n   * Sets the models for the diff editor.\r\n   *\r\n   * @protected\r\n   */\r\n   protected _setDiffModel(): void {\r\n    if (this._diffEditor) {\r\n      this._diffEditor.setModel({\r\n        original: monaco.editor.createModel(this.value, \"json\"),\r\n        modified: this._editor.getModel()\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shows/Hides the appropriate editor: regular or diff.\r\n   *\r\n   * @protected\r\n   */\r\n   protected _toggleEditor(): void {\r\n    this._useDiffEditor = !this._useDiffEditor;\r\n    let diffContainer = document.getElementById(`${this.instanceid}-diff-container`);\r\n    let container = document.getElementById(`${this.instanceid}-container`);\r\n    if (this._useDiffEditor) {\r\n      this._setDiffModel();\r\n      diffContainer.classList.remove(\"display-none\");\r\n      container.classList.add(\"display-none\");\r\n    } else {\r\n      diffContainer.classList.add(\"display-none\");\r\n      container.classList.remove(\"display-none\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the undo and redo buttons.\r\n   *\r\n   * @protected\r\n   */\r\n   protected _toggleUndoRedo(): void {\r\n    if (this._currentModel?.canUndo()) {\r\n      this._enableButton(`${this.instanceid}-undo`);\r\n    } else {\r\n      this._disableButton(`${this.instanceid}-undo`);\r\n    }\r\n\r\n    if (this._currentModel?.canRedo()) {\r\n      this._enableButton(`${this.instanceid}-redo`);\r\n    } else {\r\n      this._disableButton(`${this.instanceid}-redo`);\r\n    }\r\n\r\n    if (this._currentModel?.canUndo() || this._currentModel?.canRedo()) {\r\n      this._enableButton(`${this.instanceid}-reset`);\r\n    } else {\r\n      this._disableButton(`${this.instanceid}-reset`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Undoes the current edit operation.\r\n   *\r\n   * @protected\r\n   */\r\n   protected _undo(): void {\r\n    if (this._currentModel?.canUndo()) {\r\n      this._currentModel.undo();\r\n      this._toggleUndoRedo();\r\n    }\r\n  }\r\n\r\n}\r\n"]}
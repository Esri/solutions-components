{"version":3,"file":"solution-resource-item.js","sourceRoot":"","sources":["../../../src/components/solution-resource-item/solution-resource-item.tsx"],"names":[],"mappings":"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","sourcesContent":["/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { Component, Element, Host, h, Prop, State, VNode, Watch } from '@stencil/core';\r\nimport { EUpdateType, IResourcePath } from '../../utils/interfaces';\r\nimport { EFileType, UserSession } from '@esri/solution-common';\r\nimport state from \"../../utils/solution-store\";\r\nimport SolutionResourceItem_T9n from '../../assets/t9n/solution-resource-item/resources.json';\r\nimport { getLocaleComponentStrings } from '../../utils/locale';\r\n\r\n@Component({\r\n  tag: 'solution-resource-item',\r\n  styleUrl: 'solution-resource-item.scss',\r\n  shadow: true\r\n})\r\nexport class SolutionResourceItem {\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Host element access\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  @Element() el: HTMLSolutionResourceItemElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Credentials for requests\r\n   */\r\n  @Prop({ mutable: true }) authentication: UserSession;\r\n\r\n  /**\r\n   * A template's itemId.\r\n   * This is used to get the correct model from a store in the json-editor\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) itemId = \"\";\r\n\r\n  @Watch(\"itemId\") itemIdWatchHandler(): void {\r\n    const item = state.getItemInfo(this.itemId);\r\n    this.resourceFilePaths = item.resourceFilePaths;\r\n    this.resources = item.resources.map(\r\n      // False linting error\r\n      // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\r\n      (path) => path.substring(path.lastIndexOf(\"/\") + 1)\r\n    );\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Lifecycle\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * StencilJS: Called once just after the component is first connected to the DOM.\r\n   */\r\n  componentWillLoad(): Promise<void> {\r\n    return this._getTranslations();\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   */\r\n  render(): VNode {\r\n    const hasValidResources = this._hasValidResources();\r\n    return (\r\n      <Host>\r\n        <div class=\"resource-item\">\r\n          <div class=\"margin-bottom-1\">\r\n            <calcite-button\r\n              appearance=\"solid\"\r\n              class=\"resource-button\"\r\n              color=\"blue\"\r\n              onClick={() => this._addNewResource()}\r\n            >{this._translations.addResource}\r\n            </calcite-button>\r\n            <calcite-button\r\n              appearance=\"solid\"\r\n              color=\"blue\"\r\n              disabled={!hasValidResources}\r\n              onClick={() => this._downloadAll()}\r\n            >{this._translations.downloadAll}\r\n            </calcite-button>\r\n          </div>\r\n          <div class=\"resources-container\" style={{ display: hasValidResources ? \"inherit\" : \"none\" }}>\r\n            {this._renderResourceList()}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * The templates resourceFilePaths.\r\n   */\r\n  @State() resourceFilePaths: IResourcePath[] = [];\r\n\r\n  /**\r\n   * The templates resources.\r\n   */\r\n  @State() resources: string[] = [];\r\n\r\n  /**\r\n   * Contains the translations for this component.\r\n   * All UI strings should be defined here.\r\n   */\r\n  @State() protected _translations: typeof SolutionResourceItem_T9n;\r\n\r\n  protected _removedResources: any = {};\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Event Listeners\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Events\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Public Methods (async)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Private Methods\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Render resources while avoiding thumbnail resoures that are managed by solution-item\r\n   *\r\n   */\r\n  _renderResourceList(): HTMLCalciteValueListElement {\r\n    return (\r\n      <calcite-value-list multiple>\r\n        {\r\n          this.resourceFilePaths.reduce((prev, cur) => {\r\n            if (cur.type !== EFileType.Thumbnail) {\r\n              prev.push(this._renderResource(cur));\r\n            }\r\n            return prev;\r\n          }, [])\r\n        }\r\n      </calcite-value-list>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Render the resource and supporting actions for download/update/delete/(reset..if deleted)\r\n   *\r\n   * @param resource the filename and url used to interact with the resource\r\n   */\r\n  _renderResource(\r\n    resource: IResourcePath\r\n  ): HTMLCalciteValueListItemElement {\r\n    const resettable = resource.updateType === EUpdateType.Remove;\r\n    const fullname = resource.folder ? resource.folder + \"/\" + resource.filename : resource.filename;\r\n    return (\r\n      <calcite-value-list-item\r\n        class={resettable ? \"disabled\" : \"\"}\r\n        label={fullname}\r\n        nonInteractive={true}\r\n        value={resource.url}\r\n        >\r\n        <calcite-action-group expand-disabled=\"true\" layout=\"horizontal\" slot=\"actions-end\">\r\n          <calcite-action\r\n            disabled={resettable}\r\n            icon=\"download\"\r\n            label={this._translations.download}\r\n            onClick={() => this._download(resource.url, resource.filename)}\r\n            scale=\"m\"\r\n            text={this._translations.download}\r\n            title={this._translations.download}\r\n          />\r\n          <calcite-action\r\n            disabled={resettable}\r\n            icon=\"upload-to\"\r\n            label={this._translations.update}\r\n            onClick={() => this._upload(resource)}\r\n            scale=\"m\"\r\n            text={this._translations.update}\r\n            title={this._translations.update}\r\n          />\r\n          <calcite-action\r\n            disabled={resettable}\r\n            icon=\"trash\"\r\n            label={this._translations.delete}\r\n            onClick={() => this._delete(resource)}\r\n            scale=\"m\"\r\n            text={this._translations.delete}\r\n            title={this._translations.delete}\r\n          />\r\n          {resettable ? <calcite-action\r\n            icon=\"reset\"\r\n            label={this._translations.reset}\r\n            onClick={() => this._reset(resource.filename)}\r\n            scale=\"m\"\r\n            text={this._translations.reset}\r\n            title={this._translations.reset}\r\n          /> : <div class=\"display-none\"/>}\r\n        </calcite-action-group>\r\n      </calcite-value-list-item>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Adds the name to the deleted array so it will be skipped while rendering\r\n   *  but still exist if the user chooses to reset\r\n   *\r\n   * @param resource the resource to be updated\r\n   */\r\n  _delete(resource: IResourcePath): void {\r\n    resource.updateType = EUpdateType.Remove;\r\n    this.resourceFilePaths = [...this.resourceFilePaths];  // to trigger refresh\r\n    this._updateStore();\r\n  }\r\n\r\n  /**\r\n   * Remove the name from the deleted array so it will again be rendered\r\n   *\r\n   * @param name the name to be added to the deleted array\r\n   */\r\n  _reset(\r\n    name: string\r\n  ): void {\r\n    // need to make sure I know if this reset is from the source or a new one\r\n    // Because the item's `resources` array is not updated until (and if) the solution is saved,\r\n    // we can use it for the reset info\r\n    this.resources.some(resourceName => resourceName === name) ?\r\n      // Undo removing an existing resource\r\n      this.resourceFilePaths = this.resourceFilePaths.map(p => {\r\n        if (p.filename === name) {\r\n          p.updateType = EUpdateType.None;\r\n        }\r\n        return p;\r\n      }) :\r\n      // Undo cancelling the adding of a resource\r\n      this.resourceFilePaths = this.resourceFilePaths.map(p => {\r\n        if (p.filename === name) {\r\n          p.updateType = EUpdateType.Add;\r\n        }\r\n        return p;\r\n      });\r\n    this._updateStore();\r\n  }\r\n\r\n  /**\r\n   * Download all of the templates resources\r\n   *\r\n   */\r\n  _downloadAll(): void {\r\n    this.resourceFilePaths.forEach((resource: IResourcePath) => {\r\n      this._download(resource.url, resource.filename);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Download the current resource\r\n   *\r\n   * @param url the resource url\r\n   * @param name the resource name\r\n   */\r\n  _download(\r\n    url: string,\r\n    name: string\r\n  ): void {\r\n    // files that have been added manually do not need to be requested from the item\r\n    if (url.startsWith(\"blob\")) {\r\n      this.downloadFile(url, name);\r\n    } else {\r\n      const _url = `${url}?token=${this.authentication.token}`;\r\n      void this.fetchAndDownload(_url, name);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dynamically creates an anchor and downloads the file\r\n   *\r\n   * @param url the url of the resource\r\n   * @param name the name of the resource\r\n   */\r\n  downloadFile(\r\n    url: string,\r\n    name: string\r\n  ): void {\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.download = name;\r\n    link.target = \"_blank\";\r\n    link.click();\r\n  }\r\n\r\n  /**\r\n   * Check if the template resources have any non-thumbnail resources\r\n   *\r\n   * @returns true if we have data resources and false if only thumbnail\r\n   */\r\n  _hasValidResources() : boolean {\r\n    return this.resourceFilePaths.some(r => r.url.indexOf(\"_info_thumbnail\") < 0);\r\n  }\r\n\r\n  /**\r\n   * Fetches and downloads the resource from the solution\r\n   *\r\n   * @param url the url of the resource\r\n   * @param name the name of the resource\r\n   */\r\n  async fetchAndDownload(url: string, name: string): Promise<void> {\r\n    const image = await fetch(url);\r\n    const b = await image.blob();\r\n    const bURL = URL.createObjectURL(b);\r\n    this.downloadFile(bURL, name);\r\n  }\r\n\r\n  /**\r\n   * Create an input element to support the uploading of the resource and upload the resource\r\n   *\r\n   * @param resource the resource to be updated\r\n   */\r\n  _upload(resource: IResourcePath): void {\r\n    const _input = document.createElement(\"input\");\r\n    _input.classList.add(\"display-none\");\r\n    _input.onchange = this._updateResource.bind(this, resource);\r\n    _input.type = \"file\";\r\n    _input.click();\r\n  }\r\n\r\n  /**\r\n   * Create an input element to support the uploading of a resource and add the new resource\r\n   *\r\n   */\r\n  _addNewResource(): void {\r\n    const _input = document.createElement(\"input\");\r\n    _input.classList.add(\"display-none\");\r\n    _input.onchange = this._add.bind(this);\r\n    _input.type = \"file\";\r\n    _input.click();\r\n  }\r\n\r\n  /**\r\n   * Replace the resource file path when update action is used\r\n   *\r\n   * @param resourcePath the resource to be updated\r\n   * @param event the input event that contains the file\r\n   */\r\n  _updateResource(\r\n    resourcePath: IResourcePath,\r\n    event: any\r\n  ): void {\r\n    const files = event.target.files;\r\n    if (files && files[0]) {\r\n\r\n      resourcePath.blob = files[0];\r\n      resourcePath.updateType = EUpdateType.Update;\r\n\r\n      this._updateStore();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add the new resource to the resource file paths\r\n   *\r\n   * @param event the inputs event that contains the new file\r\n   */\r\n  _add(event: any): void {\r\n    const files = event.target.files;\r\n    if (files && files[0]) {\r\n      const url = URL.createObjectURL(files[0]);\r\n      const filename = files[0].name;\r\n\r\n      // Add the item if it's not already in the resource file paths list\r\n      if (!this.resourceFilePaths.some(r => r.filename === filename && r.url === url)) {\r\n        this.resourceFilePaths = [\r\n          ...this.resourceFilePaths,\r\n          {\r\n            url,\r\n            type: EFileType.Data,\r\n            folder: undefined,\r\n            filename,\r\n            blob: files[0],\r\n            updateType: EUpdateType.Add\r\n          }\r\n        ];\r\n        this._updateStore();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add or remove the value from the store\r\n   */\r\n  protected _updateStore(\r\n  ): void {\r\n    const item = state.getItemInfo(this.itemId);\r\n    item.resourceFilePaths = this.resourceFilePaths;\r\n    state.setItemInfo(item);\r\n  }\r\n\r\n  /**\r\n   * Fetches the component's translations\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _getTranslations(): Promise<void> {\r\n    const translations = await getLocaleComponentStrings(this.el);\r\n    this._translations = translations[0] as typeof SolutionResourceItem_T9n;\r\n  }\r\n}\r\n"]}
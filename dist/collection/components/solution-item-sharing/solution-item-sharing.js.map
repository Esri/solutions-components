{"version":3,"file":"solution-item-sharing.js","sourceRoot":"","sources":["../../../src/components/solution-item-sharing/solution-item-sharing.tsx"],"names":[],"mappings":"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","sourcesContent":["/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { Component, Element, h, Host, Method, Prop, State, VNode, Watch } from '@stencil/core';\r\nimport state from \"../../utils/solution-store\";\r\nimport { IItemShare, IItemTemplateEdit } from '../../utils/interfaces';\r\nimport SolutionItemSharing_T9n from '../../assets/t9n/solution-item-sharing/resources.json';\r\nimport { getLocaleComponentStrings } from '../../utils/locale';\r\n\r\n@Component({\r\n  tag: 'solution-item-sharing',\r\n  styleUrl: 'solution-item-sharing.scss',\r\n  shadow: true,\r\n})\r\nexport class SolutionItemSharing {\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Host element access\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  @Element() el: HTMLSolutionItemSharingElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * A template's groupId.\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) groupId = \"\";\r\n\r\n  @Watch(\"groupId\") itemIdWatchHandler(): void {\r\n    const itemEdit = state.getItemInfo(this.groupId);\r\n    this.sharing = itemEdit.groupDetails;\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Lifecycle\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * StencilJS: Called once just after the component is first connected to the DOM.\r\n   */\r\n  async componentWillLoad(): Promise<void> {\r\n    return this._getTranslations();\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   */\r\n  render(): VNode {\r\n    return (\r\n      <Host>\r\n        <div class=\"container-border\">\r\n          <calcite-label>{this._translations.groupInfo}</calcite-label>\r\n          {this._renderItems(this.sharing)}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Contains the translations for this component.\r\n   * All UI strings should be defined here.\r\n   */\r\n  @State() protected _translations: typeof SolutionItemSharing_T9n;\r\n\r\n  /**\r\n   * Contains the public sharing for this component.\r\n   */\r\n  @State() sharing: IItemShare[] = [];\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Event Listeners\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Events\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Public Methods (async)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  @Method()\r\n  async getShareInfo(): Promise<any> {\r\n    return this.sharing;\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Private Methods\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Render share options based on the list of share details\r\n   *\r\n   * @param objs list of IItemShare objects that are used to expose and store share info for the solutions items\r\n   */\r\n  _renderItems(\r\n    objs: IItemShare[]\r\n  ): VNode[] {\r\n    return objs && objs.length > 0\r\n      ? objs.map(item => {\r\n        return (\r\n          <calcite-label layout=\"inline\">\r\n            <calcite-switch\r\n              checked={item.shareItem}\r\n              id={item.id}\r\n              name=\"setting\"\r\n              onCalciteSwitchChange={(event) => this._updateItem(event)}\r\n              scale=\"m\"\r\n              value=\"enabled\"\r\n            />\r\n            <solution-item-icon type={item.type} typeKeywords={item.typeKeywords} />\r\n            <span class=\"icon-text\" title={item.title}>{item.title}</span>\r\n          </calcite-label>\r\n        );\r\n      })\r\n      : null;\r\n  }\r\n\r\n  /**\r\n   * Update the items share prop based on the switch state\r\n   *\r\n   * @param event onCalciteSwitchChange event\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n  _updateItem(event): void {\r\n    const id: string = event.target.id;\r\n    this.sharing = this.sharing.map((itemShare: IItemShare) => {\r\n      if (itemShare.id === id) {\r\n        // update the item\r\n        itemShare.shareItem = event.detail.switched;\r\n\r\n        // update the item in the store\r\n        const itemEdit: IItemTemplateEdit = state.getItemInfo(id);\r\n\r\n        if (itemShare.shareItem) {\r\n          // Add the group to the item if it's not already there\r\n          if (!itemEdit.groups) {\r\n            itemEdit.groups = [this.groupId];\r\n          } else if (itemEdit.groups.indexOf(this.groupId) < 0) {\r\n            itemEdit.groups.push(this.groupId);\r\n          }\r\n        } else {\r\n          // Remove the group from the item if it's there\r\n          if (itemEdit.groups) {\r\n            const i = itemEdit.groups.indexOf(this.groupId);\r\n            if (i > -1) {\r\n              itemEdit.groups.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        state.setItemInfo(itemEdit);\r\n      }\r\n      return itemShare;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetches the component's translations\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _getTranslations(): Promise<void> {\r\n    const translations = await getLocaleComponentStrings(this.el);\r\n    this._translations = translations[0] as typeof SolutionItemSharing_T9n;\r\n  }\r\n}\r\n"]}
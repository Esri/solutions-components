/*!
 * Copyright 2022 Esri
 * Licensed under the Apache License, Version 2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 */
import{s as e,e as t}from"./p-d4ee8f3d.js";import"./p-c2f00d41.js";import"./p-83166522.js";import"./p-729708a3.js";import"./p-a80b3880.js";import"./p-6fe17794.js";import"./p-1c247f54.js";import"./p-9a9955db.js";import"./p-7ab5ac59.js";import"./p-d6c9a34a.js";import"./p-e1a4994d.js";import"./p-3c449907.js";import"./p-be41429f.js";import"./p-4557d5a8.js";import"./p-00444009.js";import"./p-3069e3b7.js";import"./p-fc884dd6.js";let s;function r(r,o){let p=o.responseType;p?"array-buffer"!==p&&"blob"!==p&&"json"!==p&&"native"!==p&&"native-request-init"!==p&&"text"!==p&&(p="text"):p="json",o.responseType=p;const i=t(o.signal);return delete o.signal,globalThis.invokeStaticMessage("request",{url:r,options:o},{signal:i}).then((async t=>{let a,n,j,c,l;if(t.data)if(t.data instanceof ArrayBuffer){if(!("json"!==p&&"text"!==p&&"blob"!==p||(a=new Blob([t.data]),"json"!==p&&"text"!==p||(s||(s=new FileReaderSync),c=s.readAsText(a),"json"!==p)))){try{n=JSON.parse(c||null)}catch(t){const s={...t,url:r,requestOptions:o};throw new e("request:server",t.message,s)}if(n.error){const t={...n.error,url:r,requestOptions:o};throw new e("request:server",n.error.message,t)}}}else"native"===p&&(t.data.signal=i,j=await fetch(t.data.url,t.data));switch(p){case"blob":l=a;break;case"json":l=n;break;case"native":l=j;break;case"text":l=c;break;default:l=t.data}return{data:l,requestOptions:o,ssl:t.ssl,url:r}}))}export{r as execute}
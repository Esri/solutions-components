/*!
 * Copyright 2022 Esri
 * Licensed under the Apache License, Version 2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 */
import{s as e,e as t}from"./p-db3b28f0.js";import"./p-c2f00d41.js";import"./p-83166522.js";import"./p-729708a3.js";import"./p-a80b3880.js";import"./p-6fe17794.js";import"./p-1c247f54.js";import"./p-9a9955db.js";import"./p-7ab5ac59.js";import"./p-d6c9a34a.js";import"./p-e1a4994d.js";import"./p-cd7606eb.js";import"./p-dbc9a5a8.js";import"./p-4557d5a8.js";import"./p-00444009.js";import"./p-3069e3b7.js";import"./p-fc884dd6.js";let s;function r(r,o){let a=o.responseType;a?"array-buffer"!==a&&"blob"!==a&&"json"!==a&&"native"!==a&&"native-request-init"!==a&&"text"!==a&&(a="text"):a="json",o.responseType=a;const p=t(o.signal);return delete o.signal,globalThis.invokeStaticMessage("request",{url:r,options:o},{signal:p}).then((async t=>{let i,n,c,j,b;if(t.data)if(t.data instanceof ArrayBuffer){if(!("json"!==a&&"text"!==a&&"blob"!==a||(i=new Blob([t.data]),"json"!==a&&"text"!==a||(s||(s=new FileReaderSync),j=s.readAsText(i),"json"!==a)))){try{n=JSON.parse(j||null)}catch(t){const s={...t,url:r,requestOptions:o};throw new e("request:server",t.message,s)}if(n.error){const t={...n.error,url:r,requestOptions:o};throw new e("request:server",n.error.message,t)}}}else"native"===a&&(t.data.signal=p,c=await fetch(t.data.url,t.data));switch(a){case"blob":b=i;break;case"json":b=n;break;case"native":b=c;break;case"text":b=j;break;default:b=t.data}return{data:b,requestOptions:o,ssl:t.ssl,url:r}}))}export{r as execute}
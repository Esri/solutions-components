{"file":"calcite-fab.entry.esm.js","mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACO,MAAM,GAAG,GAAG;AACnB,EAAE,MAAM,EAAE,QAAQ;AAClB,CAAC,CAAC;AACK,MAAM,KAAK,GAAG;AACrB,EAAE,IAAI,EAAE,MAAM;AACd,CAAC;;ACVD,MAAM,MAAM,GAAG,+9EAA+9E;;MCSj+E,GAAG;EACd;;;;;;;;;;IASE,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;;;;IAI5B,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;;;;IAIvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;;;;;IAMtB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;;;;IAIvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;;;IAIrB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;;;;IAIjB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;GAC1B;;;;;;EAMD,kBAAkB;IAChB,qBAAqB,CAAC,IAAI,CAAC,CAAC;GAC7B;;;;;;;EAOD,MAAM,QAAQ;IACZ,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;GAC7B;;;;;;EAMD,MAAM;IACJ,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;IAC7F,MAAM,KAAK,GAAG,CAAC,WAAW,GAAG,KAAK,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC;IAC1D,QAAQ,CAAC,CAAC,gBAAgB,EAAE,EAAE,UAAU,EAAE,UAAU,KAAK,OAAO,GAAG,OAAO,GAAG,SAAS,EAAE,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ;QACxM,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;OAC1B,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE;GACtH;;;;;;;","names":[],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/fab/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/fab/fab.css?tag=calcite-fab&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/fab/fab.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nexport const CSS = {\n  button: \"button\"\n};\nexport const ICONS = {\n  plus: \"plus\"\n};\n","/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([disabled]) {\n  pointer-events: none;\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-ui-opacity-disabled);\n}\n\n:host {\n  display: flex;\n  background-color: transparent;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\ncalcite-button {\n  --tw-shadow: 0 6px 20px -4px rgba(0, 0, 0, 0.1), 0 4px 12px -2px rgba(0, 0, 0, 0.08);\n  --tw-shadow-colored: 0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\ncalcite-button:hover {\n  --tw-shadow: 0 12px 32px -2px rgba(0, 0, 0, 0.1), 0 4px 20px 0 rgba(0, 0, 0, 0.08);\n  --tw-shadow-colored: 0 12px 32px -2px var(--tw-shadow-color), 0 4px 20px 0 var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\ncalcite-button:active {\n  --tw-shadow: 0 2px 12px -4px rgba(0, 0, 0, 0.2), 0 2px 4px -2px rgba(0, 0, 0, 0.16);\n  --tw-shadow-colored: 0 2px 12px -4px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nimport { h } from \"@stencil/core\";\nimport { CSS, ICONS } from \"./resources\";\nimport { focusElement } from \"../../utils/dom\";\nimport { updateHostInteraction } from \"../../utils/interactive\";\nexport class Fab {\n  constructor() {\n    // --------------------------------------------------------------------------\n    //\n    //  Properties\n    //\n    // --------------------------------------------------------------------------\n    /**\n     * Used to set the button's appearance. Default is outline.\n     */\n    this.appearance = \"outline\";\n    /**\n     * Used to set the button's color. Default is light.\n     */\n    this.color = \"neutral\";\n    /**\n     * When true, disabled prevents interaction. This state shows items with lower opacity/grayed.\n     */\n    this.disabled = false;\n    /**\n     * Specifies an icon to display.\n     *\n     * @default \"plus\"\n     */\n    this.icon = ICONS.plus;\n    /**\n     * When true, content is waiting to be loaded. This state shows a busy indicator.\n     */\n    this.loading = false;\n    /**\n     * Specifies the size of the fab.\n     */\n    this.scale = \"m\";\n    /**\n     * Indicates whether the text is displayed.\n     */\n    this.textEnabled = false;\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  componentDidRender() {\n    updateHostInteraction(this);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n  /** Sets focus on the component. */\n  async setFocus() {\n    focusElement(this.buttonEl);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n  render() {\n    const { appearance, color, disabled, loading, scale, textEnabled, icon, label, text } = this;\n    const title = !textEnabled ? label || text || null : null;\n    return (h(\"calcite-button\", { appearance: appearance === \"solid\" ? \"solid\" : \"outline\", class: CSS.button, color: color, disabled: disabled, iconStart: icon, label: label, loading: loading, ref: (buttonEl) => {\n        this.buttonEl = buttonEl;\n      }, round: true, scale: scale, title: title, type: \"button\", width: \"auto\" }, this.textEnabled ? this.text : null));\n  }\n  static get is() { return \"calcite-fab\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"fab.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"fab.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"appearance\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Extract<\\\"solid\\\" | \\\"outline\\\", Appearance>\",\n          \"resolved\": \"\\\"outline\\\" | \\\"solid\\\"\",\n          \"references\": {\n            \"Extract\": {\n              \"location\": \"global\"\n            },\n            \"Appearance\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Used to set the button's appearance. Default is outline.\"\n        },\n        \"attribute\": \"appearance\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"outline\\\"\"\n      },\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"ButtonColor\",\n          \"resolved\": \"\\\"blue\\\" | \\\"inverse\\\" | \\\"neutral\\\" | \\\"red\\\"\",\n          \"references\": {\n            \"ButtonColor\": {\n              \"location\": \"import\",\n              \"path\": \"../button/interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Used to set the button's color. Default is light.\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"neutral\\\"\"\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When true, disabled prevents interaction. This state shows items with lower opacity/grayed.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"icon\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"plus\\\"\"\n            }],\n          \"text\": \"Specifies an icon to display.\"\n        },\n        \"attribute\": \"icon\",\n        \"reflect\": true,\n        \"defaultValue\": \"ICONS.plus\"\n      },\n      \"label\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Label of the FAB, exposed on hover when textEnabled is false. If no label is provided, the label inherits what's provided for the `text` prop.\"\n        },\n        \"attribute\": \"label\",\n        \"reflect\": false\n      },\n      \"loading\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When true, content is waiting to be loaded. This state shows a busy indicator.\"\n        },\n        \"attribute\": \"loading\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"scale\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Scale\",\n          \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n          \"references\": {\n            \"Scale\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the size of the fab.\"\n        },\n        \"attribute\": \"scale\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"m\\\"\"\n      },\n      \"text\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Text that accompanies the FAB icon.\"\n        },\n        \"attribute\": \"text\",\n        \"reflect\": false\n      },\n      \"textEnabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Indicates whether the text is displayed.\"\n        },\n        \"attribute\": \"text-enabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get methods() {\n    return {\n      \"setFocus\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Sets focus on the component.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n}\n"],"version":3}
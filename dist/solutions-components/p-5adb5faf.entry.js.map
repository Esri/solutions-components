{"file":"calcite-color-picker.entry.esm.js","mappings":"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","names":["color","Color"],"sources":["./node_modules/lodash-es/throttle.js","./node_modules/@esri/calcite-components/dist/collection/components/color-picker/color-picker.css?tag=calcite-color-picker&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/color-picker/color-picker.js"],"sourcesContent":["import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n","/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([disabled]) {\n  pointer-events: none;\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-ui-opacity-disabled);\n}\n\n:host {\n  display: inline-block;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1rem;\n  font-weight: var(--calcite-font-weight-normal);\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n:host([scale=s]) .container {\n  inline-size: 160px;\n}\n:host([scale=s]) .saved-colors {\n  grid-template-columns: repeat(auto-fill, minmax(20px, 1fr));\n}\n:host([scale=s]) .channels {\n  flex-direction: column;\n}\n:host([scale=s]) .channel {\n  inline-size: 100%;\n  margin-block-end: 4px;\n}\n:host([scale=s]) .channel:last-child {\n  margin-block-end: 0;\n}\n\n:host([scale=m]) .container {\n  inline-size: 272px;\n}\n\n:host([scale=l]) .header {\n  padding-block-end: 0px;\n}\n\n:host([scale=l]) {\n  font-size: var(--calcite-font-size--1);\n  line-height: 1rem;\n}\n:host([scale=l]) .container {\n  inline-size: 464px;\n}\n:host([scale=l]) .color-field-and-slider {\n  margin-block-end: -20px;\n}\n:host([scale=l]) .section {\n  padding-block: 0 16px;\n  padding-inline: 16px;\n}\n:host([scale=l]) .section:first-of-type {\n  padding-block-start: 16px;\n}\n:host([scale=l]) .saved-colors {\n  grid-template-columns: repeat(auto-fill, minmax(28px, 1fr));\n  grid-gap: 12px;\n  padding-block-start: 16px;\n}\n:host([scale=l]) .control-section {\n  flex-wrap: nowrap;\n  align-items: baseline;\n}\n:host([scale=l]) .control-section > :nth-child(2) {\n  margin-inline-start: 12px;\n}\n:host([scale=l]) .color-hex-options {\n  display: flex;\n  flex-shrink: 1;\n  flex-direction: column;\n  justify-content: space-around;\n  min-block-size: 98px;\n  inline-size: 160px;\n}\n:host([scale=l]) .color-mode-container {\n  flex-shrink: 3;\n}\n\n:host([appearance=minimal]) .container {\n  border: none;\n}\n\n.container {\n  background-color: var(--calcite-ui-foreground-1);\n  display: inline-block;\n  border: 1px solid var(--calcite-ui-border-1);\n}\n\n.color-field-and-slider-wrap {\n  position: relative;\n}\n\n.scope {\n  pointer-events: none;\n  position: absolute;\n  font-size: var(--calcite-font-size--1);\n  outline-color: transparent;\n  outline-offset: 14px;\n}\n.scope:focus {\n  outline: 2px solid var(--calcite-ui-brand);\n  outline-offset: 16px;\n}\n\n.color-field-and-slider {\n  margin-block-end: -16px;\n  touch-action: none;\n}\n.color-field-and-slider--interactive {\n  cursor: pointer;\n}\n\n.control-section {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n.section {\n  padding-block: 0 12px;\n  padding-inline: 12px;\n}\n.section:first-of-type {\n  padding-block-start: 12px;\n}\n\n.color-hex-options,\n.section--split {\n  flex-grow: 1;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-block-end: 0.25rem;\n  color: var(--calcite-ui-text-1);\n}\n\n.header--hex,\n.color-mode-container {\n  padding-block-start: 12px;\n}\n\n.channels {\n  display: flex;\n  justify-content: space-between;\n}\n\n.channel {\n  inline-size: 31%;\n}\n\n.saved-colors {\n  padding-block-start: 12px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(24px, 1fr));\n  grid-gap: 8px;\n  inline-size: 100%;\n}\n\n.saved-colors-buttons {\n  display: flex;\n}\n\n.saved-color {\n  outline-offset: 0;\n  outline-color: transparent;\n  cursor: pointer;\n}\n.saved-color:focus {\n  outline: 2px solid var(--calcite-ui-brand);\n  outline-offset: 2px;\n}\n.saved-color:hover {\n  transition: outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;\n  outline: 2px solid var(--calcite-ui-border-2);\n  outline-offset: 2px;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nimport { h } from \"@stencil/core\";\nimport Color from \"color\";\nimport { CSS, DEFAULT_COLOR, DEFAULT_STORAGE_KEY_PREFIX, DIMENSIONS, HSV_LIMITS, RGB_LIMITS, TEXT } from \"./resources\";\nimport { focusElement, getElementDir, isPrimaryPointerButton } from \"../../utils/dom\";\nimport { colorEqual, CSSColorMode, normalizeHex, parseMode } from \"./utils\";\nimport { throttle } from \"lodash-es\";\nimport { clamp } from \"../../utils/math\";\nimport { updateHostInteraction } from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nconst throttleFor60FpsInMs = 16;\nconst defaultValue = normalizeHex(DEFAULT_COLOR.hex());\nconst defaultFormat = \"auto\";\nexport class ColorPicker {\n  constructor() {\n    //--------------------------------------------------------------------------\n    //\n    //  Public properties\n    //\n    //--------------------------------------------------------------------------\n    /**\n     * When `false`, an empty color (`null`) will be allowed as a `value`. Otherwise, a color value is enforced on the component.\n     *\n     * When `true`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`. When `false`, an empty color (`null`) will be allowed as a `value`.\n     */\n    this.allowEmpty = false;\n    /**\n     * Specifies the appearance style of the component -\n     *\n     * `\"solid\"` (containing border) or `\"minimal\"` (no containing border).\n     */\n    this.appearance = \"solid\";\n    /**\n     * Internal prop for advanced use-cases.\n     *\n     * @internal\n     */\n    this.color = DEFAULT_COLOR;\n    /**\n     * When `true`, interaction is prevented and the component is displayed with lower opacity.\n     */\n    this.disabled = false;\n    /**\n     * The format of `value`.\n     *\n     * When `\"auto\"`, the format will be inferred from `value` when set.\n     *\n     * @default \"auto\"\n     */\n    this.format = defaultFormat;\n    /** When `true`, hides the Hex input. */\n    this.hideHex = false;\n    /** When `true`, hides the RGB/HSV channel inputs. */\n    this.hideChannels = false;\n    /** When `true`, hides the saved colors section. */\n    this.hideSaved = false;\n    /**\n     * Accessible name for the RGB section's blue channel.\n     *\n     * @default \"B\"\n     */\n    this.intlB = TEXT.b;\n    /**\n     * Accessible name for the RGB section's blue channel description.\n     *\n     * @default \"Blue\"\n     */\n    this.intlBlue = TEXT.blue;\n    /**\n     * Accessible name for the delete color button.\n     *\n     * @default \"Delete color\"\n     */\n    this.intlDeleteColor = TEXT.deleteColor;\n    /**\n     * Accessible name for the RGB section's green channel.\n     *\n     * @default \"G\"\n     */\n    this.intlG = TEXT.g;\n    /**\n     * Accessible name for the RGB section's green channel description.\n     *\n     * @default \"Green\"\n     */\n    this.intlGreen = TEXT.green;\n    /**\n     * Accessible name for the HSV section's hue channel.\n     *\n     * @default \"H\"\n     */\n    this.intlH = TEXT.h;\n    /**\n     * Accessible name for the HSV mode.\n     *\n     * @default \"HSV\"\n     */\n    this.intlHsv = TEXT.hsv;\n    /**\n     * Accessible name for the Hex input.\n     *\n     * @default \"Hex\"\n     */\n    this.intlHex = TEXT.hex;\n    /**\n     * Accessible name for the HSV section's hue channel description.\n     *\n     * @default \"Hue\"\n     */\n    this.intlHue = TEXT.hue;\n    /**\n     * Accessible name for the Hex input when there is no color selected.\n     *\n     * @default \"No color\"\n     */\n    this.intlNoColor = TEXT.noColor;\n    /**\n     * Accessible name for the RGB section's red channel.\n     *\n     * @default \"R\"\n     */\n    this.intlR = TEXT.r;\n    /**\n     * Accessible name for the RGB section's red channel description.\n     *\n     * @default \"Red\"\n     */\n    this.intlRed = TEXT.red;\n    /**\n     * Accessible name for the RGB mode.\n     *\n     * @default \"RGB\"\n     */\n    this.intlRgb = TEXT.rgb;\n    /**\n     * Accessible name for the HSV section's saturation channel.\n     *\n     * @default \"S\"\n     */\n    this.intlS = TEXT.s;\n    /**\n     * Accessible name for the HSV section's saturation channel description.\n     *\n     * @default \"Saturation\"\n     */\n    this.intlSaturation = TEXT.saturation;\n    /**\n     * Accessible name for the save color button.\n     *\n     * @default \"Save color\"\n     */\n    this.intlSaveColor = TEXT.saveColor;\n    /**\n     * Accessible name for the saved colors section.\n     *\n     * @default \"Saved\"\n     */\n    this.intlSaved = TEXT.saved;\n    /**\n     * Accessible name for the HSV section's value channel.\n     *\n     * @default \"V\"\n     */\n    this.intlV = TEXT.v;\n    /**\n     * Accessible name for the HSV section's value channel description.\n     *\n     * @default \"Value\"\n     */\n    this.intlValue = TEXT.value;\n    /** Specifies the size of the component. */\n    this.scale = \"m\";\n    /**\n     * The component's value, where the value can be a CSS color string, or a RGB, HSL or HSV object.\n     *\n     * The type will be preserved as the color is updated.\n     *\n     * @default \"#007ac2\"\n     * @see [CSS Color](https://developer.mozilla.org/en-US/docs/Web/CSS/color)\n     * @see [ColorValue](https://github.com/Esri/calcite-components/blob/master/src/components/color-picker/interfaces.ts#L10)\n     */\n    this.value = defaultValue;\n    this.colorFieldAndSliderHovered = false;\n    this.hueThumbState = \"idle\";\n    this.internalColorUpdateContext = null;\n    this.mode = CSSColorMode.HEX;\n    this.shiftKeyChannelAdjustment = 0;\n    this.sliderThumbState = \"idle\";\n    this.colorFieldAndSliderInteractive = false;\n    this.channelMode = \"rgb\";\n    this.channels = this.toChannels(DEFAULT_COLOR);\n    this.dimensions = DIMENSIONS.m;\n    this.savedColors = [];\n    this.handleTabActivate = (event) => {\n      this.channelMode = event.currentTarget.getAttribute(\"data-color-mode\");\n      this.updateChannelsFromColor(this.color);\n    };\n    this.handleColorFieldScopeKeyDown = (event) => {\n      const { key } = event;\n      const arrowKeyToXYOffset = {\n        ArrowUp: { x: 0, y: -10 },\n        ArrowRight: { x: 10, y: 0 },\n        ArrowDown: { x: 0, y: 10 },\n        ArrowLeft: { x: -10, y: 0 }\n      };\n      if (arrowKeyToXYOffset[key]) {\n        event.preventDefault();\n        this.scopeOrientation = key === \"ArrowDown\" || key === \"ArrowUp\" ? \"vertical\" : \"horizontal\";\n        this.captureColorFieldColor(this.colorFieldScopeLeft + arrowKeyToXYOffset[key].x || 0, this.colorFieldScopeTop + arrowKeyToXYOffset[key].y || 0, false);\n      }\n    };\n    this.handleHueScopeKeyDown = (event) => {\n      const modifier = event.shiftKey ? 10 : 1;\n      const { key } = event;\n      const arrowKeyToXOffset = {\n        ArrowUp: 1,\n        ArrowRight: 1,\n        ArrowDown: -1,\n        ArrowLeft: -1\n      };\n      if (arrowKeyToXOffset[key]) {\n        event.preventDefault();\n        const delta = arrowKeyToXOffset[key] * modifier;\n        const hue = this.baseColorFieldColor.hue();\n        const color = this.baseColorFieldColor.hue(hue + delta);\n        this.internalColorSet(color, false);\n      }\n    };\n    this.handleHexInputChange = (event) => {\n      event.stopPropagation();\n      const { allowEmpty, color } = this;\n      const input = event.target;\n      const hex = input.value;\n      if (allowEmpty && !hex) {\n        this.internalColorSet(null);\n        return;\n      }\n      const normalizedHex = color && normalizeHex(color.hex());\n      if (hex !== normalizedHex) {\n        this.internalColorSet(Color(hex));\n      }\n    };\n    this.handleSavedColorSelect = (event) => {\n      const swatch = event.currentTarget;\n      this.internalColorSet(Color(swatch.color));\n    };\n    this.handleChannelInput = (event) => {\n      const input = event.currentTarget;\n      const internalInput = event.detail.nativeEvent.target;\n      const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n      const limit = this.channelMode === \"rgb\"\n        ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]\n        : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n      let inputValue;\n      if (this.allowEmpty && !input.value) {\n        inputValue = \"\";\n      }\n      else {\n        const value = Number(input.value) + this.shiftKeyChannelAdjustment;\n        const clamped = clamp(value, 0, limit);\n        inputValue = clamped.toString();\n      }\n      input.value = inputValue;\n      internalInput.value = inputValue;\n    };\n    this.handleChannelChange = (event) => {\n      const input = event.currentTarget;\n      const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n      const channels = [...this.channels];\n      const shouldClearChannels = this.allowEmpty && !input.value;\n      if (shouldClearChannels) {\n        this.channels = [null, null, null];\n        this.internalColorSet(null);\n        return;\n      }\n      channels[channelIndex] = Number(input.value);\n      this.updateColorFromChannels(channels);\n    };\n    this.handleSavedColorKeyDown = (event) => {\n      if (isActivationKey(event.key)) {\n        event.preventDefault();\n        this.handleSavedColorSelect(event);\n      }\n    };\n    this.handleColorFieldAndSliderPointerLeave = () => {\n      this.colorFieldAndSliderInteractive = false;\n      this.colorFieldAndSliderHovered = false;\n      if (this.sliderThumbState !== \"drag\" && this.hueThumbState !== \"drag\") {\n        this.hueThumbState = \"idle\";\n        this.sliderThumbState = \"idle\";\n        this.drawColorFieldAndSlider();\n      }\n    };\n    this.handleColorFieldAndSliderPointerDown = (event) => {\n      var _a, _b;\n      if (!isPrimaryPointerButton(event)) {\n        return;\n      }\n      const { offsetX, offsetY } = event;\n      const region = this.getCanvasRegion(offsetY);\n      if (region === \"color-field\") {\n        this.hueThumbState = \"drag\";\n        this.captureColorFieldColor(offsetX, offsetY);\n        (_a = this.colorFieldScopeNode) === null || _a === void 0 ? void 0 : _a.focus();\n      }\n      else if (region === \"slider\") {\n        this.sliderThumbState = \"drag\";\n        this.captureHueSliderColor(offsetX);\n        (_b = this.hueScopeNode) === null || _b === void 0 ? void 0 : _b.focus();\n      }\n      // prevent text selection outside of color field & slider area\n      event.preventDefault();\n      document.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n      document.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n      this.activeColorFieldAndSliderRect =\n        this.fieldAndSliderRenderingContext.canvas.getBoundingClientRect();\n    };\n    this.globalPointerUpHandler = (event) => {\n      if (!isPrimaryPointerButton(event)) {\n        return;\n      }\n      const previouslyDragging = this.sliderThumbState === \"drag\" || this.hueThumbState === \"drag\";\n      this.hueThumbState = \"idle\";\n      this.sliderThumbState = \"idle\";\n      this.activeColorFieldAndSliderRect = null;\n      this.drawColorFieldAndSlider();\n      if (previouslyDragging) {\n        this.calciteColorPickerChange.emit();\n      }\n    };\n    this.globalPointerMoveHandler = (event) => {\n      const { el, dimensions } = this;\n      const sliderThumbDragging = this.sliderThumbState === \"drag\";\n      const hueThumbDragging = this.hueThumbState === \"drag\";\n      if (!el.isConnected || (!sliderThumbDragging && !hueThumbDragging)) {\n        return;\n      }\n      let samplingX;\n      let samplingY;\n      const colorFieldAndSliderRect = this.activeColorFieldAndSliderRect;\n      const { clientX, clientY } = event;\n      if (this.colorFieldAndSliderHovered) {\n        samplingX = clientX - colorFieldAndSliderRect.x;\n        samplingY = clientY - colorFieldAndSliderRect.y;\n      }\n      else {\n        const colorFieldWidth = dimensions.colorField.width;\n        const colorFieldHeight = dimensions.colorField.height;\n        const hueSliderHeight = dimensions.slider.height;\n        if (clientX < colorFieldAndSliderRect.x + colorFieldWidth &&\n          clientX > colorFieldAndSliderRect.x) {\n          samplingX = clientX - colorFieldAndSliderRect.x;\n        }\n        else if (clientX < colorFieldAndSliderRect.x) {\n          samplingX = 0;\n        }\n        else {\n          samplingX = colorFieldWidth - 1;\n        }\n        if (clientY < colorFieldAndSliderRect.y + colorFieldHeight + hueSliderHeight &&\n          clientY > colorFieldAndSliderRect.y) {\n          samplingY = clientY - colorFieldAndSliderRect.y;\n        }\n        else if (clientY < colorFieldAndSliderRect.y) {\n          samplingY = 0;\n        }\n        else {\n          samplingY = colorFieldHeight + hueSliderHeight;\n        }\n      }\n      if (hueThumbDragging) {\n        this.captureColorFieldColor(samplingX, samplingY, false);\n      }\n      else {\n        this.captureHueSliderColor(samplingX);\n      }\n    };\n    this.handleColorFieldAndSliderPointerEnterOrMove = ({ offsetX, offsetY }) => {\n      const { dimensions: { colorField, slider, thumb } } = this;\n      this.colorFieldAndSliderInteractive = offsetY <= colorField.height + slider.height;\n      this.colorFieldAndSliderHovered = true;\n      const region = this.getCanvasRegion(offsetY);\n      if (region === \"color-field\") {\n        const prevHueThumbState = this.hueThumbState;\n        const color = this.baseColorFieldColor.hsv();\n        const centerX = Math.round(color.saturationv() / (HSV_LIMITS.s / colorField.width));\n        const centerY = Math.round(colorField.height - color.value() / (HSV_LIMITS.v / colorField.height));\n        const hoveringThumb = this.containsPoint(offsetX, offsetY, centerX, centerY, thumb.radius);\n        let transitionedBetweenHoverAndIdle = false;\n        if (prevHueThumbState === \"idle\" && hoveringThumb) {\n          this.hueThumbState = \"hover\";\n          transitionedBetweenHoverAndIdle = true;\n        }\n        else if (prevHueThumbState === \"hover\" && !hoveringThumb) {\n          this.hueThumbState = \"idle\";\n          transitionedBetweenHoverAndIdle = true;\n        }\n        if (this.hueThumbState !== \"drag\") {\n          if (transitionedBetweenHoverAndIdle) {\n            // refresh since we won't update color and thus no redraw\n            this.drawColorFieldAndSlider();\n          }\n        }\n      }\n      else if (region === \"slider\") {\n        const sliderThumbColor = this.baseColorFieldColor.hsv().saturationv(100).value(100);\n        const prevSliderThumbState = this.sliderThumbState;\n        const sliderThumbCenterX = Math.round(sliderThumbColor.hue() / (360 / slider.width));\n        const sliderThumbCenterY = Math.round((slider.height + this.getSliderCapSpacing()) / 2) + colorField.height;\n        const hoveringSliderThumb = this.containsPoint(offsetX, offsetY, sliderThumbCenterX, sliderThumbCenterY, thumb.radius);\n        let sliderThumbTransitionedBetweenHoverAndIdle = false;\n        if (prevSliderThumbState === \"idle\" && hoveringSliderThumb) {\n          this.sliderThumbState = \"hover\";\n          sliderThumbTransitionedBetweenHoverAndIdle = true;\n        }\n        else if (prevSliderThumbState === \"hover\" && !hoveringSliderThumb) {\n          this.sliderThumbState = \"idle\";\n          sliderThumbTransitionedBetweenHoverAndIdle = true;\n        }\n        if (this.sliderThumbState !== \"drag\") {\n          if (sliderThumbTransitionedBetweenHoverAndIdle) {\n            // refresh since we won't update color and thus no redraw\n            this.drawColorFieldAndSlider();\n          }\n        }\n      }\n    };\n    this.storeColorFieldScope = (node) => {\n      this.colorFieldScopeNode = node;\n    };\n    this.storeHueScope = (node) => {\n      this.hueScopeNode = node;\n    };\n    this.renderChannelsTabTitle = (channelMode) => {\n      const { channelMode: activeChannelMode, intlRgb, intlHsv } = this;\n      const active = channelMode === activeChannelMode;\n      const label = channelMode === \"rgb\" ? intlRgb : intlHsv;\n      return (h(\"calcite-tab-title\", { active: active, class: CSS.colorMode, \"data-color-mode\": channelMode, key: channelMode, onCalciteTabsActivate: this.handleTabActivate }, label));\n    };\n    this.renderChannelsTab = (channelMode) => {\n      const { channelMode: activeChannelMode, channels, intlB, intlBlue, intlG, intlGreen, intlH, intlHue, intlR, intlRed, intlS, intlSaturation, intlV, intlValue } = this;\n      const active = channelMode === activeChannelMode;\n      const isRgb = channelMode === \"rgb\";\n      const channelLabels = isRgb ? [intlR, intlG, intlB] : [intlH, intlS, intlV];\n      const channelAriaLabels = isRgb\n        ? [intlRed, intlGreen, intlBlue]\n        : [intlHue, intlSaturation, intlValue];\n      const direction = getElementDir(this.el);\n      return (h(\"calcite-tab\", { active: active, class: CSS.control, key: channelMode }, h(\"div\", { class: CSS.channels, dir: \"ltr\" }, channels.map((channel, index) => \n      /* the channel container is ltr, so we apply the host's direction */\n      this.renderChannel(channel, index, channelLabels[index], channelAriaLabels[index], direction)))));\n    };\n    this.renderChannel = (value, index, label, ariaLabel, direction) => (h(\"calcite-input\", { class: CSS.channel, \"data-channel-index\": index, dir: direction, label: ariaLabel, numberButtonType: \"none\", numberingSystem: this.numberingSystem, onCalciteInputChange: this.handleChannelChange, onCalciteInputInput: this.handleChannelInput, onKeyDown: this.handleKeyDown, prefixText: label, scale: this.scale === \"l\" ? \"m\" : \"s\", type: \"number\", value: value === null || value === void 0 ? void 0 : value.toString() }));\n    this.deleteColor = () => {\n      const colorToDelete = this.color.hex();\n      const inStorage = this.savedColors.indexOf(colorToDelete) > -1;\n      if (!inStorage) {\n        return;\n      }\n      const savedColors = this.savedColors.filter((color) => color !== colorToDelete);\n      this.savedColors = savedColors;\n      const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n      if (this.storageId) {\n        localStorage.setItem(storageKey, JSON.stringify(savedColors));\n      }\n    };\n    this.saveColor = () => {\n      const colorToSave = this.color.hex();\n      const alreadySaved = this.savedColors.indexOf(colorToSave) > -1;\n      if (alreadySaved) {\n        return;\n      }\n      const savedColors = [...this.savedColors, colorToSave];\n      this.savedColors = savedColors;\n      const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n      if (this.storageId) {\n        localStorage.setItem(storageKey, JSON.stringify(savedColors));\n      }\n    };\n    this.drawColorFieldAndSlider = throttle(() => {\n      if (!this.fieldAndSliderRenderingContext) {\n        return;\n      }\n      this.drawColorField();\n      this.drawHueSlider();\n    }, throttleFor60FpsInMs);\n    this.captureColorFieldColor = (x, y, skipEqual = true) => {\n      const { dimensions: { colorField: { height, width } } } = this;\n      const saturation = Math.round((HSV_LIMITS.s / width) * x);\n      const value = Math.round((HSV_LIMITS.v / height) * (height - y));\n      this.internalColorSet(this.baseColorFieldColor.hsv().saturationv(saturation).value(value), skipEqual);\n    };\n    this.initColorFieldAndSlider = (canvas) => {\n      this.fieldAndSliderRenderingContext = canvas.getContext(\"2d\");\n      this.updateCanvasSize(canvas);\n    };\n  }\n  handleColorChange(color, oldColor) {\n    this.drawColorFieldAndSlider();\n    this.updateChannelsFromColor(color);\n    this.previousColor = oldColor;\n  }\n  handleFormatChange(format) {\n    this.setMode(format);\n    this.internalColorSet(this.color, false, \"internal\");\n  }\n  handleScaleChange(scale = \"m\") {\n    var _a;\n    this.updateDimensions(scale);\n    this.updateCanvasSize((_a = this.fieldAndSliderRenderingContext) === null || _a === void 0 ? void 0 : _a.canvas);\n  }\n  handleValueChange(value, oldValue) {\n    const { allowEmpty, format } = this;\n    const checkMode = !allowEmpty || value;\n    let modeChanged = false;\n    if (checkMode) {\n      const nextMode = parseMode(value);\n      if (!nextMode || (format !== \"auto\" && nextMode !== format)) {\n        this.showIncompatibleColorWarning(value, format);\n        this.value = oldValue;\n        return;\n      }\n      modeChanged = this.mode !== nextMode;\n      this.setMode(nextMode);\n    }\n    const dragging = this.sliderThumbState === \"drag\" || this.hueThumbState === \"drag\";\n    if (this.internalColorUpdateContext === \"initial\") {\n      return;\n    }\n    if (this.internalColorUpdateContext === \"user-interaction\") {\n      this.calciteColorPickerInput.emit();\n      if (!dragging) {\n        this.calciteColorPickerChange.emit();\n      }\n      return;\n    }\n    const color = allowEmpty && !value ? null : Color(value);\n    const colorChanged = !colorEqual(color, this.color);\n    if (modeChanged || colorChanged) {\n      this.internalColorSet(color, true, \"internal\");\n    }\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Internal State/Props\n  //\n  //--------------------------------------------------------------------------\n  get baseColorFieldColor() {\n    return this.color || this.previousColor || DEFAULT_COLOR;\n  }\n  // using @Listen as a workaround for VDOM listener not firing\n  handleChannelKeyUpOrDown(event) {\n    this.shiftKeyChannelAdjustment = 0;\n    const { key } = event;\n    if ((key !== \"ArrowUp\" && key !== \"ArrowDown\") ||\n      !event.composedPath().some((node) => { var _a; return (_a = node.classList) === null || _a === void 0 ? void 0 : _a.contains(CSS.channel); })) {\n      return;\n    }\n    const { shiftKey } = event;\n    event.preventDefault();\n    if (!this.color) {\n      this.internalColorSet(this.previousColor);\n      event.stopPropagation();\n      return;\n    }\n    // this gets applied to the input's up/down arrow increment/decrement\n    const complementaryBump = 9;\n    this.shiftKeyChannelAdjustment =\n      key === \"ArrowUp\" && shiftKey\n        ? complementaryBump\n        : key === \"ArrowDown\" && shiftKey\n          ? -complementaryBump\n          : 0;\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n  /** Sets focus on the component. */\n  async setFocus() {\n    return focusElement(this.colorFieldScopeNode);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  componentWillLoad() {\n    const { allowEmpty, color, format, value } = this;\n    const willSetNoColor = allowEmpty && !value;\n    const parsedMode = parseMode(value);\n    const valueIsCompatible = willSetNoColor || (format === \"auto\" && parsedMode) || format === parsedMode;\n    const initialColor = willSetNoColor ? null : valueIsCompatible ? Color(value) : color;\n    if (!valueIsCompatible) {\n      this.showIncompatibleColorWarning(value, format);\n    }\n    this.setMode(format);\n    this.internalColorSet(initialColor, false, \"initial\");\n    this.updateDimensions(this.scale);\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n    if (this.storageId && localStorage.getItem(storageKey)) {\n      this.savedColors = JSON.parse(localStorage.getItem(storageKey));\n    }\n  }\n  disconnectedCallback() {\n    document.removeEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    document.removeEventListener(\"pointerup\", this.globalPointerUpHandler);\n  }\n  componentDidRender() {\n    updateHostInteraction(this);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n  render() {\n    const { allowEmpty, color, intlDeleteColor, hideHex, hideChannels, hideSaved, intlHex, intlSaved, intlSaveColor, savedColors, scale } = this;\n    const selectedColorInHex = color ? color.hex() : null;\n    const hexInputScale = scale === \"l\" ? \"m\" : \"s\";\n    const { colorFieldAndSliderInteractive, colorFieldScopeTop, colorFieldScopeLeft, hueScopeLeft, hueScopeTop, scopeOrientation, dimensions: { colorField: { height: colorFieldHeight, width: colorFieldWidth }, slider: { height: sliderHeight } } } = this;\n    const hueTop = hueScopeTop !== null && hueScopeTop !== void 0 ? hueScopeTop : sliderHeight / 2 + colorFieldHeight;\n    const hueLeft = hueScopeLeft !== null && hueScopeLeft !== void 0 ? hueScopeLeft : (colorFieldWidth * DEFAULT_COLOR.hue()) / HSV_LIMITS.h;\n    const noColor = color === null;\n    const vertical = scopeOrientation === \"vertical\";\n    return (h(\"div\", { class: CSS.container }, h(\"div\", { class: CSS.colorFieldAndSliderWrap }, h(\"canvas\", { class: {\n        [CSS.colorFieldAndSlider]: true,\n        [CSS.colorFieldAndSliderInteractive]: colorFieldAndSliderInteractive\n      }, onPointerDown: this.handleColorFieldAndSliderPointerDown, onPointerEnter: this.handleColorFieldAndSliderPointerEnterOrMove, onPointerLeave: this.handleColorFieldAndSliderPointerLeave, onPointerMove: this.handleColorFieldAndSliderPointerEnterOrMove, ref: this.initColorFieldAndSlider }), h(\"div\", { \"aria-label\": vertical ? this.intlValue : this.intlSaturation, \"aria-valuemax\": vertical ? HSV_LIMITS.v : HSV_LIMITS.s, \"aria-valuemin\": \"0\", \"aria-valuenow\": (vertical ? color === null || color === void 0 ? void 0 : color.saturationv() : color === null || color === void 0 ? void 0 : color.value()) || \"0\", class: { [CSS.scope]: true, [CSS.colorFieldScope]: true }, onKeyDown: this.handleColorFieldScopeKeyDown, ref: this.storeColorFieldScope, role: \"slider\", style: { top: `${colorFieldScopeTop || 0}px`, left: `${colorFieldScopeLeft || 0}px` }, tabindex: \"0\" }), h(\"div\", { \"aria-label\": this.intlHue, \"aria-valuemax\": HSV_LIMITS.h, \"aria-valuemin\": \"0\", \"aria-valuenow\": (color === null || color === void 0 ? void 0 : color.round().hue()) || DEFAULT_COLOR.round().hue(), class: { [CSS.scope]: true, [CSS.hueScope]: true }, onKeyDown: this.handleHueScopeKeyDown, ref: this.storeHueScope, role: \"slider\", style: { top: `${hueTop}px`, left: `${hueLeft}px` }, tabindex: \"0\" })), hideHex && hideChannels ? null : (h(\"div\", { class: {\n        [CSS.controlSection]: true,\n        [CSS.section]: true\n      } }, hideHex ? null : (h(\"div\", { class: CSS.hexOptions }, h(\"span\", { class: {\n        [CSS.header]: true,\n        [CSS.headerHex]: true\n      } }, intlHex), h(\"calcite-color-picker-hex-input\", { allowEmpty: allowEmpty, class: CSS.control, numberingSystem: this.numberingSystem, onCalciteColorPickerHexInputChange: this.handleHexInputChange, scale: hexInputScale, value: selectedColorInHex }))), hideChannels ? null : (h(\"calcite-tabs\", { class: {\n        [CSS.colorModeContainer]: true,\n        [CSS.splitSection]: true\n      }, scale: hexInputScale }, h(\"calcite-tab-nav\", { slot: \"tab-nav\" }, this.renderChannelsTabTitle(\"rgb\"), this.renderChannelsTabTitle(\"hsv\")), this.renderChannelsTab(\"rgb\"), this.renderChannelsTab(\"hsv\"))))), hideSaved ? null : (h(\"div\", { class: { [CSS.savedColorsSection]: true, [CSS.section]: true } }, h(\"div\", { class: CSS.header }, h(\"label\", null, intlSaved), h(\"div\", { class: CSS.savedColorsButtons }, h(\"calcite-button\", { appearance: \"transparent\", class: CSS.deleteColor, color: \"neutral\", disabled: noColor, iconStart: \"minus\", label: intlDeleteColor, onClick: this.deleteColor, scale: hexInputScale, type: \"button\" }), h(\"calcite-button\", { appearance: \"transparent\", class: CSS.saveColor, color: \"neutral\", disabled: noColor, iconStart: \"plus\", label: intlSaveColor, onClick: this.saveColor, scale: hexInputScale, type: \"button\" }))), savedColors.length > 0 ? (h(\"div\", { class: CSS.savedColors }, [\n      ...savedColors.map((color) => (h(\"calcite-color-picker-swatch\", { active: selectedColorInHex === color, class: CSS.savedColor, color: color, key: color, onClick: this.handleSavedColorSelect, onKeyDown: this.handleSavedColorKeyDown, scale: scale, tabIndex: 0 })))\n    ])) : null))));\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  handleKeyDown(event) {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n  showIncompatibleColorWarning(value, format) {\n    console.warn(`ignoring color value (${value}) as it is not compatible with the current format (${format})`);\n  }\n  setMode(format) {\n    this.mode = format === \"auto\" ? this.mode : format;\n  }\n  captureHueSliderColor(x) {\n    const { dimensions: { slider: { width } } } = this;\n    const hue = (360 / width) * x;\n    this.internalColorSet(this.baseColorFieldColor.hue(hue), false);\n  }\n  getCanvasRegion(y) {\n    const { dimensions: { colorField: { height: colorFieldHeight }, slider: { height: sliderHeight } } } = this;\n    if (y <= colorFieldHeight) {\n      return \"color-field\";\n    }\n    if (y <= colorFieldHeight + sliderHeight) {\n      return \"slider\";\n    }\n    return \"none\";\n  }\n  internalColorSet(color, skipEqual = true, context = \"user-interaction\") {\n    if (skipEqual && colorEqual(color, this.color)) {\n      return;\n    }\n    this.internalColorUpdateContext = context;\n    this.color = color;\n    this.value = this.toValue(color);\n    this.internalColorUpdateContext = null;\n  }\n  toValue(color, format = this.mode) {\n    if (!color) {\n      return null;\n    }\n    const hexMode = \"hex\";\n    if (format.includes(hexMode)) {\n      return normalizeHex(color.round()[hexMode]());\n    }\n    if (format.includes(\"-css\")) {\n      return color[format.replace(\"-css\", \"\").replace(\"a\", \"\")]().round().string();\n    }\n    const colorObject = color[format]().round().object();\n    if (format.endsWith(\"a\")) {\n      // normalize alpha prop\n      colorObject.a = colorObject.alpha;\n      delete colorObject.alpha;\n    }\n    return colorObject;\n  }\n  getSliderCapSpacing() {\n    const { dimensions: { slider: { height }, thumb: { radius } } } = this;\n    return radius * 2 - height;\n  }\n  updateDimensions(scale = \"m\") {\n    this.dimensions = DIMENSIONS[scale];\n  }\n  drawColorField() {\n    const context = this.fieldAndSliderRenderingContext;\n    const { dimensions: { colorField: { height, width } } } = this;\n    context.fillStyle = this.baseColorFieldColor.hsv().saturationv(100).value(100).string();\n    context.fillRect(0, 0, width, height);\n    const whiteGradient = context.createLinearGradient(0, 0, width, 0);\n    whiteGradient.addColorStop(0, \"rgba(255,255,255,1)\");\n    whiteGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n    context.fillStyle = whiteGradient;\n    context.fillRect(0, 0, width, height);\n    const blackGradient = context.createLinearGradient(0, 0, 0, height);\n    blackGradient.addColorStop(0, \"rgba(0,0,0,0)\");\n    blackGradient.addColorStop(1, \"rgba(0,0,0,1)\");\n    context.fillStyle = blackGradient;\n    context.fillRect(0, 0, width, height);\n    this.drawActiveColorFieldColor();\n  }\n  setCanvasContextSize(canvas, { height, width }) {\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.height = `${height}px`;\n    canvas.style.width = `${width}px`;\n    const context = canvas.getContext(\"2d\");\n    context.scale(devicePixelRatio, devicePixelRatio);\n  }\n  updateCanvasSize(canvas) {\n    if (!canvas) {\n      return;\n    }\n    this.setCanvasContextSize(canvas, {\n      width: this.dimensions.colorField.width,\n      height: this.dimensions.colorField.height +\n        this.dimensions.slider.height +\n        this.getSliderCapSpacing() * 2\n    });\n    this.drawColorFieldAndSlider();\n  }\n  containsPoint(testPointX, testPointY, boundsX, boundsY, boundsRadius) {\n    return (Math.pow(testPointX - boundsX, 2) + Math.pow(testPointY - boundsY, 2) <=\n      Math.pow(boundsRadius, 2));\n  }\n  drawActiveColorFieldColor() {\n    const { color } = this;\n    if (!color) {\n      return;\n    }\n    const hsvColor = color.hsv();\n    const { dimensions: { colorField: { height, width }, thumb: { radius } } } = this;\n    const x = hsvColor.saturationv() / (HSV_LIMITS.s / width);\n    const y = height - hsvColor.value() / (HSV_LIMITS.v / height);\n    requestAnimationFrame(() => {\n      this.colorFieldScopeLeft = x;\n      this.colorFieldScopeTop = y;\n    });\n    this.drawThumb(this.fieldAndSliderRenderingContext, radius, x, y, hsvColor, this.hueThumbState);\n  }\n  drawThumb(context, radius, x, y, color, state) {\n    const startAngle = 0;\n    const endAngle = 2 * Math.PI;\n    context.beginPath();\n    context.arc(x, y, radius, startAngle, endAngle);\n    context.shadowBlur = state === \"hover\" ? 32 : 16;\n    context.shadowColor = `rgba(0, 0, 0, ${state === \"drag\" ? 0.32 : 0.16})`;\n    context.fillStyle = \"#fff\";\n    context.fill();\n    context.beginPath();\n    context.arc(x, y, radius - 3, startAngle, endAngle);\n    context.shadowBlur = 0;\n    context.shadowColor = \"transparent\";\n    context.fillStyle = color.rgb().string();\n    context.fill();\n  }\n  drawActiveHueSliderColor() {\n    const { color } = this;\n    if (!color) {\n      return;\n    }\n    const hsvColor = color.hsv().saturationv(100).value(100);\n    const { dimensions: { colorField: { height: colorFieldHeight }, slider: { height, width }, thumb: { radius } } } = this;\n    const x = hsvColor.hue() / (360 / width);\n    const y = height / 2 + colorFieldHeight;\n    requestAnimationFrame(() => {\n      this.hueScopeLeft = x;\n      this.hueScopeTop = y;\n    });\n    this.drawThumb(this.fieldAndSliderRenderingContext, radius, x, y, hsvColor, this.sliderThumbState);\n  }\n  drawHueSlider() {\n    const context = this.fieldAndSliderRenderingContext;\n    const { dimensions: { colorField: { height: colorFieldHeight }, slider: { height, width } } } = this;\n    const gradient = context.createLinearGradient(0, 0, width, 0);\n    const hueSliderColorStopKeywords = [\"red\", \"yellow\", \"lime\", \"cyan\", \"blue\", \"magenta\", \"red\"];\n    const offset = 1 / (hueSliderColorStopKeywords.length - 1);\n    let currentOffset = 0;\n    hueSliderColorStopKeywords.forEach((keyword) => {\n      gradient.addColorStop(currentOffset, Color(keyword).string());\n      currentOffset += offset;\n    });\n    context.fillStyle = gradient;\n    context.clearRect(0, colorFieldHeight, width, height + this.getSliderCapSpacing() * 2);\n    context.fillRect(0, colorFieldHeight, width, height);\n    this.drawActiveHueSliderColor();\n  }\n  updateColorFromChannels(channels) {\n    this.internalColorSet(Color(channels, this.channelMode));\n  }\n  updateChannelsFromColor(color) {\n    this.channels = color ? this.toChannels(color) : [null, null, null];\n  }\n  toChannels(color) {\n    const { channelMode } = this;\n    return color[channelMode]()\n      .array()\n      .map((value) => Math.floor(value));\n  }\n  static get is() { return \"calcite-color-picker\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"color-picker.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"color-picker.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"allowEmpty\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `false`, an empty color (`null`) will be allowed as a `value`. Otherwise, a color value is enforced on the component.\\n\\nWhen `true`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`. When `false`, an empty color (`null`) will be allowed as a `value`.\"\n        },\n        \"attribute\": \"allow-empty\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"appearance\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"ColorAppearance\",\n          \"resolved\": \"\\\"default\\\" | \\\"minimal\\\" | \\\"solid\\\"\",\n          \"references\": {\n            \"ColorAppearance\": {\n              \"location\": \"import\",\n              \"path\": \"./interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the appearance style of the component -\\n\\n`\\\"solid\\\"` (containing border) or `\\\"minimal\\\"` (no containing border).\"\n        },\n        \"attribute\": \"appearance\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"solid\\\"\"\n      },\n      \"color\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"InternalColor | null\",\n          \"resolved\": \"Color<ColorParam>\",\n          \"references\": {\n            \"InternalColor\": {\n              \"location\": \"import\",\n              \"path\": \"./interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Internal prop for advanced use-cases.\"\n        },\n        \"defaultValue\": \"DEFAULT_COLOR\"\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"format\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Format\",\n          \"resolved\": \"\\\"auto\\\" | \\\"hex\\\" | \\\"hexa\\\" | \\\"hsl\\\" | \\\"hsl-css\\\" | \\\"hsla\\\" | \\\"hsla-css\\\" | \\\"hsv\\\" | \\\"hsva\\\" | \\\"rgb\\\" | \\\"rgb-css\\\" | \\\"rgba\\\" | \\\"rgba-css\\\"\",\n          \"references\": {\n            \"Format\": {\n              \"location\": \"import\",\n              \"path\": \"./utils\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"auto\\\"\"\n            }],\n          \"text\": \"The format of `value`.\\n\\nWhen `\\\"auto\\\"`, the format will be inferred from `value` when set.\"\n        },\n        \"attribute\": \"format\",\n        \"reflect\": true,\n        \"defaultValue\": \"defaultFormat\"\n      },\n      \"hideHex\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, hides the Hex input.\"\n        },\n        \"attribute\": \"hide-hex\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"hideChannels\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, hides the RGB/HSV channel inputs.\"\n        },\n        \"attribute\": \"hide-channels\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"hideSaved\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, hides the saved colors section.\"\n        },\n        \"attribute\": \"hide-saved\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"intlB\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"B\\\"\"\n            }],\n          \"text\": \"Accessible name for the RGB section's blue channel.\"\n        },\n        \"attribute\": \"intl-b\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.b\"\n      },\n      \"intlBlue\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"Blue\\\"\"\n            }],\n          \"text\": \"Accessible name for the RGB section's blue channel description.\"\n        },\n        \"attribute\": \"intl-blue\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.blue\"\n      },\n      \"intlDeleteColor\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"Delete color\\\"\"\n            }],\n          \"text\": \"Accessible name for the delete color button.\"\n        },\n        \"attribute\": \"intl-delete-color\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.deleteColor\"\n      },\n      \"intlG\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"G\\\"\"\n            }],\n          \"text\": \"Accessible name for the RGB section's green channel.\"\n        },\n        \"attribute\": \"intl-g\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.g\"\n      },\n      \"intlGreen\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"Green\\\"\"\n            }],\n          \"text\": \"Accessible name for the RGB section's green channel description.\"\n        },\n        \"attribute\": \"intl-green\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.green\"\n      },\n      \"intlH\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"H\\\"\"\n            }],\n          \"text\": \"Accessible name for the HSV section's hue channel.\"\n        },\n        \"attribute\": \"intl-h\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.h\"\n      },\n      \"intlHsv\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"HSV\\\"\"\n            }],\n          \"text\": \"Accessible name for the HSV mode.\"\n        },\n        \"attribute\": \"intl-hsv\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.hsv\"\n      },\n      \"intlHex\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"Hex\\\"\"\n            }],\n          \"text\": \"Accessible name for the Hex input.\"\n        },\n        \"attribute\": \"intl-hex\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.hex\"\n      },\n      \"intlHue\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"Hue\\\"\"\n            }],\n          \"text\": \"Accessible name for the HSV section's hue channel description.\"\n        },\n        \"attribute\": \"intl-hue\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.hue\"\n      },\n      \"intlNoColor\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"No color\\\"\"\n            }],\n          \"text\": \"Accessible name for the Hex input when there is no color selected.\"\n        },\n        \"attribute\": \"intl-no-color\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.noColor\"\n      },\n      \"intlR\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"R\\\"\"\n            }],\n          \"text\": \"Accessible name for the RGB section's red channel.\"\n        },\n        \"attribute\": \"intl-r\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.r\"\n      },\n      \"intlRed\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"Red\\\"\"\n            }],\n          \"text\": \"Accessible name for the RGB section's red channel description.\"\n        },\n        \"attribute\": \"intl-red\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.red\"\n      },\n      \"intlRgb\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"RGB\\\"\"\n            }],\n          \"text\": \"Accessible name for the RGB mode.\"\n        },\n        \"attribute\": \"intl-rgb\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.rgb\"\n      },\n      \"intlS\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"S\\\"\"\n            }],\n          \"text\": \"Accessible name for the HSV section's saturation channel.\"\n        },\n        \"attribute\": \"intl-s\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.s\"\n      },\n      \"intlSaturation\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"Saturation\\\"\"\n            }],\n          \"text\": \"Accessible name for the HSV section's saturation channel description.\"\n        },\n        \"attribute\": \"intl-saturation\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.saturation\"\n      },\n      \"intlSaveColor\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"Save color\\\"\"\n            }],\n          \"text\": \"Accessible name for the save color button.\"\n        },\n        \"attribute\": \"intl-save-color\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.saveColor\"\n      },\n      \"intlSaved\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"Saved\\\"\"\n            }],\n          \"text\": \"Accessible name for the saved colors section.\"\n        },\n        \"attribute\": \"intl-saved\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.saved\"\n      },\n      \"intlV\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"V\\\"\"\n            }],\n          \"text\": \"Accessible name for the HSV section's value channel.\"\n        },\n        \"attribute\": \"intl-v\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.v\"\n      },\n      \"intlValue\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"Value\\\"\"\n            }],\n          \"text\": \"Accessible name for the HSV section's value channel description.\"\n        },\n        \"attribute\": \"intl-value\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.value\"\n      },\n      \"scale\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Scale\",\n          \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n          \"references\": {\n            \"Scale\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the size of the component.\"\n        },\n        \"attribute\": \"scale\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"m\\\"\"\n      },\n      \"storageId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the storage ID for colors.\"\n        },\n        \"attribute\": \"storage-id\",\n        \"reflect\": true\n      },\n      \"numberingSystem\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"NumberingSystem\",\n          \"resolved\": \"\\\"arab\\\" | \\\"arabext\\\" | \\\"bali\\\" | \\\"beng\\\" | \\\"deva\\\" | \\\"fullwide\\\" | \\\"gujr\\\" | \\\"guru\\\" | \\\"hanidec\\\" | \\\"khmr\\\" | \\\"knda\\\" | \\\"laoo\\\" | \\\"latn\\\" | \\\"limb\\\" | \\\"mlym\\\" | \\\"mong\\\" | \\\"mymr\\\" | \\\"orya\\\" | \\\"tamldec\\\" | \\\"telu\\\" | \\\"thai\\\" | \\\"tibt\\\"\",\n          \"references\": {\n            \"NumberingSystem\": {\n              \"location\": \"import\",\n              \"path\": \"../../utils/locale\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the Unicode numeral system used by the component for localization.\"\n        },\n        \"attribute\": \"numbering-system\",\n        \"reflect\": true\n      },\n      \"value\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"ColorValue | null\",\n          \"resolved\": \"HSL | HSL & ObjectWithAlpha | HSV | HSV & ObjectWithAlpha | RGB | RGB & ObjectWithAlpha | string\",\n          \"references\": {\n            \"ColorValue\": {\n              \"location\": \"import\",\n              \"path\": \"./interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"#007ac2\\\"\"\n            }, {\n              \"name\": \"see\",\n              \"text\": \"[CSS Color](https://developer.mozilla.org/en-US/docs/Web/CSS/color)\"\n            }, {\n              \"name\": \"see\",\n              \"text\": \"[ColorValue](https://github.com/Esri/calcite-components/blob/master/src/components/color-picker/interfaces.ts#L10)\"\n            }],\n          \"text\": \"The component's value, where the value can be a CSS color string, or a RGB, HSL or HSV object.\\n\\nThe type will be preserved as the color is updated.\"\n        },\n        \"attribute\": \"value\",\n        \"reflect\": false,\n        \"defaultValue\": \"defaultValue\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"colorFieldAndSliderInteractive\": {},\n      \"channelMode\": {},\n      \"channels\": {},\n      \"dimensions\": {},\n      \"savedColors\": {},\n      \"colorFieldScopeTop\": {},\n      \"colorFieldScopeLeft\": {},\n      \"scopeOrientation\": {},\n      \"hueScopeLeft\": {},\n      \"hueScopeTop\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"calciteColorPickerChange\",\n        \"name\": \"calciteColorPickerChange\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the color value has changed.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calciteColorPickerInput\",\n        \"name\": \"calciteColorPickerInput\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires as the color value changes.\\n\\nSimilar to the `calciteColorPickerChange` event with the exception of dragging. When dragging the color field or hue slider thumb, this event fires as the thumb is moved.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"setFocus\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Sets focus on the component.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"color\",\n        \"methodName\": \"handleColorChange\"\n      }, {\n        \"propName\": \"format\",\n        \"methodName\": \"handleFormatChange\"\n      }, {\n        \"propName\": \"scale\",\n        \"methodName\": \"handleScaleChange\"\n      }, {\n        \"propName\": \"value\",\n        \"methodName\": \"handleValueChange\"\n      }];\n  }\n  static get listeners() {\n    return [{\n        \"name\": \"keydown\",\n        \"method\": \"handleChannelKeyUpOrDown\",\n        \"target\": undefined,\n        \"capture\": true,\n        \"passive\": false\n      }, {\n        \"name\": \"keyup\",\n        \"method\": \"handleChannelKeyUpOrDown\",\n        \"target\": undefined,\n        \"capture\": true,\n        \"passive\": false\n      }];\n  }\n}\n"],"version":3}
{"file":"p-9a9955db.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE;AAIxD,EAAE,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;AACrC,EAAE,OAAO,IAAI,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACzC,CAAC;AACD,SAAS,WAAW,CAAC,IAAI,EAAE;AAC3B;AACA,EAAE,MAAM,wBAAwB,SAAS,MAAM,CAAC,gBAAgB,CAAC;AACjE,IAAI,WAAW,CAAC,QAAQ,EAAE;AAC1B,MAAM,KAAK,CAAC,QAAQ,CAAC,CAAC;AACtB,MAAM,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAC9B,MAAM,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC/B,KAAK;AACL,IAAI,OAAO,CAAC,MAAM,EAAE,OAAO,EAAE;AAC7B,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;AACnD,MAAM,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAC5C,KAAK;AACL,IAAI,SAAS,CAAC,MAAM,EAAE;AACtB,MAAM,MAAM,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;AACrG,MAAM,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAC9B,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC;AAC/C,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;AACxB,MAAM,kBAAkB,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;AAChG,KAAK;AACL,GAAG;AACH,EAAE,OAAO,CAAC,YAAY;AACtB,IAAI,QAAQ,IAAI,KAAK,cAAc;AACnC,QAAQ,MAAM,CAAC,oBAAoB;AACnC,QAAQ,IAAI,KAAK,UAAU;AAC3B,UAAU,wBAAwB;AAClC,UAAU,MAAM,CAAC,cAAc,EAAE;AACjC,GAAG,GAAG,CAAC;AACP;;;;","names":[],"sources":["./node_modules/@esri/calcite-components/dist/collection/utils/observers.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nimport { Build } from \"@stencil/core\";\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nexport function createObserver(type, callback, options) {\n  if (!Build.isBrowser) {\n    return undefined;\n  }\n  const Observer = getObserver(type);\n  return new Observer(callback, options);\n}\nfunction getObserver(type) {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver {\n    constructor(callback) {\n      super(callback);\n      this.observedEntry = [];\n      this.callback = callback;\n    }\n    observe(target, options) {\n      this.observedEntry.push({ target, options });\n      return super.observe(target, options);\n    }\n    unobserve(target) {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n  return (function () {\n    return (type === \"intersection\"\n      ? window.IntersectionObserver\n      : type === \"mutation\"\n        ? ExtendedMutationObserver\n        : window.ResizeObserver);\n  })();\n}\n"],"version":3}
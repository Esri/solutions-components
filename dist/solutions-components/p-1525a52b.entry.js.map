{"file":"calcite-checkbox.entry.esm.js","mappings":"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","names":[],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/checkbox/checkbox.css?tag=calcite-checkbox&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/checkbox/checkbox.js"],"sourcesContent":["/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([disabled]) {\n  pointer-events: none;\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-ui-opacity-disabled);\n}\n\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-checkbox-size: Specifies the component's height and width.\n*/\n:host([scale=s]) {\n  --calcite-checkbox-size: 0.75rem;\n}\n\n:host([scale=m]) {\n  --calcite-checkbox-size: var(--calcite-font-size--1);\n}\n\n:host([scale=l]) {\n  --calcite-checkbox-size: 1rem;\n}\n\n:host {\n  position: relative;\n  display: inline-flex;\n  cursor: pointer;\n  -webkit-user-select: none;\n          user-select: none;\n  -webkit-tap-highlight-color: transparent;\n}\n:host .check-svg,\n:host .toggle {\n  inline-size: var(--calcite-checkbox-size);\n  block-size: var(--calcite-checkbox-size);\n}\n:host .check-svg {\n  pointer-events: none;\n  box-sizing: border-box;\n  display: block;\n  overflow: hidden;\n  background-color: var(--calcite-ui-foreground-1);\n  fill: currentColor;\n  stroke: currentColor;\n  stroke-width: 1;\n  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  box-shadow: inset 0 0 0 1px var(--calcite-ui-border-input);\n  color: var(--calcite-ui-background);\n}\n\n:host([checked]) .check-svg, \n:host([indeterminate]) .check-svg {\n  background-color: var(--calcite-ui-brand);\n  box-shadow: inset 0 0 0 1px var(--calcite-ui-brand);\n}\n\n:host([hovered]) .toggle .check-svg,\n:host .toggle:hover .check-svg {\n  box-shadow: inset 0 0 0 2px var(--calcite-ui-brand);\n}\n\n.toggle {\n  outline-color: transparent;\n}\n.toggle:active,  .toggle:focus,  .toggle:focus-visible {\n  outline: 2px solid var(--calcite-ui-brand);\n  outline-offset: 2px;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n::slotted(input[slot=hidden-form-input]) {\n  margin: 0 !important;\n  opacity: 0 !important;\n  outline: none !important;\n  padding: 0 !important;\n  position: absolute !important;\n  inset: 0 !important;\n  transform: none !important;\n  -webkit-appearance: none !important;\n  z-index: -1 !important;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nimport { h, Host } from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { HiddenFormInputSlot } from \"../../utils/form\";\nimport { connectLabel, disconnectLabel, getLabelText } from \"../../utils/label\";\nimport { connectForm, disconnectForm } from \"../../utils/form\";\nimport { updateHostInteraction } from \"../../utils/interactive\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport { isActivationKey } from \"../../utils/key\";\nexport class Checkbox {\n  constructor() {\n    //--------------------------------------------------------------------------\n    //\n    //  Properties\n    //\n    //--------------------------------------------------------------------------\n    /** When `true`, the component is checked. */\n    this.checked = false;\n    /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n    this.disabled = false;\n    /**\n     * The hovered state of the checkbox.\n     *\n     * @internal\n     */\n    this.hovered = false;\n    /**\n     * When `true`, the component is initially indeterminate, which is independent from its `checked` value.\n     *\n     * The state is visual only, and can look different across browsers.\n     *\n     * @mdn [indeterminate](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#indeterminate_state_checkboxes)\n     */\n    this.indeterminate = false;\n    /**\n     * When `true`, the component must have a value in order for the form to submit.\n     *\n     * @internal\n     */\n    this.required = false;\n    /** Specifies the size of the component. */\n    this.scale = \"m\";\n    //--------------------------------------------------------------------------\n    //\n    //  Private Properties\n    //\n    //--------------------------------------------------------------------------\n    this.checkedPath = \"M5.5 12L2 8.689l.637-.636L5.5 10.727l8.022-7.87.637.637z\";\n    this.indeterminatePath = \"M13 8v1H3V8z\";\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    this.getPath = () => this.indeterminate ? this.indeterminatePath : this.checked ? this.checkedPath : \"\";\n    this.toggle = () => {\n      if (!this.disabled) {\n        this.checked = !this.checked;\n        this.setFocus();\n        this.indeterminate = false;\n        this.calciteCheckboxChange.emit();\n      }\n    };\n    this.keyDownHandler = (event) => {\n      if (isActivationKey(event.key)) {\n        this.toggle();\n        event.preventDefault();\n      }\n    };\n    this.clickHandler = () => {\n      this.toggle();\n    };\n    //--------------------------------------------------------------------------\n    //\n    //  Event Listeners\n    //\n    //--------------------------------------------------------------------------\n    this.onToggleBlur = () => {\n      this.calciteInternalCheckboxBlur.emit(false);\n    };\n    this.onToggleFocus = () => {\n      this.calciteInternalCheckboxFocus.emit(true);\n    };\n    this.onLabelClick = () => {\n      this.toggle();\n    };\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n  /** Sets focus on the component. */\n  async setFocus() {\n    var _a;\n    (_a = this.toggleEl) === null || _a === void 0 ? void 0 : _a.focus();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  connectedCallback() {\n    this.guid = this.el.id || `calcite-checkbox-${guid()}`;\n    connectLabel(this);\n    connectForm(this);\n  }\n  disconnectedCallback() {\n    disconnectLabel(this);\n    disconnectForm(this);\n  }\n  componentDidRender() {\n    updateHostInteraction(this);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n  render() {\n    return (h(Host, { onClick: this.clickHandler, onKeyDown: this.keyDownHandler }, h(\"div\", { \"aria-checked\": toAriaBoolean(this.checked), \"aria-label\": getLabelText(this), class: \"toggle\", onBlur: this.onToggleBlur, onFocus: this.onToggleFocus, ref: (toggleEl) => (this.toggleEl = toggleEl), role: \"checkbox\", tabIndex: this.disabled ? undefined : 0 }, h(\"svg\", { \"aria-hidden\": \"true\", class: \"check-svg\", viewBox: \"0 0 16 16\" }, h(\"path\", { d: this.getPath() })), h(\"slot\", null)), h(HiddenFormInputSlot, { component: this })));\n  }\n  static get is() { return \"calcite-checkbox\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"checkbox.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"checkbox.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"checked\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, the component is checked.\"\n        },\n        \"attribute\": \"checked\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"guid\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The `id` attribute of the component. When omitted, a globally unique identifier is used.\"\n        },\n        \"attribute\": \"guid\",\n        \"reflect\": true\n      },\n      \"hovered\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"The hovered state of the checkbox.\"\n        },\n        \"attribute\": \"hovered\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"indeterminate\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"mdn\",\n              \"text\": \"[indeterminate](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#indeterminate_state_checkboxes)\"\n            }],\n          \"text\": \"When `true`, the component is initially indeterminate, which is independent from its `checked` value.\\n\\nThe state is visual only, and can look different across browsers.\"\n        },\n        \"attribute\": \"indeterminate\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"label\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Accessible name for the component.\"\n        },\n        \"attribute\": \"label\",\n        \"reflect\": false\n      },\n      \"name\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"any\",\n          \"resolved\": \"any\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the name of the component on form submission.\"\n        },\n        \"attribute\": \"name\",\n        \"reflect\": true\n      },\n      \"required\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"When `true`, the component must have a value in order for the form to submit.\"\n        },\n        \"attribute\": \"required\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"scale\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Scale\",\n          \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n          \"references\": {\n            \"Scale\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the size of the component.\"\n        },\n        \"attribute\": \"scale\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"m\\\"\"\n      },\n      \"value\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"any\",\n          \"resolved\": \"any\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The component's value.\"\n        },\n        \"attribute\": \"value\",\n        \"reflect\": false\n      }\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"calciteInternalCheckboxBlur\",\n        \"name\": \"calciteInternalCheckboxBlur\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Emits when the component is blurred.\"\n        },\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calciteCheckboxChange\",\n        \"name\": \"calciteCheckboxChange\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emits when the component's `checked` status changes.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calciteInternalCheckboxFocus\",\n        \"name\": \"calciteInternalCheckboxFocus\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Emits when the component is focused.\"\n        },\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"setFocus\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Sets focus on the component.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n}\n"],"version":3}
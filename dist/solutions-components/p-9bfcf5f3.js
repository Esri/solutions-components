/*!
 * Copyright 2022 Esri
 * Licensed under the Apache License, Version 2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 */
import{s as e,e as t}from"./p-e9fcea9e.js";import"./p-c2f00d41.js";import"./p-83166522.js";import"./p-729708a3.js";import"./p-a80b3880.js";import"./p-6fe17794.js";import"./p-1c247f54.js";import"./p-9a9955db.js";import"./p-4557725d.js";import"./p-4aaa2132.js";import"./p-3b010ce1.js";import"./p-3c449907.js";import"./p-be41429f.js";import"./p-4557d5a8.js";import"./p-00444009.js";import"./p-fc884dd6.js";let s;function r(r,o){let i=o.responseType;i?"array-buffer"!==i&&"blob"!==i&&"json"!==i&&"native"!==i&&"native-request-init"!==i&&"text"!==i&&(i="text"):i="json",o.responseType=i;const p=t(o.signal);return delete o.signal,globalThis.invokeStaticMessage("request",{url:r,options:o},{signal:p}).then((async t=>{let a,n,c,j,l;if(t.data)if(t.data instanceof ArrayBuffer){if(!("json"!==i&&"text"!==i&&"blob"!==i||(a=new Blob([t.data]),"json"!==i&&"text"!==i||(s||(s=new FileReaderSync),j=s.readAsText(a),"json"!==i)))){try{n=JSON.parse(j||null)}catch(t){const s={...t,url:r,requestOptions:o};throw new e("request:server",t.message,s)}if(n.error){const t={...n.error,url:r,requestOptions:o};throw new e("request:server",n.error.message,t)}}}else"native"===i&&(t.data.signal=p,c=await fetch(t.data.url,t.data));switch(i){case"blob":l=a;break;case"json":l=n;break;case"native":l=c;break;case"text":l=j;break;default:l=t.data}return{data:l,requestOptions:o,ssl:t.ssl,url:r}}))}export{r as execute}
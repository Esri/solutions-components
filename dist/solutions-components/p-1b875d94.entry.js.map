{"file":"calcite-scrim.entry.esm.js","mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACO,MAAM,GAAG,GAAG;AACnB,EAAE,KAAK,EAAE,OAAO;AAChB,EAAE,OAAO,EAAE,SAAS;AACpB,CAAC,CAAC;AACK,MAAM,IAAI,GAAG;AACpB,EAAE,OAAO,EAAE,SAAS;AACpB,CAAC;;ACXD,MAAM,QAAQ,GAAG,4xDAA4xD;;MCUhyD,KAAK;EAChB;;;;;;;;;;;;IAWE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;;;;IAIhC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;GACtB;;;;;;EAMD,MAAM;IACJ,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;IAC1C,MAAM,UAAU,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;IAClD,MAAM,UAAU,GAAG,OAAO,GAAG,CAAC,CAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,GAAG,IAAI,CAAC;IAC9F,MAAM,WAAW,GAAG,UAAU,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;IAC5F,QAAQ,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,EAAE,UAAU,EAAE,WAAW,CAAC,EAAE;GAClE;;;;;;;","names":[],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/scrim/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/scrim/scrim.css?tag=calcite-scrim&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/scrim/scrim.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nexport const CSS = {\n  scrim: \"scrim\",\n  content: \"content\"\n};\nexport const TEXT = {\n  loading: \"Loading\"\n};\n","/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host {\n  position: absolute;\n  inset: 0px;\n  z-index: 700;\n  display: flex;\n  block-size: 100%;\n  inline-size: 100%;\n  flex-direction: column;\n  align-items: stretch;\n}\n\n@keyframes calcite-scrim-fade-in {\n  0% {\n    --tw-bg-opacity: 0;\n  }\n  100% {\n    --tw-text-opacity: 1;\n  }\n}\n.scrim {\n  position: absolute;\n  inset: 0px;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  animation: calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;\n  background-color: var(--calcite-scrim-background);\n}\n\n.content {\n  padding: 1rem;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nimport { h } from \"@stencil/core\";\nimport { CSS, TEXT } from \"./resources\";\n/**\n * @slot - A slot for adding custom content, primarily loading information.\n */\nexport class Scrim {\n  constructor() {\n    // --------------------------------------------------------------------------\n    //\n    //  Properties\n    //\n    // --------------------------------------------------------------------------\n    /**\n     * Accessible name when the component is loading.\n     *\n     * @default \"Loading\"\n     */\n    this.intlLoading = TEXT.loading;\n    /**\n     * When `true`, a busy indicator is displayed.\n     */\n    this.loading = false;\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Render Method\n  //\n  // --------------------------------------------------------------------------\n  render() {\n    const { el, loading, intlLoading } = this;\n    const hasContent = el.innerHTML.trim().length > 0;\n    const loaderNode = loading ? h(\"calcite-loader\", { active: true, label: intlLoading }) : null;\n    const contentNode = hasContent ? (h(\"div\", { class: CSS.content }, h(\"slot\", null))) : null;\n    return (h(\"div\", { class: CSS.scrim }, loaderNode, contentNode));\n  }\n  static get is() { return \"calcite-scrim\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"scrim.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"scrim.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"intlLoading\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"Loading\\\"\"\n            }],\n          \"text\": \"Accessible name when the component is loading.\"\n        },\n        \"attribute\": \"intl-loading\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.loading\"\n      },\n      \"loading\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, a busy indicator is displayed.\"\n        },\n        \"attribute\": \"loading\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n}\n"],"version":3}
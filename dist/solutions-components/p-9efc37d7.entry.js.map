{"file":"map-search.entry.esm.js","mappings":"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","names":[],"sources":["./src/components/map-search/map-search.css?tag=map-search","./src/components/map-search/map-search.tsx"],"sourcesContent":["/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.search-widget {\r\n  width: 100% !important;\r\n  border: 1px solid var(--calcite-ui-border-input);\r\n}\r\n","/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { Component, Element, Event, EventEmitter, Host, h, Method, Prop, State, VNode } from \"@stencil/core\";\r\nimport { loadModules } from \"../../utils/loadModules\";\r\nimport { ILayerSourceConfigItem, ILocatorSourceConfigItem, ISearchConfiguration, ISearchResult } from \"../../utils/interfaces\";\r\nimport MapSearch_T9n from \"../../assets/t9n/map-search/resources.json\";\r\nimport { getLocaleComponentStrings } from \"../../utils/locale\";\r\n\r\n@Component({\r\n  tag: \"map-search\",\r\n  styleUrl: \"map-search.css\",\r\n  shadow: false,\r\n})\r\nexport class MapSearch {\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Host element access\r\n  //\r\n  //--------------------------------------------------------------------------\r\n  @Element() el: HTMLElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * esri/views/View: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\r\n   */\r\n  @Prop() mapView: __esri.MapView;\r\n\r\n  /**\r\n   * ISearchConfiguration: Configuration details for the Search widget\r\n   */\r\n  @Prop() searchConfiguration: ISearchConfiguration;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  State (internal)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * string: Text entered by the end user.\r\n   * Used to search against the locator.\r\n   */\r\n  @State() _searchTerm: string;\r\n\r\n  /**\r\n   * Contains the translations for this component.\r\n   * All UI strings should be defined here.\r\n   */\r\n  @State() protected _translations: typeof MapSearch_T9n;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * esri/layers/FeatureLayer: https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html\r\n   */\r\n  protected FeatureLayer: typeof import(\"esri/layers/FeatureLayer\");\r\n\r\n  /**\r\n   * esri/widgets/Search: https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Search.html\r\n   */\r\n  protected Search: typeof import(\"esri/widgets/Search\");\r\n\r\n  /**\r\n   * HTMLElement: The container div for the search widget\r\n   */\r\n  protected _searchElement: HTMLElement;\r\n\r\n  /**\r\n   * esri/widgets/Search: https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Search.html\r\n   */\r\n  protected _searchWidget: __esri.widgetsSearch;\r\n\r\n  /**\r\n   * An array of objects representing the results of search\r\n   */\r\n  protected _searchResult: any;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Watch handlers\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Methods (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Clears the state of the search widget\r\n   *\r\n   * @returns Promise that resolves when the operation is complete\r\n   */\r\n  @Method()\r\n  async clear(): Promise<void> {\r\n    this._searchWidget.clear();\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Events (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Emitted on demand when the status of the search widget changes\r\n   *\r\n   */\r\n  @Event() searchChange: EventEmitter<ISearchResult>;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (lifecycle)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * StencilJS: Called once just after the component is first connected to the DOM.\r\n   *\r\n   * @returns Promise when complete\r\n   */\r\n  async componentWillLoad(): Promise<void> {\r\n    await this._getTranslations();\r\n    await this._initModules();\r\n  }\r\n\r\n  /**\r\n   * StencilJS: Called once just after the component is fully loaded and the first render() occurs.\r\n   */\r\n  componentDidLoad(): void {\r\n    this._init();\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   */\r\n  render(): VNode {\r\n    return (\r\n      <Host>\r\n        <div class=\"search-widget\" ref={(el) => { this._searchElement = el }} />\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Load esri javascript api modules\r\n   *\r\n   * @returns Promise resolving when function is done\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _initModules(): Promise<void> {\r\n    const [Search, FeatureLayer] = await loadModules([\r\n      \"esri/widgets/Search\",\r\n      \"esri/layers/FeatureLayer\"\r\n    ]);\r\n    this.Search = Search;\r\n    this.FeatureLayer = FeatureLayer;\r\n  }\r\n\r\n  /**\r\n   * Initialize the search widget\r\n   *\r\n   * @returns Promise resolving when function is done\r\n   */\r\n  protected _init(): void {\r\n    this._initSearchWidget();\r\n  }\r\n\r\n  /**\r\n   * Initialize the search widget and listen to key events\r\n   *\r\n   * @protected\r\n   */\r\n  protected _initSearchWidget(): void {\r\n    if (this.mapView && this._searchElement) {\r\n      const searchConfiguration = this._getSearchConfig(this.searchConfiguration, this.mapView);\r\n\r\n      const searchOptions: __esri.widgetsSearchProperties = {\r\n        view: this.mapView,\r\n        container: this._searchElement,\r\n        searchTerm: this._searchTerm,\r\n        ...searchConfiguration\r\n      };\r\n\r\n      this._searchWidget = new this.Search(searchOptions);\r\n\r\n      this._searchWidget.on(\"search-clear\", () => {\r\n        this._searchResult = undefined;\r\n        this.searchChange.emit(this._searchResult);\r\n      });\r\n\r\n      this._searchWidget.on(\"select-result\", (searchResults) => {\r\n        this._searchResult = undefined;\r\n        if (searchResults.result) {\r\n          this._searchResult = searchResults.result;\r\n          this.searchChange.emit({\r\n            graphics: [searchResults.result.feature],\r\n            name: searchResults.result.name || \"\"\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the search widget based on user defined configuration\r\n   *\r\n   * @param searchConfiguration search configuration defined by the user\r\n   * @param view the current map view\r\n   *\r\n   * @protected\r\n   */\r\n  protected _getSearchConfig(\r\n    searchConfiguration: ISearchConfiguration,\r\n    view: __esri.MapView\r\n  ): ISearchConfiguration {\r\n    const sources = searchConfiguration?.sources;\r\n    if (sources) {\r\n      sources.forEach(source => {\r\n        const isLayerSource = source.hasOwnProperty(\"layer\");\r\n        if (isLayerSource) {\r\n          const layerSource = source as ILayerSourceConfigItem;\r\n          const layerFromMap = layerSource.layer?.id\r\n            ? view.map.findLayerById(layerSource.layer.id)\r\n            : null;\r\n          if (layerFromMap) {\r\n            layerSource.layer = layerFromMap as __esri.FeatureLayer;\r\n          } else if (layerSource?.layer?.url) {\r\n            layerSource.layer = new this.FeatureLayer(layerSource?.layer?.url as any);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    searchConfiguration?.sources?.forEach(source => {\r\n      const isLocatorSource = source.hasOwnProperty(\"locator\");\r\n      if (isLocatorSource) {\r\n        const locatorSource = source as ILocatorSourceConfigItem;\r\n        locatorSource.url = locatorSource.url;\r\n        delete locatorSource.url;\r\n      }\r\n    });\r\n    return searchConfiguration;\r\n  }\r\n\r\n  /**\r\n   * Fetches the component's translations\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _getTranslations(): Promise<void> {\r\n    const translations = await getLocaleComponentStrings(this.el);\r\n    this._translations = translations[0] as typeof MapSearch_T9n;\r\n  }\r\n}\r\n"],"version":3}
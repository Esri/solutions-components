{"file":"card-manager.entry.esm.js","mappings":";;;;;;;;;AAAA,MAAM,cAAc,GAAG,gMAAgM;;MC2B1M,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;EA4DtB,MAAM,iBAAiB;IACrB,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAE9B,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;IAClC,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;IACrD,MAAM,GAAG,GAAG,GAAG,GAAG,mBAAmB,CAAC;IACtC,IAAI,CAAC,WAAW,GAAG,CAAC;QAClB,IAAI,EAAE,cAAc;QACpB,WAAW,EAAE,4DAA4D;QACzE,GAAG,EAAE,GAAG;OACT,EAAE;QACD,IAAI,EAAE,eAAe;QACrB,WAAW,EAAE,yDAAyD;QACtE,GAAG,EAAE,GAAG;OACT,EAAE;QACD,IAAI,EAAE,eAAe;QACrB,WAAW,EAAE,6CAA6C;QAC1D,GAAG,EAAE,GAAG;OACT,CAAC,CAAC;IACH,IAAI,CAAC,UAAU,GAAG;MAChB,SAAS,EAAE,wBAAwB;MACnC,MAAM,EAAE,WAAW;MACnB,OAAO,EAAE,gBAAgB;MACzB,OAAO,EAAE,mBAAmB;MAC5B,MAAM,EAAE,cAAc;KACvB,CAAC;GACH;EAED,MAAM;;;IAGJ,QACE,EAAC,IAAI,QACH,WAAK,KAAK,EAAC,sBAAsB,IAC/B,WAAK,KAAK,EAAC,qCAAqC,IAC9C,sBAAgB,UAAU,EAAC,SAAS,EAAC,KAAK,EAAC,OAAO,IAAE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAkB,EACpG,sBAAgB,KAAK,EAAC,OAAO,IAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAkB,CAErE,EACN,eACE,kBAAY,KAAK,EAAC,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,WAAW,GAAI,EACjD,iBAAW,KAAK,EAAC,cAAc,EAAC,MAAM,EAAE,IAAI,CAAC,UAAU,GAAI,CACvD,CACF,CACD,EACP;GACH;;;;;;;;;;;;EAcS,MAAM,gBAAgB;IAC9B,MAAM,QAAQ,GAAG,MAAM,yBAAyB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1D,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC,CAA2B,CAAC;GAC5D;;;;;;;","names":[],"sources":["./src/components/card-manager/card-manager.css?tag=card-manager&encapsulation=shadow","./src/components/card-manager/card-manager.tsx"],"sourcesContent":["/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.display-inline-table {\r\n  display: inline-table;\r\n}\r\n\r\n.display-flex {\r\n  display: flex;\r\n}\r\n\r\n.display-none {\r\n  display: none;\r\n}\r\n\r\n.w-100 {\r\n  width: 100%;\r\n}\r\n\r\n.w-1-2 {\r\n  width: 50%;\r\n}\r\n\r\n.padding-bottom-1 {\r\n  padding-bottom: 1rem;\r\n}\r\n","/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { Component, Element, Host, h, State } from '@stencil/core';\r\nimport CardManager_T9n from \"../../assets/t9n/card-manager/resources.json\";\r\nimport { getLocaleComponentStrings } from \"../../utils/locale\";\r\n\r\n// TODO maybe just move to the manager component directly\r\n\r\n@Component({\r\n  tag: 'card-manager',\r\n  styleUrl: 'card-manager.css',\r\n  shadow: true,\r\n})\r\nexport class CardManager {\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Host element access\r\n  //\r\n  //--------------------------------------------------------------------------\r\n  @Element() el: HTMLCardManagerElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Contains the translations for this component.\r\n   * All UI strings should be defined here.\r\n   */\r\n  @State() _translations: typeof CardManager_T9n;\r\n\r\n  protected _showInfoCard;\r\n\r\n  protected _showMediaCard;\r\n\r\n  protected _showCommentsCard;\r\n\r\n  protected _fakeValues;\r\n\r\n  protected _fakeInfos;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Watch handlers\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Methods (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Events (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (lifecycle)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  async componentWillLoad(): Promise<void> {\r\n    await this._getTranslations();\r\n\r\n    const href = window.location.href;\r\n    const url = href.substring(0, href.lastIndexOf('/'));\r\n    const img = `${url}/data/generic.png`;\r\n    this._fakeValues = [{\r\n      name: \"Filename.png\",\r\n      description: \"This is an example of what a media description looks like.\",\r\n      url: img\r\n    }, {\r\n      name: \"Filename2.png\",\r\n      description: \"Another example of what a media description looks like.\",\r\n      url: img\r\n    }, {\r\n      name: \"Filename3.png\",\r\n      description: \"And another example of a media description.\",\r\n      url: img\r\n    }];\r\n    this._fakeInfos = {\r\n      \"Details\": \"Details info goes here\",\r\n      \"Name\": \"Name here\",\r\n      \"Phone\": \"(000) 000-0000\",\r\n      \"Email\": \"example@gmail.com\",\r\n      \"Date\": \"May 11, 2022\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    // const mediaCardClass =;\r\n    // const infoCardClass = \"\";\r\n    return (\r\n      <Host>\r\n        <div class=\"display-inline-table\">\r\n          <div class=\"w-100 display-flex padding-bottom-1\">\r\n            <calcite-button appearance='outline' class=\"w-1-2\">{this._translations.information}</calcite-button>\r\n            <calcite-button class=\"w-1-2\">{this._translations.media}</calcite-button>\r\n            {/* <calcite-button>{this._translations.comments}</calcite-button> */}\r\n          </div>\r\n          <div>\r\n            <media-card class=\"\" values={this._fakeValues} />\r\n            <info-card class=\"display-none\" values={this._fakeInfos} />\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Fetches the component's translations\r\n   *\r\n   * @returns Promise when complete\r\n   * @protected\r\n   */\r\n  protected async _getTranslations(): Promise<void> {\r\n    const messages = await getLocaleComponentStrings(this.el);\r\n    this._translations = messages[0] as typeof CardManager_T9n;\r\n  }\r\n\r\n}\r\n"],"version":3}
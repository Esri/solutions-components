{"file":"interfaces-3b23a5f9.js","mappings":";;;;;AAAA;;;;;;;;;;;;;;;AAqBA;;;IAGY;AAAZ,WAAY,WAAW;EACrB,2CAAG,CAAA;EACH,iDAAM,CAAA;EACN,iDAAM,CAAA;EACN,6CAAI,CAAA;EACJ,qDAAQ,CAAA;AACV,CAAC,EANW,WAAW,KAAX,WAAW,QAMtB;IAEW;AAAZ,WAAY,WAAW;EACrB,2CAAG,CAAA;EACH,2CAAG,CAAA;AACL,CAAC,EAHW,WAAW,KAAX,WAAW,QAGtB;IAEW;AAAZ,WAAY,SAAS;EACnB,yCAAI,CAAA;EACJ,6CAAM,CAAA;EACN,6CAAM,CAAA;EACN,uCAAG,CAAA;EACH,uCAAG,CAAA;AACL,CAAC,EANW,SAAS,KAAT,SAAS,QAMpB;IAEW;AAAZ,WAAY,WAAW;EACrB,0BAAS,CAAA;EACT,gCAAe,CAAA;AACjB,CAAC,EAHW,WAAW,KAAX,WAAW,QAGtB;IAEW;AAAZ,WAAY,cAAc;EACxB,6BAAS,CAAA;EACT,mCAAe,CAAA;AACjB,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;IAEW;AAAZ,WAAY,aAAa;EACvB,kCAAe,CAAA;EACf,kCAAe,CAAA;EACf,kCAAe,CAAA;EACf,kCAAe,CAAA;AACjB,CAAC,EALW,aAAa,KAAb,aAAa,QAKxB;IAEW;AAAZ,WAAY,cAAc;EACxB,iCAAa,CAAA;EACb,+BAAW,CAAA;EACX,+BAAW,CAAA;EACX,+BAAW,CAAA;AACb,CAAC,EALW,cAAc,KAAd,cAAc,QAKzB;IAEW;AAAZ,WAAY,WAAW;EACrB,8BAAe,CAAA;EACf,0CAA2B,CAAA;AAC7B,CAAC,EAHW,WAAW,KAAX,WAAW,QAGtB;IAEW;AAAZ,WAAY,WAAW;EACrB,gCAAe,CAAA;EACf,oCAAmB,CAAA;AACrB,CAAC,EAHW,WAAW,KAAX,WAAW;;;;","names":[],"sources":["./src/utils/interfaces.ts"],"sourcesContent":["/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport {\r\n  IDeployFileCopyPath,\r\n  IItemTemplate\r\n} from '@esri/solution-common';\r\n\r\n/**\r\n * Resource update types\r\n */\r\nexport enum EUpdateType {\r\n  Add,\r\n  Update,\r\n  Remove,\r\n  None,\r\n  Obsolete\r\n}\r\n\r\nexport enum EExportType {\r\n  PDF,\r\n  CSV\r\n}\r\n\r\nexport enum EPageType {\r\n  LIST,\r\n  SELECT,\r\n  REFINE,\r\n  PDF,\r\n  CSV\r\n}\r\n\r\nexport enum ERefineMode {\r\n  ALL=\"ALL\",\r\n  SUBSET=\"SUBSET\"\r\n}\r\n\r\nexport enum ESelectionMode {\r\n  ADD=\"ADD\",\r\n  REMOVE=\"REMOVE\"\r\n}\r\n\r\nexport enum EWorkflowType {\r\n  SEARCH=\"SEARCH\",\r\n  SELECT=\"SELECT\",\r\n  SKETCH=\"SKETCH\",\r\n  REFINE=\"REFINE\"\r\n}\r\n\r\nexport enum ESelectionType {\r\n  POINT=\"POINT\",\r\n  LINE=\"LINE\",\r\n  POLY=\"POLY\",\r\n  RECT=\"RECT\"\r\n}\r\n\r\nexport enum ESketchType {\r\n  \"LAYER\"=\"LAYER\",\r\n  \"INTERACTIVE\"=\"INTERACTIVE\"\r\n}\r\n\r\nexport enum EExpandType {\r\n  EXPAND=\"EXPAND\",\r\n  COLLAPSE=\"COLLAPSE\"\r\n}\r\n\r\n/* eslint-enable no-unused-vars */\r\n\r\nexport type SelectionMode = \"single\" | \"multi\";\r\n\r\n/**\r\n * Key details from the templates item\r\n */\r\nexport interface IItemDetails {\r\n  accessInformation?: string;\r\n  description?: string;\r\n  licenseInfo?: string;\r\n  snippet: string;\r\n  tags: string[];\r\n  title: string;\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * Key details used to show solution contents\r\n */\r\nexport interface IInventoryItem {\r\n  id: string;\r\n  title: string;\r\n  dependencies?: IInventoryItem[];\r\n  type: string;\r\n  typeKeywords: string[];\r\n}\r\n\r\n/**\r\n * A templates share details\r\n */\r\nexport interface IItemShare {\r\n  id: string;\r\n  title: string;\r\n  isShared: boolean;\r\n  shareItem: boolean;\r\n  type: string;\r\n  typeKeywords: string[];\r\n}\r\n\r\n/**\r\n * Organization based variables the user can insert at runtime\r\n */\r\nexport interface IOrganizationVariableItem {\r\n  id: string;\r\n  title: string;\r\n  value: string;\r\n}\r\n\r\n/**\r\n * Key details for items that support upload/download\r\n */\r\nexport interface IResourceItem {\r\n  name: string;\r\n  url: string;\r\n}\r\n\r\n/**\r\n * Standardized response type for promises\r\n */\r\nexport interface IResponse {\r\n  success: boolean;\r\n  message: string;\r\n}\r\n\r\n/**\r\n * Solution configuration details used to display solution contents\r\n */\r\nexport interface ISolutionConfiguration {\r\n  contents: IInventoryItem[];\r\n}\r\n\r\n/**\r\n * Details used to display and store information about the item\r\n */\r\nexport interface ISolutionTemplateEdit {\r\n  itemId: string;\r\n  type: string;\r\n  details: IItemDetails;\r\n  data: any;\r\n  properties: any;\r\n  thumbnail: any;\r\n  resourceFilePaths: IResourcePath[];\r\n  groupDetails?: IItemShare[];\r\n}\r\n\r\nexport interface IItemTemplateEdit extends IItemTemplate {\r\n  resourceFilePaths: IResourcePath[];\r\n  thumbnail: any;\r\n  groupDetails?: IItemShare[];\r\n}\r\n\r\n/**\r\n * A list of solution state info for each template in a solution\r\n */\r\nexport interface ISolutionTemplateEdits {\r\n  [templateId: string]: ISolutionTemplateEdit;\r\n}\r\n\r\n//???\r\nexport interface ISolutionModel {\r\n  dataModel: monaco.editor.ITextModel;\r\n  dataOriginValue: string;\r\n  propsModel: monaco.editor.ITextModel;\r\n  propsOriginValue: string;\r\n  propsDiffOriginValue: string;\r\n  state: any;\r\n  shareInfo: any;\r\n  isEditing: boolean;\r\n  itemId: string;\r\n  updateItemValues: any;\r\n  originalItemValues: any;\r\n  name: string;\r\n  title: string;\r\n  itemOriginValue: string;\r\n  spatialReference: any;\r\n  resources: string[];\r\n  resourceFilePaths: IResourcePath[];\r\n  sourceResourceFilePaths: IResourcePath[];\r\n  thumbnailOrigin: any;\r\n  thumbnailNew: any;\r\n  type: string;\r\n}\r\n\r\n/**\r\n * A list of solution models for each template in a solution\r\n */\r\nexport interface ISolutionModels {\r\n  [key: string]: ISolutionModel;\r\n}\r\n//???\r\n\r\n/**\r\n * Feature service name and whether the service is enabled for SR configuration\r\n */\r\nexport interface IFeatureServiceEnabledStatus {\r\n  name: string;\r\n  enabled: boolean;\r\n}\r\n\r\n/**\r\n * Hash of service name: enabled (should it honor the user defined spatial reference)\r\n */\r\nexport interface IServiceInfo {\r\n  [key: string]: boolean;\r\n}\r\n\r\n/**\r\n * Key spatial reference information for the solution\r\n */\r\nexport interface ISolutionSpatialReferenceInfo {\r\n  enabled: boolean;\r\n  services: IServiceInfo;\r\n  spatialReference: string | number;\r\n}\r\n\r\n/**\r\n * Key spatial reference information\r\n */\r\nexport interface ISpatialRefRepresentation {\r\n  display: string;\r\n  usingWkid: boolean;\r\n  wkid: number;\r\n  wkt: string;\r\n}\r\n\r\n/**\r\n * Stores the data object for a template and indicator if it supports upload/download\r\n */\r\nexport interface ITemplateData {\r\n  resourceItem?: IResourceItem;\r\n  value?: any;\r\n}\r\n\r\n/**\r\n * Stores updated templates that contain runtime changes from the user\r\n */\r\nexport interface IUpdateTemplateResponse {\r\n  templates: any[];\r\n  errors: string[];\r\n}\r\n\r\n/**\r\n * Solution template based variables that the user can insert at runtime\r\n */\r\nexport interface IVariableItem {\r\n  id: string;\r\n  title: string;\r\n  type?: string;\r\n  value: string;\r\n  dependencies?: IVariableItem[];\r\n}\r\n\r\n/**\r\n * WKID label and extent\r\n */\r\nexport interface IWkidDescription {\r\n  label: string;\r\n  defaultExtent: string;\r\n}\r\n\r\n/**\r\n * Key details to manage resources\r\n */\r\nexport interface IResourcePath extends IDeployFileCopyPath {\r\n  blob?: any; // This will only be set when a new file is uploaded (add or update)\r\n  sourceFileName?: string; // This will only be set when a file is being updated\r\n  updateType: EUpdateType;\r\n}\r\n\r\n/**\r\n * A templates share details\r\n */\r\nexport interface ISearchConfig {\r\n  layers: string[];\r\n  layerUrl: string;\r\n  locators: string[];\r\n  locatorUrl: string;\r\n}\r\n\r\nexport interface ISearchResult {\r\n  graphics: __esri.Graphic[];\r\n  name: string;\r\n}\r\n\r\nexport interface ISelectionSet {\r\n  id: number; // Date.Now() when the item is created...used to update a selection set\r\n  workflowType: EWorkflowType;\r\n  searchResult: any;\r\n  buffer: __esri.Geometry;\r\n  distance: number;\r\n  download: boolean;\r\n  unit: __esri.LinearUnits;\r\n  label: string;\r\n  selectedIds: number[];\r\n  layerView: __esri.FeatureLayerView;\r\n  geometries: __esri.Geometry[];\r\n  refineSelectLayers: __esri.FeatureLayerView[];\r\n  refineIds: IRefineIds;\r\n}\r\n\r\nexport interface IRefineIds {\r\n  addIds: number[];\r\n  removeIds: number[];\r\n}\r\n\r\nexport interface IQueryExtentResponse {\r\n  count: number;\r\n  extent: __esri.Extent;\r\n}\r\n\r\nexport interface IRefineOperation {\r\n  mode: ESelectionMode;\r\n  ids: number[];\r\n}\r\n\r\nexport interface IInfoCardValues {\r\n  [key: string]: string;\r\n}\r\n\r\nexport interface IMediaCardValues {\r\n  name: string;\r\n  description: string;\r\n  url: string;\r\n}\r\n\r\nexport interface IMapInfo {\r\n  id: string;\r\n  name: string;\r\n}\r\n"],"version":3}
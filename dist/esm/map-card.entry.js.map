{"file":"map-card.entry.js","mappings":"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","names":[],"sources":["./src/components/map-card/map-card.css?tag=map-card","./src/components/map-card/map-card.tsx"],"sourcesContent":["/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n:host {\r\n  display: block;\r\n  --calcite-label-margin-bottom: 0;\r\n  --calcite-block-padding: 0;\r\n}\r\n\r\n.action-bar-size {\r\n  height: 3.5rem;\r\n  width: 100%;\r\n}\r\n\r\n.action-center {\r\n  -webkit-box-align: center;\r\n  -webkit-align-items: center;\r\n  -ms-grid-row-align: center;\r\n  align-items: center;\r\n  -webkit-align-content: center;\r\n  align-content: center;\r\n  -webkit-box-pack: center;\r\n  -webkit-justify-content: center;\r\n  justify-content: center;\r\n}\r\n\r\n.border-bottom-1 {\r\n  border-width: 0px;\r\n  border-bottom-width: 1px;\r\n  border-style: solid;\r\n  border-color: var(--calcite-ui-border-3);\r\n}\r\n\r\n.width-1-7 {\r\n  width: 14.28%;\r\n}\r\n\r\n.width-1-6 {\r\n  width: 16.66%;\r\n}\r\n\r\n.width-full {\r\n  width: 100%;\r\n}\r\n\r\n.height-full {\r\n  height: 100%;\r\n}\r\n\r\n.display-flex {\r\n  display: flex;\r\n}\r\n\r\n/* only used if we need to do the map action seperately */\r\n.block-button {\r\n  border-bottom: 0;\r\n}\r\n\r\n.block-button:hover {\r\n  background-color: var(--calcite-ui-foreground-2);\r\n}\r\n\r\n.block-button:active {\r\n  background-color: var(--calcite-ui-foreground-3);\r\n}\r\n\r\n.map-view {\r\n  padding: 0;\r\n  margin: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.map-list {\r\n  position: absolute;\r\n  inset: 3.5rem 0 0 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  animation: calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;\r\n  background-color: var(--calcite-scrim-background);\r\n  z-index: 1;\r\n  width: 100%;\r\n  height: fit-content;\r\n}\r\n\r\n.map-height {\r\n  height: calc(100% - 58px);\r\n}\r\n\r\n.display-none {\r\n  display: none;\r\n}\r\n\r\n/* Not sure how else to do this\r\n  tried navigation gamepad settings but enabled: false still shows this */\r\n\r\n.esri-zoom {\r\n  display: none !important;\r\n}\r\n\r\n/* .block-button:focus {\r\n  @apply bg-foreground-2 text-color-1 fill-color-1 focus-inset;\r\n} */\r\n","/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { Component, Element, Event, EventEmitter, Host, h, Prop, State, VNode, Watch } from '@stencil/core';\r\nimport MapCard_T9n from \"../../assets/t9n/map-card/resources.json\";\r\nimport { loadModules } from \"../../utils/loadModules\";\r\nimport { getLocaleComponentStrings } from \"../../utils/locale\";\r\nimport { EExpandType, IMapInfo } from \"../../utils/interfaces\";\r\n\r\n// TODO navigation and accessability isn't right for the map list\r\n//   tab does not go into the list when it's open\r\n//   focus is not set when it opens\r\n// TODO clarify what the Home and List buttons are supposed to do\r\n// TODO handle zoom in/out\r\n// TODO map list button tooltip does not work\r\n// TODO map list should close if the user clicks something else...hope this will be easy when I figure out how to set focus when it opens\r\n\r\n@Component({\r\n  tag: 'map-card',\r\n  styleUrl: 'map-card.css',\r\n  shadow: false,\r\n})\r\nexport class MapCard {\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Host element access\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  @Element() el: HTMLMapCardElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * IMapInfo[]: array of map infos (name and id)\r\n   */\r\n  @Prop() mapInfos: IMapInfo[] = [];\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  State (internal)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * boolean: controls the state of the map list\r\n   */\r\n  @State() _mapListExpanded = false;\r\n\r\n  /**\r\n   * esri/views/View: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\r\n   */\r\n  @State() _mapView: __esri.MapView;\r\n\r\n  /**\r\n   * Contains the translations for this component.\r\n   * All UI strings should be defined here.\r\n   */\r\n  @State() _translations: typeof MapCard_T9n;\r\n\r\n  /**\r\n   * string: id of the map to display\r\n   */\r\n  @State() _webMapId = \"\";\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * esri/views/MapView: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\r\n   */\r\n  protected MapView: typeof import(\"esri/views/MapView\");\r\n\r\n  /**\r\n   * esri/WebMap: https://developers.arcgis.com/javascript/latest/api-reference/esri-WebMap.html\r\n   */\r\n  protected WebMap: typeof import(\"esri/WebMap\");\r\n\r\n  /**\r\n   * string: the id of map currently displayed\r\n   */\r\n  protected _loadedId = \"\";\r\n\r\n  /**\r\n   * string: the id of the container div for the map\r\n   */\r\n  protected _mapDivId = \"map-div\";\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Watch handlers\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Called each time the _webMapId prop is changed.\r\n   */\r\n  @Watch(\"_webMapId\")\r\n  _webMapIdWatchHandler(v: any, oldV: any): void {\r\n    if (v && JSON.stringify(v) !== JSON.stringify(oldV)) {\r\n      this._loadMap(v);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called each time the mapInfos prop is changed.\r\n   */\r\n  @Watch(\"mapInfos\")\r\n  mapInfosWatchHandler(v: any, oldV: any): void {\r\n    if (v && JSON.stringify(v) !== JSON.stringify(oldV)) {\r\n      this._loadMap(v[0].id);\r\n    }\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Methods (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Events (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Emitted when the expand button is clicked\r\n   */\r\n  @Event() expandMap: EventEmitter<EExpandType>;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (lifecycle)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * StencilJS: Called once just after the component is first connected to the DOM.\r\n   */\r\n  async componentWillLoad(): Promise<void> {\r\n    await this._getTranslations();\r\n    await this._initModules();\r\n  }\r\n\r\n  /**\r\n   * StencilJS: Called after every render.\r\n   */\r\n  componentDidRender() {\r\n    // the container node for the map view needs to exist before the view is created\r\n    this._loadMap(this._webMapId);\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   */\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this._getToolbar()}\r\n        {this._getMapNameList(this._mapListExpanded)}\r\n        <div class=\"map-height\" id={this._mapDivId} />\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Load esri javascript api modules\r\n   *\r\n   * @returns Promise resolving when function is done\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _initModules(): Promise<void> {\r\n    const [WebMap, MapView] = await loadModules([\r\n      \"esri/WebMap\",\r\n      \"esri/views/MapView\"\r\n    ]);\r\n    this.WebMap = WebMap;\r\n    this.MapView = MapView;\r\n  }\r\n\r\n  /**\r\n   * Create the toolbar (controls used for map and app interactions)\r\n   *\r\n   * @returns The dom node with the toolbar\r\n   *\r\n   * @protected\r\n   */\r\n  protected _getToolbar(): VNode {\r\n    return (\r\n      <div class=\"display-flex\">\r\n        <calcite-action-bar class=\"border-bottom-1 action-bar-size\" expand-disabled layout=\"horizontal\" slot=\"header\">\r\n          {this._getMapPicker()}\r\n          {this._getActionGroup(\"home\", false, this._translations.home, () => this._goHome())}\r\n          {this._getActionGroup(\"list\", false, this._translations.list, () => this._showList())}\r\n          {this._getActionGroup(\"magnifying-glass-plus\", false, this._translations.search, () => this._search())}\r\n          {this._getActionGroup(\"plus\", false, this._translations.zoomIn, () => this._zoomIn())}\r\n          {this._getActionGroup(\"minus\", false, this._translations.zoomOut, () => this._zoomOut())}\r\n          {this._getActionGroup(\"expand\", false, this._translations.expand, () => this._expand())}\r\n        </calcite-action-bar>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load the webmap for the provided id\r\n   *\r\n   * @param id the webmap id to load\r\n   *\r\n   * @returns void\r\n   *\r\n   * @protected\r\n   */\r\n  protected _loadMap(\r\n    id: string\r\n  ): void {\r\n    // on the first render use the first child of the provided mapInfos\r\n    if (id === \"\" && this.mapInfos.length > 0) {\r\n      id = this.mapInfos[0].id;\r\n    }\r\n    if (this._loadedId !== id) {\r\n      const webMap = new this.WebMap({\r\n        portalItem: { id }\r\n      });\r\n\r\n      this._mapView = new this.MapView({\r\n        container: this._mapDivId,\r\n        map: webMap,\r\n        // TODO consider this more...seems to cause less overflow issues when the component is resized\r\n        resizeAlign: \"top-left\"\r\n      });\r\n\r\n      this._loadedId = id;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a calcite action group for the current action\r\n   *\r\n   * @param icon the icon to display for the current action\r\n   * @param disabled should the action be disabled\r\n   * @param tip information tip to display helpful details to end user\r\n   * @param func the associated onClick function to execute\r\n   *\r\n   * @returns the dom node for the action group\r\n   *\r\n   * @protected\r\n   */\r\n  protected _getActionGroup(\r\n    icon: string,\r\n    disabled: boolean,\r\n    tip: string,\r\n    func: any\r\n  ): VNode {\r\n    return (\r\n      <calcite-action-group class=\"action-center width-1-6\" layout=\"horizontal\">\r\n        <calcite-action\r\n          alignment=\"center\"\r\n          class=\"width-full height-full\"\r\n          compact={false}\r\n          disabled={disabled}\r\n          icon={icon}\r\n          id={icon}\r\n          onClick={func}\r\n          text=\"\"\r\n        >\r\n          <calcite-icon icon={\"cheveron-up\"} scale=\"s\" slot=\"icon\" />\r\n        </calcite-action>\r\n        <calcite-tooltip label=\"\" placement=\"bottom\" reference-element={icon}>\r\n          <span>{tip}</span>\r\n        </calcite-tooltip>\r\n      </calcite-action-group>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get a calcite action group for the map list\r\n   * Actions do not support multiple icons so this uses a block\r\n   *\r\n   * @returns the dom node for the action group\r\n   *\r\n   * @protected\r\n   */\r\n  protected _getMapPicker(): VNode {\r\n    const mapListIcon = this._mapListExpanded ? \"chevron-up\" : \"chevron-down\";\r\n    return (\r\n      <calcite-action-group class=\"action-center width-1-6\" layout=\"horizontal\">\r\n        <calcite-block\r\n          class=\"action-center block-button width-full height-full\"\r\n          heading=''\r\n          onClick={() => this._chooseMap()}\r\n        >\r\n          <calcite-icon icon=\"map\" scale=\"s\" slot=\"icon\" />\r\n          <calcite-icon icon={mapListIcon} scale=\"s\" slot=\"icon\" />\r\n          <calcite-tooltip label=\"\" placement=\"bottom\">\r\n            <span>{this._translations.mapName}</span>\r\n          </calcite-tooltip>\r\n        </calcite-block>\r\n      </calcite-action-group>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get a pick list for all maps in mapInfos\r\n   *\r\n   * @param show boolean to indicate if the list should be shown or hidden\r\n   *\r\n   * @returns the dom node for the list of maps\r\n   *\r\n   * @protected\r\n   */\r\n  protected _getMapNameList(\r\n    show: boolean\r\n  ): VNode {\r\n    const listClass = show ? \"map-list\" : \"display-none\";\r\n    return (\r\n      <div class={listClass}>\r\n        <calcite-pick-list id=\"mapList\">\r\n          {this.mapInfos.map(mapInfo => {\r\n            return (\r\n              <calcite-pick-list-item\r\n                label={mapInfo.name}\r\n                onClick={() => this._webMapSelected(mapInfo.id)}\r\n                selected={mapInfo.id === this._loadedId}\r\n                value={mapInfo.id}\r\n              />\r\n            )\r\n          })}\r\n        </calcite-pick-list>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Fired when the user clicks on the map list\r\n   *\r\n   * @param id the web map id selected from the list\r\n   *\r\n   * @returns void\r\n   *\r\n   * @protected\r\n   */\r\n  protected _webMapSelected(\r\n    id: string\r\n  ): void {\r\n    this._mapListExpanded = false;\r\n    this._webMapId = id;\r\n  }\r\n\r\n  /**\r\n   * Toggles the open/close state of the map list\r\n   *\r\n   * @returns the dom node for the action group\r\n   *\r\n   * @protected\r\n   */\r\n  protected _chooseMap(): void {\r\n    this._mapListExpanded = !this._mapListExpanded;\r\n    if (this._mapListExpanded) {\r\n      //const mapList = document.getElementById(\"mapList\");\r\n      // TODO figure out why this doesn't work\r\n      //await (mapList.children[0] as HTMLCalcitePickListItemElement).setFocus();\r\n    }\r\n  }\r\n\r\n  // Need to discuss this with the team\r\n  protected _goHome(): void {\r\n    alert(\"go home\")\r\n  }\r\n\r\n  // need to discuss this with the team\r\n  protected _showList(): void {\r\n    alert(\"show list\")\r\n  }\r\n\r\n  // Need to discuss this with the team\r\n  protected _search(): void {\r\n    alert(\"search\")\r\n  }\r\n\r\n  // Need to explore map fixed zoom in considerations\r\n  protected _zoomIn(): void {\r\n    alert(\"zoom in\")\r\n  }\r\n\r\n  // Need to explore map fixed zoom out considerations\r\n  protected _zoomOut(): void {\r\n    alert(\"zoom out\")\r\n  }\r\n\r\n  /**\r\n   * Emit the expand map event\r\n   *\r\n   * @returns void\r\n   *\r\n   * @protected\r\n   */\r\n  protected _expand(): void {\r\n    this.expandMap.emit(EExpandType.EXPAND);\r\n  }\r\n\r\n  /**\r\n   * Fetches the component's translations\r\n   *\r\n   * @returns Promise when complete\r\n   * @protected\r\n   */\r\n  protected async _getTranslations(): Promise<void> {\r\n    const messages = await getLocaleComponentStrings(this.el);\r\n    this._translations = messages[0] as typeof MapCard_T9n;\r\n  }\r\n\r\n}\r\n"],"version":3}
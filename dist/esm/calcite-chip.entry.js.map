{"file":"calcite-chip.entry.js","mappings":"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","names":[],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/chip/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/chip/chip.css?tag=calcite-chip&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/chip/chip.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nexport const CSS = {\n  title: \"title\",\n  close: \"close\",\n  imageContainer: \"image-container\",\n  chipIcon: \"chip-icon\",\n  closeIcon: \"close-icon\"\n};\nexport const TEXT = {\n  close: \"Close\"\n};\nexport const SLOTS = {\n  image: \"image\"\n};\nexport const ICONS = {\n  close: \"x\"\n};\n","/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([scale=s]) {\n  block-size: 1.5rem;\n  font-size: var(--calcite-font-size--2);\n  --calcite-chip-spacing-unit-l: 0.5rem;\n  --calcite-chip-spacing-unit-s: 0.25rem;\n}\n:host([scale=s]) .image-container {\n  block-size: 1.25rem;\n  inline-size: 1.25rem;\n}\n\n:host([scale=m]) {\n  block-size: 2rem;\n  font-size: var(--calcite-font-size--1);\n  --calcite-chip-spacing-unit-l: 0.75rem;\n  --calcite-chip-spacing-unit-s: 6px;\n}\n:host([scale=m]) .image-container {\n  block-size: 1.5rem;\n  inline-size: 1.5rem;\n  padding-inline-start: 0.25rem;\n}\n\n:host([scale=l]) {\n  block-size: 2.75rem;\n  font-size: var(--calcite-font-size-0);\n  --calcite-chip-spacing-unit-l: 1rem;\n  --calcite-chip-spacing-unit-s: 0.5rem;\n}\n:host([scale=l]) .image-container {\n  block-size: 2rem;\n  inline-size: 2rem;\n  padding-inline-start: 0.25rem;\n}\n\n:host {\n  box-sizing: border-box;\n  display: inline-flex;\n  cursor: default;\n  align-items: center;\n  border-radius: 9999px;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-ui-border-1);\n  font-weight: var(--calcite-font-weight-medium);\n  color: var(--calcite-ui-text-1);\n}\n\n.container {\n  display: inline-flex;\n  block-size: 100%;\n  max-inline-size: 100%;\n  align-items: center;\n}\n\n.title {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n:host span {\n  padding-block: 0;\n  padding-inline: var(--calcite-chip-spacing-unit-l);\n}\n\n:host([closable]) span {\n  padding-inline: var(--calcite-chip-spacing-unit-l) var(--calcite-chip-spacing-unit-s);\n}\n\n:host([icon]:not([closable])) span {\n  padding-block: 0;\n  padding-inline: var(--calcite-chip-spacing-unit-l);\n}\n\n:host button {\n  margin: 0px;\n  display: inline-flex;\n  max-block-size: 100%;\n  min-block-size: 100%;\n  cursor: pointer;\n  align-items: center;\n  align-self: stretch;\n  border-style: none;\n  background-color: transparent;\n  color: var(--calcite-ui-text-1);\n  outline-color: transparent;\n  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  -webkit-appearance: none;\n  border-start-start-radius: 0;\n  border-start-end-radius: 50px;\n  border-end-end-radius: 50px;\n  border-end-start-radius: 0;\n  padding-block: 0;\n  padding-inline: var(--calcite-chip-spacing-unit-s);\n  color: inherit;\n  --calcite-chip-transparent-hover: var(--calcite-button-transparent-hover);\n  --calcite-chip-transparent-press: var(--calcite-button-transparent-press);\n}\n:host button:hover {\n  background-color: var(--calcite-chip-transparent-hover);\n}\n:host button:focus {\n  background-color: var(--calcite-chip-transparent-hover);\n  outline: 2px solid var(--calcite-ui-brand);\n  outline-offset: -2px;\n}\n:host button:active {\n  background-color: var(--calcite-chip-transparent-press);\n}\n\n.image-container {\n  display: inline-flex;\n  overflow: hidden;\n  border-radius: 50%;\n}\n\n:host slot[name=image]::slotted(*) {\n  display: flex;\n  block-size: 100%;\n  inline-size: 100%;\n  overflow: hidden;\n  border-radius: 50%;\n}\n\n.chip-icon {\n  position: relative;\n  margin-block: 0px;\n  display: inline-flex;\n  transition-duration: 150ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  margin-inline-end: 0;\n  margin-inline-start: var(--calcite-chip-spacing-unit-l);\n  border-start-start-radius: 0;\n  border-start-end-radius: 50px;\n  border-end-end-radius: 50px;\n  border-end-start-radius: 0;\n}\n\n:host([color=blue]) {\n  border-color: transparent;\n  background-color: var(--calcite-ui-info);\n  color: var(--calcite-ui-text-inverse);\n}\n\n:host([color=red]) {\n  border-color: transparent;\n  background-color: var(--calcite-ui-danger);\n  color: var(--calcite-ui-text-inverse);\n}\n\n:host([color=yellow]) {\n  border-color: transparent;\n  background-color: var(--calcite-ui-warning);\n  color: #151515;\n}\n\n:host([color=green]) {\n  border-color: transparent;\n  background-color: var(--calcite-ui-success);\n  color: #151515;\n}\n\n:host([color=grey]) {\n  border-color: transparent;\n  background-color: var(--calcite-ui-foreground-2);\n  color: var(--calcite-ui-text-1);\n}\n:host([color=grey]) button,\n:host([color=grey]) .close-icon {\n  color: var(--calcite-ui-text-3);\n}\n:host([color=grey]) .chip-icon {\n  color: var(--calcite-ui-icon-color, var(--calcite-ui-text-3));\n}\n\n:host([appearance=clear]), \n:host([appearance=transparent]) {\n  background-color: transparent;\n  color: var(--calcite-ui-text-1);\n}\n\n:host([color=blue][appearance=clear]),\n:host([color=blue][appearance=transparent]) {\n  border-color: var(--calcite-ui-info);\n}\n:host([color=blue][appearance=clear]) .chip-icon,\n:host([color=blue][appearance=transparent]) .chip-icon {\n  color: var(--calcite-ui-icon-color, var(--calcite-ui-info));\n}\n\n:host([color=red][appearance=clear]),\n:host([color=red][appearance=transparent]) {\n  border-color: var(--calcite-ui-danger);\n}\n:host([color=red][appearance=clear]) .chip-icon,\n:host([color=red][appearance=transparent]) .chip-icon {\n  color: var(--calcite-ui-icon-color, var(--calcite-ui-danger));\n}\n\n:host([color=yellow][appearance=clear]),\n:host([color=yellow][appearance=transparent]) {\n  border-color: var(--calcite-ui-warning);\n}\n:host([color=yellow][appearance=clear]) .chip-icon,\n:host([color=yellow][appearance=transparent]) .chip-icon {\n  color: var(--calcite-ui-icon-color, var(--calcite-ui-warning));\n}\n\n:host([color=green][appearance=clear]),\n:host([color=green][appearance=transparent]) {\n  border-color: var(--calcite-ui-success);\n}\n:host([color=green][appearance=clear]) .chip-icon,\n:host([color=green][appearance=transparent]) .chip-icon {\n  color: var(--calcite-ui-icon-color, var(--calcite-ui-success));\n}\n\n:host([color=grey][appearance=clear]),\n:host([color=grey][appearance=transparent]) {\n  border-color: var(--calcite-ui-border-1);\n}\n:host([color=grey][appearance=clear]) .chip-icon,\n:host([color=grey][appearance=transparent]) .chip-icon {\n  color: var(--calcite-ui-icon-color, var(--calcite-ui-text-3));\n}\n\n:host([closed]) {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nimport { h } from \"@stencil/core\";\nimport { getSlotted } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { CSS, TEXT, SLOTS, ICONS } from \"./resources\";\nimport { connectConditionalSlotComponent, disconnectConditionalSlotComponent } from \"../../utils/conditionalSlot\";\n/**\n * @slot - A slot for adding text.\n * @slot image - A slot for adding an image.\n */\nexport class Chip {\n  constructor() {\n    //--------------------------------------------------------------------------\n    //\n    //  Public Properties\n    //\n    //--------------------------------------------------------------------------\n    /** Specifies the appearance style of the component. */\n    this.appearance = \"solid\";\n    /** Specifies the color for the component. */\n    this.color = \"grey\";\n    /**\n     * When `true`, a close button is added to the component.\n     *\n     * @deprecated use `closable` instead.\n     */\n    this.dismissible = false;\n    /** When `true`, a close button is added to the component. */\n    this.closable = false;\n    /**\n     * Accessible name for the component's close button.\n     *\n     * @default \"Close\"\n     */\n    this.dismissLabel = TEXT.close;\n    /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n    this.iconFlipRtl = false;\n    /** Specifies the size of the component. */\n    this.scale = \"m\";\n    /** When `true`, hides the component. */\n    this.closed = false;\n    // --------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    // --------------------------------------------------------------------------\n    this.closeClickHandler = (event) => {\n      event.preventDefault();\n      this.calciteChipDismiss.emit(this.el);\n      this.closed = true;\n    };\n    this.guid = guid();\n  }\n  handleDismissible(value) {\n    this.closable = value;\n  }\n  handleClosable(value) {\n    this.dismissible = value;\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n  connectedCallback() {\n    connectConditionalSlotComponent(this);\n    if (this.dismissible) {\n      this.handleDismissible(this.dismissible);\n    }\n    if (this.closable) {\n      this.handleClosable(this.closable);\n    }\n  }\n  disconnectedCallback() {\n    disconnectConditionalSlotComponent(this);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n  /** Sets focus on the component. */\n  async setFocus() {\n    var _a;\n    (_a = this.closeButton) === null || _a === void 0 ? void 0 : _a.focus();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n  renderChipImage() {\n    const { el } = this;\n    const hasChipImage = getSlotted(el, SLOTS.image);\n    return hasChipImage ? (h(\"div\", { class: CSS.imageContainer, key: \"image\" }, h(\"slot\", { name: SLOTS.image }))) : null;\n  }\n  render() {\n    const iconEl = (h(\"calcite-icon\", { class: CSS.chipIcon, flipRtl: this.iconFlipRtl, icon: this.icon, scale: \"s\" }));\n    const closeButton = (h(\"button\", { \"aria-describedby\": this.guid, \"aria-label\": this.dismissLabel, class: CSS.close, onClick: this.closeClickHandler, ref: (el) => (this.closeButton = el) }, h(\"calcite-icon\", { class: CSS.closeIcon, icon: ICONS.close, scale: \"s\" })));\n    return (h(\"div\", { class: \"container\" }, this.renderChipImage(), this.icon ? iconEl : null, h(\"span\", { class: CSS.title, id: this.guid }, h(\"slot\", null)), this.closable ? closeButton : null));\n  }\n  static get is() { return \"calcite-chip\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"chip.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"chip.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"appearance\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Extract<\\\"solid\\\" | \\\"clear\\\", Appearance>\",\n          \"resolved\": \"\\\"clear\\\" | \\\"solid\\\"\",\n          \"references\": {\n            \"Extract\": {\n              \"location\": \"global\"\n            },\n            \"Appearance\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the appearance style of the component.\"\n        },\n        \"attribute\": \"appearance\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"solid\\\"\"\n      },\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"ChipColor\",\n          \"resolved\": \"\\\"blue\\\" | \\\"green\\\" | \\\"grey\\\" | \\\"red\\\" | \\\"yellow\\\"\",\n          \"references\": {\n            \"ChipColor\": {\n              \"location\": \"import\",\n              \"path\": \"./interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the color for the component.\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"grey\\\"\"\n      },\n      \"dismissible\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"deprecated\",\n              \"text\": \"use `closable` instead.\"\n            }],\n          \"text\": \"When `true`, a close button is added to the component.\"\n        },\n        \"attribute\": \"dismissible\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"closable\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, a close button is added to the component.\"\n        },\n        \"attribute\": \"closable\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"dismissLabel\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"Close\\\"\"\n            }],\n          \"text\": \"Accessible name for the component's close button.\"\n        },\n        \"attribute\": \"dismiss-label\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.close\"\n      },\n      \"icon\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies an icon to display.\"\n        },\n        \"attribute\": \"icon\",\n        \"reflect\": true\n      },\n      \"iconFlipRtl\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, the icon will be flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n        },\n        \"attribute\": \"icon-flip-rtl\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"scale\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Scale\",\n          \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n          \"references\": {\n            \"Scale\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the size of the component.\"\n        },\n        \"attribute\": \"scale\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"m\\\"\"\n      },\n      \"value\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"any\",\n          \"resolved\": \"any\",\n          \"references\": {}\n        },\n        \"required\": true,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The component's value.\"\n        },\n        \"attribute\": \"value\",\n        \"reflect\": false\n      },\n      \"closed\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, hides the component.\"\n        },\n        \"attribute\": \"closed\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"calciteChipDismiss\",\n        \"name\": \"calciteChipDismiss\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the dismiss button is clicked.\\n\\n**Note:**: The `el` event payload props is deprecated, please use the event's `target`/`currentTarget` instead.\"\n        },\n        \"complexType\": {\n          \"original\": \"DeprecatedEventPayload\",\n          \"resolved\": \"any\",\n          \"references\": {\n            \"DeprecatedEventPayload\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"setFocus\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Sets focus on the component.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"dismissible\",\n        \"methodName\": \"handleDismissible\"\n      }, {\n        \"propName\": \"closable\",\n        \"methodName\": \"handleClosable\"\n      }];\n  }\n}\n"],"version":3}
{"file":"pci-calculator.entry.cjs.js","mappings":";;;;;;;;;;;;AAAA,MAAM,gBAAgB,GAAG,ufAAuf;;MC8BngB,aAAa;;;yBAuBC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;EAwC9B,MAAM;IACJ,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,cAAc,GAAG,cAAc,CAAC;IACvE,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,GAAG,mBAAmB,GAAG,cAAc,CAAC;IAE9E,QACEA,QAACC,UAAI,QAEHD,iBAAK,KAAK,EAAE,QAAQ,IAClBA,iBAAK,KAAK,EAAC,eAAe,IACxBA,2BAAe,KAAK,EAAC,eAAe,2CAEjC,IAAI,CAAC,qBAAqB,EAAE,CACf,CACZ,EACNA,qBACG,IAAI,CAAC,mBAAmB,EAAE,CACvB,CACF,EAENA,iBAAK,KAAK,EAAE,WAAW,IACrBA,iBAAK,KAAK,EAAC,gBAAgB,IACzBA,4BACE,UAAU,EAAC,OAAO,EAClB,KAAK,EAAC,WAAW,EACjB,IAAI,EAAC,GAAG,EACR,OAAO,EAAE,MAAM,IAAI,CAAC,oBAAoB,EAAE,EAC1C,KAAK,EAAC,GAAG,EACT,IAAI,EAAC,EAAE,GACP,CACE,EACNA,+BACE,KAAK,EAAC,4BAA4B,EAClC,qBAAqB,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GACzD,CACE,CACD,EACP;GACH;;;;;;;;;;;;;EAeS,qBAAqB;IAC7B,QACEA,iBAAK,KAAK,EAAC,cAAc,IACvBA,2BACE,KAAK,EAAC,YAAY,EAClB,GAAG,EAAE,CAAC,EAAE,OAAO,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAA,EAAE,GAC/C,EACFA,4BACE,UAAU,EAAC,OAAO,EAClB,IAAI,EAAC,aAAa,EAClB,OAAO,EAAE,MAAM,IAAI,CAAC,oBAAoB,EAAE,EAC1C,KAAK,EAAC,GAAG,EACT,IAAI,EAAC,EAAE,GACP,CACE,EACN;GACH;;;;;;;;EASS,mBAAmB;IAC3B,QACEA,4BACE,OAAO,EACL,MAAM,IAAI,CAAC,aAAa,CACtB,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAChC,oBAE0B,EAC/B;GACH;;;;;;EAOS,oBAAoB;IAC5B,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;GAC1C;;;;;;;;EASS,eAAe,CACvB,GAAgB;IAEhB,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC5B,IAAI,CAAC,oBAAoB,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;GAC9H;;;;;;;;;;EAWS,aAAa,CACrB,kBAA0B;IAE1B,MAAM,GAAG,GAAGE,qBAAY,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;IACnD,MAAM,MAAM,GAAG,GAAG,IAAI,EAAE,GAAG,QAAQ;MACjC,GAAG,IAAI,EAAE,GAAG,SAAS;QACnB,GAAG,IAAI,EAAE,GAAG,WAAW;UACrB,GAAG,IAAI,EAAE,GAAG,MAAM;YAChB,GAAG,IAAI,EAAE,GAAG,MAAM;cAChB,GAAG,IAAI,EAAE,GAAG,cAAc,GAAG,MAAM,CAAC;IAE9C,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;IAC3B,OAAO,CAAC,GAAG,CAAC,WAAW,MAAM,EAAE,CAAC,CAAA;IAChC,KAAK,CAAC,+BAA+B,CAAC,CAAC;GACxC;;;;;;;","names":["h","Host","calculatePCI"],"sources":["./src/components/pci-calculator/pci-calculator.css?tag=pci-calculator&encapsulation=shadow","./src/components/pci-calculator/pci-calculator.tsx"],"sourcesContent":["/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n:host {\r\n  display: block;\r\n  --calcite-label-margin-bottom: 0;\r\n}\r\n\r\n.label-display {\r\n  display: block;\r\n  padding-bottom: 1rem;\r\n}\r\n\r\n.display-flex {\r\n  display: flex;\r\n}\r\n\r\n.display-grid {\r\n  display: grid;\r\n}\r\n\r\n.display-table {\r\n  display: table;\r\n}\r\n\r\n.display-inline-table {\r\n  display: inline-table;\r\n}\r\n\r\n.display-none {\r\n  display: none;\r\n}\r\n\r\n.display-inherit {\r\n  display: inherit;\r\n}\r\n\r\n.padding-top-1 {\r\n  padding-top: 1rem;\r\n}\r\n\r\n.main-input {\r\n  width: 300px;\r\n  padding-inline-end: 1rem;\r\n}\r\n\r\n.float-end {\r\n  float: inline-end;\r\n}\r\n\r\n.position-relative {\r\n  position: relative;\r\n}\r\n\r\n.position-right {\r\n  position: absolute;\r\n  right: 0px;\r\n}\r\n","/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// This is a demo component for internal use only.\r\n// It may eventually live somewhere else and doesn't really need to be a component.\r\n// The main code will be whats in the supporting util file...it will be used by a survey123 form.\r\n// It has been requested that we have a simple way to demo and test the functionality.\r\n// I am putting here now just to keep together with other current work.\r\n\r\nimport { Component, Element, Host, h, State, VNode } from '@stencil/core';\r\nimport { calculatePCI } from '../../utils/pciUtils';\r\n\r\n@Component({\r\n  tag: 'pci-calculator',\r\n  styleUrl: 'pci-calculator.css',\r\n  shadow: true,\r\n})\r\nexport class PciCalculator {\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Host element access\r\n  //\r\n  //--------------------------------------------------------------------------\r\n  @Element() el: HTMLPciCalculatorElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  State (internal)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Boolean: Show/Hide the calculate deduct value UI\r\n   */\r\n  @State() showAddDeduct = false;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * HTMLCalciteInputElement: The html element for setting deduct values\r\n   */\r\n  protected _deductValuesElement: HTMLCalciteInputElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Watch handlers\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Methods (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Events (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (lifecycle)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Renders the component.\r\n   */\r\n  render() {\r\n    const pciClass = !this.showAddDeduct ? \"display-grid\" : \"display-none\";\r\n    const deductClass = this.showAddDeduct ? \"position-relative\" : \"display-none\";\r\n\r\n    return (\r\n      <Host>\r\n        {/* PCI */}\r\n        <div class={pciClass}>\r\n          <div class=\"label-display\">\r\n            <calcite-label class=\"label-display\">\r\n              Enter comma delimited deduct values\r\n              {this._getDeductValuesInput()}\r\n            </calcite-label>\r\n          </div>\r\n          <div>\r\n            {this._getCalculateButton()}\r\n          </div>\r\n        </div>\r\n        {/* Deduct */}\r\n        <div class={deductClass}>\r\n          <div class=\"position-right\">\r\n            <calcite-action\r\n              appearance='clear'\r\n              class=\"float-end\"\r\n              icon=\"x\"\r\n              onClick={() => this._toggleShowAddDeduct()}\r\n              scale=\"s\"\r\n              text=''\r\n            />\r\n          </div>\r\n          <deduct-calculator\r\n            class=\"display-grid padding-top-1\"\r\n            onDeductValueComplete={(evt) => this._addDeductValue(evt)}\r\n          />\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Load the calculate deduct values calculate UI\r\n   *\r\n   * @returns calculate deduct value UI node\r\n   *\r\n   * @protected\r\n   */\r\n  protected _getDeductValuesInput(): VNode {\r\n    return (\r\n      <div class=\"display-flex\">\r\n        <calcite-input\r\n          class=\"main-input\"\r\n          ref={(el) => { this._deductValuesElement = el }}\r\n        />\r\n        <calcite-action\r\n          appearance='clear'\r\n          icon=\"plus-circle\"\r\n          onClick={() => this._toggleShowAddDeduct()}\r\n          scale=\"s\"\r\n          text=''\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Add the calculate PCI button\r\n   *\r\n   * @returns calculate PCI button\r\n   *\r\n   * @protected\r\n   */\r\n  protected _getCalculateButton(): VNode {\r\n    return (\r\n      <calcite-button\r\n        onClick={\r\n          () => this._calculatePCI(\r\n            this._deductValuesElement.value\r\n          )\r\n        }\r\n      >Calculate PCI</calcite-button>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Toggle the value that controls show/hide of the deduct value UI\r\n   *\r\n   * @protected\r\n   */\r\n  protected _toggleShowAddDeduct(): void {\r\n    this.showAddDeduct = !this.showAddDeduct;\r\n  }\r\n\r\n  /**\r\n   * Hide the calculate deduct value UI and add the newly calculated value\r\n   *\r\n   * @param event the event from the calculate deduct value control\r\n   *\r\n   * @protected\r\n   */\r\n  protected _addDeductValue(\r\n    evt: CustomEvent\r\n  ): void {\r\n    this._toggleShowAddDeduct();\r\n    this._deductValuesElement.value += Math.abs(parseFloat(this._deductValuesElement.value)) > 0 ? `,${evt.detail}` : evt.detail;\r\n  }\r\n\r\n  /**\r\n   * Calculate the PCI value based on the ASTM methodology\r\n   *\r\n   * @param deductValuesString string with comma delimited numbers\r\n   * Survery123 does not accept array type arguments for passing to scripts.\r\n   * The string will be parsed within the script that will be consumed by Survey123\r\n   *\r\n   * @protected\r\n   */\r\n  protected _calculatePCI(\r\n    deductValuesString: string\r\n  ): void {\r\n    const pci = calculatePCI(deductValuesString, true);\r\n    const rating = pci <= 10 ? \"Failed\" :\r\n      pci <= 25 ? \"Serious\" :\r\n        pci <= 40 ? \"Very Poor\" :\r\n          pci <= 55 ? \"Poor\" :\r\n            pci <= 70 ? \"Fair\" :\r\n              pci <= 85 ? \"Satisfactory\" : \"Good\";\r\n\r\n    console.log(`PCI: ${pci}`);\r\n    console.log(`Rating: ${rating}`)\r\n    alert(\"See debug console for results\");\r\n  }\r\n\r\n}\r\n"],"version":3}
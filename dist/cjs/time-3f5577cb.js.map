{"file":"time-3f5577cb.js","mappings":"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","names":["locale","getSupportedNumberingSystem","getSupportedLocale","isValidNumber"],"sources":["./node_modules/@esri/calcite-components/dist/collection/utils/time.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nimport { isValidNumber } from \"./number\";\nimport { getSupportedLocale, getSupportedNumberingSystem } from \"./locale\";\nexport const maxTenthForMinuteAndSecond = 5;\nfunction createLocaleDateTimeFormatter(locale, numberingSystem, includeSeconds = true) {\n  try {\n    const options = {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      timeZone: \"UTC\",\n      numberingSystem: getSupportedNumberingSystem(numberingSystem)\n    };\n    if (includeSeconds) {\n      options.second = \"2-digit\";\n    }\n    return new Intl.DateTimeFormat(getSupportedLocale(locale), options);\n  }\n  catch (error) {\n    throw new Error(`Invalid locale supplied while attempting to create a DateTime formatter: ${locale}`);\n  }\n}\nexport function formatTimePart(number) {\n  const numberAsString = number.toString();\n  return number >= 0 && number <= 9 ? numberAsString.padStart(2, \"0\") : numberAsString;\n}\nexport function formatTimeString(value) {\n  if (!isValidTime(value)) {\n    return null;\n  }\n  const [hourString, minuteString, secondString] = value.split(\":\");\n  const hour = formatTimePart(parseInt(hourString));\n  const minute = formatTimePart(parseInt(minuteString));\n  if (secondString) {\n    const second = formatTimePart(parseInt(secondString));\n    return `${hour}:${minute}:${second}`;\n  }\n  return `${hour}:${minute}`;\n}\nexport function getLocaleHourCycle(locale, numberingSystem) {\n  const formatter = createLocaleDateTimeFormatter(locale, numberingSystem);\n  const parts = formatter.formatToParts(new Date(Date.UTC(0, 0, 0, 0, 0, 0)));\n  return getLocalizedTimePart(\"meridiem\", parts) ? \"12\" : \"24\";\n}\nfunction getLocalizedTimePart(part, parts) {\n  var _a, _b, _c, _d;\n  if (!part || !parts) {\n    return null;\n  }\n  if (part === \"hourSuffix\") {\n    const hourIndex = parts.indexOf(parts.find(({ type }) => type === \"hour\"));\n    const minuteIndex = parts.indexOf(parts.find(({ type }) => type === \"minute\"));\n    const hourSuffix = parts[hourIndex + 1];\n    return hourSuffix && hourSuffix.type === \"literal\" && minuteIndex - hourIndex === 2\n      ? ((_a = hourSuffix.value) === null || _a === void 0 ? void 0 : _a.trim()) || null\n      : null;\n  }\n  if (part === \"minuteSuffix\") {\n    const minuteIndex = parts.indexOf(parts.find(({ type }) => type === \"minute\"));\n    const secondIndex = parts.indexOf(parts.find(({ type }) => type === \"second\"));\n    const minuteSuffix = parts[minuteIndex + 1];\n    return minuteSuffix && minuteSuffix.type === \"literal\" && secondIndex - minuteIndex === 2\n      ? ((_b = minuteSuffix.value) === null || _b === void 0 ? void 0 : _b.trim()) || null\n      : null;\n  }\n  if (part === \"secondSuffix\") {\n    const secondIndex = parts.indexOf(parts.find(({ type }) => type === \"second\"));\n    const secondSuffix = parts[secondIndex + 1];\n    return secondSuffix && secondSuffix.type === \"literal\" ? ((_c = secondSuffix.value) === null || _c === void 0 ? void 0 : _c.trim()) || null : null;\n  }\n  return ((_d = parts.find(({ type }) => (part == \"meridiem\" ? type === \"dayPeriod\" : type === part))) === null || _d === void 0 ? void 0 : _d.value) || null;\n}\nexport function getMeridiem(hour) {\n  if (!isValidNumber(hour)) {\n    return null;\n  }\n  const hourAsNumber = parseInt(hour);\n  return hourAsNumber >= 0 && hourAsNumber <= 11 ? \"AM\" : \"PM\";\n}\nexport function isValidTime(value) {\n  if (!value || value.startsWith(\":\") || value.endsWith(\":\")) {\n    return false;\n  }\n  const splitValue = value.split(\":\");\n  const validLength = splitValue.length > 1 && splitValue.length < 4;\n  if (!validLength) {\n    return false;\n  }\n  const [hour, minute, second] = splitValue;\n  const hourAsNumber = parseInt(splitValue[0]);\n  const minuteAsNumber = parseInt(splitValue[1]);\n  const secondAsNumber = parseInt(splitValue[2]);\n  const hourValid = isValidNumber(hour) && hourAsNumber >= 0 && hourAsNumber < 24;\n  const minuteValid = isValidNumber(minute) && minuteAsNumber >= 0 && minuteAsNumber < 60;\n  const secondValid = isValidNumber(second) && secondAsNumber >= 0 && secondAsNumber < 60;\n  if ((hourValid && minuteValid && !second) || (hourValid && minuteValid && secondValid)) {\n    return true;\n  }\n}\nfunction isValidTimePart(value, part) {\n  if (part === \"meridiem\") {\n    return value === \"AM\" || value === \"PM\";\n  }\n  if (!isValidNumber(value)) {\n    return false;\n  }\n  const valueAsNumber = Number(value);\n  return part === \"hour\" ? valueAsNumber >= 0 && valueAsNumber < 24 : valueAsNumber >= 0 && valueAsNumber < 60;\n}\nexport function localizeTimePart({ value, part, locale, numberingSystem }) {\n  if (!isValidTimePart(value, part)) {\n    return;\n  }\n  const valueAsNumber = parseInt(value);\n  const date = new Date(Date.UTC(0, 0, 0, part === \"hour\" ? valueAsNumber : part === \"meridiem\" ? (value === \"AM\" ? 0 : 12) : 0, part === \"minute\" ? valueAsNumber : 0, part === \"second\" ? valueAsNumber : 0));\n  if (!date) {\n    return;\n  }\n  const formatter = createLocaleDateTimeFormatter(locale, numberingSystem);\n  const parts = formatter.formatToParts(date);\n  return getLocalizedTimePart(part, parts);\n}\nexport function localizeTimeString({ value, locale, numberingSystem, includeSeconds = true }) {\n  if (!isValidTime(value)) {\n    return null;\n  }\n  const { hour, minute, second = \"0\" } = parseTimeString(value);\n  const dateFromTimeString = new Date(Date.UTC(0, 0, 0, parseInt(hour), parseInt(minute), parseInt(second)));\n  const formatter = createLocaleDateTimeFormatter(locale, numberingSystem, includeSeconds);\n  return (formatter === null || formatter === void 0 ? void 0 : formatter.format(dateFromTimeString)) || null;\n}\nexport function localizeTimeStringToParts({ value, locale, numberingSystem }) {\n  if (!isValidTime(value)) {\n    return null;\n  }\n  const { hour, minute, second = \"0\" } = parseTimeString(value);\n  const dateFromTimeString = new Date(Date.UTC(0, 0, 0, parseInt(hour), parseInt(minute), parseInt(second)));\n  if (dateFromTimeString) {\n    const formatter = createLocaleDateTimeFormatter(locale, numberingSystem);\n    const parts = formatter.formatToParts(dateFromTimeString);\n    return {\n      localizedHour: getLocalizedTimePart(\"hour\", parts),\n      localizedHourSuffix: getLocalizedTimePart(\"hourSuffix\", parts),\n      localizedMinute: getLocalizedTimePart(\"minute\", parts),\n      localizedMinuteSuffix: getLocalizedTimePart(\"minuteSuffix\", parts),\n      localizedSecond: getLocalizedTimePart(\"second\", parts),\n      localizedSecondSuffix: getLocalizedTimePart(\"secondSuffix\", parts),\n      localizedMeridiem: getLocalizedTimePart(\"meridiem\", parts)\n    };\n  }\n  return null;\n}\nexport function getTimeParts({ value, locale, numberingSystem }) {\n  if (!isValidTime(value)) {\n    return null;\n  }\n  const { hour, minute, second = \"0\" } = parseTimeString(value);\n  const dateFromTimeString = new Date(Date.UTC(0, 0, 0, parseInt(hour), parseInt(minute), parseInt(second)));\n  if (dateFromTimeString) {\n    const formatter = createLocaleDateTimeFormatter(locale, numberingSystem);\n    const parts = formatter.formatToParts(dateFromTimeString);\n    return parts;\n  }\n  return null;\n}\nexport function parseTimeString(value) {\n  if (isValidTime(value)) {\n    const [hour, minute, second] = value.split(\":\");\n    return {\n      hour,\n      minute,\n      second\n    };\n  }\n  return {\n    hour: null,\n    minute: null,\n    second: null\n  };\n}\n"],"version":3}
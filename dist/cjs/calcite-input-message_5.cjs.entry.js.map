{"file":"calcite-input-message.calcite-notice.map-select-tools.pdf-download.refine-selection.entry.cjs.js","mappings":"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","names":["setRequestedIcon","getElementProp","h","Host","StatusIcons","connectConditionalSlotComponent","disconnectConditionalSlotComponent","getSlotted","EWorkflowType","ESelectionMode","ERefineMode","loadModules","goToSelection","state","ESketchType","highlightFeatures","queryObjectIds","getQueryGeoms","getLocaleComponentStrings","queryFeaturesByID","exportCSV","pdfUtils","utils.getSelectionIds","utils.getTotal"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/input-message/interfaces.js","./node_modules/@esri/calcite-components/dist/collection/components/input-message/input-message.css?tag=calcite-input-message&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/input-message/input-message.js","./node_modules/@esri/calcite-components/dist/collection/components/notice/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/notice/notice.css?tag=calcite-notice&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/notice/notice.js","./src/components/map-select-tools/map-select-tools.css?tag=map-select-tools","./src/components/map-select-tools/map-select-tools.tsx","./src/utils/pdfUtils.ts","./src/components/pdf-download/pdf-download.css?tag=pdf-download&encapsulation=shadow","./src/components/pdf-download/pdf-download.tsx","./src/components/refine-selection/refine-selection.css?tag=refine-selection","./src/components/refine-selection/refine-selection.tsx"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nexport var StatusIconDefaults;\n(function (StatusIconDefaults) {\n  StatusIconDefaults[\"valid\"] = \"check-circle\";\n  StatusIconDefaults[\"invalid\"] = \"exclamation-mark-triangle\";\n  StatusIconDefaults[\"idle\"] = \"information\";\n})(StatusIconDefaults || (StatusIconDefaults = {}));\n","/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-input-message-spacing-value: The top margin spacing above the component.\n*/\n:host([active][scale=m]),\n:host([active][scale=l]) {\n  --calcite-input-message-spacing-value: 0.25rem;\n}\n\n:host {\n  visibility: hidden;\n  box-sizing: border-box;\n  display: flex;\n  block-size: 0px;\n  inline-size: 100%;\n  align-items: center;\n  font-weight: var(--calcite-font-weight-medium);\n  color: var(--calcite-ui-text-1);\n  opacity: 0;\n  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n\n:host([active]) {\n  visibility: visible;\n  block-size: auto;\n  opacity: 1;\n  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n\n:host([active][scale=m]),\n:host([active][scale=l]) {\n  margin-block-start: var(--calcite-input-message-spacing-value);\n}\n\n:host([calcite-hydrated-hidden]) {\n  visibility: hidden !important;\n  pointer-events: none;\n}\n\n.calcite-input-message-icon {\n  pointer-events: none;\n  display: inline-flex;\n  flex-shrink: 0;\n  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  margin-inline-end: 0.5rem;\n}\n\n:host([status=invalid]) .calcite-input-message-icon {\n  color: var(--calcite-ui-danger);\n}\n\n:host([status=warning]) .calcite-input-message-icon {\n  color: var(--calcite-ui-warning);\n}\n\n:host([status=valid]) .calcite-input-message-icon {\n  color: var(--calcite-ui-success);\n}\n\n:host([status=idle]) .calcite-input-message-icon {\n  color: var(--calcite-ui-brand);\n}\n\n:host([status][active]) {\n  color: var(--calcite-ui-text-1);\n}\n\n:host([status][scale=s]) {\n  font-size: var(--calcite-font-size--3);\n  line-height: 0.75rem;\n}\n\n:host([status][scale=m]) {\n  margin-block-start: 0.25rem;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1rem;\n}\n\n:host([status][scale=l]) {\n  margin-block-start: 0.25rem;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1rem;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getElementProp, setRequestedIcon } from \"../../utils/dom\";\nimport { StatusIconDefaults } from \"./interfaces\";\n/**\n * @slot - A slot for adding text.\n */\nexport class InputMessage {\n  constructor() {\n    //--------------------------------------------------------------------------\n    //\n    //  Properties\n    //\n    //--------------------------------------------------------------------------\n    /** When `true`, the component is active. */\n    this.active = false;\n    /** Specifies the size of the component. */\n    this.scale = \"m\";\n    /** Specifies the status of the input field, which determines message and icons. */\n    this.status = \"idle\";\n  }\n  handleIconEl() {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  connectedCallback() {\n    this.status = getElementProp(this.el, \"status\", this.status);\n    this.scale = getElementProp(this.el, \"scale\", this.scale);\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n  render() {\n    const hidden = !this.active;\n    return (h(Host, { \"calcite-hydrated-hidden\": hidden }, this.renderIcon(this.requestedIcon), h(\"slot\", null)));\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  renderIcon(iconName) {\n    if (iconName) {\n      return h(\"calcite-icon\", { class: \"calcite-input-message-icon\", icon: iconName, scale: \"s\" });\n    }\n  }\n  static get is() { return \"calcite-input-message\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"input-message.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"input-message.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"active\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, the component is active.\"\n        },\n        \"attribute\": \"active\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"icon\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean | string\",\n          \"resolved\": \"boolean | string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies an icon to display.\"\n        },\n        \"attribute\": \"icon\",\n        \"reflect\": true\n      },\n      \"scale\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"Scale\",\n          \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n          \"references\": {\n            \"Scale\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the size of the component.\"\n        },\n        \"attribute\": \"scale\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"m\\\"\"\n      },\n      \"status\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"Status\",\n          \"resolved\": \"\\\"idle\\\" | \\\"invalid\\\" | \\\"valid\\\"\",\n          \"references\": {\n            \"Status\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the status of the input field, which determines message and icons.\"\n        },\n        \"attribute\": \"status\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"idle\\\"\"\n      },\n      \"type\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"\\\"default\\\"\",\n          \"resolved\": \"\\\"default\\\"\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"deprecated\",\n              \"text\": \"The `\\\"floating\\\"` type is no longer supported.\"\n            }],\n          \"text\": \"Specifies the appearance of a slotted message - `\\\"default\\\"` (displayed under the component), or `\\\"floating\\\"` (positioned absolutely under the component).\"\n        },\n        \"attribute\": \"type\",\n        \"reflect\": true\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"status\",\n        \"methodName\": \"handleIconEl\"\n      }, {\n        \"propName\": \"icon\",\n        \"methodName\": \"handleIconEl\"\n      }];\n  }\n}\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nexport const TEXT = {\n  close: \"Close\"\n};\nexport const SLOTS = {\n  title: \"title\",\n  message: \"message\",\n  link: \"link\",\n  actionsEnd: \"actions-end\"\n};\nexport const CSS = {\n  actionsEnd: \"actions-end\",\n  close: \"notice-close\",\n  container: \"container\",\n  content: \"notice-content\",\n  icon: \"notice-icon\"\n};\n","/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-notice-width: The width of the component.\n*/\n:host([scale=s]) {\n  --calcite-notice-spacing-token-small: 0.5rem;\n  --calcite-notice-spacing-token-large: 0.75rem;\n}\n:host([scale=s]) .container slot[name=title]::slotted(*), \n:host([scale=s]) .container *::slotted([slot=title]) {\n  margin-block: 0.125rem;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1.375;\n}\n:host([scale=s]) .container slot[name=message]::slotted(*), \n:host([scale=s]) .container *::slotted([slot=message]) {\n  margin-block: 0.125rem;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1.375;\n}\n:host([scale=s]) ::slotted(calcite-link) {\n  margin-block: 0.125rem;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1.375;\n}\n:host([scale=s]) .notice-close {\n  padding: 0.5rem;\n}\n\n:host([scale=m]) {\n  --calcite-notice-spacing-token-small: 0.75rem;\n  --calcite-notice-spacing-token-large: 1rem;\n}\n:host([scale=m]) .container slot[name=title]::slotted(*), \n:host([scale=m]) .container *::slotted([slot=title]) {\n  margin-block: 0.125rem;\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.375;\n}\n:host([scale=m]) .container slot[name=message]::slotted(*), \n:host([scale=m]) .container *::slotted([slot=message]) {\n  margin-block: 0.125rem;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1.375;\n}\n:host([scale=m]) ::slotted(calcite-link) {\n  margin-block: 0.125rem;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1.375;\n}\n\n:host([scale=l]) {\n  --calcite-notice-spacing-token-small: 1rem;\n  --calcite-notice-spacing-token-large: 1.25rem;\n}\n:host([scale=l]) .container slot[name=title]::slotted(*), \n:host([scale=l]) .container *::slotted([slot=title]) {\n  margin-block: 0.125rem;\n  font-size: var(--calcite-font-size-1);\n  line-height: 1.375;\n}\n:host([scale=l]) .container slot[name=message]::slotted(*), \n:host([scale=l]) .container *::slotted([slot=message]) {\n  margin-block: 0.125rem;\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.375;\n}\n:host([scale=l]) ::slotted(calcite-link) {\n  margin-block: 0.125rem;\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.375;\n}\n\n:host([width=auto]) {\n  --calcite-notice-width: auto;\n}\n\n:host([width=half]) {\n  --calcite-notice-width: 50%;\n}\n\n:host([width=full]) {\n  --calcite-notice-width: 100%;\n}\n\n:host {\n  margin-inline: auto;\n  display: none;\n  max-inline-size: 100%;\n  align-items: center;\n  inline-size: var(--calcite-notice-width);\n}\n\n.container {\n  pointer-events: none;\n  margin-block: 0px;\n  box-sizing: border-box;\n  display: none;\n  inline-size: 100%;\n  background-color: var(--calcite-ui-foreground-1);\n  opacity: 0;\n  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  max-block-size: 0;\n  text-align: start;\n  border-inline-start: 0px solid;\n  box-shadow: 0 0 0 0 transparent;\n}\n\n.notice-close {\n  outline-color: transparent;\n}\n.notice-close:focus {\n  outline: 2px solid var(--calcite-ui-brand);\n  outline-offset: -2px;\n}\n\n:host {\n  display: flex;\n}\n\n:host([open]) .container {\n  pointer-events: auto;\n  display: flex;\n  max-block-size: 100%;\n  align-items: center;\n  border-width: 2px;\n  opacity: 1;\n  --tw-shadow: 0 4px 8px -1px rgba(0, 0, 0, 0.08), 0 2px 4px -1px rgba(0, 0, 0, 0.04);\n  --tw-shadow-colored: 0 4px 8px -1px var(--tw-shadow-color), 0 2px 4px -1px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n\n.container slot[name=title]::slotted(*), \n.container *::slotted([slot=title]) {\n  margin: 0px;\n  font-weight: var(--calcite-font-weight-medium);\n  color: var(--calcite-ui-text-1);\n}\n\n.container slot[name=message]::slotted(*), \n.container *::slotted([slot=message]) {\n  margin: 0px;\n  display: inline;\n  font-weight: var(--calcite-font-weight-normal);\n  color: var(--calcite-ui-text-2);\n  margin-inline-end: var(--calcite-notice-spacing-token-small);\n}\n\n.notice-content {\n  box-sizing: border-box;\n  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  padding-inline: var(--calcite-notice-spacing-token-large);\n  flex: 0 0 auto;\n  display: flex;\n  min-inline-size: 0px;\n  flex-direction: column;\n  overflow-wrap: break-word;\n  flex: 1 1 0;\n  padding-block: var(--calcite-notice-spacing-token-small);\n  padding-inline: 0 var(--calcite-notice-spacing-token-small);\n}\n.notice-content:first-of-type:not(:only-child) {\n  padding-inline-start: var(--calcite-notice-spacing-token-large);\n}\n.notice-content:only-of-type {\n  padding-block: var(--calcite-notice-spacing-token-small);\n  padding-inline: var(--calcite-notice-spacing-token-large);\n}\n\n.notice-icon {\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  padding-block: var(--calcite-notice-spacing-token-small);\n  padding-inline: var(--calcite-notice-spacing-token-large);\n  flex: 0 0 auto;\n}\n\n.notice-close {\n  display: flex;\n  cursor: pointer;\n  align-items: center;\n  align-self: stretch;\n  border-style: none;\n  background-color: transparent;\n  color: var(--calcite-ui-text-3);\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n  box-sizing: border-box;\n  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  padding-block: var(--calcite-notice-spacing-token-small);\n  padding-inline: var(--calcite-notice-spacing-token-large);\n  flex: 0 0 auto;\n  -webkit-appearance: none;\n}\n.notice-close:hover,  .notice-close:focus {\n  background-color: var(--calcite-ui-foreground-2);\n  color: var(--calcite-ui-text-1);\n}\n.notice-close:active {\n  background-color: var(--calcite-ui-foreground-3);\n}\n\n.actions-end {\n  display: flex;\n  align-self: stretch;\n}\n\n:host([color=blue]) .container {\n  border-color: var(--calcite-ui-brand);\n}\n:host([color=blue]) .container .notice-icon {\n  color: var(--calcite-ui-brand);\n}\n\n:host([color=red]) .container {\n  border-color: var(--calcite-ui-danger);\n}\n:host([color=red]) .container .notice-icon {\n  color: var(--calcite-ui-danger);\n}\n\n:host([color=yellow]) .container {\n  border-color: var(--calcite-ui-warning);\n}\n:host([color=yellow]) .container .notice-icon {\n  color: var(--calcite-ui-warning);\n}\n\n:host([color=green]) .container {\n  border-color: var(--calcite-ui-success);\n}\n:host([color=green]) .container .notice-icon {\n  color: var(--calcite-ui-success);\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nimport { h } from \"@stencil/core\";\nimport { CSS, SLOTS, TEXT } from \"./resources\";\nimport { StatusIcons } from \"../alert/interfaces\";\nimport { getSlotted, setRequestedIcon } from \"../../utils/dom\";\nimport { connectConditionalSlotComponent, disconnectConditionalSlotComponent } from \"../../utils/conditionalSlot\";\n/**\n * Notices are intended to be used to present users with important-but-not-crucial contextual tips or copy. Because\n * notices are displayed inline, a common use case is displaying them on page-load to present users with short hints or contextual copy.\n * They are optionally dismissible - useful for keeping track of whether or not a user has dismissed the notice. You can also choose not\n * to display a notice on page load and set the \"active\" attribute as needed to contextually provide inline messaging to users.\n */\n/**\n * @slot title - A slot for adding the title.\n * @slot message - A slot for adding the message.\n * @slot link - A slot for adding actions to take, such as: undo, try again, link to page, etc.\n * @slot actions-end - A slot for adding actions to the end of the component. It is recommended to use two or less actions.\n */\nexport class Notice {\n  constructor() {\n    //--------------------------------------------------------------------------\n    //\n    //  Properties\n    //\n    //---------------------------------------------------------------------------\n    /**\n     * When `true`, the component is active.\n     *\n     * @deprecated Use `open` instead.\n     */\n    this.active = false;\n    /** When `true`, the component is visible. */\n    this.open = false;\n    /** The color for the component's top border and icon. */\n    this.color = \"blue\";\n    /**\n     * When `true`, a close button is added to the component.\n     *\n     * @deprecated use `closable` instead.\n     */\n    this.dismissible = false;\n    /** When `true`, a close button is added to the component. */\n    this.closable = false;\n    /**\n     * Accessible name for the close button.\n     *\n     * @default \"Close\"\n     */\n    this.intlClose = TEXT.close;\n    /** Specifies the size of the component. */\n    this.scale = \"m\";\n    /** Specifies the width of the component. */\n    this.width = \"auto\";\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    this.close = () => {\n      this.open = false;\n      this.calciteNoticeClose.emit();\n    };\n  }\n  activeHandler(value) {\n    this.open = value;\n  }\n  openHandler(value) {\n    this.active = value;\n  }\n  handleDismissible(value) {\n    this.closable = value;\n  }\n  handleClosable(value) {\n    this.dismissible = value;\n  }\n  updateRequestedIcon() {\n    this.requestedIcon = setRequestedIcon(StatusIcons, this.icon, this.color);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  connectedCallback() {\n    connectConditionalSlotComponent(this);\n    const isOpen = this.active || this.open;\n    if (isOpen) {\n      this.activeHandler(isOpen);\n      this.openHandler(isOpen);\n    }\n    if (this.dismissible) {\n      this.handleDismissible(this.dismissible);\n    }\n    if (this.closable) {\n      this.handleClosable(this.closable);\n    }\n  }\n  disconnectedCallback() {\n    disconnectConditionalSlotComponent(this);\n  }\n  componentWillLoad() {\n    this.requestedIcon = setRequestedIcon(StatusIcons, this.icon, this.color);\n  }\n  render() {\n    const { el } = this;\n    const closeButton = (h(\"button\", { \"aria-label\": this.intlClose, class: CSS.close, onClick: this.close, ref: (el) => (this.closeButton = el) }, h(\"calcite-icon\", { icon: \"x\", scale: this.scale === \"l\" ? \"m\" : \"s\" })));\n    const hasActionEnd = getSlotted(el, SLOTS.actionsEnd);\n    return (h(\"div\", { class: CSS.container }, this.requestedIcon ? (h(\"div\", { class: CSS.icon }, h(\"calcite-icon\", { icon: this.requestedIcon, scale: this.scale === \"l\" ? \"m\" : \"s\" }))) : null, h(\"div\", { class: CSS.content }, h(\"slot\", { name: SLOTS.title }), h(\"slot\", { name: SLOTS.message }), h(\"slot\", { name: SLOTS.link })), hasActionEnd ? (h(\"div\", { class: CSS.actionsEnd }, h(\"slot\", { name: SLOTS.actionsEnd }))) : null, this.closable ? closeButton : null));\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n  /** Sets focus on the component. */\n  async setFocus() {\n    const noticeLinkEl = this.el.querySelector(\"calcite-link\");\n    if (!this.closeButton && !noticeLinkEl) {\n      return;\n    }\n    if (noticeLinkEl) {\n      noticeLinkEl.setFocus();\n    }\n    else if (this.closeButton) {\n      this.closeButton.focus();\n    }\n  }\n  static get is() { return \"calcite-notice\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"notice.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"notice.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"active\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"deprecated\",\n              \"text\": \"Use `open` instead.\"\n            }],\n          \"text\": \"When `true`, the component is active.\"\n        },\n        \"attribute\": \"active\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"open\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, the component is visible.\"\n        },\n        \"attribute\": \"open\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"StatusColor\",\n          \"resolved\": \"\\\"blue\\\" | \\\"green\\\" | \\\"red\\\" | \\\"yellow\\\"\",\n          \"references\": {\n            \"StatusColor\": {\n              \"location\": \"import\",\n              \"path\": \"../alert/interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color for the component's top border and icon.\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"blue\\\"\"\n      },\n      \"dismissible\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"deprecated\",\n              \"text\": \"use `closable` instead.\"\n            }],\n          \"text\": \"When `true`, a close button is added to the component.\"\n        },\n        \"attribute\": \"dismissible\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"closable\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, a close button is added to the component.\"\n        },\n        \"attribute\": \"closable\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"icon\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | boolean\",\n          \"resolved\": \"boolean | string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, shows a default recommended icon. Alternatively, pass a Calcite UI Icon name to display a specific icon.\"\n        },\n        \"attribute\": \"icon\",\n        \"reflect\": true\n      },\n      \"intlClose\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"\\\"Close\\\"\"\n            }],\n          \"text\": \"Accessible name for the close button.\"\n        },\n        \"attribute\": \"intl-close\",\n        \"reflect\": false,\n        \"defaultValue\": \"TEXT.close\"\n      },\n      \"scale\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Scale\",\n          \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n          \"references\": {\n            \"Scale\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the size of the component.\"\n        },\n        \"attribute\": \"scale\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"m\\\"\"\n      },\n      \"width\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Width\",\n          \"resolved\": \"\\\"auto\\\" | \\\"full\\\" | \\\"half\\\"\",\n          \"references\": {\n            \"Width\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the width of the component.\"\n        },\n        \"attribute\": \"width\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"auto\\\"\"\n      }\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"calciteNoticeClose\",\n        \"name\": \"calciteNoticeClose\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fired when the component is closed.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calciteNoticeOpen\",\n        \"name\": \"calciteNoticeOpen\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fired when the component is opened.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"setFocus\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Sets focus on the component.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"active\",\n        \"methodName\": \"activeHandler\"\n      }, {\n        \"propName\": \"open\",\n        \"methodName\": \"openHandler\"\n      }, {\n        \"propName\": \"dismissible\",\n        \"methodName\": \"handleDismissible\"\n      }, {\n        \"propName\": \"closable\",\n        \"methodName\": \"handleClosable\"\n      }, {\n        \"propName\": \"icon\",\n        \"methodName\": \"updateRequestedIcon\"\n      }, {\n        \"propName\": \"color\",\n        \"methodName\": \"updateRequestedIcon\"\n      }];\n  }\n}\n","/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.div-visible {\r\n  display: inherit;\r\n}\r\n\r\n.div-visible-search {\r\n  display: flex;\r\n  height: 44px;\r\n  align-items: center;\r\n  padding-bottom: 0;\r\n}\r\n\r\n.div-not-visible {\r\n  display: none;\r\n}\r\n\r\n.padding-bottom-1 {\r\n  padding-bottom: 1rem;\r\n}\r\n\r\n.search-widget {\r\n  width: 100% !important;\r\n  border: 1px solid var(--calcite-ui-border-input);\r\n}\r\n\r\n.w-100 {\r\n  width: 100%;\r\n}\r\n\r\n.w-50 {\r\n  width: 50%;\r\n}\r\n\r\n.search-distance-container {\r\n  padding-top: \"1rem\" !important;\r\n}\r\n\r\n.end-border {\r\n  border-inline-end: 1px solid var(--calcite-ui-border-2);\r\n}\r\n\r\n.search-distance {\r\n  display: flex;\r\n  padding-top: 1rem;\r\n}\r\n","/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { Component, Element, Event, EventEmitter, Host, h, Method, Listen, Prop, State, VNode, Watch } from \"@stencil/core\";\r\nimport { loadModules } from \"../../utils/loadModules\";\r\nimport { highlightFeatures, goToSelection } from \"../../utils/mapViewUtils\";\r\nimport { getQueryGeoms, queryObjectIds } from \"../../utils/queryUtils\";\r\nimport { EWorkflowType, ESelectionMode, ISelectionSet, ERefineMode, ESketchType } from \"../../utils/interfaces\";\r\nimport state from \"../../utils/publicNotificationStore\";\r\nimport MapSelectTools_T9n from \"../../assets/t9n/map-select-tools/resources.json\";\r\nimport { getLocaleComponentStrings } from \"../../utils/locale\";\r\n\r\n@Component({\r\n  tag: \"map-select-tools\",\r\n  styleUrl: \"map-select-tools.css\",\r\n  shadow: false,\r\n})\r\nexport class MapSelectTools {\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Host element access\r\n  //\r\n  //--------------------------------------------------------------------------\r\n  @Element() el: HTMLMapSelectToolsElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * esri/geometry: https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry.html\r\n   */\r\n  @Prop() geometries: __esri.Geometry[];\r\n\r\n  /**\r\n   * boolean: When true a new label is not generated for the stored selection set\r\n   */\r\n  @Prop() isUpdate = false;\r\n\r\n  /**\r\n   * esri/views/View: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\r\n   */\r\n  @Prop() mapView: __esri.MapView;\r\n\r\n  /**\r\n   * utils/interfaces/ISelectionSet: Used to store key details about any selections that have been made.\r\n   */\r\n  @Prop({ reflect: false }) selectionSet: ISelectionSet;\r\n\r\n  /**\r\n   * esri/views/layers/FeatureLayerView: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-layers-FeatureLayerView.html\r\n   */\r\n  @Prop() selectLayerView: __esri.FeatureLayerView;\r\n\r\n  /**\r\n   * boolean: When true the buffer tools will be available for use\r\n   */\r\n  @Prop() showBufferTools = true;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  State (internal)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  @State() _layerSelectChecked: boolean;\r\n\r\n  /**\r\n   * string: Text entered by the end user.\r\n   * Used to search against the locator.\r\n   */\r\n  @State() _searchTerm: string;\r\n\r\n  /**\r\n   * Contains the translations for this component.\r\n   * All UI strings should be defined here.\r\n   */\r\n  @State() protected _translations: typeof MapSelectTools_T9n;\r\n\r\n  /**\r\n   * EWorkflowType: \"SEARCH\", \"SELECT\", \"SKETCH\", \"REFINE\"\r\n   */\r\n  @State() _workflowType: EWorkflowType;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * esri/Graphic: https://developers.arcgis.com/javascript/latest/api-reference/esri-Graphic.html\r\n   */\r\n  protected Graphic: typeof import(\"esri/Graphic\");\r\n\r\n  /**\r\n   * esri/layers/GraphicsLayer: https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GraphicsLayer.html\r\n   */\r\n  protected GraphicsLayer: typeof import(\"esri/layers/GraphicsLayer\");\r\n\r\n  /**\r\n   * esri/widgets/Search: https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Search.html\r\n   */\r\n  protected Search: typeof import(\"esri/widgets/Search\");\r\n\r\n  /**\r\n   * esri/geometry/geometryEngine: https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-geometryEngine.html\r\n   */\r\n  protected _geometryEngine: __esri.geometryEngine;\r\n\r\n  /**\r\n   * esri/geometry: https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry.html\r\n   */\r\n  protected _bufferGeometry: __esri.Geometry;\r\n\r\n  /**\r\n   * esri/layers/GraphicsLayer: https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GraphicsLayer.html\r\n   */\r\n  protected _bufferGraphicsLayer: __esri.GraphicsLayer;\r\n\r\n  /**\r\n   * HTMLBufferToolsElement: The container div for the buffer tools\r\n   */\r\n  protected _bufferTools: HTMLBufferToolsElement;\r\n\r\n  /**\r\n   * HTMLMapDrawToolsElement: The container div for the sketch widget\r\n   */\r\n  protected _drawTools: HTMLMapDrawToolsElement;\r\n\r\n  /**\r\n   * esri/views/layers/FeatureLayerView: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-layers-FeatureLayerView.html\r\n   */\r\n  protected _refineSelectLayers: __esri.FeatureLayerView[];\r\n\r\n  /**\r\n   * HTMLRefineSelectionToolsElement: The container div for the sketch widget\r\n   */\r\n  protected _refineTools: HTMLRefineSelectionToolsElement;\r\n\r\n  /**\r\n   * HTMLElement: The container div for the search widget\r\n   */\r\n  protected _searchElement: HTMLElement;\r\n\r\n  /**\r\n   * An array of objects representing the results of search\r\n   */\r\n  protected _searchResult: any;\r\n\r\n  /**\r\n   * esri/widgets/Search: https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Search.html\r\n   */\r\n  protected _searchWidget: __esri.widgetsSearch;\r\n\r\n  /**\r\n   * HTMLCalciteCheckboxElement: The checkbox element that controls if user drawn graphics\r\n   * are used, if checked, to first make a selection on the layer and use the returned geomerties to select from the addressee layer\r\n   */\r\n  protected _selectFromLayerElement: HTMLCalciteCheckboxElement;\r\n\r\n  /**\r\n   * number[]: the oids of the selected features\r\n   */\r\n  protected _selectedIds: number[] = [];\r\n\r\n  /**\r\n   * string: A label to help uniquely identify the selection set\r\n   */\r\n  protected _selectionLabel = \"\";\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Watch handlers\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Called each time the geometries prop is changed.\r\n   *\r\n   * @returns Promise when complete\r\n   */\r\n  @Watch(\"geometries\")\r\n  async watchGeometriesHandler(\r\n    newValue: __esri.Geometry[],\r\n    oldValue: __esri.Geometry[]\r\n  ): Promise<void> {\r\n    if (newValue !== oldValue) {\r\n      if (newValue.length > 0) {\r\n        return this._geomQuery(this.geometries);\r\n      } else if (newValue.length === 0) {\r\n        return this._clearResults(true, true);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called each time the workflowType prop is changed and emits the workflowTypeChange event.\r\n   *\r\n   * @returns Promise when complete\r\n   */\r\n  @Watch(\"_workflowType\")\r\n  async workflowTypeHandler(\r\n    newValue: EWorkflowType,\r\n    oldValue: EWorkflowType\r\n  ): Promise<void> {\r\n    if (newValue !== oldValue) {\r\n      this.mapView.popup.autoOpenEnabled = [\"SELECT\", \"SKETCH\", \"REFINE\"].indexOf(newValue) < 0;\r\n      this.workflowTypeChange.emit(newValue);\r\n    }\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Methods (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Clear any selection results\r\n   *\r\n   * @returns Promise when the results have been cleared\r\n   */\r\n  @Method()\r\n  async clearSelection(): Promise<void> {\r\n    return this._clearResults();\r\n  }\r\n\r\n  /**\r\n   * Get the new selection set\r\n   *\r\n   * @returns Promise with the new selection set\r\n   */\r\n  @Method()\r\n  async getSelection(): Promise<ISelectionSet> {\r\n    return {\r\n      id: this.isUpdate ? this.selectionSet.id : Date.now(),\r\n      workflowType: this._workflowType,\r\n      searchResult: this._searchResult,\r\n      buffer: this._bufferGeometry,\r\n      distance: this._bufferTools.distance,\r\n      download: true,\r\n      unit: this._bufferTools.unit,\r\n      label: this._workflowType === EWorkflowType.SEARCH ?\r\n        this._selectionLabel : `${this._selectionLabel} ${this._bufferTools.distance} ${this._bufferTools.unit}`,\r\n      selectedIds: this._selectedIds,\r\n      layerView: this.selectLayerView,\r\n      geometries: this.geometries,\r\n      refineSelectLayers: this._refineTools.layerViews\r\n    } as ISelectionSet;\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Events (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Emitted on demand when the selection set changes.\r\n   *\r\n   */\r\n  @Event() selectionSetChange: EventEmitter<number>;\r\n\r\n  /**\r\n   * Emitted on demand when the sketch type changes.\r\n   *\r\n   */\r\n  @Event() sketchTypeChange: EventEmitter<ESketchType>;\r\n\r\n  /**\r\n   * Emitted on demand when the workflow type changes.\r\n   *\r\n   */\r\n  @Event() workflowTypeChange: EventEmitter<EWorkflowType>;\r\n\r\n  /**\r\n   * Listen to changes in the sketch graphics\r\n   *\r\n   */\r\n  @Listen(\"sketchGraphicsChange\", { target: \"window\" })\r\n  sketchGraphicsChange(event: CustomEvent): void {\r\n    this._updateSelection(EWorkflowType.SKETCH, event.detail, this._translations.sketch);\r\n  }\r\n\r\n  /**\r\n   * Listen to changes in the refine graphics\r\n   *\r\n   */\r\n  @Listen(\"refineSelectionGraphicsChange\", { target: \"window\" })\r\n  refineSelectionGraphicsChange(event: CustomEvent): Promise<void> {\r\n    const graphics = event.detail;\r\n\r\n    this._updateSelection(EWorkflowType.SELECT, graphics, this._translations.select);\r\n    // Using OIDs to avoid issue with points\r\n    const oids = Array.isArray(graphics) ? graphics.map(g => g.attributes[g.layer.objectIdField]) : [];\r\n    return this._highlightFeatures(oids);\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (lifecycle)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * StencilJS: Called once just after the component is first connected to the DOM.\r\n   */\r\n  async componentWillLoad(): Promise<void> {\r\n    await this._getTranslations();\r\n    await this._initModules();\r\n  }\r\n\r\n  /**\r\n   * StencilJS: Called once just after the component is fully loaded and the first render() occurs.\r\n   */\r\n  async componentDidLoad(): Promise<void> {\r\n    return this._init();\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   */\r\n  render(): VNode {\r\n    const searchEnabled = this._workflowType === EWorkflowType.SEARCH;\r\n    const showSearchClass = searchEnabled ? \" div-visible-search\" : \" div-not-visible\";\r\n\r\n    const drawEnabled = this._workflowType === EWorkflowType.SKETCH || this._workflowType === EWorkflowType.SELECT;\r\n    //const showDrawToolsClass = drawEnabled ? \" div-visible\" : \" div-not-visible\";\r\n\r\n    // const selectEnabled = this._workflowType === EWorkflowType.SELECT;\r\n    // const showSelectToolsClass = selectEnabled ? \" div-visible\" : \" div-not-visible\";\r\n\r\n    const showBufferToolsClass = this.showBufferTools ? \"search-distance\" : \"div-not-visible\";\r\n\r\n    const useSelectClass = this._layerSelectChecked && !searchEnabled ? \" div-visible\" : \" div-not-visible\";\r\n    const useDrawClass = !this._layerSelectChecked && !searchEnabled ? \" div-visible\" : \" div-not-visible\";\r\n\r\n    const showLayerChoiceClass = searchEnabled ? \"div-not-visible\" : \"div-visible\";\r\n\r\n    return (\r\n      <Host>\r\n        <div class=\"padding-bottom-1\">\r\n          <calcite-radio-group\r\n            class=\"w-100\"\r\n            onCalciteRadioGroupChange={(evt) => this._workflowChange(evt)}\r\n          >\r\n            <calcite-radio-group-item\r\n              checked={searchEnabled}\r\n              class=\"w-50 end-border\"\r\n              value={EWorkflowType.SEARCH}\r\n            >\r\n              {this._translations.search}\r\n            </calcite-radio-group-item>\r\n            {/* <calcite-radio-group-item\r\n              checked={selectEnabled}\r\n              class=\"w-50 end-border\"\r\n              value={EWorkflowType.SELECT}\r\n            >\r\n              {this._translations.select}\r\n            </calcite-radio-group-item> */}\r\n            <calcite-radio-group-item\r\n              checked={drawEnabled}\r\n              class=\"w-50\"\r\n              value={EWorkflowType.SKETCH}\r\n            >\r\n              {this._translations.sketch}\r\n            </calcite-radio-group-item>\r\n          </calcite-radio-group>\r\n        </div>\r\n        <div class={showSearchClass}>\r\n          <div class=\"search-widget\" ref={(el) => { this._searchElement = el }} />\r\n        </div>\r\n        <div class={showLayerChoiceClass}>\r\n          <calcite-label layout=\"inline\">\r\n            <calcite-checkbox\r\n              onCalciteCheckboxChange={() => this._layerSelectChanged()}\r\n              ref={(el) => this._selectFromLayerElement = el}\r\n            />\r\n            {\"Use layer features\"}\r\n          </calcite-label>\r\n        </div>\r\n        <div class={useDrawClass}>\r\n          <map-draw-tools\r\n            active={true}\r\n            border={true}\r\n            mapView={this.mapView}\r\n            ref={(el) => { this._drawTools = el }}\r\n          />\r\n        </div>\r\n        <div class={useSelectClass}>\r\n          <refine-selection-tools\r\n            active={true}\r\n            border={true}\r\n            layerViews={this._refineSelectLayers}\r\n            mapView={this.mapView}\r\n            mode={ESelectionMode.ADD}\r\n            ref={(el) => { this._refineTools = el }}\r\n            refineMode={ERefineMode.SUBSET}\r\n          />\r\n        </div>\r\n        <calcite-label class={showBufferToolsClass}>\r\n          {this._translations.searchDistance}\r\n          <buffer-tools\r\n            distance={this.selectionSet?.distance}\r\n            geometries={this.geometries}\r\n            onBufferComplete={(evt) => this._bufferComplete(evt)}\r\n            ref={(el) => this._bufferTools = el}\r\n            unit={this.selectionSet?.unit}\r\n          />\r\n        </calcite-label>\r\n        <slot />\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Load esri javascript api modules\r\n   *\r\n   * @returns Promise resolving when function is done\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _initModules(): Promise<void> {\r\n    const [GraphicsLayer, Graphic, Search, geometryEngine] = await loadModules([\r\n      \"esri/layers/GraphicsLayer\",\r\n      \"esri/Graphic\",\r\n      \"esri/widgets/Search\",\r\n      \"esri/geometry/geometryEngine\"\r\n    ]);\r\n    this.GraphicsLayer = GraphicsLayer;\r\n    this.Graphic = Graphic;\r\n    this.Search = Search;\r\n    this._geometryEngine = geometryEngine;\r\n  }\r\n\r\n  /**\r\n   * Initialize the graphics layer, selection set, and search widget\r\n   *\r\n   * @returns Promise when the operation has completed\r\n   */\r\n  protected async _init(): Promise<void> {\r\n    this._initGraphicsLayer();\r\n    this._initSelectionSet();\r\n    this._initSearchWidget();\r\n  }\r\n\r\n  /**\r\n   * Initialize the state of the component with any stored values in a selection set\r\n   *\r\n   * @protected\r\n   */\r\n  protected _initSelectionSet(): void {\r\n    if (this.selectionSet) {\r\n      this._searchTerm = this.selectionSet?.searchResult?.name;\r\n      this._workflowType = this.selectionSet?.workflowType;\r\n      this._searchResult = this.selectionSet?.searchResult;\r\n      this._refineSelectLayers = this.selectionSet?.refineSelectLayers;\r\n      this.geometries = [\r\n        ...this.selectionSet?.geometries\r\n      ];\r\n      // reset selection label base\r\n      this._selectionLabel = this._workflowType === EWorkflowType.SKETCH ?\r\n        this._translations.sketch : this._workflowType === EWorkflowType.SELECT ?\r\n          this._translations.select : this.selectionSet?.label;\r\n\r\n      void goToSelection(this.selectionSet.selectedIds, this.selectionSet.layerView, this.mapView, false);\r\n    } else {\r\n      this._workflowType = EWorkflowType.SEARCH;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the search widget\r\n   *\r\n   * @protected\r\n   */\r\n  protected _initSearchWidget(): void {\r\n    if (this.mapView && this._searchElement) {\r\n      const searchOptions: __esri.widgetsSearchProperties = {\r\n        view: this.mapView,\r\n        container: this._searchElement,\r\n        searchTerm: this._searchTerm\r\n      };\r\n\r\n      this._searchWidget = new this.Search(searchOptions);\r\n\r\n      this._searchWidget.on(\"search-clear\", () => {\r\n        void this._clearResults(false);\r\n      });\r\n\r\n      this._searchWidget.on(\"select-result\", (searchResults) => {\r\n        void this._clearResults(false);\r\n        if (searchResults.result) {\r\n          this._searchResult = searchResults.result;\r\n          this._updateSelection(\r\n            EWorkflowType.SEARCH,\r\n            [searchResults.result.feature],\r\n            searchResults?.result?.name\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the graphics layer used to store any buffer grapghics\r\n   *\r\n   * @protected\r\n   */\r\n  protected _initGraphicsLayer(): void {\r\n    const title = this._translations.bufferLayer;\r\n\r\n    const bufferIndex = this.mapView.map.layers.findIndex((l) => l.title === title);\r\n    if (bufferIndex > -1) {\r\n      this._bufferGraphicsLayer = this.mapView.map.layers.getItemAt(bufferIndex) as __esri.GraphicsLayer;\r\n    } else {\r\n      this._bufferGraphicsLayer = new this.GraphicsLayer({ title });\r\n      state.managedLayers.push(title);\r\n      const sketchIndex = this.mapView.map.layers.findIndex((l) => l.title === this._translations.sketchLayer);\r\n      if (sketchIndex > -1) {\r\n        this.mapView.map.layers.add(this._bufferGraphicsLayer, sketchIndex);\r\n      } else {\r\n        this.mapView.map.layers.add(this._bufferGraphicsLayer);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Store the layer select checked change\r\n   *\r\n   * @protected\r\n   */\r\n  protected _layerSelectChanged(): void {\r\n    this._layerSelectChecked = this._selectFromLayerElement.checked;\r\n    this.sketchTypeChange.emit(this._layerSelectChecked ? ESketchType.LAYER : ESketchType.INTERACTIVE);\r\n  }\r\n\r\n  /**\r\n   * Store workflow type change\r\n   *\r\n   * @protected\r\n   */\r\n  protected _workflowChange(evt: CustomEvent): void {\r\n    this._workflowType = evt.detail;\r\n  }\r\n\r\n  /**\r\n   * Highlight the features in the map\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _highlightFeatures(\r\n    ids: number[]\r\n  ): Promise<void> {\r\n    state.highlightHandle?.remove();\r\n    if (ids.length > 0) {\r\n      state.highlightHandle = await highlightFeatures(\r\n        ids,\r\n        this.selectLayerView,\r\n        this.mapView\r\n      );\r\n    }\r\n    this.selectionSetChange.emit(ids.length);\r\n  }\r\n\r\n  /**\r\n   * Query the selectLayerView based on any user drawn geometries or buffers\r\n   *\r\n   * @param geometries Array of geometries used for the selection of ids from the select layer view\r\n   *\r\n   * @returns Promise when the selection is complete and the graphics have been highlighted\r\n   */\r\n  protected async _selectFeatures(\r\n    geometries: __esri.Geometry[]\r\n  ): Promise<void> {\r\n    this._selectedIds = await queryObjectIds(\r\n      geometries,\r\n      this.selectLayerView.layer\r\n    );\r\n    // Add geometries used for selecting features as graphics\r\n    this._drawTools.graphics = this.geometries.map(geom => {\r\n      const props = {\r\n        \"geometry\": geom,\r\n        \"symbol\": geom.type === \"point\" ?\r\n          this._drawTools?.pointSymbol : geom.type === \"polyline\" ?\r\n            this._drawTools?.polylineSymbol : geom.type === \"polygon\" ?\r\n              this._drawTools?.polygonSymbol : undefined\r\n      };\r\n      return new this.Graphic(props)\r\n    });\r\n    void this._highlightFeatures(this._selectedIds);\r\n  }\r\n\r\n  /**\r\n   * Query the selectLayerView based on any user drawn geometries or buffers\r\n   *\r\n   * @param evt CustomEvent that contains the result of the buffer\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _bufferComplete(\r\n    evt: CustomEvent\r\n  ): Promise<void> {\r\n    this._bufferGeometry = Array.isArray(evt.detail) ?\r\n      evt.detail[0] : evt.detail;\r\n\r\n    if (this._bufferGeometry) {\r\n      // Create a symbol for rendering the graphic\r\n      const symbol = {\r\n        type: \"simple-fill\",\r\n        color: [227, 139, 79, 0.8],\r\n        outline: {\r\n          color: [255, 255, 255],\r\n          width: 1\r\n        }\r\n      };\r\n\r\n      // Add the geometry and symbol to a new graphic\r\n      const polygonGraphic = new this.Graphic({\r\n        geometry: this._bufferGeometry,\r\n        symbol\r\n      });\r\n\r\n      this._bufferGraphicsLayer.removeAll();\r\n      this._bufferGraphicsLayer.add(polygonGraphic);\r\n      void this._selectFeatures([this._bufferGeometry]);\r\n      void this.mapView.goTo(polygonGraphic.geometry.extent);\r\n    } else {\r\n      if (this._bufferGraphicsLayer) {\r\n        this._bufferGraphicsLayer.removeAll();\r\n      }\r\n      void this._geomQuery(this.geometries);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetch a single geometry for each potential geometry type\r\n   *\r\n   * @param geometries All current selection geometries\r\n   *\r\n   * @protected\r\n   */\r\n  protected _geomQuery(\r\n    geometries: __esri.Geometry[]\r\n  ): Promise<void> {\r\n    const queryGeoms = getQueryGeoms(geometries, this._geometryEngine);\r\n    return this._selectFeatures(queryGeoms);\r\n  }\r\n\r\n  /**\r\n   * Clear all stored values and general state for the component\r\n   *\r\n   * @param clearSearchWidget Optional boolean for clearing the search widget (default is true)\r\n   * @param clearLabel Optional boolean for clearing the search label (default is true)\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _clearResults(\r\n    clearSearchWidget = true,\r\n    clearLabel = true\r\n  ): Promise<void> {\r\n    this._selectedIds = [];\r\n\r\n    if (clearLabel) {\r\n      this._selectionLabel = \"\";\r\n    }\r\n\r\n    if (this._bufferGraphicsLayer) {\r\n      this._bufferGraphicsLayer.removeAll();\r\n    }\r\n\r\n    if (clearSearchWidget && this._searchWidget) {\r\n      this._searchWidget.clear();\r\n    }\r\n\r\n    state.highlightHandle?.remove();\r\n\r\n    // for sketch\r\n    // checking for clear as it would throw off tests\r\n    if (this._drawTools?.clear) {\r\n      void this._drawTools.clear();\r\n    }\r\n    this.selectionSetChange.emit(this._selectedIds.length);\r\n  }\r\n\r\n  /**\r\n   * Fetch a single geometry for the current geometry type\r\n   *\r\n   * @param type worflow type\r\n   * @param graphics graphics to be used for selection\r\n   * @param label selection label\r\n   *\r\n   * @protected\r\n   */\r\n  protected _updateSelection(\r\n    type: EWorkflowType,\r\n    graphics: __esri.Graphic[],\r\n    label: string\r\n  ): void {\r\n    this.geometries = Array.isArray(graphics) ? graphics.map(g => g.geometry) : this.geometries;\r\n    this._workflowType = type;\r\n    this._selectionLabel = label;\r\n  }\r\n\r\n  /**\r\n   * Fetches the component's translations\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _getTranslations(): Promise<void> {\r\n    const translations = await getLocaleComponentStrings(this.el);\r\n    this._translations = translations[0] as typeof MapSelectTools_T9n;\r\n  }\r\n}\r\n","/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Exports a PDF of labels.\r\n *\r\n * @param labels Labels to write\r\n * @param labelFormat Field format per label\r\n * @param labelPageDescription Page format to use for labels\r\n * @param removeDuplicates Remove duplicate labels before exporting\r\n */\r\nexport function exportPDF(\r\n  labels: string[][],\r\n  labelFormat: string[],\r\n  labelPageDescription: any,\r\n  removeDuplicates = true\r\n): void {\r\n  const outputLabels = _prepareOutput(labels, labelFormat, removeDuplicates);\r\n\r\n  _downloadPDFFile(outputLabels, labelPageDescription, `notify-${Date.now().toString()}`);\r\n}\r\n\r\n/**\r\n * Downloads the PDF file.\r\n *\r\n * @param labels Labels to write\r\n * @param labelPageDescription Page format to use for labels\r\n * @param fileTitle Title (without file extension) to use for file; defaults to \"export\"\r\n */\r\nfunction _downloadPDFFile(\r\n  labels: string[][],\r\n  labelPageDescription: any,\r\n  fileTitle: string\r\n): void {\r\n  console.log(\"_downloadPDFFile\", labels, labelPageDescription, fileTitle);//???\r\n}\r\n\r\n/**\r\n * Prepares labels for export.\r\n *\r\n * @param labels Array of labels to prepare\r\n * @param labelFormat Field format per label\r\n * @param removeDuplicates Remove duplicate lines\r\n *\r\n * @returns De-duped array of labels if removeDuplicates is true\r\n */\r\nfunction _prepareOutput(\r\n  labels: string[][],\r\n  labelFormat: string[],\r\n  removeDuplicates = true\r\n): string[][] {\r\n  // Format the input into labels\r\n  console.log(labelFormat);\r\n\r\n  // Remove duplicates if desired\r\n  if (removeDuplicates) {\r\n    const uniques: Set<string> = new Set();\r\n    labels.forEach(labelLines => uniques.add(labelLines.join(\"|\")));\r\n    labels = Array.from(uniques).map(label => label.split(\"|\"));\r\n  }\r\n\r\n  return labels;\r\n}\r\n","/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n:host {\r\n  display: block;\r\n}\r\n","/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { Component, Element, Host, h, Method, Prop, State, VNode } from \"@stencil/core\";\r\nimport * as pdfUtils from \"../../assets/data/labelFormats.json\";\r\nimport \"@esri/calcite-components\";\r\nimport PdfDownload_T9n from \"../../assets/t9n/pdf-download/resources.json\";\r\nimport { getLocaleComponentStrings } from \"../../utils/locale\";\r\nimport { exportCSV } from \"../../utils/csvUtils\";\r\nimport { exportPDF } from \"../../utils/pdfUtils\";\r\nimport { queryFeaturesByID } from \"../../utils/queryUtils\";\r\n\r\n@Component({\r\n  tag: \"pdf-download\",\r\n  styleUrl: \"pdf-download.css\",\r\n  shadow: true,\r\n})\r\nexport class PdfDownload {\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Host element access\r\n  //\r\n  //--------------------------------------------------------------------------\r\n  @Element() el: HTMLPdfDownloadElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * boolean: Controls the enabled/disabled state of download\r\n   */\r\n  @Prop() disabled = false;\r\n\r\n  /**\r\n   * esri/views/layers/FeatureLayerView: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-layers-FeatureLayerView.html\r\n   */\r\n  @Prop() layerView: __esri.FeatureLayerView;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  State (internal)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Contains the translations for this component.\r\n   * All UI strings should be defined here.\r\n   */\r\n  @State() protected _translations: typeof PdfDownload_T9n;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * HTMLCalciteSelectElement: The html element for selecting buffer unit\r\n   */\r\n  protected _labelInfoElement: HTMLCalciteSelectElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Watch handlers\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Methods (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Downloads pdf of mailing labels for the provided list of ids\r\n   *\r\n   * @param ids List of ids to download\r\n   * @param removeDuplicates When true a single label is generated when multiple featues have a shared address value\r\n   * @returns Promise resolving when function is done\r\n   */\r\n  @Method()\r\n  async downloadPDF(\r\n    ids: number[],\r\n    removeDuplicates: boolean\r\n  ): Promise<void> {\r\n    // Get the attributes of the features to export\r\n    const featureSet = await queryFeaturesByID(ids, this.layerView.layer);\r\n    const attributes = featureSet.features.map(f => f.attributes);\r\n\r\n    // Convert array of objects into an array of string arrays\r\n    const contents: string[][] = attributes.map(attr => Object.values(attr));\r\n\r\n    const labelFormat = this._convertPopupToLabelSpec(this.layerView.layer.popupTemplate.content[0].text);\r\n    const labelPageDescription = this._labelInfoElement.selectedOption.value;\r\n    return exportPDF(contents, labelFormat, labelPageDescription, removeDuplicates);\r\n  }\r\n\r\n  /**\r\n   * Downloads csv of mailing labels for the provided list of ids\r\n   *\r\n   * @param ids List of ids to download\r\n   * @param removeDuplicates When true a single label is generated when multiple featues have a shared address value\r\n   * @returns Promise resolving when function is done\r\n   */\r\n  @Method()\r\n  async downloadCSV(\r\n    ids: number[],\r\n    removeDuplicates: boolean\r\n  ): Promise<void> {\r\n    // Get the attributes of the features to export\r\n    const featureSet = await queryFeaturesByID(ids, this.layerView.layer);\r\n    const attributes = featureSet.features.map(f => f.attributes);\r\n\r\n    // Get the column headings from the first record\r\n    const columnNames = {};\r\n    const entry = attributes[0];\r\n    Object.keys(entry).forEach(k => {\r\n      if (entry.hasOwnProperty(k)) {\r\n        columnNames[k] = k;\r\n      }\r\n    });\r\n    console.log(typeof attributes, typeof columnNames);//???\r\n\r\n    const labelFormat = this._convertPopupToLabelSpec(this.layerView.layer.popupTemplate.content[0].text);\r\n    exportCSV(attributes, columnNames, labelFormat, removeDuplicates);\r\n    return Promise.resolve();\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Events (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (lifecycle)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * StencilJS: Called once just after the component is first connected to the DOM.\r\n   */\r\n  async componentWillLoad(): Promise<void> {\r\n    await this._getTranslations();\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   */\r\n  render(): VNode {\r\n    return (\r\n      <Host>\r\n        <calcite-select\r\n          disabled={this.disabled}\r\n          label=\"\"\r\n          ref={(el) => { this._labelInfoElement = el }}\r\n        >\r\n          {this._renderItems()}\r\n        </calcite-select>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Converts the text of a custom popup into a multiline label specification; conversion splits text into\r\n   * lines on <br>s, and removes HTML tags. It does not handle Arcade and related records.\r\n   *\r\n   * @param popupInfo Layer's popupInfo structure containing description, fieldInfos, and expressionInfos, e.g.,\r\n   * \"<div style='text-align: left;'>{NAME}<br />{STREET}<br />{CITY}, {STATE} {ZIP} <br /></div>\"\r\n   * @return Label spec\r\n   */\r\n  public _convertPopupToLabelSpec(\r\n    popupInfo: string\r\n  ): string[] {\r\n    // Replace <br>, <br/> with |\r\n    popupInfo = popupInfo.replace(/<br\\s*\\/?>/gi, \"|\");\r\n\r\n    // Remove remaining HTML tags\r\n    let labelSpec = popupInfo.replace(/<[\\s.]*[^<>]*\\/?>/gi, \"\").split(\"|\");\r\n\r\n    // Trim lines and remove empties\r\n    labelSpec = labelSpec.map(line => line.trim()).filter(line => line.length > 0);\r\n\r\n    return labelSpec;\r\n  };\r\n\r\n  /**\r\n   * Gets the formatted pdf export size text\r\n   *\r\n   * @param labelInfo current user selected label info\r\n   *\r\n   * @returns the pdf label as a string\r\n   * @protected\r\n   */\r\n  protected _getLabelSizeText(\r\n    labelInfo: any\r\n  ): string {\r\n    const lNum = labelInfo.descriptionPDF.labelsPerPageDisplay;\r\n    const lSize = `${labelInfo.descriptionPDF.labelWidthDisplay} x ${labelInfo.descriptionPDF.labelHeightDisplay}`;\r\n    return this._translations.pdfLabel.replace(\"{{n}}\", lNum).replace(\"{{labelSize}}\", lSize);\r\n  }\r\n\r\n  /**\r\n   * Fetches the component's translations\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _getTranslations(): Promise<void> {\r\n    const translations = await getLocaleComponentStrings(this.el);\r\n    this._translations = translations[0] as typeof PdfDownload_T9n;\r\n  }\r\n\r\n  /**\r\n   * Renders the pdf export size options\r\n   *\r\n   * @returns Node array of size options\r\n   *\r\n   * @protected\r\n   */\r\n  protected _renderItems(): VNode[] {\r\n    const s: any = pdfUtils;\r\n    const sortedPdfIndo = (s.default || s).sort((a, b) => {\r\n      const _a = parseInt(a.descriptionPDF.labelsPerPageDisplay, 10);\r\n      const _b = parseInt(b.descriptionPDF.labelsPerPageDisplay, 10);\r\n      return _a < _b ? -1 : _a > _b ? 1 : 0\r\n    });\r\n    return sortedPdfIndo.map((l) => {\r\n      return (<calcite-option value={l}>{this._getLabelSizeText(l)}</calcite-option>)\r\n    });\r\n  }\r\n\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n","/** @license\r\n * Copyright 2022 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { Component, Element, Event, EventEmitter, Host, h, Listen, Prop, State, VNode } from \"@stencil/core\";\r\nimport { ESelectionMode, EWorkflowType, ISelectionSet } from \"../../utils/interfaces\";\r\nimport * as utils from \"../../utils/publicNotificationUtils\";\r\nimport RefineSelection_T9n from \"../../assets/t9n/refine-selection/resources.json\";\r\nimport { getLocaleComponentStrings } from \"../../utils/locale\";\r\n\r\n@Component({\r\n  tag: \"refine-selection\",\r\n  styleUrl: \"refine-selection.css\",\r\n  shadow: false,\r\n})\r\nexport class RefineSelection {\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Host element access\r\n  //\r\n  //--------------------------------------------------------------------------\r\n  @Element() el: HTMLRefineSelectionToolsElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * esri/views/layers/FeatureLayerView: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-layers-FeatureLayerView.html\r\n   */\r\n  @Prop() addresseeLayer: __esri.FeatureLayerView;\r\n\r\n  /**\r\n   * esri/views/View: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\r\n   */\r\n  @Prop() mapView: __esri.MapView;\r\n\r\n  /**\r\n   * utils/interfaces/ISelectionSet: An array of user defined selection sets\r\n   */\r\n  @Prop({ mutable: true }) selectionSets: ISelectionSet[] = [];\r\n\r\n  @Prop() GraphicsLayer: any;\r\n\r\n  @Prop() SketchViewModel: any;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  State (internal)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Contains the translations for this component.\r\n   * All UI strings should be defined here.\r\n   */\r\n  @State() protected _translations: typeof RefineSelection_T9n;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Properties (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * boolean: Indicates if any new graphics should be added or removed\r\n   */\r\n  protected _addEnabled = true;\r\n\r\n  /**\r\n   * HTMLRefineSelectionToolsElement: The html element for the refine selection tools\r\n   */\r\n  protected _refineTools: HTMLRefineSelectionToolsElement;\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Watch handlers\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Methods (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Events (public)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Emitted on demand when selection sets change.\r\n   *\r\n   */\r\n  @Event() selectionSetsChanged: EventEmitter<ISelectionSet[]>;\r\n\r\n  /**\r\n   * Handles changes to refine selection ids.\r\n   *\r\n   */\r\n  @Listen(\"refineSelectionIdsChange\", { target: \"window\" })\r\n  refineSelectionIdsChange(event: CustomEvent): void {\r\n    const addIds = event.detail?.addIds || [];\r\n    const removeIds = event.detail?.removeIds || [];\r\n\r\n    this._updateSelectionSets(removeIds);\r\n    this._updateRefineSelectionSet(addIds, removeIds);\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (lifecycle)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * StencilJS: Called once just after the component is first connected to the DOM.\r\n   */\r\n  async componentWillLoad(): Promise<void> {\r\n    await this._getTranslations();\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   */\r\n  render(): VNode {\r\n    return (\r\n      <Host>\r\n        <div class=\"padding-1\">\r\n          <div>\r\n            <calcite-radio-group\r\n              class=\"w-100\"\r\n              onCalciteRadioGroupChange={(evt) => this._modeChanged(evt)}\r\n            >\r\n              <calcite-radio-group-item\r\n                checked={this._addEnabled}\r\n                class=\"w-50\"\r\n                onClick={() => this._setSelectionMode(ESelectionMode.ADD)}\r\n                value={ESelectionMode.ADD}\r\n              >\r\n                {this._translations.add}\r\n              </calcite-radio-group-item>\r\n              <calcite-radio-group-item\r\n                checked={!this._addEnabled}\r\n                class=\"w-50\"\r\n                onClick={() => this._setSelectionMode(ESelectionMode.REMOVE)}\r\n                value={ESelectionMode.REMOVE}\r\n              >\r\n                {this._translations.remove}\r\n              </calcite-radio-group-item>\r\n            </calcite-radio-group>\r\n            <refine-selection-tools\r\n              border={true}\r\n              ids={utils.getSelectionIds(this.selectionSets)}\r\n              layerViews={[this.addresseeLayer]}\r\n              mapView={this.mapView}\r\n              mode={this._addEnabled ? ESelectionMode.ADD : ESelectionMode.REMOVE}\r\n              ref={(el) => { this._refineTools = el }}\r\n              useLayerPicker={false}\r\n            />\r\n          </div>\r\n          <br />\r\n          {\r\n            (\r\n              <calcite-list class=\"list-border\">\r\n                {this._getRefineSelectionSetList()}\r\n              </calcite-list>\r\n            )\r\n          }\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  //--------------------------------------------------------------------------\r\n  //\r\n  //  Functions (protected)\r\n  //\r\n  //--------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Store the Add/Remove mode\r\n   *\r\n   * @protected\r\n   */\r\n  protected _modeChanged(\r\n    evt: CustomEvent\r\n  ): void {\r\n    this._addEnabled = evt.detail === ESelectionMode.ADD;\r\n  }\r\n\r\n  /**\r\n   * Set the refine tools selection mode\r\n   *\r\n   * @protected\r\n   */\r\n  protected _setSelectionMode(\r\n    mode: ESelectionMode\r\n  ): void {\r\n    this._refineTools.mode = mode;\r\n  }\r\n\r\n  /**\r\n   * Create a list to show the number added/removed/total unique selected\r\n   *\r\n   * @returns the list node\r\n   * @protected\r\n   */\r\n  protected _getRefineSelectionSetList(): VNode[] {\r\n    const total = utils.getTotal(this.selectionSets);\r\n    const refineSet = this._getRefineSelectionSet(this.selectionSets);\r\n    const numAdded = refineSet?.refineIds.addIds.length || 0;\r\n    const numRemoved = refineSet?.refineIds.removeIds.length || 0;\r\n\r\n    return [(\r\n      <calcite-list-item\r\n        label={this._translations.featuresAdded.replace(\"{{n}}\", numAdded.toString())}\r\n      />\r\n    ), (\r\n      <calcite-list-item\r\n        label={this._translations.featuresRemoved.replace(\"{{n}}\", numRemoved.toString())}\r\n      />\r\n    ), (\r\n      <calcite-list-item\r\n        label={this._translations.totalSelected.replace(\"{{n}}\", total.toString())}\r\n      />\r\n    )];\r\n  }\r\n\r\n  /**\r\n   * Fetch the refine selection set\r\n   *\r\n   * @returns the refine selection set\r\n   * @protected\r\n   */\r\n  protected _getRefineSelectionSet(\r\n    selectionSets: ISelectionSet[]\r\n  ): ISelectionSet {\r\n    let refineSelectionSet: ISelectionSet;\r\n    selectionSets.some(ss => {\r\n      if (ss.workflowType === EWorkflowType.REFINE) {\r\n        refineSelectionSet = ss;\r\n        return true;\r\n      }\r\n    });\r\n    return refineSelectionSet;\r\n  }\r\n\r\n  /**\r\n   * Remove ids from existing selection sets.\r\n   * Remove any selection sets than have no selected ids\r\n   * This can update any selection set not just the refine set.\r\n   * We do not do something similar for adds as we will only ever add from refine tools to the single REFINE selection set.\r\n   *\r\n   * @param removeIds the ids to remove\r\n   *\r\n   * @protected\r\n   */\r\n  protected _updateSelectionSets(\r\n    removeIds: number[]\r\n  ): void {\r\n    if (removeIds.length > 0) {\r\n      this.selectionSets = this.selectionSets.reduce((prev, cur) => {\r\n        cur.selectedIds = cur.selectedIds.filter(id => removeIds.indexOf(id) < 0);\r\n        if (cur.selectedIds.length > 0) {\r\n          prev.push(cur);\r\n        }\r\n        return prev;\r\n      }, []);\r\n      this.selectionSetsChanged.emit(this.selectionSets);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the refine selection set with any adds or removes\r\n   *\r\n   * @param addIds any ids to add\r\n   * @param removeIds any ids to remove\r\n   *\r\n   * @returns Promise resolving when function is done\r\n   * @protected\r\n   */\r\n  protected _updateRefineSelectionSet(\r\n    addIds: number[],\r\n    removeIds: number[]\r\n  ): void {\r\n    const selectionSet = this._getRefineSelectionSet(this.selectionSets);\r\n    this.selectionSets = selectionSet ?\r\n      this._updateRefineIds(selectionSet, addIds, removeIds) :\r\n      this._addRefineSelectionSet(addIds, removeIds);\r\n    this.selectionSetsChanged.emit(this.selectionSets);\r\n  }\r\n\r\n  /**\r\n   * Update the ids stored for the refine selection set\r\n   *\r\n   * @param selectionSet the refine selection set\r\n   * @param addIds any ids to add\r\n   * @param removeIds any ids to remove\r\n   *\r\n   * @returns updated selection sets\r\n   * @protected\r\n   */\r\n  protected _updateRefineIds(\r\n    selectionSet: ISelectionSet,\r\n    addIds: number[],\r\n    removeIds: number[]\r\n  ): ISelectionSet[] {\r\n    // remove ids if they exist in the current add or remove list\r\n    selectionSet.refineIds.addIds = selectionSet.refineIds.addIds.filter(id => removeIds.indexOf(id) < 0)\r\n    selectionSet.refineIds.removeIds = selectionSet.refineIds.removeIds.filter(id => addIds.indexOf(id) < 0)\r\n\r\n    const _addIds = [...new Set(selectionSet.refineIds.addIds.concat(addIds))];\r\n    const _removeIds = [...new Set(selectionSet.refineIds.removeIds.concat(removeIds))];\r\n    selectionSet.refineIds = {\r\n      addIds: _addIds.filter(id => _removeIds.indexOf(id) < 0),\r\n      removeIds: _removeIds.filter(id => _addIds.indexOf(id) < 0)\r\n    }\r\n    selectionSet.selectedIds = selectionSet.refineIds.addIds.length > 0 ?\r\n      [...new Set(selectionSet.selectedIds.concat(selectionSet.refineIds.addIds))] :\r\n      selectionSet.selectedIds.filter(id => selectionSet.refineIds.removeIds.indexOf(id) < 0);\r\n\r\n    return this.selectionSets.map(ss => {\r\n      return ss.workflowType === EWorkflowType.REFINE ? selectionSet : ss;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add a new refine selection set\r\n   *\r\n   * @param addIds any ids to add\r\n   * @param removeIds any ids to remove\r\n   *\r\n   * @returns updated selection sets\r\n   * @protected\r\n   */\r\n  protected _addRefineSelectionSet(\r\n    addIds: number[],\r\n    removeIds: number[]\r\n  ): ISelectionSet[] {\r\n    return [\r\n      ...this.selectionSets,\r\n      ({\r\n        buffer: undefined,\r\n        distance: 0,\r\n        download: true,\r\n        geometries: [],\r\n        id: Date.now(),\r\n        label: \"Refine\",\r\n        layerView: this.addresseeLayer,\r\n        refineSelectLayers: [],\r\n        searchResult: undefined,\r\n        selectedIds: addIds,\r\n        unit: \"feet\",\r\n        workflowType: EWorkflowType.REFINE,\r\n        refineIds: {\r\n          addIds: addIds,\r\n          removeIds: removeIds\r\n        }\r\n      })\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Fetches the component's translations\r\n   *\r\n   * @protected\r\n   */\r\n  protected async _getTranslations(): Promise<void> {\r\n    const translations = await getLocaleComponentStrings(this.el);\r\n    this._translations = translations[0] as typeof RefineSelection_T9n;\r\n  }\r\n\r\n  /** Provides access to protected methods for unit testing.\r\n *\r\n *  @param methodName Name of protected method to run\r\n *  @param arg1 First argument to forward to method, e.g., for \"_modeChanged\", `ESelectionMode`\r\n *  @returns\r\n */\r\n  public _testAccess(\r\n    methodName: string,\r\n    arg1?: any\r\n  ): any {\r\n    switch (methodName) {\r\n      case \"_modeChanged\":\r\n        return this._modeChanged(arg1);\r\n      case \"_setSelectionMode\":\r\n        return this._setSelectionMode(arg1);\r\n      // case \"_getRefineSelectionSetList\":\r\n      //   return this._getRefineSelectionSetList();\r\n      // case \"_getRefineSelectionSet\":\r\n      //   return this._getRefineSelectionSet(arg1);\r\n      // case \"_updateSelectionSets\":\r\n      //   return this._updateSelectionSets(arg1);\r\n      // case \"_updateRefineSelectionSet\":\r\n      //   return this._updateRefineSelectionSet(arg1, arg2);\r\n      // case \"_updateRefineIds\":\r\n      //   return this._updateRefineIds(arg1, arg2, arg3);\r\n      // case \"_addRefineSelectionSet\":\r\n      //   return this._addRefineSelectionSet(arg1, arg2);\r\n    }\r\n    return null;\r\n  }\r\n}\r\n"],"version":3}
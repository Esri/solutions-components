{"file":"interactive-0a68ab99.js","mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,GAAG;AACrB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,qBAAqB,CAAC,SAAS,EAAE,cAAc,GAAG,KAAK,EAAE;AACzE,EAAE,IAAI,SAAS,CAAC,QAAQ,EAAE;AAC1B,IAAI,SAAS,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAChD,IAAI,SAAS,CAAC,EAAE,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;AACvD,IAAI,IAAI,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;AACvD,MAAM,QAAQ,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;AACpC,KAAK;AACL,IAAI,SAAS,CAAC,EAAE,CAAC,KAAK,GAAG,SAAS,CAAC;AACnC,IAAI,OAAO;AACX,GAAG;AACH,EAAE,SAAS,CAAC,EAAE,CAAC,KAAK,GAAG,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC;AACnD,EAAE,IAAI,OAAO,cAAc,KAAK,UAAU,EAAE;AAC5C,IAAI,SAAS,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;AACvF,GAAG;AACH,OAAO,IAAI,cAAc,KAAK,IAAI,EAAE;AACpC,IAAI,SAAS,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;AAC/C,GAAG;AACH,OAAO,IAAI,cAAc,KAAK,KAAK,EAAE;AACrC,IAAI,SAAS,CAAC,EAAE,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;AAC7C,GAAG;AACH,OAAO,CAEJ;AACH,EAAE,SAAS,CAAC,EAAE,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;AAChD;;;;","names":[],"sources":["./node_modules/@esri/calcite-components/dist/collection/utils/interactive.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nfunction noopClick() {\n  /** noop */\n}\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n * @param hostIsTabbable\n */\nexport function updateHostInteraction(component, hostIsTabbable = false) {\n  if (component.disabled) {\n    component.el.setAttribute(\"tabindex\", \"-1\");\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n    if (component.el.contains(document.activeElement)) {\n      document.activeElement.blur();\n    }\n    component.el.click = noopClick;\n    return;\n  }\n  component.el.click = HTMLElement.prototype.click;\n  if (typeof hostIsTabbable === \"function\") {\n    component.el.setAttribute(\"tabindex\", hostIsTabbable.call(component) ? \"0\" : \"-1\");\n  }\n  else if (hostIsTabbable === true) {\n    component.el.setAttribute(\"tabindex\", \"0\");\n  }\n  else if (hostIsTabbable === false) {\n    component.el.removeAttribute(\"tabindex\");\n  }\n  else {\n    // noop for \"managed\" as owning component will manage its tab index\n  }\n  component.el.removeAttribute(\"aria-disabled\");\n}\n"],"version":3}